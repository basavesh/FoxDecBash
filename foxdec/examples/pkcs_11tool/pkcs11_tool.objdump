
pkcs11-tool:     file format elf64-x86-64


Disassembly of section .init:

0000000000005000 <_init>:
    5000:	endbr64 
    5004:	sub    rsp,0x8
    5008:	mov    rax,QWORD PTR [rip+0x1dfc9]        # 22fd8 <__gmon_start__>
    500f:	test   rax,rax
    5012:	je     5016 <_init+0x16>
    5014:	call   rax
    5016:	add    rsp,0x8
    501a:	ret    

Disassembly of section .plt:

0000000000005020 <.plt>:
    5020:	push   QWORD PTR [rip+0x1dd02]        # 22d28 <_GLOBAL_OFFSET_TABLE_+0x8>
    5026:	bnd jmp QWORD PTR [rip+0x1dd03]        # 22d30 <_GLOBAL_OFFSET_TABLE_+0x10>
    502d:	nop    DWORD PTR [rax]
    5030:	endbr64 
    5034:	push   0x0
    5039:	bnd jmp 5020 <.plt>
    503f:	nop
    5040:	endbr64 
    5044:	push   0x1
    5049:	bnd jmp 5020 <.plt>
    504f:	nop
    5050:	endbr64 
    5054:	push   0x2
    5059:	bnd jmp 5020 <.plt>
    505f:	nop
    5060:	endbr64 
    5064:	push   0x3
    5069:	bnd jmp 5020 <.plt>
    506f:	nop
    5070:	endbr64 
    5074:	push   0x4
    5079:	bnd jmp 5020 <.plt>
    507f:	nop
    5080:	endbr64 
    5084:	push   0x5
    5089:	bnd jmp 5020 <.plt>
    508f:	nop
    5090:	endbr64 
    5094:	push   0x6
    5099:	bnd jmp 5020 <.plt>
    509f:	nop
    50a0:	endbr64 
    50a4:	push   0x7
    50a9:	bnd jmp 5020 <.plt>
    50af:	nop
    50b0:	endbr64 
    50b4:	push   0x8
    50b9:	bnd jmp 5020 <.plt>
    50bf:	nop
    50c0:	endbr64 
    50c4:	push   0x9
    50c9:	bnd jmp 5020 <.plt>
    50cf:	nop
    50d0:	endbr64 
    50d4:	push   0xa
    50d9:	bnd jmp 5020 <.plt>
    50df:	nop
    50e0:	endbr64 
    50e4:	push   0xb
    50e9:	bnd jmp 5020 <.plt>
    50ef:	nop
    50f0:	endbr64 
    50f4:	push   0xc
    50f9:	bnd jmp 5020 <.plt>
    50ff:	nop
    5100:	endbr64 
    5104:	push   0xd
    5109:	bnd jmp 5020 <.plt>
    510f:	nop
    5110:	endbr64 
    5114:	push   0xe
    5119:	bnd jmp 5020 <.plt>
    511f:	nop
    5120:	endbr64 
    5124:	push   0xf
    5129:	bnd jmp 5020 <.plt>
    512f:	nop
    5130:	endbr64 
    5134:	push   0x10
    5139:	bnd jmp 5020 <.plt>
    513f:	nop
    5140:	endbr64 
    5144:	push   0x11
    5149:	bnd jmp 5020 <.plt>
    514f:	nop
    5150:	endbr64 
    5154:	push   0x12
    5159:	bnd jmp 5020 <.plt>
    515f:	nop
    5160:	endbr64 
    5164:	push   0x13
    5169:	bnd jmp 5020 <.plt>
    516f:	nop
    5170:	endbr64 
    5174:	push   0x14
    5179:	bnd jmp 5020 <.plt>
    517f:	nop
    5180:	endbr64 
    5184:	push   0x15
    5189:	bnd jmp 5020 <.plt>
    518f:	nop
    5190:	endbr64 
    5194:	push   0x16
    5199:	bnd jmp 5020 <.plt>
    519f:	nop
    51a0:	endbr64 
    51a4:	push   0x17
    51a9:	bnd jmp 5020 <.plt>
    51af:	nop
    51b0:	endbr64 
    51b4:	push   0x18
    51b9:	bnd jmp 5020 <.plt>
    51bf:	nop
    51c0:	endbr64 
    51c4:	push   0x19
    51c9:	bnd jmp 5020 <.plt>
    51cf:	nop
    51d0:	endbr64 
    51d4:	push   0x1a
    51d9:	bnd jmp 5020 <.plt>
    51df:	nop
    51e0:	endbr64 
    51e4:	push   0x1b
    51e9:	bnd jmp 5020 <.plt>
    51ef:	nop
    51f0:	endbr64 
    51f4:	push   0x1c
    51f9:	bnd jmp 5020 <.plt>
    51ff:	nop
    5200:	endbr64 
    5204:	push   0x1d
    5209:	bnd jmp 5020 <.plt>
    520f:	nop
    5210:	endbr64 
    5214:	push   0x1e
    5219:	bnd jmp 5020 <.plt>
    521f:	nop
    5220:	endbr64 
    5224:	push   0x1f
    5229:	bnd jmp 5020 <.plt>
    522f:	nop
    5230:	endbr64 
    5234:	push   0x20
    5239:	bnd jmp 5020 <.plt>
    523f:	nop
    5240:	endbr64 
    5244:	push   0x21
    5249:	bnd jmp 5020 <.plt>
    524f:	nop
    5250:	endbr64 
    5254:	push   0x22
    5259:	bnd jmp 5020 <.plt>
    525f:	nop
    5260:	endbr64 
    5264:	push   0x23
    5269:	bnd jmp 5020 <.plt>
    526f:	nop
    5270:	endbr64 
    5274:	push   0x24
    5279:	bnd jmp 5020 <.plt>
    527f:	nop
    5280:	endbr64 
    5284:	push   0x25
    5289:	bnd jmp 5020 <.plt>
    528f:	nop
    5290:	endbr64 
    5294:	push   0x26
    5299:	bnd jmp 5020 <.plt>
    529f:	nop
    52a0:	endbr64 
    52a4:	push   0x27
    52a9:	bnd jmp 5020 <.plt>
    52af:	nop
    52b0:	endbr64 
    52b4:	push   0x28
    52b9:	bnd jmp 5020 <.plt>
    52bf:	nop
    52c0:	endbr64 
    52c4:	push   0x29
    52c9:	bnd jmp 5020 <.plt>
    52cf:	nop
    52d0:	endbr64 
    52d4:	push   0x2a
    52d9:	bnd jmp 5020 <.plt>
    52df:	nop
    52e0:	endbr64 
    52e4:	push   0x2b
    52e9:	bnd jmp 5020 <.plt>
    52ef:	nop
    52f0:	endbr64 
    52f4:	push   0x2c
    52f9:	bnd jmp 5020 <.plt>
    52ff:	nop
    5300:	endbr64 
    5304:	push   0x2d
    5309:	bnd jmp 5020 <.plt>
    530f:	nop
    5310:	endbr64 
    5314:	push   0x2e
    5319:	bnd jmp 5020 <.plt>
    531f:	nop
    5320:	endbr64 
    5324:	push   0x2f
    5329:	bnd jmp 5020 <.plt>
    532f:	nop
    5330:	endbr64 
    5334:	push   0x30
    5339:	bnd jmp 5020 <.plt>
    533f:	nop
    5340:	endbr64 
    5344:	push   0x31
    5349:	bnd jmp 5020 <.plt>
    534f:	nop
    5350:	endbr64 
    5354:	push   0x32
    5359:	bnd jmp 5020 <.plt>
    535f:	nop
    5360:	endbr64 
    5364:	push   0x33
    5369:	bnd jmp 5020 <.plt>
    536f:	nop
    5370:	endbr64 
    5374:	push   0x34
    5379:	bnd jmp 5020 <.plt>
    537f:	nop
    5380:	endbr64 
    5384:	push   0x35
    5389:	bnd jmp 5020 <.plt>
    538f:	nop
    5390:	endbr64 
    5394:	push   0x36
    5399:	bnd jmp 5020 <.plt>
    539f:	nop
    53a0:	endbr64 
    53a4:	push   0x37
    53a9:	bnd jmp 5020 <.plt>
    53af:	nop
    53b0:	endbr64 
    53b4:	push   0x38
    53b9:	bnd jmp 5020 <.plt>
    53bf:	nop
    53c0:	endbr64 
    53c4:	push   0x39
    53c9:	bnd jmp 5020 <.plt>
    53cf:	nop
    53d0:	endbr64 
    53d4:	push   0x3a
    53d9:	bnd jmp 5020 <.plt>
    53df:	nop
    53e0:	endbr64 
    53e4:	push   0x3b
    53e9:	bnd jmp 5020 <.plt>
    53ef:	nop
    53f0:	endbr64 
    53f4:	push   0x3c
    53f9:	bnd jmp 5020 <.plt>
    53ff:	nop
    5400:	endbr64 
    5404:	push   0x3d
    5409:	bnd jmp 5020 <.plt>
    540f:	nop
    5410:	endbr64 
    5414:	push   0x3e
    5419:	bnd jmp 5020 <.plt>
    541f:	nop
    5420:	endbr64 
    5424:	push   0x3f
    5429:	bnd jmp 5020 <.plt>
    542f:	nop
    5430:	endbr64 
    5434:	push   0x40
    5439:	bnd jmp 5020 <.plt>
    543f:	nop
    5440:	endbr64 
    5444:	push   0x41
    5449:	bnd jmp 5020 <.plt>
    544f:	nop
    5450:	endbr64 
    5454:	push   0x42
    5459:	bnd jmp 5020 <.plt>
    545f:	nop
    5460:	endbr64 
    5464:	push   0x43
    5469:	bnd jmp 5020 <.plt>
    546f:	nop
    5470:	endbr64 
    5474:	push   0x44
    5479:	bnd jmp 5020 <.plt>
    547f:	nop
    5480:	endbr64 
    5484:	push   0x45
    5489:	bnd jmp 5020 <.plt>
    548f:	nop
    5490:	endbr64 
    5494:	push   0x46
    5499:	bnd jmp 5020 <.plt>
    549f:	nop
    54a0:	endbr64 
    54a4:	push   0x47
    54a9:	bnd jmp 5020 <.plt>
    54af:	nop
    54b0:	endbr64 
    54b4:	push   0x48
    54b9:	bnd jmp 5020 <.plt>
    54bf:	nop
    54c0:	endbr64 
    54c4:	push   0x49
    54c9:	bnd jmp 5020 <.plt>
    54cf:	nop
    54d0:	endbr64 
    54d4:	push   0x4a
    54d9:	bnd jmp 5020 <.plt>
    54df:	nop
    54e0:	endbr64 
    54e4:	push   0x4b
    54e9:	bnd jmp 5020 <.plt>
    54ef:	nop
    54f0:	endbr64 
    54f4:	push   0x4c
    54f9:	bnd jmp 5020 <.plt>
    54ff:	nop
    5500:	endbr64 
    5504:	push   0x4d
    5509:	bnd jmp 5020 <.plt>
    550f:	nop
    5510:	endbr64 
    5514:	push   0x4e
    5519:	bnd jmp 5020 <.plt>
    551f:	nop
    5520:	endbr64 
    5524:	push   0x4f
    5529:	bnd jmp 5020 <.plt>
    552f:	nop
    5530:	endbr64 
    5534:	push   0x50
    5539:	bnd jmp 5020 <.plt>
    553f:	nop
    5540:	endbr64 
    5544:	push   0x51
    5549:	bnd jmp 5020 <.plt>
    554f:	nop

Disassembly of section .plt.got:

0000000000005550 <__cxa_finalize@plt>:
    5550:	endbr64 
    5554:	bnd jmp QWORD PTR [rip+0x1da8d]        # 22fe8 <__cxa_finalize@GLIBC_2.2.5>
    555b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000005560 <__strcat_chk@plt>:
    5560:	endbr64 
    5564:	bnd jmp QWORD PTR [rip+0x1d7cd]        # 22d38 <__strcat_chk@GLIBC_2.3.4>
    556b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005570 <getenv@plt>:
    5570:	endbr64 
    5574:	bnd jmp QWORD PTR [rip+0x1d7c5]        # 22d40 <getenv@GLIBC_2.2.5>
    557b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005580 <__snprintf_chk@plt>:
    5580:	endbr64 
    5584:	bnd jmp QWORD PTR [rip+0x1d7bd]        # 22d48 <__snprintf_chk@GLIBC_2.3.4>
    558b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005590 <free@plt>:
    5590:	endbr64 
    5594:	bnd jmp QWORD PTR [rip+0x1d7b5]        # 22d50 <free@GLIBC_2.2.5>
    559b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000055a0 <putchar@plt>:
    55a0:	endbr64 
    55a4:	bnd jmp QWORD PTR [rip+0x1d7ad]        # 22d58 <putchar@GLIBC_2.2.5>
    55ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000055b0 <pthread_create@plt>:
    55b0:	endbr64 
    55b4:	bnd jmp QWORD PTR [rip+0x1d7a5]        # 22d60 <pthread_create@GLIBC_2.2.5>
    55bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000055c0 <strcasecmp@plt>:
    55c0:	endbr64 
    55c4:	bnd jmp QWORD PTR [rip+0x1d79d]        # 22d68 <strcasecmp@GLIBC_2.2.5>
    55cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000055d0 <__vfprintf_chk@plt>:
    55d0:	endbr64 
    55d4:	bnd jmp QWORD PTR [rip+0x1d795]        # 22d70 <__vfprintf_chk@GLIBC_2.3.4>
    55db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000055e0 <__errno_location@plt>:
    55e0:	endbr64 
    55e4:	bnd jmp QWORD PTR [rip+0x1d78d]        # 22d78 <__errno_location@GLIBC_2.2.5>
    55eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000055f0 <strncmp@plt>:
    55f0:	endbr64 
    55f4:	bnd jmp QWORD PTR [rip+0x1d785]        # 22d80 <strncmp@GLIBC_2.2.5>
    55fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005600 <puts@plt>:
    5600:	endbr64 
    5604:	bnd jmp QWORD PTR [rip+0x1d77d]        # 22d88 <puts@GLIBC_2.2.5>
    560b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005610 <pthread_cancel@plt>:
    5610:	endbr64 
    5614:	bnd jmp QWORD PTR [rip+0x1d775]        # 22d90 <pthread_cancel@GLIBC_2.2.5>
    561b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005620 <sc_hex_to_bin@plt>:
    5620:	endbr64 
    5624:	bnd jmp QWORD PTR [rip+0x1d76d]        # 22d98 <sc_hex_to_bin>
    562b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005630 <fread@plt>:
    5630:	endbr64 
    5634:	bnd jmp QWORD PTR [rip+0x1d765]        # 22da0 <fread@GLIBC_2.2.5>
    563b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005640 <sc_asn1_sig_value_rs_to_sequence@plt>:
    5640:	endbr64 
    5644:	bnd jmp QWORD PTR [rip+0x1d75d]        # 22da8 <sc_asn1_sig_value_rs_to_sequence>
    564b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005650 <write@plt>:
    5650:	endbr64 
    5654:	bnd jmp QWORD PTR [rip+0x1d755]        # 22db0 <write@GLIBC_2.2.5>
    565b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005660 <sc_ctx_get_reader_count@plt>:
    5660:	endbr64 
    5664:	bnd jmp QWORD PTR [rip+0x1d74d]        # 22db8 <sc_ctx_get_reader_count>
    566b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005670 <fclose@plt>:
    5670:	endbr64 
    5674:	bnd jmp QWORD PTR [rip+0x1d745]        # 22dc0 <fclose@GLIBC_2.2.5>
    567b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005680 <strlen@plt>:
    5680:	endbr64 
    5684:	bnd jmp QWORD PTR [rip+0x1d73d]        # 22dc8 <strlen@GLIBC_2.2.5>
    568b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005690 <__stack_chk_fail@plt>:
    5690:	endbr64 
    5694:	bnd jmp QWORD PTR [rip+0x1d735]        # 22dd0 <__stack_chk_fail@GLIBC_2.4>
    569b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000056a0 <getopt_long@plt>:
    56a0:	endbr64 
    56a4:	bnd jmp QWORD PTR [rip+0x1d72d]        # 22dd8 <getopt_long@GLIBC_2.2.5>
    56ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000056b0 <setbuf@plt>:
    56b0:	endbr64 
    56b4:	bnd jmp QWORD PTR [rip+0x1d725]        # 22de0 <setbuf@GLIBC_2.2.5>
    56bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000056c0 <sc_ctx_detect_readers@plt>:
    56c0:	endbr64 
    56c4:	bnd jmp QWORD PTR [rip+0x1d71d]        # 22de8 <sc_ctx_detect_readers>
    56cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000056d0 <fputs@plt>:
    56d0:	endbr64 
    56d4:	bnd jmp QWORD PTR [rip+0x1d715]        # 22df0 <fputs@GLIBC_2.2.5>
    56db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000056e0 <memset@plt>:
    56e0:	endbr64 
    56e4:	bnd jmp QWORD PTR [rip+0x1d70d]        # 22df8 <memset@GLIBC_2.2.5>
    56eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000056f0 <sc_asn1_sig_value_sequence_to_rs@plt>:
    56f0:	endbr64 
    56f4:	bnd jmp QWORD PTR [rip+0x1d705]        # 22e00 <sc_asn1_sig_value_sequence_to_rs>
    56fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005700 <close@plt>:
    5700:	endbr64 
    5704:	bnd jmp QWORD PTR [rip+0x1d6fd]        # 22e08 <close@GLIBC_2.2.5>
    570b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005710 <sc_asn1_decode_object_id@plt>:
    5710:	endbr64 
    5714:	bnd jmp QWORD PTR [rip+0x1d6f5]        # 22e10 <sc_asn1_decode_object_id>
    571b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005720 <sc_format_oid@plt>:
    5720:	endbr64 
    5724:	bnd jmp QWORD PTR [rip+0x1d6ed]        # 22e18 <sc_format_oid>
    572b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005730 <fputc@plt>:
    5730:	endbr64 
    5734:	bnd jmp QWORD PTR [rip+0x1d6e5]        # 22e20 <fputc@GLIBC_2.2.5>
    573b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005740 <read@plt>:
    5740:	endbr64 
    5744:	bnd jmp QWORD PTR [rip+0x1d6dd]        # 22e28 <read@GLIBC_2.2.5>
    574b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005750 <memcmp@plt>:
    5750:	endbr64 
    5754:	bnd jmp QWORD PTR [rip+0x1d6d5]        # 22e30 <memcmp@GLIBC_2.2.5>
    575b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005760 <pthread_attr_init@plt>:
    5760:	endbr64 
    5764:	bnd jmp QWORD PTR [rip+0x1d6cd]        # 22e38 <pthread_attr_init@GLIBC_2.2.5>
    576b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005770 <fgets@plt>:
    5770:	endbr64 
    5774:	bnd jmp QWORD PTR [rip+0x1d6c5]        # 22e40 <fgets@GLIBC_2.2.5>
    577b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005780 <sc_ctx_get_reader@plt>:
    5780:	endbr64 
    5784:	bnd jmp QWORD PTR [rip+0x1d6bd]        # 22e48 <sc_ctx_get_reader>
    578b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005790 <calloc@plt>:
    5790:	endbr64 
    5794:	bnd jmp QWORD PTR [rip+0x1d6b5]        # 22e50 <calloc@GLIBC_2.2.5>
    579b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000057a0 <strcmp@plt>:
    57a0:	endbr64 
    57a4:	bnd jmp QWORD PTR [rip+0x1d6ad]        # 22e58 <strcmp@GLIBC_2.2.5>
    57ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000057b0 <__memcpy_chk@plt>:
    57b0:	endbr64 
    57b4:	bnd jmp QWORD PTR [rip+0x1d6a5]        # 22e60 <__memcpy_chk@GLIBC_2.3.4>
    57bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000057c0 <strtol@plt>:
    57c0:	endbr64 
    57c4:	bnd jmp QWORD PTR [rip+0x1d69d]        # 22e68 <strtol@GLIBC_2.2.5>
    57cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000057d0 <sc_connect_card@plt>:
    57d0:	endbr64 
    57d4:	bnd jmp QWORD PTR [rip+0x1d695]        # 22e70 <sc_connect_card>
    57db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000057e0 <fileno@plt>:
    57e0:	endbr64 
    57e4:	bnd jmp QWORD PTR [rip+0x1d68d]        # 22e78 <fileno@GLIBC_2.2.5>
    57eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000057f0 <sc_init_oid@plt>:
    57f0:	endbr64 
    57f4:	bnd jmp QWORD PTR [rip+0x1d685]        # 22e80 <sc_init_oid>
    57fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005800 <pthread_attr_setdetachstate@plt>:
    5800:	endbr64 
    5804:	bnd jmp QWORD PTR [rip+0x1d67d]        # 22e88 <pthread_attr_setdetachstate@GLIBC_2.2.5>
    580b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005810 <dlopen@plt>:
    5810:	endbr64 
    5814:	bnd jmp QWORD PTR [rip+0x1d675]        # 22e90 <dlopen@GLIBC_2.2.5>
    581b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005820 <sc_disconnect_card@plt>:
    5820:	endbr64 
    5824:	bnd jmp QWORD PTR [rip+0x1d66d]        # 22e98 <sc_disconnect_card>
    582b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005830 <pthread_exit@plt>:
    5830:	endbr64 
    5834:	bnd jmp QWORD PTR [rip+0x1d665]        # 22ea0 <pthread_exit@GLIBC_2.2.5>
    583b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005840 <malloc@plt>:
    5840:	endbr64 
    5844:	bnd jmp QWORD PTR [rip+0x1d65d]        # 22ea8 <malloc@GLIBC_2.2.5>
    584b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005850 <strncasecmp@plt>:
    5850:	endbr64 
    5854:	bnd jmp QWORD PTR [rip+0x1d655]        # 22eb0 <strncasecmp@GLIBC_2.2.5>
    585b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005860 <fflush@plt>:
    5860:	endbr64 
    5864:	bnd jmp QWORD PTR [rip+0x1d64d]        # 22eb8 <fflush@GLIBC_2.2.5>
    586b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005870 <dlclose@plt>:
    5870:	endbr64 
    5874:	bnd jmp QWORD PTR [rip+0x1d645]        # 22ec0 <dlclose@GLIBC_2.2.5>
    587b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005880 <sc_asn1_encode_object_id@plt>:
    5880:	endbr64 
    5884:	bnd jmp QWORD PTR [rip+0x1d63d]        # 22ec8 <sc_asn1_encode_object_id>
    588b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005890 <sc_wait_for_event@plt>:
    5890:	endbr64 
    5894:	bnd jmp QWORD PTR [rip+0x1d635]        # 22ed0 <sc_wait_for_event>
    589b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000058a0 <__printf_chk@plt>:
    58a0:	endbr64 
    58a4:	bnd jmp QWORD PTR [rip+0x1d62d]        # 22ed8 <__printf_chk@GLIBC_2.3.4>
    58ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000058b0 <sc_strerror@plt>:
    58b0:	endbr64 
    58b4:	bnd jmp QWORD PTR [rip+0x1d625]        # 22ee0 <sc_strerror>
    58bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000058c0 <waitpid@plt>:
    58c0:	endbr64 
    58c4:	bnd jmp QWORD PTR [rip+0x1d61d]        # 22ee8 <waitpid@GLIBC_2.2.5>
    58cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000058d0 <tcgetattr@plt>:
    58d0:	endbr64 
    58d4:	bnd jmp QWORD PTR [rip+0x1d615]        # 22ef0 <tcgetattr@GLIBC_2.2.5>
    58db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000058e0 <tcsetattr@plt>:
    58e0:	endbr64 
    58e4:	bnd jmp QWORD PTR [rip+0x1d60d]        # 22ef8 <tcsetattr@GLIBC_2.2.5>
    58eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000058f0 <open@plt>:
    58f0:	endbr64 
    58f4:	bnd jmp QWORD PTR [rip+0x1d605]        # 22f00 <open@GLIBC_2.2.5>
    58fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005900 <fopen@plt>:
    5900:	endbr64 
    5904:	bnd jmp QWORD PTR [rip+0x1d5fd]        # 22f08 <fopen@GLIBC_2.2.5>
    590b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005910 <perror@plt>:
    5910:	endbr64 
    5914:	bnd jmp QWORD PTR [rip+0x1d5f5]        # 22f10 <perror@GLIBC_2.2.5>
    591b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005920 <sc_notify_close@plt>:
    5920:	endbr64 
    5924:	bnd jmp QWORD PTR [rip+0x1d5ed]        # 22f18 <sc_notify_close>
    592b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005930 <strtok@plt>:
    5930:	endbr64 
    5934:	bnd jmp QWORD PTR [rip+0x1d5e5]        # 22f20 <strtok@GLIBC_2.2.5>
    593b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005940 <pthread_join@plt>:
    5940:	endbr64 
    5944:	bnd jmp QWORD PTR [rip+0x1d5dd]        # 22f28 <pthread_join@GLIBC_2.2.5>
    594b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005950 <sc_detect_card_presence@plt>:
    5950:	endbr64 
    5954:	bnd jmp QWORD PTR [rip+0x1d5d5]        # 22f30 <sc_detect_card_presence>
    595b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005960 <strtoul@plt>:
    5960:	endbr64 
    5964:	bnd jmp QWORD PTR [rip+0x1d5cd]        # 22f38 <strtoul@GLIBC_2.2.5>
    596b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005970 <sc_lock@plt>:
    5970:	endbr64 
    5974:	bnd jmp QWORD PTR [rip+0x1d5c5]        # 22f40 <sc_lock>
    597b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005980 <__memset_chk@plt>:
    5980:	endbr64 
    5984:	bnd jmp QWORD PTR [rip+0x1d5bd]        # 22f48 <__memset_chk@GLIBC_2.3.4>
    598b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005990 <exit@plt>:
    5990:	endbr64 
    5994:	bnd jmp QWORD PTR [rip+0x1d5b5]        # 22f50 <exit@GLIBC_2.2.5>
    599b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000059a0 <fwrite@plt>:
    59a0:	endbr64 
    59a4:	bnd jmp QWORD PTR [rip+0x1d5ad]        # 22f58 <fwrite@GLIBC_2.2.5>
    59ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000059b0 <__fprintf_chk@plt>:
    59b0:	endbr64 
    59b4:	bnd jmp QWORD PTR [rip+0x1d5a5]        # 22f60 <__fprintf_chk@GLIBC_2.3.4>
    59bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000059c0 <sc_ctx_get_reader_by_name@plt>:
    59c0:	endbr64 
    59c4:	bnd jmp QWORD PTR [rip+0x1d59d]        # 22f68 <sc_ctx_get_reader_by_name>
    59cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000059d0 <strerror@plt>:
    59d0:	endbr64 
    59d4:	bnd jmp QWORD PTR [rip+0x1d595]        # 22f70 <strerror@GLIBC_2.2.5>
    59db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000059e0 <dlsym@plt>:
    59e0:	endbr64 
    59e4:	bnd jmp QWORD PTR [rip+0x1d58d]        # 22f78 <dlsym@GLIBC_2.2.5>
    59eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000059f0 <sc_ctx_log_to_file@plt>:
    59f0:	endbr64 
    59f4:	bnd jmp QWORD PTR [rip+0x1d585]        # 22f80 <sc_ctx_log_to_file>
    59fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005a00 <sleep@plt>:
    5a00:	endbr64 
    5a04:	bnd jmp QWORD PTR [rip+0x1d57d]        # 22f88 <sleep@GLIBC_2.2.5>
    5a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005a10 <getc@plt>:
    5a10:	endbr64 
    5a14:	bnd jmp QWORD PTR [rip+0x1d575]        # 22f90 <getc@GLIBC_2.2.5>
    5a1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005a20 <fork@plt>:
    5a20:	endbr64 
    5a24:	bnd jmp QWORD PTR [rip+0x1d56d]        # 22f98 <fork@GLIBC_2.2.5>
    5a2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005a30 <sc_notify_init@plt>:
    5a30:	endbr64 
    5a34:	bnd jmp QWORD PTR [rip+0x1d565]        # 22fa0 <sc_notify_init>
    5a3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005a40 <rand@plt>:
    5a40:	endbr64 
    5a44:	bnd jmp QWORD PTR [rip+0x1d55d]        # 22fa8 <rand@GLIBC_2.2.5>
    5a4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005a50 <dlerror@plt>:
    5a50:	endbr64 
    5a54:	bnd jmp QWORD PTR [rip+0x1d555]        # 22fb0 <dlerror@GLIBC_2.2.5>
    5a5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005a60 <__ctype_b_loc@plt>:
    5a60:	endbr64 
    5a64:	bnd jmp QWORD PTR [rip+0x1d54d]        # 22fb8 <__ctype_b_loc@GLIBC_2.3>
    5a6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000005a70 <__sprintf_chk@plt>:
    5a70:	endbr64 
    5a74:	bnd jmp QWORD PTR [rip+0x1d545]        # 22fc0 <__sprintf_chk@GLIBC_2.3.4>
    5a7b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000005a80 <main>:
    5a80:	endbr64 
    5a84:	push   r15
    5a86:	xor    r15d,r15d
    5a89:	push   r14
    5a8b:	xor    r14d,r14d
    5a8e:	push   r13
    5a90:	push   r12
    5a92:	mov    r12,rsi
    5a95:	push   rbp
    5a96:	mov    ebp,edi
    5a98:	push   rbx
    5a99:	lea    rbx,[rip+0x18fc4]        # 1ea64 <_IO_stdin_used+0x7a64>
    5aa0:	sub    rsp,0x308
    5aa7:	mov    rax,QWORD PTR fs:0x28
    5ab0:	mov    QWORD PTR [rsp+0x2f8],rax
    5ab8:	xor    eax,eax
    5aba:	mov    DWORD PTR [rsp+0x6c],0x0
    5ac2:	lea    r13,[rsp+0x94]
    5aca:	mov    QWORD PTR [rsp+0x98],0x0
    5ad6:	mov    QWORD PTR [rsp+0xa0],0x0
    5ae2:	mov    DWORD PTR [rsp+0x94],0x0
    5aed:	mov    DWORD PTR [rsp+0x40],0x0
    5af5:	mov    DWORD PTR [rsp+0x44],0x0
    5afd:	mov    DWORD PTR [rsp+0x58],0x0
    5b05:	mov    DWORD PTR [rsp+0x20],0x0
    5b0d:	mov    DWORD PTR [rsp+0x8],0x0
    5b15:	mov    DWORD PTR [rsp+0xc],0x0
    5b1d:	mov    DWORD PTR [rsp+0x18],0x0
    5b25:	mov    DWORD PTR [rsp+0x5c],0x0
    5b2d:	mov    DWORD PTR [rsp+0x60],0x0
    5b35:	mov    DWORD PTR [rsp+0x64],0x0
    5b3d:	mov    DWORD PTR [rsp+0x68],0x0
    5b45:	mov    DWORD PTR [rsp+0x70],0x0
    5b4d:	mov    DWORD PTR [rsp+0x74],0x0
    5b55:	mov    DWORD PTR [rsp+0x88],0x0
    5b60:	mov    DWORD PTR [rsp+0x78],0x0
    5b68:	mov    DWORD PTR [rsp+0x7c],0x0
    5b70:	mov    DWORD PTR [rsp+0x2c],0x0
    5b78:	mov    DWORD PTR [rsp+0x80],0x0
    5b83:	mov    DWORD PTR [rsp+0x38],0x0
    5b8b:	mov    DWORD PTR [rsp+0x3c],0x0
    5b93:	mov    DWORD PTR [rsp+0x10],0x0
    5b9b:	mov    DWORD PTR [rsp+0x14],0x0
    5ba3:	mov    DWORD PTR [rsp+0x54],0x0
    5bab:	mov    DWORD PTR [rsp+0x28],0x0
    5bb3:	mov    DWORD PTR [rsp+0x24],0x0
    5bbb:	mov    DWORD PTR [rsp+0x84],0x0
    5bc6:	mov    DWORD PTR [rsp+0x50],0x0
    5bce:	mov    DWORD PTR [rsp+0x30],0x0
    5bd6:	mov    DWORD PTR [rsp],0x0
    5bdd:	mov    DWORD PTR [rsp+0x34],0x0
    5be5:	nop    DWORD PTR [rax]
    5be8:	mov    r8,r13
    5beb:	lea    rcx,[rip+0x1c14e]        # 21d40 <options>
    5bf2:	mov    rsi,r12
    5bf5:	mov    edi,ebp
    5bf7:	lea    rdx,[rip+0x16aa2]        # 1c6a0 <_IO_stdin_used+0x56a0>
    5bfe:	call   56a0 <getopt_long@plt>
    5c03:	cmp    eax,0xffffffff
    5c06:	je     6490 <main+0xa10>
    5c0c:	sub    eax,0x49
    5c0f:	cmp    eax,0xe7
    5c14:	ja     7726 <main+0x1ca6>
    5c1a:	movsxd rax,DWORD PTR [rbx+rax*4]
    5c1e:	add    rax,rbx
    5c21:	notrack jmp rax
    5c24:	mov    DWORD PTR [rsp+0x2c],0x1
    5c2c:	or     r15d,0x2
    5c30:	add    r14d,0x1
    5c34:	jmp    5be8 <main+0x168>
    5c36:	mov    DWORD PTR [rsp+0x5c],0x1
    5c3e:	add    r14d,0x1
    5c42:	jmp    5be8 <main+0x168>
    5c44:	mov    rdx,QWORD PTR [rip+0x1f975]        # 255c0 <optarg@@GLIBC_2.2.5>
    5c4b:	lea    rsi,[rip+0x12dde]        # 18a30 <_IO_stdin_used+0x1a30>
    5c52:	mov    rdi,rdx
    5c55:	mov    QWORD PTR [rsp+0x48],rdx
    5c5a:	call   57a0 <strcmp@plt>
    5c5f:	mov    rdx,QWORD PTR [rsp+0x48]
    5c64:	test   eax,eax
    5c66:	jne    6881 <main+0xe01>
    5c6c:	mov    DWORD PTR [rip+0x1d3e6],0x0        # 2305c <opt_login_type>
    5c76:	jmp    5be8 <main+0x168>
    5c7b:	mov    rdi,QWORD PTR [rip+0x1f93e]        # 255c0 <optarg@@GLIBC_2.2.5>
    5c82:	lea    rsi,[rip+0x20347]        # 25fd0 <opt_new_pin>
    5c89:	call   16520 <util_get_pin>
    5c8e:	jmp    5be8 <main+0x168>
    5c93:	mov    rdi,QWORD PTR [rip+0x1f926]        # 255c0 <optarg@@GLIBC_2.2.5>
    5c9a:	lea    rsi,[rip+0x20337]        # 25fd8 <opt_puk>
    5ca1:	call   16520 <util_get_pin>
    5ca6:	jmp    5be8 <main+0x168>
    5cab:	mov    DWORD PTR [rsp+0x40],0x1
    5cb3:	or     r15d,0x2
    5cb7:	add    r14d,0x1
    5cbb:	jmp    5be8 <main+0x168>
    5cc0:	mov    DWORD PTR [rip+0x20216],0x1        # 25ee0 <opt_test_hotplug>
    5cca:	add    r14d,0x1
    5cce:	jmp    5be8 <main+0x168>
    5cd3:	mov    DWORD PTR [rip+0x20207],0x1        # 25ee4 <opt_is_extractable>
    5cdd:	jmp    5be8 <main+0x168>
    5ce2:	mov    DWORD PTR [rip+0x201fc],0x1        # 25ee8 <opt_is_sensitive>
    5cec:	jmp    5be8 <main+0x168>
    5cf1:	mov    DWORD PTR [rip+0x201f1],0x1        # 25eec <opt_is_private>
    5cfb:	jmp    5be8 <main+0x168>
    5d00:	mov    DWORD PTR [rip+0x201c6],0x1        # 25ed0 <opt_key_usage_wrap>
    5d0a:	mov    DWORD PTR [rip+0x1d344],0x0        # 23058 <opt_key_usage_default>
    5d14:	jmp    5be8 <main+0x168>
    5d19:	mov    DWORD PTR [rip+0x201b1],0x1        # 25ed4 <opt_key_usage_derive>
    5d23:	mov    DWORD PTR [rip+0x1d32b],0x0        # 23058 <opt_key_usage_default>
    5d2d:	jmp    5be8 <main+0x168>
    5d32:	mov    DWORD PTR [rip+0x2019c],0x1        # 25ed8 <opt_key_usage_decrypt>
    5d3c:	mov    DWORD PTR [rip+0x1d312],0x0        # 23058 <opt_key_usage_default>
    5d46:	jmp    5be8 <main+0x168>
    5d4b:	mov    DWORD PTR [rip+0x20187],0x1        # 25edc <opt_key_usage_sign>
    5d55:	mov    DWORD PTR [rip+0x1d2f9],0x0        # 23058 <opt_key_usage_default>
    5d5f:	jmp    5be8 <main+0x168>
    5d64:	mov    rax,QWORD PTR [rip+0x1f855]        # 255c0 <optarg@@GLIBC_2.2.5>
    5d6b:	mov    QWORD PTR [rip+0x20236],rax        # 25fa8 <opt_key_type>
    5d72:	jmp    5be8 <main+0x168>
    5d77:	mov    rax,QWORD PTR [rip+0x1f842]        # 255c0 <optarg@@GLIBC_2.2.5>
    5d7e:	mov    QWORD PTR [rip+0x20283],rax        # 26008 <opt_attr_from_file>
    5d85:	jmp    5be8 <main+0x168>
    5d8a:	mov    DWORD PTR [rsp+0x58],0x1
    5d92:	or     r15d,0x2
    5d96:	add    r14d,0x1
    5d9a:	jmp    5be8 <main+0x168>
    5d9f:	mov    DWORD PTR [rsp+0x20],0x1
    5da7:	add    r14d,0x1
    5dab:	jmp    5be8 <main+0x168>
    5db0:	mov    rdi,QWORD PTR [rip+0x1f809]        # 255c0 <optarg@@GLIBC_2.2.5>
    5db7:	lea    rsi,[rip+0x20222]        # 25fe0 <opt_so_pin>
    5dbe:	call   16520 <util_get_pin>
    5dc3:	jmp    5be8 <main+0x168>
    5dc8:	mov    rax,QWORD PTR [rip+0x1f7f1]        # 255c0 <optarg@@GLIBC_2.2.5>
    5dcf:	mov    QWORD PTR [rip+0x201da],rax        # 25fb0 <opt_subject>
    5dd6:	jmp    5be8 <main+0x168>
    5ddb:	mov    rax,QWORD PTR [rip+0x1f7de]        # 255c0 <optarg@@GLIBC_2.2.5>
    5de2:	mov    QWORD PTR [rip+0x201cf],rax        # 25fb8 <opt_issuer>
    5de9:	jmp    5be8 <main+0x168>
    5dee:	mov    rax,QWORD PTR [rip+0x1f7cb]        # 255c0 <optarg@@GLIBC_2.2.5>
    5df5:	mov    QWORD PTR [rip+0x201c4],rax        # 25fc0 <opt_application_id>
    5dfc:	jmp    5be8 <main+0x168>
    5e01:	mov    rax,QWORD PTR [rip+0x1f7b8]        # 255c0 <optarg@@GLIBC_2.2.5>
    5e08:	mov    QWORD PTR [rip+0x201b9],rax        # 25fc8 <opt_application_label>
    5e0f:	jmp    5be8 <main+0x168>
    5e14:	cmp    QWORD PTR [rip+0x20334],0x0        # 26150 <opt_slot_description>
    5e1c:	mov    eax,DWORD PTR [rip+0x2033e]        # 26160 <opt_slot_set>
    5e22:	jne    8cd5 <main+0x3255>
    5e28:	or     eax,DWORD PTR [rip+0x2030a]        # 26138 <opt_slot_index_set>
    5e2e:	jne    8cd5 <main+0x3255>
    5e34:	mov    rax,QWORD PTR [rip+0x1f785]        # 255c0 <optarg@@GLIBC_2.2.5>
    5e3b:	mov    QWORD PTR [rip+0x20306],rax        # 26148 <opt_token_label>
    5e42:	jmp    5be8 <main+0x168>
    5e47:	cmp    DWORD PTR [rip+0x20312],0x0        # 26160 <opt_slot_set>
    5e4e:	jne    8cd5 <main+0x3255>
    5e54:	cmp    QWORD PTR [rip+0x202f4],0x0        # 26150 <opt_slot_description>
    5e5c:	jne    8cd5 <main+0x3255>
    5e62:	mov    rdi,QWORD PTR [rip+0x1f757]        # 255c0 <optarg@@GLIBC_2.2.5>
    5e69:	xor    edx,edx
    5e6b:	xor    esi,esi
    5e6d:	call   5960 <strtoul@plt>
    5e72:	mov    DWORD PTR [rip+0x202bc],0x1        # 26138 <opt_slot_index_set>
    5e7c:	mov    QWORD PTR [rip+0x202bd],rax        # 26140 <opt_slot_index>
    5e83:	jmp    5be8 <main+0x168>
    5e88:	cmp    DWORD PTR [rip+0x202d1],0x0        # 26160 <opt_slot_set>
    5e8f:	jne    8cd5 <main+0x3255>
    5e95:	mov    rax,QWORD PTR [rip+0x1f724]        # 255c0 <optarg@@GLIBC_2.2.5>
    5e9c:	mov    QWORD PTR [rip+0x202ad],rax        # 26150 <opt_slot_description>
    5ea3:	jmp    5be8 <main+0x168>
    5ea8:	mov    rdi,QWORD PTR [rip+0x1f711]        # 255c0 <optarg@@GLIBC_2.2.5>
    5eaf:	xor    edx,edx
    5eb1:	xor    esi,esi
    5eb3:	call   5960 <strtoul@plt>
    5eb8:	cmp    DWORD PTR [rip+0x202c1],0x0        # 26180 <verbose>
    5ebf:	mov    DWORD PTR [rip+0x20297],0x1        # 26160 <opt_slot_set>
    5ec9:	mov    QWORD PTR [rip+0x20288],rax        # 26158 <opt_slot>
    5ed0:	je     5be8 <main+0x168>
    5ed6:	mov    rdi,QWORD PTR [rip+0x1f703]        # 255e0 <stderr@@GLIBC_2.2.5>
    5edd:	mov    rcx,rax
    5ee0:	mov    esi,0x1
    5ee5:	xor    eax,eax
    5ee7:	lea    rdx,[rip+0x12b28]        # 18a16 <_IO_stdin_used+0x1a16>
    5eee:	call   59b0 <__fprintf_chk@plt>
    5ef3:	jmp    5be8 <main+0x168>
    5ef8:	mov    rax,QWORD PTR [rip+0x1f6c1]        # 255c0 <optarg@@GLIBC_2.2.5>
    5eff:	mov    QWORD PTR [rip+0x1f41a],rax        # 25320 <opt_module>
    5f06:	jmp    5be8 <main+0x168>
    5f0b:	mov    rax,QWORD PTR [rip+0x1f6ae]        # 255c0 <optarg@@GLIBC_2.2.5>
    5f12:	mov    DWORD PTR [rsp+0x60],0x1
    5f1a:	add    r14d,0x1
    5f1e:	mov    QWORD PTR [rip+0x201eb],rax        # 26110 <opt_file_to_write>
    5f25:	jmp    5be8 <main+0x168>
    5f2a:	mov    rdx,QWORD PTR [rip+0x1f68f]        # 255c0 <optarg@@GLIBC_2.2.5>
    5f31:	lea    rsi,[rip+0x123d7]        # 1830f <_IO_stdin_used+0x130f>
    5f38:	mov    rdi,rdx
    5f3b:	mov    QWORD PTR [rip+0x201c6],rdx        # 26108 <opt_object_class_str>
    5f42:	mov    QWORD PTR [rsp+0x48],rdx
    5f47:	call   57a0 <strcmp@plt>
    5f4c:	mov    rdx,QWORD PTR [rsp+0x48]
    5f51:	test   eax,eax
    5f53:	jne    682f <main+0xdaf>
    5f59:	mov    QWORD PTR [rip+0x1d0fc],0x1        # 23060 <opt_object_class>
    5f64:	jmp    5be8 <main+0x168>
    5f69:	mov    rax,QWORD PTR [rip+0x1f650]        # 255c0 <optarg@@GLIBC_2.2.5>
    5f70:	or     r15d,0x2
    5f74:	add    r14d,0x1
    5f78:	mov    DWORD PTR [rsp+0x88],0x1
    5f83:	mov    QWORD PTR [rip+0x20186],rax        # 26110 <opt_file_to_write>
    5f8a:	jmp    5be8 <main+0x168>
    5f8f:	add    DWORD PTR [rip+0x201ea],0x1        # 26180 <verbose>
    5f96:	jmp    5be8 <main+0x168>
    5f9b:	mov    DWORD PTR [rsp+0x64],0x1
    5fa3:	or     r15d,0x2
    5fa7:	add    r14d,0x1
    5fab:	jmp    5be8 <main+0x168>
    5fb0:	mov    DWORD PTR [rsp+0x28],0x1
    5fb8:	or     r15d,0x2
    5fbc:	add    r14d,0x1
    5fc0:	jmp    5be8 <main+0x168>
    5fc5:	mov    DWORD PTR [rsp+0x74],0x1
    5fcd:	or     r15d,0x1
    5fd1:	add    r14d,0x1
    5fd5:	jmp    5be8 <main+0x168>
    5fda:	mov    rdi,QWORD PTR [rip+0x1f5df]        # 255c0 <optarg@@GLIBC_2.2.5>
    5fe1:	lea    rsi,[rip+0x20000]        # 25fe8 <opt_pin>
    5fe8:	or     r15d,0x2
    5fec:	call   16520 <util_get_pin>
    5ff1:	mov    DWORD PTR [rsp+0x8],0x1
    5ff9:	jmp    5be8 <main+0x168>
    5ffe:	mov    rax,QWORD PTR [rip+0x1f5bb]        # 255c0 <optarg@@GLIBC_2.2.5>
    6005:	mov    QWORD PTR [rip+0x20164],rax        # 26170 <opt_output>
    600c:	jmp    5be8 <main+0x168>
    6011:	mov    rdi,QWORD PTR [rip+0x1f5a8]        # 255c0 <optarg@@GLIBC_2.2.5>
    6018:	mov    DWORD PTR [rip+0x200f6],0x1        # 26118 <opt_mechanism_used>
    6022:	call   b260 <p11_name_to_mechanism>
    6027:	mov    QWORD PTR [rip+0x200f2],rax        # 26120 <opt_mechanism>
    602e:	jmp    5be8 <main+0x168>
    6033:	mov    DWORD PTR [rsp+0x8],0x1
    603b:	or     r15d,0x2
    603f:	jmp    5be8 <main+0x168>
    6044:	mov    DWORD PTR [rsp+0x7c],0x1
    604c:	or     r15d,0x2
    6050:	add    r14d,0x1
    6054:	jmp    5be8 <main+0x168>
    6059:	mov    rax,QWORD PTR [rip+0x1f560]        # 255c0 <optarg@@GLIBC_2.2.5>
    6060:	mov    QWORD PTR [rip+0x20111],rax        # 26178 <opt_input>
    6067:	jmp    5be8 <main+0x168>
    606c:	mov    DWORD PTR [rsp+0x80],0x1
    6077:	or     r15d,0x1
    607b:	add    r14d,0x1
    607f:	jmp    5be8 <main+0x168>
    6084:	mov    rax,QWORD PTR [rip+0x1f535]        # 255c0 <optarg@@GLIBC_2.2.5>
    608b:	mov    QWORD PTR [rip+0x1ff0e],rax        # 25fa0 <opt_sig_format>
    6092:	jmp    5be8 <main+0x168>
    6097:	mov    rdi,QWORD PTR [rip+0x1f522]        # 255c0 <optarg@@GLIBC_2.2.5>
    609e:	lea    rdx,[rip+0x1ff53]        # 25ff8 <new_object_id_len>
    60a5:	lea    rsi,[rip+0x1ff74]        # 26020 <new_object_id>
    60ac:	or     r15d,0x2
    60b0:	mov    QWORD PTR [rip+0x1ff3d],0x64        # 25ff8 <new_object_id_len>
    60bb:	call   5620 <sc_hex_to_bin@plt>
    60c0:	test   eax,eax
    60c2:	jne    6102 <main+0x682>
    60c4:	mov    DWORD PTR [rsp+0x68],0x1
    60cc:	add    r14d,0x1
    60d0:	jmp    5be8 <main+0x168>
    60d5:	mov    rdi,QWORD PTR [rip+0x1f4e4]        # 255c0 <optarg@@GLIBC_2.2.5>
    60dc:	lea    rdx,[rip+0x1ff1d]        # 26000 <opt_object_id_len>
    60e3:	lea    rsi,[rip+0x1ffb6]        # 260a0 <opt_object_id>
    60ea:	mov    QWORD PTR [rip+0x1ff0b],0x64        # 26000 <opt_object_id_len>
    60f5:	call   5620 <sc_hex_to_bin@plt>
    60fa:	test   eax,eax
    60fc:	je     5be8 <main+0x168>
    6102:	mov    rcx,QWORD PTR [rip+0x1f4b7]        # 255c0 <optarg@@GLIBC_2.2.5>
    6109:	lea    rdx,[rip+0x128a8]        # 189b8 <_IO_stdin_used+0x19b8>
    6110:	jmp    7713 <main+0x1c93>
    6115:	mov    DWORD PTR [rsp+0x44],0x1
    611d:	or     r15d,0x2
    6121:	add    r14d,0x1
    6125:	jmp    5be8 <main+0x168>
    612a:	mov    DWORD PTR [rsp+0x70],0x1
    6132:	or     r15d,0x2
    6136:	add    r14d,0x1
    613a:	jmp    5be8 <main+0x168>
    613f:	mov    rax,QWORD PTR [rip+0x1f47a]        # 255c0 <optarg@@GLIBC_2.2.5>
    6146:	mov    QWORD PTR [rip+0x1fea3],rax        # 25ff0 <opt_object_label>
    614d:	jmp    5be8 <main+0x168>
    6152:	mov    DWORD PTR [rsp+0x30],0x1
    615a:	add    r14d,0x1
    615e:	mov    DWORD PTR [rsp],0x1
    6165:	jmp    5be8 <main+0x168>
    616a:	mov    DWORD PTR [rsp+0x84],0x1
    6175:	or     r15d,0x1
    6179:	add    r14d,0x1
    617d:	jmp    5be8 <main+0x168>
    6182:	mov    DWORD PTR [rsp+0x50],0x1
    618a:	add    r14d,0x1
    618e:	jmp    5be8 <main+0x168>
    6193:	mov    DWORD PTR [rsp],0x1
    619a:	add    r14d,0x1
    619e:	jmp    5be8 <main+0x168>
    61a3:	mov    DWORD PTR [rsp+0x34],0x1
    61ab:	add    r14d,0x1
    61af:	jmp    5be8 <main+0x168>
    61b4:	mov    rax,QWORD PTR [rip+0x1f405]        # 255c0 <optarg@@GLIBC_2.2.5>
    61bb:	mov    QWORD PTR [rip+0x1fcde],rax        # 25ea0 <opt_iv>
    61c2:	jmp    5be8 <main+0x168>
    61c7:	mov    DWORD PTR [rsp+0x24],0x1
    61cf:	add    r14d,0x1
    61d3:	jmp    5be8 <main+0x168>
    61d8:	mov    QWORD PTR [rip+0x1ce6d],0x0        # 23050 <opt_allow_sw>
    61e3:	jmp    5be8 <main+0x168>
    61e8:	mov    rdi,QWORD PTR [rip+0x1f3d1]        # 255c0 <optarg@@GLIBC_2.2.5>
    61ef:	xor    edx,edx
    61f1:	xor    esi,esi
    61f3:	call   5960 <strtoul@plt>
    61f8:	mov    DWORD PTR [rip+0x1ff26],0x1        # 26128 <opt_object_index_set>
    6202:	mov    QWORD PTR [rip+0x1ff27],rax        # 26130 <opt_object_index>
    6209:	jmp    5be8 <main+0x168>
    620e:	mov    rdi,QWORD PTR [rip+0x1f3ab]        # 255c0 <optarg@@GLIBC_2.2.5>
    6215:	lea    rsi,[rip+0x11d8d]        # 17fa9 <_IO_stdin_used+0xfa9>
    621c:	call   5930 <strtok@plt>
    6221:	mov    rdi,rax
    6224:	test   rax,rax
    6227:	je     5be8 <main+0x168>
    622d:	mov    rdx,QWORD PTR [rip+0x1fcbc]        # 25ef0 <opt_allowed_mechanisms_len>
    6234:	mov    DWORD PTR [rsp+0x48],ebp
    6238:	mov    rbp,rdx
    623b:	jmp    6275 <main+0x7f5>
    623d:	nop    DWORD PTR [rax]
    6240:	call   b260 <p11_name_to_mechanism>
    6245:	lea    rcx,[rip+0x1fcb4]        # 25f00 <opt_allowed_mechanisms>
    624c:	xor    edi,edi
    624e:	lea    rsi,[rip+0x11d54]        # 17fa9 <_IO_stdin_used+0xfa9>
    6255:	mov    QWORD PTR [rcx+rbp*8],rax
    6259:	add    rbp,0x1
    625d:	mov    QWORD PTR [rip+0x1fc8c],rbp        # 25ef0 <opt_allowed_mechanisms_len>
    6264:	call   5930 <strtok@plt>
    6269:	mov    rdi,rax
    626c:	test   rax,rax
    626f:	je     6a5a <main+0xfda>
    6275:	cmp    rbp,0x14
    6279:	jbe    6240 <main+0x7c0>
    627b:	mov    ecx,0x14
    6280:	mov    esi,0x1
    6285:	xor    eax,eax
    6287:	mov    ebp,DWORD PTR [rsp+0x48]
    628b:	mov    rdi,QWORD PTR [rip+0x1f34e]        # 255e0 <stderr@@GLIBC_2.2.5>
    6292:	lea    rdx,[rip+0x164bf]        # 1c758 <_IO_stdin_used+0x5758>
    6299:	call   59b0 <__fprintf_chk@plt>
    629e:	jmp    5be8 <main+0x168>
    62a3:	mov    DWORD PTR [rip+0x1fbfb],0x1        # 25ea8 <opt_always_auth>
    62ad:	jmp    5be8 <main+0x168>
    62b2:	mov    rax,QWORD PTR [rip+0x1f307]        # 255c0 <optarg@@GLIBC_2.2.5>
    62b9:	mov    QWORD PTR [rip+0x1fea8],rax        # 26168 <opt_signature_file>
    62c0:	jmp    5be8 <main+0x168>
    62c5:	mov    DWORD PTR [rsp+0x54],0x1
    62cd:	or     r15d,0x1
    62d1:	add    r14d,0x1
    62d5:	jmp    5be8 <main+0x168>
    62da:	mov    rdi,QWORD PTR [rip+0x1f2df]        # 255c0 <optarg@@GLIBC_2.2.5>
    62e1:	xor    edx,edx
    62e3:	xor    esi,esi
    62e5:	call   5960 <strtoul@plt>
    62ea:	mov    DWORD PTR [rip+0x1fbb8],0x1        # 25eac <opt_salt_len_given>
    62f4:	mov    QWORD PTR [rip+0x1fbb5],rax        # 25eb0 <opt_salt_len>
    62fb:	jmp    5be8 <main+0x168>
    6300:	mov    rax,QWORD PTR [rip+0x1f2b9]        # 255c0 <optarg@@GLIBC_2.2.5>
    6307:	mov    rdi,QWORD PTR [rip+0x1cf9a]        # 232a8 <p11_mgf+0x8>
    630e:	mov    rsi,rax
    6311:	test   rdi,rdi
    6314:	je     896e <main+0x2eee>
    631a:	lea    rdx,[rip+0x1cf7f]        # 232a0 <p11_mgf>
    6321:	mov    DWORD PTR [rsp+0x48],r15d
    6326:	mov    r15,rax
    6329:	mov    DWORD PTR [rsp+0x8c],ebp
    6330:	mov    rbp,rdx
    6333:	jmp    6349 <main+0x8c9>
    6335:	nop    DWORD PTR [rax]
    6338:	mov    rdi,QWORD PTR [rbp+0x28]
    633c:	add    rbp,0x20
    6340:	test   rdi,rdi
    6343:	je     896b <main+0x2eeb>
    6349:	mov    rsi,r15
    634c:	call   55c0 <strcasecmp@plt>
    6351:	test   eax,eax
    6353:	jne    6338 <main+0x8b8>
    6355:	mov    rdx,rbp
    6358:	mov    r15d,DWORD PTR [rsp+0x48]
    635d:	mov    ebp,DWORD PTR [rsp+0x8c]
    6364:	mov    rax,QWORD PTR [rdx]
    6367:	mov    QWORD PTR [rip+0x1fb4a],rax        # 25eb8 <opt_mgf>
    636e:	jmp    5be8 <main+0x168>
    6373:	mov    rdi,QWORD PTR [rip+0x1f246]        # 255c0 <optarg@@GLIBC_2.2.5>
    637a:	call   b260 <p11_name_to_mechanism>
    637f:	mov    QWORD PTR [rip+0x1fb3a],rax        # 25ec0 <opt_hash_alg>
    6386:	jmp    5be8 <main+0x168>
    638b:	mov    rdi,QWORD PTR [rip+0x1f22e]        # 255c0 <optarg@@GLIBC_2.2.5>
    6392:	xor    edx,edx
    6394:	xor    esi,esi
    6396:	or     r15d,0x1
    639a:	add    r14d,0x1
    639e:	call   5960 <strtoul@plt>
    63a3:	mov    DWORD PTR [rsp+0x6c],0x1
    63ab:	mov    QWORD PTR [rip+0x1fb16],rax        # 25ec8 <opt_random_bytes>
    63b2:	jmp    5be8 <main+0x168>
    63b7:	mov    DWORD PTR [rsp+0x78],0x1
    63bf:	or     r15d,0x2
    63c3:	add    r14d,0x1
    63c7:	jmp    5be8 <main+0x168>
    63cc:	lea    rax,[rip+0x1cc4d]        # 23020 <c_initialize_args_OS>
    63d3:	mov    QWORD PTR [rip+0x1fa96],rax        # 25e70 <c_initialize_args_ptr>
    63da:	jmp    5be8 <main+0x168>
    63df:	mov    eax,DWORD PTR [rip+0x1f8db]        # 25cc0 <test_threads_num>
    63e5:	cmp    eax,0x9
    63e8:	jg     8d05 <main+0x3285>
    63ee:	movsxd rdx,eax
    63f1:	lea    rcx,[rip+0x1f8e8]        # 25ce0 <test_threads_datas>
    63f8:	mov    DWORD PTR [rsp+0xc],0x1
    6400:	add    r14d,0x1
    6404:	shl    rdx,0x5
    6408:	add    rdx,rcx
    640b:	mov    rcx,QWORD PTR [rip+0x1f1ae]        # 255c0 <optarg@@GLIBC_2.2.5>
    6412:	mov    DWORD PTR [rdx],eax
    6414:	add    eax,0x1
    6417:	mov    QWORD PTR [rdx+0x8],rcx
    641b:	mov    DWORD PTR [rip+0x1f89f],eax        # 25cc0 <test_threads_num>
    6421:	jmp    5be8 <main+0x168>
    6426:	mov    DWORD PTR [rsp+0x18],0x1
    642e:	add    r14d,0x1
    6432:	jmp    5be8 <main+0x168>
    6437:	mov    DWORD PTR [rsp+0x38],0x1
    643f:	or     r15d,0x2
    6443:	add    r14d,0x1
    6447:	jmp    5be8 <main+0x168>
    644c:	mov    DWORD PTR [rsp+0x3c],0x1
    6454:	or     r15d,0x2
    6458:	add    r14d,0x1
    645c:	jmp    5be8 <main+0x168>
    6461:	mov    DWORD PTR [rsp+0x10],0x1
    6469:	or     r15d,0x2
    646d:	add    r14d,0x1
    6471:	jmp    5be8 <main+0x168>
    6476:	mov    DWORD PTR [rsp+0x14],0x1
    647e:	or     r15d,0x2
    6482:	add    r14d,0x1
    6486:	jmp    5be8 <main+0x168>
    648b:	nop    DWORD PTR [rax+rax*1+0x0]
    6490:	cmp    DWORD PTR [rip+0x1f122],ebp        # 255b8 <optind@@GLIBC_2.2.5>
    6496:	jl     8cc7 <main+0x3247>
    649c:	test   r14d,r14d
    649f:	je     7726 <main+0x1ca6>
    64a5:	lea    rax,[rsp+0xd0]
    64ad:	mov    rdi,QWORD PTR [rip+0x1ee6c]        # 25320 <opt_module>
    64b4:	mov    QWORD PTR [rsp+0xd0],0x0
    64c0:	mov    rsi,rax
    64c3:	mov    QWORD PTR [rsp+0x48],rax
    64c8:	call   165f0 <C_LoadModule>
    64cd:	mov    QWORD PTR [rip+0x1f9c4],rax        # 25e98 <module>
    64d4:	test   rax,rax
    64d7:	je     8cbb <main+0x323b>
    64dd:	mov    rax,QWORD PTR [rsp+0xd0]
    64e5:	mov    r11d,DWORD PTR [rsp+0x24]
    64ea:	mov    QWORD PTR [rip+0x1f99f],rax        # 25e90 <p11>
    64f1:	test   r11d,r11d
    64f4:	jne    6997 <main+0xf17>
    64fa:	mov    r8d,DWORD PTR [rsp+0xc]
    64ff:	test   r8d,r8d
    6502:	jne    6794 <main+0xd14>
    6508:	mov    rax,QWORD PTR [rip+0x1f981]        # 25e90 <p11>
    650f:	mov    rdi,QWORD PTR [rip+0x1f95a]        # 25e70 <c_initialize_args_ptr>
    6516:	call   QWORD PTR [rax+0x8]
    6519:	test   rax,rax
    651c:	mov    rbp,rax
    651f:	setne  bl
    6522:	jne    68ec <main+0xe6c>
    6528:	mov    edi,DWORD PTR [rsp+0x18]
    652c:	test   edi,edi
    652e:	jne    694f <main+0xecf>
    6534:	mov    esi,DWORD PTR [rsp+0x34]
    6538:	test   esi,esi
    653a:	jne    6a79 <main+0xff9>
    6540:	mov    esi,DWORD PTR [rsp]
    6543:	mov    edi,DWORD PTR [rsp+0x30]
    6547:	call   14c20 <list_slots.constprop.0>
    654c:	mov    ecx,DWORD PTR [rip+0x1f98e]        # 25ee0 <opt_test_hotplug>
    6552:	test   ecx,ecx
    6554:	jne    6a63 <main+0xfe3>
    655a:	mov    rax,QWORD PTR [rip+0x1f91f]        # 25e80 <p11_num_slots>
    6561:	test   rax,rax
    6564:	je     70ce <main+0x164e>
    656a:	mov    edx,DWORD PTR [rip+0x1fbf0]        # 26160 <opt_slot_set>
    6570:	test   edx,edx
    6572:	jne    657e <main+0xafe>
    6574:	cmp    DWORD PTR [rsp],r14d
    6578:	jl     7147 <main+0x16c7>
    657e:	cmp    DWORD PTR [rsp+0x50],0x0
    6583:	jne    6c83 <main+0x1203>
    6589:	mov    eax,DWORD PTR [rsp+0x28]
    658d:	or     eax,DWORD PTR [rsp+0x10]
    6591:	or     eax,DWORD PTR [rsp+0x38]
    6595:	or     eax,DWORD PTR [rsp+0x3c]
    6599:	or     eax,DWORD PTR [rsp+0x14]
    659d:	jne    6c4d <main+0x11cd>
    65a3:	cmp    DWORD PTR [rsp+0x20],0x0
    65a8:	jne    6b6c <main+0x10ec>
    65ae:	test   r15d,r15d
    65b1:	je     65ec <main+0xb6c>
    65b3:	and    r15d,0x2
    65b7:	mov    rdi,QWORD PTR [rip+0x1fb9a]        # 26158 <opt_slot>
    65be:	lea    r8,[rsp+0x98]
    65c6:	cmp    r15d,0x1
    65ca:	sbb    eax,eax
    65cc:	xor    ecx,ecx
    65ce:	xor    edx,edx
    65d0:	and    eax,0xfffffffe
    65d3:	add    eax,0x6
    65d6:	movsxd rsi,eax
    65d9:	mov    rax,QWORD PTR [rip+0x1f8b0]        # 25e90 <p11>
    65e0:	call   QWORD PTR [rax+0x68]
    65e3:	test   rax,rax
    65e6:	jne    8d47 <main+0x32c7>
    65ec:	cmp    DWORD PTR [rsp+0x8],0x0
    65f1:	je     6627 <main+0xba7>
    65f3:	cmp    DWORD PTR [rip+0x1ca62],0xffffffff        # 2305c <opt_login_type>
    65fa:	jne    6609 <main+0xb89>
    65fc:	mov    eax,DWORD PTR [rsp+0x58]
    6600:	xor    eax,0x1
    6603:	mov    DWORD PTR [rip+0x1ca53],eax        # 2305c <opt_login_type>
    6609:	mov    esi,DWORD PTR [rip+0x1ca4d]        # 2305c <opt_login_type>
    660f:	mov    rdi,QWORD PTR [rsp+0x98]
    6617:	call   9820 <login>
    661c:	mov    r13d,eax
    661f:	test   eax,eax
    6621:	jne    6768 <main+0xce8>
    6627:	cmp    DWORD PTR [rsp+0x44],0x0
    662c:	jne    748e <main+0x1a0e>
    6632:	cmp    DWORD PTR [rsp+0x40],0x0
    6637:	je     6c94 <main+0x1214>
    663d:	mov    ebx,DWORD PTR [rip+0x1ca19]        # 2305c <opt_login_type>
    6643:	cmp    ebx,0xffffffff
    6646:	je     6651 <main+0xbd1>
    6648:	cmp    ebx,0x2
    664b:	jne    8c1d <main+0x319d>
    6651:	mov    rdi,QWORD PTR [rip+0x1fb00]        # 26158 <opt_slot>
    6658:	lea    rsi,[rsp+0x1c0]
    6660:	mov    QWORD PTR [rsp+0xc0],0x0
    666c:	mov    QWORD PTR [rsp+0xc8],0x0
    6678:	mov    r13,QWORD PTR [rsp+0x98]
    6680:	mov    QWORD PTR [rsp+0xd0],0x0
    668c:	call   9190 <get_token_info>
    6691:	cmp    ebx,0x2
    6694:	je     7068 <main+0x15e8>
    669a:	cmp    ebx,0xffffffff
    669d:	jne    6763 <main+0xce3>
    66a3:	mov    rax,QWORD PTR [rip+0x1f92e]        # 25fd8 <opt_puk>
    66aa:	mov    QWORD PTR [rsp+0xc0],rax
    66b2:	mov    rax,QWORD PTR [rsp+0x220]
    66ba:	test   ah,0x1
    66bd:	jne    66ce <main+0xc4e>
    66bf:	cmp    QWORD PTR [rsp+0xc0],0x0
    66c8:	je     79d7 <main+0x1f57>
    66ce:	mov    rbp,QWORD PTR [rip+0x1f8fb]        # 25fd0 <opt_new_pin>
    66d5:	and    eax,0x100
    66da:	or     rax,rbp
    66dd:	mov    QWORD PTR [rsp+0xc8],rbp
    66e5:	je     8746 <main+0x2cc6>
    66eb:	mov    rax,QWORD PTR [rip+0x1f79e]        # 25e90 <p11>
    66f2:	mov    r9,QWORD PTR [rax+0x60]
    66f6:	test   rbp,rbp
    66f9:	je     820e <main+0x278e>
    66ff:	xor    eax,eax
    6701:	or     rcx,0xffffffffffffffff
    6705:	mov    rdi,rbp
    6708:	repnz scas al,BYTE PTR es:[rdi]
    670a:	mov    rax,rcx
    670d:	not    rax
    6710:	lea    r8,[rax-0x1]
    6714:	mov    rsi,QWORD PTR [rsp+0xc0]
    671c:	test   rsi,rsi
    671f:	je     8207 <main+0x2787>
    6725:	xor    eax,eax
    6727:	or     rcx,0xffffffffffffffff
    672b:	mov    rdi,rsi
    672e:	repnz scas al,BYTE PTR es:[rdi]
    6730:	mov    rax,rcx
    6733:	not    rax
    6736:	lea    rdx,[rax-0x1]
    673a:	mov    rcx,rbp
    673d:	mov    rdi,r13
    6740:	call   r9
    6743:	mov    rsi,rax
    6746:	test   rax,rax
    6749:	jne    8aa9 <main+0x3029>
    674f:	lea    rdi,[rip+0x124a4]        # 18bfa <_IO_stdin_used+0x1bfa>
    6756:	call   5600 <puts@plt>
    675b:	mov    DWORD PTR [rsp+0x40],0x0
    6763:	mov    r13d,DWORD PTR [rsp+0x40]
    6768:	mov    rax,QWORD PTR [rsp+0x2f8]
    6770:	xor    rax,QWORD PTR fs:0x28
    6779:	jne    8c8b <main+0x320b>
    677f:	add    rsp,0x308
    6786:	mov    eax,r13d
    6789:	pop    rbx
    678a:	pop    rbp
    678b:	pop    r12
    678d:	pop    r13
    678f:	pop    r14
    6791:	pop    r15
    6793:	ret    
    6794:	cmp    DWORD PTR [rip+0x1f525],0x0        # 25cc0 <test_threads_num>
    679b:	jle    68d2 <main+0xe52>
    67a1:	lea    rbp,[rip+0x1f678]        # 25e20 <test_threads_handles>
    67a8:	lea    rbx,[rip+0x1f531]        # 25ce0 <test_threads_datas>
    67af:	xor    r13d,r13d
    67b2:	lea    r12,[rsp+0x1c0]
    67ba:	jmp    67e3 <main+0xd63>
    67bc:	nop    DWORD PTR [rax+0x0]
    67c0:	add    r13d,0x1
    67c4:	add    rbp,0x8
    67c8:	add    rbx,0x20
    67cc:	cmp    r13d,DWORD PTR [rip+0x1f4ed]        # 25cc0 <test_threads_num>
    67d3:	jge    68d2 <main+0xe52>
    67d9:	cmp    r13d,0xa
    67dd:	je     68d2 <main+0xe52>
    67e3:	mov    rdi,r12
    67e6:	call   5760 <pthread_attr_init@plt>
    67eb:	xor    esi,esi
    67ed:	mov    rdi,r12
    67f0:	call   5800 <pthread_attr_setdetachstate@plt>
    67f5:	mov    rcx,rbx
    67f8:	mov    rsi,r12
    67fb:	mov    rdi,rbp
    67fe:	lea    rdx,[rip+0x35eb]        # 9df0 <test_threads_run>
    6805:	call   55b0 <pthread_create@plt>
    680a:	test   eax,eax
    680c:	je     67c0 <main+0xd40>
    680e:	mov    rdi,QWORD PTR [rip+0x1edcb]        # 255e0 <stderr@@GLIBC_2.2.5>
    6815:	mov    ecx,eax
    6817:	mov    r8d,r13d
    681a:	xor    eax,eax
    681c:	lea    rdx,[rip+0x1601d]        # 1c840 <_IO_stdin_used+0x5840>
    6823:	mov    esi,0x1
    6828:	call   59b0 <__fprintf_chk@plt>
    682d:	jmp    67c0 <main+0xd40>
    682f:	mov    rdi,rdx
    6832:	lea    rsi,[rip+0x12190]        # 189c9 <_IO_stdin_used+0x19c9>
    6839:	mov    QWORD PTR [rsp+0x48],rdx
    683e:	call   57a0 <strcmp@plt>
    6843:	mov    rdx,QWORD PTR [rsp+0x48]
    6848:	test   eax,eax
    684a:	je     7058 <main+0x15d8>
    6850:	mov    rdi,rdx
    6853:	lea    rsi,[rip+0x12177]        # 189d1 <_IO_stdin_used+0x19d1>
    685a:	mov    QWORD PTR [rsp+0x48],rdx
    685f:	call   57a0 <strcmp@plt>
    6864:	mov    rdx,QWORD PTR [rsp+0x48]
    6869:	test   eax,eax
    686b:	jne    768f <main+0x1c0f>
    6871:	mov    QWORD PTR [rip+0x1c7e4],0x4        # 23060 <opt_object_class>
    687c:	jmp    5be8 <main+0x168>
    6881:	mov    rdi,rdx
    6884:	lea    rsi,[rip+0x121a8]        # 18a33 <_IO_stdin_used+0x1a33>
    688b:	mov    QWORD PTR [rsp+0x48],rdx
    6890:	call   57a0 <strcmp@plt>
    6895:	mov    rdx,QWORD PTR [rsp+0x48]
    689a:	test   eax,eax
    689c:	je     7049 <main+0x15c9>
    68a2:	mov    rdi,rdx
    68a5:	lea    rsi,[rip+0x1218c]        # 18a38 <_IO_stdin_used+0x1a38>
    68ac:	mov    QWORD PTR [rsp+0x48],rdx
    68b1:	call   57a0 <strcmp@plt>
    68b6:	mov    rdx,QWORD PTR [rsp+0x48]
    68bb:	test   eax,eax
    68bd:	jne    8a9a <main+0x301a>
    68c3:	mov    DWORD PTR [rip+0x1c78f],0x2        # 2305c <opt_login_type>
    68cd:	jmp    5be8 <main+0x168>
    68d2:	mov    rax,QWORD PTR [rip+0x1f5b7]        # 25e90 <p11>
    68d9:	mov    rdi,QWORD PTR [rip+0x1f590]        # 25e70 <c_initialize_args_ptr>
    68e0:	call   QWORD PTR [rax+0x8]
    68e3:	test   rax,rax
    68e6:	mov    rbp,rax
    68e9:	setne  bl
    68ec:	mov    rdi,rbp
    68ef:	call   8e50 <CKR2Str>
    68f4:	cmp    QWORD PTR [rip+0x1f574],0x0        # 25e70 <c_initialize_args_ptr>
    68fc:	lea    rcx,[rip+0x12086]        # 18989 <_IO_stdin_used+0x1989>
    6903:	mov    rdi,QWORD PTR [rip+0x1ecd6]        # 255e0 <stderr@@GLIBC_2.2.5>
    690a:	mov    r8,rax
    690d:	lea    rax,[rip+0x12087]        # 1899b <_IO_stdin_used+0x199b>
    6914:	lea    rdx,[rip+0x12184]        # 18a9f <_IO_stdin_used+0x1a9f>
    691b:	mov    esi,0x1
    6920:	cmove  rcx,rax
    6924:	xor    eax,eax
    6926:	call   59b0 <__fprintf_chk@plt>
    692b:	cmp    rbp,0x191
    6932:	je     6528 <main+0xaa8>
    6938:	test   bl,bl
    693a:	je     6528 <main+0xaa8>
    6940:	mov    rsi,rbp
    6943:	lea    rdi,[rip+0x11dd0]        # 1871a <_IO_stdin_used+0x171a>
    694a:	call   9140 <p11_fatal>
    694f:	call   5a20 <fork@plt>
    6954:	mov    edi,eax
    6956:	test   eax,eax
    6958:	je     758f <main+0x1b0f>
    695e:	js     8c90 <main+0x3210>
    6964:	mov    rsi,QWORD PTR [rsp+0x48]
    6969:	xor    edx,edx
    696b:	call   58c0 <waitpid@plt>
    6970:	mov    eax,DWORD PTR [rsp+0xd0]
    6977:	mov    edx,eax
    6979:	movzx  ecx,ah
    697c:	and    edx,0x7f
    697f:	or     ecx,edx
    6981:	je     6534 <main+0xab4>
    6987:	mov    esi,eax
    6989:	lea    rdi,[rip+0x15f20]        # 1c8b0 <_IO_stdin_used+0x58b0>
    6990:	xor    eax,eax
    6992:	call   15f90 <util_fatal>
    6997:	mov    QWORD PTR [rsp+0xd0],0x0
    69a3:	cmp    BYTE PTR [rax],0x2
    69a6:	jbe    8c3f <main+0x31bf>
    69ac:	xor    edi,edi
    69ae:	mov    rsi,QWORD PTR [rsp+0x48]
    69b3:	call   QWORD PTR [rax+0x228]
    69b9:	test   rax,rax
    69bc:	jne    8c66 <main+0x31e6>
    69c2:	imul   rdi,QWORD PTR [rsp+0xd0],0x18
    69cb:	call   5840 <malloc@plt>
    69d0:	mov    rbp,rax
    69d3:	test   rax,rax
    69d6:	je     8c75 <main+0x31f5>
    69dc:	mov    rdi,rax
    69df:	mov    rax,QWORD PTR [rip+0x1f4aa]        # 25e90 <p11>
    69e6:	mov    rsi,QWORD PTR [rsp+0x48]
    69eb:	call   QWORD PTR [rax+0x228]
    69f1:	mov    r13,rax
    69f4:	test   rax,rax
    69f7:	jne    8d29 <main+0x32a9>
    69fd:	cmp    QWORD PTR [rsp+0xd0],0x0
    6a06:	lea    rbx,[rip+0x15df3]        # 1c800 <_IO_stdin_used+0x5800>
    6a0d:	je     64fa <main+0xa7a>
    6a13:	nop    DWORD PTR [rax+rax*1+0x0]
    6a18:	mov    r9,QWORD PTR [rbp+0x8]
    6a1c:	sub    rsp,0x8
    6a20:	mov    rdx,QWORD PTR [rbp+0x0]
    6a24:	mov    rsi,rbx
    6a27:	mov    edi,0x1
    6a2c:	xor    eax,eax
    6a2e:	add    r13,0x1
    6a32:	add    rbp,0x18
    6a36:	movzx  r8d,BYTE PTR [r9+0x1]
    6a3b:	movzx  ecx,BYTE PTR [r9]
    6a3f:	push   QWORD PTR [rbp-0x8]
    6a42:	call   58a0 <__printf_chk@plt>
    6a47:	pop    r9
    6a49:	pop    r10
    6a4b:	cmp    r13,QWORD PTR [rsp+0xd0]
    6a53:	jb     6a18 <main+0xf98>
    6a55:	jmp    64fa <main+0xa7a>
    6a5a:	mov    ebp,DWORD PTR [rsp+0x48]
    6a5e:	jmp    5be8 <main+0x168>
    6a63:	xor    edi,edi
    6a65:	call   14f70 <test_card_detection>
    6a6a:	mov    edi,0x1
    6a6f:	call   14f70 <test_card_detection>
    6a74:	jmp    655a <main+0xada>
    6a79:	mov    rax,QWORD PTR [rip+0x1f410]        # 25e90 <p11>
    6a80:	lea    r12,[rsp+0x1c0]
    6a88:	mov    rdi,r12
    6a8b:	call   QWORD PTR [rax+0x18]
    6a8e:	mov    rbp,rax
    6a91:	test   rax,rax
    6a94:	jne    8d38 <main+0x32b8>
    6a9a:	movzx  edx,BYTE PTR [rsp+0x1c0]
    6aa2:	movzx  ecx,BYTE PTR [rsp+0x1c1]
    6aaa:	lea    rsi,[rip+0x12048]        # 18af9 <_IO_stdin_used+0x1af9>
    6ab1:	xor    eax,eax
    6ab3:	mov    edi,0x1
    6ab8:	call   58a0 <__printf_chk@plt>
    6abd:	mov    eax,0x20
    6ac2:	lea    rdx,[rsp+0x1c2]
    6aca:	nop    WORD PTR [rax+rax*1+0x0]
    6ad0:	mov    rcx,rax
    6ad3:	lea    rax,[rax-0x1]
    6ad7:	cmp    BYTE PTR [rdx+rax*1],0x20
    6adb:	jne    7460 <main+0x19e0>
    6ae1:	test   rax,rax
    6ae4:	jne    6ad0 <main+0x1050>
    6ae6:	lea    rbx,[rip+0x1ebd3]        # 256c0 <buffer.11770>
    6aed:	lea    rsi,[rip+0x1201d]        # 18b11 <_IO_stdin_used+0x1b11>
    6af4:	mov    edi,0x1
    6af9:	mov    BYTE PTR [rbx+rax*1],0x0
    6afd:	mov    rdx,rbx
    6b00:	xor    eax,eax
    6b02:	call   58a0 <__printf_chk@plt>
    6b07:	mov    eax,0x20
    6b0c:	movzx  r8d,BYTE PTR [rsp+0x211]
    6b15:	movzx  r9d,BYTE PTR [rsp+0x210]
    6b1e:	lea    rdx,[rsp+0x1f0]
    6b26:	cs nop WORD PTR [rax+rax*1+0x0]
    6b30:	mov    rcx,rax
    6b33:	lea    rax,[rax-0x1]
    6b37:	cmp    BYTE PTR [rdx+rax*1],0x20
    6b3b:	jne    7434 <main+0x19b4>
    6b41:	test   rax,rax
    6b44:	jne    6b30 <main+0x10b0>
    6b46:	mov    BYTE PTR [rbx+rax*1],0x0
    6b4a:	mov    ecx,r9d
    6b4d:	xor    eax,eax
    6b4f:	lea    rdx,[rip+0x1eb6a]        # 256c0 <buffer.11770>
    6b56:	lea    rsi,[rip+0x15d7b]        # 1c8d8 <_IO_stdin_used+0x58d8>
    6b5d:	mov    edi,0x1
    6b62:	call   58a0 <__printf_chk@plt>
    6b67:	jmp    6540 <main+0xac0>
    6b6c:	mov    r9,QWORD PTR [rip+0x1f47d]        # 25ff0 <opt_object_label>
    6b73:	mov    rbp,QWORD PTR [rip+0x1f5de]        # 26158 <opt_slot>
    6b7a:	mov    QWORD PTR [rsp+0xa8],0x0
    6b86:	mov    QWORD PTR [rsp+0xb0],0x0
    6b92:	test   r9,r9
    6b95:	je     8cad <main+0x322d>
    6b9b:	lea    r14,[rsp+0x2b0]
    6ba3:	lea    r8,[rip+0x11fc5]        # 18b6f <_IO_stdin_used+0x1b6f>
    6baa:	mov    ecx,0x21
    6baf:	xor    eax,eax
    6bb1:	mov    edx,0x1
    6bb6:	mov    esi,0x21
    6bbb:	mov    rdi,r14
    6bbe:	call   5580 <__snprintf_chk@plt>
    6bc3:	lea    rsi,[rsp+0xf0]
    6bcb:	mov    rdi,rbp
    6bce:	call   9190 <get_token_info>
    6bd3:	mov    r13,QWORD PTR [rip+0x1f406]        # 25fe0 <opt_so_pin>
    6bda:	test   r13,r13
    6bdd:	je     707d <main+0x15fd>
    6be3:	mov    QWORD PTR [rsp+0xa8],r13
    6beb:	mov    DWORD PTR [rsp+0x20],0x0
    6bf3:	xor    eax,eax
    6bf5:	or     rcx,0xffffffffffffffff
    6bf9:	mov    rdi,r13
    6bfc:	mov    rsi,r13
    6bff:	repnz scas al,BYTE PTR es:[rdi]
    6c01:	mov    rdi,rbp
    6c04:	mov    rax,rcx
    6c07:	mov    rcx,r14
    6c0a:	not    rax
    6c0d:	lea    rdx,[rax-0x1]
    6c11:	mov    rax,QWORD PTR [rip+0x1f278]        # 25e90 <p11>
    6c18:	call   QWORD PTR [rax+0x50]
    6c1b:	test   rax,rax
    6c1e:	jne    8a8b <main+0x300b>
    6c24:	lea    rdi,[rip+0x15ea5]        # 1cad0 <_IO_stdin_used+0x5ad0>
    6c2b:	call   5600 <puts@plt>
    6c30:	cmp    DWORD PTR [rsp+0x20],0x0
    6c35:	je     65ae <main+0xb2e>
    6c3b:	mov    rdi,QWORD PTR [rsp+0xa8]
    6c43:	call   5590 <free@plt>
    6c48:	jmp    65ae <main+0xb2e>
    6c4d:	mov    rdi,QWORD PTR [rip+0x1f504]        # 26158 <opt_slot>
    6c54:	lea    rsi,[rsp+0x1c0]
    6c5c:	call   9190 <get_token_info>
    6c61:	mov    rax,QWORD PTR [rsp+0x220]
    6c69:	test   ah,0x4
    6c6c:	je     8cf7 <main+0x3277>
    6c72:	and    eax,0x4
    6c75:	cmp    rax,0x1
    6c79:	sbb    DWORD PTR [rsp+0x8],0xffffffff
    6c7e:	jmp    65a3 <main+0xb23>
    6c83:	mov    rdi,QWORD PTR [rip+0x1f4ce]        # 26158 <opt_slot>
    6c8a:	call   a400 <list_mechs>
    6c8f:	jmp    6589 <main+0xb09>
    6c94:	cmp    DWORD PTR [rsp+0x58],0x0
    6c99:	jne    7742 <main+0x1cc2>
    6c9f:	cmp    DWORD PTR [rip+0x1f472],0x0        # 26118 <opt_mechanism_used>
    6ca6:	mov    rsi,QWORD PTR [rip+0x1f473]        # 26120 <opt_mechanism>
    6cad:	lea    rax,[rip+0x1c72c]        # 233e0 <p11_mechanisms>
    6cb4:	jne    7022 <main+0x15a2>
    6cba:	mov    eax,DWORD PTR [rsp+0x28]
    6cbe:	or     eax,DWORD PTR [rsp+0x2c]
    6cc2:	mov    r8,QWORD PTR [rip+0x1f337]        # 26000 <opt_object_id_len>
    6cc9:	jne    7a75 <main+0x1ff5>
    6ccf:	cmp    DWORD PTR [rsp+0x14],0x0
    6cd4:	lea    r13,[rsp+0xa0]
    6cdc:	jne    7ab7 <main+0x2037>
    6ce2:	cmp    DWORD PTR [rsp+0x10],0x0
    6ce7:	lea    r13,[rsp+0xa0]
    6cef:	jne    7b25 <main+0x20a5>
    6cf5:	cmp    DWORD PTR [rsp+0x54],0x0
    6cfa:	lea    r13,[rsp+0xa0]
    6d02:	jne    7b6a <main+0x20ea>
    6d08:	cmp    DWORD PTR [rsp+0x3c],0x0
    6d0d:	jne    7cbd <main+0x223d>
    6d13:	cmp    DWORD PTR [rsp+0x38],0x0
    6d18:	jne    7cab <main+0x222b>
    6d1e:	cmp    DWORD PTR [rsp+0x2c],0x0
    6d23:	jne    8af9 <main+0x3079>
    6d29:	cmp    DWORD PTR [rsp+0x84],0x0
    6d31:	jne    7c10 <main+0x2190>
    6d37:	cmp    DWORD PTR [rsp+0x28],0x0
    6d3c:	jne    7f1a <main+0x249a>
    6d42:	cmp    DWORD PTR [rsp+0x54],0x0
    6d47:	jne    7ef9 <main+0x2479>
    6d4d:	cmp    DWORD PTR [rsp+0x14],0x0
    6d52:	jne    7ed8 <main+0x2458>
    6d58:	cmp    DWORD PTR [rsp+0x10],0x0
    6d5d:	jne    7eb7 <main+0x2437>
    6d63:	cmp    DWORD PTR [rsp+0x80],0x0
    6d6b:	jne    7f68 <main+0x24e8>
    6d71:	cmp    DWORD PTR [rsp+0x7c],0x0
    6d76:	jne    7f3b <main+0x24bb>
    6d7c:	cmp    DWORD PTR [rsp+0x78],0x0
    6d81:	jne    80f7 <main+0x2677>
    6d87:	cmp    DWORD PTR [rsp+0x88],0x0
    6d8f:	je     6dac <main+0x132c>
    6d91:	cmp    QWORD PTR [rip+0x1f36f],0x0        # 26108 <opt_object_class_str>
    6d99:	je     8be4 <main+0x3164>
    6d9f:	mov    rdi,QWORD PTR [rsp+0x98]
    6da7:	call   12140 <write_object>
    6dac:	cmp    DWORD PTR [rsp+0x74],0x0
    6db1:	je     6de6 <main+0x1366>
    6db3:	cmp    QWORD PTR [rip+0x1f34d],0x0        # 26108 <opt_object_class_str>
    6dbb:	je     8bb5 <main+0x3135>
    6dc1:	cmp    QWORD PTR [rip+0x1f237],0x0        # 26000 <opt_object_id_len>
    6dc9:	jne    6dd9 <main+0x1359>
    6dcb:	cmp    QWORD PTR [rip+0x1f21d],0x0        # 25ff0 <opt_object_label>
    6dd3:	je     86b4 <main+0x2c34>
    6dd9:	mov    rdi,QWORD PTR [rsp+0x98]
    6de1:	call   b8b0 <read_object>
    6de6:	cmp    DWORD PTR [rsp+0x70],0x0
    6deb:	je     6e20 <main+0x13a0>
    6ded:	cmp    QWORD PTR [rip+0x1f313],0x0        # 26108 <opt_object_class_str>
    6df5:	je     8b9b <main+0x311b>
    6dfb:	cmp    QWORD PTR [rip+0x1f1fd],0x0        # 26000 <opt_object_id_len>
    6e03:	jne    6e13 <main+0x1393>
    6e05:	cmp    QWORD PTR [rip+0x1f1e3],0x0        # 25ff0 <opt_object_label>
    6e0d:	je     864b <main+0x2bcb>
    6e13:	mov    rdi,QWORD PTR [rsp+0x98]
    6e1b:	call   12bb0 <delete_object>
    6e20:	cmp    DWORD PTR [rsp+0x68],0x0
    6e25:	je     6ef5 <main+0x1475>
    6e2b:	cmp    QWORD PTR [rip+0x1f2d5],0x0        # 26108 <opt_object_class_str>
    6e33:	je     8be4 <main+0x3164>
    6e39:	mov    r8,QWORD PTR [rip+0x1f1c0]        # 26000 <opt_object_id_len>
    6e40:	test   r8,r8
    6e43:	je     8b8d <main+0x310d>
    6e49:	lea    rax,[rip+0x1f1d0]        # 26020 <new_object_id>
    6e50:	mov    rdx,QWORD PTR [rsp+0x48]
    6e55:	xor    r9d,r9d
    6e58:	mov    rbp,QWORD PTR [rsp+0x98]
    6e60:	mov    QWORD PTR [rsp+0x1c8],rax
    6e68:	mov    rsi,QWORD PTR [rip+0x1c1f1]        # 23060 <opt_object_class>
    6e6f:	lea    rcx,[rip+0x1f22a]        # 260a0 <opt_object_id>
    6e76:	mov    rax,QWORD PTR [rip+0x1f17b]        # 25ff8 <new_object_id_len>
    6e7d:	mov    rdi,rbp
    6e80:	mov    QWORD PTR [rsp+0x1c0],0x102
    6e8c:	mov    QWORD PTR [rsp+0x1d0],rax
    6e94:	call   b100 <find_object>
    6e99:	test   eax,eax
    6e9b:	je     85e5 <main+0x2b65>
    6ea1:	mov    rax,QWORD PTR [rip+0x1efe8]        # 25e90 <p11>
    6ea8:	mov    rsi,QWORD PTR [rsp+0xd0]
    6eb0:	mov    ecx,0x1
    6eb5:	mov    rdi,rbp
    6eb8:	lea    rdx,[rsp+0x1c0]
    6ec0:	call   QWORD PTR [rax+0xd0]
    6ec6:	mov    rsi,rax
    6ec9:	test   rax,rax
    6ecc:	jne    8ba9 <main+0x3129>
    6ed2:	lea    rsi,[rip+0x11ded]        # 18cc6 <_IO_stdin_used+0x1cc6>
    6ed9:	mov    edi,0x1
    6ede:	xor    eax,eax
    6ee0:	call   58a0 <__printf_chk@plt>
    6ee5:	mov    rsi,QWORD PTR [rsp+0xd0]
    6eed:	mov    rdi,rbp
    6ef0:	call   e9f0 <show_object>
    6ef5:	cmp    DWORD PTR [rsp+0x64],0x0
    6efa:	jne    7ce4 <main+0x2264>
    6f00:	cmp    DWORD PTR [rsp+0x60],0x0
    6f05:	je     7be1 <main+0x2161>
    6f0b:	cmp    DWORD PTR [rsp+0x8],0x0
    6f10:	jne    812d <main+0x26ad>
    6f16:	mov    rcx,QWORD PTR [rip+0x1e6c3]        # 255e0 <stderr@@GLIBC_2.2.5>
    6f1d:	mov    edx,0x14
    6f22:	mov    esi,0x1
    6f27:	lea    rdi,[rip+0x11de0]        # 18d0e <_IO_stdin_used+0x1d0e>
    6f2e:	call   59a0 <fwrite@plt>
    6f33:	cmp    DWORD PTR [rsp+0x5c],0x0
    6f38:	je     6f57 <main+0x14d7>
    6f3a:	mov    rcx,QWORD PTR [rip+0x1e69f]        # 255e0 <stderr@@GLIBC_2.2.5>
    6f41:	mov    edx,0x14
    6f46:	mov    esi,0x1
    6f4b:	lea    rdi,[rip+0x11dbc]        # 18d0e <_IO_stdin_used+0x1d0e>
    6f52:	call   59a0 <fwrite@plt>
    6f57:	xor    r13d,r13d
    6f5a:	cmp    DWORD PTR [rsp+0x6c],0x0
    6f5f:	je     70f1 <main+0x1671>
    6f65:	mov    r12,QWORD PTR [rip+0x1ef5c]        # 25ec8 <opt_random_bytes>
    6f6c:	mov    r13,QWORD PTR [rsp+0x98]
    6f74:	mov    rdi,r12
    6f77:	call   5840 <malloc@plt>
    6f7c:	mov    rbp,rax
    6f7f:	test   rax,rax
    6f82:	je     8ab5 <main+0x3035>
    6f88:	mov    rsi,rax
    6f8b:	mov    rax,QWORD PTR [rip+0x1eefe]        # 25e90 <p11>
    6f92:	mov    rdx,r12
    6f95:	mov    rdi,r13
    6f98:	call   QWORD PTR [rax+0x208]
    6f9e:	test   rax,rax
    6fa1:	jne    8acf <main+0x304f>
    6fa7:	mov    rdi,QWORD PTR [rip+0x1f1c2]        # 26170 <opt_output>
    6fae:	test   rdi,rdi
    6fb1:	je     84a8 <main+0x2a28>
    6fb7:	lea    rsi,[rip+0x10c7b]        # 17c39 <_IO_stdin_used+0xc39>
    6fbe:	call   5900 <fopen@plt>
    6fc3:	mov    r12,rax
    6fc6:	test   rax,rax
    6fc9:	je     8a40 <main+0x2fc0>
    6fcf:	mov    rdx,QWORD PTR [rip+0x1eef2]        # 25ec8 <opt_random_bytes>
    6fd6:	mov    rcx,r12
    6fd9:	mov    esi,0x1
    6fde:	mov    rdi,rbp
    6fe1:	call   59a0 <fwrite@plt>
    6fe6:	cmp    rax,QWORD PTR [rip+0x1eedb]        # 25ec8 <opt_random_bytes>
    6fed:	jne    8a2b <main+0x2fab>
    6ff3:	cmp    QWORD PTR [rip+0x1f175],0x0        # 26170 <opt_output>
    6ffb:	je     7005 <main+0x1585>
    6ffd:	mov    rdi,r12
    7000:	call   5670 <fclose@plt>
    7005:	mov    rdi,rbp
    7008:	xor    r13d,r13d
    700b:	call   5590 <free@plt>
    7010:	jmp    70f1 <main+0x1671>
    7015:	cmp    rsi,QWORD PTR [rax]
    7018:	je     8216 <main+0x2796>
    701e:	add    rax,0x20
    7022:	cmp    QWORD PTR [rax+0x8],0x0
    7027:	jne    7015 <main+0x1595>
    7029:	cmp    DWORD PTR [rip+0x1f150],0x0        # 26180 <verbose>
    7030:	je     6cba <main+0x123a>
    7036:	lea    rdi,[rip+0x15bc3]        # 1cc00 <_IO_stdin_used+0x5c00>
    703d:	xor    eax,eax
    703f:	call   16190 <util_warn>
    7044:	jmp    6cba <main+0x123a>
    7049:	mov    DWORD PTR [rip+0x1c009],0x1        # 2305c <opt_login_type>
    7053:	jmp    5be8 <main+0x168>
    7058:	mov    QWORD PTR [rip+0x1bffd],0x3        # 23060 <opt_object_class>
    7063:	jmp    5be8 <main+0x168>
    7068:	mov    rax,QWORD PTR [rip+0x1ef79]        # 25fe8 <opt_pin>
    706f:	test   rax,rax
    7072:	jne    66aa <main+0xc2a>
    7078:	jmp    66a3 <main+0xc23>
    707d:	test   BYTE PTR [rsp+0x151],0x1
    7085:	je     78c1 <main+0x1e41>
    708b:	mov    rax,QWORD PTR [rip+0x1edfe]        # 25e90 <p11>
    7092:	mov    rsi,QWORD PTR [rsp+0xa8]
    709a:	mov    r8,QWORD PTR [rax+0x50]
    709e:	test   rsi,rsi
    70a1:	jne    8a64 <main+0x2fe4>
    70a7:	xor    edx,edx
    70a9:	xor    esi,esi
    70ab:	mov    rcx,r14
    70ae:	mov    rdi,rbp
    70b1:	call   r8
    70b4:	test   rax,rax
    70b7:	jne    8a8b <main+0x300b>
    70bd:	lea    rdi,[rip+0x15a0c]        # 1cad0 <_IO_stdin_used+0x5ad0>
    70c4:	call   5600 <puts@plt>
    70c9:	jmp    65ae <main+0xb2e>
    70ce:	mov    edx,0xa
    70d3:	mov    rcx,QWORD PTR [rip+0x1e506]        # 255e0 <stderr@@GLIBC_2.2.5>
    70da:	mov    esi,0x1
    70df:	lea    rdi,[rip+0x11a40]        # 18b26 <_IO_stdin_used+0x1b26>
    70e6:	mov    r13d,0x1
    70ec:	call   59a0 <fwrite@plt>
    70f1:	mov    rdi,QWORD PTR [rsp+0x98]
    70f9:	test   rdi,rdi
    70fc:	je     7111 <main+0x1691>
    70fe:	mov    rax,QWORD PTR [rip+0x1ed8b]        # 25e90 <p11>
    7105:	call   QWORD PTR [rax+0x70]
    7108:	test   rax,rax
    710b:	jne    8a55 <main+0x2fd5>
    7111:	cmp    DWORD PTR [rsp+0xc],0x0
    7116:	jne    7273 <main+0x17f3>
    711c:	mov    rax,QWORD PTR [rip+0x1ed6d]        # 25e90 <p11>
    7123:	test   rax,rax
    7126:	je     712d <main+0x16ad>
    7128:	xor    edi,edi
    712a:	call   QWORD PTR [rax+0x10]
    712d:	mov    rdi,QWORD PTR [rip+0x1ed64]        # 25e98 <module>
    7134:	test   rdi,rdi
    7137:	je     6768 <main+0xce8>
    713d:	call   16590 <C_UnloadModule>
    7142:	jmp    6768 <main+0xce8>
    7147:	mov    rbp,QWORD PTR [rip+0x1f002]        # 26150 <opt_slot_description>
    714e:	test   rbp,rbp
    7151:	je     75bf <main+0x1b3f>
    7157:	xor    eax,eax
    7159:	or     rcx,0xffffffffffffffff
    715d:	mov    rdi,rbp
    7160:	xor    ebx,ebx
    7162:	repnz scas al,BYTE PTR es:[rdi]
    7164:	lea    r12,[rsp+0x1c0]
    716c:	mov    DWORD PTR [rsp+0x18],r15d
    7171:	mov    r15,rbx
    7174:	lea    r13,[rip+0x1e544]        # 256bf <temp.11811+0x3f>
    717b:	lea    r14,[rsp+0x1bf]
    7183:	mov    rax,rcx
    7186:	not    rax
    7189:	sub    rax,0x1
    718d:	mov    QWORD PTR [rsp],rax
    7191:	jmp    71a9 <main+0x1729>
    7193:	nop    DWORD PTR [rax+rax*1+0x0]
    7198:	add    r15,0x1
    719c:	cmp    r15,QWORD PTR [rip+0x1ecdd]        # 25e80 <p11_num_slots>
    71a3:	jae    76dd <main+0x1c5d>
    71a9:	mov    rax,QWORD PTR [rip+0x1ecd8]        # 25e88 <p11_slots>
    71b0:	mov    rsi,r12
    71b3:	lea    rbx,[r15*8+0x0]
    71bb:	mov    rdi,QWORD PTR [rax+r15*8]
    71bf:	mov    rax,QWORD PTR [rip+0x1ecca]        # 25e90 <p11>
    71c6:	call   QWORD PTR [rax+0x30]
    71c9:	mov    edx,0x40
    71ce:	test   rax,rax
    71d1:	jne    7198 <main+0x1718>
    71d3:	nop    DWORD PTR [rax+rax*1+0x0]
    71d8:	mov    rsi,rdx
    71db:	sub    rdx,0x1
    71df:	cmp    BYTE PTR [r12+rdx*1],0x20
    71e4:	jne    7258 <main+0x17d8>
    71e6:	test   rdx,rdx
    71e9:	jne    71d8 <main+0x1758>
    71eb:	lea    rax,[rip+0x1e4ce]        # 256c0 <buffer.11770>
    71f2:	mov    rdi,rbp
    71f5:	mov    BYTE PTR [rax+rdx*1],0x0
    71f9:	mov    rdx,QWORD PTR [rsp]
    71fd:	mov    rsi,rax
    7200:	call   55f0 <strncmp@plt>
    7205:	test   eax,eax
    7207:	jne    7198 <main+0x1718>
    7209:	mov    r15d,DWORD PTR [rsp+0x18]
    720e:	mov    rax,QWORD PTR [rip+0x1ec73]        # 25e88 <p11_slots>
    7215:	cmp    DWORD PTR [rip+0x1ef64],0x0        # 26180 <verbose>
    721c:	mov    r8,QWORD PTR [rax+rbx*1]
    7220:	mov    QWORD PTR [rip+0x1ef31],r8        # 26158 <opt_slot>
    7227:	je     657e <main+0xafe>
    722d:	mov    rcx,QWORD PTR [rip+0x1ef1c]        # 26150 <opt_slot_description>
    7234:	mov    rdi,QWORD PTR [rip+0x1e3a5]        # 255e0 <stderr@@GLIBC_2.2.5>
    723b:	lea    rdx,[rip+0x156be]        # 1c900 <_IO_stdin_used+0x5900>
    7242:	xor    eax,eax
    7244:	mov    esi,0x1
    7249:	call   59b0 <__fprintf_chk@plt>
    724e:	jmp    657e <main+0xafe>
    7253:	nop    DWORD PTR [rax+rax*1+0x0]
    7258:	add    rax,0x1
    725c:	movzx  edx,BYTE PTR [r14+rax*1]
    7261:	mov    BYTE PTR [r13+rax*1+0x0],dl
    7266:	cmp    rax,rsi
    7269:	jne    7258 <main+0x17d8>
    726b:	mov    rdx,rax
    726e:	jmp    71eb <main+0x176b>
    7273:	mov    edx,0x1e
    7278:	mov    rcx,QWORD PTR [rip+0x1e361]        # 255e0 <stderr@@GLIBC_2.2.5>
    727f:	mov    esi,0x1
    7284:	lea    rdi,[rip+0x15d4d]        # 1cfd8 <_IO_stdin_used+0x5fd8>
    728b:	mov    r12d,0x4
    7291:	lea    rbx,[rip+0x1ea48]        # 25ce0 <test_threads_datas>
    7298:	lea    rbp,[rip+0x15df9]        # 1d098 <_IO_stdin_used+0x6098>
    729f:	call   59a0 <fwrite@plt>
    72a4:	mov    ecx,DWORD PTR [rip+0x1ea16]        # 25cc0 <test_threads_num>
    72aa:	xor    esi,esi
    72ac:	xor    r9d,r9d
    72af:	xor    edx,edx
    72b1:	test   ecx,ecx
    72b3:	jle    72e5 <main+0x1865>
    72b5:	nop    DWORD PTR [rax]
    72b8:	movsxd rax,edx
    72bb:	shl    rax,0x5
    72bf:	add    rax,rbx
    72c2:	mov    edi,DWORD PTR [rax+0x10]
    72c5:	mov    rax,QWORD PTR [rax+0x18]
    72c9:	cmp    edi,0xffffffff
    72cc:	sete   dil
    72d0:	movzx  edi,dil
    72d4:	add    r9d,edi
    72d7:	cmp    rax,0x1
    72db:	adc    esi,0x0
    72de:	add    edx,0x1
    72e1:	cmp    ecx,edx
    72e3:	jne    72b8 <main+0x1838>
    72e5:	mov    rdi,QWORD PTR [rip+0x1e2f4]        # 255e0 <stderr@@GLIBC_2.2.5>
    72ec:	cmp    ecx,r9d
    72ef:	je     837f <main+0x28ff>
    72f5:	sub    ecx,r9d
    72f8:	xor    eax,eax
    72fa:	lea    rdx,[rip+0x15d3f]        # 1d040 <_IO_stdin_used+0x6040>
    7301:	xor    r14d,r14d
    7304:	mov    esi,0x1
    7309:	call   59b0 <__fprintf_chk@plt>
    730e:	cmp    DWORD PTR [rip+0x1e9ab],0x0        # 25cc0 <test_threads_num>
    7315:	jle    7360 <main+0x18e0>
    7317:	nop    WORD PTR [rax+rax*1+0x0]
    7320:	movsxd rcx,r14d
    7323:	shl    rcx,0x5
    7327:	add    rcx,rbx
    732a:	mov    rdi,QWORD PTR [rcx+0x18]
    732e:	call   8e50 <CKR2Str>
    7333:	mov    rdi,QWORD PTR [rip+0x1e2a6]        # 255e0 <stderr@@GLIBC_2.2.5>
    733a:	mov    rdx,rbp
    733d:	mov    esi,0x1
    7342:	mov    r8d,DWORD PTR [rcx+0x10]
    7346:	mov    r9,rax
    7349:	mov    ecx,r14d
    734c:	xor    eax,eax
    734e:	add    r14d,0x1
    7352:	call   59b0 <__fprintf_chk@plt>
    7357:	cmp    r14d,DWORD PTR [rip+0x1e962]        # 25cc0 <test_threads_num>
    735e:	jl     7320 <main+0x18a0>
    7360:	mov    rcx,QWORD PTR [rip+0x1e279]        # 255e0 <stderr@@GLIBC_2.2.5>
    7367:	mov    edx,0x29
    736c:	mov    esi,0x1
    7371:	lea    rdi,[rip+0x15cf0]        # 1d068 <_IO_stdin_used+0x6068>
    7378:	call   59a0 <fwrite@plt>
    737d:	mov    edi,0x1e
    7382:	call   5a00 <sleep@plt>
    7387:	sub    r12d,0x1
    738b:	jne    72a4 <main+0x1824>
    7391:	xor    r15d,r15d
    7394:	cmp    DWORD PTR [rip+0x1e925],0x0        # 25cc0 <test_threads_num>
    739b:	lea    r14,[rip+0x1e93e]        # 25ce0 <test_threads_datas>
    73a2:	lea    r12,[rip+0x1ea77]        # 25e20 <test_threads_handles>
    73a9:	lea    rbp,[rip+0x15ce8]        # 1d098 <_IO_stdin_used+0x6098>
    73b0:	jg     73ca <main+0x194a>
    73b2:	jmp    7412 <main+0x1992>
    73b4:	nop    DWORD PTR [rax+0x0]
    73b8:	call   5610 <pthread_cancel@plt>
    73bd:	add    r15,0x1
    73c1:	cmp    DWORD PTR [rip+0x1e8f8],r15d        # 25cc0 <test_threads_num>
    73c8:	jle    7412 <main+0x1992>
    73ca:	movsxd rbx,r15d
    73cd:	shl    rbx,0x5
    73d1:	add    rbx,r14
    73d4:	mov    rdi,QWORD PTR [rbx+0x18]
    73d8:	call   8e50 <CKR2Str>
    73dd:	mov    r8d,DWORD PTR [rbx+0x10]
    73e1:	mov    ecx,r15d
    73e4:	mov    rdx,rbp
    73e7:	mov    rdi,QWORD PTR [rip+0x1e1f2]        # 255e0 <stderr@@GLIBC_2.2.5>
    73ee:	mov    r9,rax
    73f1:	mov    esi,0x1
    73f6:	xor    eax,eax
    73f8:	call   59b0 <__fprintf_chk@plt>
    73fd:	mov    eax,DWORD PTR [rbx+0x10]
    7400:	mov    rdi,QWORD PTR [r12+r15*8]
    7404:	cmp    eax,0xffffffff
    7407:	jne    73b8 <main+0x1938>
    7409:	xor    esi,esi
    740b:	call   5940 <pthread_join@plt>
    7410:	jmp    73bd <main+0x193d>
    7412:	mov    rcx,QWORD PTR [rip+0x1e1c7]        # 255e0 <stderr@@GLIBC_2.2.5>
    7419:	mov    edx,0x1e
    741e:	mov    esi,0x1
    7423:	lea    rdi,[rip+0x15bf6]        # 1d020 <_IO_stdin_used+0x6020>
    742a:	call   59a0 <fwrite@plt>
    742f:	jmp    711c <main+0x169c>
    7434:	lea    rdx,[rip+0x1e284]        # 256bf <temp.11811+0x3f>
    743b:	lea    rsi,[rsp+0x1ef]
    7443:	nop    DWORD PTR [rax+rax*1+0x0]
    7448:	add    rbp,0x1
    744c:	movzx  eax,BYTE PTR [rsi+rbp*1]
    7450:	mov    BYTE PTR [rdx+rbp*1],al
    7453:	cmp    rbp,rcx
    7456:	jne    7448 <main+0x19c8>
    7458:	mov    rax,rbp
    745b:	jmp    6b46 <main+0x10c6>
    7460:	xor    eax,eax
    7462:	lea    rdx,[rip+0x1e256]        # 256bf <temp.11811+0x3f>
    7469:	lea    rdi,[rsp+0x1c1]
    7471:	nop    DWORD PTR [rax+0x0]
    7478:	add    rax,0x1
    747c:	movzx  esi,BYTE PTR [rdi+rax*1]
    7480:	mov    BYTE PTR [rdx+rax*1],sil
    7484:	cmp    rax,rcx
    7487:	jne    7478 <main+0x19f8>
    7489:	jmp    6ae6 <main+0x1066>
    748e:	mov    rax,QWORD PTR [rip+0x1eb4b]        # 25fe0 <opt_so_pin>
    7495:	mov    r13,QWORD PTR [rsp+0x98]
    749d:	mov    rdi,QWORD PTR [rip+0x1ecb4]        # 26158 <opt_slot>
    74a4:	test   rax,rax
    74a7:	je     81fb <main+0x277b>
    74ad:	mov    QWORD PTR [rsp+0xc0],rax
    74b5:	mov    rax,QWORD PTR [rip+0x1eb14]        # 25fd0 <opt_new_pin>
    74bc:	lea    rsi,[rsp+0x1c0]
    74c4:	mov    QWORD PTR [rsp+0xd0],0x0
    74d0:	mov    QWORD PTR [rsp+0xc8],rax
    74d8:	call   9190 <get_token_info>
    74dd:	mov    rbx,QWORD PTR [rsp+0x220]
    74e5:	and    ebx,0x100
    74eb:	mov    rax,rbx
    74ee:	or     rax,QWORD PTR [rsp+0xc0]
    74f6:	je     816c <main+0x26ec>
    74fc:	mov    rbp,QWORD PTR [rsp+0xc8]
    7504:	or     rbx,rbp
    7507:	je     83b2 <main+0x2932>
    750d:	mov    rax,QWORD PTR [rip+0x1e97c]        # 25e90 <p11>
    7514:	mov    r9,QWORD PTR [rax+0x60]
    7518:	test   rbp,rbp
    751b:	je     7a6d <main+0x1fed>
    7521:	xor    eax,eax
    7523:	or     rcx,0xffffffffffffffff
    7527:	mov    rdi,rbp
    752a:	repnz scas al,BYTE PTR es:[rdi]
    752c:	mov    rax,rcx
    752f:	not    rax
    7532:	lea    r8,[rax-0x1]
    7536:	mov    rsi,QWORD PTR [rsp+0xc0]
    753e:	test   rsi,rsi
    7541:	je     86fa <main+0x2c7a>
    7547:	xor    eax,eax
    7549:	or     rcx,0xffffffffffffffff
    754d:	mov    rdi,rsi
    7550:	repnz scas al,BYTE PTR es:[rdi]
    7552:	mov    rax,rcx
    7555:	not    rax
    7558:	lea    rdx,[rax-0x1]
    755c:	mov    rcx,rbp
    755f:	mov    rdi,r13
    7562:	call   r9
    7565:	mov    rsi,rax
    7568:	test   rax,rax
    756b:	jne    8aa9 <main+0x3029>
    7571:	lea    rdi,[rip+0x11682]        # 18bfa <_IO_stdin_used+0x1bfa>
    7578:	call   5600 <puts@plt>
    757d:	mov    DWORD PTR [rsp+0x44],0x0
    7585:	mov    r13d,DWORD PTR [rsp+0x44]
    758a:	jmp    6768 <main+0xce8>
    758f:	lea    rdi,[rip+0x152e2]        # 1c878 <_IO_stdin_used+0x5878>
    7596:	call   5600 <puts@plt>
    759b:	mov    rax,QWORD PTR [rip+0x1e8ee]        # 25e90 <p11>
    75a2:	mov    rdi,QWORD PTR [rip+0x1e8c7]        # 25e70 <c_initialize_args_ptr>
    75a9:	call   QWORD PTR [rax+0x8]
    75ac:	mov    rsi,rax
    75af:	test   rax,rax
    75b2:	jne    89d5 <main+0x2f55>
    75b8:	xor    edi,edi
    75ba:	call   5990 <exit@plt>
    75bf:	mov    rdi,QWORD PTR [rip+0x1eb82]        # 26148 <opt_token_label>
    75c6:	mov    QWORD PTR [rsp],rdi
    75ca:	test   rdi,rdi
    75cd:	je     7863 <main+0x1de3>
    75d3:	xor    eax,eax
    75d5:	or     rcx,0xffffffffffffffff
    75d9:	lea    r12,[rip+0x1e0e0]        # 256c0 <buffer.11770>
    75e0:	xor    ebx,ebx
    75e2:	repnz scas al,BYTE PTR es:[rdi]
    75e4:	lea    rbp,[rsp+0x1c0]
    75ec:	mov    DWORD PTR [rsp+0x24],r15d
    75f1:	mov    r15,rbx
    75f4:	lea    r13,[r12-0x1]
    75f9:	lea    r14,[rsp+0x1bf]
    7601:	mov    rax,rcx
    7604:	not    rax
    7607:	sub    rax,0x1
    760b:	mov    QWORD PTR [rsp+0x18],rax
    7610:	jmp    7616 <main+0x1b96>
    7612:	add    r15,0x1
    7616:	cmp    r15,QWORD PTR [rip+0x1e863]        # 25e80 <p11_num_slots>
    761d:	jae    8159 <main+0x26d9>
    7623:	mov    rax,QWORD PTR [rip+0x1e85e]        # 25e88 <p11_slots>
    762a:	mov    rsi,rbp
    762d:	lea    rbx,[r15*8+0x0]
    7635:	mov    rdi,QWORD PTR [rax+r15*8]
    7639:	mov    rax,QWORD PTR [rip+0x1e850]        # 25e90 <p11>
    7640:	call   QWORD PTR [rax+0x38]
    7643:	mov    edx,0x20
    7648:	test   rax,rax
    764b:	jne    7612 <main+0x1b92>
    764d:	nop    DWORD PTR [rax]
    7650:	mov    rsi,rdx
    7653:	sub    rdx,0x1
    7657:	cmp    BYTE PTR [rbp+rdx*1+0x0],0x20
    765c:	jne    7848 <main+0x1dc8>
    7662:	test   rdx,rdx
    7665:	jne    7650 <main+0x1bd0>
    7667:	mov    BYTE PTR [r12+rdx*1],0x0
    766c:	mov    rdi,QWORD PTR [rsp]
    7670:	lea    rsi,[rip+0x1e049]        # 256c0 <buffer.11770>
    7677:	mov    rdx,QWORD PTR [rsp+0x18]
    767c:	call   55f0 <strncmp@plt>
    7681:	test   eax,eax
    7683:	jne    7612 <main+0x1b92>
    7685:	mov    r15d,DWORD PTR [rsp+0x24]
    768a:	jmp    720e <main+0x178e>
    768f:	mov    rdi,rdx
    7692:	lea    rsi,[rip+0x11340]        # 189d9 <_IO_stdin_used+0x19d9>
    7699:	mov    QWORD PTR [rsp+0x48],rdx
    769e:	call   57a0 <strcmp@plt>
    76a3:	mov    rdx,QWORD PTR [rsp+0x48]
    76a8:	test   eax,eax
    76aa:	je     78b1 <main+0x1e31>
    76b0:	mov    rdi,rdx
    76b3:	lea    rsi,[rip+0x127c9]        # 19e83 <_IO_stdin_used+0x2e83>
    76ba:	mov    QWORD PTR [rsp+0x48],rdx
    76bf:	call   57a0 <strcmp@plt>
    76c4:	mov    rdx,QWORD PTR [rsp+0x48]
    76c9:	test   eax,eax
    76cb:	jne    7709 <main+0x1c89>
    76cd:	mov    QWORD PTR [rip+0x1b988],0x0        # 23060 <opt_object_class>
    76d8:	jmp    5be8 <main+0x168>
    76dd:	mov    rcx,QWORD PTR [rip+0x1ea6c]        # 26150 <opt_slot_description>
    76e4:	lea    rdx,[rip+0x11446]        # 18b31 <_IO_stdin_used+0x1b31>
    76eb:	mov    rdi,QWORD PTR [rip+0x1deee]        # 255e0 <stderr@@GLIBC_2.2.5>
    76f2:	mov    esi,0x1
    76f7:	xor    eax,eax
    76f9:	mov    r13d,0x1
    76ff:	call   59b0 <__fprintf_chk@plt>
    7704:	jmp    70f1 <main+0x1671>
    7709:	mov    rcx,rdx
    770c:	lea    rdx,[rip+0x112cd]        # 189e0 <_IO_stdin_used+0x19e0>
    7713:	mov    rdi,QWORD PTR [rip+0x1dec6]        # 255e0 <stderr@@GLIBC_2.2.5>
    771a:	mov    esi,0x1
    771f:	xor    eax,eax
    7721:	call   59b0 <__fprintf_chk@plt>
    7726:	xor    ecx,ecx
    7728:	lea    rdx,[rip+0x1dc11]        # 25340 <option_help>
    772f:	lea    rsi,[rip+0x1a60a]        # 21d40 <options>
    7736:	lea    rdi,[rip+0x10d03]        # 18440 <_IO_stdin_used+0x1440>
    773d:	call   159e0 <util_print_usage_and_die>
    7742:	mov    rdi,QWORD PTR [rip+0x1ea0f]        # 26158 <opt_slot>
    7749:	lea    rsi,[rsp+0x1c0]
    7751:	mov    QWORD PTR [rsp+0xb8],0x0
    775d:	mov    QWORD PTR [rsp+0xc0],0x0
    7769:	mov    rbp,QWORD PTR [rsp+0x98]
    7771:	mov    QWORD PTR [rsp+0xc8],0x0
    777d:	mov    QWORD PTR [rsp+0xd0],0x0
    7789:	call   9190 <get_token_info>
    778e:	test   BYTE PTR [rsp+0x221],0x1
    7796:	jne    8503 <main+0x2a83>
    779c:	mov    rsi,QWORD PTR [rip+0x1e845]        # 25fe8 <opt_pin>
    77a3:	mov    rax,QWORD PTR [rip+0x1e6e6]        # 25e90 <p11>
    77aa:	test   rsi,rsi
    77ad:	je     8880 <main+0x2e00>
    77b3:	mov    r8,QWORD PTR [rax+0x58]
    77b7:	xor    eax,eax
    77b9:	or     rcx,0xffffffffffffffff
    77bd:	mov    rdi,rsi
    77c0:	repnz scas al,BYTE PTR es:[rdi]
    77c2:	mov    rax,rcx
    77c5:	not    rax
    77c8:	lea    rdx,[rax-0x1]
    77cc:	mov    rdi,rbp
    77cf:	call   r8
    77d2:	mov    rdi,QWORD PTR [rsp+0xb8]
    77da:	mov    rbp,rax
    77dd:	test   rdi,rdi
    77e0:	je     77fe <main+0x1d7e>
    77e2:	mov    rdx,QWORD PTR [rsp+0xc8]
    77ea:	xor    esi,esi
    77ec:	call   56e0 <memset@plt>
    77f1:	mov    rdi,QWORD PTR [rsp+0xb8]
    77f9:	call   5590 <free@plt>
    77fe:	mov    rdi,QWORD PTR [rsp+0xc0]
    7806:	test   rdi,rdi
    7809:	je     7827 <main+0x1da7>
    780b:	mov    rdx,QWORD PTR [rsp+0xd0]
    7813:	xor    esi,esi
    7815:	call   56e0 <memset@plt>
    781a:	mov    rdi,QWORD PTR [rsp+0xc0]
    7822:	call   5590 <free@plt>
    7827:	test   rbp,rbp
    782a:	jne    89ac <main+0x2f2c>
    7830:	lea    rdi,[rip+0x153a1]        # 1cbd8 <_IO_stdin_used+0x5bd8>
    7837:	xor    r13d,r13d
    783a:	call   5600 <puts@plt>
    783f:	jmp    70f1 <main+0x1671>
    7844:	nop    DWORD PTR [rax+0x0]
    7848:	add    rax,0x1
    784c:	movzx  edx,BYTE PTR [r14+rax*1]
    7851:	mov    BYTE PTR [r13+rax*1+0x0],dl
    7856:	cmp    rax,rsi
    7859:	jne    7848 <main+0x1dc8>
    785b:	mov    rdx,rax
    785e:	jmp    7667 <main+0x1be7>
    7863:	cmp    DWORD PTR [rip+0x1e8ce],0x0        # 26138 <opt_slot_index_set>
    786a:	je     852d <main+0x2aad>
    7870:	mov    rcx,QWORD PTR [rip+0x1e8c9]        # 26140 <opt_slot_index>
    7877:	mov    rdi,QWORD PTR [rip+0x1dd62]        # 255e0 <stderr@@GLIBC_2.2.5>
    787e:	cmp    rax,rcx
    7881:	jbe    881b <main+0x2d9b>
    7887:	mov    rax,QWORD PTR [rip+0x1e5fa]        # 25e88 <p11_slots>
    788e:	lea    rdx,[rip+0x150bb]        # 1c950 <_IO_stdin_used+0x5950>
    7895:	mov    esi,0x1
    789a:	mov    r8,QWORD PTR [rax+rcx*8]
    789e:	xor    eax,eax
    78a0:	mov    QWORD PTR [rip+0x1e8b1],r8        # 26158 <opt_slot>
    78a7:	call   59b0 <__fprintf_chk@plt>
    78ac:	jmp    657e <main+0xafe>
    78b1:	mov    QWORD PTR [rip+0x1b7a4],0x2        # 23060 <opt_object_class>
    78bc:	jmp    5be8 <main+0x168>
    78c1:	lea    rsi,[rip+0x112b0]        # 18b78 <_IO_stdin_used+0x1b78>
    78c8:	mov    edi,0x1
    78cd:	xor    eax,eax
    78cf:	call   58a0 <__printf_chk@plt>
    78d4:	lea    r13,[rsp+0xa8]
    78dc:	lea    r8,[rsp+0xb0]
    78e4:	mov    rdx,QWORD PTR [rip+0x1dcc5]        # 255b0 <stdin@@GLIBC_2.2.5>
    78eb:	mov    rsi,r8
    78ee:	mov    rdi,r13
    78f1:	mov    QWORD PTR [rsp],r8
    78f5:	call   16290 <util_getpass>
    78fa:	mov    r8,QWORD PTR [rsp]
    78fe:	test   eax,eax
    7900:	js     8c01 <main+0x3181>
    7906:	mov    rsi,QWORD PTR [rsp+0xa8]
    790e:	test   rsi,rsi
    7911:	je     8c0f <main+0x318f>
    7917:	cmp    BYTE PTR [rsi],0x0
    791a:	je     8c0f <main+0x318f>
    7920:	xor    eax,eax
    7922:	or     rcx,0xffffffffffffffff
    7926:	mov    rdi,rsi
    7929:	repnz scas al,BYTE PTR es:[rdi]
    792b:	mov    rax,rcx
    792e:	not    rax
    7931:	sub    rax,0x1
    7935:	cmp    rax,0x14
    7939:	ja     8c0f <main+0x318f>
    793f:	lea    rbx,[rsp+0x290]
    7947:	mov    edx,0x15
    794c:	mov    QWORD PTR [rsp],r8
    7950:	mov    rdi,rbx
    7953:	call   16840 <strlcpy>
    7958:	mov    rdi,QWORD PTR [rsp+0xa8]
    7960:	call   5590 <free@plt>
    7965:	lea    rsi,[rip+0x1513c]        # 1caa8 <_IO_stdin_used+0x5aa8>
    796c:	mov    edi,0x1
    7971:	xor    eax,eax
    7973:	mov    QWORD PTR [rsp+0xa8],0x0
    797f:	call   58a0 <__printf_chk@plt>
    7984:	mov    r8,QWORD PTR [rsp]
    7988:	mov    rdx,QWORD PTR [rip+0x1dc21]        # 255b0 <stdin@@GLIBC_2.2.5>
    798f:	mov    rdi,r13
    7992:	mov    rsi,r8
    7995:	call   16290 <util_getpass>
    799a:	test   eax,eax
    799c:	js     8c01 <main+0x3181>
    79a2:	mov    r13,QWORD PTR [rsp+0xa8]
    79aa:	test   r13,r13
    79ad:	je     79c9 <main+0x1f49>
    79af:	cmp    BYTE PTR [r13+0x0],0x0
    79b4:	je     79c9 <main+0x1f49>
    79b6:	mov    rsi,r13
    79b9:	mov    rdi,rbx
    79bc:	call   57a0 <strcmp@plt>
    79c1:	test   eax,eax
    79c3:	je     6bf3 <main+0x1173>
    79c9:	lea    rdi,[rip+0x111e4]        # 18bb4 <_IO_stdin_used+0x1bb4>
    79d0:	xor    eax,eax
    79d2:	call   15f90 <util_fatal>
    79d7:	cmp    ebx,0x2
    79da:	je     8994 <main+0x2f14>
    79e0:	add    ebx,0x1
    79e3:	je     897c <main+0x2efc>
    79e9:	mov    rdx,QWORD PTR [rip+0x1dbc0]        # 255b0 <stdin@@GLIBC_2.2.5>
    79f0:	mov    rsi,QWORD PTR [rsp+0x48]
    79f5:	lea    rdi,[rsp+0xc0]
    79fd:	call   16290 <util_getpass>
    7a02:	test   eax,eax
    7a04:	js     6763 <main+0xce3>
    7a0a:	mov    rsi,QWORD PTR [rsp+0xc0]
    7a12:	test   rsi,rsi
    7a15:	je     6763 <main+0xce3>
    7a1b:	cmp    BYTE PTR [rsi],0x0
    7a1e:	je     6763 <main+0xce3>
    7a24:	or     rdx,0xffffffffffffffff
    7a28:	xor    eax,eax
    7a2a:	mov    rdi,rsi
    7a2d:	mov    rcx,rdx
    7a30:	repnz scas al,BYTE PTR es:[rdi]
    7a32:	mov    rdx,rcx
    7a35:	not    rdx
    7a38:	lea    rax,[rdx-0x1]
    7a3c:	cmp    rax,0x14
    7a40:	ja     6763 <main+0xce3>
    7a46:	lea    rdi,[rsp+0x290]
    7a4e:	mov    ecx,0x15
    7a53:	call   57b0 <__memcpy_chk@plt>
    7a58:	mov    QWORD PTR [rsp+0xc0],rax
    7a60:	mov    rax,QWORD PTR [rsp+0x220]
    7a68:	jmp    66ce <main+0xc4e>
    7a6d:	xor    r8d,r8d
    7a70:	jmp    7536 <main+0x1ab6>
    7a75:	test   r8,r8
    7a78:	lea    rcx,[rip+0x1e621]        # 260a0 <opt_object_id>
    7a7f:	mov    eax,0x0
    7a84:	mov    rdi,QWORD PTR [rsp+0x98]
    7a8c:	cmove  rcx,rax
    7a90:	lea    r13,[rsp+0xa0]
    7a98:	xor    r9d,r9d
    7a9b:	mov    esi,0x3
    7aa0:	mov    rdx,r13
    7aa3:	call   b100 <find_object>
    7aa8:	test   eax,eax
    7aaa:	je     8ac3 <main+0x3043>
    7ab0:	cmp    DWORD PTR [rsp+0x14],0x0
    7ab5:	je     7b1e <main+0x209e>
    7ab7:	mov    r8,QWORD PTR [rip+0x1e542]        # 26000 <opt_object_id_len>
    7abe:	xor    ebp,ebp
    7ac0:	mov    rdx,r13
    7ac3:	lea    rbx,[rip+0x1e5d6]        # 260a0 <opt_object_id>
    7aca:	mov    rcx,rbp
    7acd:	mov    rdi,QWORD PTR [rsp+0x98]
    7ad5:	mov    esi,0x3
    7ada:	test   r8,r8
    7add:	cmovne rcx,rbx
    7ae1:	xor    r9d,r9d
    7ae4:	call   b100 <find_object>
    7ae9:	test   eax,eax
    7aeb:	jne    7b1e <main+0x209e>
    7aed:	mov    r8,QWORD PTR [rip+0x1e50c]        # 26000 <opt_object_id_len>
    7af4:	mov    rcx,rbp
    7af7:	mov    rdx,r13
    7afa:	mov    esi,0x4
    7aff:	mov    rdi,QWORD PTR [rsp+0x98]
    7b07:	test   r8,r8
    7b0a:	cmovne rcx,rbx
    7b0e:	xor    r9d,r9d
    7b11:	call   b100 <find_object>
    7b16:	test   eax,eax
    7b18:	je     89c9 <main+0x2f49>
    7b1e:	cmp    DWORD PTR [rsp+0x10],0x0
    7b23:	je     7b5f <main+0x20df>
    7b25:	mov    r8,QWORD PTR [rip+0x1e4d4]        # 26000 <opt_object_id_len>
    7b2c:	mov    eax,0x0
    7b31:	mov    rdx,r13
    7b34:	lea    rcx,[rip+0x1e565]        # 260a0 <opt_object_id>
    7b3b:	mov    rdi,QWORD PTR [rsp+0x98]
    7b43:	mov    esi,0x4
    7b48:	test   r8,r8
    7b4b:	cmove  rcx,rax
    7b4f:	xor    r9d,r9d
    7b52:	call   b100 <find_object>
    7b57:	test   eax,eax
    7b59:	je     8bd8 <main+0x3158>
    7b5f:	cmp    DWORD PTR [rsp+0x54],0x0
    7b64:	je     6d08 <main+0x1288>
    7b6a:	mov    r8,QWORD PTR [rip+0x1e48f]        # 26000 <opt_object_id_len>
    7b71:	xor    ebp,ebp
    7b73:	mov    rdx,r13
    7b76:	lea    rbx,[rip+0x1e523]        # 260a0 <opt_object_id>
    7b7d:	mov    rcx,rbp
    7b80:	mov    rdi,QWORD PTR [rsp+0x98]
    7b88:	mov    esi,0x2
    7b8d:	test   r8,r8
    7b90:	cmovne rcx,rbx
    7b94:	xor    r9d,r9d
    7b97:	call   b100 <find_object>
    7b9c:	test   eax,eax
    7b9e:	jne    6d08 <main+0x1288>
    7ba4:	mov    r8,QWORD PTR [rip+0x1e455]        # 26000 <opt_object_id_len>
    7bab:	mov    rcx,rbp
    7bae:	mov    rdx,r13
    7bb1:	mov    esi,0x1
    7bb6:	mov    rdi,QWORD PTR [rsp+0x98]
    7bbe:	test   r8,r8
    7bc1:	cmovne rcx,rbx
    7bc5:	xor    r9d,r9d
    7bc8:	call   b100 <find_object>
    7bcd:	test   eax,eax
    7bcf:	jne    6d08 <main+0x1288>
    7bd5:	lea    rdi,[rip+0x1506c]        # 1cc48 <_IO_stdin_used+0x5c48>
    7bdc:	call   15f90 <util_fatal>
    7be1:	cmp    DWORD PTR [rsp+0x5c],0x0
    7be6:	je     6f57 <main+0x14d7>
    7bec:	cmp    DWORD PTR [rsp+0x8],0x0
    7bf1:	je     6f3a <main+0x14ba>
    7bf7:	mov    rsi,QWORD PTR [rsp+0x98]
    7bff:	mov    rdi,QWORD PTR [rip+0x1e552]        # 26158 <opt_slot>
    7c06:	call   11b90 <test_ec>
    7c0b:	jmp    6f57 <main+0x14d7>
    7c10:	mov    r13,QWORD PTR [rsp+0x98]
    7c18:	mov    rax,QWORD PTR [rip+0x1e271]        # 25e90 <p11>
    7c1f:	xor    esi,esi
    7c21:	xor    edx,edx
    7c23:	mov    rbx,QWORD PTR [rip+0x1b436]        # 23060 <opt_object_class>
    7c2a:	lea    rbp,[rsp+0xc8]
    7c32:	mov    rdi,r13
    7c35:	call   QWORD PTR [rax+0xd8]
    7c3b:	mov    r12,QWORD PTR [rsp+0x48]
    7c40:	mov    rsi,rax
    7c43:	test   rax,rax
    7c46:	jne    8b32 <main+0x30b2>
    7c4c:	nop    DWORD PTR [rax+0x0]
    7c50:	mov    rax,QWORD PTR [rip+0x1e239]        # 25e90 <p11>
    7c57:	mov    rcx,r12
    7c5a:	mov    rsi,rbp
    7c5d:	mov    rdi,r13
    7c60:	mov    edx,0x1
    7c65:	call   QWORD PTR [rax+0xe0]
    7c6b:	test   rax,rax
    7c6e:	jne    8b23 <main+0x30a3>
    7c74:	cmp    QWORD PTR [rsp+0xd0],0x0
    7c7d:	je     7ccf <main+0x224f>
    7c7f:	cmp    ebx,0xffffffff
    7c82:	je     7c99 <main+0x2219>
    7c84:	mov    rsi,QWORD PTR [rsp+0xc8]
    7c8c:	mov    rdi,r13
    7c8f:	call   b340 <getCLASS>
    7c94:	cmp    rbx,rax
    7c97:	jne    7c50 <main+0x21d0>
    7c99:	mov    rsi,QWORD PTR [rsp+0xc8]
    7ca1:	mov    rdi,r13
    7ca4:	call   e9f0 <show_object>
    7ca9:	jmp    7c50 <main+0x21d0>
    7cab:	mov    rdi,QWORD PTR [rsp+0x98]
    7cb3:	call   d590 <wrap_key>
    7cb8:	jmp    6d1e <main+0x129e>
    7cbd:	mov    rdi,QWORD PTR [rsp+0x98]
    7cc5:	call   10580 <unwrap_key>
    7cca:	jmp    6d13 <main+0x1293>
    7ccf:	mov    rax,QWORD PTR [rip+0x1e1ba]        # 25e90 <p11>
    7cd6:	mov    rdi,r13
    7cd9:	call   QWORD PTR [rax+0xe8]
    7cdf:	jmp    6d37 <main+0x12b7>
    7ce4:	mov    rbx,QWORD PTR [rsp+0x98]
    7cec:	mov    rdi,rbx
    7cef:	call   9bf0 <test_random>
    7cf4:	mov    rdi,rbx
    7cf7:	mov    ebp,eax
    7cf9:	call   aa50 <test_digest>
    7cfe:	mov    rdi,rbx
    7d01:	add    ebp,eax
    7d03:	call   d9a0 <test_signature>
    7d08:	mov    rdi,rbx
    7d0b:	lea    r13d,[rbp+rax*1+0x0]
    7d10:	call   12900 <test_verify>
    7d15:	mov    rsi,QWORD PTR [rsp+0x48]
    7d1a:	mov    rdi,rbx
    7d1d:	mov    QWORD PTR [rsp+0xc0],0x0
    7d29:	add    r13d,eax
    7d2c:	mov    rax,QWORD PTR [rip+0x1e15d]        # 25e90 <p11>
    7d33:	call   QWORD PTR [rax+0x80]
    7d39:	mov    rbp,rax
    7d3c:	test   rax,rax
    7d3f:	jne    8aea <main+0x306a>
    7d45:	test   BYTE PTR [rsp+0xd8],0x3
    7d4d:	je     851f <main+0x2a9f>
    7d53:	mov    rdi,QWORD PTR [rsp+0xd0]
    7d5b:	lea    rsi,[rsp+0xc0]
    7d63:	mov    edx,0x200
    7d68:	call   91c0 <get_mechanisms>
    7d6d:	test   rax,rax
    7d70:	je     8607 <main+0x2b87>
    7d76:	lea    rdi,[rip+0x1517b]        # 1cef8 <_IO_stdin_used+0x5ef8>
    7d7d:	lea    r12,[rsp+0xb8]
    7d85:	call   5600 <puts@plt>
    7d8a:	lea    r14,[rsp+0xc8]
    7d92:	jmp    7e21 <main+0x23a1>
    7d97:	mov    rsi,QWORD PTR [rsp+0xb8]
    7d9f:	mov    rdi,rbx
    7da2:	call   be40 <getDECRYPT>
    7da7:	test   al,al
    7da9:	je     811c <main+0x269c>
    7daf:	mov    rsi,QWORD PTR [rsp+0xb8]
    7db7:	mov    rdx,r14
    7dba:	mov    rdi,rbx
    7dbd:	call   bd10 <getID>
    7dc2:	mov    r15,rax
    7dc5:	test   rax,rax
    7dc8:	je     8701 <main+0x2c81>
    7dce:	xor    r9d,r9d
    7dd1:	mov    rcx,rax
    7dd4:	mov    esi,0x2
    7dd9:	mov    rdi,rbx
    7ddc:	mov    r8,QWORD PTR [rsp+0xc8]
    7de4:	lea    rdx,[rsp+0xb0]
    7dec:	call   b100 <find_object>
    7df1:	mov    rdi,r15
    7df4:	mov    DWORD PTR [rsp],eax
    7df7:	call   5590 <free@plt>
    7dfc:	mov    eax,DWORD PTR [rsp]
    7dff:	test   eax,eax
    7e01:	je     84f2 <main+0x2a72>
    7e07:	mov    edi,0xa
    7e0c:	call   55a0 <putchar@plt>
    7e11:	lea    rdi,[rip+0x15130]        # 1cf48 <_IO_stdin_used+0x5f48>
    7e18:	call   5600 <puts@plt>
    7e1d:	add    rbp,0x1
    7e21:	xor    r8d,r8d
    7e24:	xor    ecx,ecx
    7e26:	mov    r9d,ebp
    7e29:	mov    rdx,r12
    7e2c:	mov    esi,0x3
    7e31:	mov    rdi,rbx
    7e34:	call   b100 <find_object>
    7e39:	test   eax,eax
    7e3b:	je     84b4 <main+0x2a34>
    7e41:	mov    rdx,rbp
    7e44:	lea    rsi,[rip+0x10e9c]        # 18ce7 <_IO_stdin_used+0x1ce7>
    7e4b:	mov    edi,0x1
    7e50:	xor    eax,eax
    7e52:	call   58a0 <__printf_chk@plt>
    7e57:	mov    rsi,QWORD PTR [rsp+0xb8]
    7e5f:	mov    rdi,rbx
    7e62:	call   d880 <getLABEL.constprop.0>
    7e67:	mov    r15,rax
    7e6a:	test   rax,rax
    7e6d:	je     7e8d <main+0x240d>
    7e6f:	mov    rdx,rax
    7e72:	mov    edi,0x1
    7e77:	lea    rsi,[rip+0x10090]        # 17f0e <_IO_stdin_used+0xf0e>
    7e7e:	xor    eax,eax
    7e80:	call   58a0 <__printf_chk@plt>
    7e85:	mov    rdi,r15
    7e88:	call   5590 <free@plt>
    7e8d:	mov    rsi,QWORD PTR [rsp+0xb8]
    7e95:	mov    rdi,rbx
    7e98:	call   b3e0 <getKEY_TYPE>
    7e9d:	test   rax,rax
    7ea0:	je     7d97 <main+0x2317>
    7ea6:	lea    rdi,[rip+0x10021]        # 17ece <_IO_stdin_used+0xece>
    7ead:	call   5600 <puts@plt>
    7eb2:	jmp    7e1d <main+0x239d>
    7eb7:	mov    rdx,QWORD PTR [rsp+0xa0]
    7ebf:	mov    rsi,QWORD PTR [rsp+0x98]
    7ec7:	mov    rdi,QWORD PTR [rip+0x1e28a]        # 26158 <opt_slot>
    7ece:	call   c930 <encrypt_data>
    7ed3:	jmp    6d63 <main+0x12e3>
    7ed8:	mov    rdx,QWORD PTR [rsp+0xa0]
    7ee0:	mov    rsi,QWORD PTR [rsp+0x98]
    7ee8:	mov    rdi,QWORD PTR [rip+0x1e269]        # 26158 <opt_slot>
    7eef:	call   ce20 <decrypt_data>
    7ef4:	jmp    6d58 <main+0x12d8>
    7ef9:	mov    rdx,QWORD PTR [rsp+0xa0]
    7f01:	mov    rsi,QWORD PTR [rsp+0x98]
    7f09:	mov    rdi,QWORD PTR [rip+0x1e248]        # 26158 <opt_slot>
    7f10:	call   140d0 <verify_signature>
    7f15:	jmp    6d4d <main+0x12cd>
    7f1a:	mov    rdx,QWORD PTR [rsp+0xa0]
    7f22:	mov    rsi,QWORD PTR [rsp+0x98]
    7f2a:	mov    rdi,QWORD PTR [rip+0x1e227]        # 26158 <opt_slot>
    7f31:	call   13bf0 <sign_data>
    7f36:	jmp    6d42 <main+0x12c2>
    7f3b:	mov    r8,QWORD PTR [rip+0x1e066]        # 25fa8 <opt_key_type>
    7f42:	mov    rcx,QWORD PTR [rsp+0x48]
    7f47:	lea    rdx,[rsp+0xc8]
    7f4f:	mov    rsi,QWORD PTR [rsp+0x98]
    7f57:	mov    rdi,QWORD PTR [rip+0x1e1fa]        # 26158 <opt_slot>
    7f5e:	call   10b60 <gen_keypair>
    7f63:	jmp    6d7c <main+0x12fc>
    7f68:	cmp    DWORD PTR [rip+0x1e1a9],0x0        # 26118 <opt_mechanism_used>
    7f6f:	mov    r13,QWORD PTR [rsp+0x98]
    7f77:	je     85a9 <main+0x2b29>
    7f7d:	mov    rdi,QWORD PTR [rip+0x1e19c]        # 26120 <opt_mechanism>
    7f84:	lea    rax,[rip+0x1b455]        # 233e0 <p11_mechanisms>
    7f8b:	jmp    7f96 <main+0x2516>
    7f8d:	cmp    rdi,QWORD PTR [rax]
    7f90:	je     7fa7 <main+0x2527>
    7f92:	add    rax,0x20
    7f96:	mov    rcx,QWORD PTR [rax+0x8]
    7f9a:	test   rcx,rcx
    7f9d:	jne    7f8d <main+0x250d>
    7f9f:	call   a3c0 <p11_mechanism_to_name.part.0>
    7fa4:	mov    rcx,rax
    7fa7:	mov    rdi,QWORD PTR [rip+0x1d632]        # 255e0 <stderr@@GLIBC_2.2.5>
    7fae:	lea    rdx,[rip+0x10cf6]        # 18cab <_IO_stdin_used+0x1cab>
    7fb5:	mov    esi,0x1
    7fba:	xor    eax,eax
    7fbc:	call   59b0 <__fprintf_chk@plt>
    7fc1:	mov    rax,QWORD PTR [rip+0x1e158]        # 26120 <opt_mechanism>
    7fc8:	pxor   xmm0,xmm0
    7fcc:	mov    rdi,r13
    7fcf:	mov    rsi,QWORD PTR [rsp+0x48]
    7fd4:	movups XMMWORD PTR [rsp+0xd8],xmm0
    7fdc:	mov    QWORD PTR [rsp+0xd0],rax
    7fe4:	mov    rax,QWORD PTR [rip+0x1dea5]        # 25e90 <p11>
    7feb:	call   QWORD PTR [rax+0x130]
    7ff1:	mov    rsi,rax
    7ff4:	test   rax,rax
    7ff7:	jne    8a1f <main+0x2f9f>
    7ffd:	mov    rdi,QWORD PTR [rip+0x1e174]        # 26178 <opt_input>
    8004:	test   rdi,rdi
    8007:	je     83ab <main+0x292b>
    800d:	xor    esi,esi
    800f:	xor    eax,eax
    8011:	call   58f0 <open@plt>
    8016:	mov    ebp,eax
    8018:	test   eax,eax
    801a:	js     89e1 <main+0x2f61>
    8020:	lea    r14,[rsp+0x2b0]
    8028:	jmp    804f <main+0x25cf>
    802a:	nop    WORD PTR [rax+rax*1+0x0]
    8030:	movsxd rdx,eax
    8033:	mov    rax,QWORD PTR [rip+0x1de56]        # 25e90 <p11>
    803a:	mov    rsi,r14
    803d:	mov    rdi,r13
    8040:	call   QWORD PTR [rax+0x140]
    8046:	test   rax,rax
    8049:	jne    89f6 <main+0x2f76>
    804f:	mov    edx,0x40
    8054:	mov    rsi,r14
    8057:	mov    edi,ebp
    8059:	call   5740 <read@plt>
    805e:	test   eax,eax
    8060:	jg     8030 <main+0x25b0>
    8062:	test   ebp,ebp
    8064:	jne    85d9 <main+0x2b59>
    806a:	mov    rax,QWORD PTR [rip+0x1de1f]        # 25e90 <p11>
    8071:	mov    rsi,r14
    8074:	mov    rdi,r13
    8077:	mov    QWORD PTR [rsp+0xc8],0x40
    8083:	lea    rdx,[rsp+0xc8]
    808b:	call   QWORD PTR [rax+0x150]
    8091:	mov    rsi,rax
    8094:	test   rax,rax
    8097:	jne    8b81 <main+0x3101>
    809d:	mov    rdi,QWORD PTR [rip+0x1e0cc]        # 26170 <opt_output>
    80a4:	test   rdi,rdi
    80a7:	je     8682 <main+0x2c02>
    80ad:	mov    edx,0x180
    80b2:	mov    esi,0x241
    80b7:	xor    eax,eax
    80b9:	call   58f0 <open@plt>
    80be:	mov    ebp,eax
    80c0:	test   eax,eax
    80c2:	js     8bc3 <main+0x3143>
    80c8:	mov    rdx,QWORD PTR [rsp+0xc8]
    80d0:	mov    rsi,r14
    80d3:	mov    edi,eax
    80d5:	call   5650 <write@plt>
    80da:	test   eax,eax
    80dc:	js     869f <main+0x2c1f>
    80e2:	cmp    ebp,0x1
    80e5:	je     6d71 <main+0x12f1>
    80eb:	mov    edi,ebp
    80ed:	call   5700 <close@plt>
    80f2:	jmp    6d71 <main+0x12f1>
    80f7:	mov    rcx,QWORD PTR [rip+0x1deaa]        # 25fa8 <opt_key_type>
    80fe:	mov    rdx,QWORD PTR [rsp+0x48]
    8103:	mov    rsi,QWORD PTR [rsp+0x98]
    810b:	mov    rdi,QWORD PTR [rip+0x1e046]        # 26158 <opt_slot>
    8112:	call   14680 <gen_key.constprop.0>
    8117:	jmp    6d87 <main+0x1307>
    811c:	lea    rdi,[rip+0x14dfd]        # 1cf20 <_IO_stdin_used+0x5f20>
    8123:	call   5600 <puts@plt>
    8128:	jmp    7e1d <main+0x239d>
    812d:	mov    rsi,QWORD PTR [rsp+0x98]
    8135:	mov    rdi,QWORD PTR [rip+0x1e01c]        # 26158 <opt_slot>
    813c:	call   12e40 <test_kpgen_certwrite>
    8141:	cmp    DWORD PTR [rsp+0x5c],0x0
    8146:	mov    QWORD PTR [rsp+0x98],rax
    814e:	jne    7bf7 <main+0x2177>
    8154:	jmp    6f57 <main+0x14d7>
    8159:	mov    rcx,QWORD PTR [rip+0x1dfe8]        # 26148 <opt_token_label>
    8160:	lea    rdx,[rip+0x147c1]        # 1c928 <_IO_stdin_used+0x5928>
    8167:	jmp    76eb <main+0x1c6b>
    816c:	lea    rsi,[rip+0x1497d]        # 1caf0 <_IO_stdin_used+0x5af0>
    8173:	mov    edi,0x1
    8178:	xor    eax,eax
    817a:	call   58a0 <__printf_chk@plt>
    817f:	mov    rdx,QWORD PTR [rip+0x1d42a]        # 255b0 <stdin@@GLIBC_2.2.5>
    8186:	mov    rsi,QWORD PTR [rsp+0x48]
    818b:	lea    rdi,[rsp+0xc0]
    8193:	call   16290 <util_getpass>
    8198:	test   eax,eax
    819a:	js     7585 <main+0x1b05>
    81a0:	mov    rsi,QWORD PTR [rsp+0xc0]
    81a8:	test   rsi,rsi
    81ab:	je     7585 <main+0x1b05>
    81b1:	cmp    BYTE PTR [rsi],0x0
    81b4:	je     7585 <main+0x1b05>
    81ba:	or     rdx,0xffffffffffffffff
    81be:	xor    eax,eax
    81c0:	mov    rdi,rsi
    81c3:	mov    rcx,rdx
    81c6:	repnz scas al,BYTE PTR es:[rdi]
    81c8:	mov    rdx,rcx
    81cb:	not    rdx
    81ce:	lea    rax,[rdx-0x1]
    81d2:	cmp    rax,0x14
    81d6:	ja     7585 <main+0x1b05>
    81dc:	lea    rdi,[rsp+0x290]
    81e4:	mov    ecx,0x15
    81e9:	call   57b0 <__memcpy_chk@plt>
    81ee:	mov    QWORD PTR [rsp+0xc0],rax
    81f6:	jmp    74fc <main+0x1a7c>
    81fb:	mov    rax,QWORD PTR [rip+0x1dde6]        # 25fe8 <opt_pin>
    8202:	jmp    74ad <main+0x1a2d>
    8207:	xor    edx,edx
    8209:	jmp    673a <main+0xcba>
    820e:	xor    r8d,r8d
    8211:	jmp    6714 <main+0xc94>
    8216:	movzx  ebx,WORD PTR [rax+0x18]
    821a:	mov    eax,DWORD PTR [rsp+0x28]
    821e:	or     eax,DWORD PTR [rsp+0x2c]
    8222:	je     8321 <main+0x28a1>
    8228:	mov    r8,QWORD PTR [rip+0x1ddd1]        # 26000 <opt_object_id_len>
    822f:	test   bx,bx
    8232:	je     7a75 <main+0x1ff5>
    8238:	test   r8,r8
    823b:	mov    eax,0x0
    8240:	lea    rcx,[rip+0x1de59]        # 260a0 <opt_object_id>
    8247:	mov    rdi,QWORD PTR [rsp+0x98]
    824f:	cmove  rcx,rax
    8253:	lea    r13,[rsp+0xa0]
    825b:	movzx  ebp,bx
    825e:	mov    rdx,r13
    8261:	mov    esi,ebp
    8263:	call   c770 <find_object_flags.constprop.0>
    8268:	cmp    DWORD PTR [rsp+0x14],0x0
    826d:	jne    82ca <main+0x284a>
    826f:	cmp    DWORD PTR [rsp+0x10],0x0
    8274:	jne    8343 <main+0x28c3>
    827a:	cmp    DWORD PTR [rsp+0x54],0x0
    827f:	je     6d08 <main+0x1288>
    8285:	mov    r8,QWORD PTR [rip+0x1dd74]        # 26000 <opt_object_id_len>
    828c:	mov    eax,0x0
    8291:	mov    rdx,r13
    8294:	mov    esi,ebp
    8296:	lea    rcx,[rip+0x1de03]        # 260a0 <opt_object_id>
    829d:	mov    rdi,QWORD PTR [rsp+0x98]
    82a5:	test   r8,r8
    82a8:	cmove  rcx,rax
    82ac:	call   c770 <find_object_flags.constprop.0>
    82b1:	jmp    6d08 <main+0x1288>
    82b6:	lea    r13,[rsp+0xa0]
    82be:	movzx  ebp,bx
    82c1:	test   bx,bx
    82c4:	je     7ab7 <main+0x2037>
    82ca:	mov    r8,QWORD PTR [rip+0x1dd2f]        # 26000 <opt_object_id_len>
    82d1:	mov    eax,0x0
    82d6:	mov    rdx,r13
    82d9:	mov    esi,ebp
    82db:	lea    rcx,[rip+0x1ddbe]        # 260a0 <opt_object_id>
    82e2:	mov    rdi,QWORD PTR [rsp+0x98]
    82ea:	test   r8,r8
    82ed:	cmove  rcx,rax
    82f1:	call   c770 <find_object_flags.constprop.0>
    82f6:	cmp    DWORD PTR [rsp+0x10],0x0
    82fb:	jne    8343 <main+0x28c3>
    82fd:	cmp    DWORD PTR [rsp+0x54],0x0
    8302:	je     6d08 <main+0x1288>
    8308:	lea    r13,[rsp+0xa0]
    8310:	movzx  ebp,bx
    8313:	test   bx,bx
    8316:	jne    8285 <main+0x2805>
    831c:	jmp    7b6a <main+0x20ea>
    8321:	cmp    DWORD PTR [rsp+0x14],0x0
    8326:	jne    82b6 <main+0x2836>
    8328:	cmp    DWORD PTR [rsp+0x10],0x0
    832d:	je     82fd <main+0x287d>
    832f:	lea    r13,[rsp+0xa0]
    8337:	movzx  ebp,bx
    833a:	test   bx,bx
    833d:	je     7b25 <main+0x20a5>
    8343:	mov    r8,QWORD PTR [rip+0x1dcb6]        # 26000 <opt_object_id_len>
    834a:	mov    eax,0x0
    834f:	mov    rdx,r13
    8352:	mov    esi,ebp
    8354:	lea    rcx,[rip+0x1dd45]        # 260a0 <opt_object_id>
    835b:	mov    rdi,QWORD PTR [rsp+0x98]
    8363:	test   r8,r8
    8366:	cmove  rcx,rax
    836a:	call   c770 <find_object_flags.constprop.0>
    836f:	cmp    DWORD PTR [rsp+0x54],0x0
    8374:	jne    8285 <main+0x2805>
    837a:	jmp    6d08 <main+0x1288>
    837f:	cmp    esi,ecx
    8381:	lea    rax,[rip+0x10624]        # 189ac <_IO_stdin_used+0x19ac>
    8388:	lea    rcx,[rip+0x10611]        # 189a0 <_IO_stdin_used+0x19a0>
    838f:	mov    esi,0x1
    8394:	cmovne rcx,rax
    8398:	lea    rdx,[rip+0x14c59]        # 1cff8 <_IO_stdin_used+0x5ff8>
    839f:	xor    eax,eax
    83a1:	call   59b0 <__fprintf_chk@plt>
    83a6:	jmp    7391 <main+0x1911>
    83ab:	xor    ebp,ebp
    83ad:	jmp    8020 <main+0x25a0>
    83b2:	lea    rsi,[rip+0x1081d]        # 18bd6 <_IO_stdin_used+0x1bd6>
    83b9:	mov    edi,0x1
    83be:	xor    eax,eax
    83c0:	call   58a0 <__printf_chk@plt>
    83c5:	mov    rbx,QWORD PTR [rsp+0x48]
    83ca:	lea    rbp,[rsp+0xc8]
    83d2:	mov    rdx,QWORD PTR [rip+0x1d1d7]        # 255b0 <stdin@@GLIBC_2.2.5>
    83d9:	mov    rdi,rbp
    83dc:	mov    rsi,rbx
    83df:	call   16290 <util_getpass>
    83e4:	test   eax,eax
    83e6:	js     7585 <main+0x1b05>
    83ec:	mov    rsi,QWORD PTR [rsp+0xc8]
    83f4:	test   rsi,rsi
    83f7:	je     7585 <main+0x1b05>
    83fd:	cmp    BYTE PTR [rsi],0x0
    8400:	je     7585 <main+0x1b05>
    8406:	or     rdx,0xffffffffffffffff
    840a:	xor    eax,eax
    840c:	mov    rdi,rsi
    840f:	mov    rcx,rdx
    8412:	repnz scas al,BYTE PTR es:[rdi]
    8414:	mov    rdx,rcx
    8417:	not    rdx
    841a:	lea    rax,[rdx-0x1]
    841e:	cmp    rax,0x14
    8422:	ja     7585 <main+0x1b05>
    8428:	lea    r14,[rsp+0x2b0]
    8430:	mov    ecx,0x15
    8435:	mov    rdi,r14
    8438:	call   57b0 <__memcpy_chk@plt>
    843d:	lea    rsi,[rip+0x146cc]        # 1cb10 <_IO_stdin_used+0x5b10>
    8444:	mov    edi,0x1
    8449:	xor    eax,eax
    844b:	call   58a0 <__printf_chk@plt>
    8450:	mov    rdx,QWORD PTR [rip+0x1d159]        # 255b0 <stdin@@GLIBC_2.2.5>
    8457:	mov    rsi,rbx
    845a:	mov    rdi,rbp
    845d:	call   16290 <util_getpass>
    8462:	test   eax,eax
    8464:	js     7585 <main+0x1b05>
    846a:	mov    rbp,QWORD PTR [rsp+0xc8]
    8472:	test   rbp,rbp
    8475:	je     8add <main+0x305d>
    847b:	cmp    BYTE PTR [rbp+0x0],0x0
    847f:	je     8add <main+0x305d>
    8485:	mov    rsi,rbp
    8488:	mov    rdi,r14
    848b:	call   57a0 <strcmp@plt>
    8490:	test   eax,eax
    8492:	jne    8add <main+0x305d>
    8498:	mov    rax,QWORD PTR [rip+0x1d9f1]        # 25e90 <p11>
    849f:	mov    r9,QWORD PTR [rax+0x60]
    84a3:	jmp    7521 <main+0x1aa1>
    84a8:	mov    r12,QWORD PTR [rip+0x1d0f1]        # 255a0 <stdout@@GLIBC_2.2.5>
    84af:	jmp    6fcf <main+0x154f>
    84b4:	mov    rdi,QWORD PTR [rsp+0xc0]
    84bc:	call   5590 <free@plt>
    84c1:	test   r13d,r13d
    84c4:	jne    84d7 <main+0x2a57>
    84c6:	lea    rdi,[rip+0x1082c]        # 18cf9 <_IO_stdin_used+0x1cf9>
    84cd:	call   5600 <puts@plt>
    84d2:	jmp    6f00 <main+0x1480>
    84d7:	mov    edx,r13d
    84da:	lea    rsi,[rip+0x10822]        # 18d03 <_IO_stdin_used+0x1d03>
    84e1:	mov    edi,0x1
    84e6:	xor    eax,eax
    84e8:	call   58a0 <__printf_chk@plt>
    84ed:	jmp    6f00 <main+0x1480>
    84f2:	lea    rdi,[rip+0x1311f]        # 1b618 <_IO_stdin_used+0x4618>
    84f9:	call   5600 <puts@plt>
    84fe:	jmp    7e1d <main+0x239d>
    8503:	mov    rsi,QWORD PTR [rip+0x1dade]        # 25fe8 <opt_pin>
    850a:	test   rsi,rsi
    850d:	je     8618 <main+0x2b98>
    8513:	mov    rax,QWORD PTR [rip+0x1d976]        # 25e90 <p11>
    851a:	jmp    77b3 <main+0x1d33>
    851f:	lea    rdi,[rip+0x14992]        # 1ceb8 <_IO_stdin_used+0x5eb8>
    8526:	call   5600 <puts@plt>
    852b:	jmp    84c1 <main+0x2a41>
    852d:	xor    r13d,r13d
    8530:	lea    rbx,[rsp+0x1c0]
    8538:	jmp    8575 <main+0x2af5>
    853a:	mov    rdx,QWORD PTR [rip+0x1d947]        # 25e88 <p11_slots>
    8541:	lea    rbp,[rax*8+0x0]
    8549:	mov    rsi,rbx
    854c:	mov    rdi,QWORD PTR [rdx+rax*8]
    8550:	mov    rax,QWORD PTR [rip+0x1d939]        # 25e90 <p11>
    8557:	call   QWORD PTR [rax+0x30]
    855a:	test   rax,rax
    855d:	jne    8bf2 <main+0x3172>
    8563:	test   BYTE PTR [rsp+0x220],0x1
    856b:	jne    8712 <main+0x2c92>
    8571:	add    r13d,0x1
    8575:	mov    eax,r13d
    8578:	cmp    rax,QWORD PTR [rip+0x1d901]        # 25e80 <p11_num_slots>
    857f:	jb     853a <main+0x2aba>
    8581:	mov    edx,0x20
    8586:	mov    rcx,QWORD PTR [rip+0x1d053]        # 255e0 <stderr@@GLIBC_2.2.5>
    858d:	mov    esi,0x1
    8592:	lea    rdi,[rip+0x144b7]        # 1ca50 <_IO_stdin_used+0x5a50>
    8599:	mov    r13d,0x1
    859f:	call   59a0 <fwrite@plt>
    85a4:	jmp    70f1 <main+0x1671>
    85a9:	mov    rdi,QWORD PTR [rip+0x1dba8]        # 26158 <opt_slot>
    85b0:	xor    ecx,ecx
    85b2:	xor    edx,edx
    85b4:	mov    esi,0x400
    85b9:	lea    r8,[rip+0x1db60]        # 26120 <opt_mechanism>
    85c0:	call   9300 <find_mechanism>
    85c5:	test   eax,eax
    85c7:	jne    7f7d <main+0x24fd>
    85cd:	lea    rdi,[rip+0x146e4]        # 1ccb8 <_IO_stdin_used+0x5cb8>
    85d4:	call   15f90 <util_fatal>
    85d9:	mov    edi,ebp
    85db:	call   5700 <close@plt>
    85e0:	jmp    806a <main+0x25ea>
    85e5:	mov    rcx,QWORD PTR [rip+0x1cff4]        # 255e0 <stderr@@GLIBC_2.2.5>
    85ec:	mov    edx,0x23
    85f1:	mov    esi,0x1
    85f6:	lea    rdi,[rip+0x14893]        # 1ce90 <_IO_stdin_used+0x5e90>
    85fd:	call   59a0 <fwrite@plt>
    8602:	jmp    6ef5 <main+0x1475>
    8607:	lea    rdi,[rip+0x106c0]        # 18cce <_IO_stdin_used+0x1cce>
    860e:	call   5600 <puts@plt>
    8613:	jmp    84c1 <main+0x2a41>
    8618:	mov    rax,QWORD PTR [rip+0x1d871]        # 25e90 <p11>
    861f:	mov    rsi,QWORD PTR [rip+0x1d9aa]        # 25fd0 <opt_new_pin>
    8626:	mov    r8,QWORD PTR [rax+0x58]
    862a:	test   rsi,rsi
    862d:	jne    77b3 <main+0x1d33>
    8633:	mov    rsi,QWORD PTR [rsp+0xb8]
    863b:	xor    edx,edx
    863d:	test   rsi,rsi
    8640:	je     77cc <main+0x1d4c>
    8646:	jmp    77b7 <main+0x1d37>
    864b:	cmp    QWORD PTR [rip+0x1d975],0x0        # 25fc8 <opt_application_label>
    8653:	jne    6e13 <main+0x1393>
    8659:	cmp    QWORD PTR [rip+0x1d95f],0x0        # 25fc0 <opt_application_id>
    8661:	jne    6e13 <main+0x1393>
    8667:	cmp    DWORD PTR [rip+0x1daba],0x0        # 26128 <opt_object_index_set>
    866e:	jne    6e13 <main+0x1393>
    8674:	lea    rdi,[rip+0x14765]        # 1cde0 <_IO_stdin_used+0x5de0>
    867b:	xor    eax,eax
    867d:	call   15f90 <util_fatal>
    8682:	mov    rdx,QWORD PTR [rsp+0xc8]
    868a:	mov    rsi,r14
    868d:	mov    edi,0x1
    8692:	call   5650 <write@plt>
    8697:	test   eax,eax
    8699:	jns    6d71 <main+0x12f1>
    869f:	mov    rsi,QWORD PTR [rip+0x1daca]        # 26170 <opt_output>
    86a6:	lea    rdi,[rip+0xf799]        # 17e46 <_IO_stdin_used+0xe46>
    86ad:	xor    eax,eax
    86af:	call   15f90 <util_fatal>
    86b4:	cmp    QWORD PTR [rip+0x1d90c],0x0        # 25fc8 <opt_application_label>
    86bc:	jne    6dd9 <main+0x1359>
    86c2:	cmp    QWORD PTR [rip+0x1d8f6],0x0        # 25fc0 <opt_application_id>
    86ca:	jne    6dd9 <main+0x1359>
    86d0:	cmp    QWORD PTR [rip+0x1d8e0],0x0        # 25fb8 <opt_issuer>
    86d8:	jne    6dd9 <main+0x1359>
    86de:	cmp    QWORD PTR [rip+0x1d8ca],0x0        # 25fb0 <opt_subject>
    86e6:	jne    6dd9 <main+0x1359>
    86ec:	lea    rdi,[rip+0x14655]        # 1cd48 <_IO_stdin_used+0x5d48>
    86f3:	xor    eax,eax
    86f5:	call   15f90 <util_fatal>
    86fa:	xor    edx,edx
    86fc:	jmp    755c <main+0x1adc>
    8701:	lea    rdi,[rip+0x12f48]        # 1b650 <_IO_stdin_used+0x4650>
    8708:	call   5600 <puts@plt>
    870d:	jmp    7e1d <main+0x239d>
    8712:	mov    rax,QWORD PTR [rip+0x1d76f]        # 25e88 <p11_slots>
    8719:	mov    ecx,r13d
    871c:	mov    rdi,QWORD PTR [rip+0x1cebd]        # 255e0 <stderr@@GLIBC_2.2.5>
    8723:	lea    rdx,[rip+0x142f6]        # 1ca20 <_IO_stdin_used+0x5a20>
    872a:	mov    esi,0x1
    872f:	mov    r8,QWORD PTR [rax+rbp*1]
    8733:	xor    eax,eax
    8735:	mov    QWORD PTR [rip+0x1da1c],r8        # 26158 <opt_slot>
    873c:	call   59b0 <__fprintf_chk@plt>
    8741:	jmp    657e <main+0xafe>
    8746:	lea    rsi,[rip+0x10489]        # 18bd6 <_IO_stdin_used+0x1bd6>
    874d:	mov    edi,0x1
    8752:	xor    eax,eax
    8754:	call   58a0 <__printf_chk@plt>
    8759:	mov    rbx,QWORD PTR [rsp+0x48]
    875e:	lea    rbp,[rsp+0xc8]
    8766:	mov    rdx,QWORD PTR [rip+0x1ce43]        # 255b0 <stdin@@GLIBC_2.2.5>
    876d:	mov    rdi,rbp
    8770:	mov    rsi,rbx
    8773:	call   16290 <util_getpass>
    8778:	test   eax,eax
    877a:	js     6763 <main+0xce3>
    8780:	mov    rsi,QWORD PTR [rsp+0xc8]
    8788:	lea    r14,[rsp+0x2b0]
    8790:	mov    edx,0x15
    8795:	mov    rdi,r14
    8798:	call   16840 <strlcpy>
    879d:	lea    rsi,[rip+0x1436c]        # 1cb10 <_IO_stdin_used+0x5b10>
    87a4:	mov    edi,0x1
    87a9:	xor    eax,eax
    87ab:	call   58a0 <__printf_chk@plt>
    87b0:	mov    rdx,QWORD PTR [rip+0x1cdf9]        # 255b0 <stdin@@GLIBC_2.2.5>
    87b7:	mov    rsi,rbx
    87ba:	mov    rdi,rbp
    87bd:	call   16290 <util_getpass>
    87c2:	test   eax,eax
    87c4:	js     6763 <main+0xce3>
    87ca:	mov    rbp,QWORD PTR [rsp+0xc8]
    87d2:	test   rbp,rbp
    87d5:	je     8856 <main+0x2dd6>
    87d7:	cmp    BYTE PTR [rbp+0x0],0x0
    87db:	je     8856 <main+0x2dd6>
    87dd:	mov    rsi,rbp
    87e0:	mov    rdi,r14
    87e3:	call   57a0 <strcmp@plt>
    87e8:	test   eax,eax
    87ea:	jne    8856 <main+0x2dd6>
    87ec:	xor    eax,eax
    87ee:	or     rcx,0xffffffffffffffff
    87f2:	mov    rdi,rbp
    87f5:	repnz scas al,BYTE PTR es:[rdi]
    87f7:	mov    rax,rcx
    87fa:	not    rax
    87fd:	sub    rax,0x1
    8801:	cmp    rax,0x14
    8805:	ja     8a05 <main+0x2f85>
    880b:	mov    rax,QWORD PTR [rip+0x1d67e]        # 25e90 <p11>
    8812:	mov    r9,QWORD PTR [rax+0x60]
    8816:	jmp    66ff <main+0xc7f>
    881b:	lea    rdx,[rip+0x14156]        # 1c978 <_IO_stdin_used+0x5978>
    8822:	mov    esi,0x1
    8827:	xor    eax,eax
    8829:	mov    r13d,0x1
    882f:	call   59b0 <__fprintf_chk@plt>
    8834:	mov    edx,0x65
    8839:	mov    rcx,QWORD PTR [rip+0x1cda0]        # 255e0 <stderr@@GLIBC_2.2.5>
    8840:	mov    esi,0x1
    8845:	lea    rdi,[rip+0x1416c]        # 1c9b8 <_IO_stdin_used+0x59b8>
    884c:	call   59a0 <fwrite@plt>
    8851:	jmp    70f1 <main+0x1671>
    8856:	cmp    rbp,QWORD PTR [rip+0x1d773]        # 25fd0 <opt_new_pin>
    885d:	je     8867 <main+0x2de7>
    885f:	mov    rdi,rbp
    8862:	call   5590 <free@plt>
    8867:	lea    rdi,[rip+0x103a5]        # 18c13 <_IO_stdin_used+0x1c13>
    886e:	call   5600 <puts@plt>
    8873:	mov    DWORD PTR [rsp+0x40],0xffffffff
    887b:	jmp    6763 <main+0xce3>
    8880:	cmp    QWORD PTR [rip+0x1d748],0x0        # 25fd0 <opt_new_pin>
    8888:	mov    rsi,QWORD PTR [rip+0x1d741]        # 25fd0 <opt_new_pin>
    888f:	jne    77b3 <main+0x1d33>
    8895:	lea    rsi,[rip+0x1033a]        # 18bd6 <_IO_stdin_used+0x1bd6>
    889c:	mov    edi,0x1
    88a1:	xor    eax,eax
    88a3:	call   58a0 <__printf_chk@plt>
    88a8:	mov    rdx,QWORD PTR [rip+0x1cd01]        # 255b0 <stdin@@GLIBC_2.2.5>
    88af:	lea    rsi,[rsp+0xc8]
    88b7:	lea    rdi,[rsp+0xb8]
    88bf:	call   16290 <util_getpass>
    88c4:	test   eax,eax
    88c6:	js     8c01 <main+0x3181>
    88cc:	mov    rdi,QWORD PTR [rsp+0xb8]
    88d4:	test   rdi,rdi
    88d7:	je     89bb <main+0x2f3b>
    88dd:	cmp    BYTE PTR [rdi],0x0
    88e0:	je     89bb <main+0x2f3b>
    88e6:	xor    eax,eax
    88e8:	or     rcx,0xffffffffffffffff
    88ec:	repnz scas al,BYTE PTR es:[rdi]
    88ee:	mov    rax,rcx
    88f1:	not    rax
    88f4:	sub    rax,0x1
    88f8:	cmp    rax,0x14
    88fc:	ja     89bb <main+0x2f3b>
    8902:	lea    rsi,[rip+0x14207]        # 1cb10 <_IO_stdin_used+0x5b10>
    8909:	mov    edi,0x1
    890e:	xor    eax,eax
    8910:	call   58a0 <__printf_chk@plt>
    8915:	mov    rdx,QWORD PTR [rip+0x1cc94]        # 255b0 <stdin@@GLIBC_2.2.5>
    891c:	mov    rsi,QWORD PTR [rsp+0x48]
    8921:	lea    rdi,[rsp+0xc0]
    8929:	call   16290 <util_getpass>
    892e:	test   eax,eax
    8930:	js     8c01 <main+0x3181>
    8936:	mov    rsi,QWORD PTR [rsp+0xc0]
    893e:	test   rsi,rsi
    8941:	je     895d <main+0x2edd>
    8943:	cmp    BYTE PTR [rsi],0x0
    8946:	je     895d <main+0x2edd>
    8948:	mov    rdi,QWORD PTR [rsp+0xb8]
    8950:	call   57a0 <strcmp@plt>
    8955:	test   eax,eax
    8957:	je     8503 <main+0x2a83>
    895d:	lea    rdi,[rip+0x102de]        # 18c42 <_IO_stdin_used+0x1c42>
    8964:	xor    eax,eax
    8966:	call   15f90 <util_fatal>
    896b:	mov    rsi,r15
    896e:	lea    rdi,[rip+0x10089]        # 189fe <_IO_stdin_used+0x19fe>
    8975:	xor    eax,eax
    8977:	call   15f90 <util_fatal>
    897c:	lea    rsi,[rip+0x14225]        # 1cba8 <_IO_stdin_used+0x5ba8>
    8983:	mov    edi,0x1
    8988:	xor    eax,eax
    898a:	call   58a0 <__printf_chk@plt>
    898f:	jmp    79e9 <main+0x1f69>
    8994:	lea    rsi,[rip+0x141d5]        # 1cb70 <_IO_stdin_used+0x5b70>
    899b:	mov    edi,0x1
    89a0:	xor    eax,eax
    89a2:	call   58a0 <__printf_chk@plt>
    89a7:	jmp    79e9 <main+0x1f69>
    89ac:	mov    rsi,rbp
    89af:	lea    rdi,[rip+0x102a4]        # 18c5a <_IO_stdin_used+0x1c5a>
    89b6:	call   9140 <p11_fatal>
    89bb:	lea    rdi,[rip+0x1026f]        # 18c31 <_IO_stdin_used+0x1c31>
    89c2:	xor    eax,eax
    89c4:	call   15f90 <util_fatal>
    89c9:	lea    rdi,[rip+0xf9d1]        # 183a1 <_IO_stdin_used+0x13a1>
    89d0:	call   15f90 <util_fatal>
    89d5:	lea    rdi,[rip+0x100e0]        # 18abc <_IO_stdin_used+0x1abc>
    89dc:	call   9140 <p11_fatal>
    89e1:	mov    rsi,QWORD PTR [rip+0x1d790]        # 26178 <opt_input>
    89e8:	lea    rdi,[rip+0xf34c]        # 17d3b <_IO_stdin_used+0xd3b>
    89ef:	xor    eax,eax
    89f1:	call   15f90 <util_fatal>
    89f6:	mov    rsi,rax
    89f9:	lea    rdi,[rip+0xf0c0]        # 17ac0 <_IO_stdin_used+0xac0>
    8a00:	call   9140 <p11_fatal>
    8a05:	cmp    rbp,QWORD PTR [rip+0x1d5c4]        # 25fd0 <opt_new_pin>
    8a0c:	je     6763 <main+0xce3>
    8a12:	mov    rdi,rbp
    8a15:	call   5590 <free@plt>
    8a1a:	jmp    6763 <main+0xce3>
    8a1f:	lea    rdi,[rip+0xf084]        # 17aaa <_IO_stdin_used+0xaaa>
    8a26:	call   9140 <p11_fatal>
    8a2b:	mov    rsi,QWORD PTR [rip+0x1d73e]        # 26170 <opt_output>
    8a32:	lea    rdi,[rip+0x102fb]        # 18d34 <_IO_stdin_used+0x1d34>
    8a39:	xor    eax,eax
    8a3b:	call   15f90 <util_fatal>
    8a40:	mov    rsi,QWORD PTR [rip+0x1d729]        # 26170 <opt_output>
    8a47:	lea    rdi,[rip+0x102d5]        # 18d23 <_IO_stdin_used+0x1d23>
    8a4e:	xor    eax,eax
    8a50:	call   15f90 <util_fatal>
    8a55:	mov    rsi,rax
    8a58:	lea    rdi,[rip+0x102ea]        # 18d49 <_IO_stdin_used+0x1d49>
    8a5f:	call   9140 <p11_fatal>
    8a64:	xor    eax,eax
    8a66:	or     rcx,0xffffffffffffffff
    8a6a:	mov    rdi,rsi
    8a6d:	repnz scas al,BYTE PTR es:[rdi]
    8a6f:	mov    rdi,rbp
    8a72:	mov    rax,rcx
    8a75:	mov    rcx,r14
    8a78:	not    rax
    8a7b:	lea    rdx,[rax-0x1]
    8a7f:	call   r8
    8a82:	test   rax,rax
    8a85:	je     70bd <main+0x163d>
    8a8b:	mov    rsi,rax
    8a8e:	lea    rdi,[rip+0x10135]        # 18bca <_IO_stdin_used+0x1bca>
    8a95:	call   9140 <p11_fatal>
    8a9a:	mov    rcx,rdx
    8a9d:	lea    rdx,[rip+0xffa5]        # 18a49 <_IO_stdin_used+0x1a49>
    8aa4:	jmp    7713 <main+0x1c93>
    8aa9:	lea    rdi,[rip+0x10141]        # 18bf1 <_IO_stdin_used+0x1bf1>
    8ab0:	call   9140 <p11_fatal>
    8ab5:	lea    rdi,[rip+0x144c4]        # 1cf80 <_IO_stdin_used+0x5f80>
    8abc:	xor    eax,eax
    8abe:	call   15f90 <util_fatal>
    8ac3:	lea    rdi,[rip+0x1019a]        # 18c64 <_IO_stdin_used+0x1c64>
    8aca:	call   15f90 <util_fatal>
    8acf:	lea    rdi,[rip+0x144e2]        # 1cfb8 <_IO_stdin_used+0x5fb8>
    8ad6:	xor    eax,eax
    8ad8:	call   15f90 <util_fatal>
    8add:	mov    rdi,rbp
    8ae0:	call   5590 <free@plt>
    8ae5:	jmp    7585 <main+0x1b05>
    8aea:	mov    rsi,rax
    8aed:	lea    rdi,[rip+0xef85]        # 17a79 <_IO_stdin_used+0xa79>
    8af4:	call   9140 <p11_fatal>
    8af9:	cmp    DWORD PTR [rip+0x1d618],0x0        # 26118 <opt_mechanism_used>
    8b00:	je     8b4c <main+0x30cc>
    8b02:	mov    rax,QWORD PTR [rip+0x1d617]        # 26120 <opt_mechanism>
    8b09:	sub    rax,0x1050
    8b0f:	cmp    rax,0x1
    8b13:	jbe    8b3e <main+0x30be>
    8b15:	lea    rdi,[rip+0x14174]        # 1cc90 <_IO_stdin_used+0x5c90>
    8b1c:	xor    eax,eax
    8b1e:	call   15f90 <util_fatal>
    8b23:	mov    rsi,rax
    8b26:	lea    rdi,[rip+0xefe1]        # 17b0e <_IO_stdin_used+0xb0e>
    8b2d:	call   9140 <p11_fatal>
    8b32:	lea    rdi,[rip+0xefc3]        # 17afc <_IO_stdin_used+0xafc>
    8b39:	call   9140 <p11_fatal>
    8b3e:	lea    rdi,[rip+0x1014a]        # 18c8f <_IO_stdin_used+0x1c8f>
    8b45:	xor    eax,eax
    8b47:	call   15f90 <util_fatal>
    8b4c:	mov    rsi,QWORD PTR [rip+0x1a4fd]        # 23050 <opt_allow_sw>
    8b53:	mov    rdi,QWORD PTR [rip+0x1d5fe]        # 26158 <opt_slot>
    8b5a:	xor    ecx,ecx
    8b5c:	xor    edx,edx
    8b5e:	lea    r8,[rip+0x1d5bb]        # 26120 <opt_mechanism>
    8b65:	or     rsi,0x80000
    8b6c:	call   9300 <find_mechanism>
    8b71:	test   eax,eax
    8b73:	jne    8b02 <main+0x3082>
    8b75:	lea    rdi,[rip+0x140f4]        # 1cc70 <_IO_stdin_used+0x5c70>
    8b7c:	call   15f90 <util_fatal>
    8b81:	lea    rdi,[rip+0xef47]        # 17acf <_IO_stdin_used+0xacf>
    8b88:	call   9140 <p11_fatal>
    8b8d:	lea    rdi,[rip+0x142c4]        # 1ce58 <_IO_stdin_used+0x5e58>
    8b94:	xor    eax,eax
    8b96:	call   15f90 <util_fatal>
    8b9b:	lea    rdi,[rip+0x1420e]        # 1cdb0 <_IO_stdin_used+0x5db0>
    8ba2:	xor    eax,eax
    8ba4:	call   15f90 <util_fatal>
    8ba9:	lea    rdi,[rip+0xfb1f]        # 186cf <_IO_stdin_used+0x16cf>
    8bb0:	call   9140 <p11_fatal>
    8bb5:	lea    rdi,[rip+0x1415c]        # 1cd18 <_IO_stdin_used+0x5d18>
    8bbc:	xor    eax,eax
    8bbe:	call   15f90 <util_fatal>
    8bc3:	mov    rsi,QWORD PTR [rip+0x1d5a6]        # 26170 <opt_output>
    8bca:	lea    rdi,[rip+0xf17d]        # 17d4e <_IO_stdin_used+0xd4e>
    8bd1:	xor    eax,eax
    8bd3:	call   15f90 <util_fatal>
    8bd8:	lea    rdi,[rip+0x1009b]        # 18c7a <_IO_stdin_used+0x1c7a>
    8bdf:	call   15f90 <util_fatal>
    8be4:	lea    rdi,[rip+0x140f5]        # 1cce0 <_IO_stdin_used+0x5ce0>
    8beb:	xor    eax,eax
    8bed:	call   15f90 <util_fatal>
    8bf2:	mov    rsi,rax
    8bf5:	lea    rdi,[rip+0xff4f]        # 18b4b <_IO_stdin_used+0x1b4b>
    8bfc:	call   9140 <p11_fatal>
    8c01:	lea    rdi,[rip+0xff8e]        # 18b96 <_IO_stdin_used+0x1b96>
    8c08:	xor    eax,eax
    8c0a:	call   15f90 <util_fatal>
    8c0f:	lea    rdi,[rip+0xff8f]        # 18ba5 <_IO_stdin_used+0x1ba5>
    8c16:	xor    eax,eax
    8c18:	call   15f90 <util_fatal>
    8c1d:	mov    rcx,QWORD PTR [rip+0x1c9bc]        # 255e0 <stderr@@GLIBC_2.2.5>
    8c24:	mov    edx,0x33
    8c29:	mov    esi,0x1
    8c2e:	lea    rdi,[rip+0x13f03]        # 1cb38 <_IO_stdin_used+0x5b38>
    8c35:	call   59a0 <fwrite@plt>
    8c3a:	jmp    7726 <main+0x1ca6>
    8c3f:	mov    rcx,QWORD PTR [rip+0x1c99a]        # 255e0 <stderr@@GLIBC_2.2.5>
    8c46:	mov    edx,0x38
    8c4b:	mov    esi,0x1
    8c50:	lea    rdi,[rip+0x13b41]        # 1c798 <_IO_stdin_used+0x5798>
    8c57:	call   59a0 <fwrite@plt>
    8c5c:	mov    edi,0x1
    8c61:	call   5990 <exit@plt>
    8c66:	mov    rsi,rax
    8c69:	lea    rdi,[rip+0x13b68]        # 1c7d8 <_IO_stdin_used+0x57d8>
    8c70:	call   9140 <p11_fatal>
    8c75:	lea    rdi,[rip+0xfe02]        # 18a7e <_IO_stdin_used+0x1a7e>
    8c7c:	call   5910 <perror@plt>
    8c81:	mov    edi,0x1
    8c86:	call   5990 <exit@plt>
    8c8b:	call   5690 <__stack_chk_fail@plt>
    8c90:	call   55e0 <__errno_location@plt>
    8c95:	mov    edi,DWORD PTR [rax]
    8c97:	call   59d0 <strerror@plt>
    8c9c:	lea    rdi,[rip+0xfe30]        # 18ad3 <_IO_stdin_used+0x1ad3>
    8ca3:	mov    rsi,rax
    8ca6:	xor    eax,eax
    8ca8:	call   15f90 <util_fatal>
    8cad:	lea    rdi,[rip+0x13dc4]        # 1ca78 <_IO_stdin_used+0x5a78>
    8cb4:	xor    eax,eax
    8cb6:	call   15f90 <util_fatal>
    8cbb:	lea    rdi,[rip+0xfa3b]        # 186fd <_IO_stdin_used+0x16fd>
    8cc2:	call   15f90 <util_fatal>
    8cc7:	lea    rdi,[rip+0xfd98]        # 18a66 <_IO_stdin_used+0x1a66>
    8cce:	xor    eax,eax
    8cd0:	call   15f90 <util_fatal>
    8cd5:	mov    rcx,QWORD PTR [rip+0x1c904]        # 255e0 <stderr@@GLIBC_2.2.5>
    8cdc:	mov    edx,0x59
    8ce1:	mov    esi,0x1
    8ce6:	lea    rdi,[rip+0x139db]        # 1c6c8 <_IO_stdin_used+0x56c8>
    8ced:	call   59a0 <fwrite@plt>
    8cf2:	jmp    7726 <main+0x1ca6>
    8cf7:	lea    rdi,[rip+0xfe5b]        # 18b59 <_IO_stdin_used+0x1b59>
    8cfe:	xor    eax,eax
    8d00:	call   15f90 <util_fatal>
    8d05:	mov    rdi,QWORD PTR [rip+0x1c8d4]        # 255e0 <stderr@@GLIBC_2.2.5>
    8d0c:	mov    ecx,0xa
    8d11:	lea    rdx,[rip+0x13a10]        # 1c728 <_IO_stdin_used+0x5728>
    8d18:	xor    eax,eax
    8d1a:	mov    esi,0x1
    8d1f:	call   59b0 <__fprintf_chk@plt>
    8d24:	jmp    7726 <main+0x1ca6>
    8d29:	mov    rsi,rax
    8d2c:	lea    rdi,[rip+0xfd59]        # 18a8c <_IO_stdin_used+0x1a8c>
    8d33:	call   9140 <p11_fatal>
    8d38:	mov    rsi,rax
    8d3b:	lea    rdi,[rip+0xfdad]        # 18aef <_IO_stdin_used+0x1aef>
    8d42:	call   9140 <p11_fatal>
    8d47:	mov    rsi,rax
    8d4a:	lea    rdi,[rip+0xed28]        # 17a79 <_IO_stdin_used+0xa79>
    8d51:	call   9140 <p11_fatal>
    8d56:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000008d60 <_start>:
    8d60:	endbr64 
    8d64:	xor    ebp,ebp
    8d66:	mov    r9,rdx
    8d69:	pop    rsi
    8d6a:	mov    rdx,rsp
    8d6d:	and    rsp,0xfffffffffffffff0
    8d71:	push   rax
    8d72:	push   rsp
    8d73:	lea    r8,[rip+0xdba6]        # 16920 <__libc_csu_fini>
    8d7a:	lea    rcx,[rip+0xdb2f]        # 168b0 <__libc_csu_init>
    8d81:	lea    rdi,[rip+0xffffffffffffccf8]        # 5a80 <main>
    8d88:	call   QWORD PTR [rip+0x1a242]        # 22fd0 <__libc_start_main@GLIBC_2.2.5>
    8d8e:	hlt    
    8d8f:	nop

0000000000008d90 <deregister_tm_clones>:
    8d90:	lea    rdi,[rip+0x1c7f9]        # 25590 <__TMC_END__>
    8d97:	lea    rax,[rip+0x1c7f2]        # 25590 <__TMC_END__>
    8d9e:	cmp    rax,rdi
    8da1:	je     8db8 <deregister_tm_clones+0x28>
    8da3:	mov    rax,QWORD PTR [rip+0x1a21e]        # 22fc8 <_ITM_deregisterTMCloneTable>
    8daa:	test   rax,rax
    8dad:	je     8db8 <deregister_tm_clones+0x28>
    8daf:	jmp    rax
    8db1:	nop    DWORD PTR [rax+0x0]
    8db8:	ret    
    8db9:	nop    DWORD PTR [rax+0x0]

0000000000008dc0 <register_tm_clones>:
    8dc0:	lea    rdi,[rip+0x1c7c9]        # 25590 <__TMC_END__>
    8dc7:	lea    rsi,[rip+0x1c7c2]        # 25590 <__TMC_END__>
    8dce:	sub    rsi,rdi
    8dd1:	mov    rax,rsi
    8dd4:	shr    rsi,0x3f
    8dd8:	sar    rax,0x3
    8ddc:	add    rsi,rax
    8ddf:	sar    rsi,1
    8de2:	je     8df8 <register_tm_clones+0x38>
    8de4:	mov    rax,QWORD PTR [rip+0x1a1f5]        # 22fe0 <_ITM_registerTMCloneTable>
    8deb:	test   rax,rax
    8dee:	je     8df8 <register_tm_clones+0x38>
    8df0:	jmp    rax
    8df2:	nop    WORD PTR [rax+rax*1+0x0]
    8df8:	ret    
    8df9:	nop    DWORD PTR [rax+0x0]

0000000000008e00 <__do_global_dtors_aux>:
    8e00:	endbr64 
    8e04:	cmp    BYTE PTR [rip+0x1c7dd],0x0        # 255e8 <completed.8061>
    8e0b:	jne    8e38 <__do_global_dtors_aux+0x38>
    8e0d:	push   rbp
    8e0e:	cmp    QWORD PTR [rip+0x1a1d2],0x0        # 22fe8 <__cxa_finalize@GLIBC_2.2.5>
    8e16:	mov    rbp,rsp
    8e19:	je     8e27 <__do_global_dtors_aux+0x27>
    8e1b:	mov    rdi,QWORD PTR [rip+0x1a1e6]        # 23008 <__dso_handle>
    8e22:	call   5550 <__cxa_finalize@plt>
    8e27:	call   8d90 <deregister_tm_clones>
    8e2c:	mov    BYTE PTR [rip+0x1c7b5],0x1        # 255e8 <completed.8061>
    8e33:	pop    rbp
    8e34:	ret    
    8e35:	nop    DWORD PTR [rax]
    8e38:	ret    
    8e39:	nop    DWORD PTR [rax+0x0]

0000000000008e40 <frame_dummy>:
    8e40:	endbr64 
    8e44:	jmp    8dc0 <register_tm_clones>
    8e49:	nop    DWORD PTR [rax+0x0]

0000000000008e50 <CKR2Str>:
    8e50:	cmp    rdi,0x1a1
    8e57:	ja     8e88 <CKR2Str+0x38>
    8e59:	lea    rdx,[rip+0x151a0]        # 1e000 <_IO_stdin_used+0x7000>
    8e60:	movsxd rax,DWORD PTR [rdx+rdi*4]
    8e64:	add    rax,rdx
    8e67:	notrack jmp rax
    8e6a:	lea    rax,[rip+0xe805]        # 17676 <_IO_stdin_used+0x676>
    8e71:	ret    
    8e72:	lea    rax,[rip+0xfb2c]        # 189a5 <_IO_stdin_used+0x19a5>
    8e79:	ret    
    8e7a:	lea    rax,[rip+0xe183]        # 17004 <_IO_stdin_used+0x4>
    8e81:	ret    
    8e82:	nop    WORD PTR [rax+rax*1+0x0]
    8e88:	mov    eax,0x80000000
    8e8d:	lea    rdx,[rip+0xe7ed]        # 17681 <_IO_stdin_used+0x681>
    8e94:	cmp    rdi,rax
    8e97:	lea    rax,[rip+0xe166]        # 17004 <_IO_stdin_used+0x4>
    8e9e:	cmove  rax,rdx
    8ea2:	ret    
    8ea3:	lea    rax,[rip+0xe7b7]        # 17661 <_IO_stdin_used+0x661>
    8eaa:	ret    
    8eab:	lea    rax,[rip+0xe7a1]        # 17653 <_IO_stdin_used+0x653>
    8eb2:	ret    
    8eb3:	lea    rax,[rip+0x11846]        # 1a700 <_IO_stdin_used+0x3700>
    8eba:	ret    
    8ebb:	lea    rax,[rip+0xe774]        # 17636 <_IO_stdin_used+0x636>
    8ec2:	ret    
    8ec3:	lea    rax,[rip+0xe757]        # 17621 <_IO_stdin_used+0x621>
    8eca:	ret    
    8ecb:	lea    rax,[rip+0xe735]        # 17607 <_IO_stdin_used+0x607>
    8ed2:	ret    
    8ed3:	lea    rax,[rip+0xe715]        # 175ef <_IO_stdin_used+0x5ef>
    8eda:	ret    
    8edb:	lea    rax,[rip+0xe6f8]        # 175da <_IO_stdin_used+0x5da>
    8ee2:	ret    
    8ee3:	lea    rax,[rip+0xe6d6]        # 175c0 <_IO_stdin_used+0x5c0>
    8eea:	ret    
    8eeb:	lea    rax,[rip+0xe6bc]        # 175ae <_IO_stdin_used+0x5ae>
    8ef2:	ret    
    8ef3:	lea    rax,[rip+0xe696]        # 17590 <_IO_stdin_used+0x590>
    8efa:	ret    
    8efb:	lea    rax,[rip+0x117d6]        # 1a6d8 <_IO_stdin_used+0x36d8>
    8f02:	ret    
    8f03:	lea    rax,[rip+0xe66a]        # 17574 <_IO_stdin_used+0x574>
    8f0a:	ret    
    8f0b:	lea    rax,[rip+0x117a6]        # 1a6b8 <_IO_stdin_used+0x36b8>
    8f12:	ret    
    8f13:	lea    rax,[rip+0xe640]        # 1755a <_IO_stdin_used+0x55a>
    8f1a:	ret    
    8f1b:	lea    rax,[rip+0xe620]        # 17542 <_IO_stdin_used+0x542>
    8f22:	ret    
    8f23:	lea    rax,[rip+0xe600]        # 1752a <_IO_stdin_used+0x52a>
    8f2a:	ret    
    8f2b:	lea    rax,[rip+0x1175e]        # 1a690 <_IO_stdin_used+0x3690>
    8f32:	ret    
    8f33:	lea    rax,[rip+0xe5da]        # 17514 <_IO_stdin_used+0x514>
    8f3a:	ret    
    8f3b:	lea    rax,[rip+0xe5b5]        # 174f7 <_IO_stdin_used+0x4f7>
    8f42:	ret    
    8f43:	lea    rax,[rip+0xe596]        # 174e0 <_IO_stdin_used+0x4e0>
    8f4a:	ret    
    8f4b:	lea    rax,[rip+0xe573]        # 174c5 <_IO_stdin_used+0x4c5>
    8f52:	ret    
    8f53:	lea    rax,[rip+0x1170e]        # 1a668 <_IO_stdin_used+0x3668>
    8f5a:	ret    
    8f5b:	lea    rax,[rip+0xe545]        # 174a7 <_IO_stdin_used+0x4a7>
    8f62:	ret    
    8f63:	lea    rax,[rip+0x116d6]        # 1a640 <_IO_stdin_used+0x3640>
    8f6a:	ret    
    8f6b:	lea    rax,[rip+0xe51b]        # 1748d <_IO_stdin_used+0x48d>
    8f72:	ret    
    8f73:	lea    rax,[rip+0xe4fa]        # 17474 <_IO_stdin_used+0x474>
    8f7a:	ret    
    8f7b:	lea    rax,[rip+0xe4dc]        # 1745e <_IO_stdin_used+0x45e>
    8f82:	ret    
    8f83:	lea    rax,[rip+0xe4ba]        # 17444 <_IO_stdin_used+0x444>
    8f8a:	ret    
    8f8b:	lea    rax,[rip+0xe49a]        # 1742c <_IO_stdin_used+0x42c>
    8f92:	ret    
    8f93:	lea    rax,[rip+0xe47a]        # 17414 <_IO_stdin_used+0x414>
    8f9a:	ret    
    8f9b:	lea    rax,[rip+0xe45c]        # 173fe <_IO_stdin_used+0x3fe>
    8fa2:	ret    
    8fa3:	lea    rax,[rip+0x1166e]        # 1a618 <_IO_stdin_used+0x3618>
    8faa:	ret    
    8fab:	lea    rax,[rip+0xe42f]        # 173e1 <_IO_stdin_used+0x3e1>
    8fb2:	ret    
    8fb3:	lea    rax,[rip+0xe414]        # 173ce <_IO_stdin_used+0x3ce>
    8fba:	ret    
    8fbb:	lea    rax,[rip+0xe3f6]        # 173b8 <_IO_stdin_used+0x3b8>
    8fc2:	ret    
    8fc3:	lea    rax,[rip+0x11626]        # 1a5f0 <_IO_stdin_used+0x35f0>
    8fca:	ret    
    8fcb:	lea    rax,[rip+0xe3cb]        # 1739d <_IO_stdin_used+0x39d>
    8fd2:	ret    
    8fd3:	lea    rax,[rip+0xe3b1]        # 1738b <_IO_stdin_used+0x38b>
    8fda:	ret    
    8fdb:	lea    rax,[rip+0xe396]        # 17378 <_IO_stdin_used+0x378>
    8fe2:	ret    
    8fe3:	lea    rax,[rip+0xe37f]        # 17369 <_IO_stdin_used+0x369>
    8fea:	ret    
    8feb:	lea    rax,[rip+0xe367]        # 17359 <_IO_stdin_used+0x359>
    8ff2:	ret    
    8ff3:	lea    rax,[rip+0xe34d]        # 17347 <_IO_stdin_used+0x347>
    8ffa:	ret    
    8ffb:	lea    rax,[rip+0xe335]        # 17337 <_IO_stdin_used+0x337>
    9002:	ret    
    9003:	lea    rax,[rip+0xe31b]        # 17325 <_IO_stdin_used+0x325>
    900a:	ret    
    900b:	lea    rax,[rip+0xe2f5]        # 17307 <_IO_stdin_used+0x307>
    9012:	ret    
    9013:	lea    rax,[rip+0xe2d8]        # 172f2 <_IO_stdin_used+0x2f2>
    901a:	ret    
    901b:	lea    rax,[rip+0xe2b6]        # 172d8 <_IO_stdin_used+0x2d8>
    9022:	ret    
    9023:	lea    rax,[rip+0xe292]        # 172bc <_IO_stdin_used+0x2bc>
    902a:	ret    
    902b:	lea    rax,[rip+0xe274]        # 172a6 <_IO_stdin_used+0x2a6>
    9032:	ret    
    9033:	lea    rax,[rip+0xe256]        # 17290 <_IO_stdin_used+0x290>
    903a:	ret    
    903b:	lea    rax,[rip+0xe238]        # 1727a <_IO_stdin_used+0x27a>
    9042:	ret    
    9043:	lea    rax,[rip+0x11586]        # 1a5d0 <_IO_stdin_used+0x35d0>
    904a:	ret    
    904b:	lea    rax,[rip+0xe213]        # 17265 <_IO_stdin_used+0x265>
    9052:	ret    
    9053:	lea    rax,[rip+0xe1fc]        # 17256 <_IO_stdin_used+0x256>
    905a:	ret    
    905b:	lea    rax,[rip+0xe1e4]        # 17246 <_IO_stdin_used+0x246>
    9062:	ret    
    9063:	lea    rax,[rip+0xe1c9]        # 17233 <_IO_stdin_used+0x233>
    906a:	ret    
    906b:	lea    rax,[rip+0xe1a7]        # 17219 <_IO_stdin_used+0x219>
    9072:	ret    
    9073:	lea    rax,[rip+0xe18c]        # 17206 <_IO_stdin_used+0x206>
    907a:	ret    
    907b:	lea    rax,[rip+0xe16d]        # 171ef <_IO_stdin_used+0x1ef>
    9082:	ret    
    9083:	lea    rax,[rip+0xe14a]        # 171d4 <_IO_stdin_used+0x1d4>
    908a:	ret    
    908b:	lea    rax,[rip+0xe128]        # 171ba <_IO_stdin_used+0x1ba>
    9092:	ret    
    9093:	lea    rax,[rip+0xe10a]        # 171a4 <_IO_stdin_used+0x1a4>
    909a:	ret    
    909b:	lea    rax,[rip+0xe0e5]        # 17187 <_IO_stdin_used+0x187>
    90a2:	ret    
    90a3:	lea    rax,[rip+0xe0c2]        # 1716c <_IO_stdin_used+0x16c>
    90aa:	ret    
    90ab:	lea    rax,[rip+0xe0a7]        # 17159 <_IO_stdin_used+0x159>
    90b2:	ret    
    90b3:	lea    rax,[rip+0xe08d]        # 17147 <_IO_stdin_used+0x147>
    90ba:	ret    
    90bb:	lea    rax,[rip+0xe074]        # 17136 <_IO_stdin_used+0x136>
    90c2:	ret    
    90c3:	lea    rax,[rip+0xe059]        # 17123 <_IO_stdin_used+0x123>
    90ca:	ret    
    90cb:	lea    rax,[rip+0xe040]        # 17112 <_IO_stdin_used+0x112>
    90d2:	ret    
    90d3:	lea    rax,[rip+0xe01c]        # 170f6 <_IO_stdin_used+0xf6>
    90da:	ret    
    90db:	lea    rax,[rip+0xdff9]        # 170db <_IO_stdin_used+0xdb>
    90e2:	ret    
    90e3:	lea    rax,[rip+0xdfd9]        # 170c3 <_IO_stdin_used+0xc3>
    90ea:	ret    
    90eb:	lea    rax,[rip+0xdfb9]        # 170ab <_IO_stdin_used+0xab>
    90f2:	ret    
    90f3:	lea    rax,[rip+0xdfa3]        # 1709d <_IO_stdin_used+0x9d>
    90fa:	ret    
    90fb:	lea    rax,[rip+0xdf80]        # 17082 <_IO_stdin_used+0x82>
    9102:	ret    
    9103:	lea    rax,[rip+0xdf6b]        # 17075 <_IO_stdin_used+0x75>
    910a:	ret    
    910b:	lea    rax,[rip+0xdf51]        # 17063 <_IO_stdin_used+0x63>
    9112:	ret    
    9113:	lea    rax,[rip+0xdf35]        # 1704f <_IO_stdin_used+0x4f>
    911a:	ret    
    911b:	lea    rax,[rip+0xdf1b]        # 1703d <_IO_stdin_used+0x3d>
    9122:	ret    
    9123:	lea    rax,[rip+0xdeff]        # 17029 <_IO_stdin_used+0x29>
    912a:	ret    
    912b:	lea    rax,[rip+0xdee7]        # 17019 <_IO_stdin_used+0x19>
    9132:	ret    
    9133:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    913e:	xchg   ax,ax

0000000000009140 <p11_fatal>:
    9140:	push   rbp
    9141:	mov    rbp,rdi
    9144:	push   rbx
    9145:	mov    rbx,rsi
    9148:	sub    rsp,0x8
    914c:	mov    rax,QWORD PTR [rip+0x1cd3d]        # 25e90 <p11>
    9153:	test   rax,rax
    9156:	je     915d <p11_fatal+0x1d>
    9158:	xor    edi,edi
    915a:	call   QWORD PTR [rax+0x10]
    915d:	mov    rdi,QWORD PTR [rip+0x1cd34]        # 25e98 <module>
    9164:	test   rdi,rdi
    9167:	je     916e <p11_fatal+0x2e>
    9169:	call   16590 <C_UnloadModule>
    916e:	mov    rdi,rbx
    9171:	call   8e50 <CKR2Str>
    9176:	mov    ecx,ebx
    9178:	mov    rsi,rbp
    917b:	lea    rdi,[rip+0x115a6]        # 1a728 <_IO_stdin_used+0x3728>
    9182:	mov    rdx,rax
    9185:	xor    eax,eax
    9187:	call   15f90 <util_fatal>
    918c:	nop    DWORD PTR [rax+0x0]

0000000000009190 <get_token_info>:
    9190:	sub    rsp,0x8
    9194:	mov    rax,QWORD PTR [rip+0x1ccf5]        # 25e90 <p11>
    919b:	call   QWORD PTR [rax+0x38]
    919e:	test   rax,rax
    91a1:	jne    91a8 <get_token_info+0x18>
    91a3:	add    rsp,0x8
    91a7:	ret    
    91a8:	mov    rsi,rax
    91ab:	lea    rdi,[rip+0xe4e2]        # 17694 <_IO_stdin_used+0x694>
    91b2:	call   9140 <p11_fatal>
    91b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000091c0 <get_mechanisms>:
    91c0:	push   r15
    91c2:	push   r14
    91c4:	mov    r14,rsi
    91c7:	push   r13
    91c9:	push   r12
    91cb:	mov    r12,rdi
    91ce:	push   rbp
    91cf:	push   rbx
    91d0:	mov    rbx,rdx
    91d3:	sub    rsp,0x38
    91d7:	mov    rsi,QWORD PTR [rsi]
    91da:	mov    rax,QWORD PTR fs:0x28
    91e3:	mov    QWORD PTR [rsp+0x28],rax
    91e8:	xor    eax,eax
    91ea:	mov    rax,QWORD PTR [rip+0x1cc9f]        # 25e90 <p11>
    91f1:	lea    r13,[rsp+0x8]
    91f6:	mov    QWORD PTR [rsp+0x8],0x0
    91ff:	mov    rdx,r13
    9202:	call   QWORD PTR [rax+0x40]
    9205:	test   rax,rax
    9208:	jne    92ce <get_mechanisms+0x10e>
    920e:	mov    rdi,QWORD PTR [rsp+0x8]
    9213:	mov    esi,0x8
    9218:	call   5790 <calloc@plt>
    921d:	mov    QWORD PTR [r14],rax
    9220:	mov    rsi,rax
    9223:	test   rax,rax
    9226:	je     92f1 <get_mechanisms+0x131>
    922c:	mov    rax,QWORD PTR [rip+0x1cc5d]        # 25e90 <p11>
    9233:	mov    rdx,r13
    9236:	mov    rdi,r12
    9239:	call   QWORD PTR [rax+0x40]
    923c:	mov    rbp,rax
    923f:	test   rax,rax
    9242:	jne    92e2 <get_mechanisms+0x122>
    9248:	cmp    rbx,0xffffffffffffffff
    924c:	je     92aa <get_mechanisms+0xea>
    924e:	mov    r13,QWORD PTR [rsp+0x8]
    9253:	mov    r15,QWORD PTR [r14]
    9256:	test   r13,r13
    9259:	je     92a5 <get_mechanisms+0xe5>
    925b:	xor    r13d,r13d
    925e:	lea    r14,[rsp+0x10]
    9263:	nop    DWORD PTR [rax+rax*1+0x0]
    9268:	mov    rax,QWORD PTR [rip+0x1cc21]        # 25e90 <p11>
    926f:	mov    rsi,QWORD PTR [r15+rbp*8]
    9273:	mov    rdx,r14
    9276:	mov    rdi,r12
    9279:	call   QWORD PTR [rax+0x48]
    927c:	test   rax,rax
    927f:	jne    929a <get_mechanisms+0xda>
    9281:	mov    rax,QWORD PTR [rsp+0x20]
    9286:	and    rax,rbx
    9289:	cmp    rax,rbx
    928c:	jne    929a <get_mechanisms+0xda>
    928e:	mov    rax,QWORD PTR [r15+rbp*8]
    9292:	mov    QWORD PTR [r15+r13*8],rax
    9296:	add    r13,0x1
    929a:	add    rbp,0x1
    929e:	cmp    QWORD PTR [rsp+0x8],rbp
    92a3:	ja     9268 <get_mechanisms+0xa8>
    92a5:	mov    QWORD PTR [rsp+0x8],r13
    92aa:	mov    rcx,QWORD PTR [rsp+0x28]
    92af:	xor    rcx,QWORD PTR fs:0x28
    92b8:	mov    rax,QWORD PTR [rsp+0x8]
    92bd:	jne    92dd <get_mechanisms+0x11d>
    92bf:	add    rsp,0x38
    92c3:	pop    rbx
    92c4:	pop    rbp
    92c5:	pop    r12
    92c7:	pop    r13
    92c9:	pop    r14
    92cb:	pop    r15
    92cd:	ret    
    92ce:	mov    rsi,rax
    92d1:	lea    rdi,[rip+0xe3cb]        # 176a3 <_IO_stdin_used+0x6a3>
    92d8:	call   9140 <p11_fatal>
    92dd:	call   5690 <__stack_chk_fail@plt>
    92e2:	mov    rsi,rax
    92e5:	lea    rdi,[rip+0xe3b7]        # 176a3 <_IO_stdin_used+0x6a3>
    92ec:	call   9140 <p11_fatal>
    92f1:	lea    rdi,[rip+0xe3be]        # 176b6 <_IO_stdin_used+0x6b6>
    92f8:	xor    eax,eax
    92fa:	call   15f90 <util_fatal>
    92ff:	nop

0000000000009300 <find_mechanism>:
    9300:	push   r13
    9302:	mov    r9,rsi
    9305:	push   r12
    9307:	mov    r12,r8
    930a:	push   rbp
    930b:	mov    rbp,rdx
    930e:	mov    rdx,r9
    9311:	push   rbx
    9312:	mov    rbx,rcx
    9315:	sub    rsp,0x18
    9319:	mov    rax,QWORD PTR fs:0x28
    9322:	mov    QWORD PTR [rsp+0x8],rax
    9327:	xor    eax,eax
    9329:	mov    rsi,rsp
    932c:	mov    QWORD PTR [rsp],0x0
    9334:	call   91c0 <get_mechanisms>
    9339:	mov    r8,QWORD PTR [rsp]
    933d:	mov    r13,rax
    9340:	test   rax,rax
    9343:	je     9390 <find_mechanism+0x90>
    9345:	test   rbp,rbp
    9348:	je     93b6 <find_mechanism+0xb6>
    934a:	test   rbx,rbx
    934d:	je     93b6 <find_mechanism+0xb6>
    934f:	xor    edi,edi
    9351:	xor    eax,eax
    9353:	nop    DWORD PTR [rax+rax*1+0x0]
    9358:	mov    rcx,QWORD PTR [r8+rax*8]
    935c:	xor    esi,esi
    935e:	xor    edx,edx
    9360:	jmp    9373 <find_mechanism+0x73>
    9362:	nop    WORD PTR [rax+rax*1+0x0]
    9368:	lea    edx,[rsi+0x1]
    936b:	mov    rsi,rdx
    936e:	cmp    rdx,rbx
    9371:	jae    937f <find_mechanism+0x7f>
    9373:	cmp    rcx,QWORD PTR [rbp+rdx*8+0x0]
    9378:	jne    9368 <find_mechanism+0x68>
    937a:	cmp    rbx,rdx
    937d:	ja     93bf <find_mechanism+0xbf>
    937f:	lea    eax,[rdi+0x1]
    9382:	mov    rdi,rax
    9385:	cmp    rax,r13
    9388:	jb     9358 <find_mechanism+0x58>
    938a:	xor    r13d,r13d
    938d:	nop    DWORD PTR [rax]
    9390:	mov    rdi,r8
    9393:	call   5590 <free@plt>
    9398:	mov    rax,QWORD PTR [rsp+0x8]
    939d:	xor    rax,QWORD PTR fs:0x28
    93a6:	jne    93cf <find_mechanism+0xcf>
    93a8:	add    rsp,0x18
    93ac:	mov    eax,r13d
    93af:	pop    rbx
    93b0:	pop    rbp
    93b1:	pop    r12
    93b3:	pop    r13
    93b5:	ret    
    93b6:	mov    rax,QWORD PTR [r8]
    93b9:	mov    QWORD PTR [r12],rax
    93bd:	jmp    9390 <find_mechanism+0x90>
    93bf:	cmp    r13,rax
    93c2:	jbe    938a <find_mechanism+0x8a>
    93c4:	cmp    rsi,rbx
    93c7:	jae    938a <find_mechanism+0x8a>
    93c9:	mov    QWORD PTR [r12],rcx
    93cd:	jmp    9390 <find_mechanism+0x90>
    93cf:	call   5690 <__stack_chk_fail@plt>
    93d4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    93df:	nop

00000000000093e0 <p11_flag_names>:
    93e0:	push   r12
    93e2:	mov    BYTE PTR [rip+0x1c4d7],0x0        # 258c0 <buffer.11753>
    93e9:	push   rbp
    93ea:	mov    rbp,rsi
    93ed:	lea    rsi,[rip+0x15c94]        # 1f088 <GOST_HASH2001_PARAMSET_OID+0x238>
    93f4:	push   rbx
    93f5:	mov    rax,QWORD PTR [rdi]
    93f8:	test   rax,rax
    93fb:	je     9461 <p11_flag_names+0x81>
    93fd:	mov    rbx,rdi
    9400:	lea    r12,[rip+0xe2c1]        # 176c8 <_IO_stdin_used+0x6c8>
    9407:	jmp    941d <p11_flag_names+0x3d>
    9409:	nop    DWORD PTR [rax+0x0]
    9410:	mov    rax,QWORD PTR [rbx+0x10]
    9414:	add    rbx,0x10
    9418:	test   rax,rax
    941b:	je     9461 <p11_flag_names+0x81>
    941d:	test   rax,rbp
    9420:	je     9410 <p11_flag_names+0x30>
    9422:	mov    edx,0x400
    9427:	lea    rdi,[rip+0x1c492]        # 258c0 <buffer.11753>
    942e:	add    rbx,0x10
    9432:	call   167b0 <strlcat>
    9437:	mov    rsi,QWORD PTR [rbx-0x8]
    943b:	mov    edx,0x400
    9440:	lea    rdi,[rip+0x1c479]        # 258c0 <buffer.11753>
    9447:	call   167b0 <strlcat>
    944c:	mov    rax,QWORD PTR [rbx-0x10]
    9450:	mov    rsi,r12
    9453:	not    rax
    9456:	and    rbp,rax
    9459:	mov    rax,QWORD PTR [rbx]
    945c:	test   rax,rax
    945f:	jne    941d <p11_flag_names+0x3d>
    9461:	test   rbp,rbp
    9464:	jne    9478 <p11_flag_names+0x98>
    9466:	pop    rbx
    9467:	lea    rax,[rip+0x1c452]        # 258c0 <buffer.11753>
    946e:	pop    rbp
    946f:	pop    r12
    9471:	ret    
    9472:	nop    WORD PTR [rax+rax*1+0x0]
    9478:	lea    r8,[rip+0x1c441]        # 258c0 <buffer.11753>
    947f:	mov    rcx,r8
    9482:	mov    rdi,r8
    9485:	mov    edx,DWORD PTR [rdi]
    9487:	add    rdi,0x4
    948b:	lea    eax,[rdx-0x1010101]
    9491:	not    edx
    9493:	and    eax,edx
    9495:	and    eax,0x80808080
    949a:	je     9485 <p11_flag_names+0xa5>
    949c:	mov    edx,eax
    949e:	mov    r9d,ebp
    94a1:	shr    edx,0x10
    94a4:	test   eax,0x8080
    94a9:	cmove  eax,edx
    94ac:	lea    rdx,[rdi+0x2]
    94b0:	cmove  rdi,rdx
    94b4:	mov    edx,eax
    94b6:	add    dl,al
    94b8:	mov    rdx,0xffffffffffffffff
    94bf:	sbb    rdi,0x3
    94c3:	xor    eax,eax
    94c5:	sub    rdi,r8
    94c8:	mov    r8,rsi
    94cb:	mov    esi,0x1
    94d0:	add    rdi,rcx
    94d3:	lea    rcx,[rip+0xe1f1]        # 176cb <_IO_stdin_used+0x6cb>
    94da:	call   5a70 <__sprintf_chk@plt>
    94df:	pop    rbx
    94e0:	lea    rax,[rip+0x1c3d9]        # 258c0 <buffer.11753>
    94e7:	pop    rbp
    94e8:	pop    r12
    94ea:	ret    
    94eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000094f0 <show_token>:
    94f0:	push   rbp
    94f1:	push   rbx
    94f2:	sub    rsp,0xe8
    94f9:	mov    rax,QWORD PTR fs:0x28
    9502:	mov    QWORD PTR [rsp+0xd8],rax
    950a:	xor    eax,eax
    950c:	mov    rax,QWORD PTR [rip+0x1c97d]        # 25e90 <p11>
    9513:	mov    rbx,rsp
    9516:	mov    rsi,rbx
    9519:	call   QWORD PTR [rax+0x38]
    951c:	cmp    rax,0xe1
    9522:	je     9808 <show_token+0x318>
    9528:	mov    rbp,rax
    952b:	test   rax,rax
    952e:	jne    97e0 <show_token+0x2f0>
    9534:	mov    eax,0x20
    9539:	test   BYTE PTR [rsp+0x61],0x4
    953e:	je     9700 <show_token+0x210>
    9544:	nop    DWORD PTR [rax+0x0]
    9548:	mov    rcx,rax
    954b:	lea    rax,[rax-0x1]
    954f:	cmp    BYTE PTR [rbx+rcx*1-0x1],0x20
    9554:	jne    97b0 <show_token+0x2c0>
    955a:	test   rax,rax
    955d:	jne    9548 <show_token+0x58>
    955f:	lea    rbx,[rip+0x1c15a]        # 256c0 <buffer.11770>
    9566:	lea    rsi,[rip+0xe18a]        # 176f7 <_IO_stdin_used+0x6f7>
    956d:	mov    edi,0x1
    9572:	mov    BYTE PTR [rbx+rax*1],0x0
    9576:	mov    rdx,rbx
    9579:	xor    eax,eax
    957b:	call   58a0 <__printf_chk@plt>
    9580:	mov    eax,0x20
    9585:	lea    rdx,[rsp+0x20]
    958a:	nop    WORD PTR [rax+rax*1+0x0]
    9590:	mov    rcx,rax
    9593:	lea    rax,[rax-0x1]
    9597:	cmp    BYTE PTR [rdx+rax*1],0x20
    959b:	jne    9780 <show_token+0x290>
    95a1:	test   rax,rax
    95a4:	jne    9590 <show_token+0xa0>
    95a6:	mov    BYTE PTR [rbx+rax*1],0x0
    95aa:	lea    rdx,[rip+0x1c10f]        # 256c0 <buffer.11770>
    95b1:	lea    rsi,[rip+0xe15a]        # 17712 <_IO_stdin_used+0x712>
    95b8:	xor    eax,eax
    95ba:	mov    edi,0x1
    95bf:	call   58a0 <__printf_chk@plt>
    95c4:	mov    eax,0x10
    95c9:	lea    rdx,[rsp+0x40]
    95ce:	xchg   ax,ax
    95d0:	mov    rcx,rax
    95d3:	lea    rax,[rax-0x1]
    95d7:	cmp    BYTE PTR [rdx+rax*1],0x20
    95db:	jne    9750 <show_token+0x260>
    95e1:	test   rax,rax
    95e4:	jne    95d0 <show_token+0xe0>
    95e6:	lea    rdx,[rip+0x1c0d3]        # 256c0 <buffer.11770>
    95ed:	mov    BYTE PTR [rbx+rax*1],0x0
    95f1:	mov    edi,0x1
    95f6:	xor    eax,eax
    95f8:	lea    rsi,[rip+0xe12e]        # 1772d <_IO_stdin_used+0x72d>
    95ff:	call   58a0 <__printf_chk@plt>
    9604:	mov    rsi,QWORD PTR [rsp+0x60]
    9609:	lea    rdi,[rip+0x19ab0]        # 230c0 <slot_flags.11765>
    9610:	call   93e0 <p11_flag_names>
    9615:	lea    rsi,[rip+0xe12c]        # 17748 <_IO_stdin_used+0x748>
    961c:	mov    edi,0x1
    9621:	mov    rdx,rax
    9624:	xor    eax,eax
    9626:	call   58a0 <__printf_chk@plt>
    962b:	movzx  ecx,BYTE PTR [rsp+0xb9]
    9633:	mov    edi,0x1
    9638:	xor    eax,eax
    963a:	movzx  edx,BYTE PTR [rsp+0xb8]
    9642:	lea    rsi,[rip+0xe11a]        # 17763 <_IO_stdin_used+0x763>
    9649:	call   58a0 <__printf_chk@plt>
    964e:	movzx  edx,BYTE PTR [rsp+0xba]
    9656:	mov    edi,0x1
    965b:	xor    eax,eax
    965d:	movzx  ecx,BYTE PTR [rsp+0xbb]
    9665:	lea    rsi,[rip+0xe115]        # 17781 <_IO_stdin_used+0x781>
    966c:	call   58a0 <__printf_chk@plt>
    9671:	mov    eax,0x10
    9676:	lea    rdx,[rsp+0x50]
    967b:	nop    DWORD PTR [rax+rax*1+0x0]
    9680:	mov    rcx,rax
    9683:	lea    rax,[rax-0x1]
    9687:	cmp    BYTE PTR [rdx+rax*1],0x20
    968b:	jne    9720 <show_token+0x230>
    9691:	test   rax,rax
    9694:	jne    9680 <show_token+0x190>
    9696:	mov    BYTE PTR [rbx+rax*1],0x0
    969a:	lea    rdx,[rip+0x1c01f]        # 256c0 <buffer.11770>
    96a1:	lea    rsi,[rip+0xe0f7]        # 1779f <_IO_stdin_used+0x79f>
    96a8:	xor    eax,eax
    96aa:	mov    edi,0x1
    96af:	call   58a0 <__printf_chk@plt>
    96b4:	mov    rcx,QWORD PTR [rsp+0x88]
    96bc:	mov    edi,0x1
    96c1:	xor    eax,eax
    96c3:	mov    rdx,QWORD PTR [rsp+0x90]
    96cb:	lea    rsi,[rip+0x110ce]        # 1a7a0 <_IO_stdin_used+0x37a0>
    96d2:	call   58a0 <__printf_chk@plt>
    96d7:	mov    rax,QWORD PTR [rsp+0xd8]
    96df:	xor    rax,QWORD PTR fs:0x28
    96e8:	jne    9819 <show_token+0x329>
    96ee:	add    rsp,0xe8
    96f5:	pop    rbx
    96f6:	pop    rbp
    96f7:	ret    
    96f8:	nop    DWORD PTR [rax+rax*1+0x0]
    9700:	mov    edx,DWORD PTR [rip+0x1ca7a]        # 26180 <verbose>
    9706:	test   edx,edx
    9708:	jne    9548 <show_token+0x58>
    970e:	lea    rdi,[rip+0x1106b]        # 1a780 <_IO_stdin_used+0x3780>
    9715:	call   5600 <puts@plt>
    971a:	jmp    96d7 <show_token+0x1e7>
    971c:	nop    DWORD PTR [rax+0x0]
    9720:	lea    rdx,[rip+0x1bf98]        # 256bf <temp.11811+0x3f>
    9727:	lea    rsi,[rsp+0x4f]
    972c:	nop    DWORD PTR [rax+0x0]
    9730:	add    rbp,0x1
    9734:	movzx  eax,BYTE PTR [rsi+rbp*1]
    9738:	mov    BYTE PTR [rdx+rbp*1],al
    973b:	cmp    rbp,rcx
    973e:	jne    9730 <show_token+0x240>
    9740:	mov    rax,rbp
    9743:	jmp    9696 <show_token+0x1a6>
    9748:	nop    DWORD PTR [rax+rax*1+0x0]
    9750:	xor    eax,eax
    9752:	lea    rdx,[rip+0x1bf66]        # 256bf <temp.11811+0x3f>
    9759:	lea    rdi,[rsp+0x3f]
    975e:	xchg   ax,ax
    9760:	add    rax,0x1
    9764:	movzx  esi,BYTE PTR [rdi+rax*1]
    9768:	mov    BYTE PTR [rdx+rax*1],sil
    976c:	cmp    rax,rcx
    976f:	jne    9760 <show_token+0x270>
    9771:	jmp    95e6 <show_token+0xf6>
    9776:	cs nop WORD PTR [rax+rax*1+0x0]
    9780:	xor    eax,eax
    9782:	lea    rdx,[rip+0x1bf36]        # 256bf <temp.11811+0x3f>
    9789:	lea    rdi,[rsp+0x1f]
    978e:	xchg   ax,ax
    9790:	add    rax,0x1
    9794:	movzx  esi,BYTE PTR [rdi+rax*1]
    9798:	mov    BYTE PTR [rdx+rax*1],sil
    979c:	cmp    rax,rcx
    979f:	jne    9790 <show_token+0x2a0>
    97a1:	jmp    95a6 <show_token+0xb6>
    97a6:	cs nop WORD PTR [rax+rax*1+0x0]
    97b0:	xor    eax,eax
    97b2:	lea    rdx,[rip+0x1bf06]        # 256bf <temp.11811+0x3f>
    97b9:	lea    rdi,[rsp-0x1]
    97be:	xchg   ax,ax
    97c0:	add    rax,0x1
    97c4:	movzx  esi,BYTE PTR [rdi+rax*1]
    97c8:	mov    BYTE PTR [rdx+rax*1],sil
    97cc:	cmp    rax,rcx
    97cf:	jne    97c0 <show_token+0x2d0>
    97d1:	jmp    955f <show_token+0x6f>
    97d6:	cs nop WORD PTR [rax+rax*1+0x0]
    97e0:	mov    rdi,rax
    97e3:	call   8e50 <CKR2Str>
    97e8:	lea    rsi,[rip+0x10f69]        # 1a758 <_IO_stdin_used+0x3758>
    97ef:	mov    edi,0x1
    97f4:	mov    rdx,rax
    97f7:	xor    eax,eax
    97f9:	call   58a0 <__printf_chk@plt>
    97fe:	jmp    96d7 <show_token+0x1e7>
    9803:	nop    DWORD PTR [rax+rax*1+0x0]
    9808:	lea    rdi,[rip+0xdecf]        # 176de <_IO_stdin_used+0x6de>
    980f:	call   5600 <puts@plt>
    9814:	jmp    96d7 <show_token+0x1e7>
    9819:	call   5690 <__stack_chk_fail@plt>
    981e:	xchg   ax,ax

0000000000009820 <login>:
    9820:	push   r14
    9822:	push   r13
    9824:	push   r12
    9826:	push   rbp
    9827:	mov    rbp,rdi
    982a:	push   rbx
    982b:	mov    ebx,esi
    982d:	sub    rsp,0xf0
    9834:	mov    rdi,QWORD PTR [rip+0x1c91d]        # 26158 <opt_slot>
    983b:	mov    rax,QWORD PTR fs:0x28
    9844:	mov    QWORD PTR [rsp+0xe8],rax
    984c:	xor    eax,eax
    984e:	lea    r13,[rsp+0x10]
    9853:	mov    QWORD PTR [rsp],0x0
    985b:	mov    QWORD PTR [rsp+0x8],0x0
    9864:	mov    rsi,r13
    9867:	call   9190 <get_token_info>
    986c:	test   ebx,ebx
    986e:	jne    9910 <login+0xf0>
    9874:	mov    r12,QWORD PTR [rip+0x1c765]        # 25fe0 <opt_so_pin>
    987b:	mov    QWORD PTR [rsp],r12
    987f:	mov    rax,QWORD PTR [rsp+0x70]
    9884:	and    eax,0x100
    9889:	test   r12,r12
    988c:	je     9950 <login+0x130>
    9892:	xor    r13d,r13d
    9895:	test   rax,rax
    9898:	jne    98a5 <login+0x85>
    989a:	cmp    BYTE PTR [r12],0x0
    989f:	je     9a30 <login+0x210>
    98a5:	mov    rax,QWORD PTR [rip+0x1c5e4]        # 25e90 <p11>
    98ac:	mov    r14,QWORD PTR [rax+0x98]
    98b3:	mov    rdi,r12
    98b6:	call   5680 <strlen@plt>
    98bb:	movsxd rsi,ebx
    98be:	mov    rdx,r12
    98c1:	mov    rdi,rbp
    98c4:	mov    rcx,rax
    98c7:	call   r14
    98ca:	test   rax,rax
    98cd:	jne    9b82 <login+0x362>
    98d3:	test   r13d,r13d
    98d6:	jne    9a1f <login+0x1ff>
    98dc:	mov    rax,QWORD PTR [rsp+0xe8]
    98e4:	xor    rax,QWORD PTR fs:0x28
    98ed:	jne    9b91 <login+0x371>
    98f3:	add    rsp,0xf0
    98fa:	mov    eax,r13d
    98fd:	pop    rbx
    98fe:	pop    rbp
    98ff:	pop    r12
    9901:	pop    r13
    9903:	pop    r14
    9905:	ret    
    9906:	cs nop WORD PTR [rax+rax*1+0x0]
    9910:	cmp    ebx,0x1
    9913:	je     9a48 <login+0x228>
    9919:	mov    r12,QWORD PTR [rsp]
    991d:	cmp    ebx,0x2
    9920:	jne    987f <login+0x5f>
    9926:	mov    r12,QWORD PTR [rip+0x1c6bb]        # 25fe8 <opt_pin>
    992d:	mov    rax,QWORD PTR [rsp+0x70]
    9932:	test   r12,r12
    9935:	cmove  r12,QWORD PTR [rip+0x1c69b]        # 25fd8 <opt_puk>
    993d:	and    eax,0x100
    9942:	mov    QWORD PTR [rsp],r12
    9946:	test   r12,r12
    9949:	jne    9892 <login+0x72>
    994f:	nop
    9950:	test   rax,rax
    9953:	jne    9a60 <login+0x240>
    9959:	mov    ecx,0x20
    995e:	xchg   ax,ax
    9960:	mov    rdx,rcx
    9963:	lea    rcx,[rcx-0x1]
    9967:	cmp    BYTE PTR [r13+rdx*1-0x1],0x20
    996d:	jne    9ac0 <login+0x2a0>
    9973:	test   rcx,rcx
    9976:	jne    9960 <login+0x140>
    9978:	lea    rdx,[rip+0x1bd41]        # 256c0 <buffer.11770>
    997f:	xor    eax,eax
    9981:	mov    edi,0x1
    9986:	lea    rsi,[rip+0xde2d]        # 177ba <_IO_stdin_used+0x7ba>
    998d:	mov    BYTE PTR [rdx+rcx*1],0x0
    9991:	call   58a0 <__printf_chk@plt>
    9996:	test   ebx,ebx
    9998:	jne    9a90 <login+0x270>
    999e:	mov    rsi,QWORD PTR [rsp+0x70]
    99a3:	and    esi,0xf00000
    99a9:	jne    9b37 <login+0x317>
    99af:	lea    rsi,[rip+0xde26]        # 177dc <_IO_stdin_used+0x7dc>
    99b6:	mov    edi,0x1
    99bb:	xor    eax,eax
    99bd:	call   58a0 <__printf_chk@plt>
    99c2:	mov    rdx,QWORD PTR [rip+0x1bbe7]        # 255b0 <stdin@@GLIBC_2.2.5>
    99c9:	lea    rsi,[rsp+0x8]
    99ce:	mov    rdi,rsp
    99d1:	call   16290 <util_getpass>
    99d6:	test   eax,eax
    99d8:	js     9ba1 <login+0x381>
    99de:	mov    r12,QWORD PTR [rsp]
    99e2:	test   BYTE PTR [rsp+0x71],0x1
    99e7:	jne    9af0 <login+0x2d0>
    99ed:	test   r12,r12
    99f0:	jne    9b96 <login+0x376>
    99f6:	cmp    ebx,0x2
    99f9:	jne    9a39 <login+0x219>
    99fb:	mov    rax,QWORD PTR [rip+0x1c48e]        # 25e90 <p11>
    9a02:	mov    r14,QWORD PTR [rax+0x98]
    9a09:	xor    ecx,ecx
    9a0b:	xor    edx,edx
    9a0d:	movsxd rsi,ebx
    9a10:	mov    rdi,rbp
    9a13:	call   r14
    9a16:	test   rax,rax
    9a19:	jne    9b82 <login+0x362>
    9a1f:	mov    rdi,QWORD PTR [rsp]
    9a23:	xor    r13d,r13d
    9a26:	call   5590 <free@plt>
    9a2b:	jmp    98dc <login+0xbc>
    9a30:	cmp    ebx,0x2
    9a33:	je     98a5 <login+0x85>
    9a39:	mov    r13d,0x1
    9a3f:	jmp    98dc <login+0xbc>
    9a44:	nop    DWORD PTR [rax+0x0]
    9a48:	mov    r12,QWORD PTR [rip+0x1c599]        # 25fe8 <opt_pin>
    9a4f:	mov    QWORD PTR [rsp],r12
    9a53:	jmp    987f <login+0x5f>
    9a58:	nop    DWORD PTR [rax+rax*1+0x0]
    9a60:	mov    rax,QWORD PTR [rip+0x1c429]        # 25e90 <p11>
    9a67:	xor    ecx,ecx
    9a69:	xor    edx,edx
    9a6b:	movsxd rsi,ebx
    9a6e:	mov    rdi,rbp
    9a71:	call   QWORD PTR [rax+0x98]
    9a77:	test   rax,rax
    9a7a:	jne    9b82 <login+0x362>
    9a80:	xor    r13d,r13d
    9a83:	jmp    98dc <login+0xbc>
    9a88:	nop    DWORD PTR [rax+rax*1+0x0]
    9a90:	cmp    ebx,0x1
    9a93:	je     9b12 <login+0x2f2>
    9a95:	cmp    ebx,0x2
    9a98:	jne    99c2 <login+0x1a2>
    9a9e:	lea    rsi,[rip+0x10d1b]        # 1a7c0 <_IO_stdin_used+0x37c0>
    9aa5:	mov    edi,0x1
    9aaa:	xor    eax,eax
    9aac:	call   58a0 <__printf_chk@plt>
    9ab1:	jmp    99c2 <login+0x1a2>
    9ab6:	cs nop WORD PTR [rax+rax*1+0x0]
    9ac0:	lea    rdi,[rip+0x1bbf8]        # 256bf <temp.11811+0x3f>
    9ac7:	lea    rsi,[rsp+0xf]
    9acc:	nop    DWORD PTR [rax+0x0]
    9ad0:	add    rax,0x1
    9ad4:	movzx  ecx,BYTE PTR [rsi+rax*1]
    9ad8:	mov    BYTE PTR [rdi+rax*1],cl
    9adb:	cmp    rax,rdx
    9ade:	jne    9ad0 <login+0x2b0>
    9ae0:	mov    rcx,rax
    9ae3:	jmp    9978 <login+0x158>
    9ae8:	nop    DWORD PTR [rax+rax*1+0x0]
    9af0:	mov    rax,QWORD PTR [rip+0x1c399]        # 25e90 <p11>
    9af7:	mov    r14,QWORD PTR [rax+0x98]
    9afe:	test   r12,r12
    9b01:	je     9a09 <login+0x1e9>
    9b07:	mov    r13d,0x1
    9b0d:	jmp    98b3 <login+0x93>
    9b12:	mov    rsi,QWORD PTR [rsp+0x70]
    9b17:	and    esi,0xf0000
    9b1d:	jne    9b5e <login+0x33e>
    9b1f:	lea    rsi,[rip+0xdccc]        # 177f2 <_IO_stdin_used+0x7f2>
    9b26:	mov    edi,0x1
    9b2b:	xor    eax,eax
    9b2d:	call   58a0 <__printf_chk@plt>
    9b32:	jmp    99c2 <login+0x1a2>
    9b37:	lea    rdi,[rip+0x19582]        # 230c0 <slot_flags.11765>
    9b3e:	call   93e0 <p11_flag_names>
    9b43:	lea    rsi,[rip+0xdc85]        # 177cf <_IO_stdin_used+0x7cf>
    9b4a:	mov    edi,0x1
    9b4f:	mov    rdx,rax
    9b52:	xor    eax,eax
    9b54:	call   58a0 <__printf_chk@plt>
    9b59:	jmp    99af <login+0x18f>
    9b5e:	lea    rdi,[rip+0x1955b]        # 230c0 <slot_flags.11765>
    9b65:	call   93e0 <p11_flag_names>
    9b6a:	lea    rsi,[rip+0xdc5e]        # 177cf <_IO_stdin_used+0x7cf>
    9b71:	mov    edi,0x1
    9b76:	mov    rdx,rax
    9b79:	xor    eax,eax
    9b7b:	call   58a0 <__printf_chk@plt>
    9b80:	jmp    9b1f <login+0x2ff>
    9b82:	mov    rsi,rax
    9b85:	lea    rdi,[rip+0xdc91]        # 1781d <_IO_stdin_used+0x81d>
    9b8c:	call   9140 <p11_fatal>
    9b91:	call   5690 <__stack_chk_fail@plt>
    9b96:	mov    r13d,0x1
    9b9c:	jmp    989a <login+0x7a>
    9ba1:	lea    rdi,[rip+0xdc62]        # 1780a <_IO_stdin_used+0x80a>
    9ba8:	xor    eax,eax
    9baa:	call   15f90 <util_fatal>
    9baf:	nop

0000000000009bb0 <p11_perror>:
    9bb0:	sub    rsp,0x8
    9bb4:	mov    rcx,rdi
    9bb7:	mov    rdi,rsi
    9bba:	mov    r9,rsi
    9bbd:	call   8e50 <CKR2Str>
    9bc2:	mov    rdi,QWORD PTR [rip+0x1ba17]        # 255e0 <stderr@@GLIBC_2.2.5>
    9bc9:	mov    esi,0x1
    9bce:	lea    rdx,[rip+0xdc50]        # 17825 <_IO_stdin_used+0x825>
    9bd5:	mov    r8,rax
    9bd8:	add    rsp,0x8
    9bdc:	xor    eax,eax
    9bde:	jmp    59b0 <__fprintf_chk@plt>
    9be3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    9bee:	xchg   ax,ax

0000000000009bf0 <test_random>:
    9bf0:	push   r13
    9bf2:	push   r12
    9bf4:	push   rbp
    9bf5:	mov    rbp,rdi
    9bf8:	lea    rdi,[rip+0x10be9]        # 1a7e8 <_IO_stdin_used+0x37e8>
    9bff:	sub    rsp,0x150
    9c06:	mov    rax,QWORD PTR fs:0x28
    9c0f:	mov    QWORD PTR [rsp+0x148],rax
    9c17:	xor    eax,eax
    9c19:	call   5600 <puts@plt>
    9c1e:	mov    rax,QWORD PTR [rip+0x1c26b]        # 25e90 <p11>
    9c25:	mov    edx,0x64
    9c2a:	mov    rdi,rbp
    9c2d:	lea    rsi,[rsp+0xe0]
    9c35:	call   QWORD PTR [rax+0x200]
    9c3b:	cmp    rax,0x121
    9c41:	je     9d8c <test_random+0x19c>
    9c47:	cmp    rax,0x120
    9c4d:	je     9d39 <test_random+0x149>
    9c53:	cmp    rax,0x54
    9c57:	je     9d39 <test_random+0x149>
    9c5d:	test   rax,rax
    9c60:	jne    9d60 <test_random+0x170>
    9c66:	mov    rax,QWORD PTR [rip+0x1c223]        # 25e90 <p11>
    9c6d:	mov    r12,rsp
    9c70:	mov    edx,0xa
    9c75:	mov    rdi,rbp
    9c78:	mov    rsi,r12
    9c7b:	call   QWORD PTR [rax+0x208]
    9c81:	test   rax,rax
    9c84:	jne    9d76 <test_random+0x186>
    9c8a:	mov    rax,QWORD PTR [rip+0x1c1ff]        # 25e90 <p11>
    9c91:	mov    edx,0x64
    9c96:	mov    rsi,r12
    9c99:	mov    rdi,rbp
    9c9c:	call   QWORD PTR [rax+0x208]
    9ca2:	test   rax,rax
    9ca5:	jne    9d4a <test_random+0x15a>
    9cab:	mov    rax,QWORD PTR [rip+0x1c1de]        # 25e90 <p11>
    9cb2:	xor    edx,edx
    9cb4:	mov    rsi,r12
    9cb7:	mov    rdi,rbp
    9cba:	call   QWORD PTR [rax+0x208]
    9cc0:	test   rax,rax
    9cc3:	jne    9db0 <test_random+0x1c0>
    9cc9:	mov    rax,QWORD PTR [rip+0x1c1c0]        # 25e90 <p11>
    9cd0:	lea    r13,[rsp+0x70]
    9cd5:	mov    edx,0x64
    9cda:	mov    rdi,rbp
    9cdd:	mov    rsi,r13
    9ce0:	call   QWORD PTR [rax+0x208]
    9ce6:	test   rax,rax
    9ce9:	jne    9dc9 <test_random+0x1d9>
    9cef:	mov    edx,0x64
    9cf4:	mov    rsi,r13
    9cf7:	mov    rdi,r12
    9cfa:	call   5750 <memcmp@plt>
    9cff:	test   eax,eax
    9d01:	je     9d9f <test_random+0x1af>
    9d07:	lea    rdi,[rip+0xdbb6]        # 178c4 <_IO_stdin_used+0x8c4>
    9d0e:	call   5600 <puts@plt>
    9d13:	xor    eax,eax
    9d15:	mov    rcx,QWORD PTR [rsp+0x148]
    9d1d:	xor    rcx,QWORD PTR fs:0x28
    9d26:	jne    9de2 <test_random+0x1f2>
    9d2c:	add    rsp,0x150
    9d33:	pop    rbp
    9d34:	pop    r12
    9d36:	pop    r13
    9d38:	ret    
    9d39:	lea    rdi,[rip+0x10ad0]        # 1a810 <_IO_stdin_used+0x3810>
    9d40:	call   5600 <puts@plt>
    9d45:	jmp    9c66 <test_random+0x76>
    9d4a:	mov    rsi,rax
    9d4d:	lea    rdi,[rip+0xdb21]        # 17875 <_IO_stdin_used+0x875>
    9d54:	call   9bb0 <p11_perror>
    9d59:	mov    eax,0x1
    9d5e:	jmp    9d15 <test_random+0x125>
    9d60:	mov    rsi,rax
    9d63:	lea    rdi,[rip+0xdaed]        # 17857 <_IO_stdin_used+0x857>
    9d6a:	call   9bb0 <p11_perror>
    9d6f:	mov    eax,0x1
    9d74:	jmp    9d15 <test_random+0x125>
    9d76:	mov    rsi,rax
    9d79:	lea    rdi,[rip+0xdae4]        # 17864 <_IO_stdin_used+0x864>
    9d80:	call   9bb0 <p11_perror>
    9d85:	mov    eax,0x1
    9d8a:	jmp    9d15 <test_random+0x125>
    9d8c:	lea    rdi,[rip+0xdab0]        # 17843 <_IO_stdin_used+0x843>
    9d93:	call   5600 <puts@plt>
    9d98:	xor    eax,eax
    9d9a:	jmp    9d15 <test_random+0x125>
    9d9f:	lea    rdi,[rip+0x10a92]        # 1a838 <_IO_stdin_used+0x3838>
    9da6:	call   5600 <puts@plt>
    9dab:	jmp    9d07 <test_random+0x117>
    9db0:	mov    rsi,rax
    9db3:	lea    rdi,[rip+0xdad6]        # 17890 <_IO_stdin_used+0x890>
    9dba:	call   9bb0 <p11_perror>
    9dbf:	mov    eax,0x1
    9dc4:	jmp    9d15 <test_random+0x125>
    9dc9:	mov    rsi,rax
    9dcc:	lea    rdi,[rip+0xdad6]        # 178a9 <_IO_stdin_used+0x8a9>
    9dd3:	call   9bb0 <p11_perror>
    9dd8:	mov    eax,0x1
    9ddd:	jmp    9d15 <test_random+0x125>
    9de2:	call   5690 <__stack_chk_fail@plt>
    9de7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000009df0 <test_threads_run>:
    9df0:	endbr64 
    9df4:	push   r15
    9df6:	mov    esi,0x1
    9dfb:	lea    rdx,[rip+0x10a76]        # 1a878 <_IO_stdin_used+0x3878>
    9e02:	xor    r15d,r15d
    9e05:	push   r14
    9e07:	xor    r14d,r14d
    9e0a:	push   r13
    9e0c:	xor    r13d,r13d
    9e0f:	push   r12
    9e11:	push   rbp
    9e12:	mov    rbp,rdi
    9e15:	push   rbx
    9e16:	sub    rsp,0x88
    9e1d:	mov    r8,QWORD PTR [rdi+0x8]
    9e21:	mov    ecx,DWORD PTR [rdi]
    9e23:	mov    rax,QWORD PTR fs:0x28
    9e2c:	mov    QWORD PTR [rsp+0x78],rax
    9e31:	xor    eax,eax
    9e33:	mov    rdi,QWORD PTR [rip+0x1b7a6]        # 255e0 <stderr@@GLIBC_2.2.5>
    9e3a:	mov    QWORD PTR [rsp+0x18],0x0
    9e43:	call   59b0 <__fprintf_chk@plt>
    9e48:	lea    rsi,[rsp+0x18]
    9e4d:	mov    rbx,QWORD PTR [rbp+0x8]
    9e51:	xor    eax,eax
    9e53:	mov    QWORD PTR [rsp],rsi
    9e57:	jmp    9e79 <test_threads_run+0x89>
    9e59:	nop    DWORD PTR [rax+0x0]
    9e60:	add    rbx,0x1
    9e64:	test   r15,r15
    9e67:	je     9e76 <test_threads_run+0x86>
    9e69:	cmp    r15,0x191
    9e70:	jne    a006 <test_threads_run+0x216>
    9e76:	mov    eax,r12d
    9e79:	mov    r10,QWORD PTR [rip+0x1b760]        # 255e0 <stderr@@GLIBC_2.2.5>
    9e80:	test   rbx,rbx
    9e83:	je     a006 <test_threads_run+0x216>
    9e89:	cmp    BYTE PTR [rbx],0x0
    9e8c:	je     a006 <test_threads_run+0x216>
    9e92:	cmp    BYTE PTR [rbx+0x1],0x0
    9e96:	je     a006 <test_threads_run+0x216>
    9e9c:	mov    DWORD PTR [rbp+0x10],eax
    9e9f:	movzx  edx,BYTE PTR [rbx]
    9ea2:	lea    r12d,[rax+0x1]
    9ea6:	mov    ecx,DWORD PTR [rbp+0x0]
    9ea9:	cmp    dl,0x50
    9eac:	je     9fc8 <test_threads_run+0x1d8>
    9eb2:	cmp    dl,0x49
    9eb5:	jne    9f50 <test_threads_run+0x160>
    9ebb:	movzx  eax,BYTE PTR [rbx+0x1]
    9ebf:	cmp    al,0x4e
    9ec1:	je     a218 <test_threads_run+0x428>
    9ec7:	cmp    al,0x4c
    9ec9:	jne    9fd9 <test_threads_run+0x1e9>
    9ecf:	lea    rdx,[rip+0x10a4a]        # 1a920 <_IO_stdin_used+0x3920>
    9ed6:	mov    esi,0x1
    9edb:	mov    rdi,r10
    9ede:	xor    eax,eax
    9ee0:	call   59b0 <__fprintf_chk@plt>
    9ee5:	mov    rax,QWORD PTR [rip+0x1bfa4]        # 25e90 <p11>
    9eec:	lea    rdi,[rip+0x1912d]        # 23020 <c_initialize_args_OS>
    9ef3:	call   QWORD PTR [rax+0x8]
    9ef6:	mov    QWORD PTR [rbp+0x18],rax
    9efa:	mov    rdi,rax
    9efd:	mov    r15,rax
    9f00:	call   8e50 <CKR2Str>
    9f05:	mov    ecx,DWORD PTR [rbp+0x0]
    9f08:	mov    esi,0x1
    9f0d:	mov    rdi,QWORD PTR [rip+0x1b6cc]        # 255e0 <stderr@@GLIBC_2.2.5>
    9f14:	mov    r8,rax
    9f17:	lea    rdx,[rip+0x10a32]        # 1a950 <_IO_stdin_used+0x3950>
    9f1e:	xor    eax,eax
    9f20:	call   59b0 <__fprintf_chk@plt>
    9f25:	cmp    BYTE PTR [rbx+0x1],0x0
    9f29:	je     9e60 <test_threads_run+0x70>
    9f2f:	cmp    BYTE PTR [rbx+0x2],0x3a
    9f33:	lea    rax,[rbx+0x2]
    9f37:	jne    a210 <test_threads_run+0x420>
    9f3d:	add    rbx,0x3
    9f41:	jmp    9e64 <test_threads_run+0x74>
    9f46:	cs nop WORD PTR [rax+rax*1+0x0]
    9f50:	cmp    dl,0x47
    9f53:	je     a040 <test_threads_run+0x250>
    9f59:	cmp    dl,0x53
    9f5c:	je     a0a0 <test_threads_run+0x2b0>
    9f62:	cmp    dl,0x54
    9f65:	jne    9fd9 <test_threads_run+0x1e9>
    9f67:	movsx  r8d,BYTE PTR [rbx+0x1]
    9f6c:	lea    eax,[r8-0x30]
    9f70:	cmp    al,0x9
    9f72:	ja     9fd9 <test_threads_run+0x1e9>
    9f74:	sub    r8d,0x30
    9f78:	xor    eax,eax
    9f7a:	lea    rdx,[rip+0x10ab7]        # 1aa38 <_IO_stdin_used+0x3a38>
    9f81:	mov    rdi,r10
    9f84:	mov    esi,0x1
    9f89:	call   59b0 <__fprintf_chk@plt>
    9f8e:	test   r14d,r14d
    9f91:	je     a299 <test_threads_run+0x4a9>
    9f97:	movsx  rax,BYTE PTR [rbx+0x1]
    9f9c:	mov    rdx,rax
    9f9f:	sub    eax,0x30
    9fa2:	cdqe   
    9fa4:	cmp    rax,QWORD PTR [rsp+0x18]
    9fa9:	jae    a299 <test_threads_run+0x4a9>
    9faf:	mov    rdi,QWORD PTR [r13+rdx*8-0x180]
    9fb7:	call   94f0 <show_token>
    9fbc:	jmp    9f25 <test_threads_run+0x135>
    9fc1:	nop    DWORD PTR [rax+0x0]
    9fc8:	movsx  r8d,BYTE PTR [rbx+0x1]
    9fcd:	lea    eax,[r8-0x30]
    9fd1:	cmp    al,0x9
    9fd3:	jbe    a26e <test_threads_run+0x47e>
    9fd9:	mov    esi,0x1
    9fde:	mov    rdi,r10
    9fe1:	xor    eax,eax
    9fe3:	mov    r15d,0x5
    9fe9:	mov    QWORD PTR [rbp+0x18],0x5
    9ff1:	movsx  r9d,BYTE PTR [rbx+0x1]
    9ff6:	lea    rdx,[rip+0x10acb]        # 1aac8 <_IO_stdin_used+0x3ac8>
    9ffd:	movsx  r8d,BYTE PTR [rbx]
    a001:	call   59b0 <__fprintf_chk@plt>
    a006:	mov    rdi,r13
    a009:	call   5590 <free@plt>
    a00e:	mov    ecx,DWORD PTR [rbp+0x0]
    a011:	xor    r8d,r8d
    a014:	mov    esi,0x1
    a019:	mov    rdi,QWORD PTR [rip+0x1b5c0]        # 255e0 <stderr@@GLIBC_2.2.5>
    a020:	lea    rdx,[rip+0x10ac9]        # 1aaf0 <_IO_stdin_used+0x3af0>
    a027:	xor    eax,eax
    a029:	call   59b0 <__fprintf_chk@plt>
    a02e:	mov    DWORD PTR [rbp+0x10],0xffffffff
    a035:	xor    edi,edi
    a037:	mov    QWORD PTR [rbp+0x18],r15
    a03b:	call   5830 <pthread_exit@plt>
    a040:	cmp    BYTE PTR [rbx+0x1],0x49
    a044:	jne    9fd9 <test_threads_run+0x1e9>
    a046:	mov    rdi,r10
    a049:	lea    rdx,[rip+0xd885]        # 178d5 <_IO_stdin_used+0x8d5>
    a050:	mov    esi,0x1
    a055:	xor    eax,eax
    a057:	call   59b0 <__fprintf_chk@plt>
    a05c:	mov    rax,QWORD PTR [rip+0x1be2d]        # 25e90 <p11>
    a063:	lea    rdi,[rsp+0x20]
    a068:	call   QWORD PTR [rax+0x18]
    a06b:	mov    QWORD PTR [rbp+0x18],rax
    a06f:	mov    rdi,rax
    a072:	mov    r15,rax
    a075:	call   8e50 <CKR2Str>
    a07a:	mov    ecx,DWORD PTR [rbp+0x0]
    a07d:	mov    esi,0x1
    a082:	mov    rdi,QWORD PTR [rip+0x1b557]        # 255e0 <stderr@@GLIBC_2.2.5>
    a089:	mov    r8,rax
    a08c:	lea    rdx,[rip+0x108ed]        # 1a980 <_IO_stdin_used+0x3980>
    a093:	xor    eax,eax
    a095:	call   59b0 <__fprintf_chk@plt>
    a09a:	jmp    9f25 <test_threads_run+0x135>
    a09f:	nop
    a0a0:	cmp    BYTE PTR [rbx+0x1],0x4c
    a0a4:	jne    9fd9 <test_threads_run+0x1e9>
    a0aa:	mov    rdi,r10
    a0ad:	lea    rdx,[rip+0x108f4]        # 1a9a8 <_IO_stdin_used+0x39a8>
    a0b4:	mov    esi,0x1
    a0b9:	xor    eax,eax
    a0bb:	call   59b0 <__fprintf_chk@plt>
    a0c0:	xor    esi,esi
    a0c2:	mov    rdx,QWORD PTR [rsp]
    a0c6:	mov    edi,0x1
    a0cb:	mov    rax,QWORD PTR [rip+0x1bdbe]        # 25e90 <p11>
    a0d2:	call   QWORD PTR [rax+0x28]
    a0d5:	mov    QWORD PTR [rbp+0x18],rax
    a0d9:	mov    rdi,rax
    a0dc:	mov    r15,rax
    a0df:	call   8e50 <CKR2Str>
    a0e4:	mov    ecx,DWORD PTR [rbp+0x0]
    a0e7:	mov    esi,0x1
    a0ec:	mov    rdi,QWORD PTR [rip+0x1b4ed]        # 255e0 <stderr@@GLIBC_2.2.5>
    a0f3:	mov    r8,rax
    a0f6:	lea    rdx,[rip+0x108e3]        # 1a9e0 <_IO_stdin_used+0x39e0>
    a0fd:	xor    eax,eax
    a0ff:	call   59b0 <__fprintf_chk@plt>
    a104:	mov    r8,QWORD PTR [rsp+0x18]
    a109:	mov    ecx,DWORD PTR [rbp+0x0]
    a10c:	xor    eax,eax
    a10e:	mov    rdi,QWORD PTR [rip+0x1b4cb]        # 255e0 <stderr@@GLIBC_2.2.5>
    a115:	lea    rdx,[rip+0x108f4]        # 1aa10 <_IO_stdin_used+0x3a10>
    a11c:	mov    esi,0x1
    a121:	call   59b0 <__fprintf_chk@plt>
    a126:	test   r15,r15
    a129:	jne    9f25 <test_threads_run+0x135>
    a12f:	mov    rdi,r13
    a132:	xor    r13d,r13d
    a135:	call   5590 <free@plt>
    a13a:	mov    r15,QWORD PTR [rsp+0x18]
    a13f:	test   r15,r15
    a142:	je     9f25 <test_threads_run+0x135>
    a148:	mov    r10,QWORD PTR [rip+0x1b491]        # 255e0 <stderr@@GLIBC_2.2.5>
    a14f:	mov    esi,0x8
    a154:	mov    rdi,r15
    a157:	mov    QWORD PTR [rsp+0x8],r10
    a15c:	call   5790 <calloc@plt>
    a161:	mov    ecx,DWORD PTR [rbp+0x0]
    a164:	mov    r10,QWORD PTR [rsp+0x8]
    a169:	test   rax,rax
    a16c:	mov    r13,rax
    a16f:	je     9fd9 <test_threads_run+0x1e9>
    a175:	mov    rdi,r10
    a178:	lea    rdx,[rip+0xd770]        # 178ef <_IO_stdin_used+0x8ef>
    a17f:	mov    esi,0x1
    a184:	xor    eax,eax
    a186:	call   59b0 <__fprintf_chk@plt>
    a18b:	mov    rax,QWORD PTR [rip+0x1bcfe]        # 25e90 <p11>
    a192:	mov    rdx,QWORD PTR [rsp]
    a196:	mov    rsi,r13
    a199:	mov    edi,0x1
    a19e:	call   QWORD PTR [rax+0x28]
    a1a1:	mov    QWORD PTR [rbp+0x18],rax
    a1a5:	mov    rdi,rax
    a1a8:	mov    r15,rax
    a1ab:	call   8e50 <CKR2Str>
    a1b0:	mov    ecx,DWORD PTR [rbp+0x0]
    a1b3:	mov    esi,0x1
    a1b8:	mov    rdi,QWORD PTR [rip+0x1b421]        # 255e0 <stderr@@GLIBC_2.2.5>
    a1bf:	mov    r8,rax
    a1c2:	lea    rdx,[rip+0x10817]        # 1a9e0 <_IO_stdin_used+0x39e0>
    a1c9:	xor    eax,eax
    a1cb:	call   59b0 <__fprintf_chk@plt>
    a1d0:	mov    r8,QWORD PTR [rsp+0x18]
    a1d5:	mov    ecx,DWORD PTR [rbp+0x0]
    a1d8:	xor    eax,eax
    a1da:	mov    rdi,QWORD PTR [rip+0x1b3ff]        # 255e0 <stderr@@GLIBC_2.2.5>
    a1e1:	lea    rdx,[rip+0x10828]        # 1aa10 <_IO_stdin_used+0x3a10>
    a1e8:	mov    esi,0x1
    a1ed:	call   59b0 <__fprintf_chk@plt>
    a1f2:	test   r15,r15
    a1f5:	jne    9f25 <test_threads_run+0x135>
    a1fb:	cmp    QWORD PTR [rsp+0x18],0x0
    a201:	mov    eax,0x1
    a206:	cmovne r14d,eax
    a20a:	jmp    9f25 <test_threads_run+0x135>
    a20f:	nop
    a210:	mov    rbx,rax
    a213:	jmp    9e64 <test_threads_run+0x74>
    a218:	mov    rdi,r10
    a21b:	lea    rdx,[rip+0x106a6]        # 1a8c8 <_IO_stdin_used+0x38c8>
    a222:	mov    esi,0x1
    a227:	xor    eax,eax
    a229:	call   59b0 <__fprintf_chk@plt>
    a22e:	mov    rax,QWORD PTR [rip+0x1bc5b]        # 25e90 <p11>
    a235:	xor    edi,edi
    a237:	call   QWORD PTR [rax+0x8]
    a23a:	mov    QWORD PTR [rbp+0x18],rax
    a23e:	mov    rdi,rax
    a241:	mov    r15,rax
    a244:	call   8e50 <CKR2Str>
    a249:	mov    ecx,DWORD PTR [rbp+0x0]
    a24c:	mov    esi,0x1
    a251:	mov    rdi,QWORD PTR [rip+0x1b388]        # 255e0 <stderr@@GLIBC_2.2.5>
    a258:	mov    r8,rax
    a25b:	lea    rdx,[rip+0x1068e]        # 1a8f0 <_IO_stdin_used+0x38f0>
    a262:	xor    eax,eax
    a264:	call   59b0 <__fprintf_chk@plt>
    a269:	jmp    9f25 <test_threads_run+0x135>
    a26e:	mov    rdi,r10
    a271:	sub    r8d,0x30
    a275:	lea    rdx,[rip+0x10624]        # 1a8a0 <_IO_stdin_used+0x38a0>
    a27c:	xor    eax,eax
    a27e:	mov    esi,0x1
    a283:	call   59b0 <__fprintf_chk@plt>
    a288:	movsx  edi,BYTE PTR [rbx+0x1]
    a28c:	sub    edi,0x30
    a28f:	call   5a00 <sleep@plt>
    a294:	jmp    9f25 <test_threads_run+0x135>
    a299:	mov    ecx,DWORD PTR [rbp+0x0]
    a29c:	mov    esi,0x1
    a2a1:	xor    eax,eax
    a2a3:	mov    r15d,0xe0
    a2a9:	mov    rdi,QWORD PTR [rip+0x1b330]        # 255e0 <stderr@@GLIBC_2.2.5>
    a2b0:	lea    rdx,[rip+0x107c9]        # 1aa80 <_IO_stdin_used+0x3a80>
    a2b7:	call   59b0 <__fprintf_chk@plt>
    a2bc:	jmp    a006 <test_threads_run+0x216>
    a2c1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    a2cc:	nop    DWORD PTR [rax+0x0]

000000000000a2d0 <find_object_with_attributes.part.0>:
    a2d0:	push   r15
    a2d2:	push   r14
    a2d4:	push   r13
    a2d6:	mov    r13,rdi
    a2d9:	push   r12
    a2db:	push   rbp
    a2dc:	mov    rbp,rsi
    a2df:	push   rbx
    a2e0:	sub    rsp,0x28
    a2e4:	mov    rax,QWORD PTR fs:0x28
    a2ed:	mov    QWORD PTR [rsp+0x18],rax
    a2f2:	xor    eax,eax
    a2f4:	lea    r15,[rsp+0x8]
    a2f9:	lea    r14,[rsp+0x10]
    a2fe:	test   rdx,rdx
    a301:	je     a368 <find_object_with_attributes.part.0+0x98>
    a303:	mov    r12,rdx
    a306:	lea    r15,[rsp+0x8]
    a30b:	lea    r14,[rsp+0x10]
    a310:	xor    ebx,ebx
    a312:	jmp    a329 <find_object_with_attributes.part.0+0x59>
    a314:	nop    DWORD PTR [rax+0x0]
    a318:	cmp    QWORD PTR [rsp+0x8],0x0
    a31e:	je     a399 <find_object_with_attributes.part.0+0xc9>
    a320:	add    rbx,0x1
    a324:	cmp    rbx,r12
    a327:	je     a368 <find_object_with_attributes.part.0+0x98>
    a329:	mov    rax,QWORD PTR [rip+0x1bb60]        # 25e90 <p11>
    a330:	mov    rcx,r15
    a333:	mov    rsi,r14
    a336:	mov    rdi,r13
    a339:	mov    edx,0x1
    a33e:	call   QWORD PTR [rax+0xe0]
    a344:	test   rax,rax
    a347:	je     a318 <find_object_with_attributes.part.0+0x48>
    a349:	mov    rcx,QWORD PTR [rsp+0x18]
    a34e:	xor    rcx,QWORD PTR fs:0x28
    a357:	jne    a3ad <find_object_with_attributes.part.0+0xdd>
    a359:	add    rsp,0x28
    a35d:	pop    rbx
    a35e:	pop    rbp
    a35f:	pop    r12
    a361:	pop    r13
    a363:	pop    r14
    a365:	pop    r15
    a367:	ret    
    a368:	mov    rax,QWORD PTR [rip+0x1bb21]        # 25e90 <p11>
    a36f:	mov    rcx,r15
    a372:	mov    rsi,r14
    a375:	mov    rdi,r13
    a378:	mov    edx,0x1
    a37d:	call   QWORD PTR [rax+0xe0]
    a383:	test   rax,rax
    a386:	jne    a349 <find_object_with_attributes.part.0+0x79>
    a388:	cmp    QWORD PTR [rsp+0x8],0x0
    a38e:	je     a399 <find_object_with_attributes.part.0+0xc9>
    a390:	mov    rax,QWORD PTR [rsp+0x10]
    a395:	mov    QWORD PTR [rbp+0x0],rax
    a399:	mov    rax,QWORD PTR [rip+0x1baf0]        # 25e90 <p11>
    a3a0:	mov    rdi,r13
    a3a3:	call   QWORD PTR [rax+0xe8]
    a3a9:	xor    eax,eax
    a3ab:	jmp    a349 <find_object_with_attributes.part.0+0x79>
    a3ad:	call   5690 <__stack_chk_fail@plt>
    a3b2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    a3bd:	nop    DWORD PTR [rax]

000000000000a3c0 <p11_mechanism_to_name.part.0>:
    a3c0:	sub    rsp,0x8
    a3c4:	mov    r9,rdi
    a3c7:	lea    r8,[rip+0xd53f]        # 1790d <_IO_stdin_used+0x90d>
    a3ce:	xor    eax,eax
    a3d0:	mov    ecx,0x40
    a3d5:	mov    edx,0x1
    a3da:	mov    esi,0x40
    a3df:	lea    rdi,[rip+0x1b29a]        # 25680 <temp.11811>
    a3e6:	call   5580 <__snprintf_chk@plt>
    a3eb:	lea    rax,[rip+0x1b28e]        # 25680 <temp.11811>
    a3f2:	add    rsp,0x8
    a3f6:	ret    
    a3f7:	nop    WORD PTR [rax+rax*1+0x0]

000000000000a400 <list_mechs>:
    a400:	push   r15
    a402:	mov    rdx,0xffffffffffffffff
    a409:	push   r14
    a40b:	lea    r14,[rip+0xd520]        # 17932 <_IO_stdin_used+0x932>
    a412:	push   r13
    a414:	mov    r13,rdi
    a417:	push   r12
    a419:	push   rbp
    a41a:	push   rbx
    a41b:	xor    ebx,ebx
    a41d:	sub    rsp,0x38
    a421:	mov    rax,QWORD PTR fs:0x28
    a42a:	mov    QWORD PTR [rsp+0x28],rax
    a42f:	xor    eax,eax
    a431:	lea    rsi,[rsp+0x8]
    a436:	lea    r15,[rsp+0x10]
    a43b:	mov    QWORD PTR [rsp+0x8],0x0
    a444:	call   91c0 <get_mechanisms>
    a449:	lea    rdi,[rip+0xd4cc]        # 1791c <_IO_stdin_used+0x91c>
    a450:	mov    r12,rax
    a453:	call   5600 <puts@plt>
    a458:	test   r12,r12
    a45b:	je     a627 <list_mechs+0x227>
    a461:	nop    DWORD PTR [rax+0x0]
    a468:	mov    rax,QWORD PTR [rsp+0x8]
    a46d:	mov    r8,QWORD PTR [rip+0x18f74]        # 233e8 <p11_mechanisms+0x8>
    a474:	lea    rbp,[rbx*8+0x0]
    a47c:	mov    rdi,QWORD PTR [rax+rbx*8]
    a480:	test   r8,r8
    a483:	je     a660 <list_mechs+0x260>
    a489:	lea    rdx,[rip+0x18f50]        # 233e0 <p11_mechanisms>
    a490:	jmp    a4a9 <list_mechs+0xa9>
    a492:	nop    WORD PTR [rax+rax*1+0x0]
    a498:	mov    r8,QWORD PTR [rdx+0x28]
    a49c:	add    rdx,0x20
    a4a0:	test   r8,r8
    a4a3:	je     a660 <list_mechs+0x260>
    a4a9:	cmp    rdi,QWORD PTR [rdx]
    a4ac:	jne    a498 <list_mechs+0x98>
    a4ae:	mov    rdx,r8
    a4b1:	mov    rsi,r14
    a4b4:	mov    edi,0x1
    a4b9:	xor    eax,eax
    a4bb:	call   58a0 <__printf_chk@plt>
    a4c0:	mov    rax,QWORD PTR [rsp+0x8]
    a4c5:	mov    rdx,r15
    a4c8:	mov    rdi,r13
    a4cb:	mov    rsi,QWORD PTR [rax+rbp*1]
    a4cf:	mov    rax,QWORD PTR [rip+0x1b9ba]        # 25e90 <p11>
    a4d6:	call   QWORD PTR [rax+0x48]
    a4d9:	test   rax,rax
    a4dc:	jne    a610 <list_mechs+0x210>
    a4e2:	mov    rax,QWORD PTR [rsp+0x10]
    a4e7:	or     rax,QWORD PTR [rsp+0x18]
    a4ec:	je     a531 <list_mechs+0x131>
    a4ee:	lea    rsi,[rip+0xd442]        # 17937 <_IO_stdin_used+0x937>
    a4f5:	mov    edi,0x1
    a4fa:	xor    eax,eax
    a4fc:	call   58a0 <__printf_chk@plt>
    a501:	mov    rdx,QWORD PTR [rsp+0x10]
    a506:	test   rdx,rdx
    a509:	jne    aa30 <list_mechs+0x630>
    a50f:	mov    edi,0x2c
    a514:	call   55a0 <putchar@plt>
    a519:	mov    rdx,QWORD PTR [rsp+0x18]
    a51e:	test   rdx,rdx
    a521:	jne    aa10 <list_mechs+0x610>
    a527:	mov    edi,0x7d
    a52c:	call   55a0 <putchar@plt>
    a531:	mov    rdx,QWORD PTR [rsp+0x20]
    a536:	test   dl,0x1
    a539:	jne    a9e0 <list_mechs+0x5e0>
    a53f:	test   dh,0x1
    a542:	jne    a9b8 <list_mechs+0x5b8>
    a548:	test   dh,0x2
    a54b:	jne    a990 <list_mechs+0x590>
    a551:	test   dh,0x4
    a554:	jne    a688 <list_mechs+0x288>
    a55a:	test   dh,0x8
    a55d:	jne    a6b1 <list_mechs+0x2b1>
    a563:	test   dh,0x10
    a566:	jne    a6da <list_mechs+0x2da>
    a56c:	test   dh,0x20
    a56f:	jne    a703 <list_mechs+0x303>
    a575:	test   dh,0x40
    a578:	jne    a72c <list_mechs+0x32c>
    a57e:	test   dh,0x80
    a581:	jne    a755 <list_mechs+0x355>
    a587:	test   edx,0x10000
    a58d:	jne    a781 <list_mechs+0x381>
    a593:	test   edx,0x20000
    a599:	jne    a7b1 <list_mechs+0x3b1>
    a59f:	test   edx,0x40000
    a5a5:	jne    a7e1 <list_mechs+0x3e1>
    a5ab:	test   edx,0x80000
    a5b1:	jne    a811 <list_mechs+0x411>
    a5b7:	test   edx,0x100000
    a5bd:	jne    a841 <list_mechs+0x441>
    a5c3:	test   edx,0x200000
    a5c9:	jne    a871 <list_mechs+0x471>
    a5cf:	test   edx,0x400000
    a5d5:	jne    a8a1 <list_mechs+0x4a1>
    a5db:	test   edx,0x800000
    a5e1:	jne    a8d1 <list_mechs+0x4d1>
    a5e7:	test   edx,0x1000000
    a5ed:	jne    a901 <list_mechs+0x501>
    a5f3:	test   edx,0x2000000
    a5f9:	jne    a931 <list_mechs+0x531>
    a5ff:	test   edx,0x4000000
    a605:	jne    a961 <list_mechs+0x561>
    a60b:	test   rdx,rdx
    a60e:	jne    a670 <list_mechs+0x270>
    a610:	mov    edi,0xa
    a615:	add    rbx,0x1
    a619:	call   55a0 <putchar@plt>
    a61e:	cmp    r12,rbx
    a621:	jne    a468 <list_mechs+0x68>
    a627:	mov    rdi,QWORD PTR [rsp+0x8]
    a62c:	test   rdi,rdi
    a62f:	je     a636 <list_mechs+0x236>
    a631:	call   5590 <free@plt>
    a636:	mov    rax,QWORD PTR [rsp+0x28]
    a63b:	xor    rax,QWORD PTR fs:0x28
    a644:	jne    aa48 <list_mechs+0x648>
    a64a:	add    rsp,0x38
    a64e:	pop    rbx
    a64f:	pop    rbp
    a650:	pop    r12
    a652:	pop    r13
    a654:	pop    r14
    a656:	pop    r15
    a658:	ret    
    a659:	nop    DWORD PTR [rax+0x0]
    a660:	call   a3c0 <p11_mechanism_to_name.part.0>
    a665:	mov    r8,rax
    a668:	jmp    a4ae <list_mechs+0xae>
    a66d:	nop    DWORD PTR [rax]
    a670:	lea    rsi,[rip+0xd3b4]        # 17a2b <_IO_stdin_used+0xa2b>
    a677:	mov    edi,0x1
    a67c:	xor    eax,eax
    a67e:	call   58a0 <__printf_chk@plt>
    a683:	jmp    a610 <list_mechs+0x210>
    a685:	nop    DWORD PTR [rax]
    a688:	lea    rsi,[rip+0xd2cd]        # 1795c <_IO_stdin_used+0x95c>
    a68f:	mov    edi,0x1
    a694:	xor    eax,eax
    a696:	call   58a0 <__printf_chk@plt>
    a69b:	mov    rdx,QWORD PTR [rsp+0x20]
    a6a0:	and    dh,0xfb
    a6a3:	mov    QWORD PTR [rsp+0x20],rdx
    a6a8:	test   dh,0x8
    a6ab:	je     a563 <list_mechs+0x163>
    a6b1:	lea    rsi,[rip+0xd2ad]        # 17965 <_IO_stdin_used+0x965>
    a6b8:	mov    edi,0x1
    a6bd:	xor    eax,eax
    a6bf:	call   58a0 <__printf_chk@plt>
    a6c4:	mov    rdx,QWORD PTR [rsp+0x20]
    a6c9:	and    dh,0xf7
    a6cc:	mov    QWORD PTR [rsp+0x20],rdx
    a6d1:	test   dh,0x10
    a6d4:	je     a56c <list_mechs+0x16c>
    a6da:	lea    rsi,[rip+0xd28b]        # 1796c <_IO_stdin_used+0x96c>
    a6e1:	mov    edi,0x1
    a6e6:	xor    eax,eax
    a6e8:	call   58a0 <__printf_chk@plt>
    a6ed:	mov    rdx,QWORD PTR [rsp+0x20]
    a6f2:	and    dh,0xef
    a6f5:	mov    QWORD PTR [rsp+0x20],rdx
    a6fa:	test   dh,0x20
    a6fd:	je     a575 <list_mechs+0x175>
    a703:	lea    rsi,[rip+0xd271]        # 1797b <_IO_stdin_used+0x97b>
    a70a:	mov    edi,0x1
    a70f:	xor    eax,eax
    a711:	call   58a0 <__printf_chk@plt>
    a716:	mov    rdx,QWORD PTR [rsp+0x20]
    a71b:	and    dh,0xdf
    a71e:	mov    QWORD PTR [rsp+0x20],rdx
    a723:	test   dh,0x40
    a726:	je     a57e <list_mechs+0x17e>
    a72c:	lea    rsi,[rip+0xd251]        # 17984 <_IO_stdin_used+0x984>
    a733:	mov    edi,0x1
    a738:	xor    eax,eax
    a73a:	call   58a0 <__printf_chk@plt>
    a73f:	mov    rdx,QWORD PTR [rsp+0x20]
    a744:	and    dh,0xbf
    a747:	mov    QWORD PTR [rsp+0x20],rdx
    a74c:	test   dh,0x80
    a74f:	je     a587 <list_mechs+0x187>
    a755:	lea    rsi,[rip+0xd239]        # 17995 <_IO_stdin_used+0x995>
    a75c:	mov    edi,0x1
    a761:	xor    eax,eax
    a763:	call   58a0 <__printf_chk@plt>
    a768:	mov    rdx,QWORD PTR [rsp+0x20]
    a76d:	and    dh,0x7f
    a770:	mov    QWORD PTR [rsp+0x20],rdx
    a775:	test   edx,0x10000
    a77b:	je     a593 <list_mechs+0x193>
    a781:	lea    rsi,[rip+0xd218]        # 179a0 <_IO_stdin_used+0x9a0>
    a788:	mov    edi,0x1
    a78d:	xor    eax,eax
    a78f:	call   58a0 <__printf_chk@plt>
    a794:	mov    rdx,QWORD PTR [rsp+0x20]
    a799:	and    rdx,0xfffffffffffeffff
    a7a0:	mov    QWORD PTR [rsp+0x20],rdx
    a7a5:	test   edx,0x20000
    a7ab:	je     a59f <list_mechs+0x19f>
    a7b1:	lea    rsi,[rip+0xd1fc]        # 179b4 <_IO_stdin_used+0x9b4>
    a7b8:	mov    edi,0x1
    a7bd:	xor    eax,eax
    a7bf:	call   58a0 <__printf_chk@plt>
    a7c4:	mov    rdx,QWORD PTR [rsp+0x20]
    a7c9:	and    rdx,0xfffffffffffdffff
    a7d0:	mov    QWORD PTR [rsp+0x20],rdx
    a7d5:	test   edx,0x40000
    a7db:	je     a5ab <list_mechs+0x1ab>
    a7e1:	lea    rsi,[rip+0xd1d3]        # 179bb <_IO_stdin_used+0x9bb>
    a7e8:	mov    edi,0x1
    a7ed:	xor    eax,eax
    a7ef:	call   58a0 <__printf_chk@plt>
    a7f4:	mov    rdx,QWORD PTR [rsp+0x20]
    a7f9:	and    rdx,0xfffffffffffbffff
    a800:	mov    QWORD PTR [rsp+0x20],rdx
    a805:	test   edx,0x80000
    a80b:	je     a5b7 <list_mechs+0x1b7>
    a811:	lea    rsi,[rip+0xd1ac]        # 179c4 <_IO_stdin_used+0x9c4>
    a818:	mov    edi,0x1
    a81d:	xor    eax,eax
    a81f:	call   58a0 <__printf_chk@plt>
    a824:	mov    rdx,QWORD PTR [rsp+0x20]
    a829:	and    rdx,0xfffffffffff7ffff
    a830:	mov    QWORD PTR [rsp+0x20],rdx
    a835:	test   edx,0x100000
    a83b:	je     a5c3 <list_mechs+0x1c3>
    a841:	lea    rsi,[rip+0xd185]        # 179cd <_IO_stdin_used+0x9cd>
    a848:	mov    edi,0x1
    a84d:	xor    eax,eax
    a84f:	call   58a0 <__printf_chk@plt>
    a854:	mov    rdx,QWORD PTR [rsp+0x20]
    a859:	and    rdx,0xffffffffffefffff
    a860:	mov    QWORD PTR [rsp+0x20],rdx
    a865:	test   edx,0x200000
    a86b:	je     a5cf <list_mechs+0x1cf>
    a871:	lea    rsi,[rip+0xd15e]        # 179d6 <_IO_stdin_used+0x9d6>
    a878:	mov    edi,0x1
    a87d:	xor    eax,eax
    a87f:	call   58a0 <__printf_chk@plt>
    a884:	mov    rdx,QWORD PTR [rsp+0x20]
    a889:	and    rdx,0xffffffffffdfffff
    a890:	mov    QWORD PTR [rsp+0x20],rdx
    a895:	test   edx,0x400000
    a89b:	je     a5db <list_mechs+0x1db>
    a8a1:	lea    rsi,[rip+0xd138]        # 179e0 <_IO_stdin_used+0x9e0>
    a8a8:	mov    edi,0x1
    a8ad:	xor    eax,eax
    a8af:	call   58a0 <__printf_chk@plt>
    a8b4:	mov    rdx,QWORD PTR [rsp+0x20]
    a8b9:	and    rdx,0xffffffffffbfffff
    a8c0:	mov    QWORD PTR [rsp+0x20],rdx
    a8c5:	test   edx,0x800000
    a8cb:	je     a5e7 <list_mechs+0x1e7>
    a8d1:	lea    rsi,[rip+0xd118]        # 179f0 <_IO_stdin_used+0x9f0>
    a8d8:	mov    edi,0x1
    a8dd:	xor    eax,eax
    a8df:	call   58a0 <__printf_chk@plt>
    a8e4:	mov    rdx,QWORD PTR [rsp+0x20]
    a8e9:	and    rdx,0xffffffffff7fffff
    a8f0:	mov    QWORD PTR [rsp+0x20],rdx
    a8f5:	test   edx,0x1000000
    a8fb:	je     a5f3 <list_mechs+0x1f3>
    a901:	lea    rsi,[rip+0xd0f1]        # 179f9 <_IO_stdin_used+0x9f9>
    a908:	mov    edi,0x1
    a90d:	xor    eax,eax
    a90f:	call   58a0 <__printf_chk@plt>
    a914:	mov    rdx,QWORD PTR [rsp+0x20]
    a919:	and    rdx,0xfffffffffeffffff
    a920:	mov    QWORD PTR [rsp+0x20],rdx
    a925:	test   edx,0x2000000
    a92b:	je     a5ff <list_mechs+0x1ff>
    a931:	lea    rsi,[rip+0xd0d3]        # 17a0b <_IO_stdin_used+0xa0b>
    a938:	mov    edi,0x1
    a93d:	xor    eax,eax
    a93f:	call   58a0 <__printf_chk@plt>
    a944:	mov    rdx,QWORD PTR [rsp+0x20]
    a949:	and    rdx,0xfffffffffdffffff
    a950:	mov    QWORD PTR [rsp+0x20],rdx
    a955:	test   edx,0x4000000
    a95b:	je     a60b <list_mechs+0x20b>
    a961:	lea    rsi,[rip+0xd0b3]        # 17a1b <_IO_stdin_used+0xa1b>
    a968:	mov    edi,0x1
    a96d:	xor    eax,eax
    a96f:	call   58a0 <__printf_chk@plt>
    a974:	mov    rdx,QWORD PTR [rsp+0x20]
    a979:	and    rdx,0xfffffffffbffffff
    a980:	mov    QWORD PTR [rsp+0x20],rdx
    a985:	jmp    a60b <list_mechs+0x20b>
    a98a:	nop    WORD PTR [rax+rax*1+0x0]
    a990:	lea    rsi,[rip+0xcfbb]        # 17952 <_IO_stdin_used+0x952>
    a997:	mov    edi,0x1
    a99c:	xor    eax,eax
    a99e:	call   58a0 <__printf_chk@plt>
    a9a3:	mov    rdx,QWORD PTR [rsp+0x20]
    a9a8:	and    dh,0xfd
    a9ab:	mov    QWORD PTR [rsp+0x20],rdx
    a9b0:	jmp    a551 <list_mechs+0x151>
    a9b5:	nop    DWORD PTR [rax]
    a9b8:	lea    rsi,[rip+0xcf89]        # 17948 <_IO_stdin_used+0x948>
    a9bf:	mov    edi,0x1
    a9c4:	xor    eax,eax
    a9c6:	call   58a0 <__printf_chk@plt>
    a9cb:	mov    rdx,QWORD PTR [rsp+0x20]
    a9d0:	and    dh,0xfe
    a9d3:	mov    QWORD PTR [rsp+0x20],rdx
    a9d8:	jmp    a548 <list_mechs+0x148>
    a9dd:	nop    DWORD PTR [rax]
    a9e0:	lea    rsi,[rip+0xcf5c]        # 17943 <_IO_stdin_used+0x943>
    a9e7:	mov    edi,0x1
    a9ec:	xor    eax,eax
    a9ee:	call   58a0 <__printf_chk@plt>
    a9f3:	mov    rdx,QWORD PTR [rsp+0x20]
    a9f8:	and    rdx,0xfffffffffffffffe
    a9fc:	mov    QWORD PTR [rsp+0x20],rdx
    aa01:	jmp    a53f <list_mechs+0x13f>
    aa06:	cs nop WORD PTR [rax+rax*1+0x0]
    aa10:	lea    rsi,[rip+0xd706]        # 1811d <_IO_stdin_used+0x111d>
    aa17:	mov    edi,0x1
    aa1c:	xor    eax,eax
    aa1e:	call   58a0 <__printf_chk@plt>
    aa23:	jmp    a527 <list_mechs+0x127>
    aa28:	nop    DWORD PTR [rax+rax*1+0x0]
    aa30:	lea    rsi,[rip+0xd6e6]        # 1811d <_IO_stdin_used+0x111d>
    aa37:	mov    edi,0x1
    aa3c:	xor    eax,eax
    aa3e:	call   58a0 <__printf_chk@plt>
    aa43:	jmp    a50f <list_mechs+0x10f>
    aa48:	call   5690 <__stack_chk_fail@plt>
    aa4d:	nop    DWORD PTR [rax]

000000000000aa50 <test_digest>:
    aa50:	push   r15
    aa52:	push   r14
    aa54:	push   r13
    aa56:	push   r12
    aa58:	mov    r12,rdi
    aa5b:	push   rbp
    aa5c:	push   rbx
    aa5d:	sub    rsp,0x1e8
    aa64:	mov    rax,QWORD PTR fs:0x28
    aa6d:	mov    QWORD PTR [rsp+0x1d8],rax
    aa75:	xor    eax,eax
    aa77:	lea    rax,[rip+0xcfc0]        # 17a3e <_IO_stdin_used+0xa3e>
    aa7e:	lea    rsi,[rsp+0x60]
    aa83:	mov    QWORD PTR [rsp+0x40],0x210
    aa8c:	mov    QWORD PTR [rsp+0x80],rax
    aa94:	lea    rax,[rip+0xcfb4]        # 17a4f <_IO_stdin_used+0xa4f>
    aa9b:	mov    QWORD PTR [rsp+0x88],rax
    aaa3:	lea    rax,[rip+0xcfba]        # 17a64 <_IO_stdin_used+0xa64>
    aaaa:	mov    QWORD PTR [rsp+0x90],rax
    aab2:	lea    rax,[rip+0x1005f]        # 1ab18 <_IO_stdin_used+0x3b18>
    aab9:	mov    QWORD PTR [rsp+0x98],rax
    aac1:	mov    rax,QWORD PTR [rip+0x1b3c8]        # 25e90 <p11>
    aac8:	mov    QWORD PTR [rsp+0x48],0x0
    aad1:	mov    QWORD PTR [rsp+0x50],0x0
    aada:	mov    QWORD PTR [rsp+0xc8],0x240
    aae6:	mov    QWORD PTR [rsp+0xd0],0x220
    aaf2:	mov    QWORD PTR [rsp+0xd8],0x250
    aafe:	mov    QWORD PTR [rsp+0xe0],0xffffff
    ab0a:	mov    QWORD PTR [rsp+0xa0],0x10
    ab16:	mov    QWORD PTR [rsp+0xa8],0x14
    ab22:	mov    QWORD PTR [rsp+0xb0],0x14
    ab2e:	mov    QWORD PTR [rsp+0xb8],0x20
    ab3a:	call   QWORD PTR [rax+0x80]
    ab40:	test   rax,rax
    ab43:	jne    b099 <test_digest+0x649>
    ab49:	mov    rdi,QWORD PTR [rsp+0x60]
    ab4e:	lea    r8,[rsp+0x38]
    ab53:	xor    ecx,ecx
    ab55:	xor    edx,edx
    ab57:	mov    esi,0x400
    ab5c:	call   9300 <find_mechanism>
    ab61:	mov    DWORD PTR [rsp+0xc],eax
    ab65:	test   eax,eax
    ab67:	je     afc1 <test_digest+0x571>
    ab6d:	lea    rdi,[rip+0xcf2d]        # 17aa1 <_IO_stdin_used+0xaa1>
    ab74:	lea    r15,[rsp+0x170]
    ab7c:	call   5600 <puts@plt>
    ab81:	mov    rbp,r15
    ab84:	lea    rbx,[rsp+0x1d4]
    ab8c:	nop    DWORD PTR [rax+0x0]
    ab90:	call   5a40 <rand@plt>
    ab95:	add    rbp,0x1
    ab99:	mov    BYTE PTR [rbp-0x1],al
    ab9c:	cmp    rbp,rbx
    ab9f:	jne    ab90 <test_digest+0x140>
    aba1:	mov    rax,QWORD PTR [rsp+0x38]
    aba6:	lea    r14,[rsp+0x40]
    abab:	mov    rdi,r12
    abae:	mov    rsi,r14
    abb1:	mov    QWORD PTR [rsp+0x40],rax
    abb6:	mov    rax,QWORD PTR [rip+0x1b2d3]        # 25e90 <p11>
    abbd:	call   QWORD PTR [rax+0x130]
    abc3:	mov    rbp,rax
    abc6:	test   rax,rax
    abc9:	jne    b0a8 <test_digest+0x658>
    abcf:	mov    rax,QWORD PTR [rip+0x1b2ba]        # 25e90 <p11>
    abd6:	mov    edx,0x5
    abdb:	mov    rsi,r15
    abde:	mov    rdi,r12
    abe1:	call   QWORD PTR [rax+0x140]
    abe7:	cmp    rax,0x54
    abeb:	je     b01c <test_digest+0x5cc>
    abf1:	test   rax,rax
    abf4:	jne    b0da <test_digest+0x68a>
    abfa:	mov    rax,QWORD PTR [rip+0x1b28f]        # 25e90 <p11>
    ac01:	lea    rsi,[rsp+0x175]
    ac09:	mov    edx,0x32
    ac0e:	mov    rdi,r12
    ac11:	call   QWORD PTR [rax+0x140]
    ac17:	test   rax,rax
    ac1a:	jne    b0da <test_digest+0x68a>
    ac20:	mov    rax,QWORD PTR [rip+0x1b269]        # 25e90 <p11>
    ac27:	lea    rsi,[rsp+0x1a7]
    ac2f:	mov    edx,0x2d
    ac34:	mov    rdi,r12
    ac37:	call   QWORD PTR [rax+0x140]
    ac3d:	test   rax,rax
    ac40:	jne    b0da <test_digest+0x68a>
    ac46:	mov    rax,QWORD PTR [rip+0x1b243]        # 25e90 <p11>
    ac4d:	lea    r13,[rsp+0xf0]
    ac55:	lea    rdx,[rsp+0x28]
    ac5a:	mov    rdi,r12
    ac5d:	mov    QWORD PTR [rsp+0x28],0x40
    ac66:	mov    rsi,r13
    ac69:	call   QWORD PTR [rax+0x150]
    ac6f:	test   rax,rax
    ac72:	jne    b0cb <test_digest+0x67b>
    ac78:	mov    rax,QWORD PTR [rip+0x1b211]        # 25e90 <p11>
    ac7f:	mov    rsi,r14
    ac82:	mov    rdi,r12
    ac85:	call   QWORD PTR [rax+0x130]
    ac8b:	test   rax,rax
    ac8e:	jne    b0bc <test_digest+0x66c>
    ac94:	lea    r8,[rsp+0x30]
    ac99:	mov    edx,0x64
    ac9e:	mov    rsi,r15
    aca1:	mov    rdi,r12
    aca4:	lea    rax,[rsp+0x130]
    acac:	mov    QWORD PTR [rsp+0x10],r8
    acb1:	mov    QWORD PTR [rsp+0x18],rax
    acb6:	mov    rcx,rax
    acb9:	mov    rax,QWORD PTR [rip+0x1b1d0]        # 25e90 <p11>
    acc0:	mov    QWORD PTR [rsp+0x30],0x40
    acc9:	call   QWORD PTR [rax+0x138]
    accf:	test   rax,rax
    acd2:	jne    b0b7 <test_digest+0x667>
    acd8:	mov    rdx,QWORD PTR [rsp+0x28]
    acdd:	cmp    rdx,QWORD PTR [rsp+0x30]
    ace2:	jne    ad13 <test_digest+0x2c3>
    ace4:	mov    rsi,QWORD PTR [rsp+0x18]
    ace9:	mov    rdi,r13
    acec:	call   5750 <memcmp@plt>
    acf1:	mov    DWORD PTR [rsp+0xc],eax
    acf5:	test   eax,eax
    acf7:	je     b00b <test_digest+0x5bb>
    acfd:	lea    rdi,[rip+0xfec4]        # 1abc8 <_IO_stdin_used+0x3bc8>
    ad04:	call   5600 <puts@plt>
    ad09:	mov    DWORD PTR [rsp+0xc],0x1
    ad11:	jmp    ad27 <test_digest+0x2d7>
    ad13:	lea    rdi,[rip+0xfe5e]        # 1ab78 <_IO_stdin_used+0x3b78>
    ad1a:	call   5600 <puts@plt>
    ad1f:	mov    DWORD PTR [rsp+0xc],0x1
    ad27:	mov    rcx,r15
    ad2a:	nop    WORD PTR [rax+rax*1+0x0]
    ad30:	xor    eax,eax
    ad32:	nop    WORD PTR [rax+rax*1+0x0]
    ad38:	lea    edx,[rax+0x30]
    ad3b:	mov    BYTE PTR [rcx+rax*1],dl
    ad3e:	add    rax,0x1
    ad42:	cmp    rax,0xa
    ad46:	jne    ad38 <test_digest+0x2e8>
    ad48:	add    rcx,0xa
    ad4c:	cmp    rbx,rcx
    ad4f:	jne    ad30 <test_digest+0x2e0>
    ad51:	mov    r13d,0x210
    ad57:	lea    rbx,[rsp+0x28]
    ad5c:	nop    DWORD PTR [rax+0x0]
    ad60:	mov    rax,QWORD PTR [rip+0x1b129]        # 25e90 <p11>
    ad67:	mov    QWORD PTR [rsp+0x40],r13
    ad6c:	mov    rsi,r14
    ad6f:	mov    rdi,r12
    ad72:	call   QWORD PTR [rax+0x130]
    ad78:	cmp    rax,0x70
    ad7c:	je     ae40 <test_digest+0x3f0>
    ad82:	test   rax,rax
    ad85:	jne    b0bc <test_digest+0x66c>
    ad8b:	mov    r8,QWORD PTR [rip+0x18656]        # 233e8 <p11_mechanisms+0x8>
    ad92:	lea    rdx,[rip+0x18647]        # 233e0 <p11_mechanisms>
    ad99:	test   r8,r8
    ad9c:	jne    adb9 <test_digest+0x369>
    ad9e:	jmp    af70 <test_digest+0x520>
    ada3:	nop    DWORD PTR [rax+rax*1+0x0]
    ada8:	mov    r8,QWORD PTR [rdx+0x28]
    adac:	add    rdx,0x20
    adb0:	test   r8,r8
    adb3:	je     af70 <test_digest+0x520>
    adb9:	cmp    QWORD PTR [rdx],r13
    adbc:	jne    ada8 <test_digest+0x358>
    adbe:	mov    rdx,r8
    adc1:	lea    rsi,[rip+0xcf2e]        # 17cf6 <_IO_stdin_used+0xcf6>
    adc8:	mov    edi,0x1
    adcd:	xor    eax,eax
    adcf:	call   58a0 <__printf_chk@plt>
    add4:	mov    r8,rbx
    add7:	mov    edx,0x64
    addc:	mov    rsi,r15
    addf:	mov    rax,QWORD PTR [rip+0x1b0aa]        # 25e90 <p11>
    ade6:	lea    r13,[rsp+0xf0]
    adee:	mov    rdi,r12
    adf1:	mov    QWORD PTR [rsp+0x28],0x40
    adfa:	mov    rcx,r13
    adfd:	call   QWORD PTR [rax+0x138]
    ae03:	test   rax,rax
    ae06:	jne    b0b7 <test_digest+0x667>
    ae0c:	mov    rdx,QWORD PTR [rsp+rbp*8+0xa0]
    ae14:	mov    r8,QWORD PTR [rsp+0x28]
    ae19:	cmp    rdx,r8
    ae1c:	je     af80 <test_digest+0x530>
    ae22:	mov    rcx,rdx
    ae25:	lea    rsi,[rip+0xfe0c]        # 1ac38 <_IO_stdin_used+0x3c38>
    ae2c:	mov    rdx,r8
    ae2f:	xor    eax,eax
    ae31:	mov    edi,0x1
    ae36:	add    DWORD PTR [rsp+0xc],0x1
    ae3b:	call   58a0 <__printf_chk@plt>
    ae40:	add    rbp,0x1
    ae44:	mov    r13,QWORD PTR [rsp+rbp*8+0xc0]
    ae4c:	cmp    r13,0xffffff
    ae53:	jne    ad60 <test_digest+0x310>
    ae59:	mov    rax,QWORD PTR [rsp+0x38]
    ae5e:	mov    rsi,r14
    ae61:	mov    rdi,r12
    ae64:	mov    QWORD PTR [rsp+0x40],rax
    ae69:	mov    rax,QWORD PTR [rip+0x1b020]        # 25e90 <p11>
    ae70:	call   QWORD PTR [rax+0x130]
    ae76:	test   rax,rax
    ae79:	jne    b0bc <test_digest+0x66c>
    ae7f:	mov    rcx,QWORD PTR [rsp+0x18]
    ae84:	mov    r8,QWORD PTR [rsp+0x10]
    ae89:	mov    rsi,r15
    ae8c:	mov    rdi,r12
    ae8f:	mov    rax,QWORD PTR [rip+0x1affa]        # 25e90 <p11>
    ae96:	mov    edx,0x64
    ae9b:	mov    QWORD PTR [rsp+0x30],0x1
    aea4:	call   QWORD PTR [rax+0x138]
    aeaa:	mov    rcx,rax
    aead:	cmp    rax,0x150
    aeb3:	je     aed8 <test_digest+0x488>
    aeb5:	mov    rdi,rax
    aeb8:	add    DWORD PTR [rsp+0xc],0x1
    aebd:	call   8e50 <CKR2Str>
    aec2:	lea    rsi,[rip+0xfd9f]        # 1ac68 <_IO_stdin_used+0x3c68>
    aec9:	mov    edi,0x1
    aece:	mov    rdx,rax
    aed1:	xor    eax,eax
    aed3:	call   58a0 <__printf_chk@plt>
    aed8:	mov    rax,QWORD PTR [rip+0x1afb1]        # 25e90 <p11>
    aedf:	xor    ecx,ecx
    aee1:	mov    rsi,r15
    aee4:	mov    rdi,r12
    aee7:	mov    r8,QWORD PTR [rsp+0x10]
    aeec:	mov    edx,0x64
    aef1:	call   QWORD PTR [rax+0x138]
    aef7:	mov    rcx,rax
    aefa:	test   rax,rax
    aefd:	jne    afe3 <test_digest+0x593>
    af03:	mov    r8,QWORD PTR [rsp+0x10]
    af08:	mov    rcx,QWORD PTR [rsp+0x18]
    af0d:	mov    rsi,r15
    af10:	mov    rdi,r12
    af13:	mov    rax,QWORD PTR [rip+0x1af76]        # 25e90 <p11>
    af1a:	mov    edx,0x64
    af1f:	call   QWORD PTR [rax+0x138]
    af25:	cmp    rax,0x91
    af2b:	je     b083 <test_digest+0x633>
    af31:	test   rax,rax
    af34:	jne    b0e9 <test_digest+0x699>
    af3a:	mov    rax,QWORD PTR [rsp+0x1d8]
    af42:	xor    rax,QWORD PTR fs:0x28
    af4b:	jne    b0f8 <test_digest+0x6a8>
    af51:	mov    eax,DWORD PTR [rsp+0xc]
    af55:	add    rsp,0x1e8
    af5c:	pop    rbx
    af5d:	pop    rbp
    af5e:	pop    r12
    af60:	pop    r13
    af62:	pop    r14
    af64:	pop    r15
    af66:	ret    
    af67:	nop    WORD PTR [rax+rax*1+0x0]
    af70:	mov    rdi,r13
    af73:	call   a3c0 <p11_mechanism_to_name.part.0>
    af78:	mov    r8,rax
    af7b:	jmp    adbe <test_digest+0x36e>
    af80:	mov    rsi,QWORD PTR [rsp+rbp*8+0x80]
    af88:	mov    rdi,r13
    af8b:	call   5750 <memcmp@plt>
    af90:	test   eax,eax
    af92:	je     afb0 <test_digest+0x560>
    af94:	lea    rdi,[rip+0xcb42]        # 17add <_IO_stdin_used+0xadd>
    af9b:	add    DWORD PTR [rsp+0xc],0x1
    afa0:	call   5600 <puts@plt>
    afa5:	jmp    ae40 <test_digest+0x3f0>
    afaa:	nop    WORD PTR [rax+rax*1+0x0]
    afb0:	lea    rdi,[rip+0xd62b]        # 185e2 <_IO_stdin_used+0x15e2>
    afb7:	call   5600 <puts@plt>
    afbc:	jmp    ae40 <test_digest+0x3f0>
    afc1:	mov    rcx,QWORD PTR [rip+0x1a618]        # 255e0 <stderr@@GLIBC_2.2.5>
    afc8:	mov    edx,0x19
    afcd:	mov    esi,0x1
    afd2:	lea    rdi,[rip+0xcaae]        # 17a87 <_IO_stdin_used+0xa87>
    afd9:	call   59a0 <fwrite@plt>
    afde:	jmp    af3a <test_digest+0x4ea>
    afe3:	mov    rdi,rax
    afe6:	add    DWORD PTR [rsp+0xc],0x1
    afeb:	call   8e50 <CKR2Str>
    aff0:	lea    rsi,[rip+0xfcb9]        # 1acb0 <_IO_stdin_used+0x3cb0>
    aff7:	mov    edi,0x1
    affc:	mov    rdx,rax
    afff:	xor    eax,eax
    b001:	call   58a0 <__printf_chk@plt>
    b006:	jmp    af03 <test_digest+0x4b3>
    b00b:	lea    rdi,[rip+0xfbfe]        # 1ac10 <_IO_stdin_used+0x3c10>
    b012:	call   5600 <puts@plt>
    b017:	jmp    ad27 <test_digest+0x2d7>
    b01c:	lea    rdi,[rip+0xfb1d]        # 1ab40 <_IO_stdin_used+0x3b40>
    b023:	call   5600 <puts@plt>
    b028:	lea    r8,[rsp+0x30]
    b02d:	mov    rsi,r15
    b030:	mov    rdi,r12
    b033:	lea    rax,[rsp+0x130]
    b03b:	mov    QWORD PTR [rsp+0x10],r8
    b040:	mov    edx,0x64
    b045:	mov    QWORD PTR [rsp+0x18],rax
    b04a:	mov    rcx,rax
    b04d:	mov    rax,QWORD PTR [rip+0x1ae3c]        # 25e90 <p11>
    b054:	mov    QWORD PTR [rsp+0x30],0x40
    b05d:	call   QWORD PTR [rax+0x138]
    b063:	mov    DWORD PTR [rsp+0xc],0x0
    b06b:	mov    rsi,rax
    b06e:	test   rax,rax
    b071:	je     ad27 <test_digest+0x2d7>
    b077:	lea    rdi,[rip+0xca39]        # 17ab7 <_IO_stdin_used+0xab7>
    b07e:	call   9140 <p11_fatal>
    b083:	lea    rdi,[rip+0xfc7e]        # 1ad08 <_IO_stdin_used+0x3d08>
    b08a:	call   5600 <puts@plt>
    b08f:	add    DWORD PTR [rsp+0xc],0x1
    b094:	jmp    af3a <test_digest+0x4ea>
    b099:	mov    rsi,rax
    b09c:	lea    rdi,[rip+0xc9d6]        # 17a79 <_IO_stdin_used+0xa79>
    b0a3:	call   9140 <p11_fatal>
    b0a8:	mov    rsi,rax
    b0ab:	lea    rdi,[rip+0xc9f8]        # 17aaa <_IO_stdin_used+0xaaa>
    b0b2:	call   9140 <p11_fatal>
    b0b7:	mov    rsi,rax
    b0ba:	jmp    b077 <test_digest+0x627>
    b0bc:	mov    rsi,rax
    b0bf:	lea    rdi,[rip+0xc9e4]        # 17aaa <_IO_stdin_used+0xaaa>
    b0c6:	call   9140 <p11_fatal>
    b0cb:	mov    rsi,rax
    b0ce:	lea    rdi,[rip+0xc9fa]        # 17acf <_IO_stdin_used+0xacf>
    b0d5:	call   9140 <p11_fatal>
    b0da:	mov    rsi,rax
    b0dd:	lea    rdi,[rip+0xc9dc]        # 17ac0 <_IO_stdin_used+0xac0>
    b0e4:	call   9140 <p11_fatal>
    b0e9:	mov    rsi,rax
    b0ec:	lea    rdi,[rip+0xca02]        # 17af5 <_IO_stdin_used+0xaf5>
    b0f3:	call   9140 <p11_fatal>
    b0f8:	call   5690 <__stack_chk_fail@plt>
    b0fd:	nop    DWORD PTR [rax]

000000000000b100 <find_object>:
    b100:	push   r14
    b102:	push   r13
    b104:	mov    r13,rdi
    b107:	push   r12
    b109:	mov    r12d,r9d
    b10c:	push   rbp
    b10d:	mov    rbp,rdx
    b110:	mov    edx,0x1
    b115:	push   rbx
    b116:	sub    rsp,0x60
    b11a:	mov    QWORD PTR [rsp+0x8],rsi
    b11f:	mov    rax,QWORD PTR fs:0x28
    b128:	mov    QWORD PTR [rsp+0x58],rax
    b12d:	xor    eax,eax
    b12f:	lea    rax,[rsp+0x8]
    b134:	mov    QWORD PTR [rsp+0x20],0x0
    b13d:	mov    QWORD PTR [rsp+0x28],rax
    b142:	mov    QWORD PTR [rsp+0x30],0x8
    b14b:	test   rcx,rcx
    b14e:	je     b168 <find_object+0x68>
    b150:	mov    QWORD PTR [rsp+0x38],0x102
    b159:	mov    edx,0x2
    b15e:	mov    QWORD PTR [rsp+0x40],rcx
    b163:	mov    QWORD PTR [rsp+0x48],r8
    b168:	mov    rax,QWORD PTR [rip+0x1ad21]        # 25e90 <p11>
    b16f:	lea    rsi,[rsp+0x20]
    b174:	mov    rdi,r13
    b177:	call   QWORD PTR [rax+0xd8]
    b17d:	test   rax,rax
    b180:	jne    b245 <find_object+0x145>
    b186:	xor    ebx,ebx
    b188:	lea    r14,[rsp+0x18]
    b18d:	test   r12d,r12d
    b190:	jg     b1a0 <find_object+0xa0>
    b192:	jmp    b208 <find_object+0x108>
    b194:	nop    DWORD PTR [rax+0x0]
    b198:	add    ebx,0x1
    b19b:	cmp    r12d,ebx
    b19e:	je     b208 <find_object+0x108>
    b1a0:	mov    rax,QWORD PTR [rip+0x1ace9]        # 25e90 <p11>
    b1a7:	mov    rcx,r14
    b1aa:	mov    rsi,rbp
    b1ad:	mov    rdi,r13
    b1b0:	mov    edx,0x1
    b1b5:	call   QWORD PTR [rax+0xe0]
    b1bb:	test   rax,rax
    b1be:	jne    b236 <find_object+0x136>
    b1c0:	cmp    QWORD PTR [rsp+0x18],0x0
    b1c6:	jne    b198 <find_object+0x98>
    b1c8:	mov    QWORD PTR [rbp+0x0],0x0
    b1d0:	mov    rax,QWORD PTR [rip+0x1acb9]        # 25e90 <p11>
    b1d7:	mov    rdi,r13
    b1da:	call   QWORD PTR [rax+0xe8]
    b1e0:	mov    rax,QWORD PTR [rsp+0x18]
    b1e5:	mov    rsi,QWORD PTR [rsp+0x58]
    b1ea:	xor    rsi,QWORD PTR fs:0x28
    b1f3:	jne    b254 <find_object+0x154>
    b1f5:	add    rsp,0x60
    b1f9:	pop    rbx
    b1fa:	pop    rbp
    b1fb:	pop    r12
    b1fd:	pop    r13
    b1ff:	pop    r14
    b201:	ret    
    b202:	nop    WORD PTR [rax+rax*1+0x0]
    b208:	mov    rax,QWORD PTR [rip+0x1ac81]        # 25e90 <p11>
    b20f:	mov    rcx,r14
    b212:	mov    rsi,rbp
    b215:	mov    rdi,r13
    b218:	mov    edx,0x1
    b21d:	call   QWORD PTR [rax+0xe0]
    b223:	test   rax,rax
    b226:	jne    b236 <find_object+0x136>
    b228:	endbr64 
    b22c:	cmp    QWORD PTR [rsp+0x18],0x0
    b232:	jne    b1d0 <find_object+0xd0>
    b234:	jmp    b1c8 <find_object+0xc8>
    b236:	mov    rsi,rax
    b239:	lea    rdi,[rip+0xc8ce]        # 17b0e <_IO_stdin_used+0xb0e>
    b240:	call   9140 <p11_fatal>
    b245:	mov    rsi,rax
    b248:	lea    rdi,[rip+0xc8ad]        # 17afc <_IO_stdin_used+0xafc>
    b24f:	call   9140 <p11_fatal>
    b254:	call   5690 <__stack_chk_fail@plt>
    b259:	nop    DWORD PTR [rax+0x0]

000000000000b260 <p11_name_to_mechanism>:
    b260:	push   rbp
    b261:	mov    rsi,rdi
    b264:	mov    rbp,rdi
    b267:	mov    edx,0x2
    b26c:	push   rbx
    b26d:	lea    rdi,[rip+0xc8a8]        # 17b1c <_IO_stdin_used+0xb1c>
    b274:	sub    rsp,0x8
    b278:	call   5850 <strncasecmp@plt>
    b27d:	test   eax,eax
    b27f:	je     b2e0 <p11_name_to_mechanism+0x80>
    b281:	mov    rdi,QWORD PTR [rip+0x18160]        # 233e8 <p11_mechanisms+0x8>
    b288:	test   rdi,rdi
    b28b:	je     b2f2 <p11_name_to_mechanism+0x92>
    b28d:	lea    rbx,[rip+0x1814c]        # 233e0 <p11_mechanisms>
    b294:	jmp    b2c2 <p11_name_to_mechanism+0x62>
    b296:	cs nop WORD PTR [rax+rax*1+0x0]
    b2a0:	mov    rdi,QWORD PTR [rbx+0x10]
    b2a4:	test   rdi,rdi
    b2a7:	je     b2b5 <p11_name_to_mechanism+0x55>
    b2a9:	mov    rsi,rbp
    b2ac:	call   55c0 <strcasecmp@plt>
    b2b1:	test   eax,eax
    b2b3:	je     b2ce <p11_name_to_mechanism+0x6e>
    b2b5:	mov    rdi,QWORD PTR [rbx+0x28]
    b2b9:	add    rbx,0x20
    b2bd:	test   rdi,rdi
    b2c0:	je     b2f2 <p11_name_to_mechanism+0x92>
    b2c2:	mov    rsi,rbp
    b2c5:	call   55c0 <strcasecmp@plt>
    b2ca:	test   eax,eax
    b2cc:	jne    b2a0 <p11_name_to_mechanism+0x40>
    b2ce:	mov    rax,QWORD PTR [rbx]
    b2d1:	add    rsp,0x8
    b2d5:	pop    rbx
    b2d6:	pop    rbp
    b2d7:	ret    
    b2d8:	nop    DWORD PTR [rax+rax*1+0x0]
    b2e0:	add    rsp,0x8
    b2e4:	mov    rdi,rbp
    b2e7:	xor    edx,edx
    b2e9:	xor    esi,esi
    b2eb:	pop    rbx
    b2ec:	pop    rbp
    b2ed:	jmp    5960 <strtoul@plt>
    b2f2:	mov    rsi,rbp
    b2f5:	lea    rdi,[rip+0xc823]        # 17b1f <_IO_stdin_used+0xb1f>
    b2fc:	xor    eax,eax
    b2fe:	call   15f90 <util_fatal>
    b303:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    b30e:	xchg   ax,ax

000000000000b310 <p11_warn.part.0>:
    b310:	mov    r8,rdi
    b313:	sub    rsp,0x8
    b317:	mov    rdi,rsi
    b31a:	mov    rcx,rsi
    b31d:	call   8e50 <CKR2Str>
    b322:	lea    rdi,[rip+0xfa0f]        # 1ad38 <_IO_stdin_used+0x3d38>
    b329:	add    rsp,0x8
    b32d:	mov    rdx,rax
    b330:	mov    rsi,r8
    b333:	xor    eax,eax
    b335:	jmp    16190 <util_warn>
    b33a:	nop    WORD PTR [rax+rax*1+0x0]

000000000000b340 <getCLASS>:
    b340:	sub    rsp,0x38
    b344:	mov    ecx,0x1
    b349:	mov    rax,QWORD PTR fs:0x28
    b352:	mov    QWORD PTR [rsp+0x28],rax
    b357:	xor    eax,eax
    b359:	lea    rax,[rsp+0x8]
    b35e:	lea    rdx,[rsp+0x10]
    b363:	mov    QWORD PTR [rsp+0x8],0x0
    b36c:	mov    QWORD PTR [rsp+0x18],rax
    b371:	mov    rax,QWORD PTR [rip+0x1ab18]        # 25e90 <p11>
    b378:	mov    QWORD PTR [rsp+0x10],0x0
    b381:	mov    QWORD PTR [rsp+0x20],0x8
    b38a:	call   QWORD PTR [rax+0xc8]
    b390:	test   rax,rax
    b393:	je     b39f <getCLASS+0x5f>
    b395:	mov    edx,DWORD PTR [rip+0x1aadd]        # 25e78 <suppress_warn>
    b39b:	test   edx,edx
    b39d:	je     b3c0 <getCLASS+0x80>
    b39f:	mov    rcx,QWORD PTR [rsp+0x28]
    b3a4:	xor    rcx,QWORD PTR fs:0x28
    b3ad:	mov    rax,QWORD PTR [rsp+0x8]
    b3b2:	jne    b3d1 <getCLASS+0x91>
    b3b4:	add    rsp,0x38
    b3b8:	ret    
    b3b9:	nop    DWORD PTR [rax+0x0]
    b3c0:	mov    rsi,rax
    b3c3:	lea    rdi,[rip+0xc773]        # 17b3d <_IO_stdin_used+0xb3d>
    b3ca:	call   b310 <p11_warn.part.0>
    b3cf:	jmp    b39f <getCLASS+0x5f>
    b3d1:	call   5690 <__stack_chk_fail@plt>
    b3d6:	cs nop WORD PTR [rax+rax*1+0x0]

000000000000b3e0 <getKEY_TYPE>:
    b3e0:	sub    rsp,0x38
    b3e4:	mov    ecx,0x1
    b3e9:	mov    rax,QWORD PTR fs:0x28
    b3f2:	mov    QWORD PTR [rsp+0x28],rax
    b3f7:	xor    eax,eax
    b3f9:	lea    rax,[rsp+0x8]
    b3fe:	lea    rdx,[rsp+0x10]
    b403:	mov    QWORD PTR [rsp+0x8],0x0
    b40c:	mov    QWORD PTR [rsp+0x18],rax
    b411:	mov    rax,QWORD PTR [rip+0x1aa78]        # 25e90 <p11>
    b418:	mov    QWORD PTR [rsp+0x10],0x100
    b421:	mov    QWORD PTR [rsp+0x20],0x8
    b42a:	call   QWORD PTR [rax+0xc8]
    b430:	test   rax,rax
    b433:	je     b43f <getKEY_TYPE+0x5f>
    b435:	mov    edx,DWORD PTR [rip+0x1aa3d]        # 25e78 <suppress_warn>
    b43b:	test   edx,edx
    b43d:	je     b460 <getKEY_TYPE+0x80>
    b43f:	mov    rcx,QWORD PTR [rsp+0x28]
    b444:	xor    rcx,QWORD PTR fs:0x28
    b44d:	mov    rax,QWORD PTR [rsp+0x8]
    b452:	jne    b471 <getKEY_TYPE+0x91>
    b454:	add    rsp,0x38
    b458:	ret    
    b459:	nop    DWORD PTR [rax+0x0]
    b460:	mov    rsi,rax
    b463:	lea    rdi,[rip+0xc6ee]        # 17b58 <_IO_stdin_used+0xb58>
    b46a:	call   b310 <p11_warn.part.0>
    b46f:	jmp    b43f <getKEY_TYPE+0x5f>
    b471:	call   5690 <__stack_chk_fail@plt>
    b476:	cs nop WORD PTR [rax+rax*1+0x0]

000000000000b480 <getMODULUS_BITS>:
    b480:	sub    rsp,0x38
    b484:	mov    ecx,0x1
    b489:	mov    rax,QWORD PTR fs:0x28
    b492:	mov    QWORD PTR [rsp+0x28],rax
    b497:	xor    eax,eax
    b499:	lea    rax,[rsp+0x8]
    b49e:	lea    rdx,[rsp+0x10]
    b4a3:	mov    QWORD PTR [rsp+0x8],0x0
    b4ac:	mov    QWORD PTR [rsp+0x18],rax
    b4b1:	mov    rax,QWORD PTR [rip+0x1a9d8]        # 25e90 <p11>
    b4b8:	mov    QWORD PTR [rsp+0x10],0x121
    b4c1:	mov    QWORD PTR [rsp+0x20],0x8
    b4ca:	call   QWORD PTR [rax+0xc8]
    b4d0:	test   rax,rax
    b4d3:	je     b4df <getMODULUS_BITS+0x5f>
    b4d5:	mov    edx,DWORD PTR [rip+0x1a99d]        # 25e78 <suppress_warn>
    b4db:	test   edx,edx
    b4dd:	je     b500 <getMODULUS_BITS+0x80>
    b4df:	mov    rcx,QWORD PTR [rsp+0x28]
    b4e4:	xor    rcx,QWORD PTR fs:0x28
    b4ed:	mov    rax,QWORD PTR [rsp+0x8]
    b4f2:	jne    b511 <getMODULUS_BITS+0x91>
    b4f4:	add    rsp,0x38
    b4f8:	ret    
    b4f9:	nop    DWORD PTR [rax+0x0]
    b500:	mov    rsi,rax
    b503:	lea    rdi,[rip+0xf85e]        # 1ad68 <_IO_stdin_used+0x3d68>
    b50a:	call   b310 <p11_warn.part.0>
    b50f:	jmp    b4df <getMODULUS_BITS+0x5f>
    b511:	call   5690 <__stack_chk_fail@plt>
    b516:	cs nop WORD PTR [rax+rax*1+0x0]

000000000000b520 <getEC_POINT>:
    b520:	push   r13
    b522:	mov    ecx,0x1
    b527:	push   r12
    b529:	mov    r12,rsi
    b52c:	push   rbp
    b52d:	mov    rbp,rdi
    b530:	push   rbx
    b531:	mov    rbx,rdx
    b534:	sub    rsp,0x28
    b538:	mov    rax,QWORD PTR fs:0x28
    b541:	mov    QWORD PTR [rsp+0x18],rax
    b546:	xor    eax,eax
    b548:	mov    rax,QWORD PTR [rip+0x1a941]        # 25e90 <p11>
    b54f:	mov    r13,rsp
    b552:	mov    QWORD PTR [rdx],0x0
    b559:	mov    QWORD PTR [rsp],0x181
    b561:	mov    rdx,r13
    b564:	mov    QWORD PTR [rsp+0x8],0x0
    b56d:	mov    QWORD PTR [rsp+0x10],0x0
    b576:	call   QWORD PTR [rax+0xc8]
    b57c:	test   rax,rax
    b57f:	jne    b5f8 <getEC_POINT+0xd8>
    b581:	mov    rsi,QWORD PTR [rsp+0x10]
    b586:	cmp    rsi,0xffffffffffffffff
    b58a:	je     b620 <getEC_POINT+0x100>
    b590:	add    rsi,0x1
    b594:	mov    edi,0x1
    b599:	call   5790 <calloc@plt>
    b59e:	mov    QWORD PTR [rsp+0x8],rax
    b5a3:	test   rax,rax
    b5a6:	je     b63b <getEC_POINT+0x11b>
    b5ac:	mov    rax,QWORD PTR [rip+0x1a8dd]        # 25e90 <p11>
    b5b3:	mov    rdx,r13
    b5b6:	mov    rsi,r12
    b5b9:	mov    rdi,rbp
    b5bc:	mov    ecx,0x1
    b5c1:	call   QWORD PTR [rax+0xc8]
    b5c7:	mov    rax,QWORD PTR [rsp+0x10]
    b5cc:	cmp    rax,0xffffffffffffffff
    b5d0:	je     b628 <getEC_POINT+0x108>
    b5d2:	mov    QWORD PTR [rbx],rax
    b5d5:	mov    rax,QWORD PTR [rsp+0x8]
    b5da:	mov    rcx,QWORD PTR [rsp+0x18]
    b5df:	xor    rcx,QWORD PTR fs:0x28
    b5e8:	jne    b636 <getEC_POINT+0x116>
    b5ea:	add    rsp,0x28
    b5ee:	pop    rbx
    b5ef:	pop    rbp
    b5f0:	pop    r12
    b5f2:	pop    r13
    b5f4:	ret    
    b5f5:	nop    DWORD PTR [rax]
    b5f8:	cmp    rax,0x12
    b5fc:	je     b5d5 <getEC_POINT+0xb5>
    b5fe:	mov    edx,DWORD PTR [rip+0x1a874]        # 25e78 <suppress_warn>
    b604:	test   edx,edx
    b606:	jne    b5d5 <getEC_POINT+0xb5>
    b608:	mov    rsi,rax
    b60b:	lea    rdi,[rip+0xc564]        # 17b76 <_IO_stdin_used+0xb76>
    b612:	call   b310 <p11_warn.part.0>
    b617:	jmp    b5d5 <getEC_POINT+0xb5>
    b619:	nop    DWORD PTR [rax+0x0]
    b620:	xor    eax,eax
    b622:	jmp    b5da <getEC_POINT+0xba>
    b624:	nop    DWORD PTR [rax+0x0]
    b628:	mov    rdi,QWORD PTR [rsp+0x8]
    b62d:	call   5590 <free@plt>
    b632:	xor    eax,eax
    b634:	jmp    b5da <getEC_POINT+0xba>
    b636:	call   5690 <__stack_chk_fail@plt>
    b63b:	lea    rdi,[rip+0xf74e]        # 1ad90 <_IO_stdin_used+0x3d90>
    b642:	call   15f90 <util_fatal>
    b647:	nop    WORD PTR [rax+rax*1+0x0]

000000000000b650 <getEC_PARAMS>:
    b650:	push   r13
    b652:	mov    ecx,0x1
    b657:	push   r12
    b659:	mov    r12,rsi
    b65c:	push   rbp
    b65d:	mov    rbp,rdi
    b660:	push   rbx
    b661:	mov    rbx,rdx
    b664:	sub    rsp,0x28
    b668:	mov    rax,QWORD PTR fs:0x28
    b671:	mov    QWORD PTR [rsp+0x18],rax
    b676:	xor    eax,eax
    b678:	mov    rax,QWORD PTR [rip+0x1a811]        # 25e90 <p11>
    b67f:	mov    r13,rsp
    b682:	mov    QWORD PTR [rdx],0x0
    b689:	mov    QWORD PTR [rsp],0x180
    b691:	mov    rdx,r13
    b694:	mov    QWORD PTR [rsp+0x8],0x0
    b69d:	mov    QWORD PTR [rsp+0x10],0x0
    b6a6:	call   QWORD PTR [rax+0xc8]
    b6ac:	test   rax,rax
    b6af:	jne    b728 <getEC_PARAMS+0xd8>
    b6b1:	mov    rsi,QWORD PTR [rsp+0x10]
    b6b6:	cmp    rsi,0xffffffffffffffff
    b6ba:	je     b750 <getEC_PARAMS+0x100>
    b6c0:	add    rsi,0x1
    b6c4:	mov    edi,0x1
    b6c9:	call   5790 <calloc@plt>
    b6ce:	mov    QWORD PTR [rsp+0x8],rax
    b6d3:	test   rax,rax
    b6d6:	je     b76b <getEC_PARAMS+0x11b>
    b6dc:	mov    rax,QWORD PTR [rip+0x1a7ad]        # 25e90 <p11>
    b6e3:	mov    rdx,r13
    b6e6:	mov    rsi,r12
    b6e9:	mov    rdi,rbp
    b6ec:	mov    ecx,0x1
    b6f1:	call   QWORD PTR [rax+0xc8]
    b6f7:	mov    rax,QWORD PTR [rsp+0x10]
    b6fc:	cmp    rax,0xffffffffffffffff
    b700:	je     b758 <getEC_PARAMS+0x108>
    b702:	mov    QWORD PTR [rbx],rax
    b705:	mov    rax,QWORD PTR [rsp+0x8]
    b70a:	mov    rcx,QWORD PTR [rsp+0x18]
    b70f:	xor    rcx,QWORD PTR fs:0x28
    b718:	jne    b766 <getEC_PARAMS+0x116>
    b71a:	add    rsp,0x28
    b71e:	pop    rbx
    b71f:	pop    rbp
    b720:	pop    r12
    b722:	pop    r13
    b724:	ret    
    b725:	nop    DWORD PTR [rax]
    b728:	cmp    rax,0x12
    b72c:	je     b705 <getEC_PARAMS+0xb5>
    b72e:	mov    edx,DWORD PTR [rip+0x1a744]        # 25e78 <suppress_warn>
    b734:	test   edx,edx
    b736:	jne    b705 <getEC_PARAMS+0xb5>
    b738:	mov    rsi,rax
    b73b:	lea    rdi,[rip+0xf69e]        # 1ade0 <_IO_stdin_used+0x3de0>
    b742:	call   b310 <p11_warn.part.0>
    b747:	jmp    b705 <getEC_PARAMS+0xb5>
    b749:	nop    DWORD PTR [rax+0x0]
    b750:	xor    eax,eax
    b752:	jmp    b70a <getEC_PARAMS+0xba>
    b754:	nop    DWORD PTR [rax+0x0]
    b758:	mov    rdi,QWORD PTR [rsp+0x8]
    b75d:	call   5590 <free@plt>
    b762:	xor    eax,eax
    b764:	jmp    b70a <getEC_PARAMS+0xba>
    b766:	call   5690 <__stack_chk_fail@plt>
    b76b:	lea    rdi,[rip+0xf646]        # 1adb8 <_IO_stdin_used+0x3db8>
    b772:	call   15f90 <util_fatal>
    b777:	nop    WORD PTR [rax+rax*1+0x0]

000000000000b780 <getVALUE>:
    b780:	push   r13
    b782:	mov    ecx,0x1
    b787:	push   r12
    b789:	mov    r12,rsi
    b78c:	push   rbp
    b78d:	mov    rbp,rdi
    b790:	push   rbx
    b791:	mov    rbx,rdx
    b794:	sub    rsp,0x28
    b798:	mov    rax,QWORD PTR fs:0x28
    b7a1:	mov    QWORD PTR [rsp+0x18],rax
    b7a6:	xor    eax,eax
    b7a8:	mov    rax,QWORD PTR [rip+0x1a6e1]        # 25e90 <p11>
    b7af:	mov    r13,rsp
    b7b2:	mov    QWORD PTR [rdx],0x0
    b7b9:	mov    QWORD PTR [rsp],0x11
    b7c1:	mov    rdx,r13
    b7c4:	mov    QWORD PTR [rsp+0x8],0x0
    b7cd:	mov    QWORD PTR [rsp+0x10],0x0
    b7d6:	call   QWORD PTR [rax+0xc8]
    b7dc:	test   rax,rax
    b7df:	jne    b858 <getVALUE+0xd8>
    b7e1:	mov    rsi,QWORD PTR [rsp+0x10]
    b7e6:	cmp    rsi,0xffffffffffffffff
    b7ea:	je     b880 <getVALUE+0x100>
    b7f0:	add    rsi,0x1
    b7f4:	mov    edi,0x1
    b7f9:	call   5790 <calloc@plt>
    b7fe:	mov    QWORD PTR [rsp+0x8],rax
    b803:	test   rax,rax
    b806:	je     b89b <getVALUE+0x11b>
    b80c:	mov    rax,QWORD PTR [rip+0x1a67d]        # 25e90 <p11>
    b813:	mov    rdx,r13
    b816:	mov    rsi,r12
    b819:	mov    rdi,rbp
    b81c:	mov    ecx,0x1
    b821:	call   QWORD PTR [rax+0xc8]
    b827:	mov    rax,QWORD PTR [rsp+0x10]
    b82c:	cmp    rax,0xffffffffffffffff
    b830:	je     b888 <getVALUE+0x108>
    b832:	mov    QWORD PTR [rbx],rax
    b835:	mov    rax,QWORD PTR [rsp+0x8]
    b83a:	mov    rcx,QWORD PTR [rsp+0x18]
    b83f:	xor    rcx,QWORD PTR fs:0x28
    b848:	jne    b896 <getVALUE+0x116>
    b84a:	add    rsp,0x28
    b84e:	pop    rbx
    b84f:	pop    rbp
    b850:	pop    r12
    b852:	pop    r13
    b854:	ret    
    b855:	nop    DWORD PTR [rax]
    b858:	cmp    rax,0x12
    b85c:	je     b835 <getVALUE+0xb5>
    b85e:	mov    edx,DWORD PTR [rip+0x1a614]        # 25e78 <suppress_warn>
    b864:	test   edx,edx
    b866:	jne    b835 <getVALUE+0xb5>
    b868:	mov    rsi,rax
    b86b:	lea    rdi,[rip+0xc340]        # 17bb2 <_IO_stdin_used+0xbb2>
    b872:	call   b310 <p11_warn.part.0>
    b877:	jmp    b835 <getVALUE+0xb5>
    b879:	nop    DWORD PTR [rax+0x0]
    b880:	xor    eax,eax
    b882:	jmp    b83a <getVALUE+0xba>
    b884:	nop    DWORD PTR [rax+0x0]
    b888:	mov    rdi,QWORD PTR [rsp+0x8]
    b88d:	call   5590 <free@plt>
    b892:	xor    eax,eax
    b894:	jmp    b83a <getVALUE+0xba>
    b896:	call   5690 <__stack_chk_fail@plt>
    b89b:	lea    rdi,[rip+0xc2f2]        # 17b94 <_IO_stdin_used+0xb94>
    b8a2:	call   15f90 <util_fatal>
    b8a7:	nop    WORD PTR [rax+rax*1+0x0]

000000000000b8b0 <read_object>:
    b8b0:	push   r13
    b8b2:	push   r12
    b8b4:	push   rbp
    b8b5:	mov    rbp,rdi
    b8b8:	push   rbx
    b8b9:	xor    ebx,ebx
    b8bb:	sub    rsp,0xa68
    b8c2:	mov    rax,QWORD PTR fs:0x28
    b8cb:	mov    QWORD PTR [rsp+0xa58],rax
    b8d3:	xor    eax,eax
    b8d5:	mov    rax,QWORD PTR [rip+0x17784]        # 23060 <opt_object_class>
    b8dc:	cmp    QWORD PTR [rip+0x1a824],0x0        # 26108 <opt_object_class_str>
    b8e4:	mov    QWORD PTR [rsp+0x10],0x0
    b8ed:	mov    QWORD PTR [rsp+0x18],0x0
    b8f6:	mov    QWORD PTR [rsp+0x8],rax
    b8fb:	mov    QWORD PTR [rsp+0x20],0x0
    b904:	je     b92a <read_object+0x7a>
    b906:	lea    rax,[rsp+0x8]
    b90b:	mov    ebx,0x1
    b910:	mov    QWORD PTR [rsp+0x70],0x0
    b919:	mov    QWORD PTR [rsp+0x78],rax
    b91e:	mov    QWORD PTR [rsp+0x80],0x8
    b92a:	mov    rdx,QWORD PTR [rip+0x1a6cf]        # 26000 <opt_object_id_len>
    b931:	test   rdx,rdx
    b934:	je     b95d <read_object+0xad>
    b936:	movsxd rax,ebx
    b939:	lea    rcx,[rip+0x1a760]        # 260a0 <opt_object_id>
    b940:	add    ebx,0x1
    b943:	imul   rax,rax,0x18
    b947:	mov    QWORD PTR [rsp+rax*1+0x70],0x102
    b950:	mov    QWORD PTR [rsp+rax*1+0x78],rcx
    b955:	mov    QWORD PTR [rsp+rax*1+0x80],rdx
    b95d:	mov    rdi,QWORD PTR [rip+0x1a68c]        # 25ff0 <opt_object_label>
    b964:	test   rdi,rdi
    b967:	je     b992 <read_object+0xe2>
    b969:	movsxd rax,ebx
    b96c:	add    ebx,0x1
    b96f:	lea    r12,[rax+rax*2]
    b973:	shl    r12,0x3
    b977:	mov    QWORD PTR [rsp+r12*1+0x70],0x3
    b980:	mov    QWORD PTR [rsp+r12*1+0x78],rdi
    b985:	call   5680 <strlen@plt>
    b98a:	mov    QWORD PTR [rsp+r12*1+0x80],rax
    b992:	mov    rdi,QWORD PTR [rip+0x1a62f]        # 25fc8 <opt_application_label>
    b999:	test   rdi,rdi
    b99c:	je     b9c7 <read_object+0x117>
    b99e:	movsxd rax,ebx
    b9a1:	add    ebx,0x1
    b9a4:	lea    r12,[rax+rax*2]
    b9a8:	shl    r12,0x3
    b9ac:	mov    QWORD PTR [rsp+r12*1+0x70],0x10
    b9b5:	mov    QWORD PTR [rsp+r12*1+0x78],rdi
    b9ba:	call   5680 <strlen@plt>
    b9bf:	mov    QWORD PTR [rsp+r12*1+0x80],rax
    b9c7:	mov    rsi,QWORD PTR [rip+0x1a5f2]        # 25fc0 <opt_application_id>
    b9ce:	test   rsi,rsi
    b9d1:	je     ba2f <read_object+0x17f>
    b9d3:	lea    r13,[rsp+0x30]
    b9d8:	mov    rdi,r13
    b9db:	call   5720 <sc_format_oid@plt>
    b9e0:	test   eax,eax
    b9e2:	jne    bcf5 <read_object+0x445>
    b9e8:	lea    r12,[rsp+0x28]
    b9ed:	lea    rdi,[rsp+0x18]
    b9f2:	mov    rdx,r13
    b9f5:	mov    rsi,r12
    b9f8:	call   5880 <sc_asn1_encode_object_id@plt>
    b9fd:	test   eax,eax
    b9ff:	jne    bce0 <read_object+0x430>
    ba05:	movsxd rax,ebx
    ba08:	mov    rdx,QWORD PTR [rsp+0x18]
    ba0d:	add    ebx,0x1
    ba10:	imul   rax,rax,0x18
    ba14:	mov    QWORD PTR [rsp+rax*1+0x78],rdx
    ba19:	mov    rdx,QWORD PTR [rsp+0x28]
    ba1e:	mov    QWORD PTR [rsp+rax*1+0x70],0x12
    ba27:	mov    QWORD PTR [rsp+rax*1+0x80],rdx
    ba2f:	mov    rdi,QWORD PTR [rip+0x1a582]        # 25fb8 <opt_issuer>
    ba36:	test   rdi,rdi
    ba39:	je     bc10 <read_object+0x360>
    ba3f:	lea    r12,[rsp+0x28]
    ba44:	lea    r13,[rsp+0x650]
    ba4c:	mov    QWORD PTR [rsp+0x28],0x400
    ba55:	mov    rdx,r12
    ba58:	mov    rsi,r13
    ba5b:	call   5620 <sc_hex_to_bin@plt>
    ba60:	test   eax,eax
    ba62:	jne    bcbd <read_object+0x40d>
    ba68:	movsxd rax,ebx
    ba6b:	mov    rdx,QWORD PTR [rsp+0x28]
    ba70:	mov    rdi,QWORD PTR [rip+0x1a539]        # 25fb0 <opt_subject>
    ba77:	add    ebx,0x1
    ba7a:	imul   rax,rax,0x18
    ba7e:	mov    QWORD PTR [rsp+rax*1+0x70],0x81
    ba87:	mov    QWORD PTR [rsp+rax*1+0x78],r13
    ba8c:	mov    QWORD PTR [rsp+rax*1+0x80],rdx
    ba94:	test   rdi,rdi
    ba97:	je     bc3e <read_object+0x38e>
    ba9d:	lea    r13,[rsp+0x250]
    baa5:	mov    rdx,r12
    baa8:	mov    QWORD PTR [rsp+0x28],0x400
    bab1:	mov    rsi,r13
    bab4:	call   5620 <sc_hex_to_bin@plt>
    bab9:	test   eax,eax
    babb:	jne    bcaf <read_object+0x3ff>
    bac1:	movsxd rax,ebx
    bac4:	mov    rdx,QWORD PTR [rsp+0x28]
    bac9:	add    ebx,0x1
    bacc:	lea    rax,[rax+rax*2]
    bad0:	shl    rax,0x3
    bad4:	mov    QWORD PTR [rsp+rax*1+0x70],0x101
    badd:	mov    QWORD PTR [rsp+rax*1+0x78],r13
    bae2:	mov    QWORD PTR [rsp+rax*1+0x80],rdx
    baea:	movsxd rdx,ebx
    baed:	mov    rax,QWORD PTR [rip+0x1a39c]        # 25e90 <p11>
    baf4:	lea    rsi,[rsp+0x70]
    baf9:	mov    rdi,rbp
    bafc:	mov    QWORD PTR [rsp+0x10],0x0
    bb05:	call   QWORD PTR [rax+0xd8]
    bb0b:	test   rax,rax
    bb0e:	jne    bc2f <read_object+0x37f>
    bb14:	xor    edx,edx
    bb16:	lea    rsi,[rsp+0x10]
    bb1b:	mov    rdi,rbp
    bb1e:	call   a2d0 <find_object_with_attributes.part.0>
    bb23:	test   rax,rax
    bb26:	jne    bc2f <read_object+0x37f>
    bb2c:	mov    rsi,QWORD PTR [rsp+0x10]
    bb31:	test   rsi,rsi
    bb34:	je     bc8c <read_object+0x3dc>
    bb3a:	mov    rax,QWORD PTR [rsp+0x8]
    bb3f:	cmp    rax,0x3
    bb43:	je     bc46 <read_object+0x396>
    bb49:	cmp    rax,0x2
    bb4d:	je     bc7e <read_object+0x3ce>
    bb53:	mov    rdi,rbp
    bb56:	lea    rdx,[rsp+0x20]
    bb5b:	call   b780 <getVALUE>
    bb60:	mov    rbp,rax
    bb63:	test   rax,rax
    bb66:	je     bc70 <read_object+0x3c0>
    bb6c:	mov    rdi,QWORD PTR [rip+0x1a5fd]        # 26170 <opt_output>
    bb73:	test   rdi,rdi
    bb76:	je     bc07 <read_object+0x357>
    bb7c:	lea    rsi,[rip+0xc0b6]        # 17c39 <_IO_stdin_used+0xc39>
    bb83:	call   5900 <fopen@plt>
    bb88:	mov    r12,rax
    bb8b:	test   rax,rax
    bb8e:	je     bccb <read_object+0x41b>
    bb94:	mov    rdx,QWORD PTR [rsp+0x20]
    bb99:	mov    rcx,r12
    bb9c:	mov    esi,0x1
    bba1:	mov    rdi,rbp
    bba4:	call   59a0 <fwrite@plt>
    bba9:	cmp    rax,QWORD PTR [rsp+0x20]
    bbae:	jne    bc9a <read_object+0x3ea>
    bbb4:	cmp    QWORD PTR [rip+0x1a5b4],0x0        # 26170 <opt_output>
    bbbc:	je     bbc6 <read_object+0x316>
    bbbe:	mov    rdi,r12
    bbc1:	call   5670 <fclose@plt>
    bbc6:	mov    rdi,rbp
    bbc9:	mov    r12d,0x1
    bbcf:	call   5590 <free@plt>
    bbd4:	mov    rdi,QWORD PTR [rsp+0x18]
    bbd9:	test   rdi,rdi
    bbdc:	je     bbe3 <read_object+0x333>
    bbde:	call   5590 <free@plt>
    bbe3:	mov    rax,QWORD PTR [rsp+0xa58]
    bbeb:	xor    rax,QWORD PTR fs:0x28
    bbf4:	jne    bc6b <read_object+0x3bb>
    bbf6:	add    rsp,0xa68
    bbfd:	mov    eax,r12d
    bc00:	pop    rbx
    bc01:	pop    rbp
    bc02:	pop    r12
    bc04:	pop    r13
    bc06:	ret    
    bc07:	mov    r12,QWORD PTR [rip+0x19992]        # 255a0 <stdout@@GLIBC_2.2.5>
    bc0e:	jmp    bb94 <read_object+0x2e4>
    bc10:	mov    rdi,QWORD PTR [rip+0x1a399]        # 25fb0 <opt_subject>
    bc17:	test   rdi,rdi
    bc1a:	je     bc26 <read_object+0x376>
    bc1c:	lea    r12,[rsp+0x28]
    bc21:	jmp    ba9d <read_object+0x1ed>
    bc26:	mov    eax,0x7
    bc2b:	test   ebx,ebx
    bc2d:	jne    bc3e <read_object+0x38e>
    bc2f:	mov    rsi,rax
    bc32:	lea    rdi,[rip+0xbfbc]        # 17bf5 <_IO_stdin_used+0xbf5>
    bc39:	call   9140 <p11_fatal>
    bc3e:	movsxd rdx,ebx
    bc41:	jmp    baed <read_object+0x23d>
    bc46:	mov    rcx,QWORD PTR [rip+0x19993]        # 255e0 <stderr@@GLIBC_2.2.5>
    bc4d:	mov    edx,0x30
    bc52:	mov    esi,0x1
    bc57:	xor    r12d,r12d
    bc5a:	lea    rdi,[rip+0xf1ef]        # 1ae50 <_IO_stdin_used+0x3e50>
    bc61:	call   59a0 <fwrite@plt>
    bc66:	jmp    bbe3 <read_object+0x333>
    bc6b:	call   5690 <__stack_chk_fail@plt>
    bc70:	lea    rdi,[rip+0xbfad]        # 17c24 <_IO_stdin_used+0xc24>
    bc77:	xor    eax,eax
    bc79:	call   15f90 <util_fatal>
    bc7e:	lea    rdi,[rip+0xf203]        # 1ae88 <_IO_stdin_used+0x3e88>
    bc85:	xor    eax,eax
    bc87:	call   15f90 <util_fatal>
    bc8c:	lea    rdi,[rip+0xbf80]        # 17c13 <_IO_stdin_used+0xc13>
    bc93:	xor    eax,eax
    bc95:	call   15f90 <util_fatal>
    bc9a:	mov    rsi,QWORD PTR [rip+0x1a4cf]        # 26170 <opt_output>
    bca1:	lea    rdi,[rip+0xbfa5]        # 17c4d <_IO_stdin_used+0xc4d>
    bca8:	xor    eax,eax
    bcaa:	call   15f90 <util_fatal>
    bcaf:	lea    rdi,[rip+0xf172]        # 1ae28 <_IO_stdin_used+0x3e28>
    bcb6:	xor    eax,eax
    bcb8:	call   15f90 <util_fatal>
    bcbd:	lea    rdi,[rip+0xf13c]        # 1ae00 <_IO_stdin_used+0x3e00>
    bcc4:	xor    eax,eax
    bcc6:	call   15f90 <util_fatal>
    bccb:	mov    rsi,QWORD PTR [rip+0x1a49e]        # 26170 <opt_output>
    bcd2:	lea    rdi,[rip+0xbf63]        # 17c3c <_IO_stdin_used+0xc3c>
    bcd9:	xor    eax,eax
    bcdb:	call   15f90 <util_fatal>
    bce0:	mov    rsi,QWORD PTR [rip+0x1a2d9]        # 25fc0 <opt_application_id>
    bce7:	lea    rdi,[rip+0xbef0]        # 17bde <_IO_stdin_used+0xbde>
    bcee:	xor    eax,eax
    bcf0:	call   15f90 <util_fatal>
    bcf5:	mov    rsi,QWORD PTR [rip+0x1a2c4]        # 25fc0 <opt_application_id>
    bcfc:	lea    rdi,[rip+0xbeca]        # 17bcd <_IO_stdin_used+0xbcd>
    bd03:	xor    eax,eax
    bd05:	call   15f90 <util_fatal>
    bd0a:	nop    WORD PTR [rax+rax*1+0x0]

000000000000bd10 <getID>:
    bd10:	push   r13
    bd12:	mov    ecx,0x1
    bd17:	push   r12
    bd19:	mov    r12,rsi
    bd1c:	push   rbp
    bd1d:	mov    rbp,rdi
    bd20:	push   rbx
    bd21:	mov    rbx,rdx
    bd24:	sub    rsp,0x28
    bd28:	mov    rax,QWORD PTR fs:0x28
    bd31:	mov    QWORD PTR [rsp+0x18],rax
    bd36:	xor    eax,eax
    bd38:	mov    rax,QWORD PTR [rip+0x1a151]        # 25e90 <p11>
    bd3f:	mov    r13,rsp
    bd42:	mov    QWORD PTR [rdx],0x0
    bd49:	mov    QWORD PTR [rsp],0x102
    bd51:	mov    rdx,r13
    bd54:	mov    QWORD PTR [rsp+0x8],0x0
    bd5d:	mov    QWORD PTR [rsp+0x10],0x0
    bd66:	call   QWORD PTR [rax+0xc8]
    bd6c:	test   rax,rax
    bd6f:	jne    bde8 <getID+0xd8>
    bd71:	mov    rsi,QWORD PTR [rsp+0x10]
    bd76:	cmp    rsi,0xffffffffffffffff
    bd7a:	je     be10 <getID+0x100>
    bd80:	add    rsi,0x1
    bd84:	mov    edi,0x1
    bd89:	call   5790 <calloc@plt>
    bd8e:	mov    QWORD PTR [rsp+0x8],rax
    bd93:	test   rax,rax
    bd96:	je     be2b <getID+0x11b>
    bd9c:	mov    rax,QWORD PTR [rip+0x1a0ed]        # 25e90 <p11>
    bda3:	mov    rdx,r13
    bda6:	mov    rsi,r12
    bda9:	mov    rdi,rbp
    bdac:	mov    ecx,0x1
    bdb1:	call   QWORD PTR [rax+0xc8]
    bdb7:	mov    rax,QWORD PTR [rsp+0x10]
    bdbc:	cmp    rax,0xffffffffffffffff
    bdc0:	je     be18 <getID+0x108>
    bdc2:	mov    QWORD PTR [rbx],rax
    bdc5:	mov    rax,QWORD PTR [rsp+0x8]
    bdca:	mov    rcx,QWORD PTR [rsp+0x18]
    bdcf:	xor    rcx,QWORD PTR fs:0x28
    bdd8:	jne    be26 <getID+0x116>
    bdda:	add    rsp,0x28
    bdde:	pop    rbx
    bddf:	pop    rbp
    bde0:	pop    r12
    bde2:	pop    r13
    bde4:	ret    
    bde5:	nop    DWORD PTR [rax]
    bde8:	cmp    rax,0x12
    bdec:	je     bdc5 <getID+0xb5>
    bdee:	mov    edx,DWORD PTR [rip+0x1a084]        # 25e78 <suppress_warn>
    bdf4:	test   edx,edx
    bdf6:	jne    bdc5 <getID+0xb5>
    bdf8:	mov    rsi,rax
    bdfb:	lea    rdi,[rip+0xbe7b]        # 17c7d <_IO_stdin_used+0xc7d>
    be02:	call   b310 <p11_warn.part.0>
    be07:	jmp    bdc5 <getID+0xb5>
    be09:	nop    DWORD PTR [rax+0x0]
    be10:	xor    eax,eax
    be12:	jmp    bdca <getID+0xba>
    be14:	nop    DWORD PTR [rax+0x0]
    be18:	mov    rdi,QWORD PTR [rsp+0x8]
    be1d:	call   5590 <free@plt>
    be22:	xor    eax,eax
    be24:	jmp    bdca <getID+0xba>
    be26:	call   5690 <__stack_chk_fail@plt>
    be2b:	lea    rdi,[rip+0xbe30]        # 17c62 <_IO_stdin_used+0xc62>
    be32:	call   15f90 <util_fatal>
    be37:	nop    WORD PTR [rax+rax*1+0x0]

000000000000be40 <getDECRYPT>:
    be40:	sub    rsp,0x38
    be44:	mov    ecx,0x1
    be49:	mov    rax,QWORD PTR fs:0x28
    be52:	mov    QWORD PTR [rsp+0x28],rax
    be57:	xor    eax,eax
    be59:	lea    rax,[rsp+0xf]
    be5e:	mov    BYTE PTR [rsp+0xf],0x0
    be63:	lea    rdx,[rsp+0x10]
    be68:	mov    QWORD PTR [rsp+0x18],rax
    be6d:	mov    rax,QWORD PTR [rip+0x1a01c]        # 25e90 <p11>
    be74:	mov    QWORD PTR [rsp+0x10],0x105
    be7d:	mov    QWORD PTR [rsp+0x20],0x1
    be86:	call   QWORD PTR [rax+0xc8]
    be8c:	test   rax,rax
    be8f:	je     be9b <getDECRYPT+0x5b>
    be91:	mov    edx,DWORD PTR [rip+0x19fe1]        # 25e78 <suppress_warn>
    be97:	test   edx,edx
    be99:	je     beb8 <getDECRYPT+0x78>
    be9b:	mov    rcx,QWORD PTR [rsp+0x28]
    bea0:	xor    rcx,QWORD PTR fs:0x28
    bea9:	movzx  eax,BYTE PTR [rsp+0xf]
    beae:	jne    bec9 <getDECRYPT+0x89>
    beb0:	add    rsp,0x38
    beb4:	ret    
    beb5:	nop    DWORD PTR [rax]
    beb8:	mov    rsi,rax
    bebb:	lea    rdi,[rip+0xbdd3]        # 17c95 <_IO_stdin_used+0xc95>
    bec2:	call   b310 <p11_warn.part.0>
    bec7:	jmp    be9b <getDECRYPT+0x5b>
    bec9:	call   5690 <__stack_chk_fail@plt>
    bece:	xchg   ax,ax

000000000000bed0 <getSIGN>:
    bed0:	sub    rsp,0x38
    bed4:	mov    ecx,0x1
    bed9:	mov    rax,QWORD PTR fs:0x28
    bee2:	mov    QWORD PTR [rsp+0x28],rax
    bee7:	xor    eax,eax
    bee9:	lea    rax,[rsp+0xf]
    beee:	mov    BYTE PTR [rsp+0xf],0x0
    bef3:	lea    rdx,[rsp+0x10]
    bef8:	mov    QWORD PTR [rsp+0x18],rax
    befd:	mov    rax,QWORD PTR [rip+0x19f8c]        # 25e90 <p11>
    bf04:	mov    QWORD PTR [rsp+0x10],0x108
    bf0d:	mov    QWORD PTR [rsp+0x20],0x1
    bf16:	call   QWORD PTR [rax+0xc8]
    bf1c:	test   rax,rax
    bf1f:	je     bf2b <getSIGN+0x5b>
    bf21:	mov    edx,DWORD PTR [rip+0x19f51]        # 25e78 <suppress_warn>
    bf27:	test   edx,edx
    bf29:	je     bf48 <getSIGN+0x78>
    bf2b:	mov    rcx,QWORD PTR [rsp+0x28]
    bf30:	xor    rcx,QWORD PTR fs:0x28
    bf39:	movzx  eax,BYTE PTR [rsp+0xf]
    bf3e:	jne    bf59 <getSIGN+0x89>
    bf40:	add    rsp,0x38
    bf44:	ret    
    bf45:	nop    DWORD PTR [rax]
    bf48:	mov    rsi,rax
    bf4b:	lea    rdi,[rip+0xbd60]        # 17cb2 <_IO_stdin_used+0xcb2>
    bf52:	call   b310 <p11_warn.part.0>
    bf57:	jmp    bf2b <getSIGN+0x5b>
    bf59:	call   5690 <__stack_chk_fail@plt>
    bf5e:	xchg   ax,ax

000000000000bf60 <getALWAYS_AUTHENTICATE>:
    bf60:	sub    rsp,0x38
    bf64:	mov    ecx,0x1
    bf69:	mov    rax,QWORD PTR fs:0x28
    bf72:	mov    QWORD PTR [rsp+0x28],rax
    bf77:	xor    eax,eax
    bf79:	lea    rax,[rsp+0xf]
    bf7e:	mov    BYTE PTR [rsp+0xf],0x0
    bf83:	lea    rdx,[rsp+0x10]
    bf88:	mov    QWORD PTR [rsp+0x18],rax
    bf8d:	mov    rax,QWORD PTR [rip+0x19efc]        # 25e90 <p11>
    bf94:	mov    QWORD PTR [rsp+0x10],0x202
    bf9d:	mov    QWORD PTR [rsp+0x20],0x1
    bfa6:	call   QWORD PTR [rax+0xc8]
    bfac:	test   rax,rax
    bfaf:	je     bfbb <getALWAYS_AUTHENTICATE+0x5b>
    bfb1:	mov    edx,DWORD PTR [rip+0x19ec1]        # 25e78 <suppress_warn>
    bfb7:	test   edx,edx
    bfb9:	je     bfd8 <getALWAYS_AUTHENTICATE+0x78>
    bfbb:	mov    rcx,QWORD PTR [rsp+0x28]
    bfc0:	xor    rcx,QWORD PTR fs:0x28
    bfc9:	movzx  eax,BYTE PTR [rsp+0xf]
    bfce:	jne    bfe9 <getALWAYS_AUTHENTICATE+0x89>
    bfd0:	add    rsp,0x38
    bfd4:	ret    
    bfd5:	nop    DWORD PTR [rax]
    bfd8:	mov    rsi,rax
    bfdb:	lea    rdi,[rip+0xeed6]        # 1aeb8 <_IO_stdin_used+0x3eb8>
    bfe2:	call   b310 <p11_warn.part.0>
    bfe7:	jmp    bfbb <getALWAYS_AUTHENTICATE+0x5b>
    bfe9:	call   5690 <__stack_chk_fail@plt>
    bfee:	xchg   ax,ax

000000000000bff0 <getMODIFIABLE>:
    bff0:	sub    rsp,0x38
    bff4:	mov    ecx,0x1
    bff9:	mov    rax,QWORD PTR fs:0x28
    c002:	mov    QWORD PTR [rsp+0x28],rax
    c007:	xor    eax,eax
    c009:	lea    rax,[rsp+0xf]
    c00e:	mov    BYTE PTR [rsp+0xf],0x0
    c013:	lea    rdx,[rsp+0x10]
    c018:	mov    QWORD PTR [rsp+0x18],rax
    c01d:	mov    rax,QWORD PTR [rip+0x19e6c]        # 25e90 <p11>
    c024:	mov    QWORD PTR [rsp+0x10],0x170
    c02d:	mov    QWORD PTR [rsp+0x20],0x1
    c036:	call   QWORD PTR [rax+0xc8]
    c03c:	test   rax,rax
    c03f:	je     c04b <getMODIFIABLE+0x5b>
    c041:	mov    edx,DWORD PTR [rip+0x19e31]        # 25e78 <suppress_warn>
    c047:	test   edx,edx
    c049:	je     c068 <getMODIFIABLE+0x78>
    c04b:	mov    rcx,QWORD PTR [rsp+0x28]
    c050:	xor    rcx,QWORD PTR fs:0x28
    c059:	movzx  eax,BYTE PTR [rsp+0xf]
    c05e:	jne    c079 <getMODIFIABLE+0x89>
    c060:	add    rsp,0x38
    c064:	ret    
    c065:	nop    DWORD PTR [rax]
    c068:	mov    rsi,rax
    c06b:	lea    rdi,[rip+0xee76]        # 1aee8 <_IO_stdin_used+0x3ee8>
    c072:	call   b310 <p11_warn.part.0>
    c077:	jmp    c04b <getMODIFIABLE+0x5b>
    c079:	call   5690 <__stack_chk_fail@plt>
    c07e:	xchg   ax,ax

000000000000c080 <getPRIVATE>:
    c080:	sub    rsp,0x38
    c084:	mov    ecx,0x1
    c089:	mov    rax,QWORD PTR fs:0x28
    c092:	mov    QWORD PTR [rsp+0x28],rax
    c097:	xor    eax,eax
    c099:	lea    rax,[rsp+0xf]
    c09e:	mov    BYTE PTR [rsp+0xf],0x0
    c0a3:	lea    rdx,[rsp+0x10]
    c0a8:	mov    QWORD PTR [rsp+0x18],rax
    c0ad:	mov    rax,QWORD PTR [rip+0x19ddc]        # 25e90 <p11>
    c0b4:	mov    QWORD PTR [rsp+0x10],0x2
    c0bd:	mov    QWORD PTR [rsp+0x20],0x1
    c0c6:	call   QWORD PTR [rax+0xc8]
    c0cc:	test   rax,rax
    c0cf:	je     c0db <getPRIVATE+0x5b>
    c0d1:	mov    edx,DWORD PTR [rip+0x19da1]        # 25e78 <suppress_warn>
    c0d7:	test   edx,edx
    c0d9:	je     c0f8 <getPRIVATE+0x78>
    c0db:	mov    rcx,QWORD PTR [rsp+0x28]
    c0e0:	xor    rcx,QWORD PTR fs:0x28
    c0e9:	movzx  eax,BYTE PTR [rsp+0xf]
    c0ee:	jne    c109 <getPRIVATE+0x89>
    c0f0:	add    rsp,0x38
    c0f4:	ret    
    c0f5:	nop    DWORD PTR [rax]
    c0f8:	mov    rsi,rax
    c0fb:	lea    rdi,[rip+0xbbca]        # 17ccc <_IO_stdin_used+0xccc>
    c102:	call   b310 <p11_warn.part.0>
    c107:	jmp    c0db <getPRIVATE+0x5b>
    c109:	call   5690 <__stack_chk_fail@plt>
    c10e:	xchg   ax,ax

000000000000c110 <get_private_key_length>:
    c110:	push   r12
    c112:	mov    r12,rdi
    c115:	push   rbp
    c116:	sub    rsp,0x28
    c11a:	mov    rax,QWORD PTR fs:0x28
    c123:	mov    QWORD PTR [rsp+0x18],rax
    c128:	xor    eax,eax
    c12a:	lea    rdx,[rsp+0x8]
    c12f:	call   bd10 <getID>
    c134:	test   rax,rax
    c137:	je     c1c0 <get_private_key_length+0xb0>
    c13d:	mov    r8,QWORD PTR [rsp+0x8]
    c142:	mov    rdi,r12
    c145:	lea    rdx,[rsp+0x10]
    c14a:	xor    r9d,r9d
    c14d:	mov    rcx,rax
    c150:	mov    esi,0x2
    c155:	mov    rbp,rax
    c158:	call   b100 <find_object>
    c15d:	mov    rdi,rbp
    c160:	test   eax,eax
    c162:	je     c190 <get_private_key_length+0x80>
    c164:	call   5590 <free@plt>
    c169:	mov    rsi,QWORD PTR [rsp+0x10]
    c16e:	mov    rdi,r12
    c171:	call   b480 <getMODULUS_BITS>
    c176:	mov    rcx,QWORD PTR [rsp+0x18]
    c17b:	xor    rcx,QWORD PTR fs:0x28
    c184:	jne    c1e1 <get_private_key_length+0xd1>
    c186:	add    rsp,0x28
    c18a:	pop    rbp
    c18b:	pop    r12
    c18d:	ret    
    c18e:	xchg   ax,ax
    c190:	call   5590 <free@plt>
    c195:	mov    edx,0x27
    c19a:	mov    rcx,QWORD PTR [rip+0x1943f]        # 255e0 <stderr@@GLIBC_2.2.5>
    c1a1:	mov    esi,0x1
    c1a6:	lea    rdi,[rip+0xed9b]        # 1af48 <_IO_stdin_used+0x3f48>
    c1ad:	call   59a0 <fwrite@plt>
    c1b2:	xor    eax,eax
    c1b4:	jmp    c176 <get_private_key_length+0x66>
    c1b6:	cs nop WORD PTR [rax+rax*1+0x0]
    c1c0:	mov    rcx,QWORD PTR [rip+0x19419]        # 255e0 <stderr@@GLIBC_2.2.5>
    c1c7:	mov    edx,0x3d
    c1cc:	mov    esi,0x1
    c1d1:	lea    rdi,[rip+0xed30]        # 1af08 <_IO_stdin_used+0x3f08>
    c1d8:	call   59a0 <fwrite@plt>
    c1dd:	xor    eax,eax
    c1df:	jmp    c176 <get_private_key_length+0x66>
    c1e1:	call   5690 <__stack_chk_fail@plt>
    c1e6:	cs nop WORD PTR [rax+rax*1+0x0]

000000000000c1f0 <sign_verify_openssl.isra.0>:
    c1f0:	push   r15
    c1f2:	mov    r15,rdx
    c1f5:	push   r14
    c1f7:	mov    r14,rsi
    c1fa:	push   r13
    c1fc:	mov    r13,r8
    c1ff:	push   r12
    c201:	mov    r12,rcx
    c204:	push   rbp
    c205:	mov    rbp,rdi
    c208:	push   rbx
    c209:	mov    rbx,r9
    c20c:	sub    rsp,0x428
    c213:	mov    rax,QWORD PTR fs:0x28
    c21c:	mov    QWORD PTR [rsp+0x418],rax
    c224:	xor    eax,eax
    c226:	mov    rax,QWORD PTR [rip+0x19c63]        # 25e90 <p11>
    c22d:	call   QWORD PTR [rax+0x158]
    c233:	cmp    rax,0x70
    c237:	je     c378 <sign_verify_openssl.isra.0+0x188>
    c23d:	test   rax,rax
    c240:	jne    c391 <sign_verify_openssl.isra.0+0x1a1>
    c246:	mov    rsi,r15
    c249:	mov    rdi,rbp
    c24c:	call   bf60 <getALWAYS_AUTHENTICATE>
    c251:	test   al,al
    c253:	jne    c360 <sign_verify_openssl.isra.0+0x170>
    c259:	mov    r10,QWORD PTR [rip+0x17188]        # 233e8 <p11_mechanisms+0x8>
    c260:	mov    rdi,QWORD PTR [r14]
    c263:	test   r10,r10
    c266:	je     c350 <sign_verify_openssl.isra.0+0x160>
    c26c:	lea    rdx,[rip+0x1716d]        # 233e0 <p11_mechanisms>
    c273:	jmp    c289 <sign_verify_openssl.isra.0+0x99>
    c275:	nop    DWORD PTR [rax]
    c278:	mov    r10,QWORD PTR [rdx+0x28]
    c27c:	add    rdx,0x20
    c280:	test   r10,r10
    c283:	je     c350 <sign_verify_openssl.isra.0+0x160>
    c289:	cmp    rdi,QWORD PTR [rdx]
    c28c:	jne    c278 <sign_verify_openssl.isra.0+0x88>
    c28e:	mov    rdx,r10
    c291:	lea    rsi,[rip+0xba5c]        # 17cf4 <_IO_stdin_used+0xcf4>
    c298:	mov    edi,0x1
    c29d:	xor    eax,eax
    c29f:	call   58a0 <__printf_chk@plt>
    c2a4:	lea    rcx,[rsp+0x10]
    c2a9:	mov    rdx,r13
    c2ac:	mov    rsi,r12
    c2af:	mov    rax,QWORD PTR [rip+0x19bda]        # 25e90 <p11>
    c2b6:	lea    r8,[rsp+0x8]
    c2bb:	mov    rdi,rbp
    c2be:	mov    QWORD PTR [rsp+0x8],0x400
    c2c7:	call   QWORD PTR [rax+0x160]
    c2cd:	test   rax,rax
    c2d0:	jne    c382 <sign_verify_openssl.isra.0+0x192>
    c2d6:	mov    rdx,QWORD PTR [rsp+0x8]
    c2db:	xor    r12d,r12d
    c2de:	cmp    rdx,rbx
    c2e1:	jne    c330 <sign_verify_openssl.isra.0+0x140>
    c2e3:	mov    rcx,QWORD PTR [rip+0x192f6]        # 255e0 <stderr@@GLIBC_2.2.5>
    c2ea:	mov    edx,0x39
    c2ef:	mov    esi,0x1
    c2f4:	lea    rdi,[rip+0xecad]        # 1afa8 <_IO_stdin_used+0x3fa8>
    c2fb:	call   59a0 <fwrite@plt>
    c300:	mov    rax,QWORD PTR [rsp+0x418]
    c308:	xor    rax,QWORD PTR fs:0x28
    c311:	jne    c37d <sign_verify_openssl.isra.0+0x18d>
    c313:	add    rsp,0x428
    c31a:	mov    eax,r12d
    c31d:	pop    rbx
    c31e:	pop    rbp
    c31f:	pop    r12
    c321:	pop    r13
    c323:	pop    r14
    c325:	pop    r15
    c327:	ret    
    c328:	nop    DWORD PTR [rax+rax*1+0x0]
    c330:	mov    ecx,ebx
    c332:	lea    rsi,[rip+0xec37]        # 1af70 <_IO_stdin_used+0x3f70>
    c339:	mov    edi,0x1
    c33e:	xor    eax,eax
    c340:	call   58a0 <__printf_chk@plt>
    c345:	mov    r12d,0x1
    c34b:	jmp    c2e3 <sign_verify_openssl.isra.0+0xf3>
    c34d:	nop    DWORD PTR [rax]
    c350:	call   a3c0 <p11_mechanism_to_name.part.0>
    c355:	mov    r10,rax
    c358:	jmp    c28e <sign_verify_openssl.isra.0+0x9e>
    c35d:	nop    DWORD PTR [rax]
    c360:	mov    esi,0x2
    c365:	mov    rdi,rbp
    c368:	call   9820 <login>
    c36d:	jmp    c259 <sign_verify_openssl.isra.0+0x69>
    c372:	nop    WORD PTR [rax+rax*1+0x0]
    c378:	xor    r12d,r12d
    c37b:	jmp    c300 <sign_verify_openssl.isra.0+0x110>
    c37d:	call   5690 <__stack_chk_fail@plt>
    c382:	mov    rsi,rax
    c385:	lea    rdi,[rip+0xb769]        # 17af5 <_IO_stdin_used+0xaf5>
    c38c:	call   9140 <p11_fatal>
    c391:	mov    rsi,rax
    c394:	lea    rdi,[rip+0xb94e]        # 17ce9 <_IO_stdin_used+0xce9>
    c39b:	call   9140 <p11_fatal>

000000000000c3a0 <sign_verify>:
    c3a0:	push   r15
    c3a2:	pxor   xmm0,xmm0
    c3a6:	push   r14
    c3a8:	mov    r14d,0x3
    c3ae:	push   r13
    c3b0:	push   r12
    c3b2:	mov    r12,rsi
    c3b5:	lea    rsi,[rip+0x122cc]        # 1e688 <_IO_stdin_used+0x7688>
    c3bc:	push   rbp
    c3bd:	mov    rbp,rdi
    c3c0:	push   rbx
    c3c1:	xor    ebx,ebx
    c3c3:	sub    rsp,0x4e8
    c3ca:	mov    QWORD PTR [rsp+0x10],rcx
    c3cf:	mov    ecx,0x3e
    c3d4:	lea    r13,[rsp+0x30]
    c3d9:	lea    rdi,[rsp+0xe0]
    c3e1:	mov    DWORD PTR [rsp+0x1c],r8d
    c3e6:	mov    rax,QWORD PTR fs:0x28
    c3ef:	mov    QWORD PTR [rsp+0x4d8],rax
    c3f7:	xor    eax,eax
    c3f9:	movaps XMMWORD PTR [rsp+0xd0],xmm0
    c401:	mov    QWORD PTR [rsp+0xa0],0x3
    c40d:	mov    QWORD PTR [rsp+0xa8],0x1
    c419:	mov    QWORD PTR [rsp+0xb0],0x6
    c425:	mov    QWORD PTR [rsp+0xb8],0x5
    c431:	mov    QWORD PTR [rsp+0xc0],0x8
    c43d:	rep stos QWORD PTR es:[rdi],rax
    c440:	lea    rax,[rsp+0xd0]
    c448:	mov    QWORD PTR [rsp+0x78],rsi
    c44d:	mov    QWORD PTR [rsp+0x70],rax
    c452:	mov    QWORD PTR [rsp+0x80],rax
    c45a:	mov    QWORD PTR [rsp+0x88],rax
    c462:	mov    QWORD PTR [rsp+0x90],rax
    c46a:	movabs rax,0xea00000023
    c474:	mov    QWORD PTR [rsp+0x54],rax
    c479:	movabs rax,0x1c800000159
    c483:	mov    QWORD PTR [rsp+0x5c],rax
    c488:	mov    rax,QWORD PTR [rip+0x1221d]        # 1e6ac <_IO_stdin_used+0x76ac>
    c48f:	mov    QWORD PTR [rsp+0xc8],0xffffff
    c49b:	mov    QWORD PTR [rsp+0xd0],rax
    c4a3:	movzx  eax,WORD PTR [rip+0x1220a]        # 1e6b4 <_IO_stdin_used+0x76b4>
    c4aa:	mov    DWORD PTR [rsp+0x50],edx
    c4ae:	mov    WORD PTR [rsp+0xd8],ax
    c4b6:	movzx  eax,BYTE PTR [rip+0x121f9]        # 1e6b6 <_IO_stdin_used+0x76b6>
    c4bd:	mov    BYTE PTR [rsp+0xda],al
    c4c4:	lea    rax,[rsp+0x28]
    c4c9:	mov    QWORD PTR [rsp+0x8],rax
    c4ce:	xchg   ax,ax
    c4d0:	mov    rax,QWORD PTR [rip+0x199b9]        # 25e90 <p11>
    c4d7:	mov    rdx,r12
    c4da:	mov    rsi,r13
    c4dd:	mov    rdi,rbp
    c4e0:	mov    QWORD PTR [rsp+0x30],r14
    c4e5:	mov    QWORD PTR [rsp+0x38],0x0
    c4ee:	mov    QWORD PTR [rsp+0x40],0x0
    c4f7:	call   QWORD PTR [rax+0x158]
    c4fd:	cmp    rax,0x70
    c501:	je     c61c <sign_verify+0x27c>
    c507:	test   rax,rax
    c50a:	jne    c6dc <sign_verify+0x33c>
    c510:	mov    rsi,r12
    c513:	mov    rdi,rbp
    c516:	call   bf60 <getALWAYS_AUTHENTICATE>
    c51b:	test   al,al
    c51d:	jne    c650 <sign_verify+0x2b0>
    c523:	mov    r8,QWORD PTR [rip+0x16ebe]        # 233e8 <p11_mechanisms+0x8>
    c52a:	test   r8,r8
    c52d:	je     c640 <sign_verify+0x2a0>
    c533:	lea    rdx,[rip+0x16ea6]        # 233e0 <p11_mechanisms>
    c53a:	jmp    c551 <sign_verify+0x1b1>
    c53c:	nop    DWORD PTR [rax+0x0]
    c540:	mov    r8,QWORD PTR [rdx+0x28]
    c544:	add    rdx,0x20
    c548:	test   r8,r8
    c54b:	je     c640 <sign_verify+0x2a0>
    c551:	cmp    QWORD PTR [rdx],r14
    c554:	jne    c540 <sign_verify+0x1a0>
    c556:	mov    rdx,r8
    c559:	lea    rsi,[rip+0xb794]        # 17cf4 <_IO_stdin_used+0xcf4>
    c560:	mov    edi,0x1
    c565:	xor    eax,eax
    c567:	call   58a0 <__printf_chk@plt>
    c56c:	movsxd r15,DWORD PTR [rsp+rbx*4+0x50]
    c571:	mov    rdi,rbp
    c574:	mov    r14,QWORD PTR [rsp+rbx*8+0x70]
    c579:	mov    rax,QWORD PTR [rip+0x19910]        # 25e90 <p11>
    c580:	lea    rcx,[rsp+0x2d0]
    c588:	mov    r8,QWORD PTR [rsp+0x8]
    c58d:	mov    QWORD PTR [rsp+0x28],0x200
    c596:	mov    QWORD PTR [rsp],rcx
    c59a:	mov    rdx,r15
    c59d:	mov    rsi,r14
    c5a0:	call   QWORD PTR [rax+0x160]
    c5a6:	mov    rcx,QWORD PTR [rsp]
    c5aa:	test   rax,rax
    c5ad:	jne    c705 <sign_verify+0x365>
    c5b3:	mov    QWORD PTR [rsp],rcx
    c5b7:	mov    rdx,QWORD PTR [rsp+0x10]
    c5bc:	mov    rsi,r13
    c5bf:	mov    rdi,rbp
    c5c2:	mov    rax,QWORD PTR [rip+0x198c7]        # 25e90 <p11>
    c5c9:	call   QWORD PTR [rax+0x188]
    c5cf:	mov    rcx,QWORD PTR [rsp]
    c5d3:	test   rax,rax
    c5d6:	jne    c72e <sign_verify+0x38e>
    c5dc:	mov    rax,QWORD PTR [rip+0x198ad]        # 25e90 <p11>
    c5e3:	mov    rdx,r15
    c5e6:	mov    rsi,r14
    c5e9:	mov    rdi,rbp
    c5ec:	mov    r8,QWORD PTR [rsp+0x28]
    c5f1:	call   QWORD PTR [rax+0x190]
    c5f7:	cmp    rax,0xc0
    c5fd:	je     c668 <sign_verify+0x2c8>
    c5ff:	test   rax,rax
    c602:	jne    c75f <sign_verify+0x3bf>
    c608:	lea    rdi,[rip+0xbfd3]        # 185e2 <_IO_stdin_used+0x15e2>
    c60f:	call   5600 <puts@plt>
    c614:	mov    eax,DWORD PTR [rsp+0x1c]
    c618:	test   eax,eax
    c61a:	jne    c635 <sign_verify+0x295>
    c61c:	add    rbx,0x1
    c620:	mov    r14,QWORD PTR [rsp+rbx*8+0xa0]
    c628:	cmp    r14,0xffffff
    c62f:	jne    c4d0 <sign_verify+0x130>
    c635:	xor    r12d,r12d
    c638:	jmp    c6b0 <sign_verify+0x310>
    c63a:	nop    WORD PTR [rax+rax*1+0x0]
    c640:	mov    rdi,r14
    c643:	call   a3c0 <p11_mechanism_to_name.part.0>
    c648:	mov    r8,rax
    c64b:	jmp    c556 <sign_verify+0x1b6>
    c650:	mov    esi,0x2
    c655:	mov    rdi,rbp
    c658:	call   9820 <login>
    c65d:	jmp    c523 <sign_verify+0x183>
    c662:	nop    WORD PTR [rax+rax*1+0x0]
    c668:	mov    QWORD PTR [rsp],rax
    c66c:	lea    rsi,[rip+0xb68a]        # 17cfd <_IO_stdin_used+0xcfd>
    c673:	xor    eax,eax
    c675:	mov    edi,0x1
    c67a:	call   58a0 <__printf_chk@plt>
    c67f:	mov    rcx,QWORD PTR [rsp]
    c683:	mov    r12d,0x2
    c689:	mov    rdi,rcx
    c68c:	mov    QWORD PTR [rsp],rcx
    c690:	call   8e50 <CKR2Str>
    c695:	mov    rcx,QWORD PTR [rsp]
    c699:	mov    edi,0x1
    c69e:	lea    rsi,[rip+0xe9cb]        # 1b070 <_IO_stdin_used+0x4070>
    c6a5:	mov    rdx,rax
    c6a8:	xor    eax,eax
    c6aa:	call   58a0 <__printf_chk@plt>
    c6af:	nop
    c6b0:	mov    rax,QWORD PTR [rsp+0x4d8]
    c6b8:	xor    rax,QWORD PTR fs:0x28
    c6c1:	jne    c75a <sign_verify+0x3ba>
    c6c7:	add    rsp,0x4e8
    c6ce:	mov    eax,r12d
    c6d1:	pop    rbx
    c6d2:	pop    rbp
    c6d3:	pop    r12
    c6d5:	pop    r13
    c6d7:	pop    r14
    c6d9:	pop    r15
    c6db:	ret    
    c6dc:	mov    rdi,rax
    c6df:	mov    rcx,rax
    c6e2:	mov    r12d,0x1
    c6e8:	call   8e50 <CKR2Str>
    c6ed:	lea    rsi,[rip+0xe8f4]        # 1afe8 <_IO_stdin_used+0x3fe8>
    c6f4:	mov    edi,0x1
    c6f9:	mov    rdx,rax
    c6fc:	xor    eax,eax
    c6fe:	call   58a0 <__printf_chk@plt>
    c703:	jmp    c6b0 <sign_verify+0x310>
    c705:	mov    rdi,rax
    c708:	mov    rcx,rax
    c70b:	mov    r12d,0x1
    c711:	call   8e50 <CKR2Str>
    c716:	lea    rsi,[rip+0xe8fb]        # 1b018 <_IO_stdin_used+0x4018>
    c71d:	mov    edi,0x1
    c722:	mov    rdx,rax
    c725:	xor    eax,eax
    c727:	call   58a0 <__printf_chk@plt>
    c72c:	jmp    c6b0 <sign_verify+0x310>
    c72e:	mov    rdi,rax
    c731:	mov    rcx,rax
    c734:	mov    r12d,0x1
    c73a:	call   8e50 <CKR2Str>
    c73f:	lea    rsi,[rip+0xe8fa]        # 1b040 <_IO_stdin_used+0x4040>
    c746:	mov    edi,0x1
    c74b:	mov    rdx,rax
    c74e:	xor    eax,eax
    c750:	call   58a0 <__printf_chk@plt>
    c755:	jmp    c6b0 <sign_verify+0x310>
    c75a:	call   5690 <__stack_chk_fail@plt>
    c75f:	mov    rcx,rax
    c762:	mov    r12d,0x1
    c768:	jmp    c689 <sign_verify+0x2e9>
    c76d:	nop    DWORD PTR [rax]

000000000000c770 <find_object_flags.constprop.0>:
    c770:	sub    rsp,0x418
    c777:	mov    r10,rdi
    c77a:	pxor   xmm0,xmm0
    c77e:	mov    r11,rcx
    c781:	mov    rax,QWORD PTR fs:0x28
    c78a:	mov    QWORD PTR [rsp+0x408],rax
    c792:	xor    eax,eax
    c794:	lea    rdi,[rsp+0x10]
    c799:	mov    ecx,0x7e
    c79e:	and    esi,0x10
    c7a1:	movaps XMMWORD PTR [rsp],xmm0
    c7a5:	rep stos QWORD PTR es:[rdi],rax
    c7a8:	je     c7dc <find_object_flags.constprop.0+0x6c>
    c7aa:	xor    r9d,r9d
    c7ad:	mov    rcx,r11
    c7b0:	mov    esi,0x4
    c7b5:	mov    rdi,r10
    c7b8:	call   b100 <find_object>
    c7bd:	test   eax,eax
    c7bf:	je     c7f5 <find_object_flags.constprop.0+0x85>
    c7c1:	mov    rsi,QWORD PTR [rsp+0x408]
    c7c9:	xor    rsi,QWORD PTR fs:0x28
    c7d2:	jne    c7f0 <find_object_flags.constprop.0+0x80>
    c7d4:	add    rsp,0x418
    c7db:	ret    
    c7dc:	mov    r8,rsp
    c7df:	mov    rsi,r8
    c7e2:	lea    rdi,[rip+0xe8af]        # 1b098 <_IO_stdin_used+0x4098>
    c7e9:	xor    eax,eax
    c7eb:	call   15f90 <util_fatal>
    c7f0:	call   5690 <__stack_chk_fail@plt>
    c7f5:	mov    r8,rsp
    c7f8:	mov    edx,0x400
    c7fd:	lea    rsi,[rip+0xb514]        # 17d18 <_IO_stdin_used+0xd18>
    c804:	mov    rdi,r8
    c807:	call   5560 <__strcat_chk@plt>
    c80c:	mov    r8,rax
    c80f:	jmp    c7df <find_object_flags.constprop.0+0x6f>
    c811:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    c81c:	nop    DWORD PTR [rax+0x0]

000000000000c820 <get_iv.constprop.0>:
    c820:	push   r12
    c822:	push   rbp
    c823:	push   rbx
    c824:	mov    rbx,rsi
    c827:	sub    rsp,0x10
    c82b:	mov    rax,QWORD PTR fs:0x28
    c834:	mov    QWORD PTR [rsp+0x8],rax
    c839:	xor    eax,eax
    c83b:	mov    QWORD PTR [rsp],0x10
    c843:	test   rdi,rdi
    c846:	je     c8bc <get_iv.constprop.0+0x9c>
    c848:	mov    rbp,rdi
    c84b:	mov    esi,0x10
    c850:	mov    edi,0x1
    c855:	call   5790 <calloc@plt>
    c85a:	mov    r12,rax
    c85d:	test   rax,rax
    c860:	je     c8fe <get_iv.constprop.0+0xde>
    c866:	mov    rdx,rsp
    c869:	mov    rsi,rax
    c86c:	mov    rdi,rbp
    c86f:	call   5620 <sc_hex_to_bin@plt>
    c874:	test   eax,eax
    c876:	jne    c8c8 <get_iv.constprop.0+0xa8>
    c878:	mov    rax,QWORD PTR [rsp]
    c87c:	cmp    QWORD PTR [rbx],rax
    c87f:	jne    c89d <get_iv.constprop.0+0x7d>
    c881:	mov    rax,QWORD PTR [rsp+0x8]
    c886:	xor    rax,QWORD PTR fs:0x28
    c88f:	jne    c8f9 <get_iv.constprop.0+0xd9>
    c891:	add    rsp,0x10
    c895:	mov    rax,r12
    c898:	pop    rbx
    c899:	pop    rbp
    c89a:	pop    r12
    c89c:	ret    
    c89d:	mov    rcx,QWORD PTR [rip+0x18d3c]        # 255e0 <stderr@@GLIBC_2.2.5>
    c8a4:	mov    edx,0x4c
    c8a9:	mov    esi,0x1
    c8ae:	lea    rdi,[rip+0xe86b]        # 1b120 <_IO_stdin_used+0x4120>
    c8b5:	call   59a0 <fwrite@plt>
    c8ba:	jmp    c881 <get_iv.constprop.0+0x61>
    c8bc:	mov    QWORD PTR [rsi],0x0
    c8c3:	xor    r12d,r12d
    c8c6:	jmp    c881 <get_iv.constprop.0+0x61>
    c8c8:	mov    rcx,QWORD PTR [rip+0x18d11]        # 255e0 <stderr@@GLIBC_2.2.5>
    c8cf:	mov    edx,0x32
    c8d4:	mov    esi,0x1
    c8d9:	lea    rdi,[rip+0xe808]        # 1b0e8 <_IO_stdin_used+0x40e8>
    c8e0:	call   59a0 <fwrite@plt>
    c8e5:	mov    QWORD PTR [rbx],0x0
    c8ec:	mov    rdi,r12
    c8ef:	xor    r12d,r12d
    c8f2:	call   5590 <free@plt>
    c8f7:	jmp    c881 <get_iv.constprop.0+0x61>
    c8f9:	call   5690 <__stack_chk_fail@plt>
    c8fe:	mov    rcx,QWORD PTR [rip+0x18cdb]        # 255e0 <stderr@@GLIBC_2.2.5>
    c905:	mov    edx,0x2d
    c90a:	mov    esi,0x1
    c90f:	lea    rdi,[rip+0xe7a2]        # 1b0b8 <_IO_stdin_used+0x40b8>
    c916:	call   59a0 <fwrite@plt>
    c91b:	mov    QWORD PTR [rbx],0x0
    c922:	jmp    c881 <get_iv.constprop.0+0x61>
    c927:	nop    WORD PTR [rax+rax*1+0x0]

000000000000c930 <encrypt_data>:
    c930:	push   r15
    c932:	mov    r15,rdx
    c935:	push   r14
    c937:	push   r13
    c939:	push   r12
    c93b:	mov    r12,rsi
    c93e:	push   rbp
    c93f:	push   rbx
    c940:	sub    rsp,0x868
    c947:	mov    rax,QWORD PTR fs:0x28
    c950:	mov    QWORD PTR [rsp+0x858],rax
    c958:	xor    eax,eax
    c95a:	mov    eax,DWORD PTR [rip+0x197b8]        # 26118 <opt_mechanism_used>
    c960:	mov    QWORD PTR [rsp+0x28],0x0
    c969:	test   eax,eax
    c96b:	je     ccea <encrypt_data+0x3ba>
    c971:	mov    rcx,QWORD PTR [rip+0x16a70]        # 233e8 <p11_mechanisms+0x8>
    c978:	mov    rdi,QWORD PTR [rip+0x197a1]        # 26120 <opt_mechanism>
    c97f:	test   rcx,rcx
    c982:	je     cbdf <encrypt_data+0x2af>
    c988:	lea    rdx,[rip+0x16a51]        # 233e0 <p11_mechanisms>
    c98f:	jmp    c9a9 <encrypt_data+0x79>
    c991:	nop    DWORD PTR [rax+0x0]
    c998:	mov    rcx,QWORD PTR [rdx+0x28]
    c99c:	add    rdx,0x20
    c9a0:	test   rcx,rcx
    c9a3:	je     cbdf <encrypt_data+0x2af>
    c9a9:	cmp    rdi,QWORD PTR [rdx]
    c9ac:	jne    c998 <encrypt_data+0x68>
    c9ae:	mov    rdi,QWORD PTR [rip+0x18c2b]        # 255e0 <stderr@@GLIBC_2.2.5>
    c9b5:	lea    rdx,[rip+0xb363]        # 17d1f <_IO_stdin_used+0xd1f>
    c9bc:	mov    esi,0x1
    c9c1:	xor    eax,eax
    c9c3:	call   59b0 <__fprintf_chk@plt>
    c9c8:	mov    rdi,QWORD PTR [rip+0x19751]        # 26120 <opt_mechanism>
    c9cf:	pxor   xmm0,xmm0
    c9d3:	movups XMMWORD PTR [rsp+0x38],xmm0
    c9d8:	mov    QWORD PTR [rsp+0x30],rdi
    c9dd:	cmp    rdi,0x1082
    c9e4:	je     cc8c <encrypt_data+0x35c>
    c9ea:	cmp    rdi,0x1085
    c9f1:	je     cc8c <encrypt_data+0x35c>
    c9f7:	cmp    rdi,0x1081
    c9fe:	jne    ccc7 <encrypt_data+0x397>
    ca04:	mov    QWORD PTR [rsp+0x38],0x0
    ca0d:	mov    QWORD PTR [rsp+0x40],0x0
    ca16:	mov    QWORD PTR [rsp+0x8],0x0
    ca1f:	mov    rdi,QWORD PTR [rip+0x19752]        # 26178 <opt_input>
    ca26:	test   rdi,rdi
    ca29:	je     ccbf <encrypt_data+0x38f>
    ca2f:	xor    esi,esi
    ca31:	xor    eax,eax
    ca33:	call   58f0 <open@plt>
    ca38:	mov    r13d,eax
    ca3b:	test   eax,eax
    ca3d:	js     cdc5 <encrypt_data+0x495>
    ca43:	mov    rdi,QWORD PTR [rip+0x19726]        # 26170 <opt_output>
    ca4a:	test   rdi,rdi
    ca4d:	je     cd53 <encrypt_data+0x423>
    ca53:	mov    edx,0x180
    ca58:	mov    esi,0x241
    ca5d:	xor    eax,eax
    ca5f:	call   58f0 <open@plt>
    ca64:	mov    r14d,eax
    ca67:	test   eax,eax
    ca69:	js     cdef <encrypt_data+0x4bf>
    ca6f:	lea    rbx,[rsp+0x50]
    ca74:	mov    edx,0x400
    ca79:	mov    edi,r13d
    ca7c:	mov    rsi,rbx
    ca7f:	call   5740 <read@plt>
    ca84:	movsxd r9,eax
    ca87:	test   eax,eax
    ca89:	js     cdda <encrypt_data+0x4aa>
    ca8f:	cmp    eax,0x3ff
    ca94:	jle    cbec <encrypt_data+0x2bc>
    ca9a:	lea    rax,[rsp+0x30]
    ca9f:	mov    QWORD PTR [rsp+0x10],rax
    caa4:	mov    QWORD PTR [rsp+0x18],r9
    caa9:	mov    rsi,QWORD PTR [rsp+0x10]
    caae:	mov    rdx,r15
    cab1:	mov    rdi,r12
    cab4:	mov    rax,QWORD PTR [rip+0x193d5]        # 25e90 <p11>
    cabb:	call   QWORD PTR [rax+0xf0]
    cac1:	mov    r9,QWORD PTR [rsp+0x18]
    cac6:	test   rax,rax
    cac9:	jne    ce04 <encrypt_data+0x4d4>
    cacf:	mov    rsi,r15
    cad2:	mov    rdi,r12
    cad5:	mov    QWORD PTR [rsp+0x10],r9
    cada:	call   bf60 <getALWAYS_AUTHENTICATE>
    cadf:	mov    r9,QWORD PTR [rsp+0x10]
    cae4:	test   al,al
    cae6:	jne    cd5e <encrypt_data+0x42e>
    caec:	lea    r15,[rsp+0x20]
    caf1:	lea    rbp,[rsp+0x450]
    caf9:	nop    DWORD PTR [rax+0x0]
    cb00:	mov    rax,QWORD PTR [rip+0x19389]        # 25e90 <p11>
    cb07:	mov    r8,r15
    cb0a:	mov    rcx,rbp
    cb0d:	mov    rdx,r9
    cb10:	mov    QWORD PTR [rsp+0x20],0x400
    cb19:	mov    rsi,rbx
    cb1c:	mov    rdi,r12
    cb1f:	call   QWORD PTR [rax+0x100]
    cb25:	test   rax,rax
    cb28:	jne    cd8c <encrypt_data+0x45c>
    cb2e:	mov    rdx,QWORD PTR [rsp+0x20]
    cb33:	mov    rsi,rbp
    cb36:	mov    edi,r14d
    cb39:	call   5650 <write@plt>
    cb3e:	cmp    DWORD PTR [rsp+0x20],eax
    cb42:	jne    cd3e <encrypt_data+0x40e>
    cb48:	mov    edx,0x400
    cb4d:	mov    rsi,rbx
    cb50:	mov    edi,r13d
    cb53:	call   5740 <read@plt>
    cb58:	movsxd r9,eax
    cb5b:	test   eax,eax
    cb5d:	jg     cb00 <encrypt_data+0x1d0>
    cb5f:	mov    rax,QWORD PTR [rip+0x1932a]        # 25e90 <p11>
    cb66:	mov    rdx,r15
    cb69:	mov    rsi,rbp
    cb6c:	mov    rdi,r12
    cb6f:	mov    QWORD PTR [rsp+0x20],0x400
    cb78:	call   QWORD PTR [rax+0x108]
    cb7e:	test   rax,rax
    cb81:	jne    cdb1 <encrypt_data+0x481>
    cb87:	mov    rdx,QWORD PTR [rsp+0x20]
    cb8c:	test   rdx,rdx
    cb8f:	jne    cd29 <encrypt_data+0x3f9>
    cb95:	test   r13d,r13d
    cb98:	jne    cd1c <encrypt_data+0x3ec>
    cb9e:	cmp    r14d,0x1
    cba2:	je     cbac <encrypt_data+0x27c>
    cba4:	mov    edi,r14d
    cba7:	call   5700 <close@plt>
    cbac:	mov    rdi,QWORD PTR [rsp+0x8]
    cbb1:	call   5590 <free@plt>
    cbb6:	mov    rax,QWORD PTR [rsp+0x858]
    cbbe:	xor    rax,QWORD PTR fs:0x28
    cbc7:	jne    cdc0 <encrypt_data+0x490>
    cbcd:	add    rsp,0x868
    cbd4:	pop    rbx
    cbd5:	pop    rbp
    cbd6:	pop    r12
    cbd8:	pop    r13
    cbda:	pop    r14
    cbdc:	pop    r15
    cbde:	ret    
    cbdf:	call   a3c0 <p11_mechanism_to_name.part.0>
    cbe4:	mov    rcx,rax
    cbe7:	jmp    c9ae <encrypt_data+0x7e>
    cbec:	lea    rax,[rsp+0x30]
    cbf1:	mov    QWORD PTR [rsp+0x18],r9
    cbf6:	mov    rdx,r15
    cbf9:	mov    rdi,r12
    cbfc:	mov    QWORD PTR [rsp+0x10],rax
    cc01:	mov    rsi,rax
    cc04:	mov    rax,QWORD PTR [rip+0x19285]        # 25e90 <p11>
    cc0b:	mov    QWORD PTR [rsp+0x20],0x400
    cc14:	call   QWORD PTR [rax+0xf0]
    cc1a:	mov    r9,QWORD PTR [rsp+0x18]
    cc1f:	test   rax,rax
    cc22:	jne    ce04 <encrypt_data+0x4d4>
    cc28:	mov    rsi,r15
    cc2b:	mov    rdi,r12
    cc2e:	mov    QWORD PTR [rsp+0x18],r9
    cc33:	call   bf60 <getALWAYS_AUTHENTICATE>
    cc38:	mov    r9,QWORD PTR [rsp+0x18]
    cc3d:	test   al,al
    cc3f:	jne    cd75 <encrypt_data+0x445>
    cc45:	mov    rax,QWORD PTR [rip+0x19244]        # 25e90 <p11>
    cc4c:	mov    rdx,r9
    cc4f:	mov    rsi,rbx
    cc52:	mov    rdi,r12
    cc55:	lea    rbp,[rsp+0x450]
    cc5d:	mov    QWORD PTR [rsp+0x18],r9
    cc62:	lea    r8,[rsp+0x20]
    cc67:	mov    QWORD PTR [rsp+0x20],0x400
    cc70:	mov    rcx,rbp
    cc73:	call   QWORD PTR [rax+0xf8]
    cc79:	mov    r9,QWORD PTR [rsp+0x18]
    cc7e:	test   rax,rax
    cc81:	jne    caa4 <encrypt_data+0x174>
    cc87:	jmp    cb87 <encrypt_data+0x257>
    cc8c:	mov    rdi,QWORD PTR [rip+0x1920d]        # 25ea0 <opt_iv>
    cc93:	lea    rsi,[rsp+0x28]
    cc98:	mov    QWORD PTR [rsp+0x28],0x10
    cca1:	call   c820 <get_iv.constprop.0>
    cca6:	mov    QWORD PTR [rsp+0x8],rax
    ccab:	mov    QWORD PTR [rsp+0x38],rax
    ccb0:	mov    rax,QWORD PTR [rsp+0x28]
    ccb5:	mov    QWORD PTR [rsp+0x40],rax
    ccba:	jmp    ca1f <encrypt_data+0xef>
    ccbf:	xor    r13d,r13d
    ccc2:	jmp    ca43 <encrypt_data+0x113>
    ccc7:	lea    rax,[rip+0x16712]        # 233e0 <p11_mechanisms>
    ccce:	mov    rsi,QWORD PTR [rax+0x8]
    ccd2:	test   rsi,rsi
    ccd5:	je     cd9b <encrypt_data+0x46b>
    ccdb:	cmp    rdi,QWORD PTR [rax]
    ccde:	je     cda3 <encrypt_data+0x473>
    cce4:	add    rax,0x20
    cce8:	jmp    ccce <encrypt_data+0x39e>
    ccea:	mov    rsi,QWORD PTR [rip+0x1635f]        # 23050 <opt_allow_sw>
    ccf1:	xor    ecx,ecx
    ccf3:	xor    edx,edx
    ccf5:	lea    r8,[rip+0x19424]        # 26120 <opt_mechanism>
    ccfc:	or     rsi,0x100
    cd03:	call   9300 <find_mechanism>
    cd08:	test   eax,eax
    cd0a:	jne    c971 <encrypt_data+0x41>
    cd10:	lea    rdi,[rip+0xe459]        # 1b170 <_IO_stdin_used+0x4170>
    cd17:	call   15f90 <util_fatal>
    cd1c:	mov    edi,r13d
    cd1f:	call   5700 <close@plt>
    cd24:	jmp    cb9e <encrypt_data+0x26e>
    cd29:	mov    rsi,rbp
    cd2c:	mov    edi,r14d
    cd2f:	call   5650 <write@plt>
    cd34:	cmp    DWORD PTR [rsp+0x20],eax
    cd38:	je     cb95 <encrypt_data+0x265>
    cd3e:	mov    rsi,QWORD PTR [rip+0x1942b]        # 26170 <opt_output>
    cd45:	lea    rdi,[rip+0xb04e]        # 17d9a <_IO_stdin_used+0xd9a>
    cd4c:	xor    eax,eax
    cd4e:	call   15f90 <util_fatal>
    cd53:	mov    r14d,0x1
    cd59:	jmp    ca6f <encrypt_data+0x13f>
    cd5e:	mov    esi,0x2
    cd63:	mov    rdi,r12
    cd66:	call   9820 <login>
    cd6b:	mov    r9,QWORD PTR [rsp+0x10]
    cd70:	jmp    caec <encrypt_data+0x1bc>
    cd75:	mov    esi,0x2
    cd7a:	mov    rdi,r12
    cd7d:	call   9820 <login>
    cd82:	mov    r9,QWORD PTR [rsp+0x18]
    cd87:	jmp    cc45 <encrypt_data+0x315>
    cd8c:	mov    rsi,rax
    cd8f:	lea    rdi,[rip+0xaff4]        # 17d8a <_IO_stdin_used+0xd8a>
    cd96:	call   9140 <p11_fatal>
    cd9b:	call   a3c0 <p11_mechanism_to_name.part.0>
    cda0:	mov    rsi,rax
    cda3:	lea    rdi,[rip+0xe3e6]        # 1b190 <_IO_stdin_used+0x4190>
    cdaa:	xor    eax,eax
    cdac:	call   15f90 <util_fatal>
    cdb1:	mov    rsi,rax
    cdb4:	lea    rdi,[rip+0xaff6]        # 17db1 <_IO_stdin_used+0xdb1>
    cdbb:	call   9140 <p11_fatal>
    cdc0:	call   5690 <__stack_chk_fail@plt>
    cdc5:	mov    rsi,QWORD PTR [rip+0x193ac]        # 26178 <opt_input>
    cdcc:	lea    rdi,[rip+0xaf68]        # 17d3b <_IO_stdin_used+0xd3b>
    cdd3:	xor    eax,eax
    cdd5:	call   15f90 <util_fatal>
    cdda:	mov    rsi,QWORD PTR [rip+0x19397]        # 26178 <opt_input>
    cde1:	lea    rdi,[rip+0xaf7c]        # 17d64 <_IO_stdin_used+0xd64>
    cde8:	xor    eax,eax
    cdea:	call   15f90 <util_fatal>
    cdef:	mov    rsi,QWORD PTR [rip+0x1937a]        # 26170 <opt_output>
    cdf6:	lea    rdi,[rip+0xaf51]        # 17d4e <_IO_stdin_used+0xd4e>
    cdfd:	xor    eax,eax
    cdff:	call   15f90 <util_fatal>
    ce04:	mov    rsi,rax
    ce07:	lea    rdi,[rip+0xaf6e]        # 17d7c <_IO_stdin_used+0xd7c>
    ce0e:	call   9140 <p11_fatal>
    ce13:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    ce1e:	xchg   ax,ax

000000000000ce20 <decrypt_data>:
    ce20:	push   r15
    ce22:	mov    r15,rdx
    ce25:	push   r14
    ce27:	push   r13
    ce29:	push   r12
    ce2b:	mov    r12,rsi
    ce2e:	push   rbp
    ce2f:	push   rbx
    ce30:	sub    rsp,0x898
    ce37:	mov    ecx,DWORD PTR [rip+0x192db]        # 26118 <opt_mechanism_used>
    ce3d:	mov    rax,QWORD PTR fs:0x28
    ce46:	mov    QWORD PTR [rsp+0x888],rax
    ce4e:	xor    eax,eax
    ce50:	mov    QWORD PTR [rsp+0x28],0x0
    ce59:	test   ecx,ecx
    ce5b:	je     d3d5 <decrypt_data+0x5b5>
    ce61:	mov    rcx,QWORD PTR [rip+0x16580]        # 233e8 <p11_mechanisms+0x8>
    ce68:	mov    rdi,QWORD PTR [rip+0x192b1]        # 26120 <opt_mechanism>
    ce6f:	test   rcx,rcx
    ce72:	je     d2ac <decrypt_data+0x48c>
    ce78:	lea    rdx,[rip+0x16561]        # 233e0 <p11_mechanisms>
    ce7f:	jmp    ce99 <decrypt_data+0x79>
    ce81:	nop    DWORD PTR [rax+0x0]
    ce88:	mov    rcx,QWORD PTR [rdx+0x28]
    ce8c:	add    rdx,0x20
    ce90:	test   rcx,rcx
    ce93:	je     d2ac <decrypt_data+0x48c>
    ce99:	cmp    rdi,QWORD PTR [rdx]
    ce9c:	jne    ce88 <decrypt_data+0x68>
    ce9e:	mov    rdi,QWORD PTR [rip+0x1873b]        # 255e0 <stderr@@GLIBC_2.2.5>
    cea5:	lea    rdx,[rip+0xaf14]        # 17dc0 <_IO_stdin_used+0xdc0>
    ceac:	mov    esi,0x1
    ceb1:	xor    eax,eax
    ceb3:	call   59b0 <__fprintf_chk@plt>
    ceb8:	mov    rdi,QWORD PTR [rip+0x19261]        # 26120 <opt_mechanism>
    cebf:	mov    rax,QWORD PTR [rip+0x18ffa]        # 25ec0 <opt_hash_alg>
    cec6:	pxor   xmm0,xmm0
    ceca:	mov    QWORD PTR [rsp+0x50],0x0
    ced3:	mov    QWORD PTR [rsp+0x30],rdi
    ced8:	movups XMMWORD PTR [rsp+0x38],xmm0
    cedd:	test   rax,rax
    cee0:	je     cf38 <decrypt_data+0x118>
    cee2:	cmp    rdi,0x9
    cee6:	jne    d574 <decrypt_data+0x754>
    ceec:	mov    QWORD PTR [rsp+0x50],rax
    cef1:	cmp    rax,0x270
    cef7:	je     d4de <decrypt_data+0x6be>
    cefd:	ja     d350 <decrypt_data+0x530>
    cf03:	cmp    rax,0x255
    cf09:	je     d4d0 <decrypt_data+0x6b0>
    cf0f:	jbe    d378 <decrypt_data+0x558>
    cf15:	cmp    rax,0x260
    cf1b:	jne    d4fa <decrypt_data+0x6da>
    cf21:	mov    QWORD PTR [rsp+0x58],0x3
    cf2a:	mov    QWORD PTR [rsp+0x8],0x0
    cf33:	jmp    d196 <decrypt_data+0x376>
    cf38:	cmp    rdi,0x1082
    cf3f:	je     d15c <decrypt_data+0x33c>
    cf45:	ja     d14f <decrypt_data+0x32f>
    cf4b:	cmp    rdi,0x3
    cf4f:	je     cf6e <decrypt_data+0x14e>
    cf51:	jbe    d271 <decrypt_data+0x451>
    cf57:	cmp    rdi,0x9
    cf5b:	je     d4fa <decrypt_data+0x6da>
    cf61:	cmp    rdi,0x1081
    cf68:	jne    d27b <decrypt_data+0x45b>
    cf6e:	mov    QWORD PTR [rsp+0x38],0x0
    cf77:	mov    QWORD PTR [rsp+0x40],0x0
    cf80:	mov    QWORD PTR [rsp+0x8],0x0
    cf89:	mov    rdi,QWORD PTR [rip+0x191e8]        # 26178 <opt_input>
    cf90:	test   rdi,rdi
    cf93:	je     d3cd <decrypt_data+0x5ad>
    cf99:	xor    esi,esi
    cf9b:	xor    eax,eax
    cf9d:	call   58f0 <open@plt>
    cfa2:	mov    r13d,eax
    cfa5:	test   eax,eax
    cfa7:	js     d517 <decrypt_data+0x6f7>
    cfad:	mov    rdi,QWORD PTR [rip+0x191bc]        # 26170 <opt_output>
    cfb4:	test   rdi,rdi
    cfb7:	je     d43e <decrypt_data+0x61e>
    cfbd:	mov    edx,0x180
    cfc2:	mov    esi,0x241
    cfc7:	xor    eax,eax
    cfc9:	call   58f0 <open@plt>
    cfce:	mov    r14d,eax
    cfd1:	test   eax,eax
    cfd3:	js     d550 <decrypt_data+0x730>
    cfd9:	lea    rbx,[rsp+0x80]
    cfe1:	mov    edx,0x400
    cfe6:	mov    edi,r13d
    cfe9:	mov    rsi,rbx
    cfec:	call   5740 <read@plt>
    cff1:	movsxd r9,eax
    cff4:	test   eax,eax
    cff6:	js     d52c <decrypt_data+0x70c>
    cffc:	cmp    eax,0x3ff
    d001:	jle    d2b9 <decrypt_data+0x499>
    d007:	lea    rax,[rsp+0x30]
    d00c:	mov    QWORD PTR [rsp+0x10],rax
    d011:	mov    QWORD PTR [rsp+0x18],r9
    d016:	mov    rsi,QWORD PTR [rsp+0x10]
    d01b:	mov    rdx,r15
    d01e:	mov    rdi,r12
    d021:	mov    rax,QWORD PTR [rip+0x18e68]        # 25e90 <p11>
    d028:	call   QWORD PTR [rax+0x110]
    d02e:	mov    r9,QWORD PTR [rsp+0x18]
    d033:	test   rax,rax
    d036:	jne    d565 <decrypt_data+0x745>
    d03c:	mov    rsi,r15
    d03f:	mov    rdi,r12
    d042:	mov    QWORD PTR [rsp+0x10],r9
    d047:	call   bf60 <getALWAYS_AUTHENTICATE>
    d04c:	mov    r9,QWORD PTR [rsp+0x10]
    d051:	test   al,al
    d053:	jne    d486 <decrypt_data+0x666>
    d059:	lea    r15,[rsp+0x20]
    d05e:	lea    rbp,[rsp+0x480]
    d066:	cs nop WORD PTR [rax+rax*1+0x0]
    d070:	mov    rax,QWORD PTR [rip+0x18e19]        # 25e90 <p11>
    d077:	mov    r8,r15
    d07a:	mov    rcx,rbp
    d07d:	mov    rdx,r9
    d080:	mov    QWORD PTR [rsp+0x20],0x400
    d089:	mov    rsi,rbx
    d08c:	mov    rdi,r12
    d08f:	call   QWORD PTR [rax+0x120]
    d095:	test   rax,rax
    d098:	jne    d508 <decrypt_data+0x6e8>
    d09e:	mov    rdx,QWORD PTR [rsp+0x20]
    d0a3:	mov    rsi,rbp
    d0a6:	mov    edi,r14d
    d0a9:	call   5650 <write@plt>
    d0ae:	cmp    DWORD PTR [rsp+0x20],eax
    d0b2:	jne    d429 <decrypt_data+0x609>
    d0b8:	mov    edx,0x400
    d0bd:	mov    rsi,rbx
    d0c0:	mov    edi,r13d
    d0c3:	call   5740 <read@plt>
    d0c8:	movsxd r9,eax
    d0cb:	test   eax,eax
    d0cd:	jg     d070 <decrypt_data+0x250>
    d0cf:	mov    rax,QWORD PTR [rip+0x18dba]        # 25e90 <p11>
    d0d6:	mov    rdx,r15
    d0d9:	mov    rsi,rbp
    d0dc:	mov    rdi,r12
    d0df:	mov    QWORD PTR [rsp+0x20],0x400
    d0e8:	call   QWORD PTR [rax+0x128]
    d0ee:	test   rax,rax
    d0f1:	jne    d541 <decrypt_data+0x721>
    d0f7:	mov    rdx,QWORD PTR [rsp+0x20]
    d0fc:	test   rdx,rdx
    d0ff:	jne    d414 <decrypt_data+0x5f4>
    d105:	test   r13d,r13d
    d108:	jne    d407 <decrypt_data+0x5e7>
    d10e:	cmp    r14d,0x1
    d112:	je     d11c <decrypt_data+0x2fc>
    d114:	mov    edi,r14d
    d117:	call   5700 <close@plt>
    d11c:	mov    rdi,QWORD PTR [rsp+0x8]
    d121:	call   5590 <free@plt>
    d126:	mov    rax,QWORD PTR [rsp+0x888]
    d12e:	xor    rax,QWORD PTR fs:0x28
    d137:	jne    d582 <decrypt_data+0x762>
    d13d:	add    rsp,0x898
    d144:	pop    rbx
    d145:	pop    rbp
    d146:	pop    r12
    d148:	pop    r13
    d14a:	pop    r14
    d14c:	pop    r15
    d14e:	ret    
    d14f:	cmp    rdi,0x1085
    d156:	jne    d27b <decrypt_data+0x45b>
    d15c:	mov    rdi,QWORD PTR [rip+0x18d3d]        # 25ea0 <opt_iv>
    d163:	lea    rsi,[rsp+0x28]
    d168:	mov    QWORD PTR [rsp+0x28],0x10
    d171:	call   c820 <get_iv.constprop.0>
    d176:	mov    QWORD PTR [rsp+0x8],rax
    d17b:	mov    QWORD PTR [rsp+0x38],rax
    d180:	mov    rax,QWORD PTR [rsp+0x28]
    d185:	mov    QWORD PTR [rsp+0x40],rax
    d18a:	cmp    QWORD PTR [rsp+0x50],0x0
    d190:	je     cf89 <decrypt_data+0x169>
    d196:	mov    rax,QWORD PTR [rip+0x18d1b]        # 25eb8 <opt_mgf>
    d19d:	test   rax,rax
    d1a0:	je     d1a7 <decrypt_data+0x387>
    d1a2:	mov    QWORD PTR [rsp+0x58],rax
    d1a7:	mov    rbx,QWORD PTR [rip+0x160fa]        # 232a8 <p11_mgf+0x8>
    d1ae:	lea    rax,[rsp+0x50]
    d1b3:	mov    QWORD PTR [rsp+0x60],0x0
    d1bc:	mov    QWORD PTR [rsp+0x68],0x0
    d1c5:	mov    r9,QWORD PTR [rsp+0x58]
    d1ca:	mov    QWORD PTR [rsp+0x70],0x0
    d1d3:	mov    QWORD PTR [rsp+0x38],rax
    d1d8:	mov    QWORD PTR [rsp+0x40],0x28
    d1e1:	test   rbx,rbx
    d1e4:	je     d456 <decrypt_data+0x636>
    d1ea:	lea    rax,[rip+0x160af]        # 232a0 <p11_mgf>
    d1f1:	jmp    d209 <decrypt_data+0x3e9>
    d1f3:	nop    DWORD PTR [rax+rax*1+0x0]
    d1f8:	mov    rbx,QWORD PTR [rax+0x28]
    d1fc:	add    rax,0x20
    d200:	test   rbx,rbx
    d203:	je     d456 <decrypt_data+0x636>
    d209:	cmp    r9,QWORD PTR [rax]
    d20c:	jne    d1f8 <decrypt_data+0x3d8>
    d20e:	mov    rcx,QWORD PTR [rip+0x161d3]        # 233e8 <p11_mechanisms+0x8>
    d215:	mov    rdi,QWORD PTR [rsp+0x50]
    d21a:	test   rcx,rcx
    d21d:	je     d449 <decrypt_data+0x629>
    d223:	lea    rdx,[rip+0x161b6]        # 233e0 <p11_mechanisms>
    d22a:	jmp    d241 <decrypt_data+0x421>
    d22c:	nop    DWORD PTR [rax+0x0]
    d230:	mov    rcx,QWORD PTR [rdx+0x28]
    d234:	add    rdx,0x20
    d238:	test   rcx,rcx
    d23b:	je     d449 <decrypt_data+0x629>
    d241:	cmp    rdi,QWORD PTR [rdx]
    d244:	jne    d230 <decrypt_data+0x410>
    d246:	push   0x0
    d248:	mov    rdi,QWORD PTR [rip+0x18391]        # 255e0 <stderr@@GLIBC_2.2.5>
    d24f:	xor    r9d,r9d
    d252:	mov    r8,rbx
    d255:	push   0x0
    d257:	lea    rdx,[rip+0xdfc2]        # 1b220 <_IO_stdin_used+0x4220>
    d25e:	mov    esi,0x1
    d263:	xor    eax,eax
    d265:	call   59b0 <__fprintf_chk@plt>
    d26a:	pop    rax
    d26b:	pop    rdx
    d26c:	jmp    cf89 <decrypt_data+0x169>
    d271:	cmp    rdi,0x1
    d275:	je     cf6e <decrypt_data+0x14e>
    d27b:	lea    rax,[rip+0x1615e]        # 233e0 <p11_mechanisms>
    d282:	jmp    d28d <decrypt_data+0x46d>
    d284:	cmp    rdi,QWORD PTR [rax]
    d287:	je     d29e <decrypt_data+0x47e>
    d289:	add    rax,0x20
    d28d:	mov    rsi,QWORD PTR [rax+0x8]
    d291:	test   rsi,rsi
    d294:	jne    d284 <decrypt_data+0x464>
    d296:	call   a3c0 <p11_mechanism_to_name.part.0>
    d29b:	mov    rsi,rax
    d29e:	lea    rdi,[rip+0xdeeb]        # 1b190 <_IO_stdin_used+0x4190>
    d2a5:	xor    eax,eax
    d2a7:	call   15f90 <util_fatal>
    d2ac:	call   a3c0 <p11_mechanism_to_name.part.0>
    d2b1:	mov    rcx,rax
    d2b4:	jmp    ce9e <decrypt_data+0x7e>
    d2b9:	lea    rax,[rsp+0x30]
    d2be:	mov    QWORD PTR [rsp+0x18],r9
    d2c3:	mov    rdx,r15
    d2c6:	mov    rdi,r12
    d2c9:	mov    QWORD PTR [rsp+0x10],rax
    d2ce:	mov    rsi,rax
    d2d1:	mov    rax,QWORD PTR [rip+0x18bb8]        # 25e90 <p11>
    d2d8:	mov    QWORD PTR [rsp+0x20],0x400
    d2e1:	call   QWORD PTR [rax+0x110]
    d2e7:	mov    r9,QWORD PTR [rsp+0x18]
    d2ec:	test   rax,rax
    d2ef:	jne    d565 <decrypt_data+0x745>
    d2f5:	mov    rsi,r15
    d2f8:	mov    rdi,r12
    d2fb:	mov    QWORD PTR [rsp+0x18],r9
    d300:	call   bf60 <getALWAYS_AUTHENTICATE>
    d305:	mov    r9,QWORD PTR [rsp+0x18]
    d30a:	test   al,al
    d30c:	jne    d49d <decrypt_data+0x67d>
    d312:	mov    rax,QWORD PTR [rip+0x18b77]        # 25e90 <p11>
    d319:	mov    rdx,r9
    d31c:	mov    rsi,rbx
    d31f:	mov    rdi,r12
    d322:	lea    rbp,[rsp+0x480]
    d32a:	mov    QWORD PTR [rsp+0x18],r9
    d32f:	lea    r8,[rsp+0x20]
    d334:	mov    rcx,rbp
    d337:	call   QWORD PTR [rax+0x118]
    d33d:	mov    r9,QWORD PTR [rsp+0x18]
    d342:	test   rax,rax
    d345:	jne    d011 <decrypt_data+0x1f1>
    d34b:	jmp    d0f7 <decrypt_data+0x2d7>
    d350:	cmp    rax,0x2c0
    d356:	je     d4ec <decrypt_data+0x6cc>
    d35c:	jbe    d3a7 <decrypt_data+0x587>
    d35e:	cmp    rax,0x2d0
    d364:	jne    d4fa <decrypt_data+0x6da>
    d36a:	mov    QWORD PTR [rsp+0x58],0x9
    d373:	jmp    cf2a <decrypt_data+0x10a>
    d378:	cmp    rax,0x220
    d37e:	je     d4c2 <decrypt_data+0x6a2>
    d384:	cmp    rax,0x250
    d38a:	jne    d4fa <decrypt_data+0x6da>
    d390:	mov    QWORD PTR [rsp+0x58],0x2
    d399:	mov    QWORD PTR [rsp+0x8],0x0
    d3a2:	jmp    d18a <decrypt_data+0x36a>
    d3a7:	cmp    rax,0x2b0
    d3ad:	je     d4b4 <decrypt_data+0x694>
    d3b3:	cmp    rax,0x2b5
    d3b9:	jne    d4fa <decrypt_data+0x6da>
    d3bf:	mov    QWORD PTR [rsp+0x58],0x6
    d3c8:	jmp    cf2a <decrypt_data+0x10a>
    d3cd:	xor    r13d,r13d
    d3d0:	jmp    cfad <decrypt_data+0x18d>
    d3d5:	mov    rsi,QWORD PTR [rip+0x15c74]        # 23050 <opt_allow_sw>
    d3dc:	xor    ecx,ecx
    d3de:	xor    edx,edx
    d3e0:	lea    r8,[rip+0x18d39]        # 26120 <opt_mechanism>
    d3e7:	or     rsi,0x200
    d3ee:	call   9300 <find_mechanism>
    d3f3:	test   eax,eax
    d3f5:	jne    ce61 <decrypt_data+0x41>
    d3fb:	lea    rdi,[rip+0xddb6]        # 1b1b8 <_IO_stdin_used+0x41b8>
    d402:	call   15f90 <util_fatal>
    d407:	mov    edi,r13d
    d40a:	call   5700 <close@plt>
    d40f:	jmp    d10e <decrypt_data+0x2ee>
    d414:	mov    rsi,rbp
    d417:	mov    edi,r14d
    d41a:	call   5650 <write@plt>
    d41f:	cmp    DWORD PTR [rsp+0x20],eax
    d423:	je     d105 <decrypt_data+0x2e5>
    d429:	mov    rsi,QWORD PTR [rip+0x18d40]        # 26170 <opt_output>
    d430:	lea    rdi,[rip+0xa963]        # 17d9a <_IO_stdin_used+0xd9a>
    d437:	xor    eax,eax
    d439:	call   15f90 <util_fatal>
    d43e:	mov    r14d,0x1
    d444:	jmp    cfd9 <decrypt_data+0x1b9>
    d449:	call   a3c0 <p11_mechanism_to_name.part.0>
    d44e:	mov    rcx,rax
    d451:	jmp    d246 <decrypt_data+0x426>
    d456:	lea    r8,[rip+0xa97f]        # 17ddc <_IO_stdin_used+0xddc>
    d45d:	mov    ecx,0x40
    d462:	xor    eax,eax
    d464:	mov    edx,0x1
    d469:	mov    esi,0x40
    d46e:	lea    rdi,[rip+0x1818b]        # 25600 <temp.11840>
    d475:	lea    rbx,[rip+0x18184]        # 25600 <temp.11840>
    d47c:	call   5580 <__snprintf_chk@plt>
    d481:	jmp    d20e <decrypt_data+0x3ee>
    d486:	mov    esi,0x2
    d48b:	mov    rdi,r12
    d48e:	call   9820 <login>
    d493:	mov    r9,QWORD PTR [rsp+0x10]
    d498:	jmp    d059 <decrypt_data+0x239>
    d49d:	mov    esi,0x2
    d4a2:	mov    rdi,r12
    d4a5:	call   9820 <login>
    d4aa:	mov    r9,QWORD PTR [rsp+0x18]
    d4af:	jmp    d312 <decrypt_data+0x4f2>
    d4b4:	mov    QWORD PTR [rsp+0x58],0x7
    d4bd:	jmp    cf2a <decrypt_data+0x10a>
    d4c2:	mov    QWORD PTR [rsp+0x58],0x1
    d4cb:	jmp    cf2a <decrypt_data+0x10a>
    d4d0:	mov    QWORD PTR [rsp+0x58],0x5
    d4d9:	jmp    cf2a <decrypt_data+0x10a>
    d4de:	mov    QWORD PTR [rsp+0x58],0x4
    d4e7:	jmp    cf2a <decrypt_data+0x10a>
    d4ec:	mov    QWORD PTR [rsp+0x58],0x8
    d4f5:	jmp    cf2a <decrypt_data+0x10a>
    d4fa:	mov    QWORD PTR [rsp+0x50],0x250
    d503:	jmp    d390 <decrypt_data+0x570>
    d508:	mov    rsi,rax
    d50b:	lea    rdi,[rip+0xa8e2]        # 17df4 <_IO_stdin_used+0xdf4>
    d512:	call   9140 <p11_fatal>
    d517:	mov    rsi,QWORD PTR [rip+0x18c5a]        # 26178 <opt_input>
    d51e:	lea    rdi,[rip+0xa816]        # 17d3b <_IO_stdin_used+0xd3b>
    d525:	xor    eax,eax
    d527:	call   15f90 <util_fatal>
    d52c:	mov    rsi,QWORD PTR [rip+0x18c45]        # 26178 <opt_input>
    d533:	lea    rdi,[rip+0xa82a]        # 17d64 <_IO_stdin_used+0xd64>
    d53a:	xor    eax,eax
    d53c:	call   15f90 <util_fatal>
    d541:	mov    rsi,rax
    d544:	lea    rdi,[rip+0xa8b9]        # 17e04 <_IO_stdin_used+0xe04>
    d54b:	call   9140 <p11_fatal>
    d550:	mov    rsi,QWORD PTR [rip+0x18c19]        # 26170 <opt_output>
    d557:	lea    rdi,[rip+0xa7f0]        # 17d4e <_IO_stdin_used+0xd4e>
    d55e:	xor    eax,eax
    d560:	call   15f90 <util_fatal>
    d565:	mov    rsi,rax
    d568:	lea    rdi,[rip+0xa877]        # 17de6 <_IO_stdin_used+0xde6>
    d56f:	call   9140 <p11_fatal>
    d574:	lea    rdi,[rip+0xdc5d]        # 1b1d8 <_IO_stdin_used+0x41d8>
    d57b:	xor    eax,eax
    d57d:	call   15f90 <util_fatal>
    d582:	call   5690 <__stack_chk_fail@plt>
    d587:	nop    WORD PTR [rax+rax*1+0x0]

000000000000d590 <wrap_key>:
    d590:	push   r14
    d592:	push   r13
    d594:	push   r12
    d596:	push   rbp
    d597:	push   rbx
    d598:	sub    rsp,0x1000
    d59f:	or     QWORD PTR [rsp],0x0
    d5a4:	sub    rsp,0xd0
    d5ab:	mov    rax,QWORD PTR fs:0x28
    d5b4:	mov    QWORD PTR [rsp+0x10c8],rax
    d5bc:	xor    eax,eax
    d5be:	mov    rbp,rdi
    d5c1:	mov    rdi,QWORD PTR [rip+0x189f8]        # 25fc0 <opt_application_id>
    d5c8:	mov    QWORD PTR [rsp+0x8],0x1000
    d5d1:	mov    QWORD PTR [rsp+0x28],0x0
    d5da:	test   rdi,rdi
    d5dd:	je     d85c <wrap_key+0x2cc>
    d5e3:	mov    eax,DWORD PTR [rip+0x18b2f]        # 26118 <opt_mechanism_used>
    d5e9:	test   eax,eax
    d5eb:	je     d84e <wrap_key+0x2be>
    d5f1:	mov    QWORD PTR [rsp+0x38],0x0
    d5fa:	mov    rax,QWORD PTR [rip+0x18b1f]        # 26120 <opt_mechanism>
    d601:	mov    QWORD PTR [rsp+0x40],0x0
    d60a:	mov    QWORD PTR [rsp+0x30],rax
    d60f:	cmp    rax,0x1082
    d615:	je     d7b2 <wrap_key+0x222>
    d61b:	xor    r12d,r12d
    d61e:	cmp    rax,0x1085
    d624:	je     d7b2 <wrap_key+0x222>
    d62a:	lea    rbx,[rsp+0x50]
    d62f:	lea    rdx,[rsp+0x20]
    d634:	mov    QWORD PTR [rsp+0x20],0x64
    d63d:	mov    rsi,rbx
    d640:	call   5620 <sc_hex_to_bin@plt>
    d645:	test   eax,eax
    d647:	jne    d819 <wrap_key+0x289>
    d64d:	mov    r8,QWORD PTR [rsp+0x20]
    d652:	xor    r13d,r13d
    d655:	lea    rdx,[rsp+0x18]
    d65a:	mov    rdi,rbp
    d65d:	mov    esi,0x4
    d662:	test   r8,r8
    d665:	cmove  rbx,r13
    d669:	xor    r9d,r9d
    d66c:	mov    rcx,rbx
    d66f:	call   b100 <find_object>
    d674:	test   eax,eax
    d676:	je     d83d <wrap_key+0x2ad>
    d67c:	mov    rcx,r13
    d67f:	lea    r14,[rsp+0x10]
    d684:	mov    esi,0x2
    d689:	mov    rdi,rbp
    d68c:	mov    r8,QWORD PTR [rip+0x1896d]        # 26000 <opt_object_id_len>
    d693:	lea    rbx,[rip+0x18a06]        # 260a0 <opt_object_id>
    d69a:	mov    rdx,r14
    d69d:	test   r8,r8
    d6a0:	cmovne rcx,rbx
    d6a4:	xor    r9d,r9d
    d6a7:	call   b100 <find_object>
    d6ac:	test   eax,eax
    d6ae:	je     d77a <wrap_key+0x1ea>
    d6b4:	mov    rax,QWORD PTR [rip+0x187d5]        # 25e90 <p11>
    d6bb:	lea    r13,[rsp+0xc0]
    d6c3:	mov    rcx,QWORD PTR [rsp+0x18]
    d6c8:	lea    rsi,[rsp+0x30]
    d6cd:	mov    rdx,QWORD PTR [rsp+0x10]
    d6d2:	lea    r9,[rsp+0x8]
    d6d7:	mov    r8,r13
    d6da:	mov    rdi,rbp
    d6dd:	call   QWORD PTR [rax+0x1e8]
    d6e3:	test   rax,rax
    d6e6:	jne    d82e <wrap_key+0x29e>
    d6ec:	lea    rdi,[rip+0xa747]        # 17e3a <_IO_stdin_used+0xe3a>
    d6f3:	call   5600 <puts@plt>
    d6f8:	mov    rdi,QWORD PTR [rip+0x18a71]        # 26170 <opt_output>
    d6ff:	test   rdi,rdi
    d702:	je     d7ea <wrap_key+0x25a>
    d708:	mov    edx,0x180
    d70d:	mov    esi,0x241
    d712:	xor    eax,eax
    d714:	call   58f0 <open@plt>
    d719:	mov    ebp,eax
    d71b:	test   eax,eax
    d71d:	js     d868 <wrap_key+0x2d8>
    d723:	mov    rdx,QWORD PTR [rsp+0x8]
    d728:	mov    rsi,r13
    d72b:	mov    edi,eax
    d72d:	call   5650 <write@plt>
    d732:	test   eax,eax
    d734:	js     d804 <wrap_key+0x274>
    d73a:	cmp    ebp,0x1
    d73d:	je     d746 <wrap_key+0x1b6>
    d73f:	mov    edi,ebp
    d741:	call   5700 <close@plt>
    d746:	mov    rdi,r12
    d749:	call   5590 <free@plt>
    d74e:	mov    rax,QWORD PTR [rsp+0x10c8]
    d756:	xor    rax,QWORD PTR fs:0x28
    d75f:	jne    d849 <wrap_key+0x2b9>
    d765:	add    rsp,0x10d0
    d76c:	mov    eax,0x1
    d771:	pop    rbx
    d772:	pop    rbp
    d773:	pop    r12
    d775:	pop    r13
    d777:	pop    r14
    d779:	ret    
    d77a:	mov    r8,QWORD PTR [rip+0x1887f]        # 26000 <opt_object_id_len>
    d781:	mov    rcx,r13
    d784:	mov    rdx,r14
    d787:	mov    rdi,rbp
    d78a:	mov    esi,0x4
    d78f:	test   r8,r8
    d792:	cmovne rcx,rbx
    d796:	xor    r9d,r9d
    d799:	call   b100 <find_object>
    d79e:	test   eax,eax
    d7a0:	jne    d6b4 <wrap_key+0x124>
    d7a6:	lea    rdi,[rip+0xdb5b]        # 1b308 <_IO_stdin_used+0x4308>
    d7ad:	call   15f90 <util_fatal>
    d7b2:	mov    rdi,QWORD PTR [rip+0x186e7]        # 25ea0 <opt_iv>
    d7b9:	lea    rsi,[rsp+0x28]
    d7be:	mov    QWORD PTR [rsp+0x28],0x10
    d7c7:	call   c820 <get_iv.constprop.0>
    d7cc:	mov    rdi,QWORD PTR [rip+0x187ed]        # 25fc0 <opt_application_id>
    d7d3:	mov    QWORD PTR [rsp+0x38],rax
    d7d8:	mov    r12,rax
    d7db:	mov    rax,QWORD PTR [rsp+0x28]
    d7e0:	mov    QWORD PTR [rsp+0x40],rax
    d7e5:	jmp    d62a <wrap_key+0x9a>
    d7ea:	mov    rdx,QWORD PTR [rsp+0x8]
    d7ef:	mov    rsi,r13
    d7f2:	mov    edi,0x1
    d7f7:	call   5650 <write@plt>
    d7fc:	test   eax,eax
    d7fe:	jns    d746 <wrap_key+0x1b6>
    d804:	mov    rsi,QWORD PTR [rip+0x18965]        # 26170 <opt_output>
    d80b:	lea    rdi,[rip+0xa634]        # 17e46 <_IO_stdin_used+0xe46>
    d812:	xor    eax,eax
    d814:	call   15f90 <util_fatal>
    d819:	mov    rsi,QWORD PTR [rip+0x187a0]        # 25fc0 <opt_application_id>
    d820:	lea    rdi,[rip+0xa5ec]        # 17e13 <_IO_stdin_used+0xe13>
    d827:	xor    eax,eax
    d829:	call   15f90 <util_fatal>
    d82e:	mov    rsi,rax
    d831:	lea    rdi,[rip+0xa5f8]        # 17e30 <_IO_stdin_used+0xe30>
    d838:	call   9140 <p11_fatal>
    d83d:	lea    rdi,[rip+0xda9c]        # 1b2e0 <_IO_stdin_used+0x42e0>
    d844:	call   15f90 <util_fatal>
    d849:	call   5690 <__stack_chk_fail@plt>
    d84e:	lea    rdi,[rip+0xda63]        # 1b2b8 <_IO_stdin_used+0x42b8>
    d855:	xor    eax,eax
    d857:	call   15f90 <util_fatal>
    d85c:	lea    rdi,[rip+0xda15]        # 1b278 <_IO_stdin_used+0x4278>
    d863:	call   15f90 <util_fatal>
    d868:	mov    rsi,QWORD PTR [rip+0x18901]        # 26170 <opt_output>
    d86f:	lea    rdi,[rip+0xa4d8]        # 17d4e <_IO_stdin_used+0xd4e>
    d876:	xor    eax,eax
    d878:	call   15f90 <util_fatal>
    d87d:	nop    DWORD PTR [rax]

000000000000d880 <getLABEL.constprop.0>:
    d880:	push   r13
    d882:	mov    ecx,0x1
    d887:	push   r12
    d889:	mov    r12,rsi
    d88c:	push   rbp
    d88d:	mov    rbp,rdi
    d890:	sub    rsp,0x20
    d894:	mov    rax,QWORD PTR fs:0x28
    d89d:	mov    QWORD PTR [rsp+0x18],rax
    d8a2:	xor    eax,eax
    d8a4:	mov    rax,QWORD PTR [rip+0x185e5]        # 25e90 <p11>
    d8ab:	mov    r13,rsp
    d8ae:	mov    QWORD PTR [rsp],0x3
    d8b6:	mov    QWORD PTR [rsp+0x8],0x0
    d8bf:	mov    rdx,r13
    d8c2:	mov    QWORD PTR [rsp+0x10],0x0
    d8cb:	call   QWORD PTR [rax+0xc8]
    d8d1:	test   rax,rax
    d8d4:	jne    d948 <getLABEL.constprop.0+0xc8>
    d8d6:	mov    rsi,QWORD PTR [rsp+0x10]
    d8db:	cmp    rsi,0xffffffffffffffff
    d8df:	je     d970 <getLABEL.constprop.0+0xf0>
    d8e5:	add    rsi,0x1
    d8e9:	mov    edi,0x1
    d8ee:	call   5790 <calloc@plt>
    d8f3:	mov    QWORD PTR [rsp+0x8],rax
    d8f8:	test   rax,rax
    d8fb:	je     d98b <getLABEL.constprop.0+0x10b>
    d901:	mov    rax,QWORD PTR [rip+0x18588]        # 25e90 <p11>
    d908:	mov    rdx,r13
    d90b:	mov    rsi,r12
    d90e:	mov    rdi,rbp
    d911:	mov    ecx,0x1
    d916:	call   QWORD PTR [rax+0xc8]
    d91c:	cmp    QWORD PTR [rsp+0x10],0xffffffffffffffff
    d922:	je     d978 <getLABEL.constprop.0+0xf8>
    d924:	mov    rax,QWORD PTR [rsp+0x8]
    d929:	mov    rdx,QWORD PTR [rsp+0x18]
    d92e:	xor    rdx,QWORD PTR fs:0x28
    d937:	jne    d986 <getLABEL.constprop.0+0x106>
    d939:	add    rsp,0x20
    d93d:	pop    rbp
    d93e:	pop    r12
    d940:	pop    r13
    d942:	ret    
    d943:	nop    DWORD PTR [rax+rax*1+0x0]
    d948:	cmp    rax,0x12
    d94c:	je     d924 <getLABEL.constprop.0+0xa4>
    d94e:	mov    edx,DWORD PTR [rip+0x18524]        # 25e78 <suppress_warn>
    d954:	test   edx,edx
    d956:	jne    d924 <getLABEL.constprop.0+0xa4>
    d958:	mov    rsi,rax
    d95b:	lea    rdi,[rip+0xa51c]        # 17e7e <_IO_stdin_used+0xe7e>
    d962:	call   b310 <p11_warn.part.0>
    d967:	jmp    d924 <getLABEL.constprop.0+0xa4>
    d969:	nop    DWORD PTR [rax+0x0]
    d970:	xor    eax,eax
    d972:	jmp    d929 <getLABEL.constprop.0+0xa9>
    d974:	nop    DWORD PTR [rax+0x0]
    d978:	mov    rdi,QWORD PTR [rsp+0x8]
    d97d:	call   5590 <free@plt>
    d982:	xor    eax,eax
    d984:	jmp    d929 <getLABEL.constprop.0+0xa9>
    d986:	call   5690 <__stack_chk_fail@plt>
    d98b:	lea    rdi,[rip+0xa4ce]        # 17e60 <_IO_stdin_used+0xe60>
    d992:	call   15f90 <util_fatal>
    d997:	nop    WORD PTR [rax+rax*1+0x0]

000000000000d9a0 <test_signature>:
    d9a0:	push   r15
    d9a2:	push   r14
    d9a4:	push   r13
    d9a6:	push   r12
    d9a8:	push   rbp
    d9a9:	mov    rbp,rdi
    d9ac:	push   rbx
    d9ad:	sub    rsp,0xbd8
    d9b4:	mov    rax,QWORD PTR fs:0x28
    d9bd:	mov    QWORD PTR [rsp+0xbc8],rax
    d9c5:	xor    eax,eax
    d9c7:	lea    rax,[rip+0x10cba]        # 1e688 <_IO_stdin_used+0x7688>
    d9ce:	lea    rbx,[rsp+0x150]
    d9d6:	mov    QWORD PTR [rsp+0x70],0x210
    d9df:	mov    QWORD PTR [rsp+0xb8],rax
    d9e7:	mov    rax,QWORD PTR [rip+0x184a2]        # 25e90 <p11>
    d9ee:	lea    rsi,[rsp+0x90]
    d9f6:	mov    QWORD PTR [rsp+0x78],0x0
    d9ff:	mov    QWORD PTR [rsp+0x80],0x0
    da0b:	mov    QWORD PTR [rsp+0x110],0x3
    da17:	mov    QWORD PTR [rsp+0x118],0x1
    da23:	mov    QWORD PTR [rsp+0x120],0x6
    da2f:	mov    QWORD PTR [rsp+0x128],0x5
    da3b:	mov    QWORD PTR [rsp+0x130],0x8
    da47:	mov    QWORD PTR [rsp+0x138],0x40
    da53:	mov    QWORD PTR [rsp+0x140],0xffffff
    da5f:	mov    QWORD PTR [rsp+0xb0],0x0
    da6b:	mov    QWORD PTR [rsp+0xc0],rbx
    da73:	mov    QWORD PTR [rsp+0xc8],rbx
    da7b:	mov    QWORD PTR [rsp+0xd0],rbx
    da83:	mov    QWORD PTR [rsp+0xd8],rbx
    da8b:	mov    QWORD PTR [rsp+0xe0],0x0
    da97:	mov    QWORD PTR [rsp+0xe8],0x23
    daa3:	mov    QWORD PTR [rsp+0xf0],0x64
    daaf:	mov    QWORD PTR [rsp+0xf8],0x64
    dabb:	mov    QWORD PTR [rsp+0x100],0x64
    dac7:	mov    QWORD PTR [rsp+0x108],0x64
    dad3:	call   QWORD PTR [rax+0x80]
    dad9:	mov    r14,rax
    dadc:	test   rax,rax
    dadf:	jne    e528 <test_signature+0xb88>
    dae5:	test   BYTE PTR [rsp+0x98],0x3
    daed:	je     dcd1 <test_signature+0x331>
    daf3:	mov    rsi,QWORD PTR [rip+0x15556]        # 23050 <opt_allow_sw>
    dafa:	lea    r8,[rsp+0x50]
    daff:	mov    ecx,0x7
    db04:	mov    rdi,QWORD PTR [rsp+0x90]
    db0c:	lea    r15,[rsp+0x110]
    db14:	or     rsi,0x800
    db1b:	mov    rdx,r15
    db1e:	call   9300 <find_mechanism>
    db23:	mov    r12d,eax
    db26:	test   eax,eax
    db28:	je     dc84 <test_signature+0x2e4>
    db2e:	lea    rdi,[rip+0xd83b]        # 1b370 <_IO_stdin_used+0x4370>
    db35:	xor    r12d,r12d
    db38:	lea    r13,[rip+0xa376]        # 17eb5 <_IO_stdin_used+0xeb5>
    db3f:	call   5600 <puts@plt>
    db44:	lea    rax,[rsp+0x48]
    db49:	mov    QWORD PTR [rsp+0x8],r15
    db4e:	mov    QWORD PTR [rsp+0x30],rax
    db53:	mov    QWORD PTR [rsp+0x10],rbx
    db58:	mov    rbx,rax
    db5b:	xor    r8d,r8d
    db5e:	xor    ecx,ecx
    db60:	mov    r9d,r12d
    db63:	mov    rdx,rbx
    db66:	mov    esi,0x3
    db6b:	mov    rdi,rbp
    db6e:	call   b100 <find_object>
    db73:	test   eax,eax
    db75:	je     e474 <test_signature+0xad4>
    db7b:	mov    rdx,r12
    db7e:	mov    rsi,r13
    db81:	mov    edi,0x1
    db86:	xor    eax,eax
    db88:	call   58a0 <__printf_chk@plt>
    db8d:	mov    rsi,QWORD PTR [rsp+0x48]
    db92:	mov    rdi,rbp
    db95:	call   d880 <getLABEL.constprop.0>
    db9a:	mov    r15,rax
    db9d:	test   rax,rax
    dba0:	je     dbc0 <test_signature+0x220>
    dba2:	mov    rdx,rax
    dba5:	mov    edi,0x1
    dbaa:	lea    rsi,[rip+0xa317]        # 17ec8 <_IO_stdin_used+0xec8>
    dbb1:	xor    eax,eax
    dbb3:	call   58a0 <__printf_chk@plt>
    dbb8:	mov    rdi,r15
    dbbb:	call   5590 <free@plt>
    dbc0:	mov    rsi,QWORD PTR [rsp+0x48]
    dbc5:	mov    rdi,rbp
    dbc8:	call   b3e0 <getKEY_TYPE>
    dbcd:	test   rax,rax
    dbd0:	jne    dcbc <test_signature+0x31c>
    dbd6:	mov    rsi,QWORD PTR [rsp+0x48]
    dbdb:	mov    rdi,rbp
    dbde:	call   bed0 <getSIGN>
    dbe3:	test   al,al
    dbe5:	je     dce2 <test_signature+0x342>
    dbeb:	mov    rsi,QWORD PTR [rsp+0x48]
    dbf0:	mov    rdi,rbp
    dbf3:	call   c110 <get_private_key_length>
    dbf8:	add    rax,0x7
    dbfc:	mov    r14,rax
    dbff:	shr    r14,0x3
    dc03:	cmp    rax,0x7
    dc07:	jbe    e36b <test_signature+0x9cb>
    dc0d:	mov    edi,0xa
    dc12:	mov    r15,QWORD PTR [rsp+0x8]
    dc17:	mov    rbx,QWORD PTR [rsp+0x10]
    dc1c:	call   55a0 <putchar@plt>
    dc21:	cmp    QWORD PTR [rsp+0x48],0x0
    dc27:	je     e419 <test_signature+0xa79>
    dc2d:	mov    rax,QWORD PTR [rsp+0x50]
    dc32:	cmp    rax,0x1
    dc36:	je     e38d <test_signature+0x9ed>
    dc3c:	cmp    rax,0x3
    dc40:	jne    dcf0 <test_signature+0x350>
    dc46:	test   r14,r14
    dc49:	je     e446 <test_signature+0xaa6>
    dc4f:	lea    r13,[rsp+0x1c0]
    dc57:	mov    QWORD PTR [rsp+0x8],r13
    dc5c:	lea    r12,[r13+r14*1+0x0]
    dc61:	nop    DWORD PTR [rax+0x0]
    dc68:	call   5a40 <rand@plt>
    dc6d:	add    r13,0x1
    dc71:	mov    BYTE PTR [r13-0x1],al
    dc75:	cmp    r13,r12
    dc78:	jne    dc68 <test_signature+0x2c8>
    dc7a:	mov    QWORD PTR [rsp+0x10],r14
    dc7f:	jmp    dd2b <test_signature+0x38b>
    dc84:	lea    rdi,[rip+0xa20e]        # 17e99 <_IO_stdin_used+0xe99>
    dc8b:	call   5600 <puts@plt>
    dc90:	mov    rax,QWORD PTR [rsp+0xbc8]
    dc98:	xor    rax,QWORD PTR fs:0x28
    dca1:	jne    e523 <test_signature+0xb83>
    dca7:	add    rsp,0xbd8
    dcae:	mov    eax,r12d
    dcb1:	pop    rbx
    dcb2:	pop    rbp
    dcb3:	pop    r12
    dcb5:	pop    r13
    dcb7:	pop    r14
    dcb9:	pop    r15
    dcbb:	ret    
    dcbc:	lea    rdi,[rip+0xa20b]        # 17ece <_IO_stdin_used+0xece>
    dcc3:	call   5600 <puts@plt>
    dcc8:	add    r12,0x1
    dccc:	jmp    db5b <test_signature+0x1bb>
    dcd1:	lea    rdi,[rip+0xd660]        # 1b338 <_IO_stdin_used+0x4338>
    dcd8:	xor    r12d,r12d
    dcdb:	call   5600 <puts@plt>
    dce0:	jmp    dc90 <test_signature+0x2f0>
    dce2:	lea    rdi,[rip+0xd6af]        # 1b398 <_IO_stdin_used+0x4398>
    dce9:	call   5600 <puts@plt>
    dcee:	jmp    dcc8 <test_signature+0x328>
    dcf0:	lea    rax,[rsp+0x1c0]
    dcf8:	lea    r12,[rsp+0x3c0]
    dd00:	mov    QWORD PTR [rsp+0x8],rax
    dd05:	mov    r13,rax
    dd08:	nop    DWORD PTR [rax+rax*1+0x0]
    dd10:	call   5a40 <rand@plt>
    dd15:	add    r13,0x1
    dd19:	mov    BYTE PTR [r13-0x1],al
    dd1d:	cmp    r13,r12
    dd20:	jne    dd10 <test_signature+0x370>
    dd22:	mov    QWORD PTR [rsp+0x10],0x200
    dd2b:	mov    rax,QWORD PTR [rsp+0x50]
    dd30:	cmp    rax,0x3
    dd34:	je     e45c <test_signature+0xabc>
    dd3a:	mov    QWORD PTR [rsp+0x70],rax
    dd3f:	lea    rax,[rsp+0x70]
    dd44:	mov    rdx,QWORD PTR [rsp+0x48]
    dd49:	mov    rdi,rbp
    dd4c:	mov    QWORD PTR [rsp+0x20],rax
    dd51:	mov    rsi,rax
    dd54:	mov    rax,QWORD PTR [rip+0x18135]        # 25e90 <p11>
    dd5b:	call   QWORD PTR [rax+0x158]
    dd61:	cmp    rax,0x70
    dd65:	je     e43e <test_signature+0xa9e>
    dd6b:	test   rax,rax
    dd6e:	jne    e514 <test_signature+0xb74>
    dd74:	mov    rsi,QWORD PTR [rsp+0x48]
    dd79:	mov    rdi,rbp
    dd7c:	call   bf60 <getALWAYS_AUTHENTICATE>
    dd81:	test   al,al
    dd83:	jne    e3ce <test_signature+0xa2e>
    dd89:	mov    rax,QWORD PTR [rip+0x18100]        # 25e90 <p11>
    dd90:	mov    rsi,QWORD PTR [rsp+0x8]
    dd95:	mov    edx,0x5
    dd9a:	mov    rdi,rbp
    dd9d:	call   QWORD PTR [rax+0x168]
    dda3:	cmp    rax,0x54
    dda7:	je     e3b6 <test_signature+0xa16>
    ddad:	test   rax,rax
    ddb0:	jne    e4ac <test_signature+0xb0c>
    ddb6:	mov    rax,QWORD PTR [rip+0x180d3]        # 25e90 <p11>
    ddbd:	lea    rsi,[rsp+0x1c5]
    ddc5:	mov    edx,0xa
    ddca:	mov    rdi,rbp
    ddcd:	call   QWORD PTR [rax+0x168]
    ddd3:	test   rax,rax
    ddd6:	jne    e564 <test_signature+0xbc4>
    dddc:	mov    rax,QWORD PTR [rsp+0x10]
    dde1:	lea    rsi,[rsp+0x1cf]
    dde9:	mov    rdi,rbp
    ddec:	lea    rdx,[rax-0xf]
    ddf0:	mov    rax,QWORD PTR [rip+0x18099]        # 25e90 <p11>
    ddf7:	call   QWORD PTR [rax+0x168]
    ddfd:	test   rax,rax
    de00:	jne    e564 <test_signature+0xbc4>
    de06:	mov    rax,QWORD PTR [rip+0x18083]        # 25e90 <p11>
    de0d:	lea    r12,[rsp+0x3c0]
    de15:	lea    rdx,[rsp+0x58]
    de1a:	mov    rdi,rbp
    de1d:	mov    QWORD PTR [rsp+0x58],0x400
    de26:	mov    rsi,r12
    de29:	call   QWORD PTR [rax+0x170]
    de2f:	test   rax,rax
    de32:	jne    e555 <test_signature+0xbb5>
    de38:	mov    rax,QWORD PTR [rip+0x18051]        # 25e90 <p11>
    de3f:	mov    rdx,QWORD PTR [rsp+0x48]
    de44:	mov    rdi,rbp
    de47:	mov    rsi,QWORD PTR [rsp+0x20]
    de4c:	call   QWORD PTR [rax+0x158]
    de52:	test   rax,rax
    de55:	jne    e514 <test_signature+0xb74>
    de5b:	mov    rsi,QWORD PTR [rsp+0x48]
    de60:	mov    rdi,rbp
    de63:	call   bf60 <getALWAYS_AUTHENTICATE>
    de68:	test   al,al
    de6a:	jne    e4ec <test_signature+0xb4c>
    de70:	mov    rax,QWORD PTR [rip+0x18019]        # 25e90 <p11>
    de77:	lea    r13,[rsp+0x7c0]
    de7f:	mov    rdx,QWORD PTR [rsp+0x10]
    de84:	mov    rdi,rbp
    de87:	mov    rsi,QWORD PTR [rsp+0x8]
    de8c:	lea    r8,[rsp+0x60]
    de91:	mov    rcx,r13
    de94:	mov    QWORD PTR [rsp+0x60],0x400
    de9d:	call   QWORD PTR [rax+0x160]
    dea3:	test   rax,rax
    dea6:	jne    e537 <test_signature+0xb97>
    deac:	mov    rdx,QWORD PTR [rsp+0x58]
    deb1:	cmp    rdx,QWORD PTR [rsp+0x60]
    deb6:	je     e483 <test_signature+0xae3>
    debc:	lea    rdi,[rip+0xd575]        # 1b438 <_IO_stdin_used+0x4438>
    dec3:	mov    r12d,0x1
    dec9:	call   5600 <puts@plt>
    dece:	mov    rax,QWORD PTR [rsp+0x50]
    ded3:	mov    rdx,QWORD PTR [rsp+0x48]
    ded8:	mov    rdi,rbp
    dedb:	mov    rsi,QWORD PTR [rsp+0x20]
    dee0:	mov    QWORD PTR [rsp+0x70],rax
    dee5:	mov    rax,QWORD PTR [rip+0x17fa4]        # 25e90 <p11>
    deec:	call   QWORD PTR [rax+0x158]
    def2:	mov    r13,rax
    def5:	test   rax,rax
    def8:	jne    e546 <test_signature+0xba6>
    defe:	lea    rax,[rsp+0x7c0]
    df06:	lea    r8,[rsp+0x60]
    df0b:	mov    rdx,QWORD PTR [rsp+0x10]
    df10:	mov    rdi,rbp
    df13:	mov    rcx,rax
    df16:	mov    QWORD PTR [rsp+0x28],rax
    df1b:	mov    rsi,QWORD PTR [rsp+0x8]
    df20:	mov    rax,QWORD PTR [rip+0x17f69]        # 25e90 <p11>
    df27:	mov    QWORD PTR [rsp+0x18],r8
    df2c:	mov    QWORD PTR [rsp+0x60],0x1
    df35:	call   QWORD PTR [rax+0x160]
    df3b:	mov    rcx,rax
    df3e:	cmp    rax,0x150
    df44:	je     df68 <test_signature+0x5c8>
    df46:	mov    rdi,rax
    df49:	add    r12d,0x1
    df4d:	call   8e50 <CKR2Str>
    df52:	lea    rsi,[rip+0xd5a7]        # 1b500 <_IO_stdin_used+0x4500>
    df59:	mov    edi,0x1
    df5e:	mov    rdx,rax
    df61:	xor    eax,eax
    df63:	call   58a0 <__printf_chk@plt>
    df68:	xor    ecx,ecx
    df6a:	mov    r8,QWORD PTR [rsp+0x18]
    df6f:	mov    rdx,QWORD PTR [rsp+0x10]
    df74:	mov    rdi,rbp
    df77:	mov    rax,QWORD PTR [rip+0x17f12]        # 25e90 <p11>
    df7e:	mov    rsi,QWORD PTR [rsp+0x8]
    df83:	call   QWORD PTR [rax+0x160]
    df89:	mov    rcx,rax
    df8c:	test   rax,rax
    df8f:	jne    e3f2 <test_signature+0xa52>
    df95:	mov    rsi,QWORD PTR [rsp+0x48]
    df9a:	mov    rdi,rbp
    df9d:	call   bf60 <getALWAYS_AUTHENTICATE>
    dfa2:	test   al,al
    dfa4:	jne    e3e0 <test_signature+0xa40>
    dfaa:	mov    rax,QWORD PTR [rip+0x17edf]        # 25e90 <p11>
    dfb1:	mov    r8,QWORD PTR [rsp+0x18]
    dfb6:	mov    rdi,rbp
    dfb9:	mov    rcx,QWORD PTR [rsp+0x28]
    dfbe:	mov    rdx,QWORD PTR [rsp+0x10]
    dfc3:	mov    rsi,QWORD PTR [rsp+0x8]
    dfc8:	call   QWORD PTR [rax+0x160]
    dfce:	cmp    rax,0x91
    dfd4:	je     e4c6 <test_signature+0xb26>
    dfda:	test   rax,rax
    dfdd:	jne    e537 <test_signature+0xb97>
    dfe3:	lea    rcx,[rsp+0x1b4]
    dfeb:	nop    DWORD PTR [rax+rax*1+0x0]
    dff0:	xor    eax,eax
    dff2:	nop    WORD PTR [rax+rax*1+0x0]
    dff8:	lea    edx,[rax+0x30]
    dffb:	mov    BYTE PTR [rbx+rax*1],dl
    dffe:	add    rax,0x1
    e002:	cmp    rax,0xa
    e006:	jne    dff8 <test_signature+0x658>
    e008:	add    rbx,0xa
    e00c:	cmp    rbx,rcx
    e00f:	jne    dff0 <test_signature+0x650>
    e011:	lea    rdx,[r14-0x26]
    e015:	mov    ecx,0x1fe
    e01a:	mov    esi,0xff
    e01f:	mov    WORD PTR [rsp+0x1c0],0x100
    e029:	lea    rax,[rsp+0x1c2]
    e031:	lea    rbx,[r14-0x23]
    e035:	mov    rdi,rax
    e038:	mov    QWORD PTR [rsp+0x38],rax
    e03d:	call   5980 <__memset_chk@plt>
    e042:	cmp    r14,0x23
    e046:	jbe    e051 <test_signature+0x6b1>
    e048:	mov    BYTE PTR [rsp+r14*1+0x19c],0x0
    e051:	mov    rax,QWORD PTR [rsp+0x8]
    e056:	mov    ecx,0x23
    e05b:	lea    rsi,[rip+0x10626]        # 1e688 <_IO_stdin_used+0x7688>
    e062:	mov    QWORD PTR [rsp+0xe0],r14
    e06a:	add    rbx,rax
    e06d:	mov    QWORD PTR [rsp+0xb0],rax
    e075:	mov    rdi,rbx
    e078:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    e07a:	lea    rdi,[rip+0xd547]        # 1b5c8 <_IO_stdin_used+0x45c8>
    e081:	call   5600 <puts@plt>
    e086:	mov    rax,QWORD PTR [rsp+0x110]
    e08e:	cmp    rax,0xffffff
    e094:	je     e145 <test_signature+0x7a5>
    e09a:	lea    rcx,[rsp+0xe0]
    e0a2:	lea    rbx,[rsp+0xb0]
    e0aa:	mov    QWORD PTR [rsp+0x10],r15
    e0af:	xor    r10d,r10d
    e0b2:	mov    QWORD PTR [rsp+0x18],rcx
    e0b7:	mov    r15,rbx
    e0ba:	mov    rbx,QWORD PTR [rsp+0x20]
    e0bf:	mov    QWORD PTR [rsp+0x28],r13
    e0c4:	mov    r13,r14
    e0c7:	mov    r14,r10
    e0ca:	nop    WORD PTR [rax+rax*1+0x0]
    e0d0:	mov    QWORD PTR [rsp+0x70],rax
    e0d5:	mov    rax,QWORD PTR [rsp+0x18]
    e0da:	mov    r9,r13
    e0dd:	mov    rsi,rbx
    e0e0:	mov    rcx,QWORD PTR [r15+r14*8]
    e0e4:	mov    rdx,QWORD PTR [rsp+0x48]
    e0e9:	mov    rdi,rbp
    e0ec:	mov    r8,QWORD PTR [rax+r14*8]
    e0f0:	add    r14,0x1
    e0f4:	call   c1f0 <sign_verify_openssl.isra.0>
    e0f9:	add    r12d,eax
    e0fc:	mov    rax,QWORD PTR [rsp+0x10]
    e101:	mov    rax,QWORD PTR [rax+r14*8]
    e105:	cmp    rax,0xffffff
    e10b:	jne    e0d0 <test_signature+0x730>
    e10d:	mov    rax,QWORD PTR [rsp+0x110]
    e115:	mov    r13,QWORD PTR [rsp+0x28]
    e11a:	mov    r15,QWORD PTR [rsp+0x10]
    e11f:	cmp    rax,0xffffff
    e125:	je     e145 <test_signature+0x7a5>
    e127:	mov    rdx,QWORD PTR [rsp+0x50]
    e12c:	jmp    e140 <test_signature+0x7a0>
    e12e:	xchg   ax,ax
    e130:	add    r13,0x1
    e134:	mov    rax,QWORD PTR [r15+r13*8]
    e138:	cmp    rax,0xffffff
    e13e:	je     e145 <test_signature+0x7a5>
    e140:	cmp    rdx,rax
    e143:	jne    e130 <test_signature+0x790>
    e145:	mov    QWORD PTR [rsp+0x70],rax
    e14a:	lea    rax,[rsp+0x68]
    e14f:	mov    r15,QWORD PTR [rsp+0x30]
    e154:	mov    ebx,0x1
    e159:	mov    QWORD PTR [rsp+0x18],rax
    e15e:	mov    DWORD PTR [rsp+0x28],r12d
    e163:	jmp    e284 <test_signature+0x8e4>
    e168:	nop    DWORD PTR [rax+rax*1+0x0]
    e170:	mov    rsi,QWORD PTR [rsp+0x48]
    e175:	mov    rdi,rbp
    e178:	call   bed0 <getSIGN>
    e17d:	test   al,al
    e17f:	je     e32e <test_signature+0x98e>
    e185:	mov    rdx,QWORD PTR [rsp+0x18]
    e18a:	mov    rsi,QWORD PTR [rsp+0x48]
    e18f:	mov    rdi,rbp
    e192:	call   bd10 <getID>
    e197:	mov    r14,rax
    e19a:	test   rax,rax
    e19d:	je     e37c <test_signature+0x9dc>
    e1a3:	mov    r8,QWORD PTR [rsp+0x68]
    e1a8:	lea    rdx,[rsp+0x40]
    e1ad:	xor    r9d,r9d
    e1b0:	mov    rcx,rax
    e1b3:	mov    esi,0x2
    e1b8:	mov    rdi,rbp
    e1bb:	call   b100 <find_object>
    e1c0:	mov    rdi,r14
    e1c3:	mov    DWORD PTR [rsp+0x10],eax
    e1c7:	call   5590 <free@plt>
    e1cc:	mov    eax,DWORD PTR [rsp+0x10]
    e1d0:	test   eax,eax
    e1d2:	je     e349 <test_signature+0x9a9>
    e1d8:	mov    rsi,QWORD PTR [rsp+0x48]
    e1dd:	mov    rdi,rbp
    e1e0:	call   c110 <get_private_key_length>
    e1e5:	lea    r14,[rax+0x7]
    e1e9:	cmp    r14,0x7
    e1ed:	jbe    e35a <test_signature+0x9ba>
    e1f3:	mov    edi,0xa
    e1f8:	shr    r14,0x3
    e1fc:	call   55a0 <putchar@plt>
    e201:	mov    rdi,QWORD PTR [rsp+0x38]
    e206:	lea    rdx,[r14-0x26]
    e20a:	mov    ecx,0x1fe
    e20f:	mov    WORD PTR [rsp+0x1c0],0x100
    e219:	mov    esi,0xff
    e21e:	call   5980 <__memset_chk@plt>
    e223:	mov    rdx,QWORD PTR [rsp+0x8]
    e228:	mov    r9,r14
    e22b:	mov    BYTE PTR [rsp+r14*1+0x19c],0x0
    e234:	mov    ecx,0x23
    e239:	lea    rsi,[rip+0x10448]        # 1e688 <_IO_stdin_used+0x7688>
    e240:	mov    QWORD PTR [rsp+0xe0],r14
    e248:	mov    r8,QWORD PTR [rsp+r13*8+0xe0]
    e250:	lea    rax,[rdx+r14*1-0x23]
    e255:	mov    QWORD PTR [rsp+0xb0],rdx
    e25d:	mov    rdx,QWORD PTR [rsp+0x48]
    e262:	mov    rdi,rax
    e265:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    e267:	mov    rcx,QWORD PTR [rsp+r13*8+0xb0]
    e26f:	mov    rsi,QWORD PTR [rsp+0x20]
    e274:	mov    rdi,rbp
    e277:	call   c1f0 <sign_verify_openssl.isra.0>
    e27c:	add    DWORD PTR [rsp+0x28],eax
    e280:	add    rbx,0x1
    e284:	xor    r8d,r8d
    e287:	xor    ecx,ecx
    e289:	mov    r9d,ebx
    e28c:	mov    rdx,r15
    e28f:	mov    esi,0x3
    e294:	mov    rdi,rbp
    e297:	mov    r14d,ebx
    e29a:	call   b100 <find_object>
    e29f:	test   eax,eax
    e2a1:	je     e33f <test_signature+0x99f>
    e2a7:	mov    edx,ebx
    e2a9:	lea    rsi,[rip+0x9c4d]        # 17efd <_IO_stdin_used+0xefd>
    e2b0:	mov    edi,0x1
    e2b5:	xor    eax,eax
    e2b7:	call   58a0 <__printf_chk@plt>
    e2bc:	mov    rsi,QWORD PTR [rsp+0x48]
    e2c1:	mov    rdi,rbp
    e2c4:	call   d880 <getLABEL.constprop.0>
    e2c9:	mov    r12,rax
    e2cc:	test   rax,rax
    e2cf:	je     e2ef <test_signature+0x94f>
    e2d1:	mov    rdx,rax
    e2d4:	mov    edi,0x1
    e2d9:	lea    rsi,[rip+0x9c2e]        # 17f0e <_IO_stdin_used+0xf0e>
    e2e0:	xor    eax,eax
    e2e2:	call   58a0 <__printf_chk@plt>
    e2e7:	mov    rdi,r12
    e2ea:	call   5590 <free@plt>
    e2ef:	test   r14d,r14d
    e2f2:	je     e307 <test_signature+0x967>
    e2f4:	lea    rsi,[rip+0x9c19]        # 17f14 <_IO_stdin_used+0xf14>
    e2fb:	mov    edi,0x1
    e300:	xor    eax,eax
    e302:	call   58a0 <__printf_chk@plt>
    e307:	mov    rsi,QWORD PTR [rsp+0x48]
    e30c:	mov    rdi,rbp
    e30f:	call   b3e0 <getKEY_TYPE>
    e314:	test   rax,rax
    e317:	je     e170 <test_signature+0x7d0>
    e31d:	lea    rdi,[rip+0x9baa]        # 17ece <_IO_stdin_used+0xece>
    e324:	call   5600 <puts@plt>
    e329:	jmp    e280 <test_signature+0x8e0>
    e32e:	lea    rdi,[rip+0xd2b3]        # 1b5e8 <_IO_stdin_used+0x45e8>
    e335:	call   5600 <puts@plt>
    e33a:	jmp    e280 <test_signature+0x8e0>
    e33f:	mov    r12d,DWORD PTR [rsp+0x28]
    e344:	jmp    dc90 <test_signature+0x2f0>
    e349:	lea    rdi,[rip+0xd2c8]        # 1b618 <_IO_stdin_used+0x4618>
    e350:	call   5600 <puts@plt>
    e355:	jmp    e280 <test_signature+0x8e0>
    e35a:	lea    rdi,[rip+0xd32f]        # 1b690 <_IO_stdin_used+0x4690>
    e361:	call   5600 <puts@plt>
    e366:	jmp    e280 <test_signature+0x8e0>
    e36b:	lea    rdi,[rip+0xd056]        # 1b3c8 <_IO_stdin_used+0x43c8>
    e372:	call   5600 <puts@plt>
    e377:	jmp    dcc8 <test_signature+0x328>
    e37c:	lea    rdi,[rip+0xd2cd]        # 1b650 <_IO_stdin_used+0x4650>
    e383:	call   5600 <puts@plt>
    e388:	jmp    e280 <test_signature+0x8e0>
    e38d:	lea    rdi,[rsp+0x1c0]
    e395:	mov    ecx,0x23
    e39a:	lea    rsi,[rip+0x102e7]        # 1e688 <_IO_stdin_used+0x7688>
    e3a1:	mov    QWORD PTR [rsp+0x10],0x23
    e3aa:	mov    QWORD PTR [rsp+0x8],rdi
    e3af:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    e3b1:	jmp    dd3a <test_signature+0x39a>
    e3b6:	mov    r12d,DWORD PTR [rip+0x17abb]        # 25e78 <suppress_warn>
    e3bd:	test   r12d,r12d
    e3c0:	je     e4fe <test_signature+0xb5e>
    e3c6:	xor    r12d,r12d
    e3c9:	jmp    dece <test_signature+0x52e>
    e3ce:	mov    esi,0x2
    e3d3:	mov    rdi,rbp
    e3d6:	call   9820 <login>
    e3db:	jmp    dd89 <test_signature+0x3e9>
    e3e0:	mov    esi,0x2
    e3e5:	mov    rdi,rbp
    e3e8:	call   9820 <login>
    e3ed:	jmp    dfaa <test_signature+0x60a>
    e3f2:	mov    rdi,rax
    e3f5:	add    r12d,0x1
    e3f9:	call   8e50 <CKR2Str>
    e3fe:	lea    rsi,[rip+0xd143]        # 1b548 <_IO_stdin_used+0x4548>
    e405:	mov    edi,0x1
    e40a:	mov    rdx,rax
    e40d:	xor    eax,eax
    e40f:	call   58a0 <__printf_chk@plt>
    e414:	jmp    df95 <test_signature+0x5f5>
    e419:	mov    rcx,QWORD PTR [rip+0x171c0]        # 255e0 <stderr@@GLIBC_2.2.5>
    e420:	mov    edx,0x2e
    e425:	mov    esi,0x1
    e42a:	xor    r12d,r12d
    e42d:	lea    rdi,[rip+0xcfd4]        # 1b408 <_IO_stdin_used+0x4408>
    e434:	call   59a0 <fwrite@plt>
    e439:	jmp    dc90 <test_signature+0x2f0>
    e43e:	xor    r12d,r12d
    e441:	jmp    dc90 <test_signature+0x2f0>
    e446:	lea    rax,[rsp+0x1c0]
    e44e:	mov    QWORD PTR [rsp+0x10],0x0
    e457:	mov    QWORD PTR [rsp+0x8],rax
    e45c:	mov    rdi,QWORD PTR [rsp+0x8]
    e461:	xor    eax,eax
    e463:	mov    ecx,0xb
    e468:	rep stos BYTE PTR es:[rdi],al
    e46a:	mov    eax,0x3
    e46f:	jmp    dd3a <test_signature+0x39a>
    e474:	mov    r15,QWORD PTR [rsp+0x8]
    e479:	mov    rbx,QWORD PTR [rsp+0x10]
    e47e:	jmp    dc21 <test_signature+0x281>
    e483:	mov    rdi,r12
    e486:	mov    rsi,r13
    e489:	call   5750 <memcmp@plt>
    e48e:	mov    r12d,eax
    e491:	test   eax,eax
    e493:	je     e4db <test_signature+0xb3b>
    e495:	lea    rdi,[rip+0xcfec]        # 1b488 <_IO_stdin_used+0x4488>
    e49c:	mov    r12d,0x1
    e4a2:	call   5600 <puts@plt>
    e4a7:	jmp    dece <test_signature+0x52e>
    e4ac:	mov    rsi,rax
    e4af:	lea    rdi,[rip+0x9a2e]        # 17ee4 <_IO_stdin_used+0xee4>
    e4b6:	mov    r12d,0x1
    e4bc:	call   9bb0 <p11_perror>
    e4c1:	jmp    dece <test_signature+0x52e>
    e4c6:	lea    rdi,[rip+0xd0cb]        # 1b598 <_IO_stdin_used+0x4598>
    e4cd:	add    r12d,0x1
    e4d1:	call   5600 <puts@plt>
    e4d6:	jmp    dfe3 <test_signature+0x643>
    e4db:	lea    rdi,[rip+0xcfee]        # 1b4d0 <_IO_stdin_used+0x44d0>
    e4e2:	call   5600 <puts@plt>
    e4e7:	jmp    dece <test_signature+0x52e>
    e4ec:	mov    esi,0x2
    e4f1:	mov    rdi,rbp
    e4f4:	call   9820 <login>
    e4f9:	jmp    de70 <test_signature+0x4d0>
    e4fe:	mov    esi,0x54
    e503:	lea    rdi,[rip+0x99da]        # 17ee4 <_IO_stdin_used+0xee4>
    e50a:	call   b310 <p11_warn.part.0>
    e50f:	jmp    dece <test_signature+0x52e>
    e514:	mov    rsi,rax
    e517:	lea    rdi,[rip+0x97cb]        # 17ce9 <_IO_stdin_used+0xce9>
    e51e:	call   9140 <p11_fatal>
    e523:	call   5690 <__stack_chk_fail@plt>
    e528:	mov    rsi,rax
    e52b:	lea    rdi,[rip+0x9547]        # 17a79 <_IO_stdin_used+0xa79>
    e532:	call   9140 <p11_fatal>
    e537:	mov    rsi,rax
    e53a:	lea    rdi,[rip+0x95b4]        # 17af5 <_IO_stdin_used+0xaf5>
    e541:	call   9140 <p11_fatal>
    e546:	mov    rsi,rax
    e549:	lea    rdi,[rip+0x9799]        # 17ce9 <_IO_stdin_used+0xce9>
    e550:	call   9140 <p11_fatal>
    e555:	mov    rsi,rax
    e558:	lea    rdi,[rip+0x9992]        # 17ef1 <_IO_stdin_used+0xef1>
    e55f:	call   9140 <p11_fatal>
    e564:	mov    rsi,rax
    e567:	lea    rdi,[rip+0x9976]        # 17ee4 <_IO_stdin_used+0xee4>
    e56e:	call   9140 <p11_fatal>
    e573:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    e57e:	xchg   ax,ax

000000000000e580 <show_dobj>:
    e580:	push   r15
    e582:	mov    edx,esi
    e584:	push   r14
    e586:	push   r13
    e588:	push   r12
    e58a:	mov    r12,rdi
    e58d:	mov    edi,0x1
    e592:	push   rbp
    e593:	mov    rbp,rsi
    e596:	lea    rsi,[rip+0x9989]        # 17f26 <_IO_stdin_used+0xf26>
    e59d:	push   rbx
    e59e:	sub    rsp,0x78
    e5a2:	mov    rax,QWORD PTR fs:0x28
    e5ab:	mov    QWORD PTR [rsp+0x68],rax
    e5b0:	xor    eax,eax
    e5b2:	mov    DWORD PTR [rip+0x178bc],0x1        # 25e78 <suppress_warn>
    e5bc:	call   58a0 <__printf_chk@plt>
    e5c1:	lea    rsi,[rip+0x996e]        # 17f36 <_IO_stdin_used+0xf36>
    e5c8:	mov    edi,0x1
    e5cd:	xor    eax,eax
    e5cf:	call   58a0 <__printf_chk@plt>
    e5d4:	mov    rsi,rbp
    e5d7:	mov    rdi,r12
    e5da:	call   d880 <getLABEL.constprop.0>
    e5df:	test   rax,rax
    e5e2:	je     e9c0 <show_dobj+0x440>
    e5e8:	mov    r13,rax
    e5eb:	mov    rdx,rax
    e5ee:	xor    eax,eax
    e5f0:	mov    edi,0x1
    e5f5:	lea    rsi,[rip+0x994d]        # 17f49 <_IO_stdin_used+0xf49>
    e5fc:	call   58a0 <__printf_chk@plt>
    e601:	mov    rdi,r13
    e604:	call   5590 <free@plt>
    e609:	lea    rsi,[rip+0x9947]        # 17f57 <_IO_stdin_used+0xf57>
    e610:	mov    edi,0x1
    e615:	xor    eax,eax
    e617:	mov    r13,rsp
    e61a:	call   58a0 <__printf_chk@plt>
    e61f:	mov    ecx,0x1
    e624:	mov    rdx,r13
    e627:	mov    rsi,rbp
    e62a:	mov    rax,QWORD PTR [rip+0x1785f]        # 25e90 <p11>
    e631:	mov    rdi,r12
    e634:	mov    QWORD PTR [rsp],0x10
    e63c:	mov    QWORD PTR [rsp+0x8],0x0
    e645:	mov    QWORD PTR [rsp+0x10],0x0
    e64e:	call   QWORD PTR [rax+0xc8]
    e654:	test   rax,rax
    e657:	jne    e8f0 <show_dobj+0x370>
    e65d:	mov    rsi,QWORD PTR [rsp+0x10]
    e662:	cmp    rsi,0xffffffffffffffff
    e666:	je     e8b0 <show_dobj+0x330>
    e66c:	add    rsi,0x1
    e670:	mov    edi,0x1
    e675:	call   5790 <calloc@plt>
    e67a:	mov    QWORD PTR [rsp+0x8],rax
    e67f:	test   rax,rax
    e682:	je     e9e2 <show_dobj+0x462>
    e688:	mov    rax,QWORD PTR [rip+0x17801]        # 25e90 <p11>
    e68f:	mov    rdx,r13
    e692:	mov    rsi,rbp
    e695:	mov    rdi,r12
    e698:	mov    ecx,0x1
    e69d:	call   QWORD PTR [rax+0xc8]
    e6a3:	cmp    QWORD PTR [rsp+0x10],0xffffffffffffffff
    e6a9:	je     e8a0 <show_dobj+0x320>
    e6af:	mov    r14,QWORD PTR [rsp+0x8]
    e6b4:	test   r14,r14
    e6b7:	je     e8b0 <show_dobj+0x330>
    e6bd:	mov    edi,0x1
    e6c2:	mov    rdx,r14
    e6c5:	lea    rsi,[rip+0x987d]        # 17f49 <_IO_stdin_used+0xf49>
    e6cc:	xor    eax,eax
    e6ce:	call   58a0 <__printf_chk@plt>
    e6d3:	mov    rdi,r14
    e6d6:	call   5590 <free@plt>
    e6db:	lea    rsi,[rip+0x9888]        # 17f6a <_IO_stdin_used+0xf6a>
    e6e2:	mov    edi,0x1
    e6e7:	xor    eax,eax
    e6e9:	call   58a0 <__printf_chk@plt>
    e6ee:	mov    ecx,0x1
    e6f3:	mov    rdx,r13
    e6f6:	mov    rsi,rbp
    e6f9:	mov    rax,QWORD PTR [rip+0x17790]        # 25e90 <p11>
    e700:	mov    rdi,r12
    e703:	mov    QWORD PTR [rsp],0x12
    e70b:	mov    QWORD PTR [rsp+0x8],0x0
    e714:	mov    QWORD PTR [rsp+0x10],0x0
    e71d:	call   QWORD PTR [rax+0xc8]
    e723:	test   rax,rax
    e726:	jne    e920 <show_dobj+0x3a0>
    e72c:	mov    rsi,QWORD PTR [rsp+0x10]
    e731:	cmp    rsi,0xffffffffffffffff
    e735:	je     e8d8 <show_dobj+0x358>
    e73b:	add    rsi,0x1
    e73f:	mov    edi,0x1
    e744:	call   5790 <calloc@plt>
    e749:	mov    QWORD PTR [rsp+0x8],rax
    e74e:	test   rax,rax
    e751:	je     e9d6 <show_dobj+0x456>
    e757:	mov    rax,QWORD PTR [rip+0x17732]        # 25e90 <p11>
    e75e:	mov    rdx,r13
    e761:	mov    rsi,rbp
    e764:	mov    rdi,r12
    e767:	mov    ecx,0x1
    e76c:	call   QWORD PTR [rax+0xc8]
    e772:	mov    r13,QWORD PTR [rsp+0x10]
    e777:	cmp    r13,0xffffffffffffffff
    e77b:	je     e8c8 <show_dobj+0x348>
    e781:	mov    r15,QWORD PTR [rsp+0x8]
    e786:	test   r13,r13
    e789:	je     e8d8 <show_dobj+0x358>
    e78f:	test   r15,r15
    e792:	je     e8d8 <show_dobj+0x358>
    e798:	lea    r14,[rsp+0x20]
    e79d:	mov    rdi,r14
    e7a0:	call   57f0 <sc_init_oid@plt>
    e7a5:	mov    rdx,r14
    e7a8:	mov    rsi,r13
    e7ab:	mov    rdi,r15
    e7ae:	call   5710 <sc_asn1_decode_object_id@plt>
    e7b3:	mov    edx,DWORD PTR [rsp+0x20]
    e7b7:	mov    edi,0x1
    e7bc:	xor    eax,eax
    e7be:	lea    rsi,[rip+0x9910]        # 180d5 <_IO_stdin_used+0x10d5>
    e7c5:	call   58a0 <__printf_chk@plt>
    e7ca:	mov    eax,DWORD PTR [rsp+0x20]
    e7ce:	test   eax,eax
    e7d0:	js     e808 <show_dobj+0x288>
    e7d2:	lea    r13,[rsp+0x24]
    e7d7:	lea    r14,[rsp+0x60]
    e7dc:	lea    rbx,[rip+0x979a]        # 17f7d <_IO_stdin_used+0xf7d>
    e7e3:	nop    DWORD PTR [rax+rax*1+0x0]
    e7e8:	mov    edx,DWORD PTR [r13+0x0]
    e7ec:	test   edx,edx
    e7ee:	js     e808 <show_dobj+0x288>
    e7f0:	mov    rsi,rbx
    e7f3:	mov    edi,0x1
    e7f8:	xor    eax,eax
    e7fa:	add    r13,0x4
    e7fe:	call   58a0 <__printf_chk@plt>
    e803:	cmp    r14,r13
    e806:	jne    e7e8 <show_dobj+0x268>
    e808:	mov    edi,0xa
    e80d:	call   55a0 <putchar@plt>
    e812:	mov    rdi,r15
    e815:	call   5590 <free@plt>
    e81a:	lea    rsi,[rip+0x9760]        # 17f81 <_IO_stdin_used+0xf81>
    e821:	mov    edi,0x1
    e826:	xor    eax,eax
    e828:	call   58a0 <__printf_chk@plt>
    e82d:	mov    rsi,rbp
    e830:	mov    rdi,r12
    e833:	call   bff0 <getMODIFIABLE>
    e838:	test   al,al
    e83a:	jne    e9a0 <show_dobj+0x420>
    e840:	mov    rsi,rbp
    e843:	mov    rdi,r12
    e846:	call   c080 <getPRIVATE>
    e84b:	test   al,al
    e84d:	jne    e980 <show_dobj+0x400>
    e853:	mov    rsi,rbp
    e856:	mov    rdi,r12
    e859:	call   bff0 <getMODIFIABLE>
    e85e:	test   al,al
    e860:	je     e950 <show_dobj+0x3d0>
    e866:	mov    edi,0xa
    e86b:	call   55a0 <putchar@plt>
    e870:	mov    DWORD PTR [rip+0x175fe],0x0        # 25e78 <suppress_warn>
    e87a:	mov    rax,QWORD PTR [rsp+0x68]
    e87f:	xor    rax,QWORD PTR fs:0x28
    e888:	jne    e9d1 <show_dobj+0x451>
    e88e:	add    rsp,0x78
    e892:	pop    rbx
    e893:	pop    rbp
    e894:	pop    r12
    e896:	pop    r13
    e898:	pop    r14
    e89a:	pop    r15
    e89c:	ret    
    e89d:	nop    DWORD PTR [rax]
    e8a0:	mov    rdi,QWORD PTR [rsp+0x8]
    e8a5:	call   5590 <free@plt>
    e8aa:	nop    WORD PTR [rax+rax*1+0x0]
    e8b0:	lea    rdi,[rip+0x9698]        # 17f4f <_IO_stdin_used+0xf4f>
    e8b7:	call   5600 <puts@plt>
    e8bc:	jmp    e6db <show_dobj+0x15b>
    e8c1:	nop    DWORD PTR [rax+0x0]
    e8c8:	mov    rdi,QWORD PTR [rsp+0x8]
    e8cd:	call   5590 <free@plt>
    e8d2:	nop    WORD PTR [rax+rax*1+0x0]
    e8d8:	lea    rdi,[rip+0x9670]        # 17f4f <_IO_stdin_used+0xf4f>
    e8df:	call   5600 <puts@plt>
    e8e4:	jmp    e81a <show_dobj+0x29a>
    e8e9:	nop    DWORD PTR [rax+0x0]
    e8f0:	cmp    rax,0x12
    e8f4:	je     e6af <show_dobj+0x12f>
    e8fa:	mov    ecx,DWORD PTR [rip+0x17578]        # 25e78 <suppress_warn>
    e900:	test   ecx,ecx
    e902:	jne    e6af <show_dobj+0x12f>
    e908:	mov    rsi,rax
    e90b:	lea    rdi,[rip+0xcdee]        # 1b700 <_IO_stdin_used+0x4700>
    e912:	call   b310 <p11_warn.part.0>
    e917:	jmp    e6af <show_dobj+0x12f>
    e91c:	nop    DWORD PTR [rax+0x0]
    e920:	cmp    rax,0x12
    e924:	je     e8d8 <show_dobj+0x358>
    e926:	mov    edx,DWORD PTR [rip+0x1754c]        # 25e78 <suppress_warn>
    e92c:	test   edx,edx
    e92e:	jne    e8d8 <show_dobj+0x358>
    e930:	mov    rsi,rax
    e933:	lea    rdi,[rip+0xce16]        # 1b750 <_IO_stdin_used+0x4750>
    e93a:	call   b310 <p11_warn.part.0>
    e93f:	lea    rdi,[rip+0x9609]        # 17f4f <_IO_stdin_used+0xf4f>
    e946:	call   5600 <puts@plt>
    e94b:	jmp    e81a <show_dobj+0x29a>
    e950:	mov    rsi,rbp
    e953:	mov    rdi,r12
    e956:	call   c080 <getPRIVATE>
    e95b:	test   al,al
    e95d:	jne    e866 <show_dobj+0x2e6>
    e963:	lea    rsi,[rip+0x95e5]        # 17f4f <_IO_stdin_used+0xf4f>
    e96a:	mov    edi,0x1
    e96f:	call   58a0 <__printf_chk@plt>
    e974:	jmp    e866 <show_dobj+0x2e6>
    e979:	nop    DWORD PTR [rax+0x0]
    e980:	lea    rsi,[rip+0x9619]        # 17fa0 <_IO_stdin_used+0xfa0>
    e987:	mov    edi,0x1
    e98c:	xor    eax,eax
    e98e:	call   58a0 <__printf_chk@plt>
    e993:	jmp    e853 <show_dobj+0x2d3>
    e998:	nop    DWORD PTR [rax+rax*1+0x0]
    e9a0:	lea    rsi,[rip+0x95ed]        # 17f94 <_IO_stdin_used+0xf94>
    e9a7:	mov    edi,0x1
    e9ac:	xor    eax,eax
    e9ae:	call   58a0 <__printf_chk@plt>
    e9b3:	jmp    e840 <show_dobj+0x2c0>
    e9b8:	nop    DWORD PTR [rax+rax*1+0x0]
    e9c0:	lea    rdi,[rip+0x9588]        # 17f4f <_IO_stdin_used+0xf4f>
    e9c7:	call   5600 <puts@plt>
    e9cc:	jmp    e609 <show_dobj+0x89>
    e9d1:	call   5690 <__stack_chk_fail@plt>
    e9d6:	lea    rdi,[rip+0xcd4b]        # 1b728 <_IO_stdin_used+0x4728>
    e9dd:	call   15f90 <util_fatal>
    e9e2:	lea    rdi,[rip+0xccef]        # 1b6d8 <_IO_stdin_used+0x46d8>
    e9e9:	call   15f90 <util_fatal>
    e9ee:	xchg   ax,ax

000000000000e9f0 <show_object>:
    e9f0:	push   r15
    e9f2:	push   r14
    e9f4:	push   r13
    e9f6:	push   r12
    e9f8:	mov    r12,rdi
    e9fb:	push   rbp
    e9fc:	mov    rbp,rsi
    e9ff:	push   rbx
    ea00:	sub    rsp,0xb8
    ea07:	mov    rax,QWORD PTR fs:0x28
    ea10:	mov    QWORD PTR [rsp+0xa8],rax
    ea18:	xor    eax,eax
    ea1a:	call   b340 <getCLASS>
    ea1f:	cmp    rax,0x4
    ea23:	ja     eba0 <show_object+0x1b0>
    ea29:	cmp    rax,0x1
    ea2d:	ja     ece0 <show_object+0x2f0>
    ea33:	test   rax,rax
    ea36:	je     ecd0 <show_object+0x2e0>
    ea3c:	lea    rax,[rsp+0x38]
    ea41:	lea    r13,[rsp+0x40]
    ea46:	mov    rsi,rbp
    ea49:	mov    rdi,r12
    ea4c:	mov    QWORD PTR [rsp+0x48],rax
    ea51:	mov    rax,QWORD PTR [rip+0x17438]        # 25e90 <p11>
    ea58:	mov    rdx,r13
    ea5b:	mov    ecx,0x1
    ea60:	mov    QWORD PTR [rsp+0x38],0x0
    ea69:	mov    QWORD PTR [rsp+0x40],0x80
    ea72:	mov    QWORD PTR [rsp+0x50],0x8
    ea7b:	call   QWORD PTR [rax+0xc8]
    ea81:	test   rax,rax
    ea84:	je     ea94 <show_object+0xa4>
    ea86:	mov    ecx,DWORD PTR [rip+0x173ec]        # 25e78 <suppress_warn>
    ea8c:	test   ecx,ecx
    ea8e:	je     f798 <show_object+0xda8>
    ea94:	mov    rbx,QWORD PTR [rsp+0x38]
    ea99:	xor    eax,eax
    ea9b:	mov    edi,0x1
    eaa0:	lea    rsi,[rip+0x9846]        # 182ed <_IO_stdin_used+0x12ed>
    eaa7:	call   58a0 <__printf_chk@plt>
    eaac:	cmp    rbx,0x1
    eab0:	je     f540 <show_object+0xb50>
    eab6:	mov    eax,0x80000000
    eabb:	cmp    rbx,rax
    eabe:	je     ed80 <show_object+0x390>
    eac4:	test   rbx,rbx
    eac7:	je     ed68 <show_object+0x378>
    eacd:	lea    rdi,[rip+0x9864]        # 18338 <_IO_stdin_used+0x1338>
    ead4:	call   5600 <puts@plt>
    ead9:	mov    rsi,rbp
    eadc:	mov    rdi,r12
    eadf:	call   d880 <getLABEL.constprop.0>
    eae4:	mov    r14,rax
    eae7:	test   rax,rax
    eaea:	je     eb0a <show_object+0x11a>
    eaec:	mov    rdx,rax
    eaef:	mov    edi,0x1
    eaf4:	lea    rsi,[rip+0x9643]        # 1813e <_IO_stdin_used+0x113e>
    eafb:	xor    eax,eax
    eafd:	call   58a0 <__printf_chk@plt>
    eb02:	mov    rdi,r14
    eb05:	call   5590 <free@plt>
    eb0a:	mov    rsi,rbp
    eb0d:	mov    rdx,r13
    eb10:	mov    rdi,r12
    eb13:	call   bd10 <getID>
    eb18:	mov    rbp,rax
    eb1b:	test   rax,rax
    eb1e:	je     eca0 <show_object+0x2b0>
    eb24:	cmp    QWORD PTR [rsp+0x40],0x0
    eb2a:	je     eca0 <show_object+0x2b0>
    eb30:	xor    eax,eax
    eb32:	lea    rsi,[rip+0x9617]        # 18150 <_IO_stdin_used+0x1150>
    eb39:	mov    edi,0x1
    eb3e:	xor    ebx,ebx
    eb40:	call   58a0 <__printf_chk@plt>
    eb45:	xor    eax,eax
    eb47:	cmp    QWORD PTR [rsp+0x40],0x0
    eb4d:	lea    r12,[rip+0x9508]        # 1805c <_IO_stdin_used+0x105c>
    eb54:	je     eb81 <show_object+0x191>
    eb56:	cs nop WORD PTR [rax+rax*1+0x0]
    eb60:	movzx  edx,BYTE PTR [rbp+rax*1+0x0]
    eb65:	mov    rsi,r12
    eb68:	mov    edi,0x1
    eb6d:	xor    eax,eax
    eb6f:	call   58a0 <__printf_chk@plt>
    eb74:	lea    eax,[rbx+0x1]
    eb77:	mov    rbx,rax
    eb7a:	cmp    rax,QWORD PTR [rsp+0x40]
    eb7f:	jb     eb60 <show_object+0x170>
    eb81:	mov    edi,0xa
    eb86:	call   55a0 <putchar@plt>
    eb8b:	mov    rdi,rbp
    eb8e:	call   5590 <free@plt>
    eb93:	jmp    eca0 <show_object+0x2b0>
    eb98:	nop    DWORD PTR [rax+rax*1+0x0]
    eba0:	cmp    rax,0x9
    eba4:	jne    ec80 <show_object+0x290>
    ebaa:	mov    edx,ebp
    ebac:	lea    rsi,[rip+0x9797]        # 1834a <_IO_stdin_used+0x134a>
    ebb3:	mov    edi,0x1
    ebb8:	xor    eax,eax
    ebba:	call   58a0 <__printf_chk@plt>
    ebbf:	lea    rsi,[rip+0x9797]        # 1835d <_IO_stdin_used+0x135d>
    ebc6:	mov    edi,0x1
    ebcb:	xor    eax,eax
    ebcd:	call   58a0 <__printf_chk@plt>
    ebd2:	lea    rax,[rsp+0x38]
    ebd7:	mov    rsi,rbp
    ebda:	mov    rdi,r12
    ebdd:	mov    QWORD PTR [rsp+0x48],rax
    ebe2:	mov    rax,QWORD PTR [rip+0x172a7]        # 25e90 <p11>
    ebe9:	lea    rdx,[rsp+0x40]
    ebee:	mov    ecx,0x1
    ebf3:	mov    QWORD PTR [rsp+0x38],0x0
    ebfc:	mov    QWORD PTR [rsp+0x40],0x601
    ec05:	mov    QWORD PTR [rsp+0x50],0x8
    ec0e:	call   QWORD PTR [rax+0xc8]
    ec14:	test   rax,rax
    ec17:	je     ec27 <show_object+0x237>
    ec19:	mov    edx,DWORD PTR [rip+0x17259]        # 25e78 <suppress_warn>
    ec1f:	test   edx,edx
    ec21:	je     f7b0 <show_object+0xdc0>
    ec27:	mov    r12,QWORD PTR [rsp+0x38]
    ec2c:	test   r12,r12
    ec2f:	je     ed50 <show_object+0x360>
    ec35:	mov    rdx,QWORD PTR [rip+0x1458c]        # 231c8 <p11_profile+0x8>
    ec3c:	test   rdx,rdx
    ec3f:	je     f5c8 <show_object+0xbd8>
    ec45:	lea    rax,[rip+0x14574]        # 231c0 <p11_profile>
    ec4c:	jmp    ec61 <show_object+0x271>
    ec4e:	xchg   ax,ax
    ec50:	mov    rdx,QWORD PTR [rax+0x28]
    ec54:	add    rax,0x20
    ec58:	test   rdx,rdx
    ec5b:	je     f5c8 <show_object+0xbd8>
    ec61:	cmp    r12,QWORD PTR [rax]
    ec64:	jne    ec50 <show_object+0x260>
    ec66:	mov    rcx,r12
    ec69:	lea    rsi,[rip+0x9713]        # 18383 <_IO_stdin_used+0x1383>
    ec70:	mov    edi,0x1
    ec75:	xor    eax,eax
    ec77:	call   58a0 <__printf_chk@plt>
    ec7c:	jmp    eca0 <show_object+0x2b0>
    ec7e:	xchg   ax,ax
    ec80:	mov    ecx,eax
    ec82:	mov    edx,ebp
    ec84:	lea    rsi,[rip+0x9702]        # 1838d <_IO_stdin_used+0x138d>
    ec8b:	mov    edi,0x1
    ec90:	xor    eax,eax
    ec92:	call   58a0 <__printf_chk@plt>
    ec97:	nop    WORD PTR [rax+rax*1+0x0]
    eca0:	mov    rax,QWORD PTR [rsp+0xa8]
    eca8:	xor    rax,QWORD PTR fs:0x28
    ecb1:	jne    10552 <show_object+0x1b62>
    ecb7:	add    rsp,0xb8
    ecbe:	pop    rbx
    ecbf:	pop    rbp
    ecc0:	pop    r12
    ecc2:	pop    r13
    ecc4:	pop    r14
    ecc6:	pop    r15
    ecc8:	ret    
    ecc9:	nop    DWORD PTR [rax+0x0]
    ecd0:	mov    rsi,rbp
    ecd3:	mov    rdi,r12
    ecd6:	call   e580 <show_dobj>
    ecdb:	jmp    eca0 <show_object+0x2b0>
    ecdd:	nop    DWORD PTR [rax]
    ece0:	mov    rsi,rbp
    ece3:	mov    rdi,r12
    ece6:	call   b3e0 <getKEY_TYPE>
    eceb:	mov    rsi,rbp
    ecee:	mov    rdi,r12
    ecf1:	mov    QWORD PTR [rsp+0x30],0x0
    ecfa:	mov    r13,rax
    ecfd:	call   b340 <getCLASS>
    ed02:	cmp    rax,0x3
    ed06:	je     f558 <show_object+0xb68>
    ed0c:	cmp    rax,0x4
    ed10:	je     ed98 <show_object+0x3a8>
    ed16:	cmp    rax,0x2
    ed1a:	jne    eca0 <show_object+0x2b0>
    ed1c:	xor    eax,eax
    ed1e:	lea    rsi,[rip+0x9299]        # 17fbe <_IO_stdin_used+0xfbe>
    ed25:	mov    edi,0x1
    ed2a:	call   58a0 <__printf_chk@plt>
    ed2f:	cmp    r13,0x41
    ed33:	ja     ee86 <show_object+0x496>
    ed39:	lea    rdx,[rip+0xf978]        # 1e6b8 <_IO_stdin_used+0x76b8>
    ed40:	movsxd rax,DWORD PTR [rdx+r13*4]
    ed44:	add    rax,rdx
    ed47:	notrack jmp rax
    ed4a:	nop    WORD PTR [rax+rax*1+0x0]
    ed50:	lea    rdi,[rip+0x91f8]        # 17f4f <_IO_stdin_used+0xf4f>
    ed57:	call   5600 <puts@plt>
    ed5c:	jmp    eca0 <show_object+0x2b0>
    ed61:	nop    DWORD PTR [rax+0x0]
    ed68:	lea    rdi,[rip+0x959a]        # 18309 <_IO_stdin_used+0x1309>
    ed6f:	call   5600 <puts@plt>
    ed74:	jmp    ead9 <show_object+0xe9>
    ed79:	nop    DWORD PTR [rax+0x0]
    ed80:	lea    rdi,[rip+0x95a2]        # 18329 <_IO_stdin_used+0x1329>
    ed87:	call   5600 <puts@plt>
    ed8c:	jmp    ead9 <show_object+0xe9>
    ed91:	nop    DWORD PTR [rax+0x0]
    ed98:	xor    eax,eax
    ed9a:	lea    rsi,[rip+0x922f]        # 17fd0 <_IO_stdin_used+0xfd0>
    eda1:	mov    edi,0x1
    eda6:	call   58a0 <__printf_chk@plt>
    edab:	cmp    r13,0x41
    edaf:	ja     f4f0 <show_object+0xb00>
    edb5:	lea    rdx,[rip+0xfa04]        # 1e7c0 <_IO_stdin_used+0x77c0>
    edbc:	movsxd rax,DWORD PTR [rdx+r13*4]
    edc0:	add    rax,rdx
    edc3:	notrack jmp rax
    edc6:	mov    r14d,0x1
    edcc:	xor    r15d,r15d
    edcf:	cmp    r13,0x40
    edd3:	je     f857 <show_object+0xe67>
    edd9:	lea    rsi,[rip+0x92ad]        # 1808d <_IO_stdin_used+0x108d>
    ede0:	mov    edi,0x1
    ede5:	xor    eax,eax
    ede7:	call   58a0 <__printf_chk@plt>
    edec:	test   r14d,r14d
    edef:	je     10050 <show_object+0x1660>
    edf5:	lea    rdx,[rsp+0x30]
    edfa:	mov    rsi,rbp
    edfd:	mov    rdi,r12
    ee00:	mov    QWORD PTR [rsp+0x10],rdx
    ee05:	call   b520 <getEC_POINT>
    ee0a:	mov    edx,0xff
    ee0f:	mov    edi,0x1
    ee14:	lea    rsi,[rip+0x9282]        # 1809d <_IO_stdin_used+0x109d>
    ee1b:	mov    r13,rax
    ee1e:	xor    eax,eax
    ee20:	call   58a0 <__printf_chk@plt>
    ee25:	test   r13,r13
    ee28:	je     ee3e <show_object+0x44e>
    ee2a:	cmp    QWORD PTR [rsp+0x30],0x0
    ee30:	jg     102f0 <show_object+0x1900>
    ee36:	mov    rdi,r13
    ee39:	call   5590 <free@plt>
    ee3e:	mov    rdx,QWORD PTR [rsp+0x10]
    ee43:	mov    rsi,rbp
    ee46:	mov    rdi,r12
    ee49:	call   b650 <getEC_PARAMS>
    ee4e:	mov    r13,rax
    ee51:	test   rax,rax
    ee54:	je     ee6a <show_object+0x47a>
    ee56:	cmp    QWORD PTR [rsp+0x30],0x0
    ee5c:	jg     10402 <show_object+0x1a12>
    ee62:	mov    rdi,r13
    ee65:	call   5590 <free@plt>
    ee6a:	lea    rax,[rsp+0x38]
    ee6f:	mov    DWORD PTR [rsp+0x24],r14d
    ee74:	mov    ebx,r15d
    ee77:	lea    r13,[rsp+0x40]
    ee7c:	mov    QWORD PTR [rsp+0x8],rax
    ee81:	jmp    f22c <show_object+0x83c>
    ee86:	mov    eax,0xd4321003
    ee8b:	cmp    r13,rax
    ee8e:	jne    f1ed <show_object+0x7fd>
    ee94:	mov    r14d,0x1
    ee9a:	xor    r15d,r15d
    ee9d:	lea    r13,[rsp+0x40]
    eea2:	mov    ecx,0x1
    eea7:	mov    rsi,rbp
    eeaa:	mov    rdi,r12
    eead:	mov    rax,QWORD PTR [rip+0x16fdc]        # 25e90 <p11>
    eeb4:	mov    rdx,r13
    eeb7:	mov    QWORD PTR [rsp+0x40],0x251
    eec0:	mov    QWORD PTR [rsp+0x48],0x0
    eec9:	mov    QWORD PTR [rsp+0x50],0x0
    eed2:	mov    QWORD PTR [rsp+0x30],0x0
    eedb:	call   QWORD PTR [rax+0xc8]
    eee1:	test   rax,rax
    eee4:	je     f7f8 <show_object+0xe08>
    eeea:	cmp    rax,0x12
    eeee:	je     eefe <show_object+0x50e>
    eef0:	mov    ebx,DWORD PTR [rip+0x16f82]        # 25e78 <suppress_warn>
    eef6:	test   ebx,ebx
    eef8:	je     10481 <show_object+0x1a91>
    eefe:	mov    rbx,QWORD PTR [rsp+0x48]
    ef03:	test   rbx,rbx
    ef06:	je     1029c <show_object+0x18ac>
    ef0c:	mov    rax,QWORD PTR [rsp+0x30]
    ef11:	cmp    rax,0x9
    ef15:	je     101c1 <show_object+0x17d1>
    ef1b:	cmp    rax,0xa
    ef1f:	je     1020c <show_object+0x181c>
    ef25:	lea    rdi,[rip+0x9103]        # 1802f <_IO_stdin_used+0x102f>
    ef2c:	call   5600 <puts@plt>
    ef31:	mov    rdi,rbx
    ef34:	call   5590 <free@plt>
    ef39:	mov    rax,QWORD PTR [rip+0x16f50]        # 25e90 <p11>
    ef40:	mov    rdx,r13
    ef43:	mov    rsi,rbp
    ef46:	mov    rdi,r12
    ef49:	mov    QWORD PTR [rsp+0x40],0x250
    ef52:	mov    ecx,0x1
    ef57:	mov    QWORD PTR [rsp+0x48],0x0
    ef60:	mov    QWORD PTR [rsp+0x50],0x0
    ef69:	mov    QWORD PTR [rsp+0x30],0x0
    ef72:	call   QWORD PTR [rax+0xc8]
    ef78:	test   rax,rax
    ef7b:	jne    10020 <show_object+0x1630>
    ef81:	mov    rax,QWORD PTR [rsp+0x50]
    ef86:	cmp    rax,0xffffffffffffffff
    ef8a:	je     f04d <show_object+0x65d>
    ef90:	lea    rsi,[rax+0x1]
    ef94:	mov    edi,0x1
    ef99:	call   5790 <calloc@plt>
    ef9e:	mov    QWORD PTR [rsp+0x48],rax
    efa3:	test   rax,rax
    efa6:	je     10563 <show_object+0x1b73>
    efac:	mov    rax,QWORD PTR [rip+0x16edd]        # 25e90 <p11>
    efb3:	mov    rdx,r13
    efb6:	mov    rsi,rbp
    efb9:	mov    rdi,r12
    efbc:	mov    ecx,0x1
    efc1:	call   QWORD PTR [rax+0xc8]
    efc7:	mov    rax,QWORD PTR [rsp+0x50]
    efcc:	cmp    rax,0xffffffffffffffff
    efd0:	je     10543 <show_object+0x1b53>
    efd6:	mov    QWORD PTR [rsp+0x30],rax
    efdb:	mov    rax,QWORD PTR [rsp+0x48]
    efe0:	mov    QWORD PTR [rsp+0x8],rax
    efe5:	test   rax,rax
    efe8:	je     f04d <show_object+0x65d>
    efea:	xor    eax,eax
    efec:	lea    rsi,[rip+0x905a]        # 1804d <_IO_stdin_used+0x104d>
    eff3:	mov    edi,0x1
    eff8:	xor    ebx,ebx
    effa:	call   58a0 <__printf_chk@plt>
    efff:	xor    eax,eax
    f001:	cmp    QWORD PTR [rsp+0x30],0x0
    f007:	je     f039 <show_object+0x649>
    f009:	nop    DWORD PTR [rax+0x0]
    f010:	mov    rcx,QWORD PTR [rsp+0x8]
    f015:	lea    rsi,[rip+0x9040]        # 1805c <_IO_stdin_used+0x105c>
    f01c:	mov    edi,0x1
    f021:	movzx  edx,BYTE PTR [rcx+rax*1]
    f025:	xor    eax,eax
    f027:	call   58a0 <__printf_chk@plt>
    f02c:	lea    eax,[rbx+0x1]
    f02f:	mov    rbx,rax
    f032:	cmp    rax,QWORD PTR [rsp+0x30]
    f037:	jb     f010 <show_object+0x620>
    f039:	mov    edi,0xa
    f03e:	call   55a0 <putchar@plt>
    f043:	mov    rdi,QWORD PTR [rsp+0x8]
    f048:	call   5590 <free@plt>
    f04d:	test   r14d,r14d
    f050:	jne    10095 <show_object+0x16a5>
    f056:	lea    rax,[rsp+0x30]
    f05b:	mov    DWORD PTR [rsp+0x24],r15d
    f060:	mov    ebx,0x1
    f065:	mov    QWORD PTR [rsp+0x10],rax
    f06a:	lea    rax,[rsp+0x38]
    f06f:	mov    QWORD PTR [rsp+0x8],rax
    f074:	jmp    f22c <show_object+0x83c>
    f079:	xor    ebx,ebx
    f07b:	mov    r14d,0x1
    f081:	xor    r15d,r15d
    f084:	cmp    r13,0x1f
    f088:	je     f883 <show_object+0xe93>
    f08e:	cmp    r13,0x13
    f092:	je     102c1 <show_object+0x18d1>
    f098:	cmp    r13,0x15
    f09c:	je     1024f <show_object+0x185f>
    f0a2:	lea    rsi,[rip+0x905b]        # 18104 <_IO_stdin_used+0x1104>
    f0a9:	mov    edi,0x1
    f0ae:	xor    eax,eax
    f0b0:	call   58a0 <__printf_chk@plt>
    f0b5:	lea    rax,[rsp+0x38]
    f0ba:	lea    r13,[rsp+0x40]
    f0bf:	mov    rsi,rbp
    f0c2:	mov    rdi,r12
    f0c5:	mov    QWORD PTR [rsp+0x8],rax
    f0ca:	mov    ecx,0x1
    f0cf:	mov    rdx,r13
    f0d2:	mov    QWORD PTR [rsp+0x48],rax
    f0d7:	mov    rax,QWORD PTR [rip+0x16db2]        # 25e90 <p11>
    f0de:	mov    QWORD PTR [rsp+0x38],0x0
    f0e7:	mov    QWORD PTR [rsp+0x40],0x161
    f0f0:	mov    QWORD PTR [rsp+0x50],0x8
    f0f9:	call   QWORD PTR [rax+0xc8]
    f0ff:	test   rax,rax
    f102:	je     f114 <show_object+0x724>
    f104:	mov    r10d,DWORD PTR [rip+0x16d6d]        # 25e78 <suppress_warn>
    f10b:	test   r10d,r10d
    f10e:	je     102ad <show_object+0x18bd>
    f114:	mov    rdx,QWORD PTR [rsp+0x38]
    f119:	mov    QWORD PTR [rsp+0x30],rdx
    f11e:	test   rdx,rdx
    f121:	jne    10069 <show_object+0x1679>
    f127:	mov    QWORD PTR [rsp+0x30],0x0
    f130:	mov    edi,0xa
    f135:	call   55a0 <putchar@plt>
    f13a:	lea    rdx,[rsp+0x30]
    f13f:	mov    rsi,rbp
    f142:	mov    rdi,r12
    f145:	mov    QWORD PTR [rsp+0x10],rdx
    f14a:	call   b780 <getVALUE>
    f14f:	mov    DWORD PTR [rsp+0x24],r14d
    f154:	mov    QWORD PTR [rsp+0x28],rax
    f159:	test   rax,rax
    f15c:	je     f22c <show_object+0x83c>
    f162:	xor    eax,eax
    f164:	lea    rsi,[rip+0x8ef6]        # 18061 <_IO_stdin_used+0x1061>
    f16b:	mov    edi,0x1
    f170:	call   58a0 <__printf_chk@plt>
    f175:	xor    edx,edx
    f177:	xor    ecx,ecx
    f179:	cmp    QWORD PTR [rsp+0x30],0x0
    f17f:	je     fff8 <show_object+0x1608>
    f185:	nop    DWORD PTR [rax]
    f188:	mov    rax,QWORD PTR [rsp+0x28]
    f18d:	lea    rsi,[rip+0x8ec8]        # 1805c <_IO_stdin_used+0x105c>
    f194:	mov    edi,0x1
    f199:	mov    DWORD PTR [rsp+0x18],ecx
    f19d:	movzx  edx,BYTE PTR [rax+rdx*1]
    f1a1:	xor    eax,eax
    f1a3:	call   58a0 <__printf_chk@plt>
    f1a8:	mov    ecx,DWORD PTR [rsp+0x18]
    f1ac:	lea    edx,[rcx+0x1]
    f1af:	mov    rcx,rdx
    f1b2:	cmp    rdx,QWORD PTR [rsp+0x30]
    f1b7:	jae    fff8 <show_object+0x1608>
    f1bd:	test   ecx,ecx
    f1bf:	je     f188 <show_object+0x798>
    f1c1:	test   cl,0x1f
    f1c4:	jne    f188 <show_object+0x798>
    f1c6:	lea    rsi,[rip+0x8ea3]        # 18070 <_IO_stdin_used+0x1070>
    f1cd:	mov    edi,0x1
    f1d2:	xor    eax,eax
    f1d4:	mov    DWORD PTR [rsp+0x24],ecx
    f1d8:	mov    QWORD PTR [rsp+0x18],rdx
    f1dd:	call   58a0 <__printf_chk@plt>
    f1e2:	mov    ecx,DWORD PTR [rsp+0x24]
    f1e6:	mov    rdx,QWORD PTR [rsp+0x18]
    f1eb:	jmp    f188 <show_object+0x798>
    f1ed:	xor    ebx,ebx
    f1ef:	mov    r14d,0x1
    f1f5:	xor    r15d,r15d
    f1f8:	mov    rdx,r13
    f1fb:	lea    rsi,[rip+0x8f1f]        # 18121 <_IO_stdin_used+0x1121>
    f202:	mov    edi,0x1
    f207:	xor    eax,eax
    f209:	call   58a0 <__printf_chk@plt>
    f20e:	mov    DWORD PTR [rsp+0x24],r14d
    f213:	lea    rax,[rsp+0x30]
    f218:	lea    r13,[rsp+0x40]
    f21d:	mov    QWORD PTR [rsp+0x10],rax
    f222:	lea    rax,[rsp+0x38]
    f227:	mov    QWORD PTR [rsp+0x8],rax
    f22c:	mov    rsi,rbp
    f22f:	mov    rdi,r12
    f232:	call   d880 <getLABEL.constprop.0>
    f237:	test   rax,rax
    f23a:	je     f264 <show_object+0x874>
    f23c:	mov    QWORD PTR [rsp+0x18],rax
    f241:	mov    rdx,rax
    f244:	xor    eax,eax
    f246:	mov    edi,0x1
    f24b:	lea    rsi,[rip+0x8eec]        # 1813e <_IO_stdin_used+0x113e>
    f252:	call   58a0 <__printf_chk@plt>
    f257:	mov    r8,QWORD PTR [rsp+0x18]
    f25c:	mov    rdi,r8
    f25f:	call   5590 <free@plt>
    f264:	mov    rdx,QWORD PTR [rsp+0x10]
    f269:	mov    rsi,rbp
    f26c:	mov    rdi,r12
    f26f:	call   bd10 <getID>
    f274:	mov    QWORD PTR [rsp+0x18],rax
    f279:	test   rax,rax
    f27c:	je     f28a <show_object+0x89a>
    f27e:	cmp    QWORD PTR [rsp+0x30],0x0
    f284:	jne    fd90 <show_object+0x13a0>
    f28a:	lea    rsi,[rip+0x8ece]        # 1815f <_IO_stdin_used+0x115f>
    f291:	mov    edi,0x1
    f296:	xor    eax,eax
    f298:	call   58a0 <__printf_chk@plt>
    f29d:	mov    r9d,DWORD PTR [rsp+0x24]
    f2a2:	lea    rax,[rip+0xfddf]        # 1f088 <GOST_HASH2001_PARAMSET_OID+0x238>
    f2a9:	mov    QWORD PTR [rsp+0x10],rax
    f2ae:	test   r9d,r9d
    f2b1:	jne    fb10 <show_object+0x1120>
    f2b7:	mov    rsi,rbp
    f2ba:	mov    rdi,r12
    f2bd:	call   be40 <getDECRYPT>
    f2c2:	test   al,al
    f2c4:	jne    f7c8 <show_object+0xdd8>
    f2ca:	test   r14d,r14d
    f2cd:	je     f8a0 <show_object+0xeb0>
    f2d3:	mov    rax,QWORD PTR [rsp+0x8]
    f2d8:	mov    BYTE PTR [rsp+0x38],0x0
    f2dd:	mov    rdx,r13
    f2e0:	mov    rsi,rbp
    f2e3:	mov    DWORD PTR [rip+0x16b8b],0x0        # 25e78 <suppress_warn>
    f2ed:	mov    ecx,0x1
    f2f2:	mov    rdi,r12
    f2f5:	mov    QWORD PTR [rsp+0x48],rax
    f2fa:	mov    rax,QWORD PTR [rip+0x16b8f]        # 25e90 <p11>
    f301:	mov    QWORD PTR [rsp+0x40],0x10a
    f30a:	mov    QWORD PTR [rsp+0x50],0x1
    f313:	call   QWORD PTR [rax+0xc8]
    f319:	test   rax,rax
    f31c:	je     f32c <show_object+0x93c>
    f31e:	mov    esi,DWORD PTR [rip+0x16b54]        # 25e78 <suppress_warn>
    f324:	test   esi,esi
    f326:	je     f86f <show_object+0xe7f>
    f32c:	cmp    BYTE PTR [rsp+0x38],0x0
    f331:	jne    fe60 <show_object+0x1470>
    f337:	mov    rax,QWORD PTR [rsp+0x8]
    f33c:	mov    BYTE PTR [rsp+0x38],0x0
    f341:	mov    rdx,r13
    f344:	mov    rsi,rbp
    f347:	mov    QWORD PTR [rsp+0x40],0x106
    f350:	mov    ecx,0x1
    f355:	mov    rdi,r12
    f358:	mov    QWORD PTR [rsp+0x48],rax
    f35d:	mov    rax,QWORD PTR [rip+0x16b2c]        # 25e90 <p11>
    f364:	mov    QWORD PTR [rsp+0x50],0x1
    f36d:	call   QWORD PTR [rax+0xc8]
    f373:	test   rax,rax
    f376:	je     f386 <show_object+0x996>
    f378:	mov    ecx,DWORD PTR [rip+0x16afa]        # 25e78 <suppress_warn>
    f37e:	test   ecx,ecx
    f380:	je     10081 <show_object+0x1691>
    f386:	cmp    BYTE PTR [rsp+0x38],0x0
    f38b:	jne    ff20 <show_object+0x1530>
    f391:	test   ebx,ebx
    f393:	jne    f92b <show_object+0xf3b>
    f399:	mov    rax,QWORD PTR [rsp+0x8]
    f39e:	mov    BYTE PTR [rsp+0x38],0x0
    f3a3:	mov    rdx,r13
    f3a6:	mov    rsi,rbp
    f3a9:	mov    QWORD PTR [rsp+0x40],0x10c
    f3b2:	mov    ecx,0x1
    f3b7:	mov    rdi,r12
    f3ba:	mov    QWORD PTR [rsp+0x48],rax
    f3bf:	mov    rax,QWORD PTR [rip+0x16aca]        # 25e90 <p11>
    f3c6:	mov    QWORD PTR [rsp+0x50],0x1
    f3cf:	call   QWORD PTR [rax+0xc8]
    f3d5:	test   rax,rax
    f3d8:	je     f3ea <show_object+0x9fa>
    f3da:	mov    r15d,DWORD PTR [rip+0x16a97]        # 25e78 <suppress_warn>
    f3e1:	test   r15d,r15d
    f3e4:	je     fe48 <show_object+0x1458>
    f3ea:	cmp    BYTE PTR [rsp+0x38],0x0
    f3ef:	jne    fd20 <show_object+0x1330>
    f3f5:	mov    rax,QWORD PTR [rsp+0x10]
    f3fa:	cmp    BYTE PTR [rax],0x0
    f3fd:	jne    f412 <show_object+0xa22>
    f3ff:	lea    rsi,[rip+0x8e42]        # 18248 <_IO_stdin_used+0x1248>
    f406:	mov    edi,0x1
    f40b:	xor    eax,eax
    f40d:	call   58a0 <__printf_chk@plt>
    f412:	mov    edi,0xa
    f417:	call   55a0 <putchar@plt>
    f41c:	xor    eax,eax
    f41e:	mov    edi,0x1
    f423:	lea    rsi,[rip+0x8e23]        # 1824d <_IO_stdin_used+0x124d>
    f42a:	call   58a0 <__printf_chk@plt>
    f42f:	test   r14d,r14d
    f432:	je     fd40 <show_object+0x1350>
    f438:	lea    r15,[rip+0xfc49]        # 1f088 <GOST_HASH2001_PARAMSET_OID+0x238>
    f43f:	mov    rax,QWORD PTR [rip+0x16a4a]        # 25e90 <p11>
    f446:	mov    rax,QWORD PTR [rax+0xc8]
    f44d:	test   ebx,ebx
    f44f:	jne    fb88 <show_object+0x1198>
    f455:	mov    rcx,QWORD PTR [rsp+0x8]
    f45a:	mov    BYTE PTR [rsp+0x38],0x0
    f45f:	mov    rdx,r13
    f462:	mov    rsi,rbp
    f465:	mov    QWORD PTR [rsp+0x40],0x163
    f46e:	mov    rdi,r12
    f471:	mov    QWORD PTR [rsp+0x48],rcx
    f476:	mov    ecx,0x1
    f47b:	mov    QWORD PTR [rsp+0x50],0x1
    f484:	call   rax
    f486:	test   rax,rax
    f489:	je     f499 <show_object+0xaa9>
    f48b:	mov    edi,DWORD PTR [rip+0x169e7]        # 25e78 <suppress_warn>
    f491:	test   edi,edi
    f493:	je     fe00 <show_object+0x1410>
    f499:	cmp    BYTE PTR [rsp+0x38],0x0
    f49e:	jne    fd00 <show_object+0x1310>
    f4a4:	cmp    BYTE PTR [r15],0x0
    f4a8:	jne    f4bd <show_object+0xacd>
    f4aa:	lea    rsi,[rip+0x8d97]        # 18248 <_IO_stdin_used+0x1248>
    f4b1:	mov    edi,0x1
    f4b6:	xor    eax,eax
    f4b8:	call   58a0 <__printf_chk@plt>
    f4bd:	mov    edi,0xa
    f4c2:	call   55a0 <putchar@plt>
    f4c7:	test   r14d,r14d
    f4ca:	je     f9b0 <show_object+0xfc0>
    f4d0:	mov    DWORD PTR [rip+0x1699e],0x0        # 25e78 <suppress_warn>
    f4da:	jmp    eca0 <show_object+0x2b0>
    f4df:	mov    r14d,0x1
    f4e5:	mov    r15d,0x1
    f4eb:	jmp    edcf <show_object+0x3df>
    f4f0:	mov    eax,0xd4321003
    f4f5:	cmp    r13,rax
    f4f8:	jne    f521 <show_object+0xb31>
    f4fa:	mov    r14d,0x1
    f500:	mov    r15d,0x1
    f506:	jmp    ee9d <show_object+0x4ad>
    f50b:	mov    ebx,0x1
    f510:	mov    r14d,0x1
    f516:	mov    r15d,0x1
    f51c:	jmp    f084 <show_object+0x694>
    f521:	mov    ebx,0x1
    f526:	mov    r14d,0x1
    f52c:	mov    r15d,0x1
    f532:	jmp    f1f8 <show_object+0x808>
    f537:	nop    WORD PTR [rax+rax*1+0x0]
    f540:	lea    rdi,[rip+0x8dcd]        # 18314 <_IO_stdin_used+0x1314>
    f547:	call   5600 <puts@plt>
    f54c:	jmp    ead9 <show_object+0xe9>
    f551:	nop    DWORD PTR [rax+0x0]
    f558:	xor    eax,eax
    f55a:	lea    rsi,[rip+0x8a4a]        # 17fab <_IO_stdin_used+0xfab>
    f561:	mov    edi,0x1
    f566:	call   58a0 <__printf_chk@plt>
    f56b:	cmp    r13,0x41
    f56f:	ja     f58d <show_object+0xb9d>
    f571:	lea    rdx,[rip+0xf350]        # 1e8c8 <_IO_stdin_used+0x78c8>
    f578:	movsxd rax,DWORD PTR [rdx+r13*4]
    f57c:	add    rax,rdx
    f57f:	notrack jmp rax
    f582:	xor    r14d,r14d
    f585:	xor    r15d,r15d
    f588:	jmp    edcf <show_object+0x3df>
    f58d:	mov    eax,0xd4321003
    f592:	cmp    r13,rax
    f595:	jne    f5b2 <show_object+0xbc2>
    f597:	xor    r14d,r14d
    f59a:	xor    r15d,r15d
    f59d:	jmp    ee9d <show_object+0x4ad>
    f5a2:	mov    ebx,0x1
    f5a7:	xor    r14d,r14d
    f5aa:	xor    r15d,r15d
    f5ad:	jmp    f084 <show_object+0x694>
    f5b2:	mov    ebx,0x1
    f5b7:	xor    r14d,r14d
    f5ba:	xor    r15d,r15d
    f5bd:	jmp    f1f8 <show_object+0x808>
    f5c2:	nop    WORD PTR [rax+rax*1+0x0]
    f5c8:	mov    edx,0x1
    f5cd:	mov    r9,r12
    f5d0:	mov    ecx,0x40
    f5d5:	xor    eax,eax
    f5d7:	lea    r8,[rip+0x8d97]        # 18375 <_IO_stdin_used+0x1375>
    f5de:	mov    esi,0x40
    f5e3:	lea    rdi,[rip+0x16056]        # 25640 <temp.11848>
    f5ea:	call   5580 <__snprintf_chk@plt>
    f5ef:	lea    rdx,[rip+0x1604a]        # 25640 <temp.11848>
    f5f6:	jmp    ec66 <show_object+0x276>
    f5fb:	mov    edi,0x1
    f600:	xor    eax,eax
    f602:	mov    ebx,0x1
    f607:	xor    r14d,r14d
    f60a:	lea    rsi,[rip+0x8ac7]        # 180d8 <_IO_stdin_used+0x10d8>
    f611:	call   58a0 <__printf_chk@plt>
    f616:	mov    edi,0xa
    f61b:	call   55a0 <putchar@plt>
    f620:	mov    DWORD PTR [rsp+0x24],0x0
    f628:	xor    r15d,r15d
    f62b:	jmp    f213 <show_object+0x823>
    f630:	lea    rsi,[rip+0x8aa1]        # 180d8 <_IO_stdin_used+0x10d8>
    f637:	mov    edi,0x1
    f63c:	xor    eax,eax
    f63e:	xor    r15d,r15d
    f641:	call   58a0 <__printf_chk@plt>
    f646:	lea    rdx,[rsp+0x30]
    f64b:	mov    rsi,rbp
    f64e:	mov    rdi,r12
    f651:	mov    QWORD PTR [rsp+0x10],rdx
    f656:	call   b520 <getEC_POINT>
    f65b:	mov    r13,rax
    f65e:	mov    rax,QWORD PTR [rsp+0x30]
    f663:	lea    rdx,[rax-0x2]
    f667:	cmp    rdx,0x7f
    f66b:	ja     101ef <show_object+0x17ff>
    f671:	lea    edx,[rax*4-0xc]
    f678:	xor    eax,eax
    f67a:	lea    rsi,[rip+0x8a5c]        # 180dd <_IO_stdin_used+0x10dd>
    f681:	mov    edi,0x1
    f686:	call   58a0 <__printf_chk@plt>
    f68b:	test   r13,r13
    f68e:	je     f6a4 <show_object+0xcb4>
    f690:	cmp    QWORD PTR [rsp+0x30],0x0
    f696:	jg     103a2 <show_object+0x19b2>
    f69c:	mov    rdi,r13
    f69f:	call   5590 <free@plt>
    f6a4:	mov    rdx,QWORD PTR [rsp+0x10]
    f6a9:	mov    rsi,rbp
    f6ac:	mov    rdi,r12
    f6af:	call   b650 <getEC_PARAMS>
    f6b4:	mov    r13,rax
    f6b7:	test   rax,rax
    f6ba:	je     f6d0 <show_object+0xce0>
    f6bc:	cmp    QWORD PTR [rsp+0x30],0x0
    f6c2:	jg     10345 <show_object+0x1955>
    f6c8:	mov    rdi,r13
    f6cb:	call   5590 <free@plt>
    f6d0:	lea    rax,[rsp+0x38]
    f6d5:	mov    ebx,r15d
    f6d8:	lea    r13,[rsp+0x40]
    f6dd:	mov    DWORD PTR [rsp+0x24],0x1
    f6e5:	mov    QWORD PTR [rsp+0x8],rax
    f6ea:	mov    r14d,0x1
    f6f0:	jmp    f22c <show_object+0x83c>
    f6f5:	lea    rsi,[rip+0x89dc]        # 180d8 <_IO_stdin_used+0x10d8>
    f6fc:	mov    edi,0x1
    f701:	xor    eax,eax
    f703:	mov    r15d,0x1
    f709:	call   58a0 <__printf_chk@plt>
    f70e:	jmp    f646 <show_object+0xc56>
    f713:	lea    rdi,[rip+0x88d8]        # 17ff2 <_IO_stdin_used+0xff2>
    f71a:	mov    ebx,0x1
    f71f:	xor    r14d,r14d
    f722:	call   5600 <puts@plt>
    f727:	mov    DWORD PTR [rsp+0x24],0x0
    f72f:	jmp    f628 <show_object+0xc38>
    f734:	mov    rsi,rbp
    f737:	mov    rdi,r12
    f73a:	xor    ebx,ebx
    f73c:	mov    r14d,0x1
    f742:	call   b480 <getMODULUS_BITS>
    f747:	lea    rsi,[rip+0x8894]        # 17fe2 <_IO_stdin_used+0xfe2>
    f74e:	mov    edi,0x1
    f753:	mov    rdx,rax
    f756:	xor    eax,eax
    f758:	call   58a0 <__printf_chk@plt>
    f75d:	mov    DWORD PTR [rsp+0x24],0x1
    f765:	jmp    f628 <show_object+0xc38>
    f76a:	mov    edi,0xa
    f76f:	mov    ebx,0x1
    f774:	mov    r14d,0x1
    f77a:	mov    r15d,0x1
    f780:	call   55a0 <putchar@plt>
    f785:	mov    DWORD PTR [rsp+0x24],0x1
    f78d:	jmp    f213 <show_object+0x823>
    f792:	nop    WORD PTR [rax+rax*1+0x0]
    f798:	mov    rsi,rax
    f79b:	lea    rdi,[rip+0xc1be]        # 1b960 <_IO_stdin_used+0x4960>
    f7a2:	call   b310 <p11_warn.part.0>
    f7a7:	jmp    ea94 <show_object+0xa4>
    f7ac:	nop    DWORD PTR [rax+0x0]
    f7b0:	mov    rsi,rax
    f7b3:	lea    rdi,[rip+0xc1ce]        # 1b988 <_IO_stdin_used+0x4988>
    f7ba:	call   b310 <p11_warn.part.0>
    f7bf:	jmp    ec27 <show_object+0x237>
    f7c4:	nop    DWORD PTR [rax+0x0]
    f7c8:	mov    rdx,QWORD PTR [rsp+0x10]
    f7cd:	lea    rsi,[rip+0x89c1]        # 18195 <_IO_stdin_used+0x1195>
    f7d4:	mov    edi,0x1
    f7d9:	xor    eax,eax
    f7db:	call   58a0 <__printf_chk@plt>
    f7e0:	lea    rax,[rip+0x7ee1]        # 176c8 <_IO_stdin_used+0x6c8>
    f7e7:	mov    QWORD PTR [rsp+0x10],rax
    f7ec:	jmp    f2ca <show_object+0x8da>
    f7f1:	nop    DWORD PTR [rax+0x0]
    f7f8:	mov    rax,QWORD PTR [rsp+0x50]
    f7fd:	cmp    rax,0xffffffffffffffff
    f801:	je     1029c <show_object+0x18ac>
    f807:	lea    rsi,[rax+0x1]
    f80b:	mov    edi,0x1
    f810:	call   5790 <calloc@plt>
    f815:	mov    QWORD PTR [rsp+0x48],rax
    f81a:	test   rax,rax
    f81d:	je     1056f <show_object+0x1b7f>
    f823:	mov    rax,QWORD PTR [rip+0x16666]        # 25e90 <p11>
    f82a:	mov    rdx,r13
    f82d:	mov    rsi,rbp
    f830:	mov    rdi,r12
    f833:	mov    ecx,0x1
    f838:	call   QWORD PTR [rax+0xc8]
    f83e:	mov    rax,QWORD PTR [rsp+0x50]
    f843:	cmp    rax,0xffffffffffffffff
    f847:	je     10292 <show_object+0x18a2>
    f84d:	mov    QWORD PTR [rsp+0x30],rax
    f852:	jmp    eefe <show_object+0x50e>
    f857:	lea    rsi,[rip+0x8822]        # 18080 <_IO_stdin_used+0x1080>
    f85e:	mov    edi,0x1
    f863:	xor    eax,eax
    f865:	call   58a0 <__printf_chk@plt>
    f86a:	jmp    edec <show_object+0x3fc>
    f86f:	mov    rsi,rax
    f872:	lea    rdi,[rip+0x893f]        # 181b8 <_IO_stdin_used+0x11b8>
    f879:	call   b310 <p11_warn.part.0>
    f87e:	jmp    f32c <show_object+0x93c>
    f883:	lea    rsi,[rip+0x8867]        # 180f1 <_IO_stdin_used+0x10f1>
    f88a:	mov    edi,0x1
    f88f:	xor    eax,eax
    f891:	call   58a0 <__printf_chk@plt>
    f896:	jmp    f0b5 <show_object+0x6c5>
    f89b:	nop    DWORD PTR [rax+rax*1+0x0]
    f8a0:	mov    rsi,rbp
    f8a3:	mov    rdi,r12
    f8a6:	call   bed0 <getSIGN>
    f8ab:	test   al,al
    f8ad:	jne    fef0 <show_object+0x1500>
    f8b3:	mov    eax,0xcf534301
    f8b8:	mov    BYTE PTR [rsp+0x38],0x0
    f8bd:	mov    rdx,r13
    f8c0:	mov    rsi,rbp
    f8c3:	mov    QWORD PTR [rsp+0x40],rax
    f8c8:	mov    rax,QWORD PTR [rsp+0x8]
    f8cd:	mov    ecx,0x1
    f8d2:	mov    rdi,r12
    f8d5:	mov    DWORD PTR [rip+0x16599],0x1        # 25e78 <suppress_warn>
    f8df:	mov    QWORD PTR [rsp+0x48],rax
    f8e4:	mov    rax,QWORD PTR [rip+0x165a5]        # 25e90 <p11>
    f8eb:	mov    QWORD PTR [rsp+0x50],0x1
    f8f4:	call   QWORD PTR [rax+0xc8]
    f8fa:	test   rax,rax
    f8fd:	je     f90d <show_object+0xf1d>
    f8ff:	mov    edi,DWORD PTR [rip+0x16573]        # 25e78 <suppress_warn>
    f905:	test   edi,edi
    f907:	je     10185 <show_object+0x1795>
    f90d:	cmp    BYTE PTR [rsp+0x38],0x0
    f912:	jne    ff50 <show_object+0x1560>
    f918:	mov    DWORD PTR [rip+0x16556],0x0        # 25e78 <suppress_warn>
    f922:	test   r15d,r15d
    f925:	jne    f337 <show_object+0x947>
    f92b:	mov    rax,QWORD PTR [rsp+0x8]
    f930:	mov    BYTE PTR [rsp+0x38],0x0
    f935:	mov    rdx,r13
    f938:	mov    rsi,rbp
    f93b:	mov    QWORD PTR [rsp+0x40],0x107
    f944:	mov    ecx,0x1
    f949:	mov    rdi,r12
    f94c:	mov    QWORD PTR [rsp+0x48],rax
    f951:	mov    rax,QWORD PTR [rip+0x16538]        # 25e90 <p11>
    f958:	mov    QWORD PTR [rsp+0x50],0x1
    f961:	call   QWORD PTR [rax+0xc8]
    f967:	test   rax,rax
    f96a:	je     f97a <show_object+0xf8a>
    f96c:	mov    edx,DWORD PTR [rip+0x16506]        # 25e78 <suppress_warn>
    f972:	test   edx,edx
    f974:	je     10199 <show_object+0x17a9>
    f97a:	cmp    BYTE PTR [rsp+0x38],0x0
    f97f:	je     f399 <show_object+0x9a9>
    f985:	mov    rdx,QWORD PTR [rsp+0x10]
    f98a:	lea    rsi,[rip+0x8889]        # 1821a <_IO_stdin_used+0x121a>
    f991:	mov    edi,0x1
    f996:	xor    eax,eax
    f998:	call   58a0 <__printf_chk@plt>
    f99d:	lea    rax,[rip+0x7d24]        # 176c8 <_IO_stdin_used+0x6c8>
    f9a4:	mov    QWORD PTR [rsp+0x10],rax
    f9a9:	jmp    f399 <show_object+0x9a9>
    f9ae:	xchg   ax,ax
    f9b0:	mov    rax,QWORD PTR [rip+0x164d9]        # 25e90 <p11>
    f9b7:	mov    rdx,r13
    f9ba:	mov    rsi,rbp
    f9bd:	mov    rdi,r12
    f9c0:	mov    QWORD PTR [rsp+0x40],0x40000600
    f9c9:	mov    ecx,0x1
    f9ce:	mov    QWORD PTR [rsp+0x48],0x0
    f9d7:	mov    QWORD PTR [rsp+0x50],0x0
    f9e0:	mov    QWORD PTR [rsp+0x30],0x0
    f9e9:	call   QWORD PTR [rax+0xc8]
    f9ef:	test   rax,rax
    f9f2:	jne    fe18 <show_object+0x1428>
    f9f8:	mov    rsi,QWORD PTR [rsp+0x50]
    f9fd:	cmp    rsi,0xffffffffffffffff
    fa01:	je     f4d0 <show_object+0xae0>
    fa07:	add    rsi,0x1
    fa0b:	mov    edi,0x1
    fa10:	call   5790 <calloc@plt>
    fa15:	mov    QWORD PTR [rsp+0x48],rax
    fa1a:	test   rax,rax
    fa1d:	je     10557 <show_object+0x1b67>
    fa23:	mov    rax,QWORD PTR [rip+0x16466]        # 25e90 <p11>
    fa2a:	mov    rdx,r13
    fa2d:	mov    rsi,rbp
    fa30:	mov    rdi,r12
    fa33:	mov    ecx,0x1
    fa38:	call   QWORD PTR [rax+0xc8]
    fa3e:	mov    rax,QWORD PTR [rsp+0x50]
    fa43:	cmp    rax,0xffffffffffffffff
    fa47:	je     10534 <show_object+0x1b44>
    fa4d:	shr    rax,0x3
    fa51:	mov    QWORD PTR [rsp+0x30],rax
    fa56:	mov    rbx,QWORD PTR [rsp+0x48]
    fa5b:	test   rbx,rbx
    fa5e:	je     f4d0 <show_object+0xae0>
    fa64:	cmp    QWORD PTR [rsp+0x30],0x0
    fa6a:	je     f4d0 <show_object+0xae0>
    fa70:	xor    eax,eax
    fa72:	lea    rsi,[rip+0x885d]        # 182d6 <_IO_stdin_used+0x12d6>
    fa79:	mov    edi,0x1
    fa7e:	xor    r13d,r13d
    fa81:	call   58a0 <__printf_chk@plt>
    fa86:	xor    eax,eax
    fa88:	cmp    QWORD PTR [rsp+0x30],0x0
    fa8e:	lea    r12,[rip+0x8514]        # 17fa9 <_IO_stdin_used+0xfa9>
    fa95:	lea    rbp,[rip+0xf5ec]        # 1f088 <GOST_HASH2001_PARAMSET_OID+0x238>
    fa9c:	je     fb01 <show_object+0x1111>
    fa9e:	xchg   ax,ax
    faa0:	mov    rcx,QWORD PTR [rip+0x13941]        # 233e8 <p11_mechanisms+0x8>
    faa7:	mov    rdi,QWORD PTR [rbx+rax*8]
    faab:	test   rcx,rcx
    faae:	je     fd80 <show_object+0x1390>
    fab4:	lea    rdx,[rip+0x13925]        # 233e0 <p11_mechanisms>
    fabb:	jmp    fad1 <show_object+0x10e1>
    fabd:	nop    DWORD PTR [rax]
    fac0:	mov    rcx,QWORD PTR [rdx+0x28]
    fac4:	add    rdx,0x20
    fac8:	test   rcx,rcx
    facb:	je     fd80 <show_object+0x1390>
    fad1:	cmp    rdi,QWORD PTR [rdx]
    fad4:	jne    fac0 <show_object+0x10d0>
    fad6:	test   r13d,r13d
    fad9:	mov    rdx,rbp
    fadc:	mov    edi,0x1
    fae1:	cmovne rdx,r12
    fae5:	lea    rsi,[rip+0xf552]        # 1f03e <GOST_HASH2001_PARAMSET_OID+0x1ee>
    faec:	xor    eax,eax
    faee:	call   58a0 <__printf_chk@plt>
    faf3:	lea    eax,[r13+0x1]
    faf7:	mov    r13,rax
    fafa:	cmp    rax,QWORD PTR [rsp+0x30]
    faff:	jb     faa0 <show_object+0x10b0>
    fb01:	mov    edi,0xa
    fb06:	call   55a0 <putchar@plt>
    fb0b:	jmp    f4d0 <show_object+0xae0>
    fb10:	mov    rax,QWORD PTR [rsp+0x8]
    fb15:	mov    BYTE PTR [rsp+0x38],0x0
    fb1a:	mov    rdx,r13
    fb1d:	mov    rsi,rbp
    fb20:	mov    QWORD PTR [rsp+0x40],0x104
    fb29:	mov    ecx,0x1
    fb2e:	mov    rdi,r12
    fb31:	mov    QWORD PTR [rsp+0x48],rax
    fb36:	mov    rax,QWORD PTR [rip+0x16353]        # 25e90 <p11>
    fb3d:	mov    QWORD PTR [rsp+0x50],0x1
    fb46:	call   QWORD PTR [rax+0xc8]
    fb4c:	test   rax,rax
    fb4f:	je     fb61 <show_object+0x1171>
    fb51:	mov    r8d,DWORD PTR [rip+0x16320]        # 25e78 <suppress_warn>
    fb58:	test   r8d,r8d
    fb5b:	je     1015d <show_object+0x176d>
    fb61:	lea    rax,[rip+0xf520]        # 1f088 <GOST_HASH2001_PARAMSET_OID+0x238>
    fb68:	cmp    BYTE PTR [rsp+0x38],0x0
    fb6d:	mov    QWORD PTR [rsp+0x10],rax
    fb72:	jne    fe90 <show_object+0x14a0>
    fb78:	test   ebx,ebx
    fb7a:	je     f2d3 <show_object+0x8e3>
    fb80:	jmp    f2b7 <show_object+0x8c7>
    fb85:	nop    DWORD PTR [rax]
    fb88:	mov    rcx,QWORD PTR [rsp+0x8]
    fb8d:	mov    BYTE PTR [rsp+0x38],0x0
    fb92:	mov    rdx,r13
    fb95:	mov    rsi,rbp
    fb98:	mov    QWORD PTR [rsp+0x40],0x103
    fba1:	mov    rdi,r12
    fba4:	mov    QWORD PTR [rsp+0x48],rcx
    fba9:	mov    ecx,0x1
    fbae:	mov    QWORD PTR [rsp+0x50],0x1
    fbb7:	call   rax
    fbb9:	test   rax,rax
    fbbc:	je     fbce <show_object+0x11de>
    fbbe:	mov    r11d,DWORD PTR [rip+0x162b3]        # 25e78 <suppress_warn>
    fbc5:	test   r11d,r11d
    fbc8:	je     10171 <show_object+0x1781>
    fbce:	cmp    BYTE PTR [rsp+0x38],0x0
    fbd3:	jne    ffd0 <show_object+0x15e0>
    fbd9:	mov    rax,QWORD PTR [rsp+0x8]
    fbde:	mov    BYTE PTR [rsp+0x38],0x0
    fbe3:	mov    rdx,r13
    fbe6:	mov    rsi,rbp
    fbe9:	mov    QWORD PTR [rsp+0x40],0x165
    fbf2:	mov    ecx,0x1
    fbf7:	mov    rdi,r12
    fbfa:	mov    QWORD PTR [rsp+0x48],rax
    fbff:	mov    rax,QWORD PTR [rip+0x1628a]        # 25e90 <p11>
    fc06:	mov    QWORD PTR [rsp+0x50],0x1
    fc0f:	call   QWORD PTR [rax+0xc8]
    fc15:	test   rax,rax
    fc18:	je     fc2a <show_object+0x123a>
    fc1a:	mov    r10d,DWORD PTR [rip+0x16257]        # 25e78 <suppress_warn>
    fc21:	test   r10d,r10d
    fc24:	je     10149 <show_object+0x1759>
    fc2a:	cmp    BYTE PTR [rsp+0x38],0x0
    fc2f:	jne    ffa8 <show_object+0x15b8>
    fc35:	mov    rax,QWORD PTR [rsp+0x8]
    fc3a:	mov    BYTE PTR [rsp+0x38],0x0
    fc3f:	mov    rdx,r13
    fc42:	mov    rsi,rbp
    fc45:	mov    QWORD PTR [rsp+0x40],0x162
    fc4e:	mov    ecx,0x1
    fc53:	mov    rdi,r12
    fc56:	mov    QWORD PTR [rsp+0x48],rax
    fc5b:	mov    rax,QWORD PTR [rip+0x1622e]        # 25e90 <p11>
    fc62:	mov    QWORD PTR [rsp+0x50],0x1
    fc6b:	call   QWORD PTR [rax+0xc8]
    fc71:	test   rax,rax
    fc74:	je     fc86 <show_object+0x1296>
    fc76:	mov    r9d,DWORD PTR [rip+0x161fb]        # 25e78 <suppress_warn>
    fc7d:	test   r9d,r9d
    fc80:	je     10135 <show_object+0x1745>
    fc86:	cmp    BYTE PTR [rsp+0x38],0x0
    fc8b:	jne    ff80 <show_object+0x1590>
    fc91:	mov    rax,QWORD PTR [rsp+0x8]
    fc96:	mov    BYTE PTR [rsp+0x38],0x0
    fc9b:	mov    rdx,r13
    fc9e:	mov    rsi,rbp
    fca1:	mov    QWORD PTR [rsp+0x40],0x164
    fcaa:	mov    ecx,0x1
    fcaf:	mov    rdi,r12
    fcb2:	mov    QWORD PTR [rsp+0x48],rax
    fcb7:	mov    rax,QWORD PTR [rip+0x161d2]        # 25e90 <p11>
    fcbe:	mov    QWORD PTR [rsp+0x50],0x1
    fcc7:	call   QWORD PTR [rax+0xc8]
    fccd:	test   rax,rax
    fcd0:	je     fce2 <show_object+0x12f2>
    fcd2:	mov    r8d,DWORD PTR [rip+0x1619f]        # 25e78 <suppress_warn>
    fcd9:	test   r8d,r8d
    fcdc:	je     101ad <show_object+0x17bd>
    fce2:	cmp    BYTE PTR [rsp+0x38],0x0
    fce7:	jne    fec0 <show_object+0x14d0>
    fced:	mov    rax,QWORD PTR [rip+0x1619c]        # 25e90 <p11>
    fcf4:	mov    rax,QWORD PTR [rax+0xc8]
    fcfb:	jmp    f455 <show_object+0xa65>
    fd00:	mov    rdx,r15
    fd03:	lea    rsi,[rip+0x85c4]        # 182ce <_IO_stdin_used+0x12ce>
    fd0a:	mov    edi,0x1
    fd0f:	xor    eax,eax
    fd11:	call   58a0 <__printf_chk@plt>
    fd16:	jmp    f4bd <show_object+0xacd>
    fd1b:	nop    DWORD PTR [rax+rax*1+0x0]
    fd20:	mov    rdx,QWORD PTR [rsp+0x10]
    fd25:	lea    rsi,[rip+0x8513]        # 1823f <_IO_stdin_used+0x123f>
    fd2c:	mov    edi,0x1
    fd31:	xor    eax,eax
    fd33:	call   58a0 <__printf_chk@plt>
    fd38:	jmp    f412 <show_object+0xa22>
    fd3d:	nop    DWORD PTR [rax]
    fd40:	mov    rsi,rbp
    fd43:	mov    rdi,r12
    fd46:	call   bf60 <getALWAYS_AUTHENTICATE>
    fd4b:	test   al,al
    fd4d:	je     f438 <show_object+0xa48>
    fd53:	lea    rdx,[rip+0xf32e]        # 1f088 <GOST_HASH2001_PARAMSET_OID+0x238>
    fd5a:	lea    rsi,[rip+0x84fb]        # 1825c <_IO_stdin_used+0x125c>
    fd61:	mov    edi,0x1
    fd66:	xor    eax,eax
    fd68:	call   58a0 <__printf_chk@plt>
    fd6d:	lea    r15,[rip+0x7954]        # 176c8 <_IO_stdin_used+0x6c8>
    fd74:	jmp    f43f <show_object+0xa4f>
    fd79:	nop    DWORD PTR [rax+0x0]
    fd80:	call   a3c0 <p11_mechanism_to_name.part.0>
    fd85:	mov    rcx,rax
    fd88:	jmp    fad6 <show_object+0x10e6>
    fd8d:	nop    DWORD PTR [rax]
    fd90:	xor    eax,eax
    fd92:	lea    rsi,[rip+0x83b7]        # 18150 <_IO_stdin_used+0x1150>
    fd99:	mov    edi,0x1
    fd9e:	call   58a0 <__printf_chk@plt>
    fda3:	xor    ecx,ecx
    fda5:	xor    eax,eax
    fda7:	cmp    QWORD PTR [rsp+0x30],0x0
    fdad:	je     fde1 <show_object+0x13f1>
    fdaf:	nop
    fdb0:	mov    DWORD PTR [rsp+0x10],ecx
    fdb4:	mov    rcx,QWORD PTR [rsp+0x18]
    fdb9:	lea    rsi,[rip+0x829c]        # 1805c <_IO_stdin_used+0x105c>
    fdc0:	mov    edi,0x1
    fdc5:	movzx  edx,BYTE PTR [rcx+rax*1]
    fdc9:	xor    eax,eax
    fdcb:	call   58a0 <__printf_chk@plt>
    fdd0:	mov    ecx,DWORD PTR [rsp+0x10]
    fdd4:	lea    eax,[rcx+0x1]
    fdd7:	mov    rcx,rax
    fdda:	cmp    rax,QWORD PTR [rsp+0x30]
    fddf:	jb     fdb0 <show_object+0x13c0>
    fde1:	mov    edi,0xa
    fde6:	call   55a0 <putchar@plt>
    fdeb:	mov    rdi,QWORD PTR [rsp+0x18]
    fdf0:	call   5590 <free@plt>
    fdf5:	jmp    f28a <show_object+0x89a>
    fdfa:	nop    WORD PTR [rax+rax*1+0x0]
    fe00:	mov    rsi,rax
    fe03:	lea    rdi,[rip+0x84a9]        # 182b3 <_IO_stdin_used+0x12b3>
    fe0a:	call   b310 <p11_warn.part.0>
    fe0f:	jmp    f499 <show_object+0xaa9>
    fe14:	nop    DWORD PTR [rax+0x0]
    fe18:	cmp    rax,0x12
    fe1c:	je     fa56 <show_object+0x1066>
    fe22:	mov    esi,DWORD PTR [rip+0x16050]        # 25e78 <suppress_warn>
    fe28:	test   esi,esi
    fe2a:	jne    fa56 <show_object+0x1066>
    fe30:	mov    rsi,rax
    fe33:	lea    rdi,[rip+0xbafe]        # 1b938 <_IO_stdin_used+0x4938>
    fe3a:	call   b310 <p11_warn.part.0>
    fe3f:	jmp    fa56 <show_object+0x1066>
    fe44:	nop    DWORD PTR [rax+0x0]
    fe48:	mov    rsi,rax
    fe4b:	lea    rdi,[rip+0x83d1]        # 18223 <_IO_stdin_used+0x1223>
    fe52:	call   b310 <p11_warn.part.0>
    fe57:	jmp    f3ea <show_object+0x9fa>
    fe5c:	nop    DWORD PTR [rax+0x0]
    fe60:	mov    rdx,QWORD PTR [rsp+0x10]
    fe65:	lea    rsi,[rip+0x8368]        # 181d4 <_IO_stdin_used+0x11d4>
    fe6c:	mov    edi,0x1
    fe71:	xor    eax,eax
    fe73:	call   58a0 <__printf_chk@plt>
    fe78:	lea    rax,[rip+0x7849]        # 176c8 <_IO_stdin_used+0x6c8>
    fe7f:	mov    QWORD PTR [rsp+0x10],rax
    fe84:	jmp    f337 <show_object+0x947>
    fe89:	nop    DWORD PTR [rax+0x0]
    fe90:	mov    rdx,rax
    fe93:	lea    rsi,[rip+0x82f1]        # 1818b <_IO_stdin_used+0x118b>
    fe9a:	mov    edi,0x1
    fe9f:	xor    eax,eax
    fea1:	call   58a0 <__printf_chk@plt>
    fea6:	lea    rax,[rip+0x781b]        # 176c8 <_IO_stdin_used+0x6c8>
    fead:	mov    QWORD PTR [rsp+0x10],rax
    feb2:	jmp    fb78 <show_object+0x1188>
    feb7:	nop    WORD PTR [rax+rax*1+0x0]
    fec0:	mov    rdx,r15
    fec3:	lea    rsi,[rip+0x83d5]        # 1829f <_IO_stdin_used+0x129f>
    feca:	mov    edi,0x1
    fecf:	xor    eax,eax
    fed1:	call   58a0 <__printf_chk@plt>
    fed6:	mov    rax,QWORD PTR [rip+0x15fb3]        # 25e90 <p11>
    fedd:	lea    r15,[rip+0x77e4]        # 176c8 <_IO_stdin_used+0x6c8>
    fee4:	mov    rax,QWORD PTR [rax+0xc8]
    feeb:	jmp    f455 <show_object+0xa65>
    fef0:	mov    rdx,QWORD PTR [rsp+0x10]
    fef5:	lea    rsi,[rip+0x82a3]        # 1819f <_IO_stdin_used+0x119f>
    fefc:	mov    edi,0x1
    ff01:	xor    eax,eax
    ff03:	call   58a0 <__printf_chk@plt>
    ff08:	lea    rax,[rip+0x77b9]        # 176c8 <_IO_stdin_used+0x6c8>
    ff0f:	mov    QWORD PTR [rsp+0x10],rax
    ff14:	jmp    f8b3 <show_object+0xec3>
    ff19:	nop    DWORD PTR [rax+0x0]
    ff20:	mov    rdx,QWORD PTR [rsp+0x10]
    ff25:	lea    rsi,[rip+0x82cb]        # 181f7 <_IO_stdin_used+0x11f7>
    ff2c:	mov    edi,0x1
    ff31:	xor    eax,eax
    ff33:	call   58a0 <__printf_chk@plt>
    ff38:	lea    rax,[rip+0x7789]        # 176c8 <_IO_stdin_used+0x6c8>
    ff3f:	mov    QWORD PTR [rsp+0x10],rax
    ff44:	jmp    f391 <show_object+0x9a1>
    ff49:	nop    DWORD PTR [rax+0x0]
    ff50:	mov    rdx,QWORD PTR [rsp+0x10]
    ff55:	lea    rsi,[rip+0x824a]        # 181a6 <_IO_stdin_used+0x11a6>
    ff5c:	mov    edi,0x1
    ff61:	xor    eax,eax
    ff63:	call   58a0 <__printf_chk@plt>
    ff68:	lea    rax,[rip+0x7759]        # 176c8 <_IO_stdin_used+0x6c8>
    ff6f:	mov    QWORD PTR [rsp+0x10],rax
    ff74:	jmp    f918 <show_object+0xf28>
    ff79:	nop    DWORD PTR [rax+0x0]
    ff80:	mov    rdx,r15
    ff83:	lea    rsi,[rip+0x8307]        # 18291 <_IO_stdin_used+0x1291>
    ff8a:	mov    edi,0x1
    ff8f:	xor    eax,eax
    ff91:	call   58a0 <__printf_chk@plt>
    ff96:	lea    r15,[rip+0x772b]        # 176c8 <_IO_stdin_used+0x6c8>
    ff9d:	jmp    fc91 <show_object+0x12a1>
    ffa2:	nop    WORD PTR [rax+rax*1+0x0]
    ffa8:	mov    rdx,r15
    ffab:	lea    rsi,[rip+0x82cc]        # 1827e <_IO_stdin_used+0x127e>
    ffb2:	mov    edi,0x1
    ffb7:	xor    eax,eax
    ffb9:	call   58a0 <__printf_chk@plt>
    ffbe:	lea    r15,[rip+0x7703]        # 176c8 <_IO_stdin_used+0x6c8>
    ffc5:	jmp    fc35 <show_object+0x1245>
    ffca:	nop    WORD PTR [rax+rax*1+0x0]
    ffd0:	mov    rdx,r15
    ffd3:	lea    rsi,[rip+0x8298]        # 18272 <_IO_stdin_used+0x1272>
    ffda:	mov    edi,0x1
    ffdf:	xor    eax,eax
    ffe1:	call   58a0 <__printf_chk@plt>
    ffe6:	lea    r15,[rip+0x76db]        # 176c8 <_IO_stdin_used+0x6c8>
    ffed:	jmp    fbd9 <show_object+0x11e9>
    fff2:	nop    WORD PTR [rax+rax*1+0x0]
    fff8:	mov    edi,0xa
    fffd:	call   55a0 <putchar@plt>
   10002:	mov    rdi,QWORD PTR [rsp+0x28]
   10007:	call   5590 <free@plt>
   1000c:	mov    DWORD PTR [rsp+0x24],r14d
   10011:	jmp    f22c <show_object+0x83c>
   10016:	cs nop WORD PTR [rax+rax*1+0x0]
   10020:	cmp    rax,0x12
   10024:	je     efdb <show_object+0x5eb>
   1002a:	mov    r11d,DWORD PTR [rip+0x15e47]        # 25e78 <suppress_warn>
   10031:	test   r11d,r11d
   10034:	jne    efdb <show_object+0x5eb>
   1003a:	mov    rsi,rax
   1003d:	lea    rdi,[rip+0xb7b4]        # 1b7f8 <_IO_stdin_used+0x47f8>
   10044:	call   b310 <p11_warn.part.0>
   10049:	jmp    efdb <show_object+0x5eb>
   1004e:	xchg   ax,ax
   10050:	mov    edi,0xa
   10055:	mov    ebx,0x1
   1005a:	call   55a0 <putchar@plt>
   1005f:	mov    DWORD PTR [rsp+0x24],r15d
   10064:	jmp    f213 <show_object+0x823>
   10069:	lea    rsi,[rip+0x80a5]        # 18115 <_IO_stdin_used+0x1115>
   10070:	mov    edi,0x1
   10075:	xor    eax,eax
   10077:	call   58a0 <__printf_chk@plt>
   1007c:	jmp    f127 <show_object+0x737>
   10081:	mov    rsi,rax
   10084:	lea    rdi,[rip+0x8152]        # 181dd <_IO_stdin_used+0x11dd>
   1008b:	call   b310 <p11_warn.part.0>
   10090:	jmp    f386 <show_object+0x996>
   10095:	lea    rdx,[rsp+0x30]
   1009a:	mov    rsi,rbp
   1009d:	mov    rdi,r12
   100a0:	mov    QWORD PTR [rsp+0x10],rdx
   100a5:	call   b780 <getVALUE>
   100aa:	mov    QWORD PTR [rsp+0x8],rax
   100af:	test   rax,rax
   100b2:	je     102d9 <show_object+0x18e9>
   100b8:	xor    eax,eax
   100ba:	lea    rsi,[rip+0x7fa0]        # 18061 <_IO_stdin_used+0x1061>
   100c1:	mov    edi,0x1
   100c6:	xor    ebx,ebx
   100c8:	call   58a0 <__printf_chk@plt>
   100cd:	xor    edx,edx
   100cf:	cmp    QWORD PTR [rsp+0x30],0x0
   100d5:	je     10267 <show_object+0x1877>
   100db:	nop    DWORD PTR [rax+rax*1+0x0]
   100e0:	mov    rax,QWORD PTR [rsp+0x8]
   100e5:	lea    rsi,[rip+0x7f70]        # 1805c <_IO_stdin_used+0x105c>
   100ec:	mov    edi,0x1
   100f1:	movzx  edx,BYTE PTR [rax+rdx*1]
   100f5:	xor    eax,eax
   100f7:	call   58a0 <__printf_chk@plt>
   100fc:	lea    edx,[rbx+0x1]
   100ff:	mov    rbx,rdx
   10102:	cmp    rdx,QWORD PTR [rsp+0x30]
   10107:	jae    10267 <show_object+0x1877>
   1010d:	test   ebx,ebx
   1010f:	je     100e0 <show_object+0x16f0>
   10111:	test   bl,0x1f
   10114:	jne    100e0 <show_object+0x16f0>
   10116:	lea    rsi,[rip+0x7f53]        # 18070 <_IO_stdin_used+0x1070>
   1011d:	mov    edi,0x1
   10122:	xor    eax,eax
   10124:	mov    QWORD PTR [rsp+0x18],rdx
   10129:	call   58a0 <__printf_chk@plt>
   1012e:	mov    rdx,QWORD PTR [rsp+0x18]
   10133:	jmp    100e0 <show_object+0x16f0>
   10135:	mov    rsi,rax
   10138:	lea    rdi,[rip+0xb779]        # 1b8b8 <_IO_stdin_used+0x48b8>
   1013f:	call   b310 <p11_warn.part.0>
   10144:	jmp    fc86 <show_object+0x1296>
   10149:	mov    rsi,rax
   1014c:	lea    rdi,[rip+0xb73d]        # 1b890 <_IO_stdin_used+0x4890>
   10153:	call   b310 <p11_warn.part.0>
   10158:	jmp    fc2a <show_object+0x123a>
   1015d:	mov    rsi,rax
   10160:	lea    rdi,[rip+0x8007]        # 1816e <_IO_stdin_used+0x116e>
   10167:	call   b310 <p11_warn.part.0>
   1016c:	jmp    fb61 <show_object+0x1171>
   10171:	mov    rsi,rax
   10174:	lea    rdi,[rip+0xb6f5]        # 1b870 <_IO_stdin_used+0x4870>
   1017b:	call   b310 <p11_warn.part.0>
   10180:	jmp    fbce <show_object+0x11de>
   10185:	mov    rsi,rax
   10188:	lea    rdi,[rip+0xb6b1]        # 1b840 <_IO_stdin_used+0x4840>
   1018f:	call   b310 <p11_warn.part.0>
   10194:	jmp    f90d <show_object+0xf1d>
   10199:	mov    rsi,rax
   1019c:	lea    rdi,[rip+0x805b]        # 181fe <_IO_stdin_used+0x11fe>
   101a3:	call   b310 <p11_warn.part.0>
   101a8:	jmp    f97a <show_object+0xf8a>
   101ad:	mov    rsi,rax
   101b0:	lea    rdi,[rip+0xb729]        # 1b8e0 <_IO_stdin_used+0x48e0>
   101b7:	call   b310 <p11_warn.part.0>
   101bc:	jmp    fce2 <show_object+0x12f2>
   101c1:	movabs rax,0x1e020203852a0706
   101cb:	cmp    QWORD PTR [rbx],rax
   101ce:	jne    ef25 <show_object+0x535>
   101d4:	cmp    BYTE PTR [rbx+0x8],0x1
   101d8:	jne    ef25 <show_object+0x535>
   101de:	lea    rdi,[rip+0x7e14]        # 17ff9 <_IO_stdin_used+0xff9>
   101e5:	call   5600 <puts@plt>
   101ea:	jmp    ef31 <show_object+0x541>
   101ef:	lea    rdx,[rax-0x3]
   101f3:	cmp    rdx,0xff
   101fa:	ja     10475 <show_object+0x1a85>
   10200:	lea    edx,[rax*4-0x10]
   10207:	jmp    f678 <show_object+0xc88>
   1020c:	movabs rax,0x1010703852a0806
   10216:	cmp    QWORD PTR [rbx],rax
   10219:	je     10495 <show_object+0x1aa5>
   1021f:	movabs rax,0x1010703852a0806
   10229:	cmp    QWORD PTR [rbx],rax
   1022c:	jne    ef25 <show_object+0x535>
   10232:	cmp    WORD PTR [rbx+0x8],0x302
   10238:	jne    ef25 <show_object+0x535>
   1023e:	lea    rdi,[rip+0x7dd5]        # 1801a <_IO_stdin_used+0x101a>
   10245:	call   5600 <puts@plt>
   1024a:	jmp    ef31 <show_object+0x541>
   1024f:	lea    rsi,[rip+0x7ea7]        # 180fd <_IO_stdin_used+0x10fd>
   10256:	mov    edi,0x1
   1025b:	xor    eax,eax
   1025d:	call   58a0 <__printf_chk@plt>
   10262:	jmp    f0b5 <show_object+0x6c5>
   10267:	mov    edi,0xa
   1026c:	mov    ebx,r15d
   1026f:	call   55a0 <putchar@plt>
   10274:	mov    rdi,QWORD PTR [rsp+0x8]
   10279:	call   5590 <free@plt>
   1027e:	lea    rax,[rsp+0x38]
   10283:	mov    DWORD PTR [rsp+0x24],r14d
   10288:	mov    QWORD PTR [rsp+0x8],rax
   1028d:	jmp    f22c <show_object+0x83c>
   10292:	mov    rdi,QWORD PTR [rsp+0x48]
   10297:	call   5590 <free@plt>
   1029c:	lea    rdi,[rip+0x7d8c]        # 1802f <_IO_stdin_used+0x102f>
   102a3:	call   5600 <puts@plt>
   102a8:	jmp    ef39 <show_object+0x549>
   102ad:	mov    rsi,rax
   102b0:	lea    rdi,[rip+0xb569]        # 1b820 <_IO_stdin_used+0x4820>
   102b7:	call   b310 <p11_warn.part.0>
   102bc:	jmp    f114 <show_object+0x724>
   102c1:	lea    rsi,[rip+0x7e2f]        # 180f7 <_IO_stdin_used+0x10f7>
   102c8:	mov    edi,0x1
   102cd:	xor    eax,eax
   102cf:	call   58a0 <__printf_chk@plt>
   102d4:	jmp    f0b5 <show_object+0x6c5>
   102d9:	lea    rax,[rsp+0x38]
   102de:	mov    DWORD PTR [rsp+0x24],r14d
   102e3:	mov    ebx,r15d
   102e6:	mov    QWORD PTR [rsp+0x8],rax
   102eb:	jmp    f22c <show_object+0x83c>
   102f0:	xor    eax,eax
   102f2:	lea    rsi,[rip+0x7db8]        # 180b1 <_IO_stdin_used+0x10b1>
   102f9:	mov    edi,0x1
   102fe:	xor    ebx,ebx
   10300:	call   58a0 <__printf_chk@plt>
   10305:	xor    eax,eax
   10307:	cmp    QWORD PTR [rsp+0x30],0x0
   1030d:	je     10336 <show_object+0x1946>
   1030f:	nop
   10310:	movzx  edx,BYTE PTR [r13+rax*1+0x0]
   10316:	lea    rsi,[rip+0x7d3f]        # 1805c <_IO_stdin_used+0x105c>
   1031d:	mov    edi,0x1
   10322:	xor    eax,eax
   10324:	call   58a0 <__printf_chk@plt>
   10329:	lea    eax,[rbx+0x1]
   1032c:	mov    rbx,rax
   1032f:	cmp    rax,QWORD PTR [rsp+0x30]
   10334:	jb     10310 <show_object+0x1920>
   10336:	mov    edi,0xa
   1033b:	call   55a0 <putchar@plt>
   10340:	jmp    ee36 <show_object+0x446>
   10345:	xor    eax,eax
   10347:	lea    rsi,[rip+0x7d72]        # 180c0 <_IO_stdin_used+0x10c0>
   1034e:	mov    edi,0x1
   10353:	xor    r14d,r14d
   10356:	call   58a0 <__printf_chk@plt>
   1035b:	xor    eax,eax
   1035d:	cmp    QWORD PTR [rsp+0x30],0x0
   10363:	lea    rbx,[rip+0x7cf2]        # 1805c <_IO_stdin_used+0x105c>
   1036a:	je     10393 <show_object+0x19a3>
   1036c:	nop    DWORD PTR [rax+0x0]
   10370:	movzx  edx,BYTE PTR [r13+rax*1+0x0]
   10376:	mov    rsi,rbx
   10379:	mov    edi,0x1
   1037e:	xor    eax,eax
   10380:	call   58a0 <__printf_chk@plt>
   10385:	lea    eax,[r14+0x1]
   10389:	mov    r14,rax
   1038c:	cmp    rax,QWORD PTR [rsp+0x30]
   10391:	jb     10370 <show_object+0x1980>
   10393:	mov    edi,0xa
   10398:	call   55a0 <putchar@plt>
   1039d:	jmp    f6c8 <show_object+0xcd8>
   103a2:	xor    eax,eax
   103a4:	lea    rsi,[rip+0x7d06]        # 180b1 <_IO_stdin_used+0x10b1>
   103ab:	mov    edi,0x1
   103b0:	xor    r14d,r14d
   103b3:	call   58a0 <__printf_chk@plt>
   103b8:	xor    eax,eax
   103ba:	cmp    QWORD PTR [rsp+0x30],0x0
   103c0:	lea    rbx,[rip+0x7c95]        # 1805c <_IO_stdin_used+0x105c>
   103c7:	je     103f3 <show_object+0x1a03>
   103c9:	nop    DWORD PTR [rax+0x0]
   103d0:	movzx  edx,BYTE PTR [r13+rax*1+0x0]
   103d6:	mov    rsi,rbx
   103d9:	mov    edi,0x1
   103de:	xor    eax,eax
   103e0:	call   58a0 <__printf_chk@plt>
   103e5:	lea    eax,[r14+0x1]
   103e9:	mov    r14,rax
   103ec:	cmp    rax,QWORD PTR [rsp+0x30]
   103f1:	jb     103d0 <show_object+0x19e0>
   103f3:	mov    edi,0xa
   103f8:	call   55a0 <putchar@plt>
   103fd:	jmp    f69c <show_object+0xcac>
   10402:	xor    eax,eax
   10404:	lea    rsi,[rip+0x7cb5]        # 180c0 <_IO_stdin_used+0x10c0>
   1040b:	mov    edi,0x1
   10410:	xor    ebx,ebx
   10412:	call   58a0 <__printf_chk@plt>
   10417:	xor    eax,eax
   10419:	cmp    QWORD PTR [rsp+0x30],0x0
   1041f:	je     1044e <show_object+0x1a5e>
   10421:	nop    DWORD PTR [rax+0x0]
   10428:	movzx  edx,BYTE PTR [r13+rax*1+0x0]
   1042e:	lea    rsi,[rip+0x7c27]        # 1805c <_IO_stdin_used+0x105c>
   10435:	mov    edi,0x1
   1043a:	xor    eax,eax
   1043c:	call   58a0 <__printf_chk@plt>
   10441:	lea    eax,[rbx+0x1]
   10444:	mov    rbx,rax
   10447:	cmp    rax,QWORD PTR [rsp+0x30]
   1044c:	jb     10428 <show_object+0x1a38>
   1044e:	lea    rbx,[rsp+0x60]
   10453:	mov    rdi,rbx
   10456:	call   57f0 <sc_init_oid@plt>
   1045b:	mov    rax,QWORD PTR [rsp+0x30]
   10460:	cmp    rax,0x2
   10464:	ja     104b2 <show_object+0x1ac2>
   10466:	mov    edi,0xa
   1046b:	call   55a0 <putchar@plt>
   10470:	jmp    ee62 <show_object+0x472>
   10475:	lea    edx,[rax*4-0x14]
   1047c:	jmp    f678 <show_object+0xc88>
   10481:	mov    rsi,rax
   10484:	lea    rdi,[rip+0xb315]        # 1b7a0 <_IO_stdin_used+0x47a0>
   1048b:	call   b310 <p11_warn.part.0>
   10490:	jmp    eefe <show_object+0x50e>
   10495:	cmp    WORD PTR [rbx+0x8],0x202
   1049b:	jne    1021f <show_object+0x182f>
   104a1:	lea    rdi,[rip+0x7b5d]        # 18005 <_IO_stdin_used+0x1005>
   104a8:	call   5600 <puts@plt>
   104ad:	jmp    ef31 <show_object+0x541>
   104b2:	lea    rsi,[rax-0x2]
   104b6:	lea    rdi,[r13+0x2]
   104ba:	mov    rdx,rbx
   104bd:	call   5710 <sc_asn1_decode_object_id@plt>
   104c2:	test   eax,eax
   104c4:	jne    10466 <show_object+0x1a76>
   104c6:	mov    edx,DWORD PTR [rsp+0x60]
   104ca:	lea    rsi,[rip+0x7bfe]        # 180cf <_IO_stdin_used+0x10cf>
   104d1:	mov    edi,0x1
   104d6:	call   58a0 <__printf_chk@plt>
   104db:	cmp    DWORD PTR [rsp+0x60],0x0
   104e0:	js     10525 <show_object+0x1b35>
   104e2:	lea    rax,[rsp+0xa0]
   104ea:	lea    rcx,[rsp+0x64]
   104ef:	mov    QWORD PTR [rsp+0x8],rax
   104f4:	lea    rbx,[rip+0x7a82]        # 17f7d <_IO_stdin_used+0xf7d>
   104fb:	mov    edx,DWORD PTR [rcx]
   104fd:	test   edx,edx
   104ff:	js     10525 <show_object+0x1b35>
   10501:	mov    rsi,rbx
   10504:	mov    edi,0x1
   10509:	xor    eax,eax
   1050b:	mov    QWORD PTR [rsp+0x18],rcx
   10510:	call   58a0 <__printf_chk@plt>
   10515:	mov    rcx,QWORD PTR [rsp+0x18]
   1051a:	add    rcx,0x4
   1051e:	cmp    rcx,QWORD PTR [rsp+0x8]
   10523:	jne    104fb <show_object+0x1b0b>
   10525:	mov    edi,0x29
   1052a:	call   55a0 <putchar@plt>
   1052f:	jmp    10466 <show_object+0x1a76>
   10534:	mov    rdi,QWORD PTR [rsp+0x48]
   10539:	call   5590 <free@plt>
   1053e:	jmp    f4d0 <show_object+0xae0>
   10543:	mov    rdi,QWORD PTR [rsp+0x48]
   10548:	call   5590 <free@plt>
   1054d:	jmp    f04d <show_object+0x65d>
   10552:	call   5690 <__stack_chk_fail@plt>
   10557:	lea    rdi,[rip+0xb3aa]        # 1b908 <_IO_stdin_used+0x4908>
   1055e:	call   15f90 <util_fatal>
   10563:	lea    rdi,[rip+0xb25e]        # 1b7c8 <_IO_stdin_used+0x47c8>
   1056a:	call   15f90 <util_fatal>
   1056f:	lea    rdi,[rip+0xb1fa]        # 1b770 <_IO_stdin_used+0x4770>
   10576:	call   15f90 <util_fatal>
   1057b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010580 <unwrap_key>:
   10580:	push   r15
   10582:	mov    ecx,0x3c
   10587:	mov    esi,0x3
   1058c:	push   r14
   1058e:	push   r13
   10590:	push   r12
   10592:	push   rbp
   10593:	mov    rbp,rdi
   10596:	push   rbx
   10597:	lea    rbx,[rip+0x15b02]        # 260a0 <opt_object_id>
   1059e:	sub    rsp,0x6d8
   105a5:	mov    r8,QWORD PTR [rip+0x15a54]        # 26000 <opt_object_id_len>
   105ac:	mov    rax,QWORD PTR fs:0x28
   105b5:	mov    QWORD PTR [rsp+0x6c8],rax
   105bd:	xor    eax,eax
   105bf:	lea    r13,[rsp+0x70]
   105c4:	lea    r15,[rsp+0x40]
   105c9:	mov    QWORD PTR [rsp+0x20],0x4
   105d2:	mov    rdi,r13
   105d5:	test   r8,r8
   105d8:	lea    r12,[rsp+0x1e]
   105dd:	mov    rdx,r15
   105e0:	mov    BYTE PTR [rsp+0x1e],0x1
   105e5:	mov    BYTE PTR [rsp+0x1f],0x0
   105ea:	mov    QWORD PTR [rsp+0x28],0x1f
   105f3:	mov    QWORD PTR [rsp+0x38],0x0
   105fc:	rep stos QWORD PTR es:[rdi],rax
   105ff:	lea    rax,[rsp+0x20]
   10604:	mov    rdi,rbp
   10607:	mov    QWORD PTR [rsp+0x80],0x8
   10613:	mov    QWORD PTR [rsp+0x78],rax
   10618:	mov    QWORD PTR [rsp+0x88],0x1
   10624:	mov    QWORD PTR [rsp+0x90],r12
   1062c:	mov    QWORD PTR [rsp+0x98],0x1
   10638:	cmovne rcx,rbx
   1063c:	xor    r9d,r9d
   1063f:	call   b100 <find_object>
   10644:	test   eax,eax
   10646:	jne    10677 <unwrap_key+0xf7>
   10648:	mov    r8,QWORD PTR [rip+0x159b1]        # 26000 <opt_object_id_len>
   1064f:	xor    r14d,r14d
   10652:	mov    rdx,r15
   10655:	mov    rdi,rbp
   10658:	mov    rcx,r14
   1065b:	mov    esi,0x4
   10660:	test   r8,r8
   10663:	cmovne rcx,rbx
   10667:	xor    r9d,r9d
   1066a:	call   b100 <find_object>
   1066f:	test   eax,eax
   10671:	je     10b02 <unwrap_key+0x582>
   10677:	mov    r11d,DWORD PTR [rip+0x15a9a]        # 26118 <opt_mechanism_used>
   1067e:	test   r11d,r11d
   10681:	je     10b0e <unwrap_key+0x58e>
   10687:	mov    rax,QWORD PTR [rip+0x15a92]        # 26120 <opt_mechanism>
   1068e:	mov    rdi,QWORD PTR [rip+0x15ae3]        # 26178 <opt_input>
   10695:	mov    QWORD PTR [rsp+0x58],0x0
   1069e:	mov    QWORD PTR [rsp+0x60],0x0
   106a7:	mov    QWORD PTR [rsp+0x50],rax
   106ac:	test   rdi,rdi
   106af:	je     10abd <unwrap_key+0x53d>
   106b5:	xor    esi,esi
   106b7:	xor    eax,eax
   106b9:	call   58f0 <open@plt>
   106be:	mov    r14d,eax
   106c1:	test   eax,eax
   106c3:	js     10b30 <unwrap_key+0x5b0>
   106c9:	lea    r15,[rsp+0x2c0]
   106d1:	mov    edx,0x400
   106d6:	mov    edi,eax
   106d8:	mov    rsi,r15
   106db:	call   5740 <read@plt>
   106e0:	test   eax,eax
   106e2:	js     10ae3 <unwrap_key+0x563>
   106e8:	cdqe   
   106ea:	mov    QWORD PTR [rsp],rax
   106ee:	test   r14d,r14d
   106f1:	je     106fb <unwrap_key+0x17b>
   106f3:	mov    edi,r14d
   106f6:	call   5700 <close@plt>
   106fb:	mov    rax,QWORD PTR [rip+0x15a1e]        # 26120 <opt_mechanism>
   10702:	cmp    rax,0x1082
   10708:	je     10a8c <unwrap_key+0x50c>
   1070e:	xor    r14d,r14d
   10711:	cmp    rax,0x1085
   10717:	je     10a8c <unwrap_key+0x50c>
   1071d:	mov    rbx,QWORD PTR [rip+0x15884]        # 25fa8 <opt_key_type>
   10724:	test   rbx,rbx
   10727:	je     10af8 <unwrap_key+0x578>
   1072d:	mov    edx,0x4
   10732:	lea    rsi,[rip+0x7c85]        # 183be <_IO_stdin_used+0x13be>
   10739:	mov    rdi,rbx
   1073c:	call   5850 <strncasecmp@plt>
   10741:	test   eax,eax
   10743:	je     10a41 <unwrap_key+0x4c1>
   10749:	mov    edx,0x8
   1074e:	lea    rsi,[rip+0x7c6e]        # 183c3 <_IO_stdin_used+0x13c3>
   10755:	mov    rdi,rbx
   10758:	call   5850 <strncasecmp@plt>
   1075d:	test   eax,eax
   1075f:	jne    10b45 <unwrap_key+0x5c5>
   10765:	mov    QWORD PTR [rsp+0x28],0x10
   1076e:	lea    rdi,[rbx+0x8]
   10772:	mov    r10d,DWORD PTR [rip+0x1576f]        # 25ee8 <opt_is_sensitive>
   10779:	lea    rax,[rsp+0x28]
   1077e:	mov    QWORD PTR [rsp+0xa0],0x100
   1078a:	mov    QWORD PTR [rsp+0xa8],rax
   10792:	mov    QWORD PTR [rsp+0xb0],0x8
   1079e:	test   r10d,r10d
   107a1:	mov    QWORD PTR [rsp+0xb8],0x103
   107ad:	je     10a6e <unwrap_key+0x4ee>
   107b3:	mov    QWORD PTR [rsp+0xc0],r12
   107bb:	mov    QWORD PTR [rsp+0xc8],0x1
   107c7:	mov    eax,DWORD PTR [rip+0x1288b]        # 23058 <opt_key_usage_default>
   107cd:	or     eax,DWORD PTR [rip+0x15705]        # 25ed8 <opt_key_usage_decrypt>
   107d3:	mov    r8d,0x4
   107d9:	je     10821 <unwrap_key+0x2a1>
   107db:	mov    QWORD PTR [rsp+0xd8],r12
   107e3:	mov    r8d,0x6
   107e9:	mov    QWORD PTR [rsp+0xd0],0x104
   107f5:	mov    QWORD PTR [rsp+0xe0],0x1
   10801:	mov    QWORD PTR [rsp+0xe8],0x105
   1080d:	mov    QWORD PTR [rsp+0xf0],r12
   10815:	mov    QWORD PTR [rsp+0xf8],0x1
   10821:	mov    r9d,DWORD PTR [rip+0x156a8]        # 25ed0 <opt_key_usage_wrap>
   10828:	test   r9d,r9d
   1082b:	je     10876 <unwrap_key+0x2f6>
   1082d:	lea    eax,[r8+0x1]
   10831:	movsxd rdx,r8d
   10834:	add    r8d,0x2
   10838:	cdqe   
   1083a:	imul   rdx,rdx,0x18
   1083e:	imul   rax,rax,0x18
   10842:	mov    QWORD PTR [rsp+rdx*1+0x70],0x106
   1084b:	mov    QWORD PTR [rsp+rdx*1+0x78],r12
   10850:	mov    QWORD PTR [rsp+rdx*1+0x80],0x1
   1085c:	mov    QWORD PTR [rsp+rax*1+0x70],0x107
   10865:	mov    QWORD PTR [rsp+rax*1+0x78],r12
   1086a:	mov    QWORD PTR [rsp+rax*1+0x80],0x1
   10876:	movsxd rax,r8d
   10879:	mov    esi,DWORD PTR [rip+0x15665]        # 25ee4 <opt_is_extractable>
   1087f:	lea    ebx,[r8+0x1]
   10883:	imul   rax,rax,0x18
   10887:	test   esi,esi
   10889:	mov    QWORD PTR [rsp+rax*1+0x70],0x162
   10892:	je     10a53 <unwrap_key+0x4d3>
   10898:	mov    QWORD PTR [rsp+rax*1+0x78],r12
   1089d:	mov    QWORD PTR [rsp+rax*1+0x80],0x1
   108a9:	mov    edx,0xa
   108ae:	xor    esi,esi
   108b0:	mov    DWORD PTR [rsp+0x8],r8d
   108b5:	call   57c0 <strtol@plt>
   108ba:	mov    QWORD PTR [rsp+0x30],rax
   108bf:	test   rax,rax
   108c2:	je     108f3 <unwrap_key+0x373>
   108c4:	movsxd rcx,ebx
   108c7:	lea    rax,[rsp+0x30]
   108cc:	mov    r8d,DWORD PTR [rsp+0x8]
   108d1:	imul   rcx,rcx,0x18
   108d5:	lea    ebx,[r8+0x2]
   108d9:	mov    QWORD PTR [rsp+rcx*1+0x70],0x161
   108e2:	mov    QWORD PTR [rsp+rcx*1+0x78],rax
   108e7:	mov    QWORD PTR [rsp+rcx*1+0x80],0x8
   108f3:	mov    rdi,QWORD PTR [rip+0x156ce]        # 25fc8 <opt_application_label>
   108fa:	test   rdi,rdi
   108fd:	je     10928 <unwrap_key+0x3a8>
   108ff:	movsxd rax,ebx
   10902:	add    ebx,0x1
   10905:	lea    r12,[rax+rax*2]
   10909:	shl    r12,0x3
   1090d:	mov    QWORD PTR [rsp+r12*1+0x70],0x3
   10916:	mov    QWORD PTR [rsp+r12*1+0x78],rdi
   1091b:	call   5680 <strlen@plt>
   10920:	mov    QWORD PTR [rsp+r12*1+0x80],rax
   10928:	mov    rdi,QWORD PTR [rip+0x15691]        # 25fc0 <opt_application_id>
   1092f:	lea    r12,[rsp+0x48]
   10934:	test   rdi,rdi
   10937:	je     10985 <unwrap_key+0x405>
   10939:	lea    rsi,[rsp+0x250]
   10941:	mov    rdx,r12
   10944:	mov    QWORD PTR [rsp+0x48],0x64
   1094d:	mov    QWORD PTR [rsp+0x8],rsi
   10952:	call   5620 <sc_hex_to_bin@plt>
   10957:	test   eax,eax
   10959:	jne    10985 <unwrap_key+0x405>
   1095b:	movsxd rax,ebx
   1095e:	mov    rsi,QWORD PTR [rsp+0x8]
   10963:	mov    rdx,QWORD PTR [rsp+0x48]
   10968:	add    ebx,0x1
   1096b:	imul   rax,rax,0x18
   1096f:	mov    QWORD PTR [rsp+rax*1+0x70],0x102
   10978:	mov    QWORD PTR [rsp+rax*1+0x78],rsi
   1097d:	mov    QWORD PTR [rsp+rax*1+0x80],rdx
   10985:	mov    rax,QWORD PTR [rip+0x15564]        # 25ef0 <opt_allowed_mechanisms_len>
   1098c:	test   rax,rax
   1098f:	je     109bc <unwrap_key+0x43c>
   10991:	movsxd rdx,ebx
   10994:	lea    rsi,[rip+0x15565]        # 25f00 <opt_allowed_mechanisms>
   1099b:	shl    rax,0x3
   1099f:	add    ebx,0x1
   109a2:	imul   rdx,rdx,0x18
   109a6:	mov    QWORD PTR [rsp+rdx*1+0x70],0x40000600
   109af:	mov    QWORD PTR [rsp+rdx*1+0x78],rsi
   109b4:	mov    QWORD PTR [rsp+rdx*1+0x80],rax
   109bc:	mov    rax,QWORD PTR [rip+0x154cd]        # 25e90 <p11>
   109c3:	movsxd rcx,ebx
   109c6:	mov    r9,r13
   109c9:	mov    rdi,rbp
   109cc:	lea    rsi,[rsp+0x50]
   109d1:	push   r12
   109d3:	push   rcx
   109d4:	mov    rcx,r15
   109d7:	mov    r8,QWORD PTR [rsp+0x10]
   109dc:	mov    rdx,QWORD PTR [rsp+0x50]
   109e1:	call   QWORD PTR [rax+0x1f0]
   109e7:	pop    rdx
   109e8:	pop    rcx
   109e9:	test   rax,rax
   109ec:	jne    10b1c <unwrap_key+0x59c>
   109f2:	mov    rdi,r14
   109f5:	call   5590 <free@plt>
   109fa:	lea    rdi,[rip+0x79ef]        # 183f0 <_IO_stdin_used+0x13f0>
   10a01:	call   5600 <puts@plt>
   10a06:	mov    rsi,QWORD PTR [rsp+0x48]
   10a0b:	mov    rdi,rbp
   10a0e:	call   e9f0 <show_object>
   10a13:	mov    rax,QWORD PTR [rsp+0x6c8]
   10a1b:	xor    rax,QWORD PTR fs:0x28
   10a24:	jne    10b2b <unwrap_key+0x5ab>
   10a2a:	add    rsp,0x6d8
   10a31:	mov    eax,0x1
   10a36:	pop    rbx
   10a37:	pop    rbp
   10a38:	pop    r12
   10a3a:	pop    r13
   10a3c:	pop    r14
   10a3e:	pop    r15
   10a40:	ret    
   10a41:	mov    QWORD PTR [rsp+0x28],0x1f
   10a4a:	lea    rdi,[rbx+0x4]
   10a4e:	jmp    10772 <unwrap_key+0x1f2>
   10a53:	lea    rdx,[rsp+0x1f]
   10a58:	mov    QWORD PTR [rsp+rax*1+0x80],0x1
   10a64:	mov    QWORD PTR [rsp+rax*1+0x78],rdx
   10a69:	jmp    108a9 <unwrap_key+0x329>
   10a6e:	lea    rax,[rsp+0x1f]
   10a73:	mov    QWORD PTR [rsp+0xc8],0x1
   10a7f:	mov    QWORD PTR [rsp+0xc0],rax
   10a87:	jmp    107c7 <unwrap_key+0x247>
   10a8c:	mov    rdi,QWORD PTR [rip+0x1540d]        # 25ea0 <opt_iv>
   10a93:	lea    rsi,[rsp+0x38]
   10a98:	mov    QWORD PTR [rsp+0x38],0x10
   10aa1:	call   c820 <get_iv.constprop.0>
   10aa6:	mov    QWORD PTR [rsp+0x58],rax
   10aab:	mov    r14,rax
   10aae:	mov    rax,QWORD PTR [rsp+0x38]
   10ab3:	mov    QWORD PTR [rsp+0x60],rax
   10ab8:	jmp    1071d <unwrap_key+0x19d>
   10abd:	lea    r15,[rsp+0x2c0]
   10ac5:	mov    edx,0x400
   10aca:	xor    edi,edi
   10acc:	mov    rsi,r15
   10acf:	call   5740 <read@plt>
   10ad4:	movsxd rbx,eax
   10ad7:	mov    QWORD PTR [rsp],rbx
   10adb:	test   eax,eax
   10add:	jns    106fb <unwrap_key+0x17b>
   10ae3:	mov    rsi,QWORD PTR [rip+0x1568e]        # 26178 <opt_input>
   10aea:	lea    rdi,[rip+0x7273]        # 17d64 <_IO_stdin_used+0xd64>
   10af1:	xor    eax,eax
   10af3:	call   15f90 <util_fatal>
   10af8:	mov    ebx,0x2
   10afd:	jmp    108f3 <unwrap_key+0x373>
   10b02:	lea    rdi,[rip+0x7898]        # 183a1 <_IO_stdin_used+0x13a1>
   10b09:	call   15f90 <util_fatal>
   10b0e:	lea    rdi,[rip+0xae93]        # 1b9a8 <_IO_stdin_used+0x49a8>
   10b15:	xor    eax,eax
   10b17:	call   15f90 <util_fatal>
   10b1c:	mov    rsi,rax
   10b1f:	lea    rdi,[rip+0x78be]        # 183e4 <_IO_stdin_used+0x13e4>
   10b26:	call   9140 <p11_fatal>
   10b2b:	call   5690 <__stack_chk_fail@plt>
   10b30:	mov    rsi,QWORD PTR [rip+0x15641]        # 26178 <opt_input>
   10b37:	lea    rdi,[rip+0x71fd]        # 17d3b <_IO_stdin_used+0xd3b>
   10b3e:	xor    eax,eax
   10b40:	call   15f90 <util_fatal>
   10b45:	mov    rsi,rbx
   10b48:	lea    rdi,[rip+0x787d]        # 183cc <_IO_stdin_used+0x13cc>
   10b4f:	xor    eax,eax
   10b51:	call   15f90 <util_fatal>
   10b56:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000010b60 <gen_keypair>:
   10b60:	push   r15
   10b62:	mov    r9d,0x1
   10b68:	push   r14
   10b6a:	push   r13
   10b6c:	push   r12
   10b6e:	mov    r12,r8
   10b71:	push   rbp
   10b72:	mov    rbp,rsi
   10b75:	push   rbx
   10b76:	sub    rsp,0x4a8
   10b7d:	mov    QWORD PTR [rsp+0x20],rdi
   10b82:	lea    r14,[rsp+0xd0]
   10b8a:	lea    r15,[rsp+0x2b0]
   10b92:	mov    QWORD PTR [rsp+0x8],rdx
   10b97:	mov    rdi,r14
   10b9a:	lea    rbx,[rsp+0x3e]
   10b9f:	lea    rdx,[rsp+0x48]
   10ba4:	mov    QWORD PTR [rsp+0x10],rcx
   10ba9:	mov    ecx,0x3c
   10bae:	mov    rax,QWORD PTR fs:0x28
   10bb7:	mov    QWORD PTR [rsp+0x498],rax
   10bbf:	xor    eax,eax
   10bc1:	mov    BYTE PTR [rsp+0x497],0x1
   10bc9:	mov    QWORD PTR [rsp+0x70],0x0
   10bd2:	mov    QWORD PTR [rsp+0x78],0x0
   10bdb:	mov    QWORD PTR [rsp+0x80],0x0
   10be7:	mov    QWORD PTR [rsp+0x40],0x400
   10bf0:	mov    WORD PTR [rsp+0x495],r9w
   10bf9:	rep stos QWORD PTR es:[rdi],rax
   10bfc:	mov    ecx,0x3c
   10c01:	mov    rdi,r15
   10c04:	mov    BYTE PTR [rsp+0x3e],0x1
   10c09:	rep stos QWORD PTR es:[rdi],rax
   10c0c:	lea    rax,[rsp+0x50]
   10c11:	mov    BYTE PTR [rsp+0x3f],0x0
   10c16:	mov    QWORD PTR [rsp+0x48],0x2
   10c1f:	mov    QWORD PTR [rsp+0x50],0x3
   10c28:	mov    QWORD PTR [rsp+0xd8],rdx
   10c30:	mov    QWORD PTR [rsp+0xe0],0x8
   10c3c:	mov    QWORD PTR [rsp+0xe8],0x1
   10c48:	mov    QWORD PTR [rsp+0xf0],rbx
   10c50:	mov    QWORD PTR [rsp+0xf8],0x1
   10c5c:	mov    QWORD PTR [rsp+0x2b8],rax
   10c64:	mov    QWORD PTR [rsp+0x2c0],0x8
   10c70:	mov    QWORD PTR [rsp+0x2c8],0x1
   10c7c:	mov    QWORD PTR [rsp+0x2d0],rbx
   10c84:	mov    QWORD PTR [rsp+0x2d8],0x1
   10c90:	mov    QWORD PTR [rsp+0x2e0],0x2
   10c9c:	mov    QWORD PTR [rsp+0x2e8],rbx
   10ca4:	mov    QWORD PTR [rsp+0x2f0],0x1
   10cb0:	mov    QWORD PTR [rsp+0x2f8],0x103
   10cbc:	mov    QWORD PTR [rsp+0x300],rbx
   10cc4:	mov    QWORD PTR [rsp+0x308],0x1
   10cd0:	mov    QWORD PTR [rsp+0x58],0xffffffffffffffff
   10cd9:	mov    QWORD PTR [rsp+0x68],0x0
   10ce2:	test   r8,r8
   10ce5:	je     1148e <gen_keypair+0x92e>
   10ceb:	mov    ecx,0x4
   10cf0:	lea    rdi,[rip+0x7711]        # 18408 <_IO_stdin_used+0x1408>
   10cf7:	mov    rsi,r8
   10cfa:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   10cfc:	seta   al
   10cff:	sbb    al,0x0
   10d01:	test   al,al
   10d03:	jne    1118e <gen_keypair+0x62e>
   10d09:	mov    QWORD PTR [rsp+0xb0],0x0
   10d15:	add    r12,0x4
   10d19:	cmp    DWORD PTR [rip+0x153f8],0x0        # 26118 <opt_mechanism_used>
   10d20:	mov    QWORD PTR [rsp+0xb8],0xa
   10d2c:	jne    10d59 <gen_keypair+0x1f9>
   10d2e:	mov    rdi,QWORD PTR [rsp+0x20]
   10d33:	mov    ecx,0x2
   10d38:	mov    esi,0x10000
   10d3d:	lea    rdx,[rsp+0xb0]
   10d45:	lea    r8,[rip+0x153d4]        # 26120 <opt_mechanism>
   10d4c:	call   9300 <find_mechanism>
   10d51:	test   eax,eax
   10d53:	je     117aa <gen_keypair+0xc4a>
   10d59:	xor    esi,esi
   10d5b:	mov    edx,0xa
   10d60:	mov    rdi,r12
   10d63:	call   57c0 <strtol@plt>
   10d68:	test   rax,rax
   10d6b:	je     10d72 <gen_keypair+0x212>
   10d6d:	mov    QWORD PTR [rsp+0x40],rax
   10d72:	lea    rax,[rsp+0x40]
   10d77:	cmp    DWORD PTR [rip+0x122da],0x0        # 23058 <opt_key_usage_default>
   10d7e:	mov    QWORD PTR [rsp+0x100],0x121
   10d8a:	mov    QWORD PTR [rsp+0x108],rax
   10d92:	lea    rax,[rsp+0x495]
   10d9a:	mov    QWORD PTR [rsp+0x110],0x8
   10da6:	mov    QWORD PTR [rsp+0x118],0x122
   10db2:	mov    QWORD PTR [rsp+0x120],rax
   10dba:	mov    QWORD PTR [rsp+0x128],0x3
   10dc6:	je     11450 <gen_keypair+0x8f0>
   10dcc:	mov    QWORD PTR [rsp+0x138],rbx
   10dd4:	mov    eax,0x5
   10dd9:	mov    QWORD PTR [rsp+0x130],0x10a
   10de5:	mov    QWORD PTR [rsp+0x140],0x1
   10df1:	mov    QWORD PTR [rsp+0x310],0x108
   10dfd:	mov    QWORD PTR [rsp+0x318],rbx
   10e05:	mov    QWORD PTR [rsp+0x320],0x1
   10e11:	movsxd rdx,eax
   10e14:	add    eax,0x1
   10e17:	imul   rdx,rdx,0x18
   10e1b:	mov    QWORD PTR [rsp+rdx*1+0xd0],0x104
   10e27:	mov    QWORD PTR [rsp+rdx*1+0xd8],rbx
   10e2f:	mov    QWORD PTR [rsp+rdx*1+0xe0],0x1
   10e3b:	mov    QWORD PTR [rsp+rdx*1+0x2b0],0x105
   10e47:	mov    QWORD PTR [rsp+rdx*1+0x2b8],rbx
   10e4f:	mov    QWORD PTR [rsp+rdx*1+0x2c0],0x1
   10e5b:	cmp    DWORD PTR [rip+0x1506e],0x0        # 25ed0 <opt_key_usage_wrap>
   10e62:	je     10eae <gen_keypair+0x34e>
   10e64:	movsxd rdx,eax
   10e67:	add    eax,0x1
   10e6a:	imul   rdx,rdx,0x18
   10e6e:	mov    QWORD PTR [rsp+rdx*1+0xd0],0x106
   10e7a:	mov    QWORD PTR [rsp+rdx*1+0xd8],rbx
   10e82:	mov    QWORD PTR [rsp+rdx*1+0xe0],0x1
   10e8e:	mov    QWORD PTR [rsp+rdx*1+0x2b0],0x107
   10e9a:	mov    QWORD PTR [rsp+rdx*1+0x2b8],rbx
   10ea2:	mov    QWORD PTR [rsp+rdx*1+0x2c0],0x1
   10eae:	movsxd rdx,eax
   10eb1:	lea    rcx,[rsp+0x68]
   10eb6:	add    eax,0x1
   10eb9:	xor    r12d,r12d
   10ebc:	imul   rdx,rdx,0x18
   10ec0:	mov    r9d,eax
   10ec3:	mov    QWORD PTR [rsp+rdx*1+0xd0],0x100
   10ecf:	mov    QWORD PTR [rsp+rdx*1+0xd8],rcx
   10ed7:	mov    QWORD PTR [rsp+rdx*1+0xe0],0x8
   10ee3:	mov    QWORD PTR [rsp+rdx*1+0x2b0],0x100
   10eef:	mov    QWORD PTR [rsp+rdx*1+0x2b8],rcx
   10ef7:	mov    QWORD PTR [rsp+rdx*1+0x2c0],0x8
   10f03:	mov    rdx,QWORD PTR [rip+0x15216]        # 26120 <opt_mechanism>
   10f0a:	mov    QWORD PTR [rsp+0x70],rdx
   10f0f:	mov    rdi,QWORD PTR [rip+0x150da]        # 25ff0 <opt_object_label>
   10f16:	mov    r13d,eax
   10f19:	test   rdi,rdi
   10f1c:	je     10faf <gen_keypair+0x44f>
   10f22:	cdqe   
   10f24:	mov    DWORD PTR [rsp+0x2c],r9d
   10f29:	add    r13d,0x1
   10f2d:	lea    rdx,[rax+rax*2]
   10f31:	mov    QWORD PTR [rsp+0x18],rdi
   10f36:	shl    rdx,0x3
   10f3a:	mov    QWORD PTR [rsp+rdx*1+0xd8],rdi
   10f42:	mov    QWORD PTR [rsp+rdx*1+0xd0],0x3
   10f4e:	mov    QWORD PTR [rsp+0x20],rdx
   10f53:	call   5680 <strlen@plt>
   10f58:	mov    rdx,QWORD PTR [rsp+0x20]
   10f5d:	mov    rdi,QWORD PTR [rsp+0x18]
   10f62:	mov    QWORD PTR [rsp+rdx*1+0xe0],rax
   10f6a:	movsxd rax,DWORD PTR [rsp+0x2c]
   10f6f:	lea    rdx,[rax+rax*2]
   10f73:	mov    DWORD PTR [rsp+0x20],eax
   10f77:	shl    rdx,0x3
   10f7b:	mov    QWORD PTR [rsp+rdx*1+0x2b0],0x3
   10f87:	mov    QWORD PTR [rsp+rdx*1+0x2b8],rdi
   10f8f:	mov    QWORD PTR [rsp+0x18],rdx
   10f94:	call   5680 <strlen@plt>
   10f99:	mov    rdx,QWORD PTR [rsp+0x18]
   10f9e:	mov    r9d,DWORD PTR [rsp+0x20]
   10fa3:	mov    QWORD PTR [rsp+rdx*1+0x2c0],rax
   10fab:	add    r9d,0x1
   10faf:	mov    rdx,QWORD PTR [rip+0x1504a]        # 26000 <opt_object_id_len>
   10fb6:	test   rdx,rdx
   10fb9:	je     11010 <gen_keypair+0x4b0>
   10fbb:	movsxd rax,r13d
   10fbe:	lea    rcx,[rip+0x150db]        # 260a0 <opt_object_id>
   10fc5:	add    r13d,0x1
   10fc9:	imul   rax,rax,0x18
   10fcd:	mov    QWORD PTR [rsp+rax*1+0xd0],0x102
   10fd9:	mov    QWORD PTR [rsp+rax*1+0xd8],rcx
   10fe1:	mov    QWORD PTR [rsp+rax*1+0xe0],rdx
   10fe9:	movsxd rax,r9d
   10fec:	add    r9d,0x1
   10ff0:	imul   rax,rax,0x18
   10ff4:	mov    QWORD PTR [rsp+rax*1+0x2b0],0x102
   11000:	mov    QWORD PTR [rsp+rax*1+0x2b8],rcx
   11008:	mov    QWORD PTR [rsp+rax*1+0x2c0],rdx
   11010:	lea    ecx,[r13+0x1]
   11014:	movsxd r13,r13d
   11017:	mov    r8d,DWORD PTR [rip+0x14ece]        # 25eec <opt_is_private>
   1101e:	imul   r13,r13,0x18
   11022:	test   r8d,r8d
   11025:	mov    QWORD PTR [rsp+r13*1+0xd0],0x2
   11031:	je     11470 <gen_keypair+0x910>
   11037:	mov    QWORD PTR [rsp+r13*1+0xd8],rbx
   1103f:	mov    QWORD PTR [rsp+r13*1+0xe0],0x1
   1104b:	mov    edi,DWORD PTR [rip+0x14e57]        # 25ea8 <opt_always_auth>
   11051:	test   edi,edi
   11053:	je     11080 <gen_keypair+0x520>
   11055:	movsxd rax,r9d
   11058:	add    r9d,0x1
   1105c:	imul   rax,rax,0x18
   11060:	mov    QWORD PTR [rsp+rax*1+0x2b0],0x202
   1106c:	mov    QWORD PTR [rsp+rax*1+0x2b8],rbx
   11074:	mov    QWORD PTR [rsp+rax*1+0x2c0],0x1
   11080:	mov    esi,DWORD PTR [rip+0x14e5e]        # 25ee4 <opt_is_extractable>
   11086:	test   esi,esi
   11088:	je     110b5 <gen_keypair+0x555>
   1108a:	movsxd rax,r9d
   1108d:	add    r9d,0x1
   11091:	imul   rax,rax,0x18
   11095:	mov    QWORD PTR [rsp+rax*1+0x2b0],0x162
   110a1:	mov    QWORD PTR [rsp+rax*1+0x2b8],rbx
   110a9:	mov    QWORD PTR [rsp+rax*1+0x2c0],0x1
   110b5:	mov    rax,QWORD PTR [rip+0x14e34]        # 25ef0 <opt_allowed_mechanisms_len>
   110bc:	test   rax,rax
   110bf:	je     110f3 <gen_keypair+0x593>
   110c1:	movsxd rdx,r9d
   110c4:	lea    rbx,[rip+0x14e35]        # 25f00 <opt_allowed_mechanisms>
   110cb:	shl    rax,0x3
   110cf:	add    r9d,0x1
   110d3:	imul   rdx,rdx,0x18
   110d7:	mov    QWORD PTR [rsp+rdx*1+0x2b0],0x40000600
   110e3:	mov    QWORD PTR [rsp+rdx*1+0x2b8],rbx
   110eb:	mov    QWORD PTR [rsp+rdx*1+0x2c0],rax
   110f3:	mov    rax,QWORD PTR [rip+0x14d96]        # 25e90 <p11>
   110fa:	movsxd rcx,ecx
   110fd:	mov    rdx,r14
   11100:	movsxd r9,r9d
   11103:	lea    rsi,[rsp+0x70]
   11108:	mov    r8,r15
   1110b:	push   QWORD PTR [rsp+0x10]
   1110f:	mov    rdi,rbp
   11112:	push   QWORD PTR [rsp+0x10]
   11116:	call   QWORD PTR [rax+0x1e0]
   1111c:	pop    rdx
   1111d:	pop    rcx
   1111e:	test   rax,rax
   11121:	jne    119a9 <gen_keypair+0xe49>
   11127:	test   r12,r12
   1112a:	je     11134 <gen_keypair+0x5d4>
   1112c:	mov    rdi,r12
   1112f:	call   5590 <free@plt>
   11134:	lea    rdi,[rip+0x73b2]        # 184ed <_IO_stdin_used+0x14ed>
   1113b:	call   5600 <puts@plt>
   11140:	mov    rax,QWORD PTR [rsp+0x10]
   11145:	mov    rdi,rbp
   11148:	mov    rsi,QWORD PTR [rax]
   1114b:	call   e9f0 <show_object>
   11150:	mov    rax,QWORD PTR [rsp+0x8]
   11155:	mov    rdi,rbp
   11158:	mov    rsi,QWORD PTR [rax]
   1115b:	call   e9f0 <show_object>
   11160:	mov    rax,QWORD PTR [rsp+0x498]
   11168:	xor    rax,QWORD PTR fs:0x28
   11171:	jne    1193f <gen_keypair+0xddf>
   11177:	add    rsp,0x4a8
   1117e:	mov    eax,0x1
   11183:	pop    rbx
   11184:	pop    rbp
   11185:	pop    r12
   11187:	pop    r13
   11189:	pop    r14
   1118b:	pop    r15
   1118d:	ret    
   1118e:	mov    edx,0x4
   11193:	lea    rsi,[rip+0x7273]        # 1840d <_IO_stdin_used+0x140d>
   1119a:	mov    rdi,r8
   1119d:	call   55f0 <strncmp@plt>
   111a2:	test   eax,eax
   111a4:	je     10d09 <gen_keypair+0x1a9>
   111aa:	mov    edx,0x3
   111af:	lea    rsi,[rip+0x725c]        # 18412 <_IO_stdin_used+0x1412>
   111b6:	mov    rdi,r12
   111b9:	call   55f0 <strncmp@plt>
   111be:	test   eax,eax
   111c0:	je     114e8 <gen_keypair+0x988>
   111c6:	mov    edx,0x3
   111cb:	lea    rsi,[rip+0x7244]        # 18416 <_IO_stdin_used+0x1416>
   111d2:	mov    rdi,r12
   111d5:	call   55f0 <strncmp@plt>
   111da:	test   eax,eax
   111dc:	je     114e8 <gen_keypair+0x988>
   111e2:	mov    edx,0x9
   111e7:	lea    rsi,[rip+0x6e0d]        # 17ffb <_IO_stdin_used+0xffb>
   111ee:	mov    rdi,r12
   111f1:	call   55f0 <strncmp@plt>
   111f6:	test   eax,eax
   111f8:	je     11216 <gen_keypair+0x6b6>
   111fa:	mov    edx,0x9
   111ff:	lea    rsi,[rip+0x7246]        # 1844c <_IO_stdin_used+0x144c>
   11206:	mov    rdi,r12
   11209:	call   55f0 <strncmp@plt>
   1120e:	test   eax,eax
   11210:	jne    11a1f <gen_keypair+0xebf>
   11216:	lea    r13,[r12+0x9]
   1121b:	lea    rdi,[rip+0x7239]        # 1845b <_IO_stdin_used+0x145b>
   11222:	mov    QWORD PTR [rsp+0x88],0xffffffffffffffff
   1122e:	mov    rsi,r13
   11231:	call   57a0 <strcmp@plt>
   11236:	test   eax,eax
   11238:	je     11804 <gen_keypair+0xca4>
   1123e:	mov    rsi,r13
   11241:	lea    rdi,[rip+0x720e]        # 18456 <_IO_stdin_used+0x1456>
   11248:	call   57a0 <strcmp@plt>
   1124d:	test   eax,eax
   1124f:	je     11804 <gen_keypair+0xca4>
   11255:	mov    rsi,r13
   11258:	lea    rdi,[rip+0x7204]        # 18463 <_IO_stdin_used+0x1463>
   1125f:	call   57a0 <strcmp@plt>
   11264:	test   eax,eax
   11266:	je     118fb <gen_keypair+0xd9b>
   1126c:	mov    rsi,r13
   1126f:	lea    rdi,[rip+0x71e8]        # 1845e <_IO_stdin_used+0x145e>
   11276:	call   57a0 <strcmp@plt>
   1127b:	test   eax,eax
   1127d:	je     118fb <gen_keypair+0xd9b>
   11283:	mov    rsi,r13
   11286:	lea    rdi,[rip+0x71de]        # 1846b <_IO_stdin_used+0x146b>
   1128d:	call   57a0 <strcmp@plt>
   11292:	test   eax,eax
   11294:	je     1191d <gen_keypair+0xdbd>
   1129a:	mov    rsi,r13
   1129d:	lea    rdi,[rip+0x71c2]        # 18466 <_IO_stdin_used+0x1466>
   112a4:	call   57a0 <strcmp@plt>
   112a9:	test   eax,eax
   112ab:	je     1191d <gen_keypair+0xdbd>
   112b1:	mov    rsi,r13
   112b4:	lea    rdi,[rip+0x71b3]        # 1846e <_IO_stdin_used+0x146e>
   112bb:	call   57a0 <strcmp@plt>
   112c0:	test   eax,eax
   112c2:	jne    11944 <gen_keypair+0xde4>
   112c8:	movdqa xmm0,XMMWORD PTR [rip+0xdbe0]        # 1eeb0 <GOST_HASH2001_PARAMSET_OID+0x60>
   112d0:	mov    QWORD PTR [rsp+0x58],0x30
   112d9:	mov    QWORD PTR [rsp+0x88],0x1200
   112e5:	movaps XMMWORD PTR [rsp+0x90],xmm0
   112ed:	movdqa xmm0,XMMWORD PTR [rip+0xdbcb]        # 1eec0 <GOST_HASH2001_PARAMSET_OID+0x70>
   112f5:	mov    QWORD PTR [rsp+0xa0],0xb
   11301:	mov    QWORD PTR [rsp+0xc0],0xa
   1130d:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   11315:	cmp    DWORD PTR [rip+0x14dfc],0x0        # 26118 <opt_mechanism_used>
   1131c:	je     118a6 <gen_keypair+0xd46>
   11322:	mov    rax,QWORD PTR [rsp+0xa0]
   1132a:	lea    rdx,[rsp+0x90]
   11332:	mov    QWORD PTR [rsp+0x100],0x250
   1133e:	mov    QWORD PTR [rsp+0x108],rdx
   11346:	mov    QWORD PTR [rsp+0x110],rax
   1134e:	mov    QWORD PTR [rsp+0x320],rax
   11356:	mov    rax,QWORD PTR [rsp+0xc0]
   1135e:	mov    QWORD PTR [rsp+0x318],rdx
   11366:	lea    rdx,[rsp+0xb0]
   1136e:	mov    QWORD PTR [rsp+0x128],rax
   11376:	mov    QWORD PTR [rsp+0x338],rax
   1137e:	lea    rax,[rsp+0x58]
   11383:	mov    QWORD PTR [rsp+0x138],rax
   1138b:	mov    QWORD PTR [rsp+0x348],rax
   11393:	mov    eax,DWORD PTR [rip+0x11cbf]        # 23058 <opt_key_usage_default>
   11399:	or     eax,DWORD PTR [rip+0x14b3d]        # 25edc <opt_key_usage_sign>
   1139f:	mov    QWORD PTR [rsp+0x120],rdx
   113a7:	mov    QWORD PTR [rsp+0x310],0x250
   113b3:	mov    QWORD PTR [rsp+0x118],0x251
   113bf:	mov    QWORD PTR [rsp+0x328],0x251
   113cb:	mov    QWORD PTR [rsp+0x330],rdx
   113d3:	mov    QWORD PTR [rsp+0x130],0x100
   113df:	mov    QWORD PTR [rsp+0x140],0x8
   113eb:	mov    QWORD PTR [rsp+0x340],0x100
   113f7:	mov    QWORD PTR [rsp+0x350],0x8
   11403:	jne    11856 <gen_keypair+0xcf6>
   11409:	mov    r9d,0x7
   1140f:	mov    eax,0x5
   11414:	cmp    DWORD PTR [rip+0x14ab9],0x0        # 25ed4 <opt_key_usage_derive>
   1141b:	je     11448 <gen_keypair+0x8e8>
   1141d:	movsxd rdx,r9d
   11420:	add    r9d,0x1
   11424:	imul   rdx,rdx,0x18
   11428:	mov    QWORD PTR [rsp+rdx*1+0x2b0],0x10c
   11434:	mov    QWORD PTR [rsp+rdx*1+0x2b8],rbx
   1143c:	mov    QWORD PTR [rsp+rdx*1+0x2c0],0x1
   11448:	xor    r12d,r12d
   1144b:	jmp    10f03 <gen_keypair+0x3a3>
   11450:	cmp    DWORD PTR [rip+0x14a85],0x0        # 25edc <opt_key_usage_sign>
   11457:	jne    1149e <gen_keypair+0x93e>
   11459:	mov    eax,0x4
   1145e:	cmp    DWORD PTR [rip+0x14a73],0x0        # 25ed8 <opt_key_usage_decrypt>
   11465:	je     10e5b <gen_keypair+0x2fb>
   1146b:	jmp    10e11 <gen_keypair+0x2b1>
   11470:	lea    rax,[rsp+0x3f]
   11475:	mov    QWORD PTR [rsp+r13*1+0xe0],0x1
   11481:	mov    QWORD PTR [rsp+r13*1+0xd8],rax
   11489:	jmp    1104b <gen_keypair+0x4eb>
   1148e:	mov    r9d,0x4
   11494:	mov    eax,0x2
   11499:	jmp    10f0f <gen_keypair+0x3af>
   1149e:	mov    QWORD PTR [rsp+0x138],rbx
   114a6:	mov    eax,0x5
   114ab:	mov    QWORD PTR [rsp+0x130],0x10a
   114b7:	mov    QWORD PTR [rsp+0x140],0x1
   114c3:	mov    QWORD PTR [rsp+0x310],0x108
   114cf:	mov    QWORD PTR [rsp+0x318],rbx
   114d7:	mov    QWORD PTR [rsp+0x320],0x1
   114e3:	jmp    1145e <gen_keypair+0x8fe>
   114e8:	mov    QWORD PTR [rsp+0xb0],0x1040
   114f4:	add    r12,0x3
   114f8:	lea    r13,[rip+0x111a9]        # 226a8 <ec_curve_infos+0x8>
   114ff:	lea    rdi,[rip+0x6ef8]        # 183fe <_IO_stdin_used+0x13fe>
   11506:	mov    QWORD PTR [rsp+0x68],0x3
   1150f:	mov    DWORD PTR [rsp+0x18],0x0
   11517:	jmp    11546 <gen_keypair+0x9e6>
   11519:	nop    DWORD PTR [rax+0x0]
   11520:	mov    rdi,QWORD PTR [r13+0x0]
   11524:	mov    rsi,r12
   11527:	call   57a0 <strcmp@plt>
   1152c:	test   eax,eax
   1152e:	je     11552 <gen_keypair+0x9f2>
   11530:	mov    rdi,QWORD PTR [r13+0x20]
   11534:	add    r13,0x28
   11538:	add    DWORD PTR [rsp+0x18],0x1
   1153d:	test   rdi,rdi
   11540:	je     11af9 <gen_keypair+0xf99>
   11546:	mov    rsi,r12
   11549:	call   57a0 <strcmp@plt>
   1154e:	test   eax,eax
   11550:	jne    11520 <gen_keypair+0x9c0>
   11552:	movsxd r13,DWORD PTR [rsp+0x18]
   11557:	lea    r12,[rip+0x11142]        # 226a0 <ec_curve_infos>
   1155e:	mov    edx,DWORD PTR [rip+0x14bb4]        # 26118 <opt_mechanism_used>
   11564:	imul   rax,r13,0x28
   11568:	mov    rax,QWORD PTR [r12+rax*1+0x20]
   1156d:	cmp    rax,0x1055
   11573:	je     117b6 <gen_keypair+0xc56>
   11579:	cmp    rax,0x1056
   1157f:	je     117e2 <gen_keypair+0xc82>
   11585:	test   edx,edx
   11587:	jne    115b4 <gen_keypair+0xa54>
   11589:	mov    rdi,QWORD PTR [rsp+0x20]
   1158e:	mov    ecx,0x1
   11593:	mov    esi,0x10000
   11598:	lea    rdx,[rsp+0xb0]
   115a0:	lea    r8,[rip+0x14b79]        # 26120 <opt_mechanism>
   115a7:	call   9300 <find_mechanism>
   115ac:	test   eax,eax
   115ae:	je     11a9a <gen_keypair+0xf3a>
   115b4:	imul   r13,r13,0x28
   115b8:	xor    eax,eax
   115ba:	or     rcx,0xffffffffffffffff
   115be:	mov    r13,QWORD PTR [r12+r13*1+0x10]
   115c3:	mov    rdi,r13
   115c6:	repnz scas al,BYTE PTR es:[rdi]
   115c8:	not    rcx
   115cb:	lea    rdi,[rcx-0x1]
   115cf:	shr    rdi,1
   115d2:	mov    QWORD PTR [rsp+0x60],rdi
   115d7:	call   5840 <malloc@plt>
   115dc:	mov    r12,rax
   115df:	test   rax,rax
   115e2:	je     11ae9 <gen_keypair+0xf89>
   115e8:	lea    rdx,[rsp+0x60]
   115ed:	mov    rsi,r12
   115f0:	mov    rdi,r13
   115f3:	call   5620 <sc_hex_to_bin@plt>
   115f8:	test   eax,eax
   115fa:	jne    11ab0 <gen_keypair+0xf50>
   11600:	cmp    DWORD PTR [rip+0x11a51],0x0        # 23058 <opt_key_usage_default>
   11607:	jne    11630 <gen_keypair+0xad0>
   11609:	cmp    DWORD PTR [rip+0x148cc],0x0        # 25edc <opt_key_usage_sign>
   11610:	jne    1175a <gen_keypair+0xbfa>
   11616:	mov    r9d,0x4
   1161c:	mov    eax,0x2
   11621:	cmp    DWORD PTR [rip+0x148ac],0x0        # 25ed4 <opt_key_usage_derive>
   11628:	je     116d0 <gen_keypair+0xb70>
   1162e:	jmp    1167b <gen_keypair+0xb1b>
   11630:	mov    QWORD PTR [rsp+0x108],rbx
   11638:	mov    r9d,0x5
   1163e:	mov    eax,0x3
   11643:	mov    QWORD PTR [rsp+0x100],0x10a
   1164f:	mov    QWORD PTR [rsp+0x110],0x1
   1165b:	mov    QWORD PTR [rsp+0x310],0x108
   11667:	mov    QWORD PTR [rsp+0x318],rbx
   1166f:	mov    QWORD PTR [rsp+0x320],0x1
   1167b:	movsxd rdx,eax
   1167e:	add    eax,0x1
   11681:	imul   rdx,rdx,0x18
   11685:	mov    QWORD PTR [rsp+rdx*1+0xd0],0x10c
   11691:	mov    QWORD PTR [rsp+rdx*1+0xd8],rbx
   11699:	mov    QWORD PTR [rsp+rdx*1+0xe0],0x1
   116a5:	movsxd rdx,r9d
   116a8:	add    r9d,0x1
   116ac:	imul   rdx,rdx,0x18
   116b0:	mov    QWORD PTR [rsp+rdx*1+0x2b0],0x10c
   116bc:	mov    QWORD PTR [rsp+rdx*1+0x2b8],rbx
   116c4:	mov    QWORD PTR [rsp+rdx*1+0x2c0],0x1
   116d0:	movsxd rdx,eax
   116d3:	mov    rcx,QWORD PTR [rsp+0x60]
   116d8:	imul   rdx,rdx,0x18
   116dc:	mov    QWORD PTR [rsp+rdx*1+0xe0],rcx
   116e4:	lea    rcx,[rsp+0x68]
   116e9:	mov    QWORD PTR [rsp+rdx*1+0xd0],0x180
   116f5:	mov    QWORD PTR [rsp+rdx*1+0xd8],r12
   116fd:	lea    edx,[rax+0x1]
   11700:	add    eax,0x2
   11703:	movsxd rdx,edx
   11706:	imul   rdx,rdx,0x18
   1170a:	mov    QWORD PTR [rsp+rdx*1+0xd0],0x100
   11716:	mov    QWORD PTR [rsp+rdx*1+0xd8],rcx
   1171e:	mov    QWORD PTR [rsp+rdx*1+0xe0],0x8
   1172a:	movsxd rdx,r9d
   1172d:	add    r9d,0x1
   11731:	imul   rdx,rdx,0x18
   11735:	mov    QWORD PTR [rsp+rdx*1+0x2b0],0x100
   11741:	mov    QWORD PTR [rsp+rdx*1+0x2b8],rcx
   11749:	mov    QWORD PTR [rsp+rdx*1+0x2c0],0x8
   11755:	jmp    10f03 <gen_keypair+0x3a3>
   1175a:	mov    QWORD PTR [rsp+0x108],rbx
   11762:	mov    r9d,0x5
   11768:	mov    eax,0x3
   1176d:	mov    QWORD PTR [rsp+0x100],0x10a
   11779:	mov    QWORD PTR [rsp+0x110],0x1
   11785:	mov    QWORD PTR [rsp+0x310],0x108
   11791:	mov    QWORD PTR [rsp+0x318],rbx
   11799:	mov    QWORD PTR [rsp+0x320],0x1
   117a5:	jmp    11621 <gen_keypair+0xac1>
   117aa:	lea    rdi,[rip+0xa227]        # 1b9d8 <_IO_stdin_used+0x49d8>
   117b1:	call   15f90 <util_fatal>
   117b6:	mov    DWORD PTR [rip+0x14714],0x0        # 25ed4 <opt_key_usage_derive>
   117c0:	mov    QWORD PTR [rsp+0x68],0x40
   117c9:	test   edx,edx
   117cb:	jne    115b4 <gen_keypair+0xa54>
   117d1:	mov    QWORD PTR [rsp+0xb0],0x1055
   117dd:	jmp    11589 <gen_keypair+0xa29>
   117e2:	mov    QWORD PTR [rsp+0x68],0x41
   117eb:	test   edx,edx
   117ed:	jne    115b4 <gen_keypair+0xa54>
   117f3:	mov    QWORD PTR [rsp+0xb0],0x1056
   117ff:	jmp    11589 <gen_keypair+0xa29>
   11804:	mov    QWORD PTR [rsp+0x58],0x30
   1180d:	movdqa xmm0,XMMWORD PTR [rip+0xd65b]        # 1ee70 <GOST_HASH2001_PARAMSET_OID+0x20>
   11815:	mov    QWORD PTR [rsp+0x88],0x1200
   11821:	movaps XMMWORD PTR [rsp+0x90],xmm0
   11829:	movdqa xmm0,XMMWORD PTR [rip+0xd64f]        # 1ee80 <GOST_HASH2001_PARAMSET_OID+0x30>
   11831:	mov    QWORD PTR [rsp+0xa0],0x9
   1183d:	mov    QWORD PTR [rsp+0xc0],0x9
   11849:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   11851:	jmp    11315 <gen_keypair+0x7b5>
   11856:	mov    QWORD PTR [rsp+0x150],rbx
   1185e:	mov    r9d,0x8
   11864:	mov    eax,0x6
   11869:	mov    QWORD PTR [rsp+0x148],0x10a
   11875:	mov    QWORD PTR [rsp+0x158],0x1
   11881:	mov    QWORD PTR [rsp+0x358],0x108
   1188d:	mov    QWORD PTR [rsp+0x360],rbx
   11895:	mov    QWORD PTR [rsp+0x368],0x1
   118a1:	jmp    11414 <gen_keypair+0x8b4>
   118a6:	mov    rdi,QWORD PTR [rsp+0x20]
   118ab:	mov    ecx,0x1
   118b0:	mov    esi,0x10000
   118b5:	lea    rdx,[rsp+0x88]
   118bd:	lea    r8,[rip+0x1485c]        # 26120 <opt_mechanism>
   118c4:	call   9300 <find_mechanism>
   118c9:	test   eax,eax
   118cb:	jne    11322 <gen_keypair+0x7c2>
   118d1:	mov    eax,0xd4321003
   118d6:	lea    rsi,[rip+0x6748]        # 18025 <_IO_stdin_used+0x1025>
   118dd:	cmp    QWORD PTR [rsp+0x58],rax
   118e2:	lea    rax,[rip+0xd79f]        # 1f088 <GOST_HASH2001_PARAMSET_OID+0x238>
   118e9:	lea    rdi,[rip+0xa1d8]        # 1bac8 <_IO_stdin_used+0x4ac8>
   118f0:	cmovne rsi,rax
   118f4:	xor    eax,eax
   118f6:	call   15f90 <util_fatal>
   118fb:	mov    QWORD PTR [rsp+0x58],0x30
   11904:	movdqa xmm0,XMMWORD PTR [rip+0xd584]        # 1ee90 <GOST_HASH2001_PARAMSET_OID+0x40>
   1190c:	mov    QWORD PTR [rsp+0x88],0x1200
   11918:	jmp    11821 <gen_keypair+0xcc1>
   1191d:	mov    QWORD PTR [rsp+0x58],0x30
   11926:	movdqa xmm0,XMMWORD PTR [rip+0xd572]        # 1eea0 <GOST_HASH2001_PARAMSET_OID+0x50>
   1192e:	mov    QWORD PTR [rsp+0x88],0x1200
   1193a:	jmp    11821 <gen_keypair+0xcc1>
   1193f:	call   5690 <__stack_chk_fail@plt>
   11944:	mov    rsi,r13
   11947:	lea    rdi,[rip+0x6b2c]        # 1847a <_IO_stdin_used+0x147a>
   1194e:	call   57a0 <strcmp@plt>
   11953:	test   eax,eax
   11955:	jne    119b8 <gen_keypair+0xe58>
   11957:	mov    QWORD PTR [rsp+0x58],0x30
   11960:	movdqa xmm0,XMMWORD PTR [rip+0xd508]        # 1ee70 <GOST_HASH2001_PARAMSET_OID+0x20>
   11968:	mov    QWORD PTR [rsp+0x88],0x1200
   11974:	movaps XMMWORD PTR [rsp+0x90],xmm0
   1197c:	movdqa xmm0,XMMWORD PTR [rip+0xd53c]        # 1eec0 <GOST_HASH2001_PARAMSET_OID+0x70>
   11984:	mov    QWORD PTR [rsp+0xa0],0x9
   11990:	mov    QWORD PTR [rsp+0xc0],0xa
   1199c:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   119a4:	jmp    11315 <gen_keypair+0x7b5>
   119a9:	mov    rsi,rax
   119ac:	lea    rdi,[rip+0x6b28]        # 184db <_IO_stdin_used+0x14db>
   119b3:	call   9140 <p11_fatal>
   119b8:	mov    rsi,r13
   119bb:	lea    rdi,[rip+0x6ac4]        # 18486 <_IO_stdin_used+0x1486>
   119c2:	call   57a0 <strcmp@plt>
   119c7:	test   eax,eax
   119c9:	jne    119ea <gen_keypair+0xe8a>
   119cb:	mov    QWORD PTR [rsp+0x58],0x30
   119d4:	movdqa xmm0,XMMWORD PTR [rip+0xd4b4]        # 1ee90 <GOST_HASH2001_PARAMSET_OID+0x40>
   119dc:	mov    QWORD PTR [rsp+0x88],0x1200
   119e8:	jmp    11974 <gen_keypair+0xe14>
   119ea:	mov    rsi,r13
   119ed:	lea    rdi,[rip+0x6a9e]        # 18492 <_IO_stdin_used+0x1492>
   119f4:	call   57a0 <strcmp@plt>
   119f9:	test   eax,eax
   119fb:	jne    11a30 <gen_keypair+0xed0>
   119fd:	mov    QWORD PTR [rsp+0x58],0x30
   11a06:	movdqa xmm0,XMMWORD PTR [rip+0xd492]        # 1eea0 <GOST_HASH2001_PARAMSET_OID+0x50>
   11a0e:	mov    QWORD PTR [rsp+0x88],0x1200
   11a1a:	jmp    11974 <gen_keypair+0xe14>
   11a1f:	mov    rsi,r12
   11a22:	lea    rdi,[rip+0x6a99]        # 184c2 <_IO_stdin_used+0x14c2>
   11a29:	xor    eax,eax
   11a2b:	call   15f90 <util_fatal>
   11a30:	mov    rsi,r13
   11a33:	lea    rdi,[rip+0x6a64]        # 1849e <_IO_stdin_used+0x149e>
   11a3a:	call   57a0 <strcmp@plt>
   11a3f:	test   eax,eax
   11a41:	jne    11b0a <gen_keypair+0xfaa>
   11a47:	mov    eax,0xd4321003
   11a4c:	movdqa xmm0,XMMWORD PTR [rip+0xd47c]        # 1eed0 <GOST_HASH2001_PARAMSET_OID+0x80>
   11a54:	mov    QWORD PTR [rsp+0x58],rax
   11a59:	add    rax,0x2
   11a5d:	mov    QWORD PTR [rsp+0x88],rax
   11a65:	movaps XMMWORD PTR [rsp+0x90],xmm0
   11a6d:	movdqa xmm0,XMMWORD PTR [rip+0xd46b]        # 1eee0 <GOST_HASH2001_PARAMSET_OID+0x90>
   11a75:	mov    QWORD PTR [rsp+0xa0],0xb
   11a81:	mov    QWORD PTR [rsp+0xc0],0xa
   11a8d:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   11a95:	jmp    11315 <gen_keypair+0x7b5>
   11a9a:	mov    rsi,QWORD PTR [rsp+0xb0]
   11aa2:	lea    rdi,[rip+0x9f57]        # 1ba00 <_IO_stdin_used+0x4a00>
   11aa9:	xor    eax,eax
   11aab:	call   15f90 <util_fatal>
   11ab0:	mov    rdi,QWORD PTR [rip+0x13b29]        # 255e0 <stderr@@GLIBC_2.2.5>
   11ab7:	mov    rcx,r13
   11aba:	mov    esi,0x1
   11abf:	xor    eax,eax
   11ac1:	lea    rdx,[rip+0x6963]        # 1842b <_IO_stdin_used+0x142b>
   11ac8:	call   59b0 <__fprintf_chk@plt>
   11acd:	xor    ecx,ecx
   11acf:	lea    rdx,[rip+0x1386a]        # 25340 <option_help>
   11ad6:	lea    rsi,[rip+0x10263]        # 21d40 <options>
   11add:	lea    rdi,[rip+0x695c]        # 18440 <_IO_stdin_used+0x1440>
   11ae4:	call   159e0 <util_print_usage_and_die>
   11ae9:	xor    esi,esi
   11aeb:	lea    rdi,[rip+0x6928]        # 1841a <_IO_stdin_used+0x141a>
   11af2:	xor    eax,eax
   11af4:	call   15f90 <util_fatal>
   11af9:	mov    rsi,r12
   11afc:	lea    rdi,[rip+0x69fe]        # 18501 <_IO_stdin_used+0x1501>
   11b03:	xor    eax,eax
   11b05:	call   15f90 <util_fatal>
   11b0a:	mov    rsi,r13
   11b0d:	lea    rdi,[rip+0x6996]        # 184aa <_IO_stdin_used+0x14aa>
   11b14:	call   57a0 <strcmp@plt>
   11b19:	test   eax,eax
   11b1b:	jne    11b40 <gen_keypair+0xfe0>
   11b1d:	mov    eax,0xd4321003
   11b22:	movdqa xmm0,XMMWORD PTR [rip+0xd3c6]        # 1eef0 <GOST_HASH2001_PARAMSET_OID+0xa0>
   11b2a:	mov    QWORD PTR [rsp+0x58],rax
   11b2f:	add    rax,0x2
   11b33:	mov    QWORD PTR [rsp+0x88],rax
   11b3b:	jmp    11a65 <gen_keypair+0xf05>
   11b40:	mov    rsi,r13
   11b43:	lea    rdi,[rip+0x696c]        # 184b6 <_IO_stdin_used+0x14b6>
   11b4a:	call   57a0 <strcmp@plt>
   11b4f:	test   eax,eax
   11b51:	jne    11b76 <gen_keypair+0x1016>
   11b53:	mov    eax,0xd4321003
   11b58:	movdqa xmm0,XMMWORD PTR [rip+0xd3a0]        # 1ef00 <GOST_HASH2001_PARAMSET_OID+0xb0>
   11b60:	mov    QWORD PTR [rsp+0x58],rax
   11b65:	add    rax,0x2
   11b69:	mov    QWORD PTR [rsp+0x88],rax
   11b71:	jmp    11a65 <gen_keypair+0xf05>
   11b76:	mov    rsi,r12
   11b79:	lea    rdi,[rip+0x9eb0]        # 1ba30 <_IO_stdin_used+0x4a30>
   11b80:	xor    eax,eax
   11b82:	call   15f90 <util_fatal>
   11b87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000011b90 <test_ec>:
   11b90:	push   r15
   11b92:	push   r14
   11b94:	push   r13
   11b96:	push   r12
   11b98:	push   rbp
   11b99:	sub    rsp,0x2c0
   11ba0:	mov    rax,QWORD PTR fs:0x28
   11ba9:	mov    QWORD PTR [rsp+0x2b8],rax
   11bb1:	xor    eax,eax
   11bb3:	lea    rax,[rip+0x6962]        # 1851c <_IO_stdin_used+0x151c>
   11bba:	cmp    QWORD PTR [rip+0x1443e],0x0        # 26000 <opt_object_id_len>
   11bc2:	mov    QWORD PTR [rsp+0x40],0x1042
   11bcb:	mov    QWORD PTR [rsp+0x68],rax
   11bd0:	lea    rax,[rip+0x695a]        # 18531 <_IO_stdin_used+0x1531>
   11bd7:	mov    QWORD PTR [rsp+0x80],rax
   11bdf:	lea    rax,[rip+0x6958]        # 1853e <_IO_stdin_used+0x153e>
   11be6:	mov    QWORD PTR [rsp+0x48],0x0
   11bef:	mov    QWORD PTR [rsp+0x50],0x0
   11bf8:	mov    QWORD PTR [rsp+0x8],0x0
   11c01:	mov    QWORD PTR [rsp+0x60],0x102
   11c0a:	mov    QWORD PTR [rsp+0x70],0x14
   11c13:	mov    QWORD PTR [rsp+0x78],0x3
   11c1c:	mov    QWORD PTR [rsp+0x88],0xc
   11c28:	mov    QWORD PTR [rsp+0x90],0x101
   11c34:	mov    QWORD PTR [rsp+0x98],rax
   11c3c:	mov    QWORD PTR [rsp+0xa0],0x1d
   11c48:	je     11fd3 <test_ec+0x443>
   11c4e:	cmp    QWORD PTR [rip+0x14352],0x0        # 25fa8 <opt_key_type>
   11c56:	je     12006 <test_ec+0x476>
   11c5c:	mov    r12,rdi
   11c5f:	lea    rdi,[rip+0x9efa]        # 1bb60 <_IO_stdin_used+0x4b60>
   11c66:	mov    rbp,rsi
   11c69:	call   5600 <puts@plt>
   11c6e:	lea    rsi,[rsp+0x8]
   11c73:	or     rdx,0xffffffffffffffff
   11c77:	mov    rdi,r12
   11c7a:	call   91c0 <get_mechanisms>
   11c7f:	mov    QWORD PTR [rsp+0x20],0x0
   11c88:	test   rax,rax
   11c8b:	je     12028 <test_ec+0x498>
   11c91:	mov    rcx,QWORD PTR [rsp+0x8]
   11c96:	xor    edx,edx
   11c98:	jmp    11cb2 <test_ec+0x122>
   11c9a:	nop    WORD PTR [rax+rax*1+0x0]
   11ca0:	add    rdx,0x1
   11ca4:	mov    QWORD PTR [rsp+0x20],rdx
   11ca9:	cmp    rdx,rax
   11cac:	je     12028 <test_ec+0x498>
   11cb2:	cmp    QWORD PTR [rcx+rdx*8],0x1040
   11cba:	jne    11ca0 <test_ec+0x110>
   11cbc:	lea    rdi,[rip+0x9f15]        # 1bbd8 <_IO_stdin_used+0x4bd8>
   11cc3:	call   5600 <puts@plt>
   11cc8:	lea    rcx,[rsp+0x18]
   11ccd:	mov    rsi,rbp
   11cd0:	mov    rdi,r12
   11cd3:	mov    r8,QWORD PTR [rip+0x142ce]        # 25fa8 <opt_key_type>
   11cda:	lea    rdx,[rsp+0x10]
   11cdf:	call   10b60 <gen_keypair>
   11ce4:	test   eax,eax
   11ce6:	jne    11d10 <test_ec+0x180>
   11ce8:	mov    rax,QWORD PTR [rsp+0x2b8]
   11cf0:	xor    rax,QWORD PTR fs:0x28
   11cf9:	jne    12102 <test_ec+0x572>
   11cff:	add    rsp,0x2c0
   11d06:	pop    rbp
   11d07:	pop    r12
   11d09:	pop    r13
   11d0b:	pop    r14
   11d0d:	pop    r15
   11d0f:	ret    
   11d10:	mov    rsi,QWORD PTR [rsp+0x18]
   11d15:	lea    rdx,[rsp+0x20]
   11d1a:	mov    rdi,rbp
   11d1d:	call   bd10 <getID>
   11d22:	cmp    QWORD PTR [rsp+0x20],0x0
   11d28:	mov    rsi,rax
   11d2b:	je     12039 <test_ec+0x4a9>
   11d31:	mov    rdx,QWORD PTR [rip+0x142c8]        # 26000 <opt_object_id_len>
   11d38:	mov    ecx,0x64
   11d3d:	lea    rdi,[rip+0x1435c]        # 260a0 <opt_object_id>
   11d44:	mov    QWORD PTR [rsp+0x20],rdx
   11d49:	call   57b0 <__memcpy_chk@plt>
   11d4e:	mov    rsi,QWORD PTR [rsp+0x18]
   11d53:	lea    rdx,[rsp+0x30]
   11d58:	mov    rdi,rbp
   11d5b:	call   b650 <getEC_PARAMS>
   11d60:	mov    rax,QWORD PTR [rsp+0x30]
   11d65:	sub    rax,0x5
   11d69:	cmp    rax,0x270b
   11d6f:	ja     11ff5 <test_ec+0x465>
   11d75:	mov    rsi,QWORD PTR [rsp+0x10]
   11d7a:	lea    rdx,[rsp+0x38]
   11d7f:	mov    rdi,rbp
   11d82:	call   b520 <getEC_POINT>
   11d87:	mov    rax,QWORD PTR [rsp+0x38]
   11d8c:	sub    rax,0x5
   11d90:	cmp    rax,0x270b
   11d96:	ja     120cd <test_ec+0x53d>
   11d9c:	lea    rdi,[rip+0x9f15]        # 1bcb8 <_IO_stdin_used+0x4cb8>
   11da3:	lea    r13,[rsp+0x60]
   11da8:	call   5600 <puts@plt>
   11dad:	mov    rsi,QWORD PTR [rsp+0x18]
   11db2:	mov    rdx,r13
   11db5:	mov    rdi,rbp
   11db8:	mov    rax,QWORD PTR [rip+0x140d1]        # 25e90 <p11>
   11dbf:	mov    ecx,0x1
   11dc4:	call   QWORD PTR [rax+0xd0]
   11dca:	test   rax,rax
   11dcd:	je     11de7 <test_ec+0x257>
   11dcf:	cmp    DWORD PTR [rip+0x140a2],0x0        # 25e78 <suppress_warn>
   11dd6:	jne    11de7 <test_ec+0x257>
   11dd8:	mov    rsi,rax
   11ddb:	lea    rdi,[rip+0x677a]        # 1855c <_IO_stdin_used+0x155c>
   11de2:	call   b310 <p11_warn.part.0>
   11de7:	mov    rsi,QWORD PTR [rsp+0x10]
   11dec:	mov    ecx,0x1
   11df1:	mov    rdx,r13
   11df4:	mov    rdi,rbp
   11df7:	mov    rax,QWORD PTR [rip+0x14092]        # 25e90 <p11>
   11dfe:	call   QWORD PTR [rax+0xd0]
   11e04:	test   rax,rax
   11e07:	jne    1208c <test_ec+0x4fc>
   11e0d:	lea    rdi,[rip+0x6783]        # 18597 <_IO_stdin_used+0x1597>
   11e14:	lea    r15,[rsp+0x40]
   11e19:	call   5600 <puts@plt>
   11e1e:	mov    rdx,QWORD PTR [rsp+0x18]
   11e23:	mov    rsi,r15
   11e26:	mov    rdi,rbp
   11e29:	mov    rax,QWORD PTR [rip+0x14060]        # 25e90 <p11>
   11e30:	call   QWORD PTR [rax+0x158]
   11e36:	test   rax,rax
   11e39:	jne    12125 <test_ec+0x595>
   11e3f:	mov    rsi,QWORD PTR [rsp+0x18]
   11e44:	mov    rdi,rbp
   11e47:	call   bf60 <getALWAYS_AUTHENTICATE>
   11e4c:	test   al,al
   11e4e:	jne    120de <test_ec+0x54e>
   11e54:	lea    r12,[rsp+0x28]
   11e59:	xor    ecx,ecx
   11e5b:	mov    edx,0x1a
   11e60:	mov    rdi,rbp
   11e63:	mov    rax,QWORD PTR [rip+0x14026]        # 25e90 <p11>
   11e6a:	mov    r8,r12
   11e6d:	lea    rsi,[rip+0x673d]        # 185b1 <_IO_stdin_used+0x15b1>
   11e74:	call   QWORD PTR [rax+0x160]
   11e7a:	test   rax,rax
   11e7d:	jne    12116 <test_ec+0x586>
   11e83:	mov    rax,QWORD PTR [rip+0x14006]        # 25e90 <p11>
   11e8a:	mov    rdi,rbp
   11e8d:	sub    QWORD PTR [rsp+0x28],0x14
   11e93:	lea    r14,[rsp+0xb0]
   11e9b:	mov    r8,r12
   11e9e:	mov    rcx,r14
   11ea1:	mov    edx,0x1a
   11ea6:	lea    rsi,[rip+0x6704]        # 185b1 <_IO_stdin_used+0x15b1>
   11ead:	call   QWORD PTR [rax+0x160]
   11eb3:	mov    rdi,rax
   11eb6:	cmp    rax,0x150
   11ebc:	jne    120ad <test_ec+0x51d>
   11ec2:	mov    rax,QWORD PTR [rip+0x13fc7]        # 25e90 <p11>
   11ec9:	mov    rdx,r12
   11ecc:	mov    rsi,r14
   11ecf:	mov    rdi,rbp
   11ed2:	add    QWORD PTR [rsp+0x28],0x14
   11ed8:	call   QWORD PTR [rax+0x170]
   11ede:	test   rax,rax
   11ee1:	jne    1206b <test_ec+0x4db>
   11ee7:	mov    rax,QWORD PTR [rip+0x13fa2]        # 25e90 <p11>
   11eee:	mov    rdx,QWORD PTR [rsp+0x18]
   11ef3:	mov    rsi,r15
   11ef6:	mov    rdi,rbp
   11ef9:	call   QWORD PTR [rax+0x158]
   11eff:	test   rax,rax
   11f02:	jne    12125 <test_ec+0x595>
   11f08:	mov    rsi,QWORD PTR [rsp+0x18]
   11f0d:	mov    rdi,rbp
   11f10:	call   bf60 <getALWAYS_AUTHENTICATE>
   11f15:	test   al,al
   11f17:	jne    120f0 <test_ec+0x560>
   11f1d:	mov    rax,QWORD PTR [rip+0x13f6c]        # 25e90 <p11>
   11f24:	mov    r8,r12
   11f27:	mov    rcx,r14
   11f2a:	mov    rdi,rbp
   11f2d:	mov    edx,0x1a
   11f32:	lea    rsi,[rip+0x6678]        # 185b1 <_IO_stdin_used+0x15b1>
   11f39:	call   QWORD PTR [rax+0x160]
   11f3f:	test   rax,rax
   11f42:	jne    12116 <test_ec+0x586>
   11f48:	lea    rdi,[rip+0x9df9]        # 1bd48 <_IO_stdin_used+0x4d48>
   11f4f:	call   5600 <puts@plt>
   11f54:	mov    rsi,QWORD PTR [rsp+0x10]
   11f59:	mov    rdx,r13
   11f5c:	mov    rdi,rbp
   11f5f:	mov    rax,QWORD PTR [rip+0x13f2a]        # 25e90 <p11>
   11f66:	mov    ecx,0x3
   11f6b:	call   QWORD PTR [rax+0xd0]
   11f71:	test   rax,rax
   11f74:	jne    1204a <test_ec+0x4ba>
   11f7a:	lea    rdi,[rip+0x9e17]        # 1bd98 <_IO_stdin_used+0x4d98>
   11f81:	call   5600 <puts@plt>
   11f86:	mov    rax,QWORD PTR [rip+0x13f03]        # 25e90 <p11>
   11f8d:	mov    rsi,QWORD PTR [rsp+0x18]
   11f92:	mov    rdi,rbp
   11f95:	call   QWORD PTR [rax+0xb8]
   11f9b:	test   rax,rax
   11f9e:	jne    12107 <test_ec+0x577>
   11fa4:	mov    rax,QWORD PTR [rip+0x13ee5]        # 25e90 <p11>
   11fab:	mov    rsi,QWORD PTR [rsp+0x10]
   11fb0:	mov    rdi,rbp
   11fb3:	call   QWORD PTR [rax+0xb8]
   11fb9:	test   rax,rax
   11fbc:	jne    12107 <test_ec+0x577>
   11fc2:	lea    rdi,[rip+0x6615]        # 185de <_IO_stdin_used+0x15de>
   11fc9:	call   5600 <puts@plt>
   11fce:	jmp    11ce8 <test_ec+0x158>
   11fd3:	mov    rcx,QWORD PTR [rip+0x13606]        # 255e0 <stderr@@GLIBC_2.2.5>
   11fda:	mov    edx,0x24
   11fdf:	mov    esi,0x1
   11fe4:	lea    rdi,[rip+0x9b0d]        # 1baf8 <_IO_stdin_used+0x4af8>
   11feb:	call   59a0 <fwrite@plt>
   11ff0:	jmp    11ce8 <test_ec+0x158>
   11ff5:	lea    rdi,[rip+0x9c3c]        # 1bc38 <_IO_stdin_used+0x4c38>
   11ffc:	call   5600 <puts@plt>
   12001:	jmp    11ce8 <test_ec+0x158>
   12006:	mov    rcx,QWORD PTR [rip+0x135d3]        # 255e0 <stderr@@GLIBC_2.2.5>
   1200d:	mov    edx,0x3d
   12012:	mov    esi,0x1
   12017:	lea    rdi,[rip+0x9b02]        # 1bb20 <_IO_stdin_used+0x4b20>
   1201e:	call   59a0 <fwrite@plt>
   12023:	jmp    11ce8 <test_ec+0x158>
   12028:	lea    rdi,[rip+0x9b69]        # 1bb98 <_IO_stdin_used+0x4b98>
   1202f:	call   5600 <puts@plt>
   12034:	jmp    11cbc <test_ec+0x12c>
   12039:	lea    rdi,[rip+0x9bb8]        # 1bbf8 <_IO_stdin_used+0x4bf8>
   12040:	call   5600 <puts@plt>
   12045:	jmp    11ce8 <test_ec+0x158>
   1204a:	cmp    DWORD PTR [rip+0x13e27],0x0        # 25e78 <suppress_warn>
   12051:	jne    11f7a <test_ec+0x3ea>
   12057:	mov    rsi,rax
   1205a:	lea    rdi,[rip+0x6519]        # 1857a <_IO_stdin_used+0x157a>
   12061:	call   b310 <p11_warn.part.0>
   12066:	jmp    11f7a <test_ec+0x3ea>
   1206b:	cmp    DWORD PTR [rip+0x13e06],0x0        # 25e78 <suppress_warn>
   12072:	jne    11ee7 <test_ec+0x357>
   12078:	mov    rsi,rax
   1207b:	lea    rdi,[rip+0x5e6f]        # 17ef1 <_IO_stdin_used+0xef1>
   12082:	call   b310 <p11_warn.part.0>
   12087:	jmp    11ee7 <test_ec+0x357>
   1208c:	cmp    DWORD PTR [rip+0x13de5],0x0        # 25e78 <suppress_warn>
   12093:	jne    11e0d <test_ec+0x27d>
   12099:	mov    rsi,rax
   1209c:	lea    rdi,[rip+0x64d7]        # 1857a <_IO_stdin_used+0x157a>
   120a3:	call   b310 <p11_warn.part.0>
   120a8:	jmp    11e0d <test_ec+0x27d>
   120ad:	call   8e50 <CKR2Str>
   120b2:	lea    rsi,[rip+0x9c4f]        # 1bd08 <_IO_stdin_used+0x4d08>
   120b9:	mov    edi,0x1
   120be:	mov    rdx,rax
   120c1:	xor    eax,eax
   120c3:	call   58a0 <__printf_chk@plt>
   120c8:	jmp    11ec2 <test_ec+0x332>
   120cd:	lea    rdi,[rip+0x9ba4]        # 1bc78 <_IO_stdin_used+0x4c78>
   120d4:	call   5600 <puts@plt>
   120d9:	jmp    11ce8 <test_ec+0x158>
   120de:	mov    esi,0x2
   120e3:	mov    rdi,rbp
   120e6:	call   9820 <login>
   120eb:	jmp    11e54 <test_ec+0x2c4>
   120f0:	mov    esi,0x2
   120f5:	mov    rdi,rbp
   120f8:	call   9820 <login>
   120fd:	jmp    11f1d <test_ec+0x38d>
   12102:	call   5690 <__stack_chk_fail@plt>
   12107:	mov    rsi,rax
   1210a:	lea    rdi,[rip+0x64bb]        # 185cc <_IO_stdin_used+0x15cc>
   12111:	call   9140 <p11_fatal>
   12116:	mov    rsi,rax
   12119:	lea    rdi,[rip+0x59d5]        # 17af5 <_IO_stdin_used+0xaf5>
   12120:	call   9140 <p11_fatal>
   12125:	mov    rsi,rax
   12128:	lea    rdi,[rip+0x5bba]        # 17ce9 <_IO_stdin_used+0xce9>
   1212f:	call   9140 <p11_fatal>
   12134:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1213f:	nop

0000000000012140 <write_object>:
   12140:	push   r14
   12142:	push   r13
   12144:	push   r12
   12146:	push   rbp
   12147:	push   rbx
   12148:	sub    rsp,0x1000
   1214f:	or     QWORD PTR [rsp],0x0
   12154:	sub    rsp,0x1000
   1215b:	or     QWORD PTR [rsp],0x0
   12160:	sub    rsp,0xb60
   12167:	mov    ecx,0x271
   1216c:	lea    rsi,[rip+0x6472]        # 185e5 <_IO_stdin_used+0x15e5>
   12173:	mov    rax,QWORD PTR fs:0x28
   1217c:	mov    QWORD PTR [rsp+0x2b58],rax
   12184:	xor    eax,eax
   12186:	mov    r13,rdi
   12189:	lea    r12,[rsp+0x17c0]
   12191:	lea    r14,[rsp+0x430]
   12199:	mov    rdi,r12
   1219c:	mov    BYTE PTR [rsp+0x6],0x1
   121a1:	mov    BYTE PTR [rsp+0x7],0x0
   121a6:	mov    QWORD PTR [rsp+0x10],0x0
   121af:	mov    QWORD PTR [rsp+0x20],0x0
   121b8:	rep stos QWORD PTR es:[rdi],rax
   121bb:	mov    ecx,0x271
   121c0:	mov    BYTE PTR [rdi],0x0
   121c3:	mov    rdi,r14
   121c6:	rep stos QWORD PTR es:[rdi],rax
   121c9:	mov    rdi,QWORD PTR [rip+0x13f40]        # 26110 <opt_file_to_write>
   121d0:	call   5900 <fopen@plt>
   121d5:	test   rax,rax
   121d8:	je     12830 <write_object+0x6f0>
   121de:	mov    rcx,rax
   121e1:	mov    edx,0x1388
   121e6:	mov    esi,0x1
   121eb:	mov    rdi,r12
   121ee:	mov    rbp,rax
   121f1:	call   5630 <fread@plt>
   121f6:	mov    rbx,rax
   121f9:	test   eax,eax
   121fb:	js     12845 <write_object+0x705>
   12201:	mov    rdi,rbp
   12204:	movsxd rbx,ebx
   12207:	call   5670 <fclose@plt>
   1220c:	mov    rdi,QWORD PTR [rip+0x13df5]        # 26008 <opt_attr_from_file>
   12213:	mov    BYTE PTR [rsp+rbx*1+0x17c0],0x0
   1221b:	test   rdi,rdi
   1221e:	je     12287 <write_object+0x147>
   12220:	lea    rsi,[rip+0x63be]        # 185e5 <_IO_stdin_used+0x15e5>
   12227:	call   5900 <fopen@plt>
   1222c:	mov    rbp,rax
   1222f:	test   rax,rax
   12232:	je     12891 <write_object+0x751>
   12238:	mov    rdi,r14
   1223b:	mov    rcx,rax
   1223e:	mov    edx,0x1387
   12243:	mov    esi,0x1
   12248:	call   5630 <fread@plt>
   1224d:	mov    rdi,rbp
   12250:	mov    rbx,rax
   12253:	call   5670 <fclose@plt>
   12258:	test   ebx,ebx
   1225a:	js     128a6 <write_object+0x766>
   12260:	movsxd rbx,ebx
   12263:	cmp    QWORD PTR [rip+0x10df5],0x1        # 23060 <opt_object_class>
   1226b:	mov    BYTE PTR [rsp+rbx*1+0x430],0x0
   12273:	je     12798 <write_object+0x658>
   12279:	lea    rdi,[rip+0x9b50]        # 1bdd0 <_IO_stdin_used+0x4dd0>
   12280:	xor    eax,eax
   12282:	call   15f90 <util_fatal>
   12287:	mov    rax,QWORD PTR [rip+0x10dd2]        # 23060 <opt_object_class>
   1228e:	cmp    rax,0x1
   12292:	je     127a6 <write_object+0x666>
   12298:	lea    rdx,[rax-0x2]
   1229c:	cmp    rdx,0x1
   122a0:	jbe    1285a <write_object+0x71a>
   122a6:	test   rax,rax
   122a9:	jne    124c0 <write_object+0x380>
   122af:	lea    rax,[rsp+0x18]
   122b4:	cmp    DWORD PTR [rip+0x13c31],0x0        # 25eec <opt_is_private>
   122bb:	mov    QWORD PTR [rsp+0x18],0x0
   122c4:	mov    QWORD PTR [rsp+0x258],rax
   122cc:	lea    rax,[rsp+0x6]
   122d1:	mov    QWORD PTR [rsp+0x250],0x0
   122dd:	mov    QWORD PTR [rsp+0x260],0x8
   122e9:	mov    QWORD PTR [rsp+0x268],0x1
   122f5:	mov    QWORD PTR [rsp+0x270],rax
   122fd:	mov    QWORD PTR [rsp+0x278],0x1
   12309:	mov    QWORD PTR [rsp+0x280],0x11
   12315:	mov    QWORD PTR [rsp+0x288],r12
   1231d:	mov    QWORD PTR [rsp+0x290],rbx
   12325:	mov    QWORD PTR [rsp+0x298],0x2
   12331:	je     127b9 <write_object+0x679>
   12337:	mov    rdi,QWORD PTR [rip+0x13c8a]        # 25fc8 <opt_application_label>
   1233e:	mov    QWORD PTR [rsp+0x2a0],rax
   12346:	mov    QWORD PTR [rsp+0x2a8],0x1
   12352:	test   rdi,rdi
   12355:	je     12826 <write_object+0x6e6>
   1235b:	mov    QWORD PTR [rsp+0x2b8],rdi
   12363:	xor    eax,eax
   12365:	or     rcx,0xffffffffffffffff
   12369:	mov    ebx,0x5
   1236e:	mov    QWORD PTR [rsp+0x2b0],0x10
   1237a:	repnz scas al,BYTE PTR es:[rdi]
   1237c:	mov    rax,rcx
   1237f:	not    rax
   12382:	sub    rax,0x1
   12386:	mov    QWORD PTR [rsp+0x2c0],rax
   1238e:	mov    rsi,QWORD PTR [rip+0x13c2b]        # 25fc0 <opt_application_id>
   12395:	lea    r12,[rsp+0x28]
   1239a:	test   rsi,rsi
   1239d:	je     12401 <write_object+0x2c1>
   1239f:	lea    r14,[rsp+0x30]
   123a4:	mov    rdi,r14
   123a7:	call   5720 <sc_format_oid@plt>
   123ac:	test   eax,eax
   123ae:	jne    128bb <write_object+0x77b>
   123b4:	lea    r12,[rsp+0x28]
   123b9:	lea    rdi,[rsp+0x10]
   123be:	mov    rdx,r14
   123c1:	mov    rsi,r12
   123c4:	call   5880 <sc_asn1_encode_object_id@plt>
   123c9:	test   eax,eax
   123cb:	jne    128d0 <write_object+0x790>
   123d1:	movsxd rax,ebx
   123d4:	mov    rdx,QWORD PTR [rsp+0x10]
   123d9:	add    ebx,0x1
   123dc:	imul   rax,rax,0x18
   123e0:	mov    QWORD PTR [rsp+rax*1+0x258],rdx
   123e8:	mov    rdx,QWORD PTR [rsp+0x28]
   123ed:	mov    QWORD PTR [rsp+rax*1+0x250],0x12
   123f9:	mov    QWORD PTR [rsp+rax*1+0x260],rdx
   12401:	mov    rdi,QWORD PTR [rip+0x13be8]        # 25ff0 <opt_object_label>
   12408:	test   rdi,rdi
   1240b:	je     12445 <write_object+0x305>
   1240d:	movsxd rdx,ebx
   12410:	xor    eax,eax
   12412:	or     rcx,0xffffffffffffffff
   12416:	add    ebx,0x1
   12419:	imul   rdx,rdx,0x18
   1241d:	mov    QWORD PTR [rsp+rdx*1+0x250],0x3
   12429:	mov    QWORD PTR [rsp+rdx*1+0x258],rdi
   12431:	repnz scas al,BYTE PTR es:[rdi]
   12433:	mov    rax,rcx
   12436:	not    rax
   12439:	sub    rax,0x1
   1243d:	mov    QWORD PTR [rsp+rdx*1+0x260],rax
   12445:	mov    rax,QWORD PTR [rip+0x13a44]        # 25e90 <p11>
   1244c:	movsxd rdx,ebx
   1244f:	mov    rcx,r12
   12452:	mov    rdi,r13
   12455:	lea    rsi,[rsp+0x250]
   1245d:	call   QWORD PTR [rax+0xa8]
   12463:	test   rax,rax
   12466:	jne    1287d <write_object+0x73d>
   1246c:	lea    rdi,[rip+0x61d7]        # 1864a <_IO_stdin_used+0x164a>
   12473:	call   5600 <puts@plt>
   12478:	mov    rsi,QWORD PTR [rsp+0x28]
   1247d:	mov    rdi,r13
   12480:	call   e580 <show_dobj>
   12485:	mov    rdi,QWORD PTR [rsp+0x10]
   1248a:	test   rdi,rdi
   1248d:	je     12494 <write_object+0x354>
   1248f:	call   5590 <free@plt>
   12494:	mov    rax,QWORD PTR [rsp+0x2b58]
   1249c:	xor    rax,QWORD PTR fs:0x28
   124a5:	jne    1288c <write_object+0x74c>
   124ab:	add    rsp,0x2b60
   124b2:	mov    eax,0x1
   124b7:	pop    rbx
   124b8:	pop    rbp
   124b9:	pop    r12
   124bb:	pop    r13
   124bd:	pop    r14
   124bf:	ret    
   124c0:	cmp    rax,0x4
   124c4:	jne    12868 <write_object+0x728>
   124ca:	mov    QWORD PTR [rsp+0x18],0x4
   124d3:	mov    rbp,QWORD PTR [rip+0x13ace]        # 25fa8 <opt_key_type>
   124da:	mov    QWORD PTR [rsp+0x20],0x10
   124e3:	test   rbp,rbp
   124e6:	je     12529 <write_object+0x3e9>
   124e8:	mov    edx,0x4
   124ed:	lea    rsi,[rip+0x5eca]        # 183be <_IO_stdin_used+0x13be>
   124f4:	mov    rdi,rbp
   124f7:	call   5850 <strncasecmp@plt>
   124fc:	test   eax,eax
   124fe:	je     127dc <write_object+0x69c>
   12504:	mov    edx,0x5
   12509:	lea    rsi,[rip+0x610d]        # 1861d <_IO_stdin_used+0x161d>
   12510:	mov    rdi,rbp
   12513:	call   5850 <strncasecmp@plt>
   12518:	test   eax,eax
   1251a:	jne    128e5 <write_object+0x7a5>
   12520:	mov    QWORD PTR [rsp+0x20],0x15
   12529:	lea    rax,[rsp+0x18]
   1252e:	cmp    DWORD PTR [rip+0x139b7],0x0        # 25eec <opt_is_private>
   12535:	mov    QWORD PTR [rsp+0x70],0x0
   1253e:	mov    QWORD PTR [rsp+0x78],rax
   12543:	lea    rax,[rsp+0x20]
   12548:	mov    QWORD PTR [rsp+0x90],rax
   12550:	lea    rax,[rsp+0x6]
   12555:	mov    QWORD PTR [rsp+0x80],0x8
   12561:	mov    QWORD PTR [rsp+0x88],0x100
   1256d:	mov    QWORD PTR [rsp+0x98],0x8
   12579:	mov    QWORD PTR [rsp+0xa0],0x1
   12585:	mov    QWORD PTR [rsp+0xa8],rax
   1258d:	mov    QWORD PTR [rsp+0xb0],0x1
   12599:	mov    QWORD PTR [rsp+0xb8],0x11
   125a5:	mov    QWORD PTR [rsp+0xc0],r12
   125ad:	mov    QWORD PTR [rsp+0xc8],rbx
   125b5:	mov    QWORD PTR [rsp+0xd0],0x2
   125c1:	jne    127c3 <write_object+0x683>
   125c7:	lea    rdx,[rsp+0x7]
   125cc:	mov    QWORD PTR [rsp+0xe0],0x1
   125d8:	mov    QWORD PTR [rsp+0xd8],rdx
   125e0:	cmp    DWORD PTR [rip+0x13901],0x0        # 25ee8 <opt_is_sensitive>
   125e7:	mov    QWORD PTR [rsp+0xe8],0x103
   125f3:	je     12808 <write_object+0x6c8>
   125f9:	mov    QWORD PTR [rsp+0xf0],rax
   12601:	mov    QWORD PTR [rsp+0xf8],0x1
   1260d:	cmp    DWORD PTR [rip+0x138d0],0x0        # 25ee4 <opt_is_extractable>
   12614:	mov    QWORD PTR [rsp+0x100],0x162
   12620:	je     127ea <write_object+0x6aa>
   12626:	mov    QWORD PTR [rsp+0x108],rax
   1262e:	mov    QWORD PTR [rsp+0x110],0x1
   1263a:	mov    ecx,DWORD PTR [rip+0x10a18]        # 23058 <opt_key_usage_default>
   12640:	or     ecx,DWORD PTR [rip+0x13892]        # 25ed8 <opt_key_usage_decrypt>
   12646:	mov    edx,0x7
   1264b:	je     12692 <write_object+0x552>
   1264d:	mov    QWORD PTR [rsp+0x120],rax
   12655:	mov    edx,0x9
   1265a:	mov    QWORD PTR [rsp+0x118],0x104
   12666:	mov    QWORD PTR [rsp+0x128],0x1
   12672:	mov    QWORD PTR [rsp+0x130],0x105
   1267e:	mov    QWORD PTR [rsp+0x138],rax
   12686:	mov    QWORD PTR [rsp+0x140],0x1
   12692:	cmp    DWORD PTR [rip+0x13837],0x0        # 25ed0 <opt_key_usage_wrap>
   12699:	je     126e3 <write_object+0x5a3>
   1269b:	movsxd rcx,edx
   1269e:	imul   rcx,rcx,0x18
   126a2:	mov    QWORD PTR [rsp+rcx*1+0x70],0x106
   126ab:	mov    QWORD PTR [rsp+rcx*1+0x78],rax
   126b0:	mov    QWORD PTR [rsp+rcx*1+0x80],0x1
   126bc:	lea    ecx,[rdx+0x1]
   126bf:	add    edx,0x2
   126c2:	movsxd rcx,ecx
   126c5:	imul   rcx,rcx,0x18
   126c9:	mov    QWORD PTR [rsp+rcx*1+0x70],0x107
   126d2:	mov    QWORD PTR [rsp+rcx*1+0x78],rax
   126d7:	mov    QWORD PTR [rsp+rcx*1+0x80],0x1
   126e3:	mov    rdi,QWORD PTR [rip+0x13906]        # 25ff0 <opt_object_label>
   126ea:	test   rdi,rdi
   126ed:	je     12721 <write_object+0x5e1>
   126ef:	movsxd rsi,edx
   126f2:	xor    eax,eax
   126f4:	or     rcx,0xffffffffffffffff
   126f8:	add    edx,0x1
   126fb:	imul   rsi,rsi,0x18
   126ff:	mov    QWORD PTR [rsp+rsi*1+0x70],0x3
   12708:	mov    QWORD PTR [rsp+rsi*1+0x78],rdi
   1270d:	repnz scas al,BYTE PTR es:[rdi]
   1270f:	mov    rax,rcx
   12712:	not    rax
   12715:	sub    rax,0x1
   12719:	mov    QWORD PTR [rsp+rsi*1+0x80],rax
   12721:	mov    rcx,QWORD PTR [rip+0x138d8]        # 26000 <opt_object_id_len>
   12728:	test   rcx,rcx
   1272b:	je     12754 <write_object+0x614>
   1272d:	movsxd rax,edx
   12730:	lea    rsi,[rip+0x13969]        # 260a0 <opt_object_id>
   12737:	add    edx,0x1
   1273a:	imul   rax,rax,0x18
   1273e:	mov    QWORD PTR [rsp+rax*1+0x70],0x102
   12747:	mov    QWORD PTR [rsp+rax*1+0x78],rsi
   1274c:	mov    QWORD PTR [rsp+rax*1+0x80],rcx
   12754:	lea    rcx,[rsp+0x8]
   12759:	movsxd rdx,edx
   1275c:	lea    rsi,[rsp+0x70]
   12761:	mov    rdi,r13
   12764:	mov    rax,QWORD PTR [rip+0x13725]        # 25e90 <p11>
   1276b:	call   QWORD PTR [rax+0xa8]
   12771:	test   rax,rax
   12774:	jne    1287d <write_object+0x73d>
   1277a:	lea    rdi,[rip+0x5ede]        # 1865f <_IO_stdin_used+0x165f>
   12781:	call   5600 <puts@plt>
   12786:	mov    rsi,QWORD PTR [rsp+0x8]
   1278b:	mov    rdi,r13
   1278e:	call   e9f0 <show_object>
   12793:	jmp    12485 <write_object+0x345>
   12798:	cmp    QWORD PTR [rip+0x13868],0x0        # 26008 <opt_attr_from_file>
   127a0:	jne    12279 <write_object+0x139>
   127a6:	mov    ecx,0x271
   127ab:	mov    rdi,r14
   127ae:	mov    rsi,r12
   127b1:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   127b4:	jmp    12279 <write_object+0x139>
   127b9:	lea    rax,[rsp+0x7]
   127be:	jmp    12337 <write_object+0x1f7>
   127c3:	mov    QWORD PTR [rsp+0xd8],rax
   127cb:	mov    QWORD PTR [rsp+0xe0],0x1
   127d7:	jmp    125e0 <write_object+0x4a0>
   127dc:	mov    QWORD PTR [rsp+0x20],0x1f
   127e5:	jmp    12529 <write_object+0x3e9>
   127ea:	lea    rdx,[rsp+0x7]
   127ef:	mov    QWORD PTR [rsp+0x110],0x1
   127fb:	mov    QWORD PTR [rsp+0x108],rdx
   12803:	jmp    1263a <write_object+0x4fa>
   12808:	lea    rdx,[rsp+0x7]
   1280d:	mov    QWORD PTR [rsp+0xf8],0x1
   12819:	mov    QWORD PTR [rsp+0xf0],rdx
   12821:	jmp    1260d <write_object+0x4cd>
   12826:	mov    ebx,0x4
   1282b:	jmp    1238e <write_object+0x24e>
   12830:	mov    rsi,QWORD PTR [rip+0x138d9]        # 26110 <opt_file_to_write>
   12837:	lea    rdi,[rip+0x5daa]        # 185e8 <_IO_stdin_used+0x15e8>
   1283e:	xor    eax,eax
   12840:	call   15f90 <util_fatal>
   12845:	mov    rsi,QWORD PTR [rip+0x138c4]        # 26110 <opt_file_to_write>
   1284c:	lea    rdi,[rip+0x5dad]        # 18600 <_IO_stdin_used+0x1600>
   12853:	xor    eax,eax
   12855:	call   15f90 <util_fatal>
   1285a:	lea    rdi,[rip+0x959f]        # 1be00 <_IO_stdin_used+0x4e00>
   12861:	xor    eax,eax
   12863:	call   15f90 <util_fatal>
   12868:	mov    rsi,QWORD PTR [rip+0x13899]        # 26108 <opt_object_class_str>
   1286f:	lea    rdi,[rip+0x95b2]        # 1be28 <_IO_stdin_used+0x4e28>
   12876:	xor    eax,eax
   12878:	call   15f90 <util_fatal>
   1287d:	mov    rsi,rax
   12880:	lea    rdi,[rip+0x5db4]        # 1863b <_IO_stdin_used+0x163b>
   12887:	call   9140 <p11_fatal>
   1288c:	call   5690 <__stack_chk_fail@plt>
   12891:	mov    rsi,QWORD PTR [rip+0x13770]        # 26008 <opt_attr_from_file>
   12898:	lea    rdi,[rip+0x5d49]        # 185e8 <_IO_stdin_used+0x15e8>
   1289f:	xor    eax,eax
   128a1:	call   15f90 <util_fatal>
   128a6:	mov    rsi,QWORD PTR [rip+0x1375b]        # 26008 <opt_attr_from_file>
   128ad:	lea    rdi,[rip+0x5d4c]        # 18600 <_IO_stdin_used+0x1600>
   128b4:	xor    eax,eax
   128b6:	call   15f90 <util_fatal>
   128bb:	mov    rsi,QWORD PTR [rip+0x136fe]        # 25fc0 <opt_application_id>
   128c2:	lea    rdi,[rip+0x5304]        # 17bcd <_IO_stdin_used+0xbcd>
   128c9:	xor    eax,eax
   128cb:	call   15f90 <util_fatal>
   128d0:	mov    rsi,QWORD PTR [rip+0x136e9]        # 25fc0 <opt_application_id>
   128d7:	lea    rdi,[rip+0x5300]        # 17bde <_IO_stdin_used+0xbde>
   128de:	xor    eax,eax
   128e0:	call   15f90 <util_fatal>
   128e5:	mov    esi,0x10
   128ea:	lea    rdi,[rip+0x5d32]        # 18623 <_IO_stdin_used+0x1623>
   128f1:	xor    eax,eax
   128f3:	call   15f90 <util_fatal>
   128f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012900 <test_verify>:
   12900:	push   r15
   12902:	push   r14
   12904:	push   r13
   12906:	push   r12
   12908:	push   rbp
   12909:	push   rbx
   1290a:	mov    rbx,rdi
   1290d:	sub    rsp,0x68
   12911:	mov    rax,QWORD PTR fs:0x28
   1291a:	mov    QWORD PTR [rsp+0x58],rax
   1291f:	xor    eax,eax
   12921:	mov    rax,QWORD PTR [rip+0x13568]        # 25e90 <p11>
   12928:	lea    rsi,[rsp+0x30]
   1292d:	call   QWORD PTR [rax+0x80]
   12933:	test   rax,rax
   12936:	jne    12b9f <test_verify+0x29f>
   1293c:	test   BYTE PTR [rsp+0x38],0x3
   12941:	je     12b64 <test_verify+0x264>
   12947:	mov    rdi,QWORD PTR [rsp+0x30]
   1294c:	lea    r8,[rsp+0x20]
   12951:	xor    ecx,ecx
   12953:	xor    edx,edx
   12955:	mov    esi,0x2000
   1295a:	call   9300 <find_mechanism>
   1295f:	mov    r13d,eax
   12962:	test   eax,eax
   12964:	je     12ae3 <test_verify+0x1e3>
   1296a:	xor    r13d,r13d
   1296d:	lea    r14,[rsp+0x10]
   12972:	lea    r15,[rsp+0x28]
   12977:	xor    ebp,ebp
   12979:	lea    rdi,[rip+0x9510]        # 1be90 <_IO_stdin_used+0x4e90>
   12980:	call   5600 <puts@plt>
   12985:	jmp    12a5b <test_verify+0x15b>
   1298a:	nop    WORD PTR [rax+rax*1+0x0]
   12990:	mov    rsi,QWORD PTR [rsp+0x10]
   12995:	mov    rdi,rbx
   12998:	call   b3e0 <getKEY_TYPE>
   1299d:	test   rax,rax
   129a0:	jne    12b18 <test_verify+0x218>
   129a6:	mov    rsi,QWORD PTR [rsp+0x10]
   129ab:	mov    rdi,rbx
   129ae:	call   bed0 <getSIGN>
   129b3:	test   al,al
   129b5:	je     12b30 <test_verify+0x230>
   129bb:	mov    rsi,QWORD PTR [rsp+0x10]
   129c0:	mov    rdx,r15
   129c3:	mov    rdi,rbx
   129c6:	call   bd10 <getID>
   129cb:	mov    r12,rax
   129ce:	test   rax,rax
   129d1:	je     12b89 <test_verify+0x289>
   129d7:	mov    r8,QWORD PTR [rsp+0x28]
   129dc:	lea    rdx,[rsp+0x18]
   129e1:	xor    r9d,r9d
   129e4:	mov    rcx,rax
   129e7:	mov    esi,0x2
   129ec:	mov    rdi,rbx
   129ef:	call   b100 <find_object>
   129f4:	mov    rdi,r12
   129f7:	mov    DWORD PTR [rsp+0xc],eax
   129fb:	call   5590 <free@plt>
   12a00:	mov    eax,DWORD PTR [rsp+0xc]
   12a04:	test   eax,eax
   12a06:	je     12b53 <test_verify+0x253>
   12a0c:	mov    rsi,QWORD PTR [rsp+0x10]
   12a11:	mov    rdi,rbx
   12a14:	call   c110 <get_private_key_length>
   12a19:	lea    r12,[rax+0x7]
   12a1d:	shr    r12,0x3
   12a21:	test   r12d,r12d
   12a24:	je     12b78 <test_verify+0x278>
   12a2a:	mov    edi,0xa
   12a2f:	call   55a0 <putchar@plt>
   12a34:	xor    r8d,r8d
   12a37:	mov    rcx,QWORD PTR [rsp+0x18]
   12a3c:	test   ebp,ebp
   12a3e:	mov    rsi,QWORD PTR [rsp+0x10]
   12a43:	setne  r8b
   12a47:	mov    edx,r12d
   12a4a:	mov    rdi,rbx
   12a4d:	call   c3a0 <sign_verify>
   12a52:	add    r13d,eax
   12a55:	nop    DWORD PTR [rax]
   12a58:	add    ebp,0x1
   12a5b:	xor    r8d,r8d
   12a5e:	xor    ecx,ecx
   12a60:	mov    r9d,ebp
   12a63:	mov    rdx,r14
   12a66:	mov    esi,0x3
   12a6b:	mov    rdi,rbx
   12a6e:	call   b100 <find_object>
   12a73:	test   eax,eax
   12a75:	je     12b41 <test_verify+0x241>
   12a7b:	mov    edx,ebp
   12a7d:	lea    rsi,[rip+0x5479]        # 17efd <_IO_stdin_used+0xefd>
   12a84:	mov    edi,0x1
   12a89:	xor    eax,eax
   12a8b:	call   58a0 <__printf_chk@plt>
   12a90:	mov    rsi,QWORD PTR [rsp+0x10]
   12a95:	mov    rdi,rbx
   12a98:	call   d880 <getLABEL.constprop.0>
   12a9d:	mov    r12,rax
   12aa0:	test   rax,rax
   12aa3:	je     12ac3 <test_verify+0x1c3>
   12aa5:	mov    rdx,rax
   12aa8:	mov    edi,0x1
   12aad:	lea    rsi,[rip+0x545a]        # 17f0e <_IO_stdin_used+0xf0e>
   12ab4:	xor    eax,eax
   12ab6:	call   58a0 <__printf_chk@plt>
   12abb:	mov    rdi,r12
   12abe:	call   5590 <free@plt>
   12ac3:	test   ebp,ebp
   12ac5:	je     12990 <test_verify+0x90>
   12acb:	lea    rsi,[rip+0x5442]        # 17f14 <_IO_stdin_used+0xf14>
   12ad2:	mov    edi,0x1
   12ad7:	xor    eax,eax
   12ad9:	call   58a0 <__printf_chk@plt>
   12ade:	jmp    12990 <test_verify+0x90>
   12ae3:	lea    rdi,[rip+0x5b89]        # 18673 <_IO_stdin_used+0x1673>
   12aea:	call   5600 <puts@plt>
   12aef:	mov    rax,QWORD PTR [rsp+0x58]
   12af4:	xor    rax,QWORD PTR fs:0x28
   12afd:	jne    12b9a <test_verify+0x29a>
   12b03:	add    rsp,0x68
   12b07:	mov    eax,r13d
   12b0a:	pop    rbx
   12b0b:	pop    rbp
   12b0c:	pop    r12
   12b0e:	pop    r13
   12b10:	pop    r14
   12b12:	pop    r15
   12b14:	ret    
   12b15:	nop    DWORD PTR [rax]
   12b18:	lea    rdi,[rip+0x53af]        # 17ece <_IO_stdin_used+0xece>
   12b1f:	call   5600 <puts@plt>
   12b24:	jmp    12a58 <test_verify+0x158>
   12b29:	nop    DWORD PTR [rax+0x0]
   12b30:	lea    rdi,[rip+0x8ab1]        # 1b5e8 <_IO_stdin_used+0x45e8>
   12b37:	call   5600 <puts@plt>
   12b3c:	jmp    12a58 <test_verify+0x158>
   12b41:	test   ebp,ebp
   12b43:	jne    12aef <test_verify+0x1ef>
   12b45:	lea    rdi,[rip+0x9394]        # 1bee0 <_IO_stdin_used+0x4ee0>
   12b4c:	call   5600 <puts@plt>
   12b51:	jmp    12aef <test_verify+0x1ef>
   12b53:	lea    rdi,[rip+0x8abe]        # 1b618 <_IO_stdin_used+0x4618>
   12b5a:	call   5600 <puts@plt>
   12b5f:	jmp    12a58 <test_verify+0x158>
   12b64:	lea    rdi,[rip+0x92ed]        # 1be58 <_IO_stdin_used+0x4e58>
   12b6b:	xor    r13d,r13d
   12b6e:	call   5600 <puts@plt>
   12b73:	jmp    12aef <test_verify+0x1ef>
   12b78:	lea    rdi,[rip+0x9331]        # 1beb0 <_IO_stdin_used+0x4eb0>
   12b7f:	call   5600 <puts@plt>
   12b84:	jmp    12a58 <test_verify+0x158>
   12b89:	lea    rdi,[rip+0x8ac0]        # 1b650 <_IO_stdin_used+0x4650>
   12b90:	call   5600 <puts@plt>
   12b95:	jmp    12a58 <test_verify+0x158>
   12b9a:	call   5690 <__stack_chk_fail@plt>
   12b9f:	mov    rsi,rax
   12ba2:	lea    rdi,[rip+0x4ed0]        # 17a79 <_IO_stdin_used+0xa79>
   12ba9:	call   9140 <p11_fatal>
   12bae:	xchg   ax,ax

0000000000012bb0 <delete_object>:
   12bb0:	push   r13
   12bb2:	push   r12
   12bb4:	push   rbp
   12bb5:	mov    rbp,rdi
   12bb8:	push   rbx
   12bb9:	xor    ebx,ebx
   12bbb:	sub    rsp,0x258
   12bc2:	mov    rax,QWORD PTR fs:0x28
   12bcb:	mov    QWORD PTR [rsp+0x248],rax
   12bd3:	xor    eax,eax
   12bd5:	mov    rax,QWORD PTR [rip+0x10484]        # 23060 <opt_object_class>
   12bdc:	cmp    QWORD PTR [rip+0x13524],0x0        # 26108 <opt_object_class_str>
   12be4:	mov    QWORD PTR [rsp+0x8],0x0
   12bed:	mov    QWORD PTR [rsp+0x10],0x0
   12bf6:	mov    QWORD PTR [rsp],rax
   12bfa:	je     12c1b <delete_object+0x6b>
   12bfc:	mov    rax,rsp
   12bff:	mov    ebx,0x1
   12c04:	mov    QWORD PTR [rsp+0x60],0x0
   12c0d:	mov    QWORD PTR [rsp+0x68],rax
   12c12:	mov    QWORD PTR [rsp+0x70],0x8
   12c1b:	mov    rdx,QWORD PTR [rip+0x133de]        # 26000 <opt_object_id_len>
   12c22:	test   rdx,rdx
   12c25:	je     12c4b <delete_object+0x9b>
   12c27:	movsxd rax,ebx
   12c2a:	lea    rcx,[rip+0x1346f]        # 260a0 <opt_object_id>
   12c31:	add    ebx,0x1
   12c34:	imul   rax,rax,0x18
   12c38:	mov    QWORD PTR [rsp+rax*1+0x60],0x102
   12c41:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   12c46:	mov    QWORD PTR [rsp+rax*1+0x70],rdx
   12c4b:	mov    rdi,QWORD PTR [rip+0x1339e]        # 25ff0 <opt_object_label>
   12c52:	test   rdi,rdi
   12c55:	je     12c7d <delete_object+0xcd>
   12c57:	movsxd rax,ebx
   12c5a:	add    ebx,0x1
   12c5d:	lea    r12,[rax+rax*2]
   12c61:	shl    r12,0x3
   12c65:	mov    QWORD PTR [rsp+r12*1+0x60],0x3
   12c6e:	mov    QWORD PTR [rsp+r12*1+0x68],rdi
   12c73:	call   5680 <strlen@plt>
   12c78:	mov    QWORD PTR [rsp+r12*1+0x70],rax
   12c7d:	mov    rdi,QWORD PTR [rip+0x13344]        # 25fc8 <opt_application_label>
   12c84:	mov    r13,QWORD PTR [rip+0x13335]        # 25fc0 <opt_application_id>
   12c8b:	test   rdi,rdi
   12c8e:	je     12db6 <delete_object+0x206>
   12c94:	movsxd rax,ebx
   12c97:	add    ebx,0x1
   12c9a:	lea    r12,[rax+rax*2]
   12c9e:	shl    r12,0x3
   12ca2:	mov    QWORD PTR [rsp+r12*1+0x60],0x10
   12cab:	mov    QWORD PTR [rsp+r12*1+0x68],rdi
   12cb0:	call   5680 <strlen@plt>
   12cb5:	mov    QWORD PTR [rsp+r12*1+0x70],rax
   12cba:	test   r13,r13
   12cbd:	je     12dd7 <delete_object+0x227>
   12cc3:	lea    r12,[rsp+0x20]
   12cc8:	mov    rsi,r13
   12ccb:	mov    rdi,r12
   12cce:	call   5720 <sc_format_oid@plt>
   12cd3:	test   eax,eax
   12cd5:	jne    12e08 <delete_object+0x258>
   12cdb:	lea    rsi,[rsp+0x18]
   12ce0:	lea    rdi,[rsp+0x10]
   12ce5:	mov    rdx,r12
   12ce8:	call   5880 <sc_asn1_encode_object_id@plt>
   12ced:	test   eax,eax
   12cef:	jne    12e1d <delete_object+0x26d>
   12cf5:	movsxd rax,ebx
   12cf8:	mov    rdx,QWORD PTR [rsp+0x10]
   12cfd:	add    ebx,0x1
   12d00:	mov    r12,QWORD PTR [rip+0x13429]        # 26130 <opt_object_index>
   12d07:	lea    rax,[rax+rax*2]
   12d0b:	shl    rax,0x3
   12d0f:	mov    QWORD PTR [rsp+rax*1+0x68],rdx
   12d14:	mov    rdx,QWORD PTR [rsp+0x18]
   12d19:	mov    QWORD PTR [rsp+rax*1+0x60],0x12
   12d22:	mov    QWORD PTR [rsp+rax*1+0x70],rdx
   12d27:	movsxd rdx,ebx
   12d2a:	mov    rax,QWORD PTR [rip+0x1315f]        # 25e90 <p11>
   12d31:	lea    rsi,[rsp+0x60]
   12d36:	mov    rdi,rbp
   12d39:	mov    QWORD PTR [rsp+0x8],0x0
   12d42:	call   QWORD PTR [rax+0xd8]
   12d48:	test   rax,rax
   12d4b:	jne    12dc8 <delete_object+0x218>
   12d4d:	lea    rsi,[rsp+0x8]
   12d52:	mov    rdx,r12
   12d55:	mov    rdi,rbp
   12d58:	call   a2d0 <find_object_with_attributes.part.0>
   12d5d:	test   rax,rax
   12d60:	jne    12dc8 <delete_object+0x218>
   12d62:	mov    rsi,QWORD PTR [rsp+0x8]
   12d67:	test   rsi,rsi
   12d6a:	je     12de6 <delete_object+0x236>
   12d6c:	mov    rax,QWORD PTR [rip+0x1311d]        # 25e90 <p11>
   12d73:	mov    rdi,rbp
   12d76:	call   QWORD PTR [rax+0xb8]
   12d7c:	test   rax,rax
   12d7f:	jne    12df9 <delete_object+0x249>
   12d81:	mov    rdi,QWORD PTR [rsp+0x10]
   12d86:	test   rdi,rdi
   12d89:	je     12d90 <delete_object+0x1e0>
   12d8b:	call   5590 <free@plt>
   12d90:	mov    rax,QWORD PTR [rsp+0x248]
   12d98:	xor    rax,QWORD PTR fs:0x28
   12da1:	jne    12df4 <delete_object+0x244>
   12da3:	add    rsp,0x258
   12daa:	mov    eax,0x1
   12daf:	pop    rbx
   12db0:	pop    rbp
   12db1:	pop    r12
   12db3:	pop    r13
   12db5:	ret    
   12db6:	test   r13,r13
   12db9:	jne    12cc3 <delete_object+0x113>
   12dbf:	mov    eax,0x7
   12dc4:	test   ebx,ebx
   12dc6:	jne    12dd7 <delete_object+0x227>
   12dc8:	mov    rsi,rax
   12dcb:	lea    rdi,[rip+0x4e23]        # 17bf5 <_IO_stdin_used+0xbf5>
   12dd2:	call   9140 <p11_fatal>
   12dd7:	mov    r12,QWORD PTR [rip+0x13352]        # 26130 <opt_object_index>
   12dde:	movsxd rdx,ebx
   12de1:	jmp    12d2a <delete_object+0x17a>
   12de6:	lea    rdi,[rip+0x4e26]        # 17c13 <_IO_stdin_used+0xc13>
   12ded:	xor    eax,eax
   12def:	call   15f90 <util_fatal>
   12df4:	call   5690 <__stack_chk_fail@plt>
   12df9:	mov    rsi,rax
   12dfc:	lea    rdi,[rip+0x57c9]        # 185cc <_IO_stdin_used+0x15cc>
   12e03:	call   9140 <p11_fatal>
   12e08:	mov    rsi,QWORD PTR [rip+0x131b1]        # 25fc0 <opt_application_id>
   12e0f:	lea    rdi,[rip+0x5875]        # 1868b <_IO_stdin_used+0x168b>
   12e16:	xor    eax,eax
   12e18:	call   15f90 <util_fatal>
   12e1d:	mov    rsi,QWORD PTR [rip+0x1319c]        # 25fc0 <opt_application_id>
   12e24:	lea    rdi,[rip+0x4db3]        # 17bde <_IO_stdin_used+0xbde>
   12e2b:	xor    eax,eax
   12e2d:	call   15f90 <util_fatal>
   12e32:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   12e3d:	nop    DWORD PTR [rax]

0000000000012e40 <test_kpgen_certwrite>:
   12e40:	push   r15
   12e42:	push   r14
   12e44:	push   r13
   12e46:	push   r12
   12e48:	push   rbp
   12e49:	push   rbx
   12e4a:	lea    rbx,[rip+0x56e0]        # 18531 <_IO_stdin_used+0x1531>
   12e51:	sub    rsp,0x358
   12e58:	movdqa xmm0,XMMWORD PTR [rip+0xc0b0]        # 1ef10 <GOST_HASH2001_PARAMSET_OID+0xc0>
   12e60:	mov    QWORD PTR [rsp+0x8],rsi
   12e65:	lea    r12,[rsp+0xf0]
   12e6d:	mov    rax,QWORD PTR fs:0x28
   12e76:	mov    QWORD PTR [rsp+0x348],rax
   12e7e:	xor    eax,eax
   12e80:	xor    eax,eax
   12e82:	movaps XMMWORD PTR [rsp+0x110],xmm0
   12e8a:	movdqa xmm0,XMMWORD PTR [rip+0xc08e]        # 1ef20 <GOST_HASH2001_PARAMSET_OID+0xd0>
   12e92:	mov    WORD PTR [rsp+0x130],ax
   12e9a:	lea    rax,[rip+0x569d]        # 1853e <_IO_stdin_used+0x153e>
   12ea1:	mov    QWORD PTR [rsp+0x40],0x1
   12eaa:	mov    QWORD PTR [rsp+0x48],0x0
   12eb3:	mov    QWORD PTR [rsp+0x50],0x0
   12ebc:	mov    QWORD PTR [rsp+0x18],0x0
   12ec5:	mov    QWORD PTR [rsp+0x120],0x1004
   12ed1:	mov    QWORD PTR [rsp+0x128],0x0
   12edd:	mov    DWORD PTR [rsp+0x100],0x74737271
   12ee8:	mov    BYTE PTR [rsp+0x104],0x0
   12ef0:	mov    QWORD PTR [rsp+0x80],0x102
   12efc:	mov    QWORD PTR [rsp+0x88],r12
   12f04:	mov    QWORD PTR [rsp+0x90],0x14
   12f10:	mov    QWORD PTR [rsp+0x98],0x3
   12f1c:	mov    QWORD PTR [rsp+0xa0],rbx
   12f24:	mov    QWORD PTR [rsp+0xa8],0xc
   12f30:	mov    QWORD PTR [rsp+0xb0],0x101
   12f3c:	mov    QWORD PTR [rsp+0xb8],rax
   12f44:	mov    QWORD PTR [rsp+0xc0],0x1d
   12f50:	movaps XMMWORD PTR [rsp+0xf0],xmm0
   12f58:	mov    QWORD PTR [rsp+0x38],0x0
   12f61:	cmp    QWORD PTR [rip+0x13097],0x0        # 26000 <opt_object_id_len>
   12f69:	je     13546 <test_kpgen_certwrite+0x706>
   12f6f:	cmp    QWORD PTR [rip+0x13031],0x0        # 25fa8 <opt_key_type>
   12f77:	je     135db <test_kpgen_certwrite+0x79b>
   12f7d:	mov    rbp,rdi
   12f80:	lea    rdi,[rip+0x8bd9]        # 1bb60 <_IO_stdin_used+0x4b60>
   12f87:	call   5600 <puts@plt>
   12f8c:	lea    rsi,[rsp+0x18]
   12f91:	or     rdx,0xffffffffffffffff
   12f95:	mov    rdi,rbp
   12f98:	call   91c0 <get_mechanisms>
   12f9d:	mov    QWORD PTR [rsp+0x30],0x0
   12fa6:	test   rax,rax
   12fa9:	je     135f1 <test_kpgen_certwrite+0x7b1>
   12faf:	mov    rcx,QWORD PTR [rsp+0x18]
   12fb4:	xor    edx,edx
   12fb6:	jmp    12fd2 <test_kpgen_certwrite+0x192>
   12fb8:	nop    DWORD PTR [rax+rax*1+0x0]
   12fc0:	add    rdx,0x1
   12fc4:	mov    QWORD PTR [rsp+0x30],rdx
   12fc9:	cmp    rdx,rax
   12fcc:	je     135f1 <test_kpgen_certwrite+0x7b1>
   12fd2:	cmp    QWORD PTR [rcx+rdx*8],0x0
   12fd7:	jne    12fc0 <test_kpgen_certwrite+0x180>
   12fd9:	mov    rdi,QWORD PTR [rip+0x13130]        # 26110 <opt_file_to_write>
   12fe0:	lea    rsi,[rip+0x55fe]        # 185e5 <_IO_stdin_used+0x15e5>
   12fe7:	call   5900 <fopen@plt>
   12fec:	mov    rdi,rax
   12fef:	test   rax,rax
   12ff2:	je     136f6 <test_kpgen_certwrite+0x8b6>
   12ff8:	call   5670 <fclose@plt>
   12ffd:	lea    r13,[rsp+0x28]
   13002:	jmp    13010 <test_kpgen_certwrite+0x1d0>
   13004:	nop    DWORD PTR [rax+0x0]
   13008:	add    BYTE PTR [rsp+0xf0],0x1
   13010:	mov    rdi,QWORD PTR [rsp+0x8]
   13015:	xor    r9d,r9d
   13018:	mov    rcx,r12
   1301b:	mov    rdx,r13
   1301e:	mov    r8d,0x14
   13024:	mov    esi,0x3
   13029:	call   b100 <find_object>
   1302e:	test   eax,eax
   13030:	jne    13008 <test_kpgen_certwrite+0x1c8>
   13032:	mov    rdx,QWORD PTR [rip+0x12f6f]        # 25fa8 <opt_key_type>
   13039:	lea    rsi,[rip+0x8f50]        # 1bf90 <_IO_stdin_used+0x4f90>
   13040:	mov    edi,0x1
   13045:	call   58a0 <__printf_chk@plt>
   1304a:	mov    rsi,QWORD PTR [rsp+0x8]
   1304f:	mov    rcx,r13
   13052:	mov    rdi,rbp
   13055:	mov    r8,QWORD PTR [rip+0x12f4c]        # 25fa8 <opt_key_type>
   1305c:	lea    rdx,[rsp+0x20]
   13061:	call   10b60 <gen_keypair>
   13066:	test   eax,eax
   13068:	je     13591 <test_kpgen_certwrite+0x751>
   1306e:	mov    rsi,QWORD PTR [rsp+0x28]
   13073:	mov    rdi,QWORD PTR [rsp+0x8]
   13078:	lea    rdx,[rsp+0x30]
   1307d:	call   bd10 <getID>
   13082:	mov    rdx,QWORD PTR [rsp+0x30]
   13087:	mov    rsi,rax
   1308a:	test   rdx,rdx
   1308d:	je     13618 <test_kpgen_certwrite+0x7d8>
   13093:	mov    ecx,0x64
   13098:	lea    rdi,[rip+0x13001]        # 260a0 <opt_object_id>
   1309f:	lea    r12,[rsp+0x60]
   130a4:	mov    QWORD PTR [rip+0x12f55],rdx        # 26000 <opt_object_id_len>
   130ab:	call   57b0 <__memcpy_chk@plt>
   130b0:	mov    r14,QWORD PTR [rsp+0x28]
   130b5:	mov    r13,QWORD PTR [rsp+0x8]
   130ba:	mov    rdx,r12
   130bd:	mov    rax,QWORD PTR [rip+0x12dcc]        # 25e90 <p11>
   130c4:	mov    ecx,0x1
   130c9:	mov    QWORD PTR [rsp+0x60],0x120
   130d2:	mov    QWORD PTR [rsp+0x68],0x0
   130db:	mov    rsi,r14
   130de:	mov    rdi,r13
   130e1:	mov    QWORD PTR [rsp+0x70],0x0
   130ea:	call   QWORD PTR [rax+0xc8]
   130f0:	test   rax,rax
   130f3:	jne    135a4 <test_kpgen_certwrite+0x764>
   130f9:	mov    rax,QWORD PTR [rsp+0x70]
   130fe:	cmp    rax,0xffffffffffffffff
   13102:	je     135b7 <test_kpgen_certwrite+0x777>
   13108:	lea    rsi,[rax+0x1]
   1310c:	mov    edi,0x1
   13111:	call   5790 <calloc@plt>
   13116:	mov    QWORD PTR [rsp+0x68],rax
   1311b:	test   rax,rax
   1311e:	je     13729 <test_kpgen_certwrite+0x8e9>
   13124:	mov    rax,QWORD PTR [rip+0x12d65]        # 25e90 <p11>
   1312b:	mov    rdx,r12
   1312e:	mov    rsi,r14
   13131:	mov    rdi,r13
   13134:	mov    ecx,0x1
   13139:	call   QWORD PTR [rax+0xc8]
   1313f:	mov    rax,QWORD PTR [rsp+0x70]
   13144:	cmp    rax,0xffffffffffffffff
   13148:	je     136bb <test_kpgen_certwrite+0x87b>
   1314e:	sub    rax,0x5
   13152:	cmp    rax,0x270b
   13158:	ja     135b7 <test_kpgen_certwrite+0x777>
   1315e:	lea    rdi,[rip+0x8f1b]        # 1c080 <_IO_stdin_used+0x5080>
   13165:	lea    r15,[rsp+0x80]
   1316d:	call   5600 <puts@plt>
   13172:	mov    rax,QWORD PTR [rip+0x12d17]        # 25e90 <p11>
   13179:	mov    rsi,QWORD PTR [rsp+0x28]
   1317e:	mov    rdx,r15
   13181:	mov    rdi,QWORD PTR [rsp+0x8]
   13186:	mov    ecx,0x1
   1318b:	call   QWORD PTR [rax+0xd0]
   13191:	test   rax,rax
   13194:	jne    13744 <test_kpgen_certwrite+0x904>
   1319a:	mov    rax,QWORD PTR [rip+0x12cef]        # 25e90 <p11>
   131a1:	mov    rsi,QWORD PTR [rsp+0x20]
   131a6:	mov    ecx,0x1
   131ab:	mov    rdx,r15
   131ae:	mov    rdi,QWORD PTR [rsp+0x8]
   131b3:	call   QWORD PTR [rax+0xd0]
   131b9:	test   rax,rax
   131bc:	jne    13735 <test_kpgen_certwrite+0x8f5>
   131c2:	lea    rdi,[rip+0x8f07]        # 1c0d0 <_IO_stdin_used+0x50d0>
   131c9:	call   5600 <puts@plt>
   131ce:	lea    rax,[rsp+0x40]
   131d3:	mov    rdx,QWORD PTR [rsp+0x28]
   131d8:	mov    rdi,QWORD PTR [rsp+0x8]
   131dd:	mov    QWORD PTR [rsp],rax
   131e1:	mov    rsi,rax
   131e4:	mov    rax,QWORD PTR [rip+0x12ca5]        # 25e90 <p11>
   131eb:	call   QWORD PTR [rax+0x158]
   131f1:	test   rax,rax
   131f4:	jne    13753 <test_kpgen_certwrite+0x913>
   131fa:	mov    rsi,QWORD PTR [rsp+0x28]
   131ff:	mov    rdi,QWORD PTR [rsp+0x8]
   13204:	call   bf60 <getALWAYS_AUTHENTICATE>
   13209:	test   al,al
   1320b:	jne    13682 <test_kpgen_certwrite+0x842>
   13211:	xor    ecx,ecx
   13213:	mov    rdi,QWORD PTR [rsp+0x8]
   13218:	mov    r8,r12
   1321b:	mov    edx,0x14
   13220:	mov    rax,QWORD PTR [rip+0x12c69]        # 25e90 <p11>
   13227:	lea    r13,[rsp+0xd0]
   1322f:	mov    rsi,r13
   13232:	call   QWORD PTR [rax+0x160]
   13238:	test   rax,rax
   1323b:	jne    1370b <test_kpgen_certwrite+0x8cb>
   13241:	mov    rdi,QWORD PTR [rsp+0x8]
   13246:	mov    r8,r12
   13249:	mov    edx,0x14
   1324e:	mov    rsi,r13
   13251:	mov    rax,QWORD PTR [rip+0x12c38]        # 25e90 <p11>
   13258:	lea    r14,[rsp+0x140]
   13260:	mov    QWORD PTR [rsp+0x60],0x14
   13269:	mov    rcx,r14
   1326c:	call   QWORD PTR [rax+0x160]
   13272:	cmp    rax,0x150
   13278:	jne    13653 <test_kpgen_certwrite+0x813>
   1327e:	mov    rax,QWORD PTR [rip+0x12c0b]        # 25e90 <p11>
   13285:	mov    r8,r12
   13288:	mov    rcx,r14
   1328b:	mov    rsi,r13
   1328e:	mov    rdi,QWORD PTR [rsp+0x8]
   13293:	mov    edx,0x14
   13298:	call   QWORD PTR [rax+0x160]
   1329e:	test   rax,rax
   132a1:	jne    1370b <test_kpgen_certwrite+0x8cb>
   132a7:	mov    rax,QWORD PTR [rip+0x12be2]        # 25e90 <p11>
   132ae:	mov    rdx,QWORD PTR [rsp+0x20]
   132b3:	mov    rsi,QWORD PTR [rsp]
   132b7:	mov    rdi,QWORD PTR [rsp+0x8]
   132bc:	call   QWORD PTR [rax+0x188]
   132c2:	test   rax,rax
   132c5:	jne    13780 <test_kpgen_certwrite+0x940>
   132cb:	mov    r8,QWORD PTR [rsp+0x60]
   132d0:	mov    rdi,QWORD PTR [rsp+0x8]
   132d5:	mov    rcx,r14
   132d8:	mov    rsi,r13
   132db:	mov    rax,QWORD PTR [rip+0x12bae]        # 25e90 <p11>
   132e2:	mov    edx,0x14
   132e7:	call   QWORD PTR [rax+0x190]
   132ed:	test   rax,rax
   132f0:	jne    13771 <test_kpgen_certwrite+0x931>
   132f6:	lea    rdi,[rip+0x8e53]        # 1c150 <_IO_stdin_used+0x5150>
   132fd:	call   5600 <puts@plt>
   13302:	mov    rax,QWORD PTR [rip+0x12b87]        # 25e90 <p11>
   13309:	mov    rdx,QWORD PTR [rsp+0x28]
   1330e:	mov    rsi,QWORD PTR [rsp]
   13312:	mov    rdi,QWORD PTR [rsp+0x8]
   13317:	call   QWORD PTR [rax+0x158]
   1331d:	test   rax,rax
   13320:	jne    13753 <test_kpgen_certwrite+0x913>
   13326:	mov    rsi,QWORD PTR [rsp+0x28]
   1332b:	mov    rdi,QWORD PTR [rsp+0x8]
   13330:	call   bf60 <getALWAYS_AUTHENTICATE>
   13335:	test   al,al
   13337:	jne    13696 <test_kpgen_certwrite+0x856>
   1333d:	mov    rdi,QWORD PTR [rsp+0x8]
   13342:	mov    r8,r12
   13345:	mov    rcx,r14
   13348:	mov    edx,0x14
   1334d:	mov    rax,QWORD PTR [rip+0x12b3c]        # 25e90 <p11>
   13354:	lea    rsi,[rsp+0x110]
   1335c:	call   QWORD PTR [rax+0x160]
   13362:	test   rax,rax
   13365:	jne    1370b <test_kpgen_certwrite+0x8cb>
   1336b:	lea    rdi,[rip+0x8e0e]        # 1c180 <_IO_stdin_used+0x5180>
   13372:	call   5600 <puts@plt>
   13377:	mov    rax,QWORD PTR [rip+0x12b12]        # 25e90 <p11>
   1337e:	mov    rsi,QWORD PTR [rsp+0x20]
   13383:	mov    rdx,r15
   13386:	mov    rdi,QWORD PTR [rsp+0x8]
   1338b:	mov    ecx,0x3
   13390:	call   QWORD PTR [rax+0xd0]
   13396:	test   rax,rax
   13399:	jne    13762 <test_kpgen_certwrite+0x922>
   1339f:	lea    rdi,[rip+0x89f2]        # 1bd98 <_IO_stdin_used+0x4d98>
   133a6:	call   5600 <puts@plt>
   133ab:	mov    rsi,QWORD PTR [rsp+0x28]
   133b0:	mov    rdi,QWORD PTR [rsp+0x8]
   133b5:	mov    rax,QWORD PTR [rip+0x12ad4]        # 25e90 <p11>
   133bc:	call   QWORD PTR [rax+0xb8]
   133c2:	test   rax,rax
   133c5:	jne    137b9 <test_kpgen_certwrite+0x979>
   133cb:	mov    rax,QWORD PTR [rip+0x12abe]        # 25e90 <p11>
   133d2:	mov    rsi,QWORD PTR [rsp+0x20]
   133d7:	mov    rdi,QWORD PTR [rsp+0x8]
   133dc:	call   QWORD PTR [rax+0xb8]
   133e2:	test   rax,rax
   133e5:	jne    137b9 <test_kpgen_certwrite+0x979>
   133eb:	lea    rdi,[rip+0x8dde]        # 1c1d0 <_IO_stdin_used+0x51d0>
   133f2:	call   5600 <puts@plt>
   133f7:	mov    rax,QWORD PTR [rip+0x12a92]        # 25e90 <p11>
   133fe:	mov    rdi,rbp
   13401:	call   QWORD PTR [rax+0x78]
   13404:	test   rax,rax
   13407:	jne    137aa <test_kpgen_certwrite+0x96a>
   1340d:	mov    rax,QWORD PTR [rip+0x12a7c]        # 25e90 <p11>
   13414:	xor    edi,edi
   13416:	call   QWORD PTR [rax+0x10]
   13419:	test   rax,rax
   1341c:	jne    1379b <test_kpgen_certwrite+0x95b>
   13422:	mov    rdi,QWORD PTR [rip+0x12a6f]        # 25e98 <module>
   13429:	call   16590 <C_UnloadModule>
   1342e:	lea    rdi,[rip+0x8dcb]        # 1c200 <_IO_stdin_used+0x5200>
   13435:	call   5600 <puts@plt>
   1343a:	lea    rdi,[rip+0x8e07]        # 1c248 <_IO_stdin_used+0x5248>
   13441:	call   5600 <puts@plt>
   13446:	mov    rdi,QWORD PTR [rip+0x11ed3]        # 25320 <opt_module>
   1344d:	lea    rsi,[rsp+0x38]
   13452:	call   165f0 <C_LoadModule>
   13457:	mov    QWORD PTR [rip+0x12a3a],rax        # 25e98 <module>
   1345e:	test   rax,rax
   13461:	je     1378f <test_kpgen_certwrite+0x94f>
   13467:	mov    rax,QWORD PTR [rsp+0x38]
   1346c:	mov    rdi,QWORD PTR [rip+0x129fd]        # 25e70 <c_initialize_args_ptr>
   13473:	mov    QWORD PTR [rip+0x12a16],rax        # 25e90 <p11>
   1347a:	call   QWORD PTR [rax+0x8]
   1347d:	cmp    rax,0x191
   13483:	je     136aa <test_kpgen_certwrite+0x86a>
   13489:	test   rax,rax
   1348c:	jne    1371a <test_kpgen_certwrite+0x8da>
   13492:	mov    rax,QWORD PTR [rip+0x129f7]        # 25e90 <p11>
   13499:	xor    ecx,ecx
   1349b:	xor    edx,edx
   1349d:	lea    r8,[rsp+0x8]
   134a2:	mov    rdi,QWORD PTR [rip+0x12caf]        # 26158 <opt_slot>
   134a9:	mov    esi,0x6
   134ae:	call   QWORD PTR [rax+0x68]
   134b1:	test   rax,rax
   134b4:	jne    136e7 <test_kpgen_certwrite+0x8a7>
   134ba:	mov    rdi,QWORD PTR [rsp+0x8]
   134bf:	mov    esi,0x1
   134c4:	call   9820 <login>
   134c9:	lea    rdi,[rip+0x8df8]        # 1c2c8 <_IO_stdin_used+0x52c8>
   134d0:	call   5600 <puts@plt>
   134d5:	mov    eax,DWORD PTR [rsp+0x100]
   134dc:	movdqa xmm1,XMMWORD PTR [rsp+0xf0]
   134e5:	mov    QWORD PTR [rip+0xfb70],0x1        # 23060 <opt_object_class>
   134f0:	mov    rdi,QWORD PTR [rsp+0x8]
   134f5:	mov    QWORD PTR [rip+0x12af4],rbx        # 25ff0 <opt_object_label>
   134fc:	mov    DWORD PTR [rip+0x12bae],eax        # 260b0 <opt_object_id+0x10>
   13502:	mov    QWORD PTR [rip+0x12af3],0x14        # 26000 <opt_object_id_len>
   1350d:	movaps XMMWORD PTR [rip+0x12b8c],xmm1        # 260a0 <opt_object_id>
   13514:	call   12140 <write_object>
   13519:	test   eax,eax
   1351b:	je     136db <test_kpgen_certwrite+0x89b>
   13521:	mov    rdi,QWORD PTR [rsp+0x8]
   13526:	call   12bb0 <delete_object>
   1352b:	test   eax,eax
   1352d:	je     136cf <test_kpgen_certwrite+0x88f>
   13533:	lea    rdi,[rip+0x8dde]        # 1c318 <_IO_stdin_used+0x5318>
   1353a:	call   5600 <puts@plt>
   1353f:	mov    rax,QWORD PTR [rsp+0x8]
   13544:	jmp    13568 <test_kpgen_certwrite+0x728>
   13546:	mov    rcx,QWORD PTR [rip+0x12093]        # 255e0 <stderr@@GLIBC_2.2.5>
   1354d:	mov    edx,0x24
   13552:	mov    esi,0x1
   13557:	lea    rdi,[rip+0x859a]        # 1baf8 <_IO_stdin_used+0x4af8>
   1355e:	call   59a0 <fwrite@plt>
   13563:	mov    rax,QWORD PTR [rsp+0x8]
   13568:	mov    rbx,QWORD PTR [rsp+0x348]
   13570:	xor    rbx,QWORD PTR fs:0x28
   13579:	jne    136ca <test_kpgen_certwrite+0x88a>
   1357f:	add    rsp,0x358
   13586:	pop    rbx
   13587:	pop    rbp
   13588:	pop    r12
   1358a:	pop    r13
   1358c:	pop    r14
   1358e:	pop    r15
   13590:	ret    
   13591:	lea    rdi,[rip+0x8a20]        # 1bfb8 <_IO_stdin_used+0x4fb8>
   13598:	call   5600 <puts@plt>
   1359d:	mov    rax,QWORD PTR [rsp+0x8]
   135a2:	jmp    13568 <test_kpgen_certwrite+0x728>
   135a4:	cmp    rax,0x12
   135a8:	je     135b7 <test_kpgen_certwrite+0x777>
   135aa:	cmp    DWORD PTR [rip+0x128c7],0x0        # 25e78 <suppress_warn>
   135b1:	je     1363f <test_kpgen_certwrite+0x7ff>
   135b7:	mov    rcx,QWORD PTR [rip+0x12022]        # 255e0 <stderr@@GLIBC_2.2.5>
   135be:	mov    edx,0x3d
   135c3:	mov    esi,0x1
   135c8:	lea    rdi,[rip+0x8a71]        # 1c040 <_IO_stdin_used+0x5040>
   135cf:	call   59a0 <fwrite@plt>
   135d4:	mov    rax,QWORD PTR [rsp+0x8]
   135d9:	jmp    13568 <test_kpgen_certwrite+0x728>
   135db:	lea    rdi,[rip+0x8926]        # 1bf08 <_IO_stdin_used+0x4f08>
   135e2:	call   5600 <puts@plt>
   135e7:	mov    rax,QWORD PTR [rsp+0x8]
   135ec:	jmp    13568 <test_kpgen_certwrite+0x728>
   135f1:	mov    rcx,QWORD PTR [rip+0x11fe8]        # 255e0 <stderr@@GLIBC_2.2.5>
   135f8:	mov    edx,0x40
   135fd:	mov    esi,0x1
   13602:	lea    rdi,[rip+0x893f]        # 1bf48 <_IO_stdin_used+0x4f48>
   13609:	call   59a0 <fwrite@plt>
   1360e:	mov    rax,QWORD PTR [rsp+0x8]
   13613:	jmp    13568 <test_kpgen_certwrite+0x728>
   13618:	mov    rcx,QWORD PTR [rip+0x11fc1]        # 255e0 <stderr@@GLIBC_2.2.5>
   1361f:	mov    edx,0x3d
   13624:	mov    esi,0x1
   13629:	lea    rdi,[rip+0x89b0]        # 1bfe0 <_IO_stdin_used+0x4fe0>
   13630:	call   59a0 <fwrite@plt>
   13635:	mov    rax,QWORD PTR [rsp+0x8]
   1363a:	jmp    13568 <test_kpgen_certwrite+0x728>
   1363f:	mov    rsi,rax
   13642:	lea    rdi,[rip+0x5053]        # 1869c <_IO_stdin_used+0x169c>
   13649:	call   b310 <p11_warn.part.0>
   1364e:	jmp    135b7 <test_kpgen_certwrite+0x777>
   13653:	mov    rdi,rax
   13656:	call   8e50 <CKR2Str>
   1365b:	mov    rdi,QWORD PTR [rip+0x11f7e]        # 255e0 <stderr@@GLIBC_2.2.5>
   13662:	mov    esi,0x1
   13667:	lea    rdx,[rip+0x8aaa]        # 1c118 <_IO_stdin_used+0x5118>
   1366e:	mov    rcx,rax
   13671:	xor    eax,eax
   13673:	call   59b0 <__fprintf_chk@plt>
   13678:	mov    rax,QWORD PTR [rsp+0x8]
   1367d:	jmp    13568 <test_kpgen_certwrite+0x728>
   13682:	mov    rdi,QWORD PTR [rsp+0x8]
   13687:	mov    esi,0x2
   1368c:	call   9820 <login>
   13691:	jmp    13211 <test_kpgen_certwrite+0x3d1>
   13696:	mov    rdi,QWORD PTR [rsp+0x8]
   1369b:	mov    esi,0x2
   136a0:	call   9820 <login>
   136a5:	jmp    1333d <test_kpgen_certwrite+0x4fd>
   136aa:	lea    rdi,[rip+0x8bdf]        # 1c290 <_IO_stdin_used+0x5290>
   136b1:	call   5600 <puts@plt>
   136b6:	jmp    13492 <test_kpgen_certwrite+0x652>
   136bb:	mov    rdi,QWORD PTR [rsp+0x68]
   136c0:	call   5590 <free@plt>
   136c5:	jmp    135b7 <test_kpgen_certwrite+0x777>
   136ca:	call   5690 <__stack_chk_fail@plt>
   136cf:	lea    rdi,[rip+0x506d]        # 18743 <_IO_stdin_used+0x1743>
   136d6:	call   15f90 <util_fatal>
   136db:	lea    rdi,[rip+0x5045]        # 18727 <_IO_stdin_used+0x1727>
   136e2:	call   15f90 <util_fatal>
   136e7:	mov    rsi,rax
   136ea:	lea    rdi,[rip+0x4388]        # 17a79 <_IO_stdin_used+0xa79>
   136f1:	call   9140 <p11_fatal>
   136f6:	mov    rsi,QWORD PTR [rip+0x12a13]        # 26110 <opt_file_to_write>
   136fd:	lea    rdi,[rip+0x4ee4]        # 185e8 <_IO_stdin_used+0x15e8>
   13704:	xor    eax,eax
   13706:	call   15f90 <util_fatal>
   1370b:	mov    rsi,rax
   1370e:	lea    rdi,[rip+0x43e0]        # 17af5 <_IO_stdin_used+0xaf5>
   13715:	call   9140 <p11_fatal>
   1371a:	mov    rsi,rax
   1371d:	lea    rdi,[rip+0x4ff6]        # 1871a <_IO_stdin_used+0x171a>
   13724:	call   9140 <p11_fatal>
   13729:	lea    rdi,[rip+0x88f0]        # 1c020 <_IO_stdin_used+0x5020>
   13730:	call   15f90 <util_fatal>
   13735:	mov    rsi,rax
   13738:	lea    rdi,[rip+0x4e3b]        # 1857a <_IO_stdin_used+0x157a>
   1373f:	call   9140 <p11_fatal>
   13744:	mov    rsi,rax
   13747:	lea    rdi,[rip+0x4e0e]        # 1855c <_IO_stdin_used+0x155c>
   1374e:	call   9140 <p11_fatal>
   13753:	mov    rsi,rax
   13756:	lea    rdi,[rip+0x458c]        # 17ce9 <_IO_stdin_used+0xce9>
   1375d:	call   9140 <p11_fatal>
   13762:	mov    rsi,rax
   13765:	lea    rdi,[rip+0x4f63]        # 186cf <_IO_stdin_used+0x16cf>
   1376c:	call   9140 <p11_fatal>
   13771:	mov    rsi,rax
   13774:	lea    rdi,[rip+0x4f4b]        # 186c6 <_IO_stdin_used+0x16c6>
   1377b:	call   9140 <p11_fatal>
   13780:	mov    rsi,rax
   13783:	lea    rdi,[rip+0x4f2f]        # 186b9 <_IO_stdin_used+0x16b9>
   1378a:	call   9140 <p11_fatal>
   1378f:	lea    rdi,[rip+0x4f67]        # 186fd <_IO_stdin_used+0x16fd>
   13796:	call   15f90 <util_fatal>
   1379b:	mov    rsi,rax
   1379e:	lea    rdi,[rip+0x4f4f]        # 186f4 <_IO_stdin_used+0x16f4>
   137a5:	call   9140 <p11_fatal>
   137aa:	mov    rsi,rax
   137ad:	lea    rdi,[rip+0x4f2f]        # 186e3 <_IO_stdin_used+0x16e3>
   137b4:	call   9140 <p11_fatal>
   137b9:	mov    rsi,rax
   137bc:	lea    rdi,[rip+0x4e09]        # 185cc <_IO_stdin_used+0x15cc>
   137c3:	call   9140 <p11_fatal>
   137c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000137d0 <parse_pss_params.isra.0>:
   137d0:	push   r13
   137d2:	push   r12
   137d4:	push   rbp
   137d5:	mov    rbp,rdx
   137d8:	push   rbx
   137d9:	mov    rbx,r8
   137dc:	sub    rsp,0x18
   137e0:	mov    r12,QWORD PTR [rip+0x126d9]        # 25ec0 <opt_hash_alg>
   137e7:	mov    QWORD PTR [r8],0x0
   137ee:	mov    rax,QWORD PTR [rip+0x1292b]        # 26120 <opt_mechanism>
   137f5:	test   r12,r12
   137f8:	je     1385f <parse_pss_params.isra.0+0x8f>
   137fa:	cmp    rax,0xd
   137fe:	jne    13bda <parse_pss_params.isra.0+0x40a>
   13804:	mov    QWORD PTR [r8],r12
   13807:	cmp    r12,0x270
   1380e:	je     139e2 <parse_pss_params.isra.0+0x212>
   13814:	ja     13a3f <parse_pss_params.isra.0+0x26f>
   1381a:	cmp    r12,0x255
   13821:	je     139f6 <parse_pss_params.isra.0+0x226>
   13827:	jbe    13a58 <parse_pss_params.isra.0+0x288>
   1382d:	cmp    r12,0x260
   13834:	je     139ce <parse_pss_params.isra.0+0x1fe>
   1383a:	mov    QWORD PTR [rbx],0x220
   13841:	mov    r12,QWORD PTR [rbx]
   13844:	mov    QWORD PTR [rbx+0x8],0x1
   1384c:	test   r12,r12
   1384f:	jne    138b5 <parse_pss_params.isra.0+0xe5>
   13851:	add    rsp,0x18
   13855:	mov    rax,r12
   13858:	pop    rbx
   13859:	pop    rbp
   1385a:	pop    r12
   1385c:	pop    r13
   1385e:	ret    
   1385f:	cmp    rax,0x67
   13863:	ja     13851 <parse_pss_params.isra.0+0x81>
   13865:	cmp    rax,0x42
   13869:	jbe    13886 <parse_pss_params.isra.0+0xb6>
   1386b:	sub    rax,0x43
   1386f:	cmp    rax,0x24
   13873:	ja     13851 <parse_pss_params.isra.0+0x81>
   13875:	lea    r9,[rip+0xb154]        # 1e9d0 <_IO_stdin_used+0x79d0>
   1387c:	movsxd rax,DWORD PTR [r9+rax*4]
   13880:	add    rax,r9
   13883:	notrack jmp rax
   13886:	cmp    rax,0xd
   1388a:	je     1383a <parse_pss_params.isra.0+0x6a>
   1388c:	cmp    rax,0xe
   13890:	jne    13851 <parse_pss_params.isra.0+0x81>
   13892:	mov    QWORD PTR [rbx],0x220
   13899:	mov    QWORD PTR [rbx+0x8],0x1
   138a1:	jmp    138b2 <parse_pss_params.isra.0+0xe2>
   138a3:	mov    QWORD PTR [rbx],0x2b5
   138aa:	mov    QWORD PTR [rbx+0x8],0x6
   138b2:	mov    r12,QWORD PTR [rbx]
   138b5:	mov    rax,QWORD PTR [rip+0x125fc]        # 25eb8 <opt_mgf>
   138bc:	test   rax,rax
   138bf:	je     138c5 <parse_pss_params.isra.0+0xf5>
   138c1:	mov    QWORD PTR [rbx+0x8],rax
   138c5:	mov    eax,r12d
   138c8:	cmp    r12d,0x270
   138cf:	je     13bcf <parse_pss_params.isra.0+0x3ff>
   138d5:	jg     13aea <parse_pss_params.isra.0+0x31a>
   138db:	cmp    r12d,0x250
   138e2:	je     13b11 <parse_pss_params.isra.0+0x341>
   138e8:	jle    13ad7 <parse_pss_params.isra.0+0x307>
   138ee:	cmp    r12d,0x255
   138f5:	jne    13a92 <parse_pss_params.isra.0+0x2c2>
   138fb:	mov    r12d,0x1c
   13901:	cmp    DWORD PTR [rip+0x125a4],0x1        # 25eac <opt_salt_len_given>
   13908:	je     13b7a <parse_pss_params.isra.0+0x3aa>
   1390e:	mov    QWORD PTR [rbx+0x10],r12
   13912:	mov    QWORD PTR [rbp+0x0],rbx
   13916:	mov    rbp,QWORD PTR [rip+0xf98b]        # 232a8 <p11_mgf+0x8>
   1391d:	mov    QWORD PTR [rcx],0x18
   13924:	mov    r13,QWORD PTR [rbx+0x10]
   13928:	mov    r9,QWORD PTR [rbx+0x8]
   1392c:	test   rbp,rbp
   1392f:	je     13b3f <parse_pss_params.isra.0+0x36f>
   13935:	lea    rax,[rip+0xf964]        # 232a0 <p11_mgf>
   1393c:	jmp    13951 <parse_pss_params.isra.0+0x181>
   1393e:	xchg   ax,ax
   13940:	mov    rbp,QWORD PTR [rax+0x28]
   13944:	add    rax,0x20
   13948:	test   rbp,rbp
   1394b:	je     13b3f <parse_pss_params.isra.0+0x36f>
   13951:	cmp    r9,QWORD PTR [rax]
   13954:	jne    13940 <parse_pss_params.isra.0+0x170>
   13956:	mov    rcx,QWORD PTR [rip+0xfa8b]        # 233e8 <p11_mechanisms+0x8>
   1395d:	mov    rdi,QWORD PTR [rbx]
   13960:	test   rcx,rcx
   13963:	je     13b32 <parse_pss_params.isra.0+0x362>
   13969:	lea    rdx,[rip+0xfa70]        # 233e0 <p11_mechanisms>
   13970:	jmp    13989 <parse_pss_params.isra.0+0x1b9>
   13972:	nop    WORD PTR [rax+rax*1+0x0]
   13978:	mov    rcx,QWORD PTR [rdx+0x28]
   1397c:	add    rdx,0x20
   13980:	test   rcx,rcx
   13983:	je     13b32 <parse_pss_params.isra.0+0x362>
   13989:	cmp    rdi,QWORD PTR [rdx]
   1398c:	jne    13978 <parse_pss_params.isra.0+0x1a8>
   1398e:	mov    rdi,QWORD PTR [rip+0x11c4b]        # 255e0 <stderr@@GLIBC_2.2.5>
   13995:	mov    r9,r13
   13998:	mov    r8,rbp
   1399b:	xor    eax,eax
   1399d:	lea    rdx,[rip+0x8aac]        # 1c450 <_IO_stdin_used+0x5450>
   139a4:	mov    esi,0x1
   139a9:	call   59b0 <__fprintf_chk@plt>
   139ae:	jmp    13851 <parse_pss_params.isra.0+0x81>
   139b3:	mov    QWORD PTR [rbx],0x250
   139ba:	mov    QWORD PTR [rbx+0x8],0x2
   139c2:	jmp    138b2 <parse_pss_params.isra.0+0xe2>
   139c7:	mov    QWORD PTR [rbx],0x260
   139ce:	mov    QWORD PTR [rbx+0x8],0x3
   139d6:	jmp    138b2 <parse_pss_params.isra.0+0xe2>
   139db:	mov    QWORD PTR [rbx],0x270
   139e2:	mov    QWORD PTR [rbx+0x8],0x4
   139ea:	jmp    138b2 <parse_pss_params.isra.0+0xe2>
   139ef:	mov    QWORD PTR [rbx],0x255
   139f6:	mov    QWORD PTR [rbx+0x8],0x5
   139fe:	jmp    138b2 <parse_pss_params.isra.0+0xe2>
   13a03:	mov    QWORD PTR [rbx],0x2b0
   13a0a:	mov    QWORD PTR [rbx+0x8],0x7
   13a12:	jmp    138b2 <parse_pss_params.isra.0+0xe2>
   13a17:	mov    QWORD PTR [rbx],0x2c0
   13a1e:	mov    QWORD PTR [rbx+0x8],0x8
   13a26:	jmp    138b2 <parse_pss_params.isra.0+0xe2>
   13a2b:	mov    QWORD PTR [rbx],0x2d0
   13a32:	mov    QWORD PTR [rbx+0x8],0x9
   13a3a:	jmp    138b2 <parse_pss_params.isra.0+0xe2>
   13a3f:	cmp    r12,0x2c0
   13a46:	je     13a1e <parse_pss_params.isra.0+0x24e>
   13a48:	jbe    13a77 <parse_pss_params.isra.0+0x2a7>
   13a4a:	cmp    r12,0x2d0
   13a51:	je     13a32 <parse_pss_params.isra.0+0x262>
   13a53:	jmp    1383a <parse_pss_params.isra.0+0x6a>
   13a58:	cmp    r12,0x220
   13a5f:	je     13841 <parse_pss_params.isra.0+0x71>
   13a65:	cmp    r12,0x250
   13a6c:	je     139ba <parse_pss_params.isra.0+0x1ea>
   13a72:	jmp    1383a <parse_pss_params.isra.0+0x6a>
   13a77:	cmp    r12,0x2b0
   13a7e:	je     13a0a <parse_pss_params.isra.0+0x23a>
   13a80:	cmp    r12,0x2b5
   13a87:	je     138aa <parse_pss_params.isra.0+0xda>
   13a8d:	jmp    1383a <parse_pss_params.isra.0+0x6a>
   13a92:	mov    r12d,0x30
   13a98:	cmp    eax,0x260
   13a9d:	je     13901 <parse_pss_params.isra.0+0x131>
   13aa3:	movsxd rdi,eax
   13aa6:	lea    rax,[rip+0xf933]        # 233e0 <p11_mechanisms>
   13aad:	jmp    13ab8 <parse_pss_params.isra.0+0x2e8>
   13aaf:	cmp    rdi,QWORD PTR [rax]
   13ab2:	je     13ac9 <parse_pss_params.isra.0+0x2f9>
   13ab4:	add    rax,0x20
   13ab8:	mov    rsi,QWORD PTR [rax+0x8]
   13abc:	test   rsi,rsi
   13abf:	jne    13aaf <parse_pss_params.isra.0+0x2df>
   13ac1:	call   a3c0 <p11_mechanism_to_name.part.0>
   13ac6:	mov    rsi,rax
   13ac9:	lea    rdi,[rip+0x88b8]        # 1c388 <_IO_stdin_used+0x5388>
   13ad0:	xor    eax,eax
   13ad2:	call   15f90 <util_fatal>
   13ad7:	mov    r12d,0x14
   13add:	cmp    eax,0x220
   13ae2:	je     13901 <parse_pss_params.isra.0+0x131>
   13ae8:	jmp    13aa3 <parse_pss_params.isra.0+0x2d3>
   13aea:	cmp    r12d,0x2c0
   13af1:	je     13b6f <parse_pss_params.isra.0+0x39f>
   13af3:	jle    13b08 <parse_pss_params.isra.0+0x338>
   13af5:	mov    r12d,0x40
   13afb:	cmp    eax,0x2d0
   13b00:	je     13901 <parse_pss_params.isra.0+0x131>
   13b06:	jmp    13aa3 <parse_pss_params.isra.0+0x2d3>
   13b08:	cmp    r12d,0x2b0
   13b0f:	jne    13b1c <parse_pss_params.isra.0+0x34c>
   13b11:	mov    r12d,0x20
   13b17:	jmp    13901 <parse_pss_params.isra.0+0x131>
   13b1c:	mov    r12d,0x1c
   13b22:	cmp    eax,0x2b5
   13b27:	je     13901 <parse_pss_params.isra.0+0x131>
   13b2d:	jmp    13aa3 <parse_pss_params.isra.0+0x2d3>
   13b32:	call   a3c0 <p11_mechanism_to_name.part.0>
   13b37:	mov    rcx,rax
   13b3a:	jmp    1398e <parse_pss_params.isra.0+0x1be>
   13b3f:	lea    r8,[rip+0x4296]        # 17ddc <_IO_stdin_used+0xddc>
   13b46:	mov    ecx,0x40
   13b4b:	xor    eax,eax
   13b4d:	mov    edx,0x1
   13b52:	mov    esi,0x40
   13b57:	lea    rdi,[rip+0x11aa2]        # 25600 <temp.11840>
   13b5e:	lea    rbp,[rip+0x11a9b]        # 25600 <temp.11840>
   13b65:	call   5580 <__snprintf_chk@plt>
   13b6a:	jmp    13956 <parse_pss_params.isra.0+0x186>
   13b6f:	mov    r12d,0x30
   13b75:	jmp    13901 <parse_pss_params.isra.0+0x131>
   13b7a:	mov    QWORD PTR [rsp+0x8],rcx
   13b7f:	call   c110 <get_private_key_length>
   13b84:	mov    rdx,QWORD PTR [rip+0x12325]        # 25eb0 <opt_salt_len>
   13b8b:	mov    rcx,QWORD PTR [rsp+0x8]
   13b90:	cmp    rdx,0xffffffffffffffff
   13b94:	jl     13ba3 <parse_pss_params.isra.0+0x3d3>
   13b96:	cmove  rdx,r12
   13b9a:	mov    QWORD PTR [rbx+0x10],rdx
   13b9e:	jmp    13912 <parse_pss_params.isra.0+0x142>
   13ba3:	cmp    rdx,0xfffffffffffffffd
   13ba7:	jge    13bb7 <parse_pss_params.isra.0+0x3e7>
   13ba9:	lea    rdi,[rip+0x8810]        # 1c3c0 <_IO_stdin_used+0x53c0>
   13bb0:	xor    eax,eax
   13bb2:	call   15f90 <util_fatal>
   13bb7:	add    rax,0x7
   13bbb:	shr    rax,0x3
   13bbf:	sub    rax,r12
   13bc2:	sub    rax,0x2
   13bc6:	mov    QWORD PTR [rbx+0x10],rax
   13bca:	jmp    13912 <parse_pss_params.isra.0+0x142>
   13bcf:	mov    r12d,0x40
   13bd5:	jmp    13901 <parse_pss_params.isra.0+0x131>
   13bda:	lea    rdi,[rip+0x8767]        # 1c348 <_IO_stdin_used+0x5348>
   13be1:	xor    eax,eax
   13be3:	call   15f90 <util_fatal>
   13be8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000013bf0 <sign_data>:
   13bf0:	push   r15
   13bf2:	push   r14
   13bf4:	push   r13
   13bf6:	mov    r13,rdx
   13bf9:	push   r12
   13bfb:	push   rbp
   13bfc:	mov    rbp,rsi
   13bff:	push   rbx
   13c00:	sub    rsp,0x688
   13c07:	mov    rax,QWORD PTR fs:0x28
   13c10:	mov    QWORD PTR [rsp+0x678],rax
   13c18:	xor    eax,eax
   13c1a:	mov    eax,DWORD PTR [rip+0x124f8]        # 26118 <opt_mechanism_used>
   13c20:	test   eax,eax
   13c22:	je     13fc8 <sign_data+0x3d8>
   13c28:	mov    rcx,QWORD PTR [rip+0xf7b9]        # 233e8 <p11_mechanisms+0x8>
   13c2f:	mov    rdi,QWORD PTR [rip+0x124ea]        # 26120 <opt_mechanism>
   13c36:	test   rcx,rcx
   13c39:	je     13ed8 <sign_data+0x2e8>
   13c3f:	lea    rdx,[rip+0xf79a]        # 233e0 <p11_mechanisms>
   13c46:	jmp    13c61 <sign_data+0x71>
   13c48:	nop    DWORD PTR [rax+rax*1+0x0]
   13c50:	mov    rcx,QWORD PTR [rdx+0x28]
   13c54:	add    rdx,0x20
   13c58:	test   rcx,rcx
   13c5b:	je     13ed8 <sign_data+0x2e8>
   13c61:	cmp    rdi,QWORD PTR [rdx]
   13c64:	jne    13c50 <sign_data+0x60>
   13c66:	mov    rdi,QWORD PTR [rip+0x11973]        # 255e0 <stderr@@GLIBC_2.2.5>
   13c6d:	lea    rdx,[rip+0x4b09]        # 1877d <_IO_stdin_used+0x177d>
   13c74:	mov    esi,0x1
   13c79:	xor    eax,eax
   13c7b:	call   59b0 <__fprintf_chk@plt>
   13c80:	pxor   xmm0,xmm0
   13c84:	mov    rdi,rbp
   13c87:	mov    rsi,r13
   13c8a:	lea    rdx,[rsp+0x38]
   13c8f:	lea    rcx,[rsp+0x40]
   13c94:	movups XMMWORD PTR [rsp+0x38],xmm0
   13c99:	mov    rax,QWORD PTR [rip+0x12480]        # 26120 <opt_mechanism>
   13ca0:	lea    r8,[rsp+0x50]
   13ca5:	mov    QWORD PTR [rsp+0x30],rax
   13caa:	call   137d0 <parse_pss_params.isra.0>
   13caf:	mov    rdi,QWORD PTR [rip+0x124c2]        # 26178 <opt_input>
   13cb6:	mov    r14,rax
   13cb9:	test   rdi,rdi
   13cbc:	je     14007 <sign_data+0x417>
   13cc2:	xor    esi,esi
   13cc4:	xor    eax,eax
   13cc6:	call   58f0 <open@plt>
   13ccb:	mov    r12d,eax
   13cce:	test   eax,eax
   13cd0:	js     1405c <sign_data+0x46c>
   13cd6:	lea    rbx,[rsp+0x270]
   13cde:	mov    edx,0x401
   13ce3:	mov    edi,r12d
   13ce6:	mov    rsi,rbx
   13ce9:	call   5740 <read@plt>
   13cee:	mov    r8,rax
   13cf1:	mov    r15d,eax
   13cf4:	test   eax,eax
   13cf6:	js     14047 <sign_data+0x457>
   13cfc:	cmp    QWORD PTR [rip+0x1241c],0xd        # 26120 <opt_mechanism>
   13d04:	je     13f78 <sign_data+0x388>
   13d0a:	cmp    r8d,0x400
   13d11:	jle    13ee5 <sign_data+0x2f5>
   13d17:	lea    rax,[rsp+0x30]
   13d1c:	mov    QWORD PTR [rsp],rax
   13d20:	mov    rax,QWORD PTR [rip+0x12169]        # 25e90 <p11>
   13d27:	mov    rsi,QWORD PTR [rsp]
   13d2b:	mov    rdx,r13
   13d2e:	mov    rdi,rbp
   13d31:	call   QWORD PTR [rax+0x158]
   13d37:	test   rax,rax
   13d3a:	jne    14095 <sign_data+0x4a5>
   13d40:	mov    rsi,r13
   13d43:	mov    rdi,rbp
   13d46:	call   bf60 <getALWAYS_AUTHENTICATE>
   13d4b:	test   al,al
   13d4d:	jne    1400f <sign_data+0x41f>
   13d53:	nop    DWORD PTR [rax+rax*1+0x0]
   13d58:	mov    rax,QWORD PTR [rip+0x12131]        # 25e90 <p11>
   13d5f:	movsxd rdx,r15d
   13d62:	mov    rsi,rbx
   13d65:	mov    rdi,rbp
   13d68:	call   QWORD PTR [rax+0x168]
   13d6e:	test   rax,rax
   13d71:	jne    14038 <sign_data+0x448>
   13d77:	mov    edx,0x401
   13d7c:	mov    rsi,rbx
   13d7f:	mov    edi,r12d
   13d82:	call   5740 <read@plt>
   13d87:	mov    r15d,eax
   13d8a:	test   eax,eax
   13d8c:	jg     13d58 <sign_data+0x168>
   13d8e:	mov    rax,QWORD PTR [rip+0x120fb]        # 25e90 <p11>
   13d95:	lea    r14,[rsp+0x70]
   13d9a:	lea    rdx,[rsp+0x18]
   13d9f:	mov    rdi,rbp
   13da2:	mov    QWORD PTR [rsp+0x18],0x200
   13dab:	mov    rsi,r14
   13dae:	call   QWORD PTR [rax+0x170]
   13db4:	test   rax,rax
   13db7:	jne    14071 <sign_data+0x481>
   13dbd:	test   r12d,r12d
   13dc0:	jne    13ffa <sign_data+0x40a>
   13dc6:	mov    rdi,QWORD PTR [rip+0x123a3]        # 26170 <opt_output>
   13dcd:	test   rdi,rdi
   13dd0:	je     13f6e <sign_data+0x37e>
   13dd6:	mov    edx,0x180
   13ddb:	mov    esi,0x241
   13de0:	xor    eax,eax
   13de2:	call   58f0 <open@plt>
   13de7:	mov    ebp,eax
   13de9:	test   eax,eax
   13deb:	js     14080 <sign_data+0x490>
   13df1:	mov    rax,QWORD PTR [rip+0x12328]        # 26120 <opt_mechanism>
   13df8:	sub    rax,0x1041
   13dfe:	cmp    rax,0x9
   13e02:	ja     13e8c <sign_data+0x29c>
   13e08:	mov    r8,QWORD PTR [rip+0x12191]        # 25fa0 <opt_sig_format>
   13e0f:	test   r8,r8
   13e12:	je     13e8c <sign_data+0x29c>
   13e14:	mov    ecx,0x8
   13e19:	lea    rdi,[rip+0x497b]        # 1879b <_IO_stdin_used+0x179b>
   13e20:	mov    rsi,r8
   13e23:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   13e25:	seta   al
   13e28:	sbb    al,0x0
   13e2a:	test   al,al
   13e2c:	je     13e41 <sign_data+0x251>
   13e2e:	lea    rsi,[rip+0x496e]        # 187a3 <_IO_stdin_used+0x17a3>
   13e35:	mov    rdi,r8
   13e38:	call   57a0 <strcmp@plt>
   13e3d:	test   eax,eax
   13e3f:	jne    13e8c <sign_data+0x29c>
   13e41:	mov    rdx,QWORD PTR [rsp+0x18]
   13e46:	xor    edi,edi
   13e48:	lea    rcx,[rsp+0x20]
   13e4d:	mov    rsi,r14
   13e50:	lea    r8,[rsp+0x28]
   13e55:	call   5640 <sc_asn1_sig_value_rs_to_sequence@plt>
   13e5a:	test   eax,eax
   13e5c:	jne    140a9 <sign_data+0x4b9>
   13e62:	mov    rbx,QWORD PTR [rsp+0x28]
   13e67:	mov    r12,QWORD PTR [rsp+0x20]
   13e6c:	mov    rdi,r14
   13e6f:	mov    ecx,0x200
   13e74:	mov    rdx,rbx
   13e77:	mov    rsi,r12
   13e7a:	call   57b0 <__memcpy_chk@plt>
   13e7f:	mov    rdi,r12
   13e82:	mov    QWORD PTR [rsp+0x18],rbx
   13e87:	call   5590 <free@plt>
   13e8c:	mov    rdx,QWORD PTR [rsp+0x18]
   13e91:	mov    rsi,r14
   13e94:	mov    edi,ebp
   13e96:	call   5650 <write@plt>
   13e9b:	test   eax,eax
   13e9d:	js     140b7 <sign_data+0x4c7>
   13ea3:	cmp    ebp,0x1
   13ea6:	je     13eaf <sign_data+0x2bf>
   13ea8:	mov    edi,ebp
   13eaa:	call   5700 <close@plt>
   13eaf:	mov    rax,QWORD PTR [rsp+0x678]
   13eb7:	xor    rax,QWORD PTR fs:0x28
   13ec0:	jne    140a4 <sign_data+0x4b4>
   13ec6:	add    rsp,0x688
   13ecd:	pop    rbx
   13ece:	pop    rbp
   13ecf:	pop    r12
   13ed1:	pop    r13
   13ed3:	pop    r14
   13ed5:	pop    r15
   13ed7:	ret    
   13ed8:	call   a3c0 <p11_mechanism_to_name.part.0>
   13edd:	mov    rcx,rax
   13ee0:	jmp    13c66 <sign_data+0x76>
   13ee5:	lea    rax,[rsp+0x30]
   13eea:	mov    QWORD PTR [rsp+0x8],r8
   13eef:	mov    rdx,r13
   13ef2:	mov    rdi,rbp
   13ef5:	mov    QWORD PTR [rsp],rax
   13ef9:	mov    rsi,rax
   13efc:	mov    rax,QWORD PTR [rip+0x11f8d]        # 25e90 <p11>
   13f03:	call   QWORD PTR [rax+0x158]
   13f09:	mov    r8,QWORD PTR [rsp+0x8]
   13f0e:	test   rax,rax
   13f11:	jne    14095 <sign_data+0x4a5>
   13f17:	mov    rsi,r13
   13f1a:	mov    rdi,rbp
   13f1d:	mov    QWORD PTR [rsp+0x8],r8
   13f22:	call   bf60 <getALWAYS_AUTHENTICATE>
   13f27:	mov    r8,QWORD PTR [rsp+0x8]
   13f2c:	test   al,al
   13f2e:	jne    14021 <sign_data+0x431>
   13f34:	mov    rax,QWORD PTR [rip+0x11f55]        # 25e90 <p11>
   13f3b:	movsxd rdx,r8d
   13f3e:	mov    rsi,rbx
   13f41:	mov    rdi,rbp
   13f44:	lea    r14,[rsp+0x70]
   13f49:	lea    r8,[rsp+0x18]
   13f4e:	mov    QWORD PTR [rsp+0x18],0x200
   13f57:	mov    rcx,r14
   13f5a:	call   QWORD PTR [rax+0x160]
   13f60:	test   rax,rax
   13f63:	jne    13d20 <sign_data+0x130>
   13f69:	jmp    13dbd <sign_data+0x1cd>
   13f6e:	mov    ebp,0x1
   13f73:	jmp    13df1 <sign_data+0x201>
   13f78:	cdqe   
   13f7a:	cmp    rax,r14
   13f7d:	je     13d0a <sign_data+0x11a>
   13f83:	lea    rax,[rip+0xf456]        # 233e0 <p11_mechanisms>
   13f8a:	jmp    13f96 <sign_data+0x3a6>
   13f8c:	cmp    QWORD PTR [rax],0xd
   13f90:	je     13fb4 <sign_data+0x3c4>
   13f92:	add    rax,0x20
   13f96:	mov    rsi,QWORD PTR [rax+0x8]
   13f9a:	test   rsi,rsi
   13f9d:	jne    13f8c <sign_data+0x39c>
   13f9f:	mov    edi,0xd
   13fa4:	mov    QWORD PTR [rsp],r8
   13fa8:	call   a3c0 <p11_mechanism_to_name.part.0>
   13fad:	mov    r8,QWORD PTR [rsp]
   13fb1:	mov    rsi,rax
   13fb4:	mov    rcx,r14
   13fb7:	mov    edx,r8d
   13fba:	lea    rdi,[rip+0x84c7]        # 1c488 <_IO_stdin_used+0x5488>
   13fc1:	xor    eax,eax
   13fc3:	call   15f90 <util_fatal>
   13fc8:	mov    rsi,QWORD PTR [rip+0xf081]        # 23050 <opt_allow_sw>
   13fcf:	xor    ecx,ecx
   13fd1:	xor    edx,edx
   13fd3:	lea    r8,[rip+0x12146]        # 26120 <opt_mechanism>
   13fda:	or     rsi,0x800
   13fe1:	call   9300 <find_mechanism>
   13fe6:	test   eax,eax
   13fe8:	jne    13c28 <sign_data+0x38>
   13fee:	lea    rdi,[rip+0x476b]        # 18760 <_IO_stdin_used+0x1760>
   13ff5:	call   15f90 <util_fatal>
   13ffa:	mov    edi,r12d
   13ffd:	call   5700 <close@plt>
   14002:	jmp    13dc6 <sign_data+0x1d6>
   14007:	xor    r12d,r12d
   1400a:	jmp    13cd6 <sign_data+0xe6>
   1400f:	mov    esi,0x2
   14014:	mov    rdi,rbp
   14017:	call   9820 <login>
   1401c:	jmp    13d58 <sign_data+0x168>
   14021:	mov    esi,0x2
   14026:	mov    rdi,rbp
   14029:	call   9820 <login>
   1402e:	mov    r8,QWORD PTR [rsp+0x8]
   14033:	jmp    13f34 <sign_data+0x344>
   14038:	mov    rsi,rax
   1403b:	lea    rdi,[rip+0x3ea2]        # 17ee4 <_IO_stdin_used+0xee4>
   14042:	call   9140 <p11_fatal>
   14047:	mov    rsi,QWORD PTR [rip+0x1212a]        # 26178 <opt_input>
   1404e:	lea    rdi,[rip+0x3d0f]        # 17d64 <_IO_stdin_used+0xd64>
   14055:	xor    eax,eax
   14057:	call   15f90 <util_fatal>
   1405c:	mov    rsi,QWORD PTR [rip+0x12115]        # 26178 <opt_input>
   14063:	lea    rdi,[rip+0x3cd1]        # 17d3b <_IO_stdin_used+0xd3b>
   1406a:	xor    eax,eax
   1406c:	call   15f90 <util_fatal>
   14071:	mov    rsi,rax
   14074:	lea    rdi,[rip+0x3e76]        # 17ef1 <_IO_stdin_used+0xef1>
   1407b:	call   9140 <p11_fatal>
   14080:	mov    rsi,QWORD PTR [rip+0x120e9]        # 26170 <opt_output>
   14087:	lea    rdi,[rip+0x3cc0]        # 17d4e <_IO_stdin_used+0xd4e>
   1408e:	xor    eax,eax
   14090:	call   15f90 <util_fatal>
   14095:	mov    rsi,rax
   14098:	lea    rdi,[rip+0x3c4a]        # 17ce9 <_IO_stdin_used+0xce9>
   1409f:	call   9140 <p11_fatal>
   140a4:	call   5690 <__stack_chk_fail@plt>
   140a9:	lea    rdi,[rip+0x8438]        # 1c4e8 <_IO_stdin_used+0x54e8>
   140b0:	xor    eax,eax
   140b2:	call   15f90 <util_fatal>
   140b7:	mov    rsi,QWORD PTR [rip+0x120b2]        # 26170 <opt_output>
   140be:	lea    rdi,[rip+0x3d81]        # 17e46 <_IO_stdin_used+0xe46>
   140c5:	xor    eax,eax
   140c7:	call   15f90 <util_fatal>
   140cc:	nop    DWORD PTR [rax+0x0]

00000000000140d0 <verify_signature>:
   140d0:	push   r15
   140d2:	push   r14
   140d4:	push   r13
   140d6:	mov    r13,rdx
   140d9:	push   r12
   140db:	push   rbp
   140dc:	mov    rbp,rsi
   140df:	push   rbx
   140e0:	sub    rsp,0x688
   140e7:	mov    rax,QWORD PTR fs:0x28
   140f0:	mov    QWORD PTR [rsp+0x678],rax
   140f8:	xor    eax,eax
   140fa:	mov    eax,DWORD PTR [rip+0x12018]        # 26118 <opt_mechanism_used>
   14100:	test   eax,eax
   14102:	je     14547 <verify_signature+0x477>
   14108:	mov    rcx,QWORD PTR [rip+0xf2d9]        # 233e8 <p11_mechanisms+0x8>
   1410f:	mov    rdi,QWORD PTR [rip+0x1200a]        # 26120 <opt_mechanism>
   14116:	test   rcx,rcx
   14119:	je     143f2 <verify_signature+0x322>
   1411f:	lea    rdx,[rip+0xf2ba]        # 233e0 <p11_mechanisms>
   14126:	jmp    14141 <verify_signature+0x71>
   14128:	nop    DWORD PTR [rax+rax*1+0x0]
   14130:	mov    rcx,QWORD PTR [rdx+0x28]
   14134:	add    rdx,0x20
   14138:	test   rcx,rcx
   1413b:	je     143f2 <verify_signature+0x322>
   14141:	cmp    rdi,QWORD PTR [rdx]
   14144:	jne    14130 <verify_signature+0x60>
   14146:	mov    rdi,QWORD PTR [rip+0x11493]        # 255e0 <stderr@@GLIBC_2.2.5>
   1414d:	lea    rdx,[rip+0x4629]        # 1877d <_IO_stdin_used+0x177d>
   14154:	mov    esi,0x1
   14159:	xor    eax,eax
   1415b:	call   59b0 <__fprintf_chk@plt>
   14160:	lea    rdx,[rsp+0x38]
   14165:	mov    rsi,r13
   14168:	mov    rdi,rbp
   1416b:	mov    rax,QWORD PTR [rip+0x11fae]        # 26120 <opt_mechanism>
   14172:	pxor   xmm0,xmm0
   14176:	lea    rcx,[rsp+0x40]
   1417b:	lea    r8,[rsp+0x50]
   14180:	movups XMMWORD PTR [rsp+0x38],xmm0
   14185:	mov    QWORD PTR [rsp+0x30],rax
   1418a:	call   137d0 <parse_pss_params.isra.0>
   1418f:	mov    r14,rax
   14192:	test   rax,rax
   14195:	jne    143ff <verify_signature+0x32f>
   1419b:	mov    rdi,QWORD PTR [rip+0x11fc6]        # 26168 <opt_signature_file>
   141a2:	test   rdi,rdi
   141a5:	je     1460f <verify_signature+0x53f>
   141ab:	xor    esi,esi
   141ad:	xor    eax,eax
   141af:	call   58f0 <open@plt>
   141b4:	mov    r12d,eax
   141b7:	test   eax,eax
   141b9:	js     1465c <verify_signature+0x58c>
   141bf:	lea    r15,[rsp+0x70]
   141c4:	mov    edx,0x200
   141c9:	mov    edi,eax
   141cb:	mov    rsi,r15
   141ce:	call   5740 <read@plt>
   141d3:	mov    DWORD PTR [rsp+0x8],eax
   141d7:	mov    rbx,rax
   141da:	test   eax,eax
   141dc:	js     1461d <verify_signature+0x54d>
   141e2:	mov    edi,r12d
   141e5:	call   5700 <close@plt>
   141ea:	mov    rax,QWORD PTR [rip+0x11f2f]        # 26120 <opt_mechanism>
   141f1:	sub    rax,0x1041
   141f7:	cmp    rax,0x9
   141fb:	ja     142b3 <verify_signature+0x1e3>
   14201:	mov    r8,QWORD PTR [rip+0x11d98]        # 25fa0 <opt_sig_format>
   14208:	test   r8,r8
   1420b:	je     142b3 <verify_signature+0x1e3>
   14211:	mov    ecx,0x8
   14216:	lea    rdi,[rip+0x457e]        # 1879b <_IO_stdin_used+0x179b>
   1421d:	mov    rsi,r8
   14220:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14222:	seta   al
   14225:	sbb    al,0x0
   14227:	test   al,al
   14229:	je     1423e <verify_signature+0x16e>
   1422b:	lea    rsi,[rip+0x4571]        # 187a3 <_IO_stdin_used+0x17a3>
   14232:	mov    rdi,r8
   14235:	call   57a0 <strcmp@plt>
   1423a:	test   eax,eax
   1423c:	jne    142b3 <verify_signature+0x1e3>
   1423e:	lea    rdx,[rsp+0x28]
   14243:	mov    rsi,r13
   14246:	mov    rdi,rbp
   14249:	call   b520 <getEC_POINT>
   1424e:	mov    rdi,rax
   14251:	call   5590 <free@plt>
   14256:	mov    r12,QWORD PTR [rsp+0x28]
   1425b:	lea    rax,[r12-0x2]
   14260:	cmp    rax,0x7f
   14264:	ja     145ba <verify_signature+0x4ea>
   1426a:	sub    r12,0x3
   1426e:	lea    r9,[rsp+0x270]
   14276:	xor    edi,edi
   14278:	movsxd rdx,ebx
   1427b:	mov    r8,r12
   1427e:	mov    rcx,r9
   14281:	mov    rsi,r15
   14284:	mov    QWORD PTR [rsp+0x8],r9
   14289:	call   56f0 <sc_asn1_sig_value_sequence_to_rs@plt>
   1428e:	mov    r9,QWORD PTR [rsp+0x8]
   14293:	test   eax,eax
   14295:	jne    145df <verify_signature+0x50f>
   1429b:	mov    ecx,0x200
   142a0:	mov    rdx,r12
   142a3:	mov    rsi,r9
   142a6:	mov    rdi,r15
   142a9:	call   57b0 <__memcpy_chk@plt>
   142ae:	mov    DWORD PTR [rsp+0x8],r12d
   142b3:	mov    rdi,QWORD PTR [rip+0x11ebe]        # 26178 <opt_input>
   142ba:	test   rdi,rdi
   142bd:	je     145a1 <verify_signature+0x4d1>
   142c3:	xor    esi,esi
   142c5:	xor    eax,eax
   142c7:	call   58f0 <open@plt>
   142cc:	mov    r12d,eax
   142cf:	test   eax,eax
   142d1:	js     14647 <verify_signature+0x577>
   142d7:	lea    rbx,[rsp+0x270]
   142df:	mov    edx,0x401
   142e4:	mov    edi,r12d
   142e7:	mov    rsi,rbx
   142ea:	call   5740 <read@plt>
   142ef:	mov    r8,rax
   142f2:	mov    r9d,eax
   142f5:	test   eax,eax
   142f7:	js     14632 <verify_signature+0x562>
   142fd:	cmp    QWORD PTR [rip+0x11e1b],0xd        # 26120 <opt_mechanism>
   14305:	je     144f5 <verify_signature+0x425>
   1430b:	cmp    r8d,0x400
   14312:	jg     1444a <verify_signature+0x37a>
   14318:	lea    r14,[rsp+0x30]
   1431d:	mov    QWORD PTR [rsp+0x18],r8
   14322:	mov    rdx,r13
   14325:	mov    rdi,rbp
   14328:	mov    rax,QWORD PTR [rip+0x11b61]        # 25e90 <p11>
   1432f:	mov    DWORD PTR [rsp+0x14],r9d
   14334:	mov    rsi,r14
   14337:	call   QWORD PTR [rax+0x188]
   1433d:	mov    r9d,DWORD PTR [rsp+0x14]
   14342:	mov    r8,QWORD PTR [rsp+0x18]
   14347:	test   rax,rax
   1434a:	jne    14600 <verify_signature+0x530>
   14350:	mov    rax,QWORD PTR [rip+0x11b39]        # 25e90 <p11>
   14357:	movsxd rdx,r8d
   1435a:	mov    rcx,r15
   1435d:	mov    rsi,rbx
   14360:	movsxd r8,DWORD PTR [rsp+0x8]
   14365:	mov    DWORD PTR [rsp+0x14],r9d
   1436a:	mov    rdi,rbp
   1436d:	call   QWORD PTR [rax+0x190]
   14373:	mov    r8,rax
   14376:	test   rax,rax
   14379:	je     1438c <verify_signature+0x2bc>
   1437b:	cmp    rax,0xc0
   14381:	mov    r9d,DWORD PTR [rsp+0x14]
   14386:	jne    1444f <verify_signature+0x37f>
   1438c:	test   r12d,r12d
   1438f:	jne    1458a <verify_signature+0x4ba>
   14395:	test   r8,r8
   14398:	je     14579 <verify_signature+0x4a9>
   1439e:	cmp    r8,0xc0
   143a5:	je     145a9 <verify_signature+0x4d9>
   143ab:	mov    rdi,r8
   143ae:	call   8e50 <CKR2Str>
   143b3:	lea    rsi,[rip+0x4446]        # 18800 <_IO_stdin_used+0x1800>
   143ba:	mov    edi,0x1
   143bf:	mov    rdx,rax
   143c2:	xor    eax,eax
   143c4:	call   58a0 <__printf_chk@plt>
   143c9:	mov    rax,QWORD PTR [rsp+0x678]
   143d1:	xor    rax,QWORD PTR fs:0x28
   143da:	jne    145fb <verify_signature+0x52b>
   143e0:	add    rsp,0x688
   143e7:	pop    rbx
   143e8:	pop    rbp
   143e9:	pop    r12
   143eb:	pop    r13
   143ed:	pop    r14
   143ef:	pop    r15
   143f1:	ret    
   143f2:	call   a3c0 <p11_mechanism_to_name.part.0>
   143f7:	mov    rcx,rax
   143fa:	jmp    14146 <verify_signature+0x76>
   143ff:	cmp    DWORD PTR [rip+0x11aa6],0x0        # 25eac <opt_salt_len_given>
   14406:	je     1419b <verify_signature+0xcb>
   1440c:	cmp    QWORD PTR [rip+0x11a9c],0xfffffffffffffffe        # 25eb0 <opt_salt_len>
   14414:	jne    1419b <verify_signature+0xcb>
   1441a:	mov    eax,0x1
   1441f:	mov    edx,0x65
   14424:	mov    rcx,QWORD PTR [rip+0x111b5]        # 255e0 <stderr@@GLIBC_2.2.5>
   1442b:	mov    esi,0x1
   14430:	shl    rax,0x3f
   14434:	lea    rdi,[rip+0x811d]        # 1c558 <_IO_stdin_used+0x5558>
   1443b:	mov    QWORD PTR [rsp+0x60],rax
   14440:	call   59a0 <fwrite@plt>
   14445:	jmp    1419b <verify_signature+0xcb>
   1444a:	lea    r14,[rsp+0x30]
   1444f:	mov    rax,QWORD PTR [rip+0x11a3a]        # 25e90 <p11>
   14456:	mov    rdx,r13
   14459:	mov    rsi,r14
   1445c:	mov    rdi,rbp
   1445f:	mov    DWORD PTR [rsp+0x14],r9d
   14464:	call   QWORD PTR [rax+0x188]
   1446a:	mov    r9d,DWORD PTR [rsp+0x14]
   1446f:	test   rax,rax
   14472:	jne    14600 <verify_signature+0x530>
   14478:	nop    DWORD PTR [rax+rax*1+0x0]
   14480:	mov    rax,QWORD PTR [rip+0x11a09]        # 25e90 <p11>
   14487:	movsxd rdx,r9d
   1448a:	mov    rsi,rbx
   1448d:	mov    rdi,rbp
   14490:	call   QWORD PTR [rax+0x198]
   14496:	test   rax,rax
   14499:	jne    145d0 <verify_signature+0x500>
   1449f:	mov    edx,0x401
   144a4:	mov    rsi,rbx
   144a7:	mov    edi,r12d
   144aa:	call   5740 <read@plt>
   144af:	mov    r9d,eax
   144b2:	test   eax,eax
   144b4:	jg     14480 <verify_signature+0x3b0>
   144b6:	mov    rax,QWORD PTR [rip+0x119d3]        # 25e90 <p11>
   144bd:	movsxd rdx,DWORD PTR [rsp+0x8]
   144c2:	mov    rsi,r15
   144c5:	mov    rdi,rbp
   144c8:	call   QWORD PTR [rax+0x1a0]
   144ce:	mov    r8,rax
   144d1:	test   rax,rax
   144d4:	je     1438c <verify_signature+0x2bc>
   144da:	cmp    rax,0xc0
   144e0:	je     1438c <verify_signature+0x2bc>
   144e6:	mov    rsi,rax
   144e9:	lea    rdi,[rip+0x42dd]        # 187cd <_IO_stdin_used+0x17cd>
   144f0:	call   9140 <p11_fatal>
   144f5:	cdqe   
   144f7:	cmp    rax,r14
   144fa:	je     1430b <verify_signature+0x23b>
   14500:	lea    rax,[rip+0xeed9]        # 233e0 <p11_mechanisms>
   14507:	jmp    14513 <verify_signature+0x443>
   14509:	cmp    QWORD PTR [rax],0xd
   1450d:	je     14533 <verify_signature+0x463>
   1450f:	add    rax,0x20
   14513:	mov    rsi,QWORD PTR [rax+0x8]
   14517:	test   rsi,rsi
   1451a:	jne    14509 <verify_signature+0x439>
   1451c:	mov    edi,0xd
   14521:	mov    QWORD PTR [rsp+0x8],r8
   14526:	call   a3c0 <p11_mechanism_to_name.part.0>
   1452b:	mov    r8,QWORD PTR [rsp+0x8]
   14530:	mov    rsi,rax
   14533:	mov    rcx,r14
   14536:	mov    edx,r8d
   14539:	lea    rdi,[rip+0x7f48]        # 1c488 <_IO_stdin_used+0x5488>
   14540:	xor    eax,eax
   14542:	call   15f90 <util_fatal>
   14547:	mov    rsi,QWORD PTR [rip+0xeb02]        # 23050 <opt_allow_sw>
   1454e:	xor    ecx,ecx
   14550:	xor    edx,edx
   14552:	lea    r8,[rip+0x11bc7]        # 26120 <opt_mechanism>
   14559:	or     rsi,0x2000
   14560:	call   9300 <find_mechanism>
   14565:	test   eax,eax
   14567:	jne    14108 <verify_signature+0x38>
   1456d:	lea    rdi,[rip+0x7fac]        # 1c520 <_IO_stdin_used+0x5520>
   14574:	call   15f90 <util_fatal>
   14579:	lea    rdi,[rip+0x425b]        # 187db <_IO_stdin_used+0x17db>
   14580:	call   5600 <puts@plt>
   14585:	jmp    143c9 <verify_signature+0x2f9>
   1458a:	mov    edi,r12d
   1458d:	mov    QWORD PTR [rsp+0x8],r8
   14592:	call   5700 <close@plt>
   14597:	mov    r8,QWORD PTR [rsp+0x8]
   1459c:	jmp    14395 <verify_signature+0x2c5>
   145a1:	xor    r12d,r12d
   145a4:	jmp    142d7 <verify_signature+0x207>
   145a9:	lea    rdi,[rip+0x423e]        # 187ee <_IO_stdin_used+0x17ee>
   145b0:	call   5600 <puts@plt>
   145b5:	jmp    143c9 <verify_signature+0x2f9>
   145ba:	lea    rax,[r12-0x3]
   145bf:	cmp    rax,0xff
   145c5:	ja     145ed <verify_signature+0x51d>
   145c7:	sub    r12,0x4
   145cb:	jmp    1426e <verify_signature+0x19e>
   145d0:	mov    rsi,rax
   145d3:	lea    rdi,[rip+0x41e4]        # 187be <_IO_stdin_used+0x17be>
   145da:	call   9140 <p11_fatal>
   145df:	lea    rdi,[rip+0x8012]        # 1c5f8 <_IO_stdin_used+0x55f8>
   145e6:	xor    eax,eax
   145e8:	call   15f90 <util_fatal>
   145ed:	lea    rdi,[rip+0x41b8]        # 187ac <_IO_stdin_used+0x17ac>
   145f4:	xor    eax,eax
   145f6:	call   15f90 <util_fatal>
   145fb:	call   5690 <__stack_chk_fail@plt>
   14600:	mov    rsi,rax
   14603:	lea    rdi,[rip+0x40af]        # 186b9 <_IO_stdin_used+0x16b9>
   1460a:	call   9140 <p11_fatal>
   1460f:	lea    rdi,[rip+0x7faa]        # 1c5c0 <_IO_stdin_used+0x55c0>
   14616:	xor    eax,eax
   14618:	call   15f90 <util_fatal>
   1461d:	mov    rsi,QWORD PTR [rip+0x11b44]        # 26168 <opt_signature_file>
   14624:	lea    rdi,[rip+0x3739]        # 17d64 <_IO_stdin_used+0xd64>
   1462b:	xor    eax,eax
   1462d:	call   15f90 <util_fatal>
   14632:	mov    rsi,QWORD PTR [rip+0x11b3f]        # 26178 <opt_input>
   14639:	lea    rdi,[rip+0x3724]        # 17d64 <_IO_stdin_used+0xd64>
   14640:	xor    eax,eax
   14642:	call   15f90 <util_fatal>
   14647:	mov    rsi,QWORD PTR [rip+0x11b2a]        # 26178 <opt_input>
   1464e:	lea    rdi,[rip+0x36e6]        # 17d3b <_IO_stdin_used+0xd3b>
   14655:	xor    eax,eax
   14657:	call   15f90 <util_fatal>
   1465c:	mov    rsi,QWORD PTR [rip+0x11b05]        # 26168 <opt_signature_file>
   14663:	lea    rdi,[rip+0x36d1]        # 17d3b <_IO_stdin_used+0xd3b>
   1466a:	xor    eax,eax
   1466c:	call   15f90 <util_fatal>
   14671:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1467c:	nop    DWORD PTR [rax+0x0]

0000000000014680 <gen_key.constprop.0>:
   14680:	push   r15
   14682:	mov    r15,rdi
   14685:	push   r14
   14687:	push   r13
   14689:	push   r12
   1468b:	mov    r12,rsi
   1468e:	push   rbp
   1468f:	mov    rbp,rcx
   14692:	mov    ecx,0x3c
   14697:	push   rbx
   14698:	mov    rbx,rdx
   1469b:	sub    rsp,0x258
   146a2:	mov    rax,QWORD PTR fs:0x28
   146ab:	mov    QWORD PTR [rsp+0x248],rax
   146b3:	xor    eax,eax
   146b5:	lea    r13,[rsp+0x60]
   146ba:	lea    r14,[rsp+0x6]
   146bf:	mov    QWORD PTR [rsp+0x20],0x1080
   146c8:	mov    rdi,r13
   146cb:	mov    BYTE PTR [rsp+0x6],0x1
   146d0:	mov    QWORD PTR [rsp+0x28],0x0
   146d9:	mov    QWORD PTR [rsp+0x30],0x0
   146e2:	mov    QWORD PTR [rsp+0x8],0x4
   146eb:	mov    BYTE PTR [rsp+0x7],0x0
   146f0:	rep stos QWORD PTR es:[rdi],rax
   146f3:	lea    rax,[rsp+0x8]
   146f8:	mov    QWORD PTR [rsp+0x10],0x1f
   14701:	mov    QWORD PTR [rsp+0x68],rax
   14706:	mov    QWORD PTR [rsp+0x70],0x8
   1470f:	mov    QWORD PTR [rsp+0x78],0x1
   14718:	mov    QWORD PTR [rsp+0x80],r14
   14720:	mov    QWORD PTR [rsp+0x88],0x1
   1472c:	test   rbp,rbp
   1472f:	je     14af5 <gen_key.constprop.0+0x475>
   14735:	mov    edx,0x4
   1473a:	lea    rsi,[rip+0x3c7d]        # 183be <_IO_stdin_used+0x13be>
   14741:	mov    rdi,rbp
   14744:	call   5850 <strncasecmp@plt>
   14749:	test   eax,eax
   1474b:	jne    14a1e <gen_key.constprop.0+0x39e>
   14751:	mov    QWORD PTR [rsp+0x40],0x1080
   1475a:	add    rbp,0x4
   1475e:	cmp    DWORD PTR [rip+0x119b3],0x0        # 26118 <opt_mechanism_used>
   14765:	je     14aff <gen_key.constprop.0+0x47f>
   1476b:	mov    edx,0xa
   14770:	xor    esi,esi
   14772:	mov    rdi,rbp
   14775:	call   57c0 <strtol@plt>
   1477a:	mov    edx,0x20
   1477f:	test   rax,rax
   14782:	cmove  rax,rdx
   14786:	mov    esi,DWORD PTR [rip+0x1175c]        # 25ee8 <opt_is_sensitive>
   1478c:	mov    QWORD PTR [rsp+0x90],0x100
   14798:	mov    QWORD PTR [rsp+0xa0],0x8
   147a4:	mov    QWORD PTR [rsp+0x18],rax
   147a9:	test   esi,esi
   147ab:	lea    rax,[rsp+0x10]
   147b0:	mov    QWORD PTR [rsp+0x98],rax
   147b8:	mov    QWORD PTR [rsp+0xa8],0x103
   147c4:	je     14ad7 <gen_key.constprop.0+0x457>
   147ca:	mov    QWORD PTR [rsp+0xb0],r14
   147d2:	mov    QWORD PTR [rsp+0xb8],0x1
   147de:	mov    ecx,DWORD PTR [rip+0x11700]        # 25ee4 <opt_is_extractable>
   147e4:	mov    QWORD PTR [rsp+0xc0],0x162
   147f0:	test   ecx,ecx
   147f2:	je     14ab9 <gen_key.constprop.0+0x439>
   147f8:	mov    QWORD PTR [rsp+0xc8],r14
   14800:	mov    QWORD PTR [rsp+0xd0],0x1
   1480c:	mov    edx,DWORD PTR [rip+0x116da]        # 25eec <opt_is_private>
   14812:	mov    QWORD PTR [rsp+0xd8],0x2
   1481e:	test   edx,edx
   14820:	je     14a9b <gen_key.constprop.0+0x41b>
   14826:	mov    QWORD PTR [rsp+0xe0],r14
   1482e:	mov    QWORD PTR [rsp+0xe8],0x1
   1483a:	mov    eax,DWORD PTR [rip+0xe818]        # 23058 <opt_key_usage_default>
   14840:	or     eax,DWORD PTR [rip+0x11692]        # 25ed8 <opt_key_usage_decrypt>
   14846:	mov    edx,0x6
   1484b:	je     14892 <gen_key.constprop.0+0x212>
   1484d:	mov    QWORD PTR [rsp+0xf8],r14
   14855:	mov    edx,0x8
   1485a:	mov    QWORD PTR [rsp+0xf0],0x104
   14866:	mov    QWORD PTR [rsp+0x100],0x1
   14872:	mov    QWORD PTR [rsp+0x108],0x105
   1487e:	mov    QWORD PTR [rsp+0x110],r14
   14886:	mov    QWORD PTR [rsp+0x118],0x1
   14892:	mov    eax,DWORD PTR [rip+0x11638]        # 25ed0 <opt_key_usage_wrap>
   14898:	test   eax,eax
   1489a:	je     148dd <gen_key.constprop.0+0x25d>
   1489c:	lea    eax,[rdx+0x1]
   1489f:	movsxd rcx,edx
   148a2:	add    edx,0x2
   148a5:	cdqe   
   148a7:	imul   rcx,rcx,0x18
   148ab:	imul   rax,rax,0x18
   148af:	mov    QWORD PTR [rsp+rcx*1+0x60],0x106
   148b8:	mov    QWORD PTR [rsp+rcx*1+0x68],r14
   148bd:	mov    QWORD PTR [rsp+rcx*1+0x70],0x1
   148c6:	mov    QWORD PTR [rsp+rax*1+0x60],0x107
   148cf:	mov    QWORD PTR [rsp+rax*1+0x68],r14
   148d4:	mov    QWORD PTR [rsp+rax*1+0x70],0x1
   148dd:	movsxd rax,edx
   148e0:	lea    rcx,[rsp+0x18]
   148e5:	add    edx,0x1
   148e8:	lea    rax,[rax+rax*2]
   148ec:	shl    rax,0x3
   148f0:	mov    QWORD PTR [rsp+rax*1+0x60],0x161
   148f9:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   148fe:	mov    QWORD PTR [rsp+rax*1+0x70],0x8
   14907:	mov    rax,QWORD PTR [rip+0x11812]        # 26120 <opt_mechanism>
   1490e:	mov    QWORD PTR [rsp+0x20],rax
   14913:	mov    rdi,QWORD PTR [rip+0x116d6]        # 25ff0 <opt_object_label>
   1491a:	test   rdi,rdi
   1491d:	je     1494e <gen_key.constprop.0+0x2ce>
   1491f:	movsxd rsi,edx
   14922:	xor    eax,eax
   14924:	or     rcx,0xffffffffffffffff
   14928:	add    edx,0x1
   1492b:	imul   rsi,rsi,0x18
   1492f:	mov    QWORD PTR [rsp+rsi*1+0x68],rdi
   14934:	mov    QWORD PTR [rsp+rsi*1+0x60],0x3
   1493d:	repnz scas al,BYTE PTR es:[rdi]
   1493f:	mov    rdi,rcx
   14942:	not    rdi
   14945:	lea    rax,[rdi-0x1]
   14949:	mov    QWORD PTR [rsp+rsi*1+0x70],rax
   1494e:	mov    rcx,QWORD PTR [rip+0x116ab]        # 26000 <opt_object_id_len>
   14955:	test   rcx,rcx
   14958:	je     1497e <gen_key.constprop.0+0x2fe>
   1495a:	movsxd rax,edx
   1495d:	lea    rsi,[rip+0x1173c]        # 260a0 <opt_object_id>
   14964:	add    edx,0x1
   14967:	imul   rax,rax,0x18
   1496b:	mov    QWORD PTR [rsp+rax*1+0x60],0x102
   14974:	mov    QWORD PTR [rsp+rax*1+0x68],rsi
   14979:	mov    QWORD PTR [rsp+rax*1+0x70],rcx
   1497e:	mov    rax,QWORD PTR [rip+0x1156b]        # 25ef0 <opt_allowed_mechanisms_len>
   14985:	test   rax,rax
   14988:	je     149b2 <gen_key.constprop.0+0x332>
   1498a:	movsxd rcx,edx
   1498d:	lea    rsi,[rip+0x1156c]        # 25f00 <opt_allowed_mechanisms>
   14994:	shl    rax,0x3
   14998:	add    edx,0x1
   1499b:	imul   rcx,rcx,0x18
   1499f:	mov    QWORD PTR [rsp+rcx*1+0x60],0x40000600
   149a8:	mov    QWORD PTR [rsp+rcx*1+0x68],rsi
   149ad:	mov    QWORD PTR [rsp+rcx*1+0x70],rax
   149b2:	mov    rax,QWORD PTR [rip+0x114d7]        # 25e90 <p11>
   149b9:	movsxd rcx,edx
   149bc:	mov    r8,rbx
   149bf:	mov    rdx,r13
   149c2:	lea    rsi,[rsp+0x20]
   149c7:	mov    rdi,r12
   149ca:	call   QWORD PTR [rax+0x1d8]
   149d0:	test   rax,rax
   149d3:	jne    14bef <gen_key.constprop.0+0x56f>
   149d9:	lea    rdi,[rip+0x3e64]        # 18844 <_IO_stdin_used+0x1844>
   149e0:	call   5600 <puts@plt>
   149e5:	mov    rsi,QWORD PTR [rbx]
   149e8:	mov    rdi,r12
   149eb:	call   e9f0 <show_object>
   149f0:	mov    rax,QWORD PTR [rsp+0x248]
   149f8:	xor    rax,QWORD PTR fs:0x28
   14a01:	jne    14bfe <gen_key.constprop.0+0x57e>
   14a07:	add    rsp,0x258
   14a0e:	mov    eax,0x1
   14a13:	pop    rbx
   14a14:	pop    rbp
   14a15:	pop    r12
   14a17:	pop    r13
   14a19:	pop    r14
   14a1b:	pop    r15
   14a1d:	ret    
   14a1e:	mov    edx,0x4
   14a23:	lea    rsi,[rip+0x3df3]        # 1881d <_IO_stdin_used+0x181d>
   14a2a:	mov    rdi,rbp
   14a2d:	call   5850 <strncasecmp@plt>
   14a32:	test   eax,eax
   14a34:	jne    14b27 <gen_key.constprop.0+0x4a7>
   14a3a:	mov    QWORD PTR [rsp+0x48],0x120
   14a43:	add    rbp,0x4
   14a47:	cmp    DWORD PTR [rip+0x116ca],0x0        # 26118 <opt_mechanism_used>
   14a4e:	mov    QWORD PTR [rsp+0x10],0x13
   14a57:	jne    14a7f <gen_key.constprop.0+0x3ff>
   14a59:	lea    rdx,[rsp+0x48]
   14a5e:	lea    r8,[rip+0x116bb]        # 26120 <opt_mechanism>
   14a65:	mov    ecx,0x1
   14a6a:	mov    rdi,r15
   14a6d:	mov    esi,0x8000
   14a72:	call   9300 <find_mechanism>
   14a77:	test   eax,eax
   14a79:	je     14b80 <gen_key.constprop.0+0x500>
   14a7f:	mov    edx,0xa
   14a84:	xor    esi,esi
   14a86:	mov    rdi,rbp
   14a89:	call   57c0 <strtol@plt>
   14a8e:	mov    edx,0x8
   14a93:	test   rax,rax
   14a96:	jmp    14782 <gen_key.constprop.0+0x102>
   14a9b:	lea    rax,[rsp+0x7]
   14aa0:	mov    QWORD PTR [rsp+0xe8],0x1
   14aac:	mov    QWORD PTR [rsp+0xe0],rax
   14ab4:	jmp    1483a <gen_key.constprop.0+0x1ba>
   14ab9:	lea    rax,[rsp+0x7]
   14abe:	mov    QWORD PTR [rsp+0xd0],0x1
   14aca:	mov    QWORD PTR [rsp+0xc8],rax
   14ad2:	jmp    1480c <gen_key.constprop.0+0x18c>
   14ad7:	lea    rax,[rsp+0x7]
   14adc:	mov    QWORD PTR [rsp+0xb8],0x1
   14ae8:	mov    QWORD PTR [rsp+0xb0],rax
   14af0:	jmp    147de <gen_key.constprop.0+0x15e>
   14af5:	mov    edx,0x2
   14afa:	jmp    14913 <gen_key.constprop.0+0x293>
   14aff:	lea    rdx,[rsp+0x40]
   14b04:	lea    r8,[rip+0x11615]        # 26120 <opt_mechanism>
   14b0b:	mov    ecx,0x1
   14b10:	mov    esi,0x8000
   14b15:	mov    rdi,r15
   14b18:	call   9300 <find_mechanism>
   14b1d:	test   eax,eax
   14b1f:	jne    1476b <gen_key.constprop.0+0xeb>
   14b25:	jmp    14b80 <gen_key.constprop.0+0x500>
   14b27:	mov    edx,0x5
   14b2c:	lea    rsi,[rip+0x3aea]        # 1861d <_IO_stdin_used+0x161d>
   14b33:	mov    rdi,rbp
   14b36:	call   5850 <strncasecmp@plt>
   14b3b:	test   eax,eax
   14b3d:	jne    14baa <gen_key.constprop.0+0x52a>
   14b3f:	mov    QWORD PTR [rsp+0x50],0x131
   14b48:	add    rbp,0x5
   14b4c:	cmp    DWORD PTR [rip+0x115c5],0x0        # 26118 <opt_mechanism_used>
   14b53:	mov    QWORD PTR [rsp+0x10],0x15
   14b5c:	jne    14b8e <gen_key.constprop.0+0x50e>
   14b5e:	lea    rdx,[rsp+0x50]
   14b63:	lea    r8,[rip+0x115b6]        # 26120 <opt_mechanism>
   14b6a:	mov    ecx,0x1
   14b6f:	mov    rdi,r15
   14b72:	mov    esi,0x8000
   14b77:	call   9300 <find_mechanism>
   14b7c:	test   eax,eax
   14b7e:	jne    14b8e <gen_key.constprop.0+0x50e>
   14b80:	lea    rdi,[rip+0x7a99]        # 1c620 <_IO_stdin_used+0x5620>
   14b87:	xor    eax,eax
   14b89:	call   15f90 <util_fatal>
   14b8e:	mov    edx,0xa
   14b93:	xor    esi,esi
   14b95:	mov    rdi,rbp
   14b98:	call   57c0 <strtol@plt>
   14b9d:	mov    edx,0x10
   14ba2:	test   rax,rax
   14ba5:	jmp    14782 <gen_key.constprop.0+0x102>
   14baa:	mov    edx,0x8
   14baf:	lea    rsi,[rip+0x380d]        # 183c3 <_IO_stdin_used+0x13c3>
   14bb6:	mov    rdi,rbp
   14bb9:	call   5850 <strncasecmp@plt>
   14bbe:	test   eax,eax
   14bc0:	jne    14c03 <gen_key.constprop.0+0x583>
   14bc2:	add    rbp,0x8
   14bc6:	cmp    DWORD PTR [rip+0x1154b],0x0        # 26118 <opt_mechanism_used>
   14bcd:	lea    rdx,[rsp+0x58]
   14bd2:	mov    QWORD PTR [rsp+0x58],0x350
   14bdb:	mov    QWORD PTR [rsp+0x10],0x10
   14be4:	je     14b04 <gen_key.constprop.0+0x484>
   14bea:	jmp    1476b <gen_key.constprop.0+0xeb>
   14bef:	mov    rsi,rax
   14bf2:	lea    rdi,[rip+0x3c3d]        # 18836 <_IO_stdin_used+0x1836>
   14bf9:	call   9140 <p11_fatal>
   14bfe:	call   5690 <__stack_chk_fail@plt>
   14c03:	mov    rsi,rbp
   14c06:	lea    rdi,[rip+0x3c15]        # 18822 <_IO_stdin_used+0x1822>
   14c0d:	xor    eax,eax
   14c0f:	call   15f90 <util_fatal>
   14c14:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   14c1f:	nop

0000000000014c20 <list_slots.constprop.0>:
   14c20:	push   r15
   14c22:	lea    rdx,[rip+0x11257]        # 25e80 <p11_num_slots>
   14c29:	push   r14
   14c2b:	push   r13
   14c2d:	push   r12
   14c2f:	push   rbp
   14c30:	mov    ebp,edi
   14c32:	push   rbx
   14c33:	mov    ebx,esi
   14c35:	xor    esi,esi
   14c37:	sub    rsp,0x98
   14c3e:	mov    rax,QWORD PTR fs:0x28
   14c47:	mov    QWORD PTR [rsp+0x88],rax
   14c4f:	xor    eax,eax
   14c51:	mov    rax,QWORD PTR [rip+0x11238]        # 25e90 <p11>
   14c58:	call   QWORD PTR [rax+0x28]
   14c5b:	mov    r14,rax
   14c5e:	test   rax,rax
   14c61:	jne    14f51 <list_slots.constprop.0+0x331>
   14c67:	mov    rdi,QWORD PTR [rip+0x1121a]        # 25e88 <p11_slots>
   14c6e:	call   5590 <free@plt>
   14c73:	mov    rdi,QWORD PTR [rip+0x11206]        # 25e80 <p11_num_slots>
   14c7a:	mov    QWORD PTR [rip+0x11203],0x0        # 25e88 <p11_slots>
   14c85:	test   rdi,rdi
   14c88:	jne    14ef7 <list_slots.constprop.0+0x2d7>
   14c8e:	test   ebx,ebx
   14c90:	jne    14cc0 <list_slots.constprop.0+0xa0>
   14c92:	mov    rax,QWORD PTR [rsp+0x88]
   14c9a:	xor    rax,QWORD PTR fs:0x28
   14ca3:	jne    14f60 <list_slots.constprop.0+0x340>
   14ca9:	add    rsp,0x98
   14cb0:	pop    rbx
   14cb1:	pop    rbp
   14cb2:	pop    r12
   14cb4:	pop    r13
   14cb6:	pop    r14
   14cb8:	pop    r15
   14cba:	ret    
   14cbb:	nop    DWORD PTR [rax+rax*1+0x0]
   14cc0:	lea    rdi,[rip+0x3bbe]        # 18885 <_IO_stdin_used+0x1885>
   14cc7:	call   5600 <puts@plt>
   14ccc:	cmp    QWORD PTR [rip+0x111ac],0x0        # 25e80 <p11_num_slots>
   14cd4:	je     14c92 <list_slots.constprop.0+0x72>
   14cd6:	lea    r12,[rip+0x109e3]        # 256c0 <buffer.11770>
   14cdd:	lea    rbx,[rsp+0x10]
   14ce2:	lea    r13,[rsp+0x50]
   14ce7:	lea    r15,[r12-0x1]
   14cec:	lea    rbp,[rsp+0x4f]
   14cf1:	nop    DWORD PTR [rax+0x0]
   14cf8:	lea    rax,[r14*8+0x0]
   14d00:	mov    rdx,r14
   14d03:	mov    edi,0x1
   14d08:	mov    QWORD PTR [rsp],rax
   14d0c:	mov    rax,QWORD PTR [rip+0x11175]        # 25e88 <p11_slots>
   14d13:	lea    rsi,[rip+0x3b7c]        # 18896 <_IO_stdin_used+0x1896>
   14d1a:	mov    rcx,QWORD PTR [rax+r14*8]
   14d1e:	xor    eax,eax
   14d20:	call   58a0 <__printf_chk@plt>
   14d25:	mov    rax,QWORD PTR [rip+0x1115c]        # 25e88 <p11_slots>
   14d2c:	mov    rsi,rbx
   14d2f:	mov    rdi,QWORD PTR [rax+r14*8]
   14d33:	mov    rax,QWORD PTR [rip+0x11156]        # 25e90 <p11>
   14d3a:	call   QWORD PTR [rax+0x30]
   14d3d:	mov    r9,rax
   14d40:	mov    eax,0x40
   14d45:	test   r9,r9
   14d48:	jne    14dc8 <list_slots.constprop.0+0x1a8>
   14d4a:	nop    WORD PTR [rax+rax*1+0x0]
   14d50:	mov    rdx,rax
   14d53:	lea    rax,[rax-0x1]
   14d57:	cmp    BYTE PTR [rbx+rdx*1-0x1],0x20
   14d5c:	jne    14ec8 <list_slots.constprop.0+0x2a8>
   14d62:	test   rax,rax
   14d65:	jne    14d50 <list_slots.constprop.0+0x130>
   14d67:	lea    rdi,[rip+0x10952]        # 256c0 <buffer.11770>
   14d6e:	mov    QWORD PTR [rsp+0x8],r9
   14d73:	mov    BYTE PTR [r12+rax*1],0x0
   14d78:	call   5600 <puts@plt>
   14d7d:	mov    eax,DWORD PTR [rip+0x113fd]        # 26180 <verbose>
   14d83:	mov    r9,QWORD PTR [rsp+0x8]
   14d88:	test   eax,eax
   14d8a:	jne    14df0 <list_slots.constprop.0+0x1d0>
   14d8c:	test   BYTE PTR [rsp+0x70],0x1
   14d91:	je     14ee6 <list_slots.constprop.0+0x2c6>
   14d97:	mov    rax,QWORD PTR [rip+0x110ea]        # 25e88 <p11_slots>
   14d9e:	mov    rdi,QWORD PTR [rsp]
   14da2:	mov    rdi,QWORD PTR [rax+rdi*1]
   14da6:	call   94f0 <show_token>
   14dab:	add    r14,0x1
   14daf:	cmp    r14,QWORD PTR [rip+0x110ca]        # 25e80 <p11_num_slots>
   14db6:	jb     14cf8 <list_slots.constprop.0+0xd8>
   14dbc:	jmp    14c92 <list_slots.constprop.0+0x72>
   14dc1:	nop    DWORD PTR [rax+0x0]
   14dc8:	mov    rdi,r9
   14dcb:	call   8e50 <CKR2Str>
   14dd0:	lea    rsi,[rip+0x3ad2]        # 188a9 <_IO_stdin_used+0x18a9>
   14dd7:	mov    edi,0x1
   14ddc:	mov    rdx,rax
   14ddf:	xor    eax,eax
   14de1:	call   58a0 <__printf_chk@plt>
   14de6:	jmp    14dab <list_slots.constprop.0+0x18b>
   14de8:	nop    DWORD PTR [rax+rax*1+0x0]
   14df0:	mov    eax,0x20
   14df5:	mov    rdx,rax
   14df8:	sub    rax,0x1
   14dfc:	cmp    BYTE PTR [r13+rax*1+0x0],0x20
   14e02:	jne    14ea0 <list_slots.constprop.0+0x280>
   14e08:	test   rax,rax
   14e0b:	jne    14df5 <list_slots.constprop.0+0x1d5>
   14e0d:	mov    BYTE PTR [r12+rax*1],0x0
   14e12:	mov    rdx,r12
   14e15:	mov    edi,0x1
   14e1a:	xor    eax,eax
   14e1c:	lea    rsi,[rip+0x3aaa]        # 188cd <_IO_stdin_used+0x18cd>
   14e23:	call   58a0 <__printf_chk@plt>
   14e28:	movzx  ecx,BYTE PTR [rsp+0x79]
   14e2d:	movzx  edx,BYTE PTR [rsp+0x78]
   14e32:	xor    eax,eax
   14e34:	lea    rsi,[rip+0x3aa7]        # 188e2 <_IO_stdin_used+0x18e2>
   14e3b:	mov    edi,0x1
   14e40:	call   58a0 <__printf_chk@plt>
   14e45:	movzx  edx,BYTE PTR [rsp+0x7a]
   14e4a:	movzx  ecx,BYTE PTR [rsp+0x7b]
   14e4f:	xor    eax,eax
   14e51:	lea    rsi,[rip+0x3aa2]        # 188fa <_IO_stdin_used+0x18fa>
   14e58:	mov    edi,0x1
   14e5d:	call   58a0 <__printf_chk@plt>
   14e62:	mov    rsi,QWORD PTR [rsp+0x70]
   14e67:	lea    rdi,[rip+0xe212]        # 23080 <slot_flags.11761>
   14e6e:	call   93e0 <p11_flag_names>
   14e73:	lea    rsi,[rip+0x3a98]        # 18912 <_IO_stdin_used+0x1912>
   14e7a:	mov    edi,0x1
   14e7f:	mov    rdx,rax
   14e82:	xor    eax,eax
   14e84:	call   58a0 <__printf_chk@plt>
   14e89:	test   BYTE PTR [rsp+0x70],0x1
   14e8e:	je     14dab <list_slots.constprop.0+0x18b>
   14e94:	jmp    14d97 <list_slots.constprop.0+0x177>
   14e99:	nop    DWORD PTR [rax+0x0]
   14ea0:	add    r9,0x1
   14ea4:	movzx  eax,BYTE PTR [rbp+r9*1+0x0]
   14eaa:	mov    BYTE PTR [r15+r9*1],al
   14eae:	cmp    r9,rdx
   14eb1:	jb     14ea0 <list_slots.constprop.0+0x280>
   14eb3:	test   rdx,rdx
   14eb6:	mov    eax,0x1
   14ebb:	cmovne rax,rdx
   14ebf:	jmp    14e0d <list_slots.constprop.0+0x1ed>
   14ec4:	nop    DWORD PTR [rax+0x0]
   14ec8:	xor    eax,eax
   14eca:	lea    rsi,[rsp+0xf]
   14ecf:	nop
   14ed0:	add    rax,0x1
   14ed4:	movzx  ecx,BYTE PTR [rsi+rax*1]
   14ed8:	mov    BYTE PTR [r15+rax*1],cl
   14edc:	cmp    rax,rdx
   14edf:	jne    14ed0 <list_slots.constprop.0+0x2b0>
   14ee1:	jmp    14d67 <list_slots.constprop.0+0x147>
   14ee6:	lea    rdi,[rip+0x39d6]        # 188c3 <_IO_stdin_used+0x18c3>
   14eed:	call   5600 <puts@plt>
   14ef2:	jmp    14dab <list_slots.constprop.0+0x18b>
   14ef7:	mov    esi,0x8
   14efc:	call   5790 <calloc@plt>
   14f01:	mov    QWORD PTR [rip+0x10f80],rax        # 25e88 <p11_slots>
   14f08:	mov    rsi,rax
   14f0b:	test   rax,rax
   14f0e:	je     14f3b <list_slots.constprop.0+0x31b>
   14f10:	mov    rax,QWORD PTR [rip+0x10f79]        # 25e90 <p11>
   14f17:	lea    rdx,[rip+0x10f62]        # 25e80 <p11_num_slots>
   14f1e:	mov    edi,ebp
   14f20:	call   QWORD PTR [rax+0x28]
   14f23:	test   rax,rax
   14f26:	je     14c8e <list_slots.constprop.0+0x6e>
   14f2c:	mov    rsi,rax
   14f2f:	lea    rdi,[rip+0x393f]        # 18875 <_IO_stdin_used+0x1875>
   14f36:	call   9140 <p11_fatal>
   14f3b:	lea    rdi,[rip+0x3925]        # 18867 <_IO_stdin_used+0x1867>
   14f42:	call   5910 <perror@plt>
   14f47:	mov    edi,0x1
   14f4c:	call   5990 <exit@plt>
   14f51:	mov    rsi,rax
   14f54:	lea    rdi,[rip+0x38f8]        # 18853 <_IO_stdin_used+0x1853>
   14f5b:	call   9140 <p11_fatal>
   14f60:	call   5690 <__stack_chk_fail@plt>
   14f65:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000014f70 <test_card_detection>:
   14f70:	push   r13
   14f72:	lea    rdx,[rip+0x39ae]        # 18927 <_IO_stdin_used+0x1927>
   14f79:	lea    rsi,[rip+0x76c8]        # 1c648 <_IO_stdin_used+0x5648>
   14f80:	push   r12
   14f82:	push   rbp
   14f83:	push   rbx
   14f84:	mov    ebx,edi
   14f86:	sub    rsp,0x128
   14f8d:	mov    rax,QWORD PTR fs:0x28
   14f96:	mov    QWORD PTR [rsp+0x118],rax
   14f9e:	xor    eax,eax
   14fa0:	test   edi,edi
   14fa2:	lea    rax,[rip+0x38cc]        # 18875 <_IO_stdin_used+0x1875>
   14fa9:	mov    edi,0x1
   14fae:	cmove  rdx,rax
   14fb2:	lea    r12,[rsp+0x10]
   14fb7:	lea    r13,[rsp+0x8]
   14fbc:	xor    eax,eax
   14fbe:	call   58a0 <__printf_chk@plt>
   14fc3:	jmp    1503a <test_card_detection+0xca>
   14fc5:	nop    DWORD PTR [rax]
   14fc8:	cmp    BYTE PTR [rsp+0x10],0x78
   14fcd:	je     15076 <test_card_detection+0x106>
   14fd3:	test   ebx,ebx
   14fd5:	je     1502e <test_card_detection+0xbe>
   14fd7:	lea    rsi,[rip+0x395e]        # 1893c <_IO_stdin_used+0x193c>
   14fde:	mov    edi,0x1
   14fe3:	xor    eax,eax
   14fe5:	call   58a0 <__printf_chk@plt>
   14fea:	mov    rdi,QWORD PTR [rip+0x105af]        # 255a0 <stdout@@GLIBC_2.2.5>
   14ff1:	call   5860 <fflush@plt>
   14ff6:	mov    rax,QWORD PTR [rip+0x10e93]        # 25e90 <p11>
   14ffd:	xor    edx,edx
   14fff:	xor    edi,edi
   15001:	mov    rsi,r13
   15004:	call   QWORD PTR [rax+0x220]
   1500a:	mov    rbp,rax
   1500d:	test   rax,rax
   15010:	jne    15099 <test_card_detection+0x129>
   15016:	mov    rdx,QWORD PTR [rsp+0x8]
   1501b:	lea    rsi,[rip+0x3952]        # 18974 <_IO_stdin_used+0x1974>
   15022:	mov    edi,0x1
   15027:	xor    eax,eax
   15029:	call   58a0 <__printf_chk@plt>
   1502e:	mov    esi,0x1
   15033:	xor    edi,edi
   15035:	call   14c20 <list_slots.constprop.0>
   1503a:	lea    rsi,[rip+0x762f]        # 1c670 <_IO_stdin_used+0x5670>
   15041:	mov    edi,0x1
   15046:	xor    eax,eax
   15048:	call   58a0 <__printf_chk@plt>
   1504d:	mov    rdi,QWORD PTR [rip+0x1054c]        # 255a0 <stdout@@GLIBC_2.2.5>
   15054:	call   5860 <fflush@plt>
   15059:	mov    rdx,QWORD PTR [rip+0x10550]        # 255b0 <stdin@@GLIBC_2.2.5>
   15060:	mov    esi,0x100
   15065:	mov    rdi,r12
   15068:	call   5770 <fgets@plt>
   1506d:	test   rax,rax
   15070:	jne    14fc8 <test_card_detection+0x58>
   15076:	xor    eax,eax
   15078:	mov    rcx,QWORD PTR [rsp+0x118]
   15080:	xor    rcx,QWORD PTR fs:0x28
   15089:	jne    150b8 <test_card_detection+0x148>
   1508b:	add    rsp,0x128
   15092:	pop    rbx
   15093:	pop    rbp
   15094:	pop    r12
   15096:	pop    r13
   15098:	ret    
   15099:	lea    rdi,[rip+0x38b9]        # 18959 <_IO_stdin_used+0x1959>
   150a0:	call   5600 <puts@plt>
   150a5:	mov    rsi,rbp
   150a8:	lea    rdi,[rip+0x38b2]        # 18961 <_IO_stdin_used+0x1961>
   150af:	call   9bb0 <p11_perror>
   150b4:	mov    eax,ebx
   150b6:	jmp    15078 <test_card_detection+0x108>
   150b8:	call   5690 <__stack_chk_fail@plt>
   150bd:	nop    DWORD PTR [rax]

00000000000150c0 <is_string_valid_atr>:
   150c0:	endbr64 
   150c4:	sub    rsp,0x48
   150c8:	mov    rax,QWORD PTR fs:0x28
   150d1:	mov    QWORD PTR [rsp+0x38],rax
   150d6:	xor    eax,eax
   150d8:	lea    rdx,[rsp+0x8]
   150dd:	lea    rsi,[rsp+0x10]
   150e2:	mov    QWORD PTR [rsp+0x8],0x21
   150eb:	call   5620 <sc_hex_to_bin@plt>
   150f0:	test   eax,eax
   150f2:	jne    15128 <is_string_valid_atr+0x68>
   150f4:	cmp    QWORD PTR [rsp+0x8],0x1
   150fa:	jbe    1510c <is_string_valid_atr+0x4c>
   150fc:	movzx  eax,BYTE PTR [rsp+0x10]
   15101:	and    eax,0xfffffffb
   15104:	cmp    al,0x3b
   15106:	sete   al
   15109:	movzx  eax,al
   1510c:	mov    rcx,QWORD PTR [rsp+0x38]
   15111:	xor    rcx,QWORD PTR fs:0x28
   1511a:	jne    1512c <is_string_valid_atr+0x6c>
   1511c:	add    rsp,0x48
   15120:	ret    
   15121:	nop    DWORD PTR [rax+0x0]
   15128:	xor    eax,eax
   1512a:	jmp    1510c <is_string_valid_atr+0x4c>
   1512c:	call   5690 <__stack_chk_fail@plt>
   15131:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1513c:	nop    DWORD PTR [rax+0x0]

0000000000015140 <util_connect_reader>:
   15140:	endbr64 
   15144:	push   r15
   15146:	push   r14
   15148:	mov    r14d,ecx
   1514b:	push   r13
   1514d:	mov    r13,rdx
   15150:	push   r12
   15152:	mov    r12,rsi
   15155:	xor    esi,esi
   15157:	push   rbp
   15158:	mov    rbp,rdi
   1515b:	push   rbx
   1515c:	mov    ebx,r8d
   1515f:	sub    rsp,0x48
   15163:	mov    rdi,QWORD PTR [rip+0x10476]        # 255e0 <stderr@@GLIBC_2.2.5>
   1516a:	mov    rax,QWORD PTR fs:0x28
   15173:	mov    QWORD PTR [rsp+0x38],rax
   15178:	xor    eax,eax
   1517a:	mov    QWORD PTR [rsp],0x0
   15182:	call   56b0 <setbuf@plt>
   15187:	mov    rdi,QWORD PTR [rip+0x10412]        # 255a0 <stdout@@GLIBC_2.2.5>
   1518e:	xor    esi,esi
   15190:	call   56b0 <setbuf@plt>
   15195:	call   5a30 <sc_notify_init@plt>
   1519a:	test   ebx,ebx
   1519c:	jne    152c0 <util_connect_reader+0x180>
   151a2:	test   r14d,r14d
   151a5:	je     15200 <util_connect_reader+0xc0>
   151a7:	mov    rdi,rbp
   151aa:	mov    DWORD PTR [rsp+0x8],0x0
   151b2:	call   5660 <sc_ctx_get_reader_count@plt>
   151b7:	test   eax,eax
   151b9:	je     15370 <util_connect_reader+0x230>
   151bf:	test   BYTE PTR [rsp+0x8],0x1
   151c4:	je     15450 <util_connect_reader+0x310>
   151ca:	mov    rax,QWORD PTR [rsp]
   151ce:	mov    QWORD PTR [r12],rax
   151d2:	xor    r13d,r13d
   151d5:	mov    rax,QWORD PTR [rsp+0x38]
   151da:	xor    rax,QWORD PTR fs:0x28
   151e3:	jne    1559c <util_connect_reader+0x45c>
   151e9:	add    rsp,0x48
   151ed:	mov    eax,r13d
   151f0:	pop    rbx
   151f1:	pop    rbp
   151f2:	pop    r12
   151f4:	pop    r13
   151f6:	pop    r14
   151f8:	pop    r15
   151fa:	ret    
   151fb:	nop    DWORD PTR [rax+rax*1+0x0]
   15200:	mov    rdi,rbp
   15203:	call   5660 <sc_ctx_get_reader_count@plt>
   15208:	test   eax,eax
   1520a:	je     15501 <util_connect_reader+0x3c1>
   15210:	test   r13,r13
   15213:	je     152e0 <util_connect_reader+0x1a0>
   15219:	mov    rdi,r13
   1521c:	call   150c0 <is_string_valid_atr>
   15221:	test   eax,eax
   15223:	je     153f8 <util_connect_reader+0x2b8>
   15229:	lea    r15,[rsp+0x10]
   1522e:	lea    rdx,[rsp+0x8]
   15233:	mov    rdi,r13
   15236:	xor    ebx,ebx
   15238:	mov    QWORD PTR [rsp+0x8],0x21
   15241:	mov    rsi,r15
   15244:	call   5620 <sc_hex_to_bin@plt>
   15249:	jmp    15253 <util_connect_reader+0x113>
   1524b:	nop    DWORD PTR [rax+rax*1+0x0]
   15250:	add    ebx,0x1
   15253:	mov    rdi,rbp
   15256:	call   5660 <sc_ctx_get_reader_count@plt>
   1525b:	cmp    eax,ebx
   1525d:	jbe    15530 <util_connect_reader+0x3f0>
   15263:	mov    rdi,rbp
   15266:	mov    esi,ebx
   15268:	call   5780 <sc_ctx_get_reader@plt>
   1526d:	mov    rdi,rax
   15270:	mov    r14,rax
   15273:	call   5950 <sc_detect_card_presence@plt>
   15278:	test   al,0x1
   1527a:	je     15250 <util_connect_reader+0x110>
   1527c:	mov    rdx,QWORD PTR [r14+0x88]
   15283:	cmp    rdx,QWORD PTR [rsp+0x8]
   15288:	jne    15250 <util_connect_reader+0x110>
   1528a:	lea    rdi,[r14+0x60]
   1528e:	mov    rsi,r15
   15291:	call   5750 <memcmp@plt>
   15296:	test   eax,eax
   15298:	jne    15250 <util_connect_reader+0x110>
   1529a:	mov    rcx,QWORD PTR [r14+0x20]
   1529e:	mov    rdi,QWORD PTR [rip+0x1033b]        # 255e0 <stderr@@GLIBC_2.2.5>
   152a5:	mov    esi,0x1
   152aa:	lea    rdx,[rip+0x9cc2]        # 1ef73 <GOST_HASH2001_PARAMSET_OID+0x123>
   152b1:	call   59b0 <__fprintf_chk@plt>
   152b6:	mov    QWORD PTR [r12],r14
   152ba:	jmp    1532f <util_connect_reader+0x1ef>
   152bc:	nop    DWORD PTR [rax+0x0]
   152c0:	mov    DWORD PTR [rbp+0x28],ebx
   152c3:	lea    rsi,[rip+0x9c66]        # 1ef30 <GOST_HASH2001_PARAMSET_OID+0xe0>
   152ca:	mov    rdi,rbp
   152cd:	call   59f0 <sc_ctx_log_to_file@plt>
   152d2:	jmp    151a2 <util_connect_reader+0x62>
   152d7:	nop    WORD PTR [rax+rax*1+0x0]
   152e0:	xor    ebx,ebx
   152e2:	jmp    15309 <util_connect_reader+0x1c9>
   152e4:	nop    DWORD PTR [rax+0x0]
   152e8:	mov    rdi,rbp
   152eb:	mov    esi,ebx
   152ed:	call   5780 <sc_ctx_get_reader@plt>
   152f2:	mov    QWORD PTR [r12],rax
   152f6:	mov    rdi,rax
   152f9:	call   5950 <sc_detect_card_presence@plt>
   152fe:	test   al,0x1
   15300:	jne    154c0 <util_connect_reader+0x380>
   15306:	add    ebx,0x1
   15309:	mov    rdi,rbp
   1530c:	call   5660 <sc_ctx_get_reader_count@plt>
   15311:	cmp    eax,ebx
   15313:	ja     152e8 <util_connect_reader+0x1a8>
   15315:	xor    esi,esi
   15317:	mov    rdi,rbp
   1531a:	call   5780 <sc_ctx_get_reader@plt>
   1531f:	mov    QWORD PTR [r12],rax
   15323:	mov    r14,rax
   15326:	test   r14,r14
   15329:	je     15569 <util_connect_reader+0x429>
   1532f:	mov    rdi,r14
   15332:	call   5950 <sc_detect_card_presence@plt>
   15337:	test   eax,eax
   15339:	jg     151d2 <util_connect_reader+0x92>
   1533f:	mov    edx,0x12
   15344:	mov    rcx,QWORD PTR [rip+0x10295]        # 255e0 <stderr@@GLIBC_2.2.5>
   1534b:	mov    esi,0x1
   15350:	lea    rdi,[rip+0x9c37]        # 1ef8e <GOST_HASH2001_PARAMSET_OID+0x13e>
   15357:	mov    r13d,0xfffffbb0
   1535d:	call   59a0 <fwrite@plt>
   15362:	jmp    151d5 <util_connect_reader+0x95>
   15367:	nop    WORD PTR [rax+rax*1+0x0]
   15370:	mov    rcx,QWORD PTR [rip+0x10269]        # 255e0 <stderr@@GLIBC_2.2.5>
   15377:	mov    edx,0x27
   1537c:	mov    esi,0x1
   15381:	lea    rdi,[rip+0x9d60]        # 1f0e8 <GOST_HASH2001_PARAMSET_OID+0x298>
   15388:	call   59a0 <fwrite@plt>
   1538d:	lea    rcx,[rsp+0x8]
   15392:	mov    rdx,rsp
   15395:	xor    r9d,r9d
   15398:	mov    r8d,0xffffffff
   1539e:	mov    esi,0x5
   153a3:	mov    rdi,rbp
   153a6:	call   5890 <sc_wait_for_event@plt>
   153ab:	mov    r13d,eax
   153ae:	test   eax,eax
   153b0:	js     15540 <util_connect_reader+0x400>
   153b6:	mov    rdi,rbp
   153b9:	call   56c0 <sc_ctx_detect_readers@plt>
   153be:	mov    r13d,eax
   153c1:	test   eax,eax
   153c3:	jns    151bf <util_connect_reader+0x7f>
   153c9:	mov    edi,eax
   153cb:	call   58b0 <sc_strerror@plt>
   153d0:	mov    rdi,QWORD PTR [rip+0x10209]        # 255e0 <stderr@@GLIBC_2.2.5>
   153d7:	mov    esi,0x1
   153dc:	lea    rdx,[rip+0x9d55]        # 1f138 <GOST_HASH2001_PARAMSET_OID+0x2e8>
   153e3:	mov    rcx,rax
   153e6:	xor    eax,eax
   153e8:	call   59b0 <__fprintf_chk@plt>
   153ed:	jmp    151d5 <util_connect_reader+0x95>
   153f2:	nop    WORD PTR [rax+rax*1+0x0]
   153f8:	mov    QWORD PTR [rsp+0x8],0x0
   15401:	call   55e0 <__errno_location@plt>
   15406:	xor    edx,edx
   15408:	lea    rsi,[rsp+0x8]
   1540d:	mov    rdi,r13
   15410:	mov    DWORD PTR [rax],0x0
   15416:	mov    rbx,rax
   15419:	call   57c0 <strtol@plt>
   1541e:	mov    edx,DWORD PTR [rbx]
   15420:	test   edx,edx
   15422:	jne    15437 <util_connect_reader+0x2f7>
   15424:	mov    rdx,QWORD PTR [rsp+0x8]
   15429:	test   rdx,rdx
   1542c:	je     15437 <util_connect_reader+0x2f7>
   1542e:	cmp    BYTE PTR [rdx],0x0
   15431:	je     154eb <util_connect_reader+0x3ab>
   15437:	mov    rsi,r13
   1543a:	mov    rdi,rbp
   1543d:	call   59c0 <sc_ctx_get_reader_by_name@plt>
   15442:	mov    QWORD PTR [r12],rax
   15446:	mov    r14,rax
   15449:	jmp    15326 <util_connect_reader+0x1e6>
   1544e:	xchg   ax,ax
   15450:	mov    rcx,QWORD PTR [rip+0x10189]        # 255e0 <stderr@@GLIBC_2.2.5>
   15457:	mov    edx,0x25
   1545c:	mov    esi,0x1
   15461:	lea    rdi,[rip+0x9cf8]        # 1f160 <GOST_HASH2001_PARAMSET_OID+0x310>
   15468:	call   59a0 <fwrite@plt>
   1546d:	lea    rcx,[rsp+0x8]
   15472:	mov    rdx,rsp
   15475:	xor    r9d,r9d
   15478:	mov    r8d,0xffffffff
   1547e:	mov    esi,0x1
   15483:	mov    rdi,rbp
   15486:	call   5890 <sc_wait_for_event@plt>
   1548b:	mov    r13d,eax
   1548e:	test   eax,eax
   15490:	jns    151ca <util_connect_reader+0x8a>
   15496:	mov    edi,eax
   15498:	call   58b0 <sc_strerror@plt>
   1549d:	mov    rdi,QWORD PTR [rip+0x1013c]        # 255e0 <stderr@@GLIBC_2.2.5>
   154a4:	mov    esi,0x1
   154a9:	lea    rdx,[rip+0x9cd8]        # 1f188 <GOST_HASH2001_PARAMSET_OID+0x338>
   154b0:	mov    rcx,rax
   154b3:	xor    eax,eax
   154b5:	call   59b0 <__fprintf_chk@plt>
   154ba:	jmp    151d5 <util_connect_reader+0x95>
   154bf:	nop
   154c0:	mov    rax,QWORD PTR [r12]
   154c4:	mov    rdi,QWORD PTR [rip+0x10115]        # 255e0 <stderr@@GLIBC_2.2.5>
   154cb:	mov    esi,0x1
   154d0:	lea    rdx,[rip+0x9a7e]        # 1ef55 <GOST_HASH2001_PARAMSET_OID+0x105>
   154d7:	mov    rcx,QWORD PTR [rax+0x20]
   154db:	xor    eax,eax
   154dd:	call   59b0 <__fprintf_chk@plt>
   154e2:	mov    r14,QWORD PTR [r12]
   154e6:	jmp    15326 <util_connect_reader+0x1e6>
   154eb:	mov    esi,eax
   154ed:	mov    rdi,rbp
   154f0:	call   5780 <sc_ctx_get_reader@plt>
   154f5:	mov    QWORD PTR [r12],rax
   154f9:	mov    r14,rax
   154fc:	jmp    15326 <util_connect_reader+0x1e6>
   15501:	mov    edx,0x1d
   15506:	mov    rcx,QWORD PTR [rip+0x100d3]        # 255e0 <stderr@@GLIBC_2.2.5>
   1550d:	mov    esi,0x1
   15512:	lea    rdi,[rip+0x9a1e]        # 1ef37 <GOST_HASH2001_PARAMSET_OID+0xe7>
   15519:	mov    r13d,0xfffffbb3
   1551f:	call   59a0 <fwrite@plt>
   15524:	jmp    151d5 <util_connect_reader+0x95>
   15529:	nop    DWORD PTR [rax+0x0]
   15530:	mov    r14,QWORD PTR [r12]
   15534:	jmp    15326 <util_connect_reader+0x1e6>
   15539:	nop    DWORD PTR [rax+0x0]
   15540:	mov    edi,eax
   15542:	call   58b0 <sc_strerror@plt>
   15547:	mov    rdi,QWORD PTR [rip+0x10092]        # 255e0 <stderr@@GLIBC_2.2.5>
   1554e:	mov    esi,0x1
   15553:	lea    rdx,[rip+0x9bb6]        # 1f110 <GOST_HASH2001_PARAMSET_OID+0x2c0>
   1555a:	mov    rcx,rax
   1555d:	xor    eax,eax
   1555f:	call   59b0 <__fprintf_chk@plt>
   15564:	jmp    151d5 <util_connect_reader+0x95>
   15569:	mov    rdi,rbp
   1556c:	call   5660 <sc_ctx_get_reader_count@plt>
   15571:	mov    rdi,QWORD PTR [rip+0x10068]        # 255e0 <stderr@@GLIBC_2.2.5>
   15578:	mov    rcx,r13
   1557b:	lea    rdx,[rip+0x9c2e]        # 1f1b0 <GOST_HASH2001_PARAMSET_OID+0x360>
   15582:	mov    r8d,eax
   15585:	mov    esi,0x1
   1558a:	xor    eax,eax
   1558c:	mov    r13d,0xfffffbb4
   15592:	call   59b0 <__fprintf_chk@plt>
   15597:	jmp    151d5 <util_connect_reader+0x95>
   1559c:	call   5690 <__stack_chk_fail@plt>
   155a1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   155ac:	nop    DWORD PTR [rax+0x0]

00000000000155b0 <util_connect_card_ex>:
   155b0:	endbr64 
   155b4:	push   r13
   155b6:	mov    r13d,r8d
   155b9:	mov    r8d,r9d
   155bc:	push   r12
   155be:	push   rbp
   155bf:	mov    rbp,rsi
   155c2:	push   rbx
   155c3:	mov    ebx,r9d
   155c6:	sub    rsp,0x28
   155ca:	mov    rax,QWORD PTR fs:0x28
   155d3:	mov    QWORD PTR [rsp+0x18],rax
   155d8:	xor    eax,eax
   155da:	lea    rsi,[rsp+0x8]
   155df:	mov    QWORD PTR [rsp+0x8],0x0
   155e8:	mov    QWORD PTR [rsp+0x10],0x0
   155f1:	call   15140 <util_connect_reader>
   155f6:	mov    r12d,eax
   155f9:	test   eax,eax
   155fb:	jne    1562c <util_connect_card_ex+0x7c>
   155fd:	mov    rdi,QWORD PTR [rsp+0x8]
   15602:	test   ebx,ebx
   15604:	jne    15650 <util_connect_card_ex+0xa0>
   15606:	lea    rsi,[rsp+0x10]
   1560b:	call   57d0 <sc_connect_card@plt>
   15610:	mov    ebx,eax
   15612:	test   eax,eax
   15614:	js     156c8 <util_connect_card_ex+0x118>
   1561a:	mov    rdi,QWORD PTR [rsp+0x10]
   1561f:	test   r13d,r13d
   15622:	jne    156ac <util_connect_card_ex+0xfc>
   15628:	mov    QWORD PTR [rbp+0x0],rdi
   1562c:	mov    rax,QWORD PTR [rsp+0x18]
   15631:	xor    rax,QWORD PTR fs:0x28
   1563a:	jne    1572e <util_connect_card_ex+0x17e>
   15640:	add    rsp,0x28
   15644:	mov    eax,r12d
   15647:	pop    rbx
   15648:	pop    rbp
   15649:	pop    r12
   1564b:	pop    r13
   1564d:	ret    
   1564e:	xchg   ax,ax
   15650:	mov    rdx,QWORD PTR [rdi+0x20]
   15654:	lea    rsi,[rip+0x9b85]        # 1f1e0 <GOST_HASH2001_PARAMSET_OID+0x390>
   1565b:	mov    edi,0x1
   15660:	xor    eax,eax
   15662:	call   58a0 <__printf_chk@plt>
   15667:	mov    rdi,QWORD PTR [rsp+0x8]
   1566c:	lea    rsi,[rsp+0x10]
   15671:	call   57d0 <sc_connect_card@plt>
   15676:	mov    ebx,eax
   15678:	test   eax,eax
   1567a:	js     156c8 <util_connect_card_ex+0x118>
   1567c:	mov    rax,QWORD PTR [rsp+0x10]
   15681:	mov    edi,0x1
   15686:	lea    rsi,[rip+0x9914]        # 1efa1 <GOST_HASH2001_PARAMSET_OID+0x151>
   1568d:	mov    rax,QWORD PTR [rax+0xe8]
   15694:	mov    rdx,QWORD PTR [rax]
   15697:	xor    eax,eax
   15699:	call   58a0 <__printf_chk@plt>
   1569e:	mov    rdi,QWORD PTR [rsp+0x10]
   156a3:	test   r13d,r13d
   156a6:	je     15628 <util_connect_card_ex+0x78>
   156ac:	call   5970 <sc_lock@plt>
   156b1:	mov    ebx,eax
   156b3:	test   eax,eax
   156b5:	js     156f8 <util_connect_card_ex+0x148>
   156b7:	mov    rdi,QWORD PTR [rsp+0x10]
   156bc:	jmp    15628 <util_connect_card_ex+0x78>
   156c1:	nop    DWORD PTR [rax+0x0]
   156c8:	mov    edi,ebx
   156ca:	mov    r12d,ebx
   156cd:	call   58b0 <sc_strerror@plt>
   156d2:	mov    rdi,QWORD PTR [rip+0xff07]        # 255e0 <stderr@@GLIBC_2.2.5>
   156d9:	mov    esi,0x1
   156de:	lea    rdx,[rip+0x9b23]        # 1f208 <GOST_HASH2001_PARAMSET_OID+0x3b8>
   156e5:	mov    rcx,rax
   156e8:	xor    eax,eax
   156ea:	call   59b0 <__fprintf_chk@plt>
   156ef:	jmp    1562c <util_connect_card_ex+0x7c>
   156f4:	nop    DWORD PTR [rax+0x0]
   156f8:	mov    edi,eax
   156fa:	mov    r12d,ebx
   156fd:	call   58b0 <sc_strerror@plt>
   15702:	mov    rdi,QWORD PTR [rip+0xfed7]        # 255e0 <stderr@@GLIBC_2.2.5>
   15709:	mov    esi,0x1
   1570e:	lea    rdx,[rip+0x98a3]        # 1efb8 <GOST_HASH2001_PARAMSET_OID+0x168>
   15715:	mov    rcx,rax
   15718:	xor    eax,eax
   1571a:	call   59b0 <__fprintf_chk@plt>
   1571f:	mov    rdi,QWORD PTR [rsp+0x10]
   15724:	call   5820 <sc_disconnect_card@plt>
   15729:	jmp    1562c <util_connect_card_ex+0x7c>
   1572e:	call   5690 <__stack_chk_fail@plt>
   15733:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1573e:	xchg   ax,ax

0000000000015740 <util_connect_card>:
   15740:	endbr64 
   15744:	mov    r9d,r8d
   15747:	mov    r8d,0x1
   1574d:	jmp    155b0 <util_connect_card_ex>
   15752:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1575d:	nop    DWORD PTR [rax]

0000000000015760 <util_print_binary>:
   15760:	endbr64 
   15764:	push   r15
   15766:	mov    r15,rdi
   15769:	push   r14
   1576b:	push   r13
   1576d:	push   r12
   1576f:	push   rbp
   15770:	push   rbx
   15771:	sub    rsp,0x8
   15775:	test   edx,edx
   15777:	jle    157cd <util_print_binary+0x6d>
   15779:	mov    ebp,edx
   1577b:	mov    rbx,rsi
   1577e:	lea    r12,[rip+0x984c]        # 1efd1 <GOST_HASH2001_PARAMSET_OID+0x181>
   15785:	call   5a60 <__ctype_b_loc@plt>
   1578a:	mov    r14,rax
   1578d:	lea    eax,[rbp-0x1]
   15790:	lea    rbp,[rip+0x9841]        # 1efd8 <GOST_HASH2001_PARAMSET_OID+0x188>
   15797:	lea    r13,[rbx+rax*1+0x1]
   1579c:	nop    DWORD PTR [rax+0x0]
   157a0:	movzx  edx,BYTE PTR [rbx]
   157a3:	mov    rax,QWORD PTR [r14]
   157a6:	mov    esi,0x1
   157ab:	mov    rdi,r15
   157ae:	test   BYTE PTR [rax+rdx*2+0x1],0x40
   157b3:	mov    rcx,rdx
   157b6:	mov    rdx,rbp
   157b9:	cmove  rdx,r12
   157bd:	xor    eax,eax
   157bf:	add    rbx,0x1
   157c3:	call   59b0 <__fprintf_chk@plt>
   157c8:	cmp    r13,rbx
   157cb:	jne    157a0 <util_print_binary+0x40>
   157cd:	add    rsp,0x8
   157d1:	mov    rdi,r15
   157d4:	pop    rbx
   157d5:	pop    rbp
   157d6:	pop    r12
   157d8:	pop    r13
   157da:	pop    r14
   157dc:	pop    r15
   157de:	jmp    5860 <fflush@plt>
   157e3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   157ee:	xchg   ax,ax

00000000000157f0 <util_hex_dump>:
   157f0:	endbr64 
   157f4:	test   edx,edx
   157f6:	jle    15860 <util_hex_dump+0x70>
   157f8:	push   r14
   157fa:	lea    r14,[rip+0x97d2]        # 1efd3 <GOST_HASH2001_PARAMSET_OID+0x183>
   15801:	push   r13
   15803:	lea    r13d,[rdx-0x1]
   15807:	push   r12
   15809:	add    r13,rsi
   1580c:	mov    r12,rcx
   1580f:	push   rbp
   15810:	mov    rbp,rdi
   15813:	push   rbx
   15814:	mov    rbx,rsi
   15817:	jmp    15834 <util_hex_dump+0x44>
   15819:	nop    DWORD PTR [rax+0x0]
   15820:	test   r12,r12
   15823:	je     15830 <util_hex_dump+0x40>
   15825:	mov    rsi,rbp
   15828:	mov    rdi,r12
   1582b:	call   56d0 <fputs@plt>
   15830:	add    rbx,0x1
   15834:	movzx  ecx,BYTE PTR [rbx]
   15837:	xor    eax,eax
   15839:	mov    rdx,r14
   1583c:	mov    esi,0x1
   15841:	mov    rdi,rbp
   15844:	call   59b0 <__fprintf_chk@plt>
   15849:	cmp    r13,rbx
   1584c:	jne    15820 <util_hex_dump+0x30>
   1584e:	pop    rbx
   1584f:	pop    rbp
   15850:	pop    r12
   15852:	pop    r13
   15854:	pop    r14
   15856:	ret    
   15857:	nop    WORD PTR [rax+rax*1+0x0]
   15860:	ret    
   15861:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1586c:	nop    DWORD PTR [rax+0x0]

0000000000015870 <util_hex_dump_asc>:
   15870:	endbr64 
   15874:	push   r15
   15876:	push   r14
   15878:	push   r13
   1587a:	push   r12
   1587c:	push   rbp
   1587d:	push   rbx
   1587e:	sub    rsp,0x38
   15882:	mov    QWORD PTR [rsp],rdx
   15886:	mov    DWORD PTR [rsp+0xc],ecx
   1588a:	mov    rax,QWORD PTR fs:0x28
   15893:	mov    QWORD PTR [rsp+0x28],rax
   15898:	xor    eax,eax
   1589a:	mov    DWORD PTR [rsp+0x8],0x0
   158a2:	test   rdx,rdx
   158a5:	je     159b0 <util_hex_dump_asc+0x140>
   158ab:	mov    rbp,rdi
   158ae:	mov    rbx,rsi
   158b1:	lea    r13,[rsp+0x10]
   158b6:	lea    r15,[rip+0x27bf]        # 1807c <_IO_stdin_used+0x107c>
   158bd:	nop    DWORD PTR [rax]
   158c0:	mov    r14d,DWORD PTR [rsp+0xc]
   158c5:	test   r14d,r14d
   158c8:	js     158ed <util_hex_dump_asc+0x7d>
   158ca:	mov    ecx,r14d
   158cd:	lea    rdx,[rip+0x9707]        # 1efdb <GOST_HASH2001_PARAMSET_OID+0x18b>
   158d4:	mov    rdi,rbp
   158d7:	xor    eax,eax
   158d9:	mov    esi,0x1
   158de:	call   59b0 <__fprintf_chk@plt>
   158e3:	mov    eax,r14d
   158e6:	add    eax,0x10
   158e9:	mov    DWORD PTR [rsp+0xc],eax
   158ed:	call   5a60 <__ctype_b_loc@plt>
   158f2:	xor    r14d,r14d
   158f5:	mov    r12,rax
   158f8:	nop    DWORD PTR [rax+rax*1+0x0]
   15900:	movzx  ecx,BYTE PTR [rbx]
   15903:	lea    rdx,[rip+0x96d8]        # 1efe2 <GOST_HASH2001_PARAMSET_OID+0x192>
   1590a:	xor    eax,eax
   1590c:	mov    rdi,rbp
   1590f:	mov    esi,0x1
   15914:	call   59b0 <__fprintf_chk@plt>
   15919:	movzx  ecx,BYTE PTR [rbx]
   1591c:	mov    rdx,QWORD PTR [r12]
   15920:	mov    esi,0x2e
   15925:	test   BYTE PTR [rdx+rcx*2+0x1],0x40
   1592a:	mov    rax,rcx
   1592d:	cmove  eax,esi
   15930:	add    rbx,0x1
   15934:	mov    BYTE PTR [r13+r14*1+0x0],al
   15939:	add    r14,0x1
   1593d:	cmp    r14,0xf
   15941:	setbe  al
   15944:	cmp    r14,QWORD PTR [rsp]
   15948:	jae    1594e <util_hex_dump_asc+0xde>
   1594a:	test   al,al
   1594c:	jne    15900 <util_hex_dump_asc+0x90>
   1594e:	mov    edx,DWORD PTR [rsp+0x8]
   15952:	sub    QWORD PTR [rsp],r14
   15956:	mov    BYTE PTR [rsp+r14*1+0x10],0x0
   1595c:	test   edx,edx
   1595e:	je     15987 <util_hex_dump_asc+0x117>
   15960:	test   al,al
   15962:	je     15987 <util_hex_dump_asc+0x117>
   15964:	nop    DWORD PTR [rax+0x0]
   15968:	mov    rcx,rbp
   1596b:	mov    edx,0x3
   15970:	mov    esi,0x1
   15975:	mov    rdi,r15
   15978:	call   59a0 <fwrite@plt>
   1597d:	add    r14,0x1
   15981:	cmp    r14,0x10
   15985:	jne    15968 <util_hex_dump_asc+0xf8>
   15987:	xor    eax,eax
   15989:	mov    rcx,r13
   1598c:	lea    rdx,[rip+0x2f90]        # 18923 <_IO_stdin_used+0x1923>
   15993:	mov    rdi,rbp
   15996:	mov    esi,0x1
   1599b:	call   59b0 <__fprintf_chk@plt>
   159a0:	add    DWORD PTR [rsp+0x8],0x1
   159a5:	cmp    QWORD PTR [rsp],0x0
   159aa:	jne    158c0 <util_hex_dump_asc+0x50>
   159b0:	mov    rax,QWORD PTR [rsp+0x28]
   159b5:	xor    rax,QWORD PTR fs:0x28
   159be:	jne    159cf <util_hex_dump_asc+0x15f>
   159c0:	add    rsp,0x38
   159c4:	pop    rbx
   159c5:	pop    rbp
   159c6:	pop    r12
   159c8:	pop    r13
   159ca:	pop    r14
   159cc:	pop    r15
   159ce:	ret    
   159cf:	call   5690 <__stack_chk_fail@plt>
   159d4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   159df:	nop

00000000000159e0 <util_print_usage_and_die>:
   159e0:	endbr64 
   159e4:	push   r15
   159e6:	push   r14
   159e8:	push   r13
   159ea:	push   r12
   159ec:	push   rbp
   159ed:	mov    rbp,rdx
   159f0:	mov    rdx,rdi
   159f3:	push   rbx
   159f4:	mov    rbx,rsi
   159f7:	sub    rsp,0x48
   159fb:	mov    rax,QWORD PTR fs:0x28
   15a04:	mov    QWORD PTR [rsp+0x38],rax
   15a09:	xor    eax,eax
   15a0b:	test   rcx,rcx
   15a0e:	je     15bbe <util_print_usage_and_die+0x1de>
   15a14:	lea    rsi,[rip+0x95db]        # 1eff6 <GOST_HASH2001_PARAMSET_OID+0x1a6>
   15a1b:	mov    edi,0x1
   15a20:	call   58a0 <__printf_chk@plt>
   15a25:	xor    eax,eax
   15a27:	cmp    QWORD PTR [rbx],0x0
   15a2b:	lea    r15,[rip+0x95b6]        # 1efe8 <GOST_HASH2001_PARAMSET_OID+0x198>
   15a32:	lea    r12,[rsp+0x10]
   15a37:	jne    15a6f <util_print_usage_and_die+0x8f>
   15a39:	jmp    15b80 <util_print_usage_and_die+0x1a0>
   15a3e:	xchg   ax,ax
   15a40:	mov    rcx,QWORD PTR [rbp+0x0]
   15a44:	mov    rdx,r12
   15a47:	lea    rsi,[rip+0x95f5]        # 1f043 <GOST_HASH2001_PARAMSET_OID+0x1f3>
   15a4e:	xor    eax,eax
   15a50:	mov    edi,0x1
   15a55:	call   58a0 <__printf_chk@plt>
   15a5a:	mov    eax,r13d
   15a5d:	add    rbx,0x20
   15a61:	add    rbp,0x8
   15a65:	cmp    QWORD PTR [rbx],0x0
   15a69:	je     15b80 <util_print_usage_and_die+0x1a0>
   15a6f:	cmp    QWORD PTR [rbp+0x0],0x0
   15a74:	je     15a5d <util_print_usage_and_die+0x7d>
   15a76:	lea    r13d,[rax+0x1]
   15a7a:	test   eax,eax
   15a7c:	je     15b68 <util_print_usage_and_die+0x188>
   15a82:	mov    eax,DWORD PTR [rbx+0x8]
   15a85:	mov    r9,r15
   15a88:	cmp    eax,0x1
   15a8b:	je     15aa2 <util_print_usage_and_die+0xc2>
   15a8d:	cmp    eax,0x2
   15a90:	lea    r9,[rip+0x9558]        # 1efef <GOST_HASH2001_PARAMSET_OID+0x19f>
   15a97:	lea    rax,[rip+0x95ea]        # 1f088 <GOST_HASH2001_PARAMSET_OID+0x238>
   15a9e:	cmovne r9,rax
   15aa2:	mov    r14d,DWORD PTR [rbx+0x18]
   15aa6:	mov    r8,QWORD PTR [rbx]
   15aa9:	test   r14d,0xffffff80
   15ab0:	jne    15ae4 <util_print_usage_and_die+0x104>
   15ab2:	mov    QWORD PTR [rsp+0x8],r8
   15ab7:	mov    QWORD PTR [rsp],r9
   15abb:	call   5a60 <__ctype_b_loc@plt>
   15ac0:	mov    r9,QWORD PTR [rsp]
   15ac4:	mov    r8,QWORD PTR [rsp+0x8]
   15ac9:	mov    r10,rax
   15acc:	movsxd rax,r14d
   15acf:	mov    rcx,QWORD PTR [r10]
   15ad2:	movzx  eax,WORD PTR [rcx+rax*2]
   15ad6:	and    ax,0x6000
   15ada:	cmp    ax,0x4000
   15ade:	je     15b90 <util_print_usage_and_die+0x1b0>
   15ae4:	mov    edx,0x28
   15ae9:	mov    esi,0x1
   15aee:	mov    rdi,r12
   15af1:	xor    eax,eax
   15af3:	lea    rcx,[rip+0x953e]        # 1f038 <GOST_HASH2001_PARAMSET_OID+0x1e8>
   15afa:	call   5a70 <__sprintf_chk@plt>
   15aff:	mov    rdx,r12
   15b02:	mov    ecx,DWORD PTR [rdx]
   15b04:	add    rdx,0x4
   15b08:	lea    eax,[rcx-0x1010101]
   15b0e:	not    ecx
   15b10:	and    eax,ecx
   15b12:	and    eax,0x80808080
   15b17:	je     15b02 <util_print_usage_and_die+0x122>
   15b19:	mov    ecx,eax
   15b1b:	shr    ecx,0x10
   15b1e:	test   eax,0x8080
   15b23:	cmove  eax,ecx
   15b26:	lea    rcx,[rdx+0x2]
   15b2a:	cmove  rdx,rcx
   15b2e:	mov    esi,eax
   15b30:	add    sil,al
   15b33:	sbb    rdx,0x3
   15b37:	sub    rdx,r12
   15b3a:	cmp    rdx,0x1c
   15b3e:	jbe    15a40 <util_print_usage_and_die+0x60>
   15b44:	mov    rdx,r12
   15b47:	lea    rsi,[rip+0x2dd3]        # 18921 <_IO_stdin_used+0x1921>
   15b4e:	mov    edi,0x1
   15b53:	xor    eax,eax
   15b55:	call   58a0 <__printf_chk@plt>
   15b5a:	mov    BYTE PTR [rsp+0x10],0x0
   15b5f:	jmp    15a40 <util_print_usage_and_die+0x60>
   15b64:	nop    DWORD PTR [rax+0x0]
   15b68:	lea    rdi,[rip+0x94b4]        # 1f023 <GOST_HASH2001_PARAMSET_OID+0x1d3>
   15b6f:	call   5600 <puts@plt>
   15b74:	jmp    15a82 <util_print_usage_and_die+0xa2>
   15b79:	nop    DWORD PTR [rax+0x0]
   15b80:	mov    edi,0x2
   15b85:	call   5990 <exit@plt>
   15b8a:	nop    WORD PTR [rax+rax*1+0x0]
   15b90:	sub    rsp,0x8
   15b94:	mov    edx,0x28
   15b99:	mov    esi,0x1
   15b9e:	xor    eax,eax
   15ba0:	push   r9
   15ba2:	lea    rcx,[rip+0x9483]        # 1f02c <GOST_HASH2001_PARAMSET_OID+0x1dc>
   15ba9:	mov    r9,r8
   15bac:	mov    rdi,r12
   15baf:	mov    r8d,r14d
   15bb2:	call   5a70 <__sprintf_chk@plt>
   15bb7:	pop    rax
   15bb8:	pop    rdx
   15bb9:	jmp    15aff <util_print_usage_and_die+0x11f>
   15bbe:	lea    rsi,[rip+0x9449]        # 1f00e <GOST_HASH2001_PARAMSET_OID+0x1be>
   15bc5:	mov    edi,0x1
   15bca:	xor    eax,eax
   15bcc:	call   58a0 <__printf_chk@plt>
   15bd1:	jmp    15a25 <util_print_usage_and_die+0x45>
   15bd6:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000015be0 <util_list_card_drivers>:
   15be0:	endbr64 
   15be4:	push   rbp
   15be5:	push   rbx
   15be6:	sub    rsp,0x8
   15bea:	test   rdi,rdi
   15bed:	je     15c90 <util_list_card_drivers+0xb0>
   15bf3:	cmp    QWORD PTR [rdi+0xd8],0x0
   15bfb:	mov    rbx,rdi
   15bfe:	je     15c60 <util_list_card_drivers+0x80>
   15c00:	lea    rdi,[rip+0x9482]        # 1f089 <GOST_HASH2001_PARAMSET_OID+0x239>
   15c07:	call   5600 <puts@plt>
   15c0c:	mov    rax,QWORD PTR [rbx+0xd8]
   15c13:	test   rax,rax
   15c16:	je     15c53 <util_list_card_drivers+0x73>
   15c18:	add    rbx,0xe0
   15c1f:	lea    rbp,[rip+0x947b]        # 1f0a1 <GOST_HASH2001_PARAMSET_OID+0x251>
   15c26:	cs nop WORD PTR [rax+rax*1+0x0]
   15c30:	mov    rdx,QWORD PTR [rax+0x8]
   15c34:	mov    rcx,QWORD PTR [rax]
   15c37:	mov    rsi,rbp
   15c3a:	mov    edi,0x1
   15c3f:	xor    eax,eax
   15c41:	add    rbx,0x8
   15c45:	call   58a0 <__printf_chk@plt>
   15c4a:	mov    rax,QWORD PTR [rbx-0x8]
   15c4e:	test   rax,rax
   15c51:	jne    15c30 <util_list_card_drivers+0x50>
   15c53:	xor    eax,eax
   15c55:	add    rsp,0x8
   15c59:	pop    rbx
   15c5a:	pop    rbp
   15c5b:	ret    
   15c5c:	nop    DWORD PTR [rax+0x0]
   15c60:	mov    rcx,QWORD PTR [rip+0xf979]        # 255e0 <stderr@@GLIBC_2.2.5>
   15c67:	mov    edx,0x1b
   15c6c:	mov    esi,0x1
   15c71:	lea    rdi,[rip+0x93f5]        # 1f06d <GOST_HASH2001_PARAMSET_OID+0x21d>
   15c78:	call   59a0 <fwrite@plt>
   15c7d:	add    rsp,0x8
   15c81:	mov    eax,0x1
   15c86:	pop    rbx
   15c87:	pop    rbp
   15c88:	ret    
   15c89:	nop    DWORD PTR [rax+0x0]
   15c90:	mov    rcx,QWORD PTR [rip+0xf949]        # 255e0 <stderr@@GLIBC_2.2.5>
   15c97:	mov    edx,0x1c
   15c9c:	mov    esi,0x1
   15ca1:	lea    rdi,[rip+0x93a8]        # 1f050 <GOST_HASH2001_PARAMSET_OID+0x200>
   15ca8:	call   59a0 <fwrite@plt>
   15cad:	mov    eax,0x1
   15cb2:	jmp    15c55 <util_list_card_drivers+0x75>
   15cb4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   15cbf:	nop

0000000000015cc0 <util_acl_to_str>:
   15cc0:	endbr64 
   15cc4:	lea    rax,[rip+0x93e7]        # 1f0b2 <GOST_HASH2001_PARAMSET_OID+0x262>
   15ccb:	test   rdi,rdi
   15cce:	je     15f80 <util_acl_to_str+0x2c0>
   15cd4:	push   r15
   15cd6:	movabs r15,0x20657479426c6f72
   15ce0:	push   r14
   15ce2:	movabs r14,0x746e6f432e636553
   15cec:	push   r13
   15cee:	movabs r13,0x20444968747541
   15cf8:	push   r12
   15cfa:	movabs r12,0x2035312353434b50
   15d04:	push   rbp
   15d05:	mov    rbp,rdi
   15d08:	push   rbx
   15d09:	lea    rbx,[rip+0x9518]        # 1f228 <GOST_HASH2001_PARAMSET_OID+0x3d8>
   15d10:	sub    rsp,0x8
   15d14:	mov    BYTE PTR [rip+0x104a5],0x0        # 261c0 <line.8291>
   15d1b:	mov    eax,DWORD PTR [rbp+0x0]
   15d1e:	cmp    eax,0x20
   15d21:	ja     15d48 <util_acl_to_str+0x88>
   15d23:	movsxd rax,DWORD PTR [rbx+rax*4]
   15d27:	add    rax,rbx
   15d2a:	notrack jmp rax
   15d2d:	lea    rax,[rip+0x9379]        # 1f0ad <GOST_HASH2001_PARAMSET_OID+0x25d>
   15d34:	add    rsp,0x8
   15d38:	pop    rbx
   15d39:	pop    rbp
   15d3a:	pop    r12
   15d3c:	pop    r13
   15d3e:	pop    r14
   15d40:	pop    r15
   15d42:	ret    
   15d43:	nop    DWORD PTR [rax+rax*1+0x0]
   15d48:	cmp    eax,0xfffffffe
   15d4b:	je     15e40 <util_acl_to_str+0x180>
   15d51:	cmp    eax,0xffffffff
   15d54:	jne    15d70 <util_acl_to_str+0xb0>
   15d56:	add    rsp,0x8
   15d5a:	lea    rax,[rip+0x9355]        # 1f0b6 <GOST_HASH2001_PARAMSET_OID+0x266>
   15d61:	pop    rbx
   15d62:	pop    rbp
   15d63:	pop    r12
   15d65:	pop    r13
   15d67:	pop    r14
   15d69:	pop    r15
   15d6b:	ret    
   15d6c:	nop    DWORD PTR [rax+0x0]
   15d70:	cmp    eax,0x40
   15d73:	je     15f48 <util_acl_to_str+0x288>
   15d79:	cmp    eax,0x80
   15d7e:	jne    15f2e <util_acl_to_str+0x26e>
   15d84:	mov    QWORD PTR [rip+0x10415],r12        # 261a0 <buf.8292>
   15d8b:	mov    QWORD PTR [rip+0x10416],r13        # 261a8 <buf.8292+0x8>
   15d92:	mov    r8d,DWORD PTR [rbp+0x4]
   15d96:	cmp    r8d,0xffffffff
   15d9a:	jne    15e77 <util_acl_to_str+0x1b7>
   15da0:	mov    edx,0x50
   15da5:	lea    rsi,[rip+0x103f4]        # 261a0 <buf.8292>
   15dac:	lea    rdi,[rip+0x1040d]        # 261c0 <line.8291>
   15db3:	call   167b0 <strlcat>
   15db8:	mov    edx,0x50
   15dbd:	lea    rsi,[rip+0x22ba]        # 1807e <_IO_stdin_used+0x107e>
   15dc4:	lea    rdi,[rip+0x103f5]        # 261c0 <line.8291>
   15dcb:	call   167b0 <strlcat>
   15dd0:	mov    rbp,QWORD PTR [rbp+0x8]
   15dd4:	test   rbp,rbp
   15dd7:	jne    15d1b <util_acl_to_str+0x5b>
   15ddd:	mov    BYTE PTR [rip+0x1042b],0x0        # 2620f <line.8291+0x4f>
   15de4:	lea    rsi,[rip+0x103d5]        # 261c0 <line.8291>
   15deb:	mov    rdi,rsi
   15dee:	mov    rdx,rsi
   15df1:	mov    ecx,DWORD PTR [rdx]
   15df3:	add    rdx,0x4
   15df7:	lea    eax,[rcx-0x1010101]
   15dfd:	not    ecx
   15dff:	and    eax,ecx
   15e01:	and    eax,0x80808080
   15e06:	je     15df1 <util_acl_to_str+0x131>
   15e08:	mov    ecx,eax
   15e0a:	shr    ecx,0x10
   15e0d:	test   eax,0x8080
   15e12:	cmove  eax,ecx
   15e15:	lea    rcx,[rdx+0x2]
   15e19:	cmove  rdx,rcx
   15e1d:	mov    ecx,eax
   15e1f:	add    cl,al
   15e21:	lea    rax,[rip+0x10398]        # 261c0 <line.8291>
   15e28:	sbb    rdx,0x3
   15e2c:	sub    rdx,rsi
   15e2f:	mov    BYTE PTR [rdi+rdx*1-0x1],0x0
   15e34:	jmp    15d34 <util_acl_to_str+0x74>
   15e39:	nop    DWORD PTR [rax+0x0]
   15e40:	lea    rax,[rip+0x926b]        # 1f0b2 <GOST_HASH2001_PARAMSET_OID+0x262>
   15e47:	jmp    15d34 <util_acl_to_str+0x74>
   15e4c:	movabs rax,0x2e766e452e636553
   15e56:	mov    QWORD PTR [rip+0x10343],rax        # 261a0 <buf.8292>
   15e5d:	mov    eax,0x20
   15e62:	mov    WORD PTR [rip+0x1033f],ax        # 261a8 <buf.8292+0x8>
   15e69:	mov    r8d,DWORD PTR [rbp+0x4]
   15e6d:	cmp    r8d,0xffffffff
   15e71:	je     15da0 <util_acl_to_str+0xe0>
   15e77:	lea    rcx,[rip+0x923d]        # 1f0bb <GOST_HASH2001_PARAMSET_OID+0x26b>
   15e7e:	mov    edx,0x11
   15e83:	mov    esi,0x1
   15e88:	lea    rdi,[rip+0x10314]        # 261a3 <buf.8292+0x3>
   15e8f:	xor    eax,eax
   15e91:	call   5a70 <__sprintf_chk@plt>
   15e96:	jmp    15da0 <util_acl_to_str+0xe0>
   15e9b:	mov    DWORD PTR [rip+0x102fb],0x48545541        # 261a0 <buf.8292>
   15ea5:	mov    BYTE PTR [rip+0x102f8],0x0        # 261a4 <buf.8292+0x4>
   15eac:	mov    r8d,DWORD PTR [rbp+0x4]
   15eb0:	cmp    r8d,0xffffffff
   15eb4:	je     15da0 <util_acl_to_str+0xe0>
   15eba:	lea    rcx,[rip+0x204a]        # 17f0b <_IO_stdin_used+0xf0b>
   15ec1:	mov    edx,0x10
   15ec6:	mov    esi,0x1
   15ecb:	xor    eax,eax
   15ecd:	lea    rdi,[rip+0x102d0]        # 261a4 <buf.8292+0x4>
   15ed4:	call   5a70 <__sprintf_chk@plt>
   15ed9:	jmp    15da0 <util_acl_to_str+0xe0>
   15ede:	mov    DWORD PTR [rip+0x102b8],0x544f5250        # 261a0 <buf.8292>
   15ee8:	mov    BYTE PTR [rip+0x102b5],0x0        # 261a4 <buf.8292+0x4>
   15eef:	jmp    15da0 <util_acl_to_str+0xe0>
   15ef4:	mov    DWORD PTR [rip+0x102a2],0x4d524554        # 261a0 <buf.8292>
   15efe:	mov    BYTE PTR [rip+0x1029f],0x0        # 261a4 <buf.8292+0x4>
   15f05:	jmp    15da0 <util_acl_to_str+0xe0>
   15f0a:	mov    r8d,DWORD PTR [rbp+0x4]
   15f0e:	lea    rcx,[rip+0x1ff6]        # 17f0b <_IO_stdin_used+0xf0b>
   15f15:	mov    DWORD PTR [rip+0x10281],0x564843        # 261a0 <buf.8292>
   15f1f:	cmp    r8d,0xffffffff
   15f23:	je     15da0 <util_acl_to_str+0xe0>
   15f29:	jmp    15e7e <util_acl_to_str+0x1be>
   15f2e:	mov    DWORD PTR [rip+0x10268],0x3f3f3f3f        # 261a0 <buf.8292>
   15f38:	mov    BYTE PTR [rip+0x10265],0x0        # 261a4 <buf.8292+0x4>
   15f3f:	jmp    15da0 <util_acl_to_str+0xe0>
   15f44:	nop    DWORD PTR [rax+0x0]
   15f48:	mov    QWORD PTR [rip+0x10251],r14        # 261a0 <buf.8292>
   15f4f:	lea    rcx,[rip+0x9169]        # 1f0bf <GOST_HASH2001_PARAMSET_OID+0x26f>
   15f56:	mov    QWORD PTR [rip+0x1024b],r15        # 261a8 <buf.8292+0x8>
   15f5d:	mov    BYTE PTR [rip+0x1024c],0x0        # 261b0 <buf.8292+0x10>
   15f64:	mov    r8d,DWORD PTR [rbp+0x4]
   15f68:	cmp    r8d,0xffffffff
   15f6c:	je     15da0 <util_acl_to_str+0xe0>
   15f72:	jmp    15e7e <util_acl_to_str+0x1be>
   15f77:	nop    WORD PTR [rax+rax*1+0x0]
   15f80:	ret    
   15f81:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   15f8c:	nop    DWORD PTR [rax+0x0]

0000000000015f90 <util_fatal>:
   15f90:	endbr64 
   15f94:	push   r12
   15f96:	mov    r12,rdi
   15f99:	sub    rsp,0xd0
   15fa0:	mov    QWORD PTR [rsp+0x28],rsi
   15fa5:	mov    QWORD PTR [rsp+0x30],rdx
   15faa:	mov    QWORD PTR [rsp+0x38],rcx
   15faf:	mov    QWORD PTR [rsp+0x40],r8
   15fb4:	mov    QWORD PTR [rsp+0x48],r9
   15fb9:	test   al,al
   15fbb:	je     15ff4 <util_fatal+0x64>
   15fbd:	movaps XMMWORD PTR [rsp+0x50],xmm0
   15fc2:	movaps XMMWORD PTR [rsp+0x60],xmm1
   15fc7:	movaps XMMWORD PTR [rsp+0x70],xmm2
   15fcc:	movaps XMMWORD PTR [rsp+0x80],xmm3
   15fd4:	movaps XMMWORD PTR [rsp+0x90],xmm4
   15fdc:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   15fe4:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   15fec:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   15ff4:	mov    rax,QWORD PTR fs:0x28
   15ffd:	mov    QWORD PTR [rsp+0x18],rax
   16002:	xor    eax,eax
   16004:	mov    edx,0x7
   16009:	mov    esi,0x1
   1600e:	mov    rcx,QWORD PTR [rip+0xf5cb]        # 255e0 <stderr@@GLIBC_2.2.5>
   16015:	lea    rax,[rsp+0xe0]
   1601d:	lea    rdi,[rip+0x90a0]        # 1f0c4 <GOST_HASH2001_PARAMSET_OID+0x274>
   16024:	mov    DWORD PTR [rsp],0x8
   1602b:	mov    QWORD PTR [rsp+0x8],rax
   16030:	lea    rax,[rsp+0x20]
   16035:	mov    DWORD PTR [rsp+0x4],0x30
   1603d:	mov    QWORD PTR [rsp+0x10],rax
   16042:	call   59a0 <fwrite@plt>
   16047:	mov    rcx,rsp
   1604a:	mov    rdx,r12
   1604d:	mov    esi,0x1
   16052:	mov    rdi,QWORD PTR [rip+0xf587]        # 255e0 <stderr@@GLIBC_2.2.5>
   16059:	call   55d0 <__vfprintf_chk@plt>
   1605e:	mov    edx,0xb
   16063:	mov    esi,0x1
   16068:	mov    rcx,QWORD PTR [rip+0xf571]        # 255e0 <stderr@@GLIBC_2.2.5>
   1606f:	lea    rdi,[rip+0x9056]        # 1f0cc <GOST_HASH2001_PARAMSET_OID+0x27c>
   16076:	call   59a0 <fwrite@plt>
   1607b:	call   5920 <sc_notify_close@plt>
   16080:	mov    edi,0x1
   16085:	call   5990 <exit@plt>
   1608a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000016090 <util_error>:
   16090:	endbr64 
   16094:	push   r12
   16096:	mov    r12,rdi
   16099:	sub    rsp,0xd0
   160a0:	mov    QWORD PTR [rsp+0x28],rsi
   160a5:	mov    QWORD PTR [rsp+0x30],rdx
   160aa:	mov    QWORD PTR [rsp+0x38],rcx
   160af:	mov    QWORD PTR [rsp+0x40],r8
   160b4:	mov    QWORD PTR [rsp+0x48],r9
   160b9:	test   al,al
   160bb:	je     160f4 <util_error+0x64>
   160bd:	movaps XMMWORD PTR [rsp+0x50],xmm0
   160c2:	movaps XMMWORD PTR [rsp+0x60],xmm1
   160c7:	movaps XMMWORD PTR [rsp+0x70],xmm2
   160cc:	movaps XMMWORD PTR [rsp+0x80],xmm3
   160d4:	movaps XMMWORD PTR [rsp+0x90],xmm4
   160dc:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   160e4:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   160ec:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   160f4:	mov    rax,QWORD PTR fs:0x28
   160fd:	mov    QWORD PTR [rsp+0x18],rax
   16102:	xor    eax,eax
   16104:	mov    edx,0x7
   16109:	mov    esi,0x1
   1610e:	mov    rcx,QWORD PTR [rip+0xf4cb]        # 255e0 <stderr@@GLIBC_2.2.5>
   16115:	lea    rax,[rsp+0xe0]
   1611d:	lea    rdi,[rip+0x8fa0]        # 1f0c4 <GOST_HASH2001_PARAMSET_OID+0x274>
   16124:	mov    DWORD PTR [rsp],0x8
   1612b:	mov    QWORD PTR [rsp+0x8],rax
   16130:	lea    rax,[rsp+0x20]
   16135:	mov    DWORD PTR [rsp+0x4],0x30
   1613d:	mov    QWORD PTR [rsp+0x10],rax
   16142:	call   59a0 <fwrite@plt>
   16147:	mov    rcx,rsp
   1614a:	mov    rdx,r12
   1614d:	mov    esi,0x1
   16152:	mov    rdi,QWORD PTR [rip+0xf487]        # 255e0 <stderr@@GLIBC_2.2.5>
   16159:	call   55d0 <__vfprintf_chk@plt>
   1615e:	mov    rsi,QWORD PTR [rip+0xf47b]        # 255e0 <stderr@@GLIBC_2.2.5>
   16165:	mov    edi,0xa
   1616a:	call   5730 <fputc@plt>
   1616f:	mov    rax,QWORD PTR [rsp+0x18]
   16174:	xor    rax,QWORD PTR fs:0x28
   1617d:	jne    16189 <util_error+0xf9>
   1617f:	add    rsp,0xd0
   16186:	pop    r12
   16188:	ret    
   16189:	call   5690 <__stack_chk_fail@plt>
   1618e:	xchg   ax,ax

0000000000016190 <util_warn>:
   16190:	endbr64 
   16194:	push   r12
   16196:	mov    r12,rdi
   16199:	sub    rsp,0xd0
   161a0:	mov    QWORD PTR [rsp+0x28],rsi
   161a5:	mov    QWORD PTR [rsp+0x30],rdx
   161aa:	mov    QWORD PTR [rsp+0x38],rcx
   161af:	mov    QWORD PTR [rsp+0x40],r8
   161b4:	mov    QWORD PTR [rsp+0x48],r9
   161b9:	test   al,al
   161bb:	je     161f4 <util_warn+0x64>
   161bd:	movaps XMMWORD PTR [rsp+0x50],xmm0
   161c2:	movaps XMMWORD PTR [rsp+0x60],xmm1
   161c7:	movaps XMMWORD PTR [rsp+0x70],xmm2
   161cc:	movaps XMMWORD PTR [rsp+0x80],xmm3
   161d4:	movaps XMMWORD PTR [rsp+0x90],xmm4
   161dc:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   161e4:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   161ec:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   161f4:	mov    rax,QWORD PTR fs:0x28
   161fd:	mov    QWORD PTR [rsp+0x18],rax
   16202:	xor    eax,eax
   16204:	mov    edx,0x9
   16209:	mov    esi,0x1
   1620e:	mov    rcx,QWORD PTR [rip+0xf3cb]        # 255e0 <stderr@@GLIBC_2.2.5>
   16215:	lea    rax,[rsp+0xe0]
   1621d:	lea    rdi,[rip+0x8eb4]        # 1f0d8 <GOST_HASH2001_PARAMSET_OID+0x288>
   16224:	mov    DWORD PTR [rsp],0x8
   1622b:	mov    QWORD PTR [rsp+0x8],rax
   16230:	lea    rax,[rsp+0x20]
   16235:	mov    DWORD PTR [rsp+0x4],0x30
   1623d:	mov    QWORD PTR [rsp+0x10],rax
   16242:	call   59a0 <fwrite@plt>
   16247:	mov    rcx,rsp
   1624a:	mov    rdx,r12
   1624d:	mov    esi,0x1
   16252:	mov    rdi,QWORD PTR [rip+0xf387]        # 255e0 <stderr@@GLIBC_2.2.5>
   16259:	call   55d0 <__vfprintf_chk@plt>
   1625e:	mov    rsi,QWORD PTR [rip+0xf37b]        # 255e0 <stderr@@GLIBC_2.2.5>
   16265:	mov    edi,0xa
   1626a:	call   5730 <fputc@plt>
   1626f:	mov    rax,QWORD PTR [rsp+0x18]
   16274:	xor    rax,QWORD PTR fs:0x28
   1627d:	jne    16289 <util_warn+0xf9>
   1627f:	add    rsp,0xd0
   16286:	pop    r12
   16288:	ret    
   16289:	call   5690 <__stack_chk_fail@plt>
   1628e:	xchg   ax,ax

0000000000016290 <util_getpass>:
   16290:	endbr64 
   16294:	push   r15
   16296:	push   r14
   16298:	push   r13
   1629a:	push   r12
   1629c:	mov    r12,rdi
   1629f:	push   rbp
   162a0:	push   rbx
   162a1:	mov    rbx,rsi
   162a4:	sub    rsp,0x98
   162ab:	mov    rdi,QWORD PTR [rip+0xf2ee]        # 255a0 <stdout@@GLIBC_2.2.5>
   162b2:	mov    rax,QWORD PTR fs:0x28
   162bb:	mov    QWORD PTR [rsp+0x88],rax
   162c3:	xor    eax,eax
   162c5:	mov    r13,rsp
   162c8:	call   5860 <fflush@plt>
   162cd:	mov    rdi,QWORD PTR [rip+0xf2cc]        # 255a0 <stdout@@GLIBC_2.2.5>
   162d4:	call   57e0 <fileno@plt>
   162d9:	mov    rsi,r13
   162dc:	mov    edi,eax
   162de:	call   58d0 <tcgetattr@plt>
   162e3:	test   eax,eax
   162e5:	jne    163ce <util_getpass+0x13e>
   162eb:	mov    rax,QWORD PTR [rsp+0x30]
   162f0:	movdqa xmm0,XMMWORD PTR [rsp]
   162f5:	movdqa xmm1,XMMWORD PTR [rsp+0x10]
   162fb:	movdqa xmm2,XMMWORD PTR [rsp+0x20]
   16301:	mov    QWORD PTR [rsp+0x70],rax
   16306:	mov    rdi,QWORD PTR [rip+0xf293]        # 255a0 <stdout@@GLIBC_2.2.5>
   1630d:	mov    eax,DWORD PTR [rsp+0x38]
   16311:	movaps XMMWORD PTR [rsp+0x40],xmm0
   16316:	movaps XMMWORD PTR [rsp+0x50],xmm1
   1631b:	and    DWORD PTR [rsp+0x4c],0xfffffff7
   16320:	mov    DWORD PTR [rsp+0x78],eax
   16324:	movaps XMMWORD PTR [rsp+0x60],xmm2
   16329:	call   57e0 <fileno@plt>
   1632e:	lea    rdx,[rsp+0x40]
   16333:	mov    esi,0x2
   16338:	mov    edi,eax
   1633a:	call   58e0 <tcsetattr@plt>
   1633f:	test   eax,eax
   16341:	jne    163ce <util_getpass+0x13e>
   16347:	mov    esi,0x80
   1634c:	mov    edi,0x1
   16351:	call   5790 <calloc@plt>
   16356:	mov    rbp,rax
   16359:	test   rax,rax
   1635c:	je     163ce <util_getpass+0x13e>
   1635e:	xor    r14d,r14d
   16361:	jmp    1638a <util_getpass+0xfa>
   16363:	nop    DWORD PTR [rax+rax*1+0x0]
   16368:	cmp    eax,0x3
   1636b:	je     1639a <util_getpass+0x10a>
   1636d:	cmp    eax,0xa
   16370:	je     163e0 <util_getpass+0x150>
   16372:	cmp    eax,0xd
   16375:	je     163e0 <util_getpass+0x150>
   16377:	mov    BYTE PTR [rbp+r14*1+0x0],al
   1637c:	add    r14,0x1
   16380:	cmp    r14,0x7f
   16384:	je     164f0 <util_getpass+0x260>
   1638a:	mov    rdi,QWORD PTR [rip+0xf21f]        # 255b0 <stdin@@GLIBC_2.2.5>
   16391:	call   5a10 <getc@plt>
   16396:	test   eax,eax
   16398:	jne    16368 <util_getpass+0xd8>
   1639a:	mov    rdi,QWORD PTR [rip+0xf1ff]        # 255a0 <stdout@@GLIBC_2.2.5>
   163a1:	call   57e0 <fileno@plt>
   163a6:	mov    rdx,r13
   163a9:	mov    esi,0x2
   163ae:	mov    edi,eax
   163b0:	call   58e0 <tcsetattr@plt>
   163b5:	mov    rsi,QWORD PTR [rip+0xf1e4]        # 255a0 <stdout@@GLIBC_2.2.5>
   163bc:	mov    edi,0xa
   163c1:	call   5730 <fputc@plt>
   163c6:	mov    rdi,rbp
   163c9:	call   5590 <free@plt>
   163ce:	mov    r15d,0xffffffff
   163d4:	jmp    1643e <util_getpass+0x1ae>
   163d6:	cs nop WORD PTR [rax+rax*1+0x0]
   163e0:	mov    r15d,r14d
   163e3:	mov    rdi,QWORD PTR [rip+0xf1b6]        # 255a0 <stdout@@GLIBC_2.2.5>
   163ea:	call   57e0 <fileno@plt>
   163ef:	mov    rdx,r13
   163f2:	mov    esi,0x2
   163f7:	mov    edi,eax
   163f9:	call   58e0 <tcsetattr@plt>
   163fe:	mov    rsi,QWORD PTR [rip+0xf19b]        # 255a0 <stdout@@GLIBC_2.2.5>
   16405:	mov    edi,0xa
   1640a:	call   5730 <fputc@plt>
   1640f:	mov    r8,QWORD PTR [r12]
   16413:	test   r8,r8
   16416:	je     1642e <util_getpass+0x19e>
   16418:	test   rbx,rbx
   1641b:	je     16426 <util_getpass+0x196>
   1641d:	add    r14,0x1
   16421:	cmp    QWORD PTR [rbx],r14
   16424:	jae    16470 <util_getpass+0x1e0>
   16426:	mov    rdi,r8
   16429:	call   5590 <free@plt>
   1642e:	mov    QWORD PTR [r12],rbp
   16432:	test   rbx,rbx
   16435:	je     1643e <util_getpass+0x1ae>
   16437:	mov    QWORD PTR [rbx],0x80
   1643e:	mov    rax,QWORD PTR [rsp+0x88]
   16446:	xor    rax,QWORD PTR fs:0x28
   1644f:	jne    16512 <util_getpass+0x282>
   16455:	add    rsp,0x98
   1645c:	mov    eax,r15d
   1645f:	pop    rbx
   16460:	pop    rbp
   16461:	pop    r12
   16463:	pop    r13
   16465:	pop    r14
   16467:	pop    r15
   16469:	ret    
   1646a:	nop    WORD PTR [rax+rax*1+0x0]
   16470:	cmp    r14d,0x8
   16474:	jae    16490 <util_getpass+0x200>
   16476:	test   r14b,0x4
   1647a:	jne    164fb <util_getpass+0x26b>
   1647c:	test   r14d,r14d
   1647f:	jne    164cc <util_getpass+0x23c>
   16481:	mov    rdi,rbp
   16484:	call   5590 <free@plt>
   16489:	jmp    1643e <util_getpass+0x1ae>
   1648b:	nop    DWORD PTR [rax+rax*1+0x0]
   16490:	mov    rax,QWORD PTR [rbp+0x0]
   16494:	lea    rdi,[r8+0x8]
   16498:	mov    rsi,rbp
   1649b:	and    rdi,0xfffffffffffffff8
   1649f:	mov    QWORD PTR [r8],rax
   164a2:	mov    eax,r14d
   164a5:	mov    rdx,QWORD PTR [rbp+rax*1-0x8]
   164aa:	mov    QWORD PTR [r8+rax*1-0x8],rdx
   164af:	sub    r8,rdi
   164b2:	lea    ecx,[r14+r8*1]
   164b6:	sub    rsi,r8
   164b9:	shr    ecx,0x3
   164bc:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   164bf:	mov    rdi,rbp
   164c2:	call   5590 <free@plt>
   164c7:	jmp    1643e <util_getpass+0x1ae>
   164cc:	movzx  eax,BYTE PTR [rbp+0x0]
   164d0:	mov    BYTE PTR [r8],al
   164d3:	test   r14b,0x2
   164d7:	je     16481 <util_getpass+0x1f1>
   164d9:	mov    eax,r14d
   164dc:	movzx  edx,WORD PTR [rbp+rax*1-0x2]
   164e1:	mov    WORD PTR [r8+rax*1-0x2],dx
   164e7:	jmp    16481 <util_getpass+0x1f1>
   164e9:	nop    DWORD PTR [rax+0x0]
   164f0:	mov    r15d,0x7f
   164f6:	jmp    163e3 <util_getpass+0x153>
   164fb:	mov    eax,DWORD PTR [rbp+0x0]
   164fe:	mov    DWORD PTR [r8],eax
   16501:	mov    eax,r14d
   16504:	mov    edx,DWORD PTR [rbp+rax*1-0x4]
   16508:	mov    DWORD PTR [r8+rax*1-0x4],edx
   1650d:	jmp    16481 <util_getpass+0x1f1>
   16512:	call   5690 <__stack_chk_fail@plt>
   16517:	nop    WORD PTR [rax+rax*1+0x0]

0000000000016520 <util_get_pin>:
   16520:	endbr64 
   16524:	push   r12
   16526:	push   rbp
   16527:	mov    rbp,rsi
   1652a:	push   rbx
   1652b:	mov    rbx,rdi
   1652e:	call   5680 <strlen@plt>
   16533:	mov    r12,rax
   16536:	cmp    rax,0x4
   1653a:	jbe    16554 <util_get_pin+0x34>
   1653c:	mov    edx,0x4
   16541:	lea    rsi,[rip+0x8b9a]        # 1f0e2 <GOST_HASH2001_PARAMSET_OID+0x292>
   16548:	mov    rdi,rbx
   1654b:	call   5850 <strncasecmp@plt>
   16550:	test   eax,eax
   16552:	je     16560 <util_get_pin+0x40>
   16554:	mov    QWORD PTR [rbp+0x0],rbx
   16558:	mov    rax,r12
   1655b:	pop    rbx
   1655c:	pop    rbp
   1655d:	pop    r12
   1655f:	ret    
   16560:	lea    rdi,[rbx+0x4]
   16564:	call   5570 <getenv@plt>
   16569:	mov    QWORD PTR [rbp+0x0],rax
   1656d:	mov    rdi,rax
   16570:	test   rax,rax
   16573:	je     16580 <util_get_pin+0x60>
   16575:	pop    rbx
   16576:	pop    rbp
   16577:	pop    r12
   16579:	jmp    5680 <strlen@plt>
   1657e:	xchg   ax,ax
   16580:	xor    r12d,r12d
   16583:	jmp    16558 <util_get_pin+0x38>
   16585:	cs nop WORD PTR [rax+rax*1+0x0]
   1658f:	nop

0000000000016590 <C_UnloadModule>:
   16590:	endbr64 
   16594:	test   rdi,rdi
   16597:	je     165e0 <C_UnloadModule+0x50>
   16599:	push   rbp
   1659a:	cmp    DWORD PTR [rdi],0xd00bed00
   165a0:	mov    rbp,rdi
   165a3:	mov    eax,0x7
   165a8:	jne    165c6 <C_UnloadModule+0x36>
   165aa:	mov    rdi,QWORD PTR [rdi+0x8]
   165ae:	test   rdi,rdi
   165b1:	je     165bc <C_UnloadModule+0x2c>
   165b3:	call   167a0 <sc_dlclose>
   165b8:	test   eax,eax
   165ba:	js     165d0 <C_UnloadModule+0x40>
   165bc:	mov    rdi,rbp
   165bf:	call   5590 <free@plt>
   165c4:	xor    eax,eax
   165c6:	pop    rbp
   165c7:	ret    
   165c8:	nop    DWORD PTR [rax+rax*1+0x0]
   165d0:	mov    eax,0x6
   165d5:	pop    rbp
   165d6:	ret    
   165d7:	nop    WORD PTR [rax+rax*1+0x0]
   165e0:	mov    eax,0x7
   165e5:	ret    
   165e6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000165f0 <C_LoadModule>:
   165f0:	endbr64 
   165f4:	push   r13
   165f6:	mov    r13,rsi
   165f9:	mov    esi,0x10
   165fe:	push   r12
   16600:	push   rbp
   16601:	mov    rbp,rdi
   16604:	mov    edi,0x1
   16609:	sub    rsp,0x10
   1660d:	mov    rax,QWORD PTR fs:0x28
   16616:	mov    QWORD PTR [rsp+0x8],rax
   1661b:	xor    eax,eax
   1661d:	call   5790 <calloc@plt>
   16622:	mov    r12,rax
   16625:	test   rax,rax
   16628:	je     1668f <C_LoadModule+0x9f>
   1662a:	mov    DWORD PTR [rax],0xd00bed00
   16630:	test   rbp,rbp
   16633:	je     16721 <C_LoadModule+0x131>
   16639:	mov    rdi,rbp
   1663c:	call   16770 <sc_dlopen>
   16641:	mov    QWORD PTR [r12+0x8],rax
   16646:	mov    rdi,rax
   16649:	test   rax,rax
   1664c:	je     16738 <C_LoadModule+0x148>
   16652:	lea    rsi,[rip+0x8c69]        # 1f2c2 <GOST_HASH2001_PARAMSET_OID+0x472>
   16659:	call   16780 <sc_dlsym>
   1665e:	test   rax,rax
   16661:	je     166cd <C_LoadModule+0xdd>
   16663:	xor    ecx,ecx
   16665:	mov    QWORD PTR [rsp],0x0
   1666d:	mov    rdx,rsp
   16670:	xor    esi,esi
   16672:	lea    rdi,[rip+0x8c58]        # 1f2d1 <GOST_HASH2001_PARAMSET_OID+0x481>
   16679:	call   rax
   1667b:	mov    rcx,rax
   1667e:	test   rax,rax
   16681:	jne    166b0 <C_LoadModule+0xc0>
   16683:	mov    rax,QWORD PTR [rsp]
   16687:	mov    rax,QWORD PTR [rax+0x8]
   1668b:	mov    QWORD PTR [r13+0x0],rax
   1668f:	mov    rax,QWORD PTR [rsp+0x8]
   16694:	xor    rax,QWORD PTR fs:0x28
   1669d:	jne    1675f <C_LoadModule+0x16f>
   166a3:	add    rsp,0x10
   166a7:	mov    rax,r12
   166aa:	pop    rbp
   166ab:	pop    r12
   166ad:	pop    r13
   166af:	ret    
   166b0:	mov    rax,QWORD PTR [rip+0xc939]        # 22ff0 <stderr@@GLIBC_2.2.5-0x25f0>
   166b7:	lea    rdx,[rip+0x8c4a]        # 1f308 <GOST_HASH2001_PARAMSET_OID+0x4b8>
   166be:	mov    esi,0x1
   166c3:	mov    rdi,QWORD PTR [rax]
   166c6:	xor    eax,eax
   166c8:	call   59b0 <__fprintf_chk@plt>
   166cd:	mov    rdi,QWORD PTR [r12+0x8]
   166d2:	lea    rsi,[rip+0x8c00]        # 1f2d9 <GOST_HASH2001_PARAMSET_OID+0x489>
   166d9:	call   16780 <sc_dlsym>
   166de:	test   rax,rax
   166e1:	je     16721 <C_LoadModule+0x131>
   166e3:	mov    rdi,r13
   166e6:	call   rax
   166e8:	test   rax,rax
   166eb:	je     1668f <C_LoadModule+0x9f>
   166ed:	mov    rcx,rax
   166f0:	mov    rax,QWORD PTR [rip+0xc8f9]        # 22ff0 <stderr@@GLIBC_2.2.5-0x25f0>
   166f7:	lea    rdx,[rip+0x8bed]        # 1f2eb <GOST_HASH2001_PARAMSET_OID+0x49b>
   166fe:	mov    esi,0x1
   16703:	mov    rdi,QWORD PTR [rax]
   16706:	xor    eax,eax
   16708:	call   59b0 <__fprintf_chk@plt>
   1670d:	mov    rdi,r12
   16710:	call   16590 <C_UnloadModule>
   16715:	test   rax,rax
   16718:	mov    eax,0x0
   1671d:	cmove  r12,rax
   16721:	mov    rdi,r12
   16724:	xor    r12d,r12d
   16727:	call   5590 <free@plt>
   1672c:	jmp    1668f <C_LoadModule+0x9f>
   16731:	nop    DWORD PTR [rax+0x0]
   16738:	call   16790 <sc_dlerror>
   1673d:	lea    rdx,[rip+0x8b68]        # 1f2ac <GOST_HASH2001_PARAMSET_OID+0x45c>
   16744:	mov    esi,0x1
   16749:	mov    rcx,rax
   1674c:	mov    rax,QWORD PTR [rip+0xc89d]        # 22ff0 <stderr@@GLIBC_2.2.5-0x25f0>
   16753:	mov    rdi,QWORD PTR [rax]
   16756:	xor    eax,eax
   16758:	call   59b0 <__fprintf_chk@plt>
   1675d:	jmp    16721 <C_LoadModule+0x131>
   1675f:	call   5690 <__stack_chk_fail@plt>
   16764:	cs nop WORD PTR [rax+rax*1+0x0]
   1676e:	xchg   ax,ax

0000000000016770 <sc_dlopen>:
   16770:	endbr64 
   16774:	mov    esi,0x1
   16779:	jmp    5810 <dlopen@plt>
   1677e:	xchg   ax,ax

0000000000016780 <sc_dlsym>:
   16780:	endbr64 
   16784:	jmp    59e0 <dlsym@plt>
   16789:	nop    DWORD PTR [rax+0x0]

0000000000016790 <sc_dlerror>:
   16790:	endbr64 
   16794:	jmp    5a50 <dlerror@plt>
   16799:	nop    DWORD PTR [rax+0x0]

00000000000167a0 <sc_dlclose>:
   167a0:	endbr64 
   167a4:	jmp    5870 <dlclose@plt>
   167a9:	nop    DWORD PTR [rax+0x0]

00000000000167b0 <strlcat>:
   167b0:	endbr64 
   167b4:	push   r12
   167b6:	test   rdx,rdx
   167b9:	je     1681e <strlcat+0x6e>
   167bb:	lea    rcx,[rdi+rdx*1]
   167bf:	mov    rax,rdi
   167c2:	jmp    167d1 <strlcat+0x21>
   167c4:	nop    DWORD PTR [rax+0x0]
   167c8:	add    rax,0x1
   167cc:	cmp    rax,rcx
   167cf:	je     167d6 <strlcat+0x26>
   167d1:	cmp    BYTE PTR [rax],0x0
   167d4:	jne    167c8 <strlcat+0x18>
   167d6:	mov    r12,rax
   167d9:	sub    r12,rdi
   167dc:	sub    rdx,r12
   167df:	je     16821 <strlcat+0x71>
   167e1:	movzx  r8d,BYTE PTR [rsi]
   167e5:	mov    rcx,rsi
   167e8:	test   r8b,r8b
   167eb:	je     16815 <strlcat+0x65>
   167ed:	nop    DWORD PTR [rax]
   167f0:	cmp    rdx,0x1
   167f4:	je     16801 <strlcat+0x51>
   167f6:	mov    BYTE PTR [rax],r8b
   167f9:	sub    rdx,0x1
   167fd:	add    rax,0x1
   16801:	movzx  r8d,BYTE PTR [rcx+0x1]
   16806:	add    rcx,0x1
   1680a:	test   r8b,r8b
   1680d:	jne    167f0 <strlcat+0x40>
   1680f:	sub    rcx,rsi
   16812:	add    r12,rcx
   16815:	mov    BYTE PTR [rax],0x0
   16818:	mov    rax,r12
   1681b:	pop    r12
   1681d:	ret    
   1681e:	xor    r12d,r12d
   16821:	mov    rdi,rsi
   16824:	call   5680 <strlen@plt>
   16829:	add    r12,rax
   1682c:	mov    rax,r12
   1682f:	pop    r12
   16831:	ret    
   16832:	cs nop WORD PTR [rax+rax*1+0x0]
   1683c:	nop    DWORD PTR [rax+0x0]

0000000000016840 <strlcpy>:
   16840:	endbr64 
   16844:	test   rdx,rdx
   16847:	je     16890 <strlcpy+0x50>
   16849:	lea    rcx,[rdi+rdx*1-0x1]
   1684e:	mov    rax,rsi
   16851:	jmp    16867 <strlcpy+0x27>
   16853:	nop    DWORD PTR [rax+rax*1+0x0]
   16858:	movzx  edx,BYTE PTR [rax-0x1]
   1685c:	add    rdi,0x1
   16860:	mov    BYTE PTR [rdi-0x1],dl
   16863:	test   dl,dl
   16865:	je     16883 <strlcpy+0x43>
   16867:	mov    rdx,rax
   1686a:	add    rax,0x1
   1686e:	cmp    rdi,rcx
   16871:	jne    16858 <strlcpy+0x18>
   16873:	mov    rax,rdx
   16876:	mov    BYTE PTR [rdi],0x0
   16879:	add    rax,0x1
   1687d:	cmp    BYTE PTR [rax-0x1],0x0
   16881:	jne    16898 <strlcpy+0x58>
   16883:	sub    rax,rsi
   16886:	sub    rax,0x1
   1688a:	ret    
   1688b:	nop    DWORD PTR [rax+rax*1+0x0]
   16890:	mov    rax,rsi
   16893:	nop    DWORD PTR [rax+rax*1+0x0]
   16898:	add    rax,0x1
   1689c:	cmp    BYTE PTR [rax-0x1],0x0
   168a0:	jne    16898 <strlcpy+0x58>
   168a2:	sub    rax,rsi
   168a5:	sub    rax,0x1
   168a9:	ret    
   168aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000000168b0 <__libc_csu_init>:
   168b0:	endbr64 
   168b4:	push   r15
   168b6:	lea    r15,[rip+0xb473]        # 21d30 <__frame_dummy_init_array_entry>
   168bd:	push   r14
   168bf:	mov    r14,rdx
   168c2:	push   r13
   168c4:	mov    r13,rsi
   168c7:	push   r12
   168c9:	mov    r12d,edi
   168cc:	push   rbp
   168cd:	lea    rbp,[rip+0xb464]        # 21d38 <__do_global_dtors_aux_fini_array_entry>
   168d4:	push   rbx
   168d5:	sub    rbp,r15
   168d8:	sub    rsp,0x8
   168dc:	call   5000 <_init>
   168e1:	sar    rbp,0x3
   168e5:	je     16906 <__libc_csu_init+0x56>
   168e7:	xor    ebx,ebx
   168e9:	nop    DWORD PTR [rax+0x0]
   168f0:	mov    rdx,r14
   168f3:	mov    rsi,r13
   168f6:	mov    edi,r12d
   168f9:	call   QWORD PTR [r15+rbx*8]
   168fd:	add    rbx,0x1
   16901:	cmp    rbp,rbx
   16904:	jne    168f0 <__libc_csu_init+0x40>
   16906:	add    rsp,0x8
   1690a:	pop    rbx
   1690b:	pop    rbp
   1690c:	pop    r12
   1690e:	pop    r13
   16910:	pop    r14
   16912:	pop    r15
   16914:	ret    
   16915:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000016920 <__libc_csu_fini>:
   16920:	endbr64 
   16924:	ret    

Disassembly of section .fini:

0000000000016928 <_fini>:
   16928:	endbr64 
   1692c:	sub    rsp,0x8
   16930:	add    rsp,0x8
   16934:	ret    
