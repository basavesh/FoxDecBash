
/usr/bin/gzip:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <.init>:
    2000:	endbr64 
    2004:	sub    rsp,0x8
    2008:	mov    rax,QWORD PTR [rip+0x14fc1]        # 16fd0 <__ctype_b_loc@plt+0x14700>
    200f:	test   rax,rax
    2012:	je     2016 <__cxa_finalize@plt-0x46a>
    2014:	call   rax
    2016:	add    rsp,0x8
    201a:	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	push   QWORD PTR [rip+0x14d42]        # 16d68 <__ctype_b_loc@plt+0x14498>
    2026:	bnd jmp QWORD PTR [rip+0x14d43]        # 16d70 <__ctype_b_loc@plt+0x144a0>
    202d:	nop    DWORD PTR [rax]
    2030:	endbr64 
    2034:	push   0x0
    2039:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    203f:	nop
    2040:	endbr64 
    2044:	push   0x1
    2049:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    204f:	nop
    2050:	endbr64 
    2054:	push   0x2
    2059:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    205f:	nop
    2060:	endbr64 
    2064:	push   0x3
    2069:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    206f:	nop
    2070:	endbr64 
    2074:	push   0x4
    2079:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    207f:	nop
    2080:	endbr64 
    2084:	push   0x5
    2089:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    208f:	nop
    2090:	endbr64 
    2094:	push   0x6
    2099:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    209f:	nop
    20a0:	endbr64 
    20a4:	push   0x7
    20a9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    20af:	nop
    20b0:	endbr64 
    20b4:	push   0x8
    20b9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    20bf:	nop
    20c0:	endbr64 
    20c4:	push   0x9
    20c9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    20cf:	nop
    20d0:	endbr64 
    20d4:	push   0xa
    20d9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    20df:	nop
    20e0:	endbr64 
    20e4:	push   0xb
    20e9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    20ef:	nop
    20f0:	endbr64 
    20f4:	push   0xc
    20f9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    20ff:	nop
    2100:	endbr64 
    2104:	push   0xd
    2109:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    210f:	nop
    2110:	endbr64 
    2114:	push   0xe
    2119:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    211f:	nop
    2120:	endbr64 
    2124:	push   0xf
    2129:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    212f:	nop
    2130:	endbr64 
    2134:	push   0x10
    2139:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    213f:	nop
    2140:	endbr64 
    2144:	push   0x11
    2149:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    214f:	nop
    2150:	endbr64 
    2154:	push   0x12
    2159:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    215f:	nop
    2160:	endbr64 
    2164:	push   0x13
    2169:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    216f:	nop
    2170:	endbr64 
    2174:	push   0x14
    2179:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    217f:	nop
    2180:	endbr64 
    2184:	push   0x15
    2189:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    218f:	nop
    2190:	endbr64 
    2194:	push   0x16
    2199:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    219f:	nop
    21a0:	endbr64 
    21a4:	push   0x17
    21a9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    21af:	nop
    21b0:	endbr64 
    21b4:	push   0x18
    21b9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    21bf:	nop
    21c0:	endbr64 
    21c4:	push   0x19
    21c9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    21cf:	nop
    21d0:	endbr64 
    21d4:	push   0x1a
    21d9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    21df:	nop
    21e0:	endbr64 
    21e4:	push   0x1b
    21e9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    21ef:	nop
    21f0:	endbr64 
    21f4:	push   0x1c
    21f9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    21ff:	nop
    2200:	endbr64 
    2204:	push   0x1d
    2209:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    220f:	nop
    2210:	endbr64 
    2214:	push   0x1e
    2219:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    221f:	nop
    2220:	endbr64 
    2224:	push   0x1f
    2229:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    222f:	nop
    2230:	endbr64 
    2234:	push   0x20
    2239:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    223f:	nop
    2240:	endbr64 
    2244:	push   0x21
    2249:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    224f:	nop
    2250:	endbr64 
    2254:	push   0x22
    2259:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    225f:	nop
    2260:	endbr64 
    2264:	push   0x23
    2269:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    226f:	nop
    2270:	endbr64 
    2274:	push   0x24
    2279:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    227f:	nop
    2280:	endbr64 
    2284:	push   0x25
    2289:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    228f:	nop
    2290:	endbr64 
    2294:	push   0x26
    2299:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    229f:	nop
    22a0:	endbr64 
    22a4:	push   0x27
    22a9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    22af:	nop
    22b0:	endbr64 
    22b4:	push   0x28
    22b9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    22bf:	nop
    22c0:	endbr64 
    22c4:	push   0x29
    22c9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    22cf:	nop
    22d0:	endbr64 
    22d4:	push   0x2a
    22d9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    22df:	nop
    22e0:	endbr64 
    22e4:	push   0x2b
    22e9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    22ef:	nop
    22f0:	endbr64 
    22f4:	push   0x2c
    22f9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    22ff:	nop
    2300:	endbr64 
    2304:	push   0x2d
    2309:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    230f:	nop
    2310:	endbr64 
    2314:	push   0x2e
    2319:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    231f:	nop
    2320:	endbr64 
    2324:	push   0x2f
    2329:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    232f:	nop
    2330:	endbr64 
    2334:	push   0x30
    2339:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    233f:	nop
    2340:	endbr64 
    2344:	push   0x31
    2349:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    234f:	nop
    2350:	endbr64 
    2354:	push   0x32
    2359:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    235f:	nop
    2360:	endbr64 
    2364:	push   0x33
    2369:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    236f:	nop
    2370:	endbr64 
    2374:	push   0x34
    2379:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    237f:	nop
    2380:	endbr64 
    2384:	push   0x35
    2389:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    238f:	nop
    2390:	endbr64 
    2394:	push   0x36
    2399:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    239f:	nop
    23a0:	endbr64 
    23a4:	push   0x37
    23a9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    23af:	nop
    23b0:	endbr64 
    23b4:	push   0x38
    23b9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    23bf:	nop
    23c0:	endbr64 
    23c4:	push   0x39
    23c9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    23cf:	nop
    23d0:	endbr64 
    23d4:	push   0x3a
    23d9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    23df:	nop
    23e0:	endbr64 
    23e4:	push   0x3b
    23e9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    23ef:	nop
    23f0:	endbr64 
    23f4:	push   0x3c
    23f9:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    23ff:	nop
    2400:	endbr64 
    2404:	push   0x3d
    2409:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    240f:	nop
    2410:	endbr64 
    2414:	push   0x3e
    2419:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    241f:	nop
    2420:	endbr64 
    2424:	push   0x3f
    2429:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    242f:	nop
    2430:	endbr64 
    2434:	push   0x40
    2439:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    243f:	nop
    2440:	endbr64 
    2444:	push   0x41
    2449:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    244f:	nop
    2450:	endbr64 
    2454:	push   0x42
    2459:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    245f:	nop
    2460:	endbr64 
    2464:	push   0x43
    2469:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    246f:	nop
    2470:	endbr64 
    2474:	push   0x44
    2479:	bnd jmp 2020 <__cxa_finalize@plt-0x460>
    247f:	nop

Disassembly of section .plt.got:

0000000000002480 <__cxa_finalize@plt>:
    2480:	endbr64 
    2484:	bnd jmp QWORD PTR [rip+0x14b55]        # 16fe0 <__ctype_b_loc@plt+0x14710>
    248b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000002490 <__strcat_chk@plt>:
    2490:	endbr64 
    2494:	bnd jmp QWORD PTR [rip+0x148dd]        # 16d78 <__ctype_b_loc@plt+0x144a8>
    249b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <getenv@plt>:
    24a0:	endbr64 
    24a4:	bnd jmp QWORD PTR [rip+0x148d5]        # 16d80 <__ctype_b_loc@plt+0x144b0>
    24ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <sigprocmask@plt>:
    24b0:	endbr64 
    24b4:	bnd jmp QWORD PTR [rip+0x148cd]        # 16d88 <__ctype_b_loc@plt+0x144b8>
    24bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <__snprintf_chk@plt>:
    24c0:	endbr64 
    24c4:	bnd jmp QWORD PTR [rip+0x148c5]        # 16d90 <__ctype_b_loc@plt+0x144c0>
    24cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <raise@plt>:
    24d0:	endbr64 
    24d4:	bnd jmp QWORD PTR [rip+0x148bd]        # 16d98 <__ctype_b_loc@plt+0x144c8>
    24db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <free@plt>:
    24e0:	endbr64 
    24e4:	bnd jmp QWORD PTR [rip+0x148b5]        # 16da0 <__ctype_b_loc@plt+0x144d0>
    24eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <utimensat@plt>:
    24f0:	endbr64 
    24f4:	bnd jmp QWORD PTR [rip+0x148ad]        # 16da8 <__ctype_b_loc@plt+0x144d8>
    24fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <localtime@plt>:
    2500:	endbr64 
    2504:	bnd jmp QWORD PTR [rip+0x148a5]        # 16db0 <__ctype_b_loc@plt+0x144e0>
    250b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <abort@plt>:
    2510:	endbr64 
    2514:	bnd jmp QWORD PTR [rip+0x1489d]        # 16db8 <__ctype_b_loc@plt+0x144e8>
    251b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <__errno_location@plt>:
    2520:	endbr64 
    2524:	bnd jmp QWORD PTR [rip+0x14895]        # 16dc0 <__ctype_b_loc@plt+0x144f0>
    252b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <fdatasync@plt>:
    2530:	endbr64 
    2534:	bnd jmp QWORD PTR [rip+0x1488d]        # 16dc8 <__ctype_b_loc@plt+0x144f8>
    253b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <unlink@plt>:
    2540:	endbr64 
    2544:	bnd jmp QWORD PTR [rip+0x14885]        # 16dd0 <__ctype_b_loc@plt+0x14500>
    254b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <_exit@plt>:
    2550:	endbr64 
    2554:	bnd jmp QWORD PTR [rip+0x1487d]        # 16dd8 <__ctype_b_loc@plt+0x14508>
    255b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <strcpy@plt>:
    2560:	endbr64 
    2564:	bnd jmp QWORD PTR [rip+0x14875]        # 16de0 <__ctype_b_loc@plt+0x14510>
    256b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <unlinkat@plt>:
    2570:	endbr64 
    2574:	bnd jmp QWORD PTR [rip+0x1486d]        # 16de8 <__ctype_b_loc@plt+0x14518>
    257b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <isatty@plt>:
    2580:	endbr64 
    2584:	bnd jmp QWORD PTR [rip+0x14865]        # 16df0 <__ctype_b_loc@plt+0x14520>
    258b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <sigaction@plt>:
    2590:	endbr64 
    2594:	bnd jmp QWORD PTR [rip+0x1485d]        # 16df8 <__ctype_b_loc@plt+0x14528>
    259b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <fcntl@plt>:
    25a0:	endbr64 
    25a4:	bnd jmp QWORD PTR [rip+0x14855]        # 16e00 <__ctype_b_loc@plt+0x14530>
    25ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <clock_gettime@plt>:
    25b0:	endbr64 
    25b4:	bnd jmp QWORD PTR [rip+0x1484d]        # 16e08 <__ctype_b_loc@plt+0x14538>
    25bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <write@plt>:
    25c0:	endbr64 
    25c4:	bnd jmp QWORD PTR [rip+0x14845]        # 16e10 <__ctype_b_loc@plt+0x14540>
    25cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <fclose@plt>:
    25d0:	endbr64 
    25d4:	bnd jmp QWORD PTR [rip+0x1483d]        # 16e18 <__ctype_b_loc@plt+0x14548>
    25db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <strlen@plt>:
    25e0:	endbr64 
    25e4:	bnd jmp QWORD PTR [rip+0x14835]        # 16e20 <__ctype_b_loc@plt+0x14550>
    25eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <openat@plt>:
    25f0:	endbr64 
    25f4:	bnd jmp QWORD PTR [rip+0x1482d]        # 16e28 <__ctype_b_loc@plt+0x14558>
    25fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <__stack_chk_fail@plt>:
    2600:	endbr64 
    2604:	bnd jmp QWORD PTR [rip+0x14825]        # 16e30 <__ctype_b_loc@plt+0x14560>
    260b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <getopt_long@plt>:
    2610:	endbr64 
    2614:	bnd jmp QWORD PTR [rip+0x1481d]        # 16e38 <__ctype_b_loc@plt+0x14568>
    261b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <strrchr@plt>:
    2620:	endbr64 
    2624:	bnd jmp QWORD PTR [rip+0x14815]        # 16e40 <__ctype_b_loc@plt+0x14570>
    262b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <lseek@plt>:
    2630:	endbr64 
    2634:	bnd jmp QWORD PTR [rip+0x1480d]        # 16e48 <__ctype_b_loc@plt+0x14578>
    263b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <memset@plt>:
    2640:	endbr64 
    2644:	bnd jmp QWORD PTR [rip+0x14805]        # 16e50 <__ctype_b_loc@plt+0x14580>
    264b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <close@plt>:
    2650:	endbr64 
    2654:	bnd jmp QWORD PTR [rip+0x147fd]        # 16e58 <__ctype_b_loc@plt+0x14588>
    265b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <strspn@plt>:
    2660:	endbr64 
    2664:	bnd jmp QWORD PTR [rip+0x147f5]        # 16e60 <__ctype_b_loc@plt+0x14590>
    266b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <closedir@plt>:
    2670:	endbr64 
    2674:	bnd jmp QWORD PTR [rip+0x147ed]        # 16e68 <__ctype_b_loc@plt+0x14598>
    267b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <strcspn@plt>:
    2680:	endbr64 
    2684:	bnd jmp QWORD PTR [rip+0x147e5]        # 16e70 <__ctype_b_loc@plt+0x145a0>
    268b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <read@plt>:
    2690:	endbr64 
    2694:	bnd jmp QWORD PTR [rip+0x147dd]        # 16e78 <__ctype_b_loc@plt+0x145a8>
    269b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <memcmp@plt>:
    26a0:	endbr64 
    26a4:	bnd jmp QWORD PTR [rip+0x147d5]        # 16e80 <__ctype_b_loc@plt+0x145b0>
    26ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <utimes@plt>:
    26b0:	endbr64 
    26b4:	bnd jmp QWORD PTR [rip+0x147cd]        # 16e88 <__ctype_b_loc@plt+0x145b8>
    26bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <calloc@plt>:
    26c0:	endbr64 
    26c4:	bnd jmp QWORD PTR [rip+0x147c5]        # 16e90 <__ctype_b_loc@plt+0x145c0>
    26cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <strcmp@plt>:
    26d0:	endbr64 
    26d4:	bnd jmp QWORD PTR [rip+0x147bd]        # 16e98 <__ctype_b_loc@plt+0x145c8>
    26db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <putc@plt>:
    26e0:	endbr64 
    26e4:	bnd jmp QWORD PTR [rip+0x147b5]        # 16ea0 <__ctype_b_loc@plt+0x145d0>
    26eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <signal@plt>:
    26f0:	endbr64 
    26f4:	bnd jmp QWORD PTR [rip+0x147ad]        # 16ea8 <__ctype_b_loc@plt+0x145d8>
    26fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <__memmove_chk@plt>:
    2700:	endbr64 
    2704:	bnd jmp QWORD PTR [rip+0x147a5]        # 16eb0 <__ctype_b_loc@plt+0x145e0>
    270b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <__memcpy_chk@plt>:
    2710:	endbr64 
    2714:	bnd jmp QWORD PTR [rip+0x1479d]        # 16eb8 <__ctype_b_loc@plt+0x145e8>
    271b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <sigemptyset@plt>:
    2720:	endbr64 
    2724:	bnd jmp QWORD PTR [rip+0x14795]        # 16ec0 <__ctype_b_loc@plt+0x145f0>
    272b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <stat@plt>:
    2730:	endbr64 
    2734:	bnd jmp QWORD PTR [rip+0x1478d]        # 16ec8 <__ctype_b_loc@plt+0x145f8>
    273b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <strtol@plt>:
    2740:	endbr64 
    2744:	bnd jmp QWORD PTR [rip+0x14785]        # 16ed0 <__ctype_b_loc@plt+0x14600>
    274b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <memcpy@plt>:
    2750:	endbr64 
    2754:	bnd jmp QWORD PTR [rip+0x1477d]        # 16ed8 <__ctype_b_loc@plt+0x14608>
    275b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <fileno@plt>:
    2760:	endbr64 
    2764:	bnd jmp QWORD PTR [rip+0x14775]        # 16ee0 <__ctype_b_loc@plt+0x14610>
    276b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <readdir@plt>:
    2770:	endbr64 
    2774:	bnd jmp QWORD PTR [rip+0x1476d]        # 16ee8 <__ctype_b_loc@plt+0x14618>
    277b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <malloc@plt>:
    2780:	endbr64 
    2784:	bnd jmp QWORD PTR [rip+0x14765]        # 16ef0 <__ctype_b_loc@plt+0x14620>
    278b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <fflush@plt>:
    2790:	endbr64 
    2794:	bnd jmp QWORD PTR [rip+0x1475d]        # 16ef8 <__ctype_b_loc@plt+0x14628>
    279b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <__freading@plt>:
    27a0:	endbr64 
    27a4:	bnd jmp QWORD PTR [rip+0x14755]        # 16f00 <__ctype_b_loc@plt+0x14630>
    27ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <realloc@plt>:
    27b0:	endbr64 
    27b4:	bnd jmp QWORD PTR [rip+0x1474d]        # 16f08 <__ctype_b_loc@plt+0x14638>
    27bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <__strcpy_chk@plt>:
    27c0:	endbr64 
    27c4:	bnd jmp QWORD PTR [rip+0x14745]        # 16f10 <__ctype_b_loc@plt+0x14640>
    27cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <fchmod@plt>:
    27d0:	endbr64 
    27d4:	bnd jmp QWORD PTR [rip+0x1473d]        # 16f18 <__ctype_b_loc@plt+0x14648>
    27db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <fsync@plt>:
    27e0:	endbr64 
    27e4:	bnd jmp QWORD PTR [rip+0x14735]        # 16f20 <__ctype_b_loc@plt+0x14650>
    27eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <open@plt>:
    27f0:	endbr64 
    27f4:	bnd jmp QWORD PTR [rip+0x1472d]        # 16f28 <__ctype_b_loc@plt+0x14658>
    27fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <fseeko@plt>:
    2800:	endbr64 
    2804:	bnd jmp QWORD PTR [rip+0x14725]        # 16f30 <__ctype_b_loc@plt+0x14660>
    280b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <fchown@plt>:
    2810:	endbr64 
    2814:	bnd jmp QWORD PTR [rip+0x1471d]        # 16f38 <__ctype_b_loc@plt+0x14668>
    281b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <perror@plt>:
    2820:	endbr64 
    2824:	bnd jmp QWORD PTR [rip+0x14715]        # 16f40 <__ctype_b_loc@plt+0x14670>
    282b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <fdopendir@plt>:
    2830:	endbr64 
    2834:	bnd jmp QWORD PTR [rip+0x1470d]        # 16f48 <__ctype_b_loc@plt+0x14678>
    283b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <futimens@plt>:
    2840:	endbr64 
    2844:	bnd jmp QWORD PTR [rip+0x14705]        # 16f50 <__ctype_b_loc@plt+0x14680>
    284b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <sigismember@plt>:
    2850:	endbr64 
    2854:	bnd jmp QWORD PTR [rip+0x146fd]        # 16f58 <__ctype_b_loc@plt+0x14688>
    285b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002860 <exit@plt>:
    2860:	endbr64 
    2864:	bnd jmp QWORD PTR [rip+0x146f5]        # 16f60 <__ctype_b_loc@plt+0x14690>
    286b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002870 <fwrite@plt>:
    2870:	endbr64 
    2874:	bnd jmp QWORD PTR [rip+0x146ed]        # 16f68 <__ctype_b_loc@plt+0x14698>
    287b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002880 <fstat@plt>:
    2880:	endbr64 
    2884:	bnd jmp QWORD PTR [rip+0x146e5]        # 16f70 <__ctype_b_loc@plt+0x146a0>
    288b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002890 <getc@plt>:
    2890:	endbr64 
    2894:	bnd jmp QWORD PTR [rip+0x146dd]        # 16f78 <__ctype_b_loc@plt+0x146a8>
    289b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028a0 <sigaddset@plt>:
    28a0:	endbr64 
    28a4:	bnd jmp QWORD PTR [rip+0x146d5]        # 16f80 <__ctype_b_loc@plt+0x146b0>
    28ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028b0 <futimesat@plt>:
    28b0:	endbr64 
    28b4:	bnd jmp QWORD PTR [rip+0x146cd]        # 16f88 <__ctype_b_loc@plt+0x146b8>
    28bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028c0 <__ctype_tolower_loc@plt>:
    28c0:	endbr64 
    28c4:	bnd jmp QWORD PTR [rip+0x146c5]        # 16f90 <__ctype_b_loc@plt+0x146c0>
    28cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000028d0 <__ctype_b_loc@plt>:
    28d0:	endbr64 
    28d4:	bnd jmp QWORD PTR [rip+0x146bd]        # 16f98 <__ctype_b_loc@plt+0x146c8>
    28db:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000028e0 <.text>:
    28e0:	call   2510 <abort@plt>
    28e5:	call   2510 <abort@plt>
    28ea:	nop    WORD PTR [rax+rax*1+0x0]
    28f0:	endbr64 
    28f4:	push   r15
    28f6:	push   r14
    28f8:	push   r13
    28fa:	push   r12
    28fc:	push   rbp
    28fd:	mov    rbp,rsi
    2900:	push   rbx
    2901:	sub    rsp,0xc8
    2908:	mov    rbx,QWORD PTR [rsi]
    290b:	mov    DWORD PTR [rsp+0x4],edi
    290f:	mov    rax,QWORD PTR fs:0x28
    2918:	mov    QWORD PTR [rsp+0xb8],rax
    2920:	xor    eax,eax
    2922:	movzx  eax,BYTE PTR [rbx]
    2925:	cmp    al,0x2f
    2927:	jne    293c <__ctype_b_loc@plt+0x6c>
    2929:	nop    DWORD PTR [rax+0x0]
    2930:	movzx  eax,BYTE PTR [rbx+0x1]
    2934:	add    rbx,0x1
    2938:	cmp    al,0x2f
    293a:	je     2930 <__ctype_b_loc@plt+0x60>
    293c:	test   al,al
    293e:	je     297a <__ctype_b_loc@plt+0xaa>
    2940:	mov    rdx,rbx
    2943:	xor    ecx,ecx
    2945:	jmp    2965 <__ctype_b_loc@plt+0x95>
    2947:	nop    WORD PTR [rax+rax*1+0x0]
    2950:	test   cl,cl
    2952:	je     2959 <__ctype_b_loc@plt+0x89>
    2954:	mov    rbx,rdx
    2957:	xor    ecx,ecx
    2959:	movzx  eax,BYTE PTR [rdx+0x1]
    295d:	add    rdx,0x1
    2961:	test   al,al
    2963:	je     297a <__ctype_b_loc@plt+0xaa>
    2965:	cmp    al,0x2f
    2967:	jne    2950 <__ctype_b_loc@plt+0x80>
    2969:	movzx  eax,BYTE PTR [rdx+0x1]
    296d:	add    rdx,0x1
    2971:	mov    ecx,0x1
    2976:	test   al,al
    2978:	jne    2965 <__ctype_b_loc@plt+0x95>
    297a:	mov    rdi,rbx
    297d:	mov    QWORD PTR [rip+0x6c4b4],rbx        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    2984:	call   25e0 <strlen@plt>
    2989:	cmp    rax,0x4
    298d:	jbe    29ab <__ctype_b_loc@plt+0xdb>
    298f:	lea    rbx,[rbx+rax*1-0x4]
    2994:	lea    rsi,[rip+0xe8d4]        # 1126f <__ctype_b_loc@plt+0xe99f>
    299b:	mov    rdi,rbx
    299e:	call   26d0 <strcmp@plt>
    29a3:	test   eax,eax
    29a5:	je     2c5d <__ctype_b_loc@plt+0x38d>
    29ab:	lea    rdi,[rip+0xe8c2]        # 11274 <__ctype_b_loc@plt+0xe9a4>
    29b2:	call   24a0 <getenv@plt>
    29b7:	mov    r15,rax
    29ba:	test   rax,rax
    29bd:	je     3007 <__ctype_b_loc@plt+0x737>
    29c3:	mov    rdi,rax
    29c6:	call   7650 <__ctype_b_loc@plt+0x4d80>
    29cb:	cmp    BYTE PTR [rax],0x0
    29ce:	mov    QWORD PTR [rsp+0x8],rax
    29d3:	mov    r14,rax
    29d6:	je     2c82 <__ctype_b_loc@plt+0x3b2>
    29dc:	xor    r12d,r12d
    29df:	lea    rbx,[rip+0xe893]        # 11279 <__ctype_b_loc@plt+0xe9a9>
    29e6:	cs nop WORD PTR [rax+rax*1+0x0]
    29f0:	mov    rdi,r14
    29f3:	mov    rsi,rbx
    29f6:	call   2660 <strspn@plt>
    29fb:	add    r14,rax
    29fe:	cmp    BYTE PTR [r14],0x0
    2a02:	je     2c79 <__ctype_b_loc@plt+0x3a9>
    2a08:	mov    rsi,rbx
    2a0b:	mov    rdi,r14
    2a0e:	add    r12d,0x1
    2a12:	call   2680 <strcspn@plt>
    2a17:	add    rax,r14
    2a1a:	cmp    BYTE PTR [rax],0x0
    2a1d:	jne    2b88 <__ctype_b_loc@plt+0x2b8>
    2a23:	lea    edi,[r12+0x2]
    2a28:	lea    eax,[r12+0x1]
    2a2d:	mov    esi,0x8
    2a32:	movsxd rdi,edi
    2a35:	mov    DWORD PTR [rsp],eax
    2a38:	call   26c0 <calloc@plt>
    2a3d:	mov    r15,rax
    2a40:	test   rax,rax
    2a43:	je     3308 <__ctype_b_loc@plt+0xa38>
    2a49:	mov    rax,QWORD PTR [rbp+0x0]
    2a4d:	mov    r14,QWORD PTR [rsp+0x8]
    2a52:	lea    r13,[r15+0x8]
    2a56:	mov    QWORD PTR [r15],rax
    2a59:	mov    eax,DWORD PTR [rsp]
    2a5c:	lea    r12,[r15+rax*8]
    2a60:	mov    rdi,r14
    2a63:	mov    rsi,rbx
    2a66:	add    r13,0x8
    2a6a:	call   2660 <strspn@plt>
    2a6f:	add    r14,rax
    2a72:	mov    QWORD PTR [r13-0x8],r14
    2a76:	cs nop WORD PTR [rax+rax*1+0x0]
    2a80:	add    r14,0x1
    2a84:	cmp    BYTE PTR [r14-0x1],0x0
    2a89:	jne    2a80 <__ctype_b_loc@plt+0x1b0>
    2a8b:	cmp    r13,r12
    2a8e:	jne    2a60 <__ctype_b_loc@plt+0x190>
    2a90:	mov    QWORD PTR [r13+0x0],0x0
    2a98:	mov    rax,QWORD PTR [rsp+0x8]
    2a9d:	lea    r14,[rip+0x13d3c]        # 167e0 <__ctype_b_loc@plt+0x13f10>
    2aa4:	mov    QWORD PTR [rip+0x6c371],0x3        # 6ee20 <__ctype_b_loc@plt+0x6c550>
    2aaf:	lea    r13,[rip+0xf9ca]        # 12480 <__ctype_b_loc@plt+0xfbb0>
    2ab6:	mov    QWORD PTR [rip+0x6c373],rax        # 6ee30 <__ctype_b_loc@plt+0x6c560>
    2abd:	lea    rax,[rip+0xe6cc]        # 11190 <__ctype_b_loc@plt+0xe8c0>
    2ac4:	mov    QWORD PTR [rip+0x6c35d],rax        # 6ee28 <__ctype_b_loc@plt+0x6c558>
    2acb:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2ad3:	test   r15,r15
    2ad6:	je     2be0 <__ctype_b_loc@plt+0x310>
    2adc:	mov    rbx,QWORD PTR [rip+0x144dd]        # 16fc0 <__ctype_b_loc@plt+0x146f0>
    2ae3:	movsxd rax,DWORD PTR [rbx]
    2ae6:	mov    rax,QWORD PTR [r15+rax*8]
    2aea:	test   rax,rax
    2aed:	je     2ba0 <__ctype_b_loc@plt+0x2d0>
    2af3:	cmp    BYTE PTR [rax],0x2d
    2af6:	jne    2ba0 <__ctype_b_loc@plt+0x2d0>
    2afc:	cmp    BYTE PTR [rax+0x1],0x2d
    2b00:	jne    2ba0 <__ctype_b_loc@plt+0x2d0>
    2b06:	cmp    BYTE PTR [rax+0x2],0x0
    2b0a:	jne    2ba0 <__ctype_b_loc@plt+0x2d0>
    2b10:	test   r15,r15
    2b13:	je     2be0 <__ctype_b_loc@plt+0x310>
    2b19:	mov    ebx,0xb0
    2b1e:	mov    rbp,QWORD PTR [rip+0x144c3]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    2b25:	mov    rdx,QWORD PTR [rip+0x6c30c]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    2b2c:	lea    rsi,[rip+0xe508]        # 1103b <__ctype_b_loc@plt+0xe76b>
    2b33:	xor    eax,eax
    2b35:	mov    rdi,QWORD PTR [rbp+0x0]
    2b39:	call   70d0 <__ctype_b_loc@plt+0x4800>
    2b3e:	movsxd rax,DWORD PTR [rsp+0x1c]
    2b43:	test   eax,eax
    2b45:	js     31ea <__ctype_b_loc@plt+0x91a>
    2b4b:	shl    rax,0x5
    2b4f:	lea    rdx,[rip+0x13c8a]        # 167e0 <__ctype_b_loc@plt+0x13f10>
    2b56:	mov    rdi,QWORD PTR [rbp+0x0]
    2b5a:	lea    rsi,[rip+0xe73f]        # 112a0 <__ctype_b_loc@plt+0xe9d0>
    2b61:	mov    rdx,QWORD PTR [rdx+rax*1]
    2b65:	xor    eax,eax
    2b67:	call   70d0 <__ctype_b_loc@plt+0x4800>
    2b6c:	mov    rdi,QWORD PTR [rbp+0x0]
    2b70:	lea    rsi,[rip+0x102d9]        # 12e50 <__ctype_b_loc@plt+0x10580>
    2b77:	xor    eax,eax
    2b79:	call   70d0 <__ctype_b_loc@plt+0x4800>
    2b7e:	jmp    2c25 <__ctype_b_loc@plt+0x355>
    2b83:	nop    DWORD PTR [rax+rax*1+0x0]
    2b88:	cmp    BYTE PTR [rax+0x1],0x0
    2b8c:	mov    BYTE PTR [rax],0x0
    2b8f:	lea    r14,[rax+0x1]
    2b93:	jne    29f0 <__ctype_b_loc@plt+0x120>
    2b99:	jmp    2a23 <__ctype_b_loc@plt+0x153>
    2b9e:	xchg   ax,ax
    2ba0:	lea    r12,[rsp+0x1c]
    2ba5:	mov    edi,DWORD PTR [rsp]
    2ba8:	mov    rcx,r14
    2bab:	mov    rdx,r13
    2bae:	mov    r8,r12
    2bb1:	mov    rsi,r15
    2bb4:	call   2610 <getopt_long@plt>
    2bb9:	test   eax,eax
    2bbb:	js     2c30 <__ctype_b_loc@plt+0x360>
    2bbd:	lea    ebx,[rax+0x83]
    2bc3:	lea    eax,[rbx-0x31]
    2bc6:	cmp    eax,0xd3
    2bcb:	ja     2c11 <__ctype_b_loc@plt+0x341>
    2bcd:	lea    rcx,[rip+0xeb80]        # 11754 <__ctype_b_loc@plt+0xee84>
    2bd4:	movsxd rax,DWORD PTR [rcx+rax*4]
    2bd8:	add    rax,rcx
    2bdb:	notrack jmp rax
    2bde:	xchg   ax,ax
    2be0:	lea    r12,[rsp+0x1c]
    2be5:	mov    edi,DWORD PTR [rsp+0x4]
    2be9:	mov    r8,r12
    2bec:	mov    rcx,r14
    2bef:	mov    rdx,r13
    2bf2:	mov    rsi,rbp
    2bf5:	call   2610 <getopt_long@plt>
    2bfa:	mov    ebx,eax
    2bfc:	test   eax,eax
    2bfe:	js     3015 <__ctype_b_loc@plt+0x745>
    2c04:	lea    eax,[rbx-0x31]
    2c07:	xor    r15d,r15d
    2c0a:	cmp    eax,0xd3
    2c0f:	jbe    2bcd <__ctype_b_loc@plt+0x2fd>
    2c11:	cmp    ebx,0x82
    2c17:	jle    2c25 <__ctype_b_loc@plt+0x355>
    2c19:	cmp    ebx,0xc2
    2c1f:	jne    2b1e <__ctype_b_loc@plt+0x24e>
    2c25:	call   7250 <__ctype_b_loc@plt+0x4980>
    2c2a:	nop    WORD PTR [rax+rax*1+0x0]
    2c30:	movsxd rax,DWORD PTR [rbx]
    2c33:	cmp    eax,DWORD PTR [rsp]
    2c36:	jne    32e0 <__ctype_b_loc@plt+0xa10>
    2c3c:	cmp    DWORD PTR [rip+0x6c1d5],0x0        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    2c43:	je     2c9d <__ctype_b_loc@plt+0x3cd>
    2c45:	mov    rdi,r15
    2c48:	call   24e0 <free@plt>
    2c4d:	mov    DWORD PTR [rbx],0x1
    2c53:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2c5b:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    2c5d:	mov    BYTE PTR [rbx],0x0
    2c60:	jmp    29ab <__ctype_b_loc@plt+0xdb>
    2c65:	sub    ebx,0x83
    2c6b:	sub    ebx,0x30
    2c6e:	mov    DWORD PTR [rip+0x14624],ebx        # 17298 <__ctype_b_loc@plt+0x149c8>
    2c74:	jmp    2acb <__ctype_b_loc@plt+0x1fb>
    2c79:	test   r12d,r12d
    2c7c:	jne    2a23 <__ctype_b_loc@plt+0x153>
    2c82:	mov    rdi,QWORD PTR [rsp+0x8]
    2c87:	xor    r15d,r15d
    2c8a:	call   24e0 <free@plt>
    2c8f:	mov    QWORD PTR [rsp+0x8],0x0
    2c98:	jmp    2a98 <__ctype_b_loc@plt+0x1c8>
    2c9d:	mov    rax,QWORD PTR [rip+0x14344]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    2ca4:	mov    rdx,QWORD PTR [rip+0x6c18d]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    2cab:	lea    rsi,[rip+0x100d6]        # 12d88 <__ctype_b_loc@plt+0x104b8>
    2cb2:	mov    rdi,QWORD PTR [rax]
    2cb5:	xor    eax,eax
    2cb7:	call   70d0 <__ctype_b_loc@plt+0x4800>
    2cbc:	jmp    2c45 <__ctype_b_loc@plt+0x375>
    2cbe:	mov    rsi,QWORD PTR [rip+0x6c173]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    2cc5:	lea    rdi,[rip+0x10134]        # 12e00 <__ctype_b_loc@plt+0x10530>
    2ccc:	xor    eax,eax
    2cce:	lea    rbx,[rip+0x13a2b]        # 16700 <__ctype_b_loc@plt+0x13e30>
    2cd5:	lea    rbp,[rip+0xe3cf]        # 110ab <__ctype_b_loc@plt+0xe7db>
    2cdc:	call   d510 <__ctype_b_loc@plt+0xac40>
    2ce1:	lea    rsi,[rip+0x10020]        # 12d08 <__ctype_b_loc@plt+0x10438>
    2ce8:	nop    DWORD PTR [rax+rax*1+0x0]
    2cf0:	add    rbx,0x8
    2cf4:	mov    rdi,rbp
    2cf7:	xor    eax,eax
    2cf9:	call   d510 <__ctype_b_loc@plt+0xac40>
    2cfe:	mov    rsi,QWORD PTR [rbx]
    2d01:	test   rsi,rsi
    2d04:	jne    2cf0 <__ctype_b_loc@plt+0x420>
    2d06:	call   77a0 <__ctype_b_loc@plt+0x4ed0>
    2d0b:	mov    DWORD PTR [rip+0x1458b],0x1        # 172a0 <__ctype_b_loc@plt+0x149d0>
    2d15:	mov    DWORD PTR [rip+0x1457d],0x1        # 1729c <__ctype_b_loc@plt+0x149cc>
    2d1f:	jmp    2acb <__ctype_b_loc@plt+0x1fb>
    2d24:	mov    DWORD PTR [rip+0x6c0ea],0x1        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    2d2e:	mov    DWORD PTR [rip+0x6c0c0],0x0        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    2d38:	jmp    2acb <__ctype_b_loc@plt+0x1fb>
    2d3d:	add    DWORD PTR [rip+0x6c0b4],0x1        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    2d44:	mov    DWORD PTR [rip+0x6c0ca],0x0        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    2d4e:	jmp    2acb <__ctype_b_loc@plt+0x1fb>
    2d53:	mov    DWORD PTR [rip+0x14543],0x0        # 172a0 <__ctype_b_loc@plt+0x149d0>
    2d5d:	mov    DWORD PTR [rip+0x14535],0x0        # 1729c <__ctype_b_loc@plt+0x149cc>
    2d67:	jmp    2acb <__ctype_b_loc@plt+0x1fb>
    2d6c:	mov    DWORD PTR [rip+0x6c07a],0x1        # 6edf0 <__ctype_b_loc@plt+0x6c520>
    2d76:	jmp    2acb <__ctype_b_loc@plt+0x1fb>
    2d7b:	mov    DWORD PTR [rip+0x6c08f],0x1        # 6ee14 <__ctype_b_loc@plt+0x6c544>
    2d85:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2d8d:	test   r15,r15
    2d90:	jne    2adc <__ctype_b_loc@plt+0x20c>
    2d96:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    2d9b:	mov    DWORD PTR [rip+0x6c06b],0x1        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    2da5:	mov    DWORD PTR [rip+0x6c05d],0x1        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    2daf:	mov    DWORD PTR [rip+0x6c02f],0x1        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    2db9:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2dc1:	test   r15,r15
    2dc4:	jne    2adc <__ctype_b_loc@plt+0x20c>
    2dca:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    2dcf:	call   d5e0 <__ctype_b_loc@plt+0xad10>
    2dd4:	lea    rdi,[rip+0xe4e3]        # 112be <__ctype_b_loc@plt+0xe9ee>
    2ddb:	xor    eax,eax
    2ddd:	call   d510 <__ctype_b_loc@plt+0xac40>
    2de2:	lea    rdi,[rip+0xe493]        # 1127c <__ctype_b_loc@plt+0xe9ac>
    2de9:	xor    eax,eax
    2deb:	call   d510 <__ctype_b_loc@plt+0xac40>
    2df0:	call   77a0 <__ctype_b_loc@plt+0x4ed0>
    2df5:	mov    rdx,QWORD PTR [rip+0x6c03c]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    2dfc:	lea    rsi,[rip+0x10025]        # 12e28 <__ctype_b_loc@plt+0x10558>
    2e03:	mov    rax,QWORD PTR [rip+0x141de]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    2e0a:	mov    rdi,QWORD PTR [rax]
    2e0d:	xor    eax,eax
    2e0f:	call   70d0 <__ctype_b_loc@plt+0x4800>
    2e14:	jmp    2c25 <__ctype_b_loc@plt+0x355>
    2e19:	mov    rax,QWORD PTR [rip+0x141a8]        # 16fc8 <__ctype_b_loc@plt+0x146f8>
    2e20:	mov    rbx,QWORD PTR [rax]
    2e23:	mov    rdi,rbx
    2e26:	call   25e0 <strlen@plt>
    2e2b:	mov    QWORD PTR [rip+0x6bff6],rbx        # 6ee28 <__ctype_b_loc@plt+0x6c558>
    2e32:	mov    QWORD PTR [rip+0x6bfe7],rax        # 6ee20 <__ctype_b_loc@plt+0x6c550>
    2e39:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2e41:	test   r15,r15
    2e44:	jne    2adc <__ctype_b_loc@plt+0x20c>
    2e4a:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    2e4f:	mov    BYTE PTR [rip+0x6bfa6],0x1        # 6edfc <__ctype_b_loc@plt+0x6c52c>
    2e56:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2e5e:	test   r15,r15
    2e61:	jne    2adc <__ctype_b_loc@plt+0x20c>
    2e67:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    2e6c:	mov    BYTE PTR [rip+0x6bf79],0x1        # 6edec <__ctype_b_loc@plt+0x6c51c>
    2e73:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2e7b:	test   r15,r15
    2e7e:	jne    2adc <__ctype_b_loc@plt+0x20c>
    2e84:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    2e89:	mov    rbx,QWORD PTR [rip+0x14138]        # 16fc8 <__ctype_b_loc@plt+0x146f8>
    2e90:	mov    edx,0xa
    2e95:	xor    esi,esi
    2e97:	mov    rdi,QWORD PTR [rbx]
    2e9a:	call   2740 <strtol@plt>
    2e9f:	mov    rdx,QWORD PTR [rbx]
    2ea2:	mov    DWORD PTR [rip+0x143fc],eax        # 172a4 <__ctype_b_loc@plt+0x149d4>
    2ea8:	movzx  eax,BYTE PTR [rdx]
    2eab:	test   al,al
    2ead:	je     2acb <__ctype_b_loc@plt+0x1fb>
    2eb3:	add    rdx,0x1
    2eb7:	jmp    2ed2 <__ctype_b_loc@plt+0x602>
    2eb9:	nop    DWORD PTR [rax+0x0]
    2ec0:	mov    QWORD PTR [rbx],rdx
    2ec3:	movzx  eax,BYTE PTR [rdx]
    2ec6:	add    rdx,0x1
    2eca:	test   al,al
    2ecc:	je     2acb <__ctype_b_loc@plt+0x1fb>
    2ed2:	sub    eax,0x30
    2ed5:	cmp    al,0x9
    2ed7:	jbe    2ec0 <__ctype_b_loc@plt+0x5f0>
    2ed9:	mov    rdx,QWORD PTR [rip+0x6bf58]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    2ee0:	lea    rsi,[rip+0xfef1]        # 12dd8 <__ctype_b_loc@plt+0x10508>
    2ee7:	jmp    2e03 <__ctype_b_loc@plt+0x533>
    2eec:	mov    DWORD PTR [rip+0x6bf1a],0x1        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    2ef6:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2efe:	test   r15,r15
    2f01:	jne    2adc <__ctype_b_loc@plt+0x20c>
    2f07:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    2f0c:	mov    DWORD PTR [rip+0x6bef6],0x1        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    2f16:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2f1e:	test   r15,r15
    2f21:	jne    2adc <__ctype_b_loc@plt+0x20c>
    2f27:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    2f2c:	add    DWORD PTR [rip+0x6bed5],0x1        # 6ee08 <__ctype_b_loc@plt+0x6c538>
    2f33:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2f3b:	test   r15,r15
    2f3e:	jne    2adc <__ctype_b_loc@plt+0x20c>
    2f44:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    2f49:	mov    DWORD PTR [rip+0x6beb1],0x1        # 6ee04 <__ctype_b_loc@plt+0x6c534>
    2f53:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2f5b:	test   r15,r15
    2f5e:	jne    2adc <__ctype_b_loc@plt+0x20c>
    2f64:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    2f69:	mov    DWORD PTR [rip+0x6be9d],0x1        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    2f73:	mov    DWORD PTR [rip+0x6be8f],0x1        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    2f7d:	mov    DWORD PTR [rip+0x6be79],0x1        # 6ee00 <__ctype_b_loc@plt+0x6c530>
    2f87:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2f8f:	test   r15,r15
    2f92:	jne    2adc <__ctype_b_loc@plt+0x20c>
    2f98:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    2f9d:	mov    DWORD PTR [rip+0x142f9],0x1        # 172a0 <__ctype_b_loc@plt+0x149d0>
    2fa7:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2faf:	test   r15,r15
    2fb2:	jne    2adc <__ctype_b_loc@plt+0x20c>
    2fb8:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    2fbd:	call   d5e0 <__ctype_b_loc@plt+0xad10>
    2fc2:	jmp    2d06 <__ctype_b_loc@plt+0x436>
    2fc7:	mov    DWORD PTR [rip+0x142cf],0x0        # 172a0 <__ctype_b_loc@plt+0x149d0>
    2fd1:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2fd9:	test   r15,r15
    2fdc:	jne    2adc <__ctype_b_loc@plt+0x20c>
    2fe2:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    2fe7:	mov    DWORD PTR [rip+0x6be03],0x1        # 6edf4 <__ctype_b_loc@plt+0x6c524>
    2ff1:	mov    DWORD PTR [rsp+0x1c],0xffffffff
    2ff9:	test   r15,r15
    2ffc:	jne    2adc <__ctype_b_loc@plt+0x20c>
    3002:	jmp    2be5 <__ctype_b_loc@plt+0x315>
    3007:	mov    QWORD PTR [rsp+0x8],0x0
    3010:	jmp    2a98 <__ctype_b_loc@plt+0x1c8>
    3015:	cmp    DWORD PTR [rip+0x14284],0x0        # 172a0 <__ctype_b_loc@plt+0x149d0>
    301c:	jns    302a <__ctype_b_loc@plt+0x75a>
    301e:	mov    eax,DWORD PTR [rip+0x6bde8]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    3024:	mov    DWORD PTR [rip+0x14276],eax        # 172a0 <__ctype_b_loc@plt+0x149d0>
    302a:	cmp    DWORD PTR [rip+0x1426b],0x0        # 1729c <__ctype_b_loc@plt+0x149cc>
    3031:	jns    303f <__ctype_b_loc@plt+0x76f>
    3033:	mov    eax,DWORD PTR [rip+0x6bdd3]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    3039:	mov    DWORD PTR [rip+0x1425d],eax        # 1729c <__ctype_b_loc@plt+0x149cc>
    303f:	mov    rbx,QWORD PTR [rip+0x13f7a]        # 16fc0 <__ctype_b_loc@plt+0x146f0>
    3046:	cmp    DWORD PTR [rip+0x6bdc7],0x0        # 6ee14 <__ctype_b_loc@plt+0x6c544>
    304d:	mov    eax,DWORD PTR [rbx]
    304f:	mov    DWORD PTR [rsp],eax
    3052:	je     3098 <__ctype_b_loc@plt+0x7c8>
    3054:	cmp    DWORD PTR [rip+0x6bdbd],0x0        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    305b:	je     3079 <__ctype_b_loc@plt+0x7a9>
    305d:	mov    rax,QWORD PTR [rip+0x6bdbc]        # 6ee20 <__ctype_b_loc@plt+0x6c550>
    3064:	sub    rax,0x1
    3068:	cmp    rax,0x1d
    306c:	ja     31ba <__ctype_b_loc@plt+0x8ea>
    3072:	mov    eax,0xd
    3077:	jmp    30b7 <__ctype_b_loc@plt+0x7e7>
    3079:	mov    rax,QWORD PTR [rip+0x13f68]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    3080:	mov    rdx,QWORD PTR [rip+0x6bdb1]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    3087:	lea    rsi,[rip+0xfdf2]        # 12e80 <__ctype_b_loc@plt+0x105b0>
    308e:	mov    rdi,QWORD PTR [rax]
    3091:	xor    eax,eax
    3093:	call   70d0 <__ctype_b_loc@plt+0x4800>
    3098:	mov    rax,QWORD PTR [rip+0x6bd81]        # 6ee20 <__ctype_b_loc@plt+0x6c550>
    309f:	sub    rax,0x1
    30a3:	cmp    rax,0x1d
    30a7:	ja     31ba <__ctype_b_loc@plt+0x8ea>
    30ad:	mov    eax,DWORD PTR [rip+0x6bd65]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    30b3:	test   eax,eax
    30b5:	jne    3072 <__ctype_b_loc@plt+0x7a2>
    30b7:	lea    r12,[rip+0x6b882]        # 6e940 <__ctype_b_loc@plt+0x6c070>
    30be:	mov    DWORD PTR [rip+0x6bd20],eax        # 6ede4 <__ctype_b_loc@plt+0x6c514>
    30c4:	lea    r13,[rsp+0x20]
    30c9:	mov    rdi,r12
    30cc:	lea    r15,[rip+0xf37d]        # 12450 <__ctype_b_loc@plt+0xfb80>
    30d3:	call   2720 <sigemptyset@plt>
    30d8:	mov    r14d,DWORD PTR [r15]
    30db:	xor    esi,esi
    30dd:	mov    rdx,r13
    30e0:	mov    edi,r14d
    30e3:	call   2590 <sigaction@plt>
    30e8:	cmp    QWORD PTR [rsp+0x20],0x1
    30ee:	je     30fb <__ctype_b_loc@plt+0x82b>
    30f0:	mov    esi,r14d
    30f3:	mov    rdi,r12
    30f6:	call   28a0 <sigaddset@plt>
    30fb:	add    r15,0x4
    30ff:	lea    rax,[rip+0xf362]        # 12468 <__ctype_b_loc@plt+0xfb98>
    3106:	cmp    rax,r15
    3109:	jne    30d8 <__ctype_b_loc@plt+0x808>
    310b:	lea    rdi,[rsp+0x28]
    3110:	mov    ecx,0x20
    3115:	mov    rsi,r12
    3118:	xor    r15d,r15d
    311b:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    311d:	lea    rax,[rip+0x13ec]        # 4510 <__ctype_b_loc@plt+0x1c40>
    3124:	mov    DWORD PTR [rsp+0xa8],0x0
    312f:	mov    QWORD PTR [rsp+0x20],rax
    3134:	lea    rax,[rip+0xf315]        # 12450 <__ctype_b_loc@plt+0xfb80>
    313b:	mov    rdi,r12
    313e:	mov    r14d,DWORD PTR [rax+r15*4]
    3142:	mov    esi,r14d
    3145:	call   2850 <sigismember@plt>
    314a:	test   eax,eax
    314c:	je     316a <__ctype_b_loc@plt+0x89a>
    314e:	test   r15,r15
    3151:	jne    315d <__ctype_b_loc@plt+0x88d>
    3153:	mov    DWORD PTR [rip+0x6b7cb],0x1        # 6e928 <__ctype_b_loc@plt+0x6c058>
    315d:	xor    edx,edx
    315f:	mov    rsi,r13
    3162:	mov    edi,r14d
    3165:	call   2590 <sigaction@plt>
    316a:	add    r15,0x1
    316e:	cmp    r15,0x6
    3172:	jne    3134 <__ctype_b_loc@plt+0x864>
    3174:	mov    r13d,DWORD PTR [rsp+0x4]
    3179:	lea    r12,[rip+0xe140]        # 112c0 <__ctype_b_loc@plt+0xe9f0>
    3180:	sub    r13d,DWORD PTR [rsp]
    3184:	je     321f <__ctype_b_loc@plt+0x94f>
    318a:	movsxd rax,DWORD PTR [rbx]
    318d:	cmp    eax,DWORD PTR [rsp+0x4]
    3191:	jge    3224 <__ctype_b_loc@plt+0x954>
    3197:	mov    r14,QWORD PTR [rbp+rax*8+0x0]
    319c:	lea    edx,[rax+0x1]
    319f:	mov    rsi,r12
    31a2:	mov    DWORD PTR [rbx],edx
    31a4:	mov    rdi,r14
    31a7:	call   26d0 <strcmp@plt>
    31ac:	test   eax,eax
    31ae:	je     3207 <__ctype_b_loc@plt+0x937>
    31b0:	mov    rdi,r14
    31b3:	call   e450 <__ctype_b_loc@plt+0xbb80>
    31b8:	jmp    318a <__ctype_b_loc@plt+0x8ba>
    31ba:	mov    rax,QWORD PTR [rip+0x13e27]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    31c1:	mov    rcx,QWORD PTR [rip+0x6bc60]        # 6ee28 <__ctype_b_loc@plt+0x6c558>
    31c8:	lea    rsi,[rip+0xe0d8]        # 112a7 <__ctype_b_loc@plt+0xe9d7>
    31cf:	mov    rdx,QWORD PTR [rip+0x6bc62]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    31d6:	mov    rdi,QWORD PTR [rax]
    31d9:	xor    eax,eax
    31db:	call   70d0 <__ctype_b_loc@plt+0x4800>
    31e0:	mov    edi,0x1
    31e5:	call   4400 <__ctype_b_loc@plt+0x1b30>
    31ea:	mov    rdi,QWORD PTR [rbp+0x0]
    31ee:	lea    edx,[rbx-0x83]
    31f4:	lea    rsi,[rip+0xe09f]        # 1129a <__ctype_b_loc@plt+0xe9ca>
    31fb:	xor    eax,eax
    31fd:	call   70d0 <__ctype_b_loc@plt+0x4800>
    3202:	jmp    2b6c <__ctype_b_loc@plt+0x29c>
    3207:	mov    r14d,DWORD PTR [rip+0x6bc02]        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    320e:	call   dc80 <__ctype_b_loc@plt+0xb3b0>
    3213:	mov    DWORD PTR [rip+0x6bbf6],r14d        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    321a:	jmp    318a <__ctype_b_loc@plt+0x8ba>
    321f:	call   dc80 <__ctype_b_loc@plt+0xb3b0>
    3224:	cmp    BYTE PTR [rip+0x6bbb5],0x0        # 6ede0 <__ctype_b_loc@plt+0x6c510>
    322b:	jne    32b9 <__ctype_b_loc@plt+0x9e9>
    3231:	cmp    DWORD PTR [rip+0x6bbc8],0x0        # 6ee00 <__ctype_b_loc@plt+0x6c530>
    3238:	je     3267 <__ctype_b_loc@plt+0x997>
    323a:	cmp    DWORD PTR [rip+0x6bbd7],0x0        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    3241:	jne    3254 <__ctype_b_loc@plt+0x984>
    3243:	sub    r13d,0x1
    3247:	jle    3254 <__ctype_b_loc@plt+0x984>
    3249:	or     esi,0xffffffff
    324c:	or     edi,0xffffffff
    324f:	call   d770 <__ctype_b_loc@plt+0xaea0>
    3254:	mov    rax,QWORD PTR [rip+0x13d55]        # 16fb0 <__ctype_b_loc@plt+0x146e0>
    325b:	mov    rdi,QWORD PTR [rax]
    325e:	call   4f10 <__ctype_b_loc@plt+0x2640>
    3263:	test   eax,eax
    3265:	jne    329b <__ctype_b_loc@plt+0x9cb>
    3267:	cmp    DWORD PTR [rip+0x6bba2],0x0        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    326e:	je     32ae <__ctype_b_loc@plt+0x9de>
    3270:	cmp    BYTE PTR [rip+0x6bb75],0x0        # 6edec <__ctype_b_loc@plt+0x6c51c>
    3277:	je     32a0 <__ctype_b_loc@plt+0x9d0>
    3279:	mov    edi,0x1
    327e:	call   2530 <fdatasync@plt>
    3283:	test   eax,eax
    3285:	je     32a0 <__ctype_b_loc@plt+0x9d0>
    3287:	call   2520 <__errno_location@plt>
    328c:	cmp    DWORD PTR [rax],0x16
    328f:	je     32a0 <__ctype_b_loc@plt+0x9d0>
    3291:	call   2520 <__errno_location@plt>
    3296:	cmp    DWORD PTR [rax],0x9
    3299:	je     32ae <__ctype_b_loc@plt+0x9de>
    329b:	call   7750 <__ctype_b_loc@plt+0x4e80>
    32a0:	mov    edi,0x1
    32a5:	call   2650 <close@plt>
    32aa:	test   eax,eax
    32ac:	jne    3291 <__ctype_b_loc@plt+0x9c1>
    32ae:	mov    edi,DWORD PTR [rip+0x6b70c]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    32b4:	call   4400 <__ctype_b_loc@plt+0x1b30>
    32b9:	xor    edi,edi
    32bb:	call   2650 <close@plt>
    32c0:	test   eax,eax
    32c2:	je     3231 <__ctype_b_loc@plt+0x961>
    32c8:	mov    DWORD PTR [rip+0x6b70e],0x69647473        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    32d2:	mov    WORD PTR [rip+0x6b709],0x6e        # 6e9e4 <__ctype_b_loc@plt+0x6c114>
    32db:	call   7690 <__ctype_b_loc@plt+0x4dc0>
    32e0:	mov    rcx,QWORD PTR [r15+rax*8]
    32e4:	mov    rax,QWORD PTR [rip+0x13cfd]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    32eb:	lea    rsi,[rip+0xfa5e]        # 12d50 <__ctype_b_loc@plt+0x10480>
    32f2:	mov    rdx,QWORD PTR [rip+0x6bb3f]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    32f9:	mov    rdi,QWORD PTR [rax]
    32fc:	xor    eax,eax
    32fe:	call   70d0 <__ctype_b_loc@plt+0x4800>
    3303:	call   7250 <__ctype_b_loc@plt+0x4980>
    3308:	call   7620 <__ctype_b_loc@plt+0x4d50>
    330d:	nop    DWORD PTR [rax]
    3310:	endbr64 
    3314:	xor    ebp,ebp
    3316:	mov    r9,rdx
    3319:	pop    rsi
    331a:	mov    rdx,rsp
    331d:	and    rsp,0xfffffffffffffff0
    3321:	push   rax
    3322:	push   rsp
    3323:	xor    r8d,r8d
    3326:	xor    ecx,ecx
    3328:	lea    rdi,[rip+0xfffffffffffff5c1]        # 28f0 <__ctype_b_loc@plt+0x20>
    332f:	call   QWORD PTR [rip+0x13c6b]        # 16fa0 <__ctype_b_loc@plt+0x146d0>
    3335:	hlt    
    3336:	cs nop WORD PTR [rax+rax*1+0x0]
    3340:	lea    rdi,[rip+0x140d1]        # 17418 <__ctype_b_loc@plt+0x14b48>
    3347:	lea    rax,[rip+0x140ca]        # 17418 <__ctype_b_loc@plt+0x14b48>
    334e:	cmp    rax,rdi
    3351:	je     3368 <__ctype_b_loc@plt+0xa98>
    3353:	mov    rax,QWORD PTR [rip+0x13c4e]        # 16fa8 <__ctype_b_loc@plt+0x146d8>
    335a:	test   rax,rax
    335d:	je     3368 <__ctype_b_loc@plt+0xa98>
    335f:	jmp    rax
    3361:	nop    DWORD PTR [rax+0x0]
    3368:	ret    
    3369:	nop    DWORD PTR [rax+0x0]
    3370:	lea    rdi,[rip+0x140a1]        # 17418 <__ctype_b_loc@plt+0x14b48>
    3377:	lea    rsi,[rip+0x1409a]        # 17418 <__ctype_b_loc@plt+0x14b48>
    337e:	sub    rsi,rdi
    3381:	mov    rax,rsi
    3384:	shr    rsi,0x3f
    3388:	sar    rax,0x3
    338c:	add    rsi,rax
    338f:	sar    rsi,1
    3392:	je     33a8 <__ctype_b_loc@plt+0xad8>
    3394:	mov    rax,QWORD PTR [rip+0x13c3d]        # 16fd8 <__ctype_b_loc@plt+0x14708>
    339b:	test   rax,rax
    339e:	je     33a8 <__ctype_b_loc@plt+0xad8>
    33a0:	jmp    rax
    33a2:	nop    WORD PTR [rax+rax*1+0x0]
    33a8:	ret    
    33a9:	nop    DWORD PTR [rax+0x0]
    33b0:	endbr64 
    33b4:	cmp    BYTE PTR [rip+0x14c45],0x0        # 18000 <__ctype_b_loc@plt+0x15730>
    33bb:	jne    33e8 <__ctype_b_loc@plt+0xb18>
    33bd:	push   rbp
    33be:	cmp    QWORD PTR [rip+0x13c1a],0x0        # 16fe0 <__ctype_b_loc@plt+0x14710>
    33c6:	mov    rbp,rsp
    33c9:	je     33d7 <__ctype_b_loc@plt+0xb07>
    33cb:	mov    rdi,QWORD PTR [rip+0x13c36]        # 17008 <__ctype_b_loc@plt+0x14738>
    33d2:	call   2480 <__cxa_finalize@plt>
    33d7:	call   3340 <__ctype_b_loc@plt+0xa70>
    33dc:	mov    BYTE PTR [rip+0x14c1d],0x1        # 18000 <__ctype_b_loc@plt+0x15730>
    33e3:	pop    rbp
    33e4:	ret    
    33e5:	nop    DWORD PTR [rax]
    33e8:	ret    
    33e9:	nop    DWORD PTR [rax+0x0]
    33f0:	endbr64 
    33f4:	jmp    3370 <__ctype_b_loc@plt+0xaa0>
    33f9:	nop    DWORD PTR [rax+0x0]
    3400:	mov    eax,DWORD PTR [rip+0x9cbfa]        # a0000 <__ctype_b_loc@plt+0x9d730>
    3406:	mov    esi,0x7efa
    340b:	mov    edx,edi
    340d:	push   r15
    340f:	mov    r8d,DWORD PTR [rip+0x8ba76]        # 8ee8c <__ctype_b_loc@plt+0x8c5bc>
    3416:	lea    r9,[rip+0x8cbe3]        # 90000 <__ctype_b_loc@plt+0x8d730>
    341d:	push   r14
    341f:	cmp    eax,esi
    3421:	mov    rdi,rax
    3424:	push   r13
    3426:	mov    ecx,DWORD PTR [rip+0x9cbd8]        # a0004 <__ctype_b_loc@plt+0x9d734>
    342c:	cmovb  edi,esi
    342f:	push   r12
    3431:	movsxd rsi,r8d
    3434:	lea    r12,[r9+rax*1+0x102]
    343c:	push   rbp
    343d:	sub    edi,0x7efa
    3443:	push   rbx
    3444:	cmp    r8d,DWORD PTR [rip+0x8ba3d]        # 8ee88 <__ctype_b_loc@plt+0x8c5b8>
    344b:	lea    rbx,[r9+rax*1]
    344f:	movzx  ebp,BYTE PTR [rbx+rsi*1-0x1]
    3454:	movzx  r10d,BYTE PTR [rbx+rsi*1]
    3459:	jb     345e <__ctype_b_loc@plt+0xb8e>
    345b:	shr    ecx,0x2
    345e:	mov    r15d,DWORD PTR [rip+0x8ba1b]        # 8ee80 <__ctype_b_loc@plt+0x8c5b0>
    3465:	xor    r13d,r13d
    3468:	lea    r11,[rip+0x6ba11]        # 6ee80 <__ctype_b_loc@plt+0x6c5b0>
    346f:	jmp    3497 <__ctype_b_loc@plt+0xbc7>
    3471:	nop    DWORD PTR [rax+0x0]
    3478:	and    edx,0x7fff
    347e:	movzx  edx,WORD PTR [r11+rdx*2]
    3483:	cmp    edi,edx
    3485:	jae    35a0 <__ctype_b_loc@plt+0xcd0>
    348b:	sub    ecx,0x1
    348e:	je     35a0 <__ctype_b_loc@plt+0xcd0>
    3494:	movsxd rsi,r8d
    3497:	mov    eax,edx
    3499:	add    rax,r9
    349c:	cmp    BYTE PTR [rax+rsi*1],r10b
    34a0:	jne    3478 <__ctype_b_loc@plt+0xba8>
    34a2:	cmp    BYTE PTR [rax+rsi*1-0x1],bpl
    34a7:	jne    3478 <__ctype_b_loc@plt+0xba8>
    34a9:	movzx  esi,BYTE PTR [rbx]
    34ac:	cmp    BYTE PTR [rax],sil
    34af:	jne    3478 <__ctype_b_loc@plt+0xba8>
    34b1:	movzx  esi,BYTE PTR [rbx+0x1]
    34b5:	cmp    BYTE PTR [rax+0x1],sil
    34b9:	jne    3478 <__ctype_b_loc@plt+0xba8>
    34bb:	lea    rsi,[rbx+0x2]
    34bf:	add    rax,0x2
    34c3:	jmp    3538 <__ctype_b_loc@plt+0xc68>
    34c5:	nop    DWORD PTR [rax]
    34c8:	movzx  r14d,BYTE PTR [rax+0x2]
    34cd:	cmp    BYTE PTR [rsi+0x2],r14b
    34d1:	jne    35d0 <__ctype_b_loc@plt+0xd00>
    34d7:	movzx  r14d,BYTE PTR [rax+0x3]
    34dc:	cmp    BYTE PTR [rsi+0x3],r14b
    34e0:	jne    35d9 <__ctype_b_loc@plt+0xd09>
    34e6:	movzx  r14d,BYTE PTR [rax+0x4]
    34eb:	cmp    BYTE PTR [rsi+0x4],r14b
    34ef:	jne    35e2 <__ctype_b_loc@plt+0xd12>
    34f5:	movzx  r14d,BYTE PTR [rax+0x5]
    34fa:	cmp    BYTE PTR [rsi+0x5],r14b
    34fe:	jne    35f4 <__ctype_b_loc@plt+0xd24>
    3504:	movzx  r14d,BYTE PTR [rax+0x6]
    3509:	cmp    BYTE PTR [rsi+0x6],r14b
    350d:	jne    35eb <__ctype_b_loc@plt+0xd1b>
    3513:	movzx  r14d,BYTE PTR [rax+0x7]
    3518:	cmp    BYTE PTR [rsi+0x7],r14b
    351c:	jne    35fd <__ctype_b_loc@plt+0xd2d>
    3522:	add    rsi,0x8
    3526:	add    rax,0x8
    352a:	movzx  r14d,BYTE PTR [rax]
    352e:	cmp    BYTE PTR [rsi],r14b
    3531:	jne    3550 <__ctype_b_loc@plt+0xc80>
    3533:	cmp    r12,rsi
    3536:	jbe    3550 <__ctype_b_loc@plt+0xc80>
    3538:	movzx  r14d,BYTE PTR [rax+0x1]
    353d:	cmp    BYTE PTR [rsi+0x1],r14b
    3541:	je     34c8 <__ctype_b_loc@plt+0xbf8>
    3543:	add    rsi,0x1
    3547:	nop    WORD PTR [rax+rax*1+0x0]
    3550:	mov    rax,r12
    3553:	sub    rax,rsi
    3556:	mov    esi,0x102
    355b:	sub    esi,eax
    355d:	cmp    r8d,esi
    3560:	jge    3478 <__ctype_b_loc@plt+0xba8>
    3566:	cmp    r15d,esi
    3569:	jle    3606 <__ctype_b_loc@plt+0xd36>
    356f:	mov    DWORD PTR [rsp-0x4],edx
    3573:	and    edx,0x7fff
    3579:	movsxd rax,esi
    357c:	mov    r8d,esi
    357f:	movzx  edx,WORD PTR [r11+rdx*2]
    3584:	movzx  ebp,BYTE PTR [rbx+rax*1-0x1]
    3589:	mov    r13d,0x1
    358f:	movzx  r10d,BYTE PTR [rbx+rax*1]
    3594:	cmp    edi,edx
    3596:	jb     348b <__ctype_b_loc@plt+0xbbb>
    359c:	nop    DWORD PTR [rax+0x0]
    35a0:	test   r13b,r13b
    35a3:	jne    35b8 <__ctype_b_loc@plt+0xce8>
    35a5:	pop    rbx
    35a6:	mov    eax,r8d
    35a9:	pop    rbp
    35aa:	pop    r12
    35ac:	pop    r13
    35ae:	pop    r14
    35b0:	pop    r15
    35b2:	ret    
    35b3:	nop    DWORD PTR [rax+rax*1+0x0]
    35b8:	mov    eax,DWORD PTR [rsp-0x4]
    35bc:	pop    rbx
    35bd:	pop    rbp
    35be:	pop    r12
    35c0:	mov    DWORD PTR [rip+0x8b8be],eax        # 8ee84 <__ctype_b_loc@plt+0x8c5b4>
    35c6:	pop    r13
    35c8:	mov    eax,r8d
    35cb:	pop    r14
    35cd:	pop    r15
    35cf:	ret    
    35d0:	add    rsi,0x2
    35d4:	jmp    3550 <__ctype_b_loc@plt+0xc80>
    35d9:	add    rsi,0x3
    35dd:	jmp    3550 <__ctype_b_loc@plt+0xc80>
    35e2:	add    rsi,0x4
    35e6:	jmp    3550 <__ctype_b_loc@plt+0xc80>
    35eb:	add    rsi,0x6
    35ef:	jmp    3550 <__ctype_b_loc@plt+0xc80>
    35f4:	add    rsi,0x5
    35f8:	jmp    3550 <__ctype_b_loc@plt+0xc80>
    35fd:	add    rsi,0x7
    3601:	jmp    3550 <__ctype_b_loc@plt+0xc80>
    3606:	mov    DWORD PTR [rip+0x8b878],edx        # 8ee84 <__ctype_b_loc@plt+0x8c5b4>
    360c:	mov    r8d,esi
    360f:	jmp    35a5 <__ctype_b_loc@plt+0xcd5>
    3611:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    361c:	nop    DWORD PTR [rax+0x0]
    3620:	mov    eax,edi
    3622:	lea    r9d,[rax+rsi*1]
    3626:	cmp    eax,0xfff
    362b:	ja     3689 <__ctype_b_loc@plt+0xdb9>
    362d:	mov    r8d,eax
    3630:	lea    rcx,[rip+0x8c9c9]        # 90000 <__ctype_b_loc@plt+0x8d730>
    3637:	mov    esi,esi
    3639:	mov    rdi,QWORD PTR [rip+0x6b800]        # 6ee40 <__ctype_b_loc@plt+0x6c570>
    3640:	lea    rdx,[rcx+r8*1]
    3644:	lea    rcx,[rdx+rsi*1]
    3648:	lea    rsi,[rip+0x8c9b2]        # 90001 <__ctype_b_loc@plt+0x8d731>
    364f:	add    rsi,r8
    3652:	mov    r8d,0xfff
    3658:	sub    r8d,eax
    365b:	xor    eax,eax
    365d:	add    rsi,r8
    3660:	cmp    rcx,rdx
    3663:	je     3708 <__ctype_b_loc@plt+0xe38>
    3669:	movzx  eax,BYTE PTR [rdx]
    366c:	add    rdx,0x1
    3670:	add    rdi,rax
    3673:	mov    eax,0x1
    3678:	cmp    rsi,rdx
    367b:	jne    3660 <__ctype_b_loc@plt+0xd90>
    367d:	mov    QWORD PTR [rip+0x6b7bc],rdi        # 6ee40 <__ctype_b_loc@plt+0x6c570>
    3684:	mov    eax,0x1000
    3689:	cmp    eax,r9d
    368c:	jae    3718 <__ctype_b_loc@plt+0xe48>
    3692:	mov    rsi,QWORD PTR [rip+0x6b7a7]        # 6ee40 <__ctype_b_loc@plt+0x6c570>
    3699:	mov    r8,QWORD PTR [rip+0x6b7c0]        # 6ee60 <__ctype_b_loc@plt+0x6c590>
    36a0:	push   rbx
    36a1:	xor    r11d,r11d
    36a4:	lea    rcx,[rip+0x8c955]        # 90000 <__ctype_b_loc@plt+0x8d730>
    36ab:	mov    r10d,0xffffffff
    36b1:	mov    ebx,0x1
    36b6:	cs nop WORD PTR [rax+rax*1+0x0]
    36c0:	lea    edi,[rax-0x1000]
    36c6:	movzx  edx,BYTE PTR [rcx+rax*1]
    36ca:	movzx  edi,BYTE PTR [rcx+rdi*1]
    36ce:	sub    rdx,rdi
    36d1:	add    rsi,rdx
    36d4:	cmp    r8,r10
    36d7:	jne    36e7 <__ctype_b_loc@plt+0xe17>
    36d9:	test   esi,0xfff
    36df:	cmove  r8,rax
    36e3:	cmove  r11d,ebx
    36e7:	add    rax,0x1
    36eb:	cmp    r9d,eax
    36ee:	ja     36c0 <__ctype_b_loc@plt+0xdf0>
    36f0:	mov    QWORD PTR [rip+0x6b749],rsi        # 6ee40 <__ctype_b_loc@plt+0x6c570>
    36f7:	test   r11b,r11b
    36fa:	je     3703 <__ctype_b_loc@plt+0xe33>
    36fc:	mov    QWORD PTR [rip+0x6b75d],r8        # 6ee60 <__ctype_b_loc@plt+0x6c590>
    3703:	pop    rbx
    3704:	ret    
    3705:	nop    DWORD PTR [rax]
    3708:	test   al,al
    370a:	je     3718 <__ctype_b_loc@plt+0xe48>
    370c:	mov    QWORD PTR [rip+0x6b72d],rdi        # 6ee40 <__ctype_b_loc@plt+0x6c570>
    3713:	ret    
    3714:	nop    DWORD PTR [rax+0x0]
    3718:	ret    
    3719:	nop    DWORD PTR [rax+0x0]
    3720:	mov    eax,DWORD PTR [rip+0x6b172]        # 6e898 <__ctype_b_loc@plt+0x6bfc8>
    3726:	mov    QWORD PTR [rip+0x6b1ef],0xffffffffffffffff        # 6e920 <__ctype_b_loc@plt+0x6c050>
    3731:	mov    QWORD PTR [rip+0x6b1dc],0xffffffffffffffff        # 6e918 <__ctype_b_loc@plt+0x6c048>
    373c:	and    eax,0xf000
    3741:	cmp    eax,0x8000
    3746:	je     3750 <__ctype_b_loc@plt+0xe80>
    3748:	ret    
    3749:	nop    DWORD PTR [rax+0x0]
    3750:	mov    rax,QWORD PTR [rip+0x6b159]        # 6e8b0 <__ctype_b_loc@plt+0x6bfe0>
    3757:	mov    edx,DWORD PTR [rip+0x13b43]        # 172a0 <__ctype_b_loc@plt+0x149d0>
    375d:	mov    QWORD PTR [rip+0x6b1bc],rax        # 6e920 <__ctype_b_loc@plt+0x6c050>
    3764:	test   edx,edx
    3766:	jne    3788 <__ctype_b_loc@plt+0xeb8>
    3768:	mov    rax,QWORD PTR [rip+0x6b169]        # 6e8d8 <__ctype_b_loc@plt+0x6c008>
    376f:	mov    QWORD PTR [rip+0x6b19a],rax        # 6e910 <__ctype_b_loc@plt+0x6c040>
    3776:	mov    rax,QWORD PTR [rip+0x6b163]        # 6e8e0 <__ctype_b_loc@plt+0x6c010>
    377d:	mov    QWORD PTR [rip+0x6b194],rax        # 6e918 <__ctype_b_loc@plt+0x6c048>
    3784:	ret    
    3785:	nop    DWORD PTR [rax]
    3788:	mov    eax,DWORD PTR [rip+0x6b672]        # 6ee00 <__ctype_b_loc@plt+0x6c530>
    378e:	test   eax,eax
    3790:	je     3748 <__ctype_b_loc@plt+0xe78>
    3792:	jmp    3768 <__ctype_b_loc@plt+0xe98>
    3794:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    379f:	nop
    37a0:	xor    eax,eax
    37a2:	mov    edx,0xffffffff
    37a7:	test   rdi,rdi
    37aa:	je     37e9 <__ctype_b_loc@plt+0xf19>
    37ac:	mov    rdx,QWORD PTR [rip+0x13ad5]        # 17288 <__ctype_b_loc@plt+0x149b8>
    37b3:	test   esi,esi
    37b5:	je     37e1 <__ctype_b_loc@plt+0xf11>
    37b7:	mov    esi,esi
    37b9:	lea    rcx,[rdi+rsi*1]
    37bd:	lea    rsi,[rip+0xe47c]        # 11c40 <__ctype_b_loc@plt+0xf370>
    37c4:	nop    DWORD PTR [rax+0x0]
    37c8:	movzx  eax,BYTE PTR [rdi]
    37cb:	add    rdi,0x1
    37cf:	xor    eax,edx
    37d1:	shr    rdx,0x8
    37d5:	movzx  eax,al
    37d8:	xor    rdx,QWORD PTR [rsi+rax*8]
    37dc:	cmp    rdi,rcx
    37df:	jne    37c8 <__ctype_b_loc@plt+0xef8>
    37e1:	mov    eax,0xffffffff
    37e6:	xor    rax,rdx
    37e9:	mov    QWORD PTR [rip+0x13a98],rdx        # 17288 <__ctype_b_loc@plt+0x149b8>
    37f0:	ret    
    37f1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    37fc:	nop    DWORD PTR [rax+0x0]
    3800:	lea    rax,[rip+0x29339]        # 2cb40 <__ctype_b_loc@plt+0x2a270>
    3807:	lea    rdx,[rax+0x478]
    380e:	xchg   ax,ax
    3810:	xor    edi,edi
    3812:	add    rax,0x4
    3816:	mov    WORD PTR [rax-0x4],di
    381a:	cmp    rax,rdx
    381d:	jne    3810 <__ctype_b_loc@plt+0xf40>
    381f:	lea    rax,[rip+0x2921a]        # 2ca40 <__ctype_b_loc@plt+0x2a170>
    3826:	lea    rdx,[rax+0x78]
    382a:	nop    WORD PTR [rax+rax*1+0x0]
    3830:	xor    esi,esi
    3832:	add    rax,0x4
    3836:	mov    WORD PTR [rax-0x4],si
    383a:	cmp    rax,rdx
    383d:	jne    3830 <__ctype_b_loc@plt+0xf60>
    383f:	lea    rax,[rip+0x2915a]        # 2c9a0 <__ctype_b_loc@plt+0x2a0d0>
    3846:	lea    rdx,[rax+0x4c]
    384a:	nop    WORD PTR [rax+rax*1+0x0]
    3850:	xor    ecx,ecx
    3852:	add    rax,0x4
    3856:	mov    WORD PTR [rax-0x4],cx
    385a:	cmp    rax,rdx
    385d:	jne    3850 <__ctype_b_loc@plt+0xf80>
    385f:	mov    eax,0x1
    3864:	mov    QWORD PTR [rip+0x29121],0x0        # 2c990 <__ctype_b_loc@plt+0x2a0c0>
    386f:	mov    WORD PTR [rip+0x296ca],ax        # 2cf40 <__ctype_b_loc@plt+0x2a670>
    3876:	mov    QWORD PTR [rip+0x29107],0x0        # 2c988 <__ctype_b_loc@plt+0x2a0b8>
    3881:	mov    DWORD PTR [rip+0x290f5],0x0        # 2c980 <__ctype_b_loc@plt+0x2a0b0>
    388b:	mov    DWORD PTR [rip+0x290e7],0x0        # 2c97c <__ctype_b_loc@plt+0x2a0ac>
    3895:	mov    DWORD PTR [rip+0x290d9],0x0        # 2c978 <__ctype_b_loc@plt+0x2a0a8>
    389f:	mov    BYTE PTR [rip+0x290cf],0x0        # 2c975 <__ctype_b_loc@plt+0x2a0a5>
    38a6:	mov    BYTE PTR [rip+0x290c7],0x1        # 2c974 <__ctype_b_loc@plt+0x2a0a4>
    38ad:	ret    
    38ae:	xchg   ax,ax
    38b0:	push   r15
    38b2:	mov    r11,rdi
    38b5:	movsxd r8,esi
    38b8:	lea    rdi,[rip+0x287c1]        # 2c080 <__ctype_b_loc@plt+0x297b0>
    38bf:	push   r14
    38c1:	mov    r9d,DWORD PTR [rip+0x2855c]        # 2be24 <__ctype_b_loc@plt+0x29554>
    38c8:	lea    edx,[rsi+rsi*1]
    38cb:	push   r13
    38cd:	push   r12
    38cf:	push   rbp
    38d0:	push   rbx
    38d1:	mov    eax,DWORD PTR [rdi+r8*4]
    38d5:	mov    DWORD PTR [rsp-0x4],eax
    38d9:	cmp    edx,r9d
    38dc:	jg     3946 <__ctype_b_loc@plt+0x1076>
    38de:	movsxd r15,eax
    38e1:	lea    r14,[rip+0x28558]        # 2be40 <__ctype_b_loc@plt+0x29570>
    38e8:	movzx  r12d,WORD PTR [r11+r15*4]
    38ed:	jmp    38ff <__ctype_b_loc@plt+0x102f>
    38ef:	nop
    38f0:	lea    edx,[rax+rax*1]
    38f3:	mov    DWORD PTR [rdi+r8*4],ecx
    38f7:	movsxd r8,eax
    38fa:	cmp    edx,r9d
    38fd:	jg     3946 <__ctype_b_loc@plt+0x1076>
    38ff:	movsxd rax,edx
    3902:	movsxd r10,DWORD PTR [rdi+rax*4]
    3906:	mov    eax,edx
    3908:	movzx  esi,WORD PTR [r11+r10*4]
    390d:	mov    rcx,r10
    3910:	cmp    r9d,edx
    3913:	jle    3930 <__ctype_b_loc@plt+0x1060>
    3915:	add    eax,0x1
    3918:	movsxd rbx,eax
    391b:	movsxd r13,DWORD PTR [rdi+rbx*4]
    391f:	movzx  ebp,WORD PTR [r11+r13*4]
    3924:	cmp    bp,si
    3927:	jb     3960 <__ctype_b_loc@plt+0x1090>
    3929:	je     3970 <__ctype_b_loc@plt+0x10a0>
    392b:	mov    eax,edx
    392d:	nop    DWORD PTR [rax]
    3930:	cmp    r12w,si
    3934:	jb     3946 <__ctype_b_loc@plt+0x1076>
    3936:	jne    38f0 <__ctype_b_loc@plt+0x1020>
    3938:	movsxd rdx,ecx
    393b:	movzx  ebx,BYTE PTR [r14+rdx*1]
    3940:	cmp    BYTE PTR [r14+r15*1],bl
    3944:	ja     38f0 <__ctype_b_loc@plt+0x1020>
    3946:	mov    eax,DWORD PTR [rsp-0x4]
    394a:	mov    DWORD PTR [rdi+r8*4],eax
    394e:	pop    rbx
    394f:	pop    rbp
    3950:	pop    r12
    3952:	pop    r13
    3954:	pop    r14
    3956:	pop    r15
    3958:	ret    
    3959:	nop    DWORD PTR [rax+0x0]
    3960:	mov    esi,ebp
    3962:	mov    ecx,r13d
    3965:	jmp    3930 <__ctype_b_loc@plt+0x1060>
    3967:	nop    WORD PTR [rax+rax*1+0x0]
    3970:	movzx  r10d,BYTE PTR [r14+r10*1]
    3975:	cmp    BYTE PTR [r14+r13*1],r10b
    3979:	cmovbe ecx,r13d
    397d:	cmova  eax,edx
    3980:	jmp    3930 <__ctype_b_loc@plt+0x1060>
    3982:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    398d:	nop    DWORD PTR [rax]
    3990:	push   r15
    3992:	push   r14
    3994:	push   r13
    3996:	push   r12
    3998:	push   rbp
    3999:	push   rbx
    399a:	sub    rsp,0x78
    399e:	mov    rbx,QWORD PTR [rdi]
    39a1:	mov    QWORD PTR [rsp+0x30],rdi
    39a6:	mov    rax,QWORD PTR fs:0x28
    39af:	mov    QWORD PTR [rsp+0x68],rax
    39b4:	mov    rax,rdi
    39b7:	mov    rdi,QWORD PTR [rdi+0x8]
    39bb:	mov    DWORD PTR [rip+0x2845f],0x0        # 2be24 <__ctype_b_loc@plt+0x29554>
    39c5:	mov    DWORD PTR [rip+0x28451],0x23d        # 2be20 <__ctype_b_loc@plt+0x29550>
    39cf:	mov    QWORD PTR [rsp+0x38],rdi
    39d4:	mov    eax,DWORD PTR [rax+0x1c]
    39d7:	mov    DWORD PTR [rsp+0x8],eax
    39db:	test   eax,eax
    39dd:	jle    3fa2 <__ctype_b_loc@plt+0x16d2>
    39e3:	movsxd r15,eax
    39e6:	xor    edx,edx
    39e8:	xor    eax,eax
    39ea:	xor    esi,esi
    39ec:	mov    ecx,0xffffffff
    39f1:	lea    rbp,[rip+0x28688]        # 2c080 <__ctype_b_loc@plt+0x297b0>
    39f8:	lea    r12,[rip+0x28441]        # 2be40 <__ctype_b_loc@plt+0x29570>
    39ff:	jmp    3a27 <__ctype_b_loc@plt+0x1157>
    3a01:	nop    DWORD PTR [rax+0x0]
    3a08:	add    esi,0x1
    3a0b:	mov    BYTE PTR [r12+rax*1],0x0
    3a10:	mov    ecx,eax
    3a12:	movsxd rdx,esi
    3a15:	mov    DWORD PTR [rbp+rdx*4+0x0],eax
    3a19:	add    rax,0x1
    3a1d:	mov    edx,0x1
    3a22:	cmp    rax,r15
    3a25:	je     3a3e <__ctype_b_loc@plt+0x116e>
    3a27:	cmp    WORD PTR [rbx+rax*4],0x0
    3a2c:	jne    3a08 <__ctype_b_loc@plt+0x1138>
    3a2e:	xor    edi,edi
    3a30:	mov    WORD PTR [rbx+rax*4+0x2],di
    3a35:	add    rax,0x1
    3a39:	cmp    rax,r15
    3a3c:	jne    3a27 <__ctype_b_loc@plt+0x1157>
    3a3e:	mov    DWORD PTR [rsp+0x24],ecx
    3a42:	test   dl,dl
    3a44:	je     3f86 <__ctype_b_loc@plt+0x16b6>
    3a4a:	mov    DWORD PTR [rip+0x283d4],esi        # 2be24 <__ctype_b_loc@plt+0x29554>
    3a50:	cmp    esi,0x1
    3a53:	jg     3f8d <__ctype_b_loc@plt+0x16bd>
    3a59:	mov    edi,DWORD PTR [rsp+0x24]
    3a5d:	mov    r11,QWORD PTR [rsp+0x38]
    3a62:	movsxd rdx,esi
    3a65:	xor    r9d,r9d
    3a68:	lea    r13,[rip+0x28615]        # 2c084 <__ctype_b_loc@plt+0x297b4>
    3a6f:	mov    r10,QWORD PTR [rip+0x28f12]        # 2c988 <__ctype_b_loc@plt+0x2a0b8>
    3a76:	mov    r8,QWORD PTR [rip+0x28f13]        # 2c990 <__ctype_b_loc@plt+0x2a0c0>
    3a7d:	mov    QWORD PTR [rsp+0x10],r13
    3a82:	jmp    3abc <__ctype_b_loc@plt+0x11ec>
    3a84:	nop    DWORD PTR [rax+0x0]
    3a88:	mov    r14,rbx
    3a8b:	xor    ecx,ecx
    3a8d:	xor    eax,eax
    3a8f:	mov    DWORD PTR [r13+rdx*4+0x0],eax
    3a94:	mov    WORD PTR [r14],0x1
    3a9a:	mov    BYTE PTR [r12+rax*1],0x0
    3a9f:	test   r11,r11
    3aa2:	je     3ab3 <__ctype_b_loc@plt+0x11e3>
    3aa4:	movzx  eax,WORD PTR [r11+rcx*1+0x2]
    3aaa:	mov    r9d,0x1
    3ab0:	sub    r8,rax
    3ab3:	add    rdx,0x1
    3ab7:	cmp    edx,0x1
    3aba:	jg     3ad8 <__ctype_b_loc@plt+0x1208>
    3abc:	cmp    edi,0x1
    3abf:	jg     3a88 <__ctype_b_loc@plt+0x11b8>
    3ac1:	add    edi,0x1
    3ac4:	movsxd rcx,edi
    3ac7:	movsxd rax,edi
    3aca:	shl    rcx,0x2
    3ace:	lea    r14,[rbx+rcx*1]
    3ad2:	jmp    3a8f <__ctype_b_loc@plt+0x11bf>
    3ad4:	nop    DWORD PTR [rax+0x0]
    3ad8:	mov    eax,0x1
    3add:	xor    edx,edx
    3adf:	mov    DWORD PTR [rsp+0x24],edi
    3ae3:	sub    eax,esi
    3ae5:	cmp    esi,0x1
    3ae8:	cmovle edx,eax
    3aeb:	neg    rax
    3aee:	lea    edi,[rsi+rdx*1+0x1]
    3af2:	xor    edx,edx
    3af4:	cmp    esi,0x1
    3af7:	cmovg  rax,rdx
    3afb:	mov    DWORD PTR [rsp+0x28],edi
    3aff:	mov    DWORD PTR [rip+0x2831f],edi        # 2be24 <__ctype_b_loc@plt+0x29554>
    3b05:	lea    rax,[r10+rax*1-0x1]
    3b0a:	mov    QWORD PTR [rip+0x28e77],rax        # 2c988 <__ctype_b_loc@plt+0x2a0b8>
    3b11:	test   r9b,r9b
    3b14:	je     3b1d <__ctype_b_loc@plt+0x124d>
    3b16:	mov    QWORD PTR [rip+0x28e73],r8        # 2c990 <__ctype_b_loc@plt+0x2a0c0>
    3b1d:	mov    rax,QWORD PTR [rsp+0x30]
    3b22:	mov    edi,DWORD PTR [rsp+0x24]
    3b26:	mov    r13d,DWORD PTR [rsp+0x28]
    3b2b:	mov    DWORD PTR [rax+0x24],edi
    3b2e:	sar    r13d,1
    3b31:	nop    DWORD PTR [rax+0x0]
    3b38:	mov    esi,r13d
    3b3b:	mov    rdi,rbx
    3b3e:	call   38b0 <__ctype_b_loc@plt+0xfe0>
    3b43:	sub    r13d,0x1
    3b47:	jne    3b38 <__ctype_b_loc@plt+0x1268>
    3b49:	movsxd r13,DWORD PTR [rsp+0x28]
    3b4e:	movzx  edi,WORD PTR [rsp+0x8]
    3b53:	mov    r14d,0x23b
    3b59:	mov    rax,r14
    3b5c:	mov    r14,rbx
    3b5f:	add    edi,r13d
    3b62:	mov    rbx,rax
    3b65:	mov    WORD PTR [rsp+0x18],di
    3b6a:	nop    WORD PTR [rax+rax*1+0x0]
    3b70:	lea    eax,[r13-0x1]
    3b74:	mov    edx,DWORD PTR [rip+0x2850a]        # 2c084 <__ctype_b_loc@plt+0x297b4>
    3b7a:	mov    esi,0x1
    3b7f:	mov    rdi,r14
    3b82:	mov    DWORD PTR [rip+0x2829c],eax        # 2be24 <__ctype_b_loc@plt+0x29554>
    3b88:	mov    eax,DWORD PTR [rbp+r13*4+0x0]
    3b8d:	mov    DWORD PTR [rsp+0x8],edx
    3b91:	mov    DWORD PTR [rip+0x284ed],eax        # 2c084 <__ctype_b_loc@plt+0x297b4>
    3b97:	call   38b0 <__ctype_b_loc@plt+0xfe0>
    3b9c:	movsxd rdx,DWORD PTR [rsp+0x8]
    3ba1:	mov    rdi,QWORD PTR [rsp+0x10]
    3ba6:	mov    DWORD PTR [rip+0x28274],ebx        # 2be20 <__ctype_b_loc@plt+0x29550>
    3bac:	movsxd rax,DWORD PTR [rip+0x284d1]        # 2c084 <__ctype_b_loc@plt+0x297b4>
    3bb3:	mov    DWORD PTR [rdi+rbx*4],edx
    3bb6:	lea    rdi,[r14+rdx*4]
    3bba:	lea    r10,[r14+rax*4]
    3bbe:	mov    DWORD PTR [rbp+rbx*4+0x0],eax
    3bc2:	movzx  esi,WORD PTR [r10]
    3bc6:	add    si,WORD PTR [rdi]
    3bc9:	mov    WORD PTR [r14+r15*4],si
    3bce:	movzx  esi,BYTE PTR [r12+rdx*1]
    3bd3:	movzx  edx,BYTE PTR [r12+rax*1]
    3bd8:	lea    r11d,[rsi+0x1]
    3bdc:	cmp    sil,dl
    3bdf:	lea    eax,[rdx+0x1]
    3be2:	mov    esi,0x1
    3be7:	cmovae eax,r11d
    3beb:	sub    rbx,0x2
    3bef:	mov    BYTE PTR [r12+r15*1],al
    3bf3:	movzx  eax,WORD PTR [rsp+0x18]
    3bf8:	sub    eax,r13d
    3bfb:	sub    r13,0x1
    3bff:	mov    WORD PTR [r10+0x2],ax
    3c04:	mov    WORD PTR [rdi+0x2],ax
    3c08:	mov    rdi,r14
    3c0b:	mov    DWORD PTR [rip+0x28472],r15d        # 2c084 <__ctype_b_loc@plt+0x297b4>
    3c12:	add    r15,0x1
    3c16:	call   38b0 <__ctype_b_loc@plt+0xfe0>
    3c1b:	cmp    r13d,0x1
    3c1f:	jg     3b70 <__ctype_b_loc@plt+0x12a0>
    3c25:	mov    edi,DWORD PTR [rsp+0x28]
    3c29:	mov    ecx,0x23b
    3c2e:	pxor   xmm0,xmm0
    3c32:	mov    rbx,r14
    3c35:	lea    r8,[rip+0x281c4]        # 2be00 <__ctype_b_loc@plt+0x29530>
    3c3c:	mov    edx,edi
    3c3e:	neg    edx
    3c40:	add    edx,edx
    3c42:	cmp    edi,0x1
    3c45:	lea    eax,[rdx+0x23f]
    3c4b:	cmovle eax,ecx
    3c4e:	add    edx,0x241
    3c54:	mov    ecx,0x23d
    3c59:	cmp    edi,0x1
    3c5c:	cmovle edx,ecx
    3c5f:	mov    rdi,QWORD PTR [rsp+0x30]
    3c64:	movsxd rcx,DWORD PTR [rip+0x28419]        # 2c084 <__ctype_b_loc@plt+0x297b4>
    3c6b:	sub    edx,0x3
    3c6e:	mov    rsi,QWORD PTR [rdi+0x10]
    3c72:	mov    DWORD PTR [rip+0x281a8],edx        # 2be20 <__ctype_b_loc@plt+0x29550>
    3c78:	movsxd rdx,edx
    3c7b:	mov    DWORD PTR [rbp+rdx*4+0x0],ecx
    3c7f:	xor    edx,edx
    3c81:	mov    r15d,DWORD PTR [rdi+0x18]
    3c85:	mov    r9d,DWORD PTR [rdi+0x24]
    3c89:	mov    edi,DWORD PTR [rdi+0x20]
    3c8c:	mov    QWORD PTR [rsp+0x28],rsi
    3c91:	movaps XMMWORD PTR [rip+0x28168],xmm0        # 2be00 <__ctype_b_loc@plt+0x29530>
    3c98:	movaps XMMWORD PTR [rip+0x28171],xmm0        # 2be10 <__ctype_b_loc@plt+0x29540>
    3c9f:	mov    WORD PTR [r14+rcx*4+0x2],dx
    3ca5:	cmp    eax,0x23c
    3caa:	jg     3e5c <__ctype_b_loc@plt+0x158c>
    3cb0:	mov    edx,0x23c
    3cb5:	movsxd rcx,eax
    3cb8:	mov    QWORD PTR [rsp+0x30],rbp
    3cbd:	xor    r14d,r14d
    3cc0:	mov    rsi,QWORD PTR [rip+0x28cc9]        # 2c990 <__ctype_b_loc@plt+0x2a0c0>
    3cc7:	sub    edx,eax
    3cc9:	mov    r13,QWORD PTR [rsp+0x38]
    3cce:	lea    r10,[rbp+rcx*4+0x0]
    3cd3:	lea    rax,[rdx+rcx*1]
    3cd7:	mov    r12,QWORD PTR [rip+0x28caa]        # 2c988 <__ctype_b_loc@plt+0x2a0b8>
    3cde:	lea    r8,[rip+0x2811b]        # 2be00 <__ctype_b_loc@plt+0x29530>
    3ce5:	mov    QWORD PTR [rsp+0x18],rsi
    3cea:	mov    rsi,QWORD PTR [rsp+0x10]
    3cef:	mov    BYTE PTR [rsp+0x10],0x0
    3cf4:	lea    rax,[rsi+rax*4]
    3cf8:	xor    esi,esi
    3cfa:	mov    QWORD PTR [rsp+0x8],rax
    3cff:	nop
    3d00:	movsxd rcx,DWORD PTR [r10]
    3d03:	mov    rdx,rcx
    3d06:	shl    rcx,0x2
    3d0a:	lea    r11,[rbx+rcx*1]
    3d0e:	movzx  eax,WORD PTR [r11+0x2]
    3d13:	movzx  eax,WORD PTR [rbx+rax*4+0x2]
    3d18:	add    eax,0x1
    3d1b:	cmp    edi,eax
    3d1d:	jge    3d25 <__ctype_b_loc@plt+0x1455>
    3d1f:	add    r14d,0x1
    3d23:	mov    eax,edi
    3d25:	mov    WORD PTR [r11+0x2],ax
    3d2a:	cmp    r9d,edx
    3d2d:	jl     3d80 <__ctype_b_loc@plt+0x14b0>
    3d2f:	movsxd rsi,eax
    3d32:	xor    ebp,ebp
    3d34:	add    WORD PTR [r8+rsi*2],0x1
    3d3a:	cmp    r15d,edx
    3d3d:	jg     3d52 <__ctype_b_loc@plt+0x1482>
    3d3f:	mov    rsi,QWORD PTR [rsp+0x28]
    3d44:	sub    edx,r15d
    3d47:	movsxd rdx,edx
    3d4a:	mov    ebp,DWORD PTR [rsi+rdx*4]
    3d4d:	add    eax,ebp
    3d4f:	movsxd rsi,eax
    3d52:	movzx  eax,WORD PTR [r11]
    3d56:	imul   rsi,rax
    3d5a:	add    r12,rsi
    3d5d:	mov    esi,0x1
    3d62:	test   r13,r13
    3d65:	je     3d80 <__ctype_b_loc@plt+0x14b0>
    3d67:	movzx  edx,WORD PTR [r13+rcx*1+0x2]
    3d6d:	mov    BYTE PTR [rsp+0x10],0x1
    3d72:	add    edx,ebp
    3d74:	movsxd rdx,edx
    3d77:	imul   rdx,rax
    3d7b:	add    QWORD PTR [rsp+0x18],rdx
    3d80:	add    r10,0x4
    3d84:	cmp    r10,QWORD PTR [rsp+0x8]
    3d89:	jne    3d00 <__ctype_b_loc@plt+0x1430>
    3d8f:	cmp    BYTE PTR [rsp+0x10],0x0
    3d94:	mov    rbp,QWORD PTR [rsp+0x30]
    3d99:	je     3da7 <__ctype_b_loc@plt+0x14d7>
    3d9b:	mov    rax,QWORD PTR [rsp+0x18]
    3da0:	mov    QWORD PTR [rip+0x28be9],rax        # 2c990 <__ctype_b_loc@plt+0x2a0c0>
    3da7:	test   sil,sil
    3daa:	je     3db3 <__ctype_b_loc@plt+0x14e3>
    3dac:	mov    QWORD PTR [rip+0x28bd5],r12        # 2c988 <__ctype_b_loc@plt+0x2a0b8>
    3db3:	test   r14d,r14d
    3db6:	je     3e5c <__ctype_b_loc@plt+0x158c>
    3dbc:	lea    r12d,[r14-0x2]
    3dc0:	sub    r14d,0x1
    3dc4:	lea    r11d,[rdi-0x1]
    3dc8:	movsxd r13,edi
    3dcb:	and    r14d,0xfffffffe
    3dcf:	mov    r15d,r12d
    3dd2:	lea    rax,[r8+r13*2]
    3dd6:	mov    QWORD PTR [rsp+0x8],rbx
    3ddb:	sub    r15d,r14d
    3dde:	movsxd r14,r11d
    3de1:	mov    r10,r13
    3de4:	mov    rbx,rax
    3de7:	movzx  ecx,WORD PTR [r8+r14*2]
    3dec:	test   cx,cx
    3def:	jne    3e47 <__ctype_b_loc@plt+0x1577>
    3df1:	nop    DWORD PTR [rax+0x0]
    3df8:	mov    rdx,rbx
    3dfb:	mov    eax,r11d
    3dfe:	xchg   ax,ax
    3e00:	movzx  ecx,WORD PTR [rdx-0x4]
    3e04:	movsxd rsi,eax
    3e07:	sub    rdx,0x2
    3e0b:	sub    eax,0x1
    3e0e:	test   cx,cx
    3e11:	je     3e00 <__ctype_b_loc@plt+0x1530>
    3e13:	cdqe   
    3e15:	sub    ecx,0x1
    3e18:	mov    WORD PTR [r8+rax*2],cx
    3e1d:	add    WORD PTR [r8+rsi*2],0x2
    3e23:	movzx  eax,WORD PTR [r8+r13*2]
    3e28:	lea    esi,[rax-0x1]
    3e2b:	mov    WORD PTR [r8+r13*2],si
    3e30:	cmp    r12d,r15d
    3e33:	je     3ef0 <__ctype_b_loc@plt+0x1620>
    3e39:	movzx  ecx,WORD PTR [r8+r14*2]
    3e3e:	sub    r12d,0x2
    3e42:	test   cx,cx
    3e45:	je     3df8 <__ctype_b_loc@plt+0x1528>
    3e47:	movsxd rsi,edi
    3e4a:	mov    eax,r11d
    3e4d:	jmp    3e13 <__ctype_b_loc@plt+0x1543>
    3e4f:	nop
    3e50:	test   r14b,r14b
    3e53:	je     3e5c <__ctype_b_loc@plt+0x158c>
    3e55:	mov    QWORD PTR [rip+0x28b2c],r13        # 2c988 <__ctype_b_loc@plt+0x2a0b8>
    3e5c:	xor    edx,edx
    3e5e:	xor    eax,eax
    3e60:	lea    rcx,[rsp+0x42]
    3e65:	nop    DWORD PTR [rax]
    3e68:	add    ax,WORD PTR [r8+rdx*1]
    3e6d:	add    eax,eax
    3e6f:	mov    WORD PTR [rcx+rdx*1],ax
    3e73:	add    rdx,0x2
    3e77:	cmp    rdx,0x1e
    3e7b:	jne    3e68 <__ctype_b_loc@plt+0x1598>
    3e7d:	movsxd rax,DWORD PTR [rsp+0x24]
    3e82:	cmp    eax,0xffffffff
    3e85:	je     3ecd <__ctype_b_loc@plt+0x15fd>
    3e87:	lea    rdi,[rbx+rax*4+0x4]
    3e8c:	nop    DWORD PTR [rax+0x0]
    3e90:	movzx  ecx,WORD PTR [rbx+0x2]
    3e94:	test   ecx,ecx
    3e96:	je     3ec4 <__ctype_b_loc@plt+0x15f4>
    3e98:	movsxd rax,ecx
    3e9b:	movzx  edx,WORD PTR [rsp+rax*2+0x40]
    3ea0:	lea    esi,[rdx+0x1]
    3ea3:	mov    WORD PTR [rsp+rax*2+0x40],si
    3ea8:	xor    esi,esi
    3eaa:	nop    WORD PTR [rax+rax*1+0x0]
    3eb0:	mov    eax,edx
    3eb2:	shr    edx,1
    3eb4:	and    eax,0x1
    3eb7:	or     eax,esi
    3eb9:	lea    esi,[rax+rax*1]
    3ebc:	sub    ecx,0x1
    3ebf:	jne    3eb0 <__ctype_b_loc@plt+0x15e0>
    3ec1:	mov    WORD PTR [rbx],ax
    3ec4:	add    rbx,0x4
    3ec8:	cmp    rdi,rbx
    3ecb:	jne    3e90 <__ctype_b_loc@plt+0x15c0>
    3ecd:	mov    rax,QWORD PTR [rsp+0x68]
    3ed2:	sub    rax,QWORD PTR fs:0x28
    3edb:	jne    3fc4 <__ctype_b_loc@plt+0x16f4>
    3ee1:	add    rsp,0x78
    3ee5:	pop    rbx
    3ee6:	pop    rbp
    3ee7:	pop    r12
    3ee9:	pop    r13
    3eeb:	pop    r14
    3eed:	pop    r15
    3eef:	ret    
    3ef0:	mov    rbx,QWORD PTR [rsp+0x8]
    3ef5:	test   edi,edi
    3ef7:	je     3e5c <__ctype_b_loc@plt+0x158c>
    3efd:	mov    r13,QWORD PTR [rip+0x28a84]        # 2c988 <__ctype_b_loc@plt+0x2a0b8>
    3f04:	xor    r14d,r14d
    3f07:	mov    edx,0x23d
    3f0c:	nop    DWORD PTR [rax+0x0]
    3f10:	movzx  esi,si
    3f13:	test   esi,esi
    3f15:	je     3f62 <__ctype_b_loc@plt+0x1692>
    3f17:	lea    eax,[rdx-0x1]
    3f1a:	cdqe   
    3f1c:	nop    DWORD PTR [rax+0x0]
    3f20:	movsxd rcx,DWORD PTR [rbp+rax*4+0x0]
    3f25:	mov    edx,eax
    3f27:	cmp    r9d,ecx
    3f2a:	jl     3f80 <__ctype_b_loc@plt+0x16b0>
    3f2c:	lea    r12,[rbx+rcx*4]
    3f30:	movzx  r15d,WORD PTR [r12+0x2]
    3f36:	cmp    r15d,edi
    3f39:	je     3f59 <__ctype_b_loc@plt+0x1689>
    3f3b:	movzx  ecx,WORD PTR [r12]
    3f40:	mov    r14,r10
    3f43:	mov    WORD PTR [r12+0x2],di
    3f49:	sub    r14,r15
    3f4c:	imul   rcx,r14
    3f50:	mov    r14d,0x1
    3f56:	add    r13,rcx
    3f59:	sub    rax,0x1
    3f5d:	sub    esi,0x1
    3f60:	jne    3f20 <__ctype_b_loc@plt+0x1650>
    3f62:	mov    edi,r11d
    3f65:	sub    r10,0x1
    3f69:	test   r11d,r11d
    3f6c:	je     3e50 <__ctype_b_loc@plt+0x1580>
    3f72:	movzx  esi,WORD PTR [r8+r10*2]
    3f77:	sub    r11d,0x1
    3f7b:	jmp    3f10 <__ctype_b_loc@plt+0x1640>
    3f7d:	nop    DWORD PTR [rax]
    3f80:	sub    rax,0x1
    3f84:	jmp    3f20 <__ctype_b_loc@plt+0x1650>
    3f86:	xor    esi,esi
    3f88:	jmp    3a59 <__ctype_b_loc@plt+0x1189>
    3f8d:	lea    rax,[rip+0x280f0]        # 2c084 <__ctype_b_loc@plt+0x297b4>
    3f94:	mov    DWORD PTR [rsp+0x28],esi
    3f98:	mov    QWORD PTR [rsp+0x10],rax
    3f9d:	jmp    3b1d <__ctype_b_loc@plt+0x124d>
    3fa2:	mov    DWORD PTR [rsp+0x24],0xffffffff
    3faa:	movsxd r15,DWORD PTR [rsp+0x8]
    3faf:	xor    esi,esi
    3fb1:	lea    rbp,[rip+0x280c8]        # 2c080 <__ctype_b_loc@plt+0x297b0>
    3fb8:	lea    r12,[rip+0x27e81]        # 2be40 <__ctype_b_loc@plt+0x29570>
    3fbf:	jmp    3a59 <__ctype_b_loc@plt+0x1189>
    3fc4:	call   2600 <__stack_chk_fail@plt>
    3fc9:	nop    DWORD PTR [rax+0x0]
    3fd0:	movzx  edx,WORD PTR [rdi+0x2]
    3fd4:	movsxd rax,esi
    3fd7:	mov    ecx,0xffffffff
    3fdc:	mov    WORD PTR [rdi+rax*4+0x6],cx
    3fe1:	cmp    edx,0x1
    3fe4:	sbb    r9d,r9d
    3fe7:	add    r9d,0x4
    3feb:	cmp    edx,0x1
    3fee:	sbb    r8d,r8d
    3ff1:	and    r8d,0x83
    3ff8:	add    r8d,0x7
    3ffc:	test   esi,esi
    3ffe:	js     4099 <__ctype_b_loc@plt+0x17c9>
    4004:	lea    r11,[rdi+rax*4+0xa]
    4009:	lea    rcx,[rdi+0x6]
    400d:	xor    eax,eax
    400f:	mov    edi,0xffffffff
    4014:	lea    r10,[rip+0x28985]        # 2c9a0 <__ctype_b_loc@plt+0x2a0d0>
    401b:	jmp    405e <__ctype_b_loc@plt+0x178e>
    401d:	nop    DWORD PTR [rax]
    4020:	test   esi,esi
    4022:	je     40b8 <__ctype_b_loc@plt+0x17e8>
    4028:	cmp    esi,edi
    402a:	je     4035 <__ctype_b_loc@plt+0x1765>
    402c:	movsxd rax,esi
    402f:	add    WORD PTR [r10+rax*4],0x1
    4035:	add    WORD PTR [rip+0x289a3],0x1        # 2c9e0 <__ctype_b_loc@plt+0x2a110>
    403d:	test   edx,edx
    403f:	je     40a0 <__ctype_b_loc@plt+0x17d0>
    4041:	cmp    edx,esi
    4043:	jne    4080 <__ctype_b_loc@plt+0x17b0>
    4045:	mov    edi,edx
    4047:	mov    r9d,0x3
    404d:	mov    r8d,0x6
    4053:	xor    eax,eax
    4055:	add    rcx,0x4
    4059:	cmp    rcx,r11
    405c:	je     4099 <__ctype_b_loc@plt+0x17c9>
    405e:	add    eax,0x1
    4061:	mov    esi,edx
    4063:	movzx  edx,WORD PTR [rcx]
    4066:	cmp    eax,r8d
    4069:	jge    4020 <__ctype_b_loc@plt+0x1750>
    406b:	cmp    edx,esi
    406d:	je     4055 <__ctype_b_loc@plt+0x1785>
    406f:	cmp    eax,r9d
    4072:	jge    4020 <__ctype_b_loc@plt+0x1750>
    4074:	movsxd rdi,esi
    4077:	add    WORD PTR [r10+rdi*4],ax
    407c:	test   edx,edx
    407e:	je     40a0 <__ctype_b_loc@plt+0x17d0>
    4080:	add    rcx,0x4
    4084:	mov    edi,esi
    4086:	mov    r9d,0x4
    408c:	xor    eax,eax
    408e:	mov    r8d,0x7
    4094:	cmp    rcx,r11
    4097:	jne    405e <__ctype_b_loc@plt+0x178e>
    4099:	ret    
    409a:	nop    WORD PTR [rax+rax*1+0x0]
    40a0:	mov    edi,esi
    40a2:	mov    r9d,0x3
    40a8:	mov    r8d,0x8a
    40ae:	xor    eax,eax
    40b0:	jmp    4055 <__ctype_b_loc@plt+0x1785>
    40b2:	nop    WORD PTR [rax+rax*1+0x0]
    40b8:	cmp    eax,0xa
    40bb:	jg     40d0 <__ctype_b_loc@plt+0x1800>
    40bd:	add    WORD PTR [rip+0x2891f],0x1        # 2c9e4 <__ctype_b_loc@plt+0x2a114>
    40c5:	jmp    403d <__ctype_b_loc@plt+0x176d>
    40ca:	nop    WORD PTR [rax+rax*1+0x0]
    40d0:	add    WORD PTR [rip+0x28910],0x1        # 2c9e8 <__ctype_b_loc@plt+0x2a118>
    40d8:	jmp    403d <__ctype_b_loc@plt+0x176d>
    40dd:	nop    DWORD PTR [rax]
    40e0:	mov    eax,DWORD PTR [rip+0x28892]        # 2c978 <__ctype_b_loc@plt+0x2a0a8>
    40e6:	lea    rdx,[rip+0x29f13]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    40ed:	lea    r9d,[rax+0x1]
    40f1:	mov    BYTE PTR [rdx+rax*1],sil
    40f5:	movzx  eax,BYTE PTR [rip+0x28878]        # 2c974 <__ctype_b_loc@plt+0x2a0a4>
    40fc:	mov    DWORD PTR [rip+0x28875],r9d        # 2c978 <__ctype_b_loc@plt+0x2a0a8>
    4103:	test   edi,edi
    4105:	jne    41d0 <__ctype_b_loc@plt+0x1900>
    410b:	lea    rdx,[rip+0x28a2e]        # 2cb40 <__ctype_b_loc@plt+0x2a270>
    4112:	movsxd rsi,esi
    4115:	add    WORD PTR [rdx+rsi*4],0x1
    411a:	add    eax,eax
    411c:	mov    BYTE PTR [rip+0x28852],al        # 2c974 <__ctype_b_loc@plt+0x2a0a4>
    4122:	test   r9b,0x7
    4126:	jne    4156 <__ctype_b_loc@plt+0x1886>
    4128:	mov    eax,DWORD PTR [rip+0x28852]        # 2c980 <__ctype_b_loc@plt+0x2a0b0>
    412e:	movzx  ecx,BYTE PTR [rip+0x28840]        # 2c975 <__ctype_b_loc@plt+0x2a0a5>
    4135:	mov    BYTE PTR [rip+0x28838],0x1        # 2c974 <__ctype_b_loc@plt+0x2a0a4>
    413c:	mov    BYTE PTR [rip+0x28832],0x0        # 2c975 <__ctype_b_loc@plt+0x2a0a5>
    4143:	lea    edx,[rax+0x1]
    4146:	mov    DWORD PTR [rip+0x28834],edx        # 2c980 <__ctype_b_loc@plt+0x2a0b0>
    414c:	lea    rdx,[rip+0x169ad]        # 1ab00 <__ctype_b_loc@plt+0x18230>
    4153:	mov    BYTE PTR [rdx+rax*1],cl
    4156:	cmp    DWORD PTR [rip+0x1313b],0x2        # 17298 <__ctype_b_loc@plt+0x149c8>
    415d:	jle    41b0 <__ctype_b_loc@plt+0x18e0>
    415f:	test   r9d,0xfff
    4166:	jne    41b0 <__ctype_b_loc@plt+0x18e0>
    4168:	mov    ecx,r9d
    416b:	xor    edx,edx
    416d:	lea    rdi,[rip+0x288cc]        # 2ca40 <__ctype_b_loc@plt+0x2a170>
    4174:	shl    rcx,0x3
    4178:	lea    r8,[rip+0x12f81]        # 17100 <__ctype_b_loc@plt+0x14830>
    417f:	nop
    4180:	movsxd rax,DWORD PTR [r8+rdx*1]
    4184:	movzx  esi,WORD PTR [rdi+rdx*1]
    4188:	add    rdx,0x4
    418c:	add    rax,0x5
    4190:	imul   rax,rsi
    4194:	add    rcx,rax
    4197:	cmp    rdx,0x78
    419b:	jne    4180 <__ctype_b_loc@plt+0x18b0>
    419d:	mov    eax,r9d
    41a0:	shr    eax,1
    41a2:	cmp    eax,DWORD PTR [rip+0x287d4]        # 2c97c <__ctype_b_loc@plt+0x2a0ac>
    41a8:	ja     4260 <__ctype_b_loc@plt+0x1990>
    41ae:	xchg   ax,ax
    41b0:	mov    eax,0x1
    41b5:	cmp    r9d,0x7fff
    41bc:	je     41cd <__ctype_b_loc@plt+0x18fd>
    41be:	xor    eax,eax
    41c0:	cmp    DWORD PTR [rip+0x287b2],0x8000        # 2c97c <__ctype_b_loc@plt+0x2a0ac>
    41ca:	sete   al
    41cd:	ret    
    41ce:	xchg   ax,ax
    41d0:	lea    rcx,[rip+0x27b29]        # 2bd00 <__ctype_b_loc@plt+0x29430>
    41d7:	movsxd rsi,esi
    41da:	lea    edx,[rdi-0x1]
    41dd:	movzx  esi,BYTE PTR [rcx+rsi*1]
    41e1:	lea    rcx,[rip+0x28958]        # 2cb40 <__ctype_b_loc@plt+0x2a270>
    41e8:	add    WORD PTR [rcx+rsi*4+0x404],0x1
    41f1:	cmp    edx,0xff
    41f7:	jle    4248 <__ctype_b_loc@plt+0x1978>
    41f9:	mov    ecx,edx
    41fb:	lea    rsi,[rip+0x278fe]        # 2bb00 <__ctype_b_loc@plt+0x29230>
    4202:	sar    ecx,0x7
    4205:	add    ecx,0x100
    420b:	movsxd rcx,ecx
    420e:	movzx  ecx,BYTE PTR [rsi+rcx*1]
    4212:	lea    rdi,[rip+0x28827]        # 2ca40 <__ctype_b_loc@plt+0x2a170>
    4219:	or     BYTE PTR [rip+0x28756],al        # 2c975 <__ctype_b_loc@plt+0x2a0a5>
    421f:	add    WORD PTR [rdi+rcx*4],0x1
    4224:	mov    ecx,DWORD PTR [rip+0x28752]        # 2c97c <__ctype_b_loc@plt+0x2a0ac>
    422a:	lea    esi,[rcx+0x1]
    422d:	mov    DWORD PTR [rip+0x28749],esi        # 2c97c <__ctype_b_loc@plt+0x2a0ac>
    4233:	lea    rsi,[rip+0x178c6]        # 1bb00 <__ctype_b_loc@plt+0x19230>
    423a:	mov    WORD PTR [rsi+rcx*2],dx
    423e:	jmp    411a <__ctype_b_loc@plt+0x184a>
    4243:	nop    DWORD PTR [rax+rax*1+0x0]
    4248:	movsxd rcx,edx
    424b:	lea    rsi,[rip+0x278ae]        # 2bb00 <__ctype_b_loc@plt+0x29230>
    4252:	movzx  ecx,BYTE PTR [rsi+rcx*1]
    4256:	jmp    4212 <__ctype_b_loc@plt+0x1942>
    4258:	nop    DWORD PTR [rax+rax*1+0x0]
    4260:	mov    edx,DWORD PTR [rip+0x9bd9a]        # a0000 <__ctype_b_loc@plt+0x9d730>
    4266:	shr    rcx,0x3
    426a:	mov    eax,0x1
    426f:	sub    rdx,QWORD PTR [rip+0x6abe2]        # 6ee58 <__ctype_b_loc@plt+0x6c588>
    4276:	shr    rdx,1
    4279:	cmp    rdx,rcx
    427c:	jbe    41b0 <__ctype_b_loc@plt+0x18e0>
    4282:	ret    
    4283:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    428e:	xchg   ax,ax
    4290:	push   r12
    4292:	mov    r12d,DWORD PTR [rip+0x9bd67]        # a0000 <__ctype_b_loc@plt+0x9d730>
    4299:	mov    esi,0x10000
    429e:	push   rbp
    429f:	push   rbx
    42a0:	mov    ebx,DWORD PTR [rip+0x6abc2]        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    42a6:	lea    ebp,[rbx+r12*1]
    42aa:	sub    esi,ebp
    42ac:	cmp    esi,0xffffffff
    42af:	je     43c0 <__ctype_b_loc@plt+0x1af0>
    42b5:	cmp    r12d,0xfef9
    42bc:	ja     42f8 <__ctype_b_loc@plt+0x1a28>
    42be:	mov    ecx,DWORD PTR [rip+0x6ab8c]        # 6ee50 <__ctype_b_loc@plt+0x6c580>
    42c4:	test   ecx,ecx
    42c6:	jne    42f3 <__ctype_b_loc@plt+0x1a23>
    42c8:	mov    edi,DWORD PTR [rip+0x9bd32]        # a0000 <__ctype_b_loc@plt+0x9d730>
    42ce:	add    rdi,rbx
    42d1:	lea    rbx,[rip+0x8bd28]        # 90000 <__ctype_b_loc@plt+0x8d730>
    42d8:	add    rdi,rbx
    42db:	call   QWORD PTR [rip+0x6ab67]        # 6ee48 <__ctype_b_loc@plt+0x6c578>
    42e1:	lea    edx,[rax-0x1]
    42e4:	cmp    edx,0xfffffffd
    42e7:	ja     43ca <__ctype_b_loc@plt+0x1afa>
    42ed:	add    DWORD PTR [rip+0x6ab75],eax        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    42f3:	pop    rbx
    42f4:	pop    rbp
    42f5:	pop    r12
    42f7:	ret    
    42f8:	lea    rsi,[rip+0x93d01]        # 98000 <__ctype_b_loc@plt+0x95730>
    42ff:	mov    edx,0x8000
    4304:	sub    r12d,0x8000
    430b:	lea    rdi,[rsi-0x8000]
    4312:	call   2750 <memcpy@plt>
    4317:	mov    rax,QWORD PTR [rip+0x6ab42]        # 6ee60 <__ctype_b_loc@plt+0x6c590>
    431e:	mov    edx,0xffffffff
    4323:	sub    DWORD PTR [rip+0x8ab57],0x8000        # 8ee84 <__ctype_b_loc@plt+0x8c5b4>
    432d:	mov    DWORD PTR [rip+0x9bccc],r12d        # a0000 <__ctype_b_loc@plt+0x9d730>
    4334:	cmp    rax,rdx
    4337:	je     4346 <__ctype_b_loc@plt+0x1a76>
    4339:	sub    rax,0x8000
    433f:	mov    QWORD PTR [rip+0x6ab1a],rax        # 6ee60 <__ctype_b_loc@plt+0x6c590>
    4346:	sub    QWORD PTR [rip+0x6ab07],0x8000        # 6ee58 <__ctype_b_loc@plt+0x6c588>
    4351:	lea    rdi,[rip+0x7ab28]        # 7ee80 <__ctype_b_loc@plt+0x7c5b0>
    4358:	xor    r8d,r8d
    435b:	lea    rax,[rdi-0x10000]
    4362:	mov    rdx,rdi
    4365:	lea    r9,[rax+0x20000]
    436c:	nop    DWORD PTR [rax+0x0]
    4370:	movzx  esi,WORD PTR [rdx]
    4373:	test   si,si
    4376:	lea    ecx,[rsi-0x8000]
    437c:	cmovns ecx,r8d
    4380:	add    rdx,0x2
    4384:	mov    WORD PTR [rdx-0x2],cx
    4388:	cmp    r9,rdx
    438b:	jne    4370 <__ctype_b_loc@plt+0x1aa0>
    438d:	xor    esi,esi
    438f:	nop
    4390:	movzx  ecx,WORD PTR [rax]
    4393:	test   cx,cx
    4396:	lea    edx,[rcx-0x8000]
    439c:	cmovns edx,esi
    439f:	add    rax,0x2
    43a3:	mov    WORD PTR [rax-0x2],dx
    43a7:	cmp    rax,rdi
    43aa:	jne    4390 <__ctype_b_loc@plt+0x1ac0>
    43ac:	mov    esi,0x18000
    43b1:	sub    esi,ebp
    43b3:	jmp    42be <__ctype_b_loc@plt+0x19ee>
    43b8:	nop    DWORD PTR [rax+rax*1+0x0]
    43c0:	mov    esi,0xfffffffe
    43c5:	jmp    42be <__ctype_b_loc@plt+0x19ee>
    43ca:	mov    edx,DWORD PTR [rip+0x6aa98]        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    43d0:	mov    eax,DWORD PTR [rip+0x9bc2a]        # a0000 <__ctype_b_loc@plt+0x9d730>
    43d6:	mov    DWORD PTR [rip+0x6aa70],0x1        # 6ee50 <__ctype_b_loc@plt+0x6c580>
    43e0:	add    rax,rdx
    43e3:	xor    edx,edx
    43e5:	mov    WORD PTR [rbx+rax*1],dx
    43e9:	pop    rbx
    43ea:	pop    rbp
    43eb:	pop    r12
    43ed:	ret    
    43ee:	xchg   ax,ax
    43f0:	endbr64 
    43f4:	mov    rsi,QWORD PTR [rsi]
    43f7:	mov    rdi,QWORD PTR [rdi]
    43fa:	jmp    26d0 <strcmp@plt>
    43ff:	nop
    4400:	mov    eax,DWORD PTR [rip+0x2945a]        # 2d860 <__ctype_b_loc@plt+0x2af90>
    4406:	push   rbp
    4407:	mov    ebp,edi
    4409:	test   eax,eax
    440b:	jne    442e <__ctype_b_loc@plt+0x1b5e>
    440d:	mov    rdi,QWORD PTR [rip+0x6aa1c]        # 6ee30 <__ctype_b_loc@plt+0x6c560>
    4414:	mov    DWORD PTR [rip+0x29442],0x1        # 2d860 <__ctype_b_loc@plt+0x2af90>
    441e:	call   24e0 <free@plt>
    4423:	mov    QWORD PTR [rip+0x6aa02],0x0        # 6ee30 <__ctype_b_loc@plt+0x6c560>
    442e:	mov    edi,ebp
    4430:	call   2860 <exit@plt>
    4435:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    4440:	push   rbp
    4441:	push   rbx
    4442:	mov    ebx,edi
    4444:	sub    rsp,0x498
    444b:	mov    rax,QWORD PTR fs:0x28
    4454:	mov    QWORD PTR [rsp+0x488],rax
    445c:	xor    eax,eax
    445e:	test   dil,dil
    4461:	je     4490 <__ctype_b_loc@plt+0x1bc0>
    4463:	mov    edi,DWORD PTR [rip+0x12e17]        # 17280 <__ctype_b_loc@plt+0x149b0>
    4469:	test   edi,edi
    446b:	jns    44ae <__ctype_b_loc@plt+0x1bde>
    446d:	mov    rax,QWORD PTR [rsp+0x488]
    4475:	sub    rax,QWORD PTR fs:0x28
    447e:	jne    4508 <__ctype_b_loc@plt+0x1c38>
    4484:	add    rsp,0x498
    448b:	pop    rbx
    448c:	pop    rbp
    448d:	ret    
    448e:	xchg   ax,ax
    4490:	mov    rbp,rsp
    4493:	xor    edi,edi
    4495:	lea    rsi,[rip+0x6a4a4]        # 6e940 <__ctype_b_loc@plt+0x6c070>
    449c:	mov    rdx,rbp
    449f:	call   24b0 <sigprocmask@plt>
    44a4:	mov    edi,DWORD PTR [rip+0x12dd6]        # 17280 <__ctype_b_loc@plt+0x149b0>
    44aa:	test   edi,edi
    44ac:	js     44ec <__ctype_b_loc@plt+0x1c1c>
    44ae:	mov    DWORD PTR [rip+0x12dc8],0xffffffff        # 17280 <__ctype_b_loc@plt+0x149b0>
    44b8:	call   2650 <close@plt>
    44bd:	lea    rdi,[rsp+0x80]
    44c5:	lea    rax,[rip+0x28f94]        # 2d460 <__ctype_b_loc@plt+0x2ab90>
    44cc:	mov    rdx,rdi
    44cf:	lea    rsi,[rax+0x1]
    44d3:	movzx  eax,BYTE PTR [rax]
    44d6:	lea    rcx,[rdx+0x1]
    44da:	mov    BYTE PTR [rdx],al
    44dc:	test   al,al
    44de:	jne    4500 <__ctype_b_loc@plt+0x1c30>
    44e0:	call   2540 <unlink@plt>
    44e5:	mov    rbp,rsp
    44e8:	test   bl,bl
    44ea:	jne    446d <__ctype_b_loc@plt+0x1b9d>
    44ec:	xor    edx,edx
    44ee:	mov    rsi,rbp
    44f1:	mov    edi,0x2
    44f6:	call   24b0 <sigprocmask@plt>
    44fb:	jmp    446d <__ctype_b_loc@plt+0x1b9d>
    4500:	mov    rax,rsi
    4503:	mov    rdx,rcx
    4506:	jmp    44cf <__ctype_b_loc@plt+0x1bff>
    4508:	call   2600 <__stack_chk_fail@plt>
    450d:	nop    DWORD PTR [rax]
    4510:	endbr64 
    4514:	push   rbp
    4515:	mov    ebp,edi
    4517:	mov    edi,0x1
    451c:	call   4440 <__ctype_b_loc@plt+0x1b70>
    4521:	mov    eax,DWORD PTR [rip+0x6a8bd]        # 6ede4 <__ctype_b_loc@plt+0x6c514>
    4527:	cmp    eax,ebp
    4529:	je     453c <__ctype_b_loc@plt+0x1c6c>
    452b:	mov    edi,ebp
    452d:	xor    esi,esi
    452f:	call   26f0 <signal@plt>
    4534:	mov    edi,ebp
    4536:	pop    rbp
    4537:	jmp    24d0 <raise@plt>
    453c:	mov    edi,0x2
    4541:	call   2550 <_exit@plt>
    4546:	cs nop WORD PTR [rax+rax*1+0x0]
    4550:	push   rax
    4551:	pop    rax
    4552:	xor    edi,edi
    4554:	sub    rsp,0x8
    4558:	call   4440 <__ctype_b_loc@plt+0x1b70>
    455d:	mov    edi,0x1
    4562:	call   4400 <__ctype_b_loc@plt+0x1b30>
    4567:	nop    WORD PTR [rax+rax*1+0x0]
    4570:	push   r15
    4572:	pxor   xmm0,xmm0
    4576:	mov    r10d,esi
    4579:	push   r14
    457b:	mov    rax,r10
    457e:	mov    r14,r9
    4581:	lea    rsi,[rdi+r10*4]
    4585:	push   r13
    4587:	push   r12
    4589:	push   rbp
    458a:	mov    rbp,rdi
    458d:	push   rbx
    458e:	sub    rsp,0x638
    4595:	mov    DWORD PTR [rsp+0x64],edx
    4599:	mov    rbx,QWORD PTR [rsp+0x670]
    45a1:	mov    QWORD PTR [rsp+0x68],rcx
    45a6:	mov    QWORD PTR [rsp+0x70],r8
    45ab:	mov    rdx,QWORD PTR fs:0x28
    45b4:	mov    QWORD PTR [rsp+0x628],rdx
    45bc:	xor    edx,edx
    45be:	movaps XMMWORD PTR [rsp+0xd0],xmm0
    45c6:	mov    rdx,rdi
    45c9:	mov    DWORD PTR [rsp+0x110],0x0
    45d4:	movaps XMMWORD PTR [rsp+0xe0],xmm0
    45dc:	movaps XMMWORD PTR [rsp+0xf0],xmm0
    45e4:	movaps XMMWORD PTR [rsp+0x100],xmm0
    45ec:	nop    DWORD PTR [rax+0x0]
    45f0:	mov    ecx,DWORD PTR [rdx]
    45f2:	add    rdx,0x4
    45f6:	add    DWORD PTR [rsp+rcx*4+0xd0],0x1
    45fe:	cmp    rsi,rdx
    4601:	jne    45f0 <__ctype_b_loc@plt+0x1d20>
    4603:	mov    edx,DWORD PTR [rsp+0xd0]
    460a:	cmp    edx,eax
    460c:	je     4bc0 <__ctype_b_loc@plt+0x22f0>
    4612:	mov    r15d,DWORD PTR [rbx]
    4615:	mov    eax,0x1
    461a:	lea    rdi,[rsp+0xd0]
    4622:	mov    r8d,DWORD PTR [rdi+rax*4]
    4626:	mov    ecx,eax
    4628:	test   r8d,r8d
    462b:	jne    46ee <__ctype_b_loc@plt+0x1e1e>
    4631:	add    rax,0x1
    4635:	cmp    rax,0x11
    4639:	jne    4622 <__ctype_b_loc@plt+0x1d52>
    463b:	mov    DWORD PTR [rsp+0x28],0x11
    4643:	mov    eax,0x20000
    4648:	mov    ecx,0x11
    464d:	cmp    r15d,ecx
    4650:	cmovb  r15d,DWORD PTR [rsp+0x28]
    4656:	lea    r9,[rsp+0x110]
    465e:	mov    r8d,0x10
    4664:	mov    esi,DWORD PTR [r9]
    4667:	test   esi,esi
    4669:	jne    46fe <__ctype_b_loc@plt+0x1e2e>
    466f:	sub    r9,0x4
    4673:	sub    r8d,0x1
    4677:	jne    4664 <__ctype_b_loc@plt+0x1d94>
    4679:	test   r15d,r15d
    467c:	jne    4c28 <__ctype_b_loc@plt+0x2358>
    4682:	mov    esi,eax
    4684:	sub    esi,DWORD PTR [rsp+0xd0]
    468b:	mov    DWORD PTR [rbx],0x0
    4691:	mov    DWORD PTR [rsp+0x78],esi
    4695:	js     46c0 <__ctype_b_loc@plt+0x1df0>
    4697:	mov    DWORD PTR [rsp+0xd0],eax
    469e:	mov    DWORD PTR [rsp+0x84],0x0
    46a9:	mov    DWORD PTR [rsp+0x54],0x0
    46b1:	jmp    477d <__ctype_b_loc@plt+0x1ead>
    46b6:	cs nop WORD PTR [rax+rax*1+0x0]
    46c0:	mov    eax,0x2
    46c5:	mov    rdx,QWORD PTR [rsp+0x628]
    46cd:	sub    rdx,QWORD PTR fs:0x28
    46d6:	jne    4c3e <__ctype_b_loc@plt+0x236e>
    46dc:	add    rsp,0x638
    46e3:	pop    rbx
    46e4:	pop    rbp
    46e5:	pop    r12
    46e7:	pop    r13
    46e9:	pop    r14
    46eb:	pop    r15
    46ed:	ret    
    46ee:	mov    DWORD PTR [rsp+0x28],eax
    46f2:	mov    eax,0x1
    46f7:	shl    eax,cl
    46f9:	jmp    464d <__ctype_b_loc@plt+0x1d7d>
    46fe:	cmp    r15d,r8d
    4701:	mov    DWORD PTR [rsp+0x54],r8d
    4706:	cmova  r15d,r8d
    470a:	mov    DWORD PTR [rbx],r15d
    470d:	cmp    ecx,r8d
    4710:	jae    4c43 <__ctype_b_loc@plt+0x2373>
    4716:	mov    r9d,ecx
    4719:	sub    eax,DWORD PTR [rsp+r9*4+0xd0]
    4721:	js     46c0 <__ctype_b_loc@plt+0x1df0>
    4723:	mov    r11d,r8d
    4726:	lea    rdx,[rdi+r9*4]
    472a:	sub    r11d,ecx
    472d:	lea    ecx,[r11-0x1]
    4731:	add    rcx,r9
    4734:	lea    rcx,[rdi+rcx*4]
    4738:	jmp    4749 <__ctype_b_loc@plt+0x1e79>
    473a:	sub    eax,DWORD PTR [rdx+0x4]
    473d:	add    rdx,0x4
    4741:	test   eax,eax
    4743:	js     46c0 <__ctype_b_loc@plt+0x1df0>
    4749:	add    eax,eax
    474b:	cmp    rcx,rdx
    474e:	jne    473a <__ctype_b_loc@plt+0x1e6a>
    4750:	mov    edx,r8d
    4753:	mov    edx,DWORD PTR [rsp+rdx*4+0xd0]
    475a:	mov    esi,eax
    475c:	sub    esi,edx
    475e:	mov    DWORD PTR [rsp+0x78],esi
    4762:	js     46c0 <__ctype_b_loc@plt+0x1df0>
    4768:	mov    DWORD PTR [rsp+0x84],0x0
    4773:	mov    edx,r8d
    4776:	mov    DWORD PTR [rsp+rdx*4+0xd0],eax
    477d:	lea    eax,[r8-0x2]
    4781:	lea    rcx,[rsp+0x88]
    4789:	xor    edx,edx
    478b:	lea    r8,[rdi+rax*4+0x8]
    4790:	lea    rax,[rsp+0xd4]
    4798:	add    rax,0x4
    479c:	add    rcx,0x4
    47a0:	add    edx,DWORD PTR [rax-0x4]
    47a3:	mov    DWORD PTR [rcx-0x4],edx
    47a6:	cmp    r8,rax
    47a9:	jne    4798 <__ctype_b_loc@plt+0x1ec8>
    47ab:	xor    eax,eax
    47ad:	mov    edx,DWORD PTR [rbp+rax*4+0x0]
    47b1:	test   edx,edx
    47b3:	je     47cd <__ctype_b_loc@plt+0x1efd>
    47b5:	mov    ecx,DWORD PTR [rsp+rdx*4+0x80]
    47bc:	lea    esi,[rcx+0x1]
    47bf:	mov    DWORD PTR [rsp+rcx*4+0x1a0],eax
    47c6:	mov    DWORD PTR [rsp+rdx*4+0x80],esi
    47cd:	add    rax,0x1
    47d1:	cmp    r10,rax
    47d4:	jne    47ad <__ctype_b_loc@plt+0x1edd>
    47d6:	movsxd rax,DWORD PTR [rsp+0x54]
    47db:	mov    esi,r15d
    47de:	mov    QWORD PTR [rsp+0x120],0x0
    47ea:	neg    esi
    47ec:	mov    rdx,rax
    47ef:	mov    eax,DWORD PTR [rsp+rax*4+0x80]
    47f6:	mov    DWORD PTR [rsp+0x80],0x0
    4801:	cmp    edx,DWORD PTR [rsp+0x28]
    4805:	jl     4b58 <__ctype_b_loc@plt+0x2288>
    480b:	lea    rdx,[rsp+0x1a0]
    4813:	xor    r12d,r12d
    4816:	mov    r11,r13
    4819:	xor    ebx,ebx
    481b:	lea    rax,[rdx+rax*4]
    481f:	mov    QWORD PTR [rsp+0x48],rdx
    4824:	mov    r13d,r12d
    4827:	mov    r12d,esi
    482a:	mov    QWORD PTR [rsp+0x58],rax
    482f:	movsxd rax,DWORD PTR [rsp+0x28]
    4834:	mov    rsi,r14
    4837:	mov    DWORD PTR [rsp+0x2c],0xffffffff
    483f:	lea    rax,[rdi+rax*4]
    4843:	mov    QWORD PTR [rsp+0x40],rax
    4848:	mov    eax,DWORD PTR [rsp+0x54]
    484c:	add    eax,0x1
    484f:	mov    DWORD PTR [rsp+0x7c],eax
    4853:	xor    eax,eax
    4855:	mov    rdx,QWORD PTR [rsp+0x40]
    485a:	mov    edx,DWORD PTR [rdx]
    485c:	mov    DWORD PTR [rsp+0x24],edx
    4860:	test   edx,edx
    4862:	je     4b3f <__ctype_b_loc@plt+0x226f>
    4868:	mov    edx,DWORD PTR [rsp+0x28]
    486c:	mov    r10d,r12d
    486f:	lea    ecx,[rdx-0x1]
    4872:	mov    edx,0x1
    4877:	shl    edx,cl
    4879:	mov    DWORD PTR [rsp+0x60],edx
    487d:	nop    DWORD PTR [rax]
    4880:	lea    edx,[r15+r10*1]
    4884:	cmp    edx,DWORD PTR [rsp+0x28]
    4888:	jge    4b9e <__ctype_b_loc@plt+0x22ce>
    488e:	mov    r14d,DWORD PTR [rsp+0x2c]
    4893:	mov    r12d,DWORD PTR [rsp+0x28]
    4898:	mov    DWORD PTR [rsp+0x50],r13d
    489d:	mov    r10d,edx
    48a0:	mov    r9d,DWORD PTR [rsp+0x54]
    48a5:	sub    r12d,edx
    48a8:	add    r14d,0x1
    48ac:	sub    r9d,edx
    48af:	mov    r13d,r12d
    48b2:	movsxd r14,r14d
    48b5:	mov    rdx,r11
    48b8:	mov    r12d,r9d
    48bb:	jmp    497c <__ctype_b_loc@plt+0x20ac>
    48c0:	lea    edi,[rbx+0x1]
    48c3:	mov    QWORD PTR [rsp+0x18],rdx
    48c8:	shl    rdi,0x4
    48cc:	mov    QWORD PTR [rsp+0x10],rsi
    48d1:	mov    DWORD PTR [rsp+0xc],r10d
    48d6:	call   2780 <malloc@plt>
    48db:	mov    r10d,DWORD PTR [rsp+0xc]
    48e0:	mov    rsi,QWORD PTR [rsp+0x10]
    48e5:	test   rax,rax
    48e8:	mov    rdx,QWORD PTR [rsp+0x18]
    48ed:	mov    rcx,rax
    48f0:	je     4bae <__ctype_b_loc@plt+0x22de>
    48f6:	mov    eax,DWORD PTR [rip+0x28b4c]        # 2d448 <__ctype_b_loc@plt+0x2ab78>
    48fc:	lea    eax,[rbx+rax*1+0x1]
    4900:	mov    DWORD PTR [rip+0x28b42],eax        # 2d448 <__ctype_b_loc@plt+0x2ab78>
    4906:	lea    rax,[rcx+0x10]
    490a:	mov    QWORD PTR [rsi],rax
    490d:	lea    rsi,[rcx+0x8]
    4911:	mov    QWORD PTR [rcx+0x8],0x0
    4919:	mov    QWORD PTR [rsp+r14*8+0x120],rax
    4921:	test   r14d,r14d
    4924:	je     4964 <__ctype_b_loc@plt+0x2094>
    4926:	mov    ecx,DWORD PTR [rsp+0x50]
    492a:	add    ebp,0x10
    492d:	mov    QWORD PTR [rsp+0x38],rax
    4932:	mov    dl,bpl
    4935:	mov    edi,ecx
    4937:	mov    DWORD PTR [rsp+r14*4+0x80],ecx
    493f:	movzx  ecx,BYTE PTR [rsp+0x20]
    4944:	shr    edi,cl
    4946:	mov    rcx,rdi
    4949:	mov    rdi,QWORD PTR [rsp+r14*8+0x118]
    4951:	shl    rcx,0x4
    4955:	add    rdi,rcx
    4958:	mov    rcx,r15
    495b:	mov    dh,cl
    495d:	mov    QWORD PTR [rdi+0x8],rax
    4961:	mov    QWORD PTR [rdi],rdx
    4964:	add    r14,0x1
    4968:	add    r10d,r15d
    496b:	sub    r13d,r15d
    496e:	sub    r12d,r15d
    4971:	cmp    r10d,DWORD PTR [rsp+0x28]
    4976:	jge    4a00 <__ctype_b_loc@plt+0x2130>
    497c:	mov    eax,r10d
    497f:	mov    ebx,0x1
    4984:	mov    ecx,r13d
    4987:	mov    DWORD PTR [rsp+0x34],r10d
    498c:	sub    eax,r15d
    498f:	mov    DWORD PTR [rsp+0x2c],r14d
    4994:	shl    ebx,cl
    4996:	mov    ebp,r13d
    4999:	mov    DWORD PTR [rsp+0x20],eax
    499d:	mov    DWORD PTR [rsp+0x30],r13d
    49a2:	cmp    ebx,DWORD PTR [rsp+0x24]
    49a6:	jbe    48c0 <__ctype_b_loc@plt+0x1ff0>
    49ac:	cmp    r12d,r15d
    49af:	mov    ecx,r15d
    49b2:	cmovbe ecx,r12d
    49b6:	cmp    ecx,r13d
    49b9:	jbe    48c0 <__ctype_b_loc@plt+0x1ff0>
    49bf:	lea    ebp,[r13+0x1]
    49c3:	mov    rax,QWORD PTR [rsp+0x40]
    49c8:	sub    ebx,DWORD PTR [rsp+0x24]
    49cc:	cmp    ecx,ebp
    49ce:	ja     49e1 <__ctype_b_loc@plt+0x2111>
    49d0:	jmp    49ee <__ctype_b_loc@plt+0x211e>
    49d2:	nop    WORD PTR [rax+rax*1+0x0]
    49d8:	add    ebp,0x1
    49db:	sub    ebx,edi
    49dd:	cmp    ebp,ecx
    49df:	jae    49ee <__ctype_b_loc@plt+0x211e>
    49e1:	mov    edi,DWORD PTR [rax+0x4]
    49e4:	add    ebx,ebx
    49e6:	add    rax,0x4
    49ea:	cmp    edi,ebx
    49ec:	jb     49d8 <__ctype_b_loc@plt+0x2108>
    49ee:	mov    ebx,0x1
    49f3:	mov    ecx,ebp
    49f5:	shl    ebx,cl
    49f7:	jmp    48c0 <__ctype_b_loc@plt+0x1ff0>
    49fc:	nop    DWORD PTR [rax+0x0]
    4a00:	mov    r13d,DWORD PTR [rsp+0x50]
    4a05:	mov    r10d,DWORD PTR [rsp+0x34]
    4a0a:	mov    r11,rdx
    4a0d:	movzx  r9d,BYTE PTR [rsp+0x28]
    4a13:	mov    rdx,QWORD PTR [rsp+0x48]
    4a18:	mov    edi,0x63
    4a1d:	sub    r9d,r10d
    4a20:	cmp    QWORD PTR [rsp+0x58],rdx
    4a25:	jbe    4a59 <__ctype_b_loc@plt+0x2189>
    4a27:	mov    rdi,rdx
    4a2a:	mov    edx,DWORD PTR [rdx]
    4a2c:	add    rdi,0x4
    4a30:	mov    QWORD PTR [rsp+0x48],rdi
    4a35:	cmp    edx,DWORD PTR [rsp+0x64]
    4a39:	jae    4b78 <__ctype_b_loc@plt+0x22a8>
    4a3f:	mov    rcx,QWORD PTR [rsp+0x38]
    4a44:	cmp    edx,0x100
    4a4a:	setne  dil
    4a4e:	mov    cx,dx
    4a51:	add    edi,0xf
    4a54:	mov    QWORD PTR [rsp+0x38],rcx
    4a59:	movzx  ecx,BYTE PTR [rsp+0x30]
    4a5e:	mov    ebp,0x1
    4a63:	mov    edx,r13d
    4a66:	shl    ebp,cl
    4a68:	mov    ecx,r10d
    4a6b:	shr    edx,cl
    4a6d:	mov    ecx,edx
    4a6f:	cmp    edx,ebx
    4a71:	jae    4ab5 <__ctype_b_loc@plt+0x21e5>
    4a73:	mov    edx,ebx
    4a75:	mov    r8,rax
    4a78:	mov    rax,r11
    4a7b:	mov    r11,QWORD PTR [rsp+0x38]
    4a80:	mov    ebx,r9d
    4a83:	mov    r9d,edx
    4a86:	cs nop WORD PTR [rax+rax*1+0x0]
    4a90:	mov    edx,ecx
    4a92:	mov    al,dil
    4a95:	add    ecx,ebp
    4a97:	shl    rdx,0x4
    4a9b:	mov    ah,bl
    4a9d:	add    rdx,r8
    4aa0:	mov    QWORD PTR [rdx],rax
    4aa3:	mov    QWORD PTR [rdx+0x8],r11
    4aa7:	cmp    ecx,r9d
    4aaa:	jb     4a90 <__ctype_b_loc@plt+0x21c0>
    4aac:	mov    r11,rax
    4aaf:	mov    ebx,r9d
    4ab2:	mov    rax,r8
    4ab5:	mov    edi,DWORD PTR [rsp+0x60]
    4ab9:	mov    edx,edi
    4abb:	test   edi,r13d
    4abe:	je     4aca <__ctype_b_loc@plt+0x21fa>
    4ac0:	xor    r13d,edx
    4ac3:	shr    edx,1
    4ac5:	test   r13d,edx
    4ac8:	jne    4ac0 <__ctype_b_loc@plt+0x21f0>
    4aca:	mov    ecx,r10d
    4acd:	mov    r9d,0x1
    4ad3:	xor    r13d,edx
    4ad6:	movsxd rdx,DWORD PTR [rsp+0x2c]
    4adb:	shl    r9d,cl
    4ade:	mov    ecx,r9d
    4ae1:	sub    ecx,0x1
    4ae4:	and    ecx,r13d
    4ae7:	cmp    DWORD PTR [rsp+rdx*4+0x80],ecx
    4aee:	je     4b31 <__ctype_b_loc@plt+0x2261>
    4af0:	sub    edx,0x1
    4af3:	lea    rdi,[rsp+0x80]
    4afb:	mov    ecx,r10d
    4afe:	movsxd rdx,edx
    4b01:	nop    DWORD PTR [rax+0x0]
    4b08:	sub    ecx,r15d
    4b0b:	mov    r8d,0x1
    4b11:	mov    r9d,edx
    4b14:	sub    rdx,0x1
    4b18:	shl    r8d,cl
    4b1b:	sub    r8d,0x1
    4b1f:	and    r8d,r13d
    4b22:	cmp    r8d,DWORD PTR [rdi+rdx*4+0x4]
    4b27:	jne    4b08 <__ctype_b_loc@plt+0x2238>
    4b29:	mov    DWORD PTR [rsp+0x2c],r9d
    4b2e:	mov    r10d,ecx
    4b31:	sub    DWORD PTR [rsp+0x24],0x1
    4b36:	jne    4880 <__ctype_b_loc@plt+0x1fb0>
    4b3c:	mov    r12d,r10d
    4b3f:	add    DWORD PTR [rsp+0x28],0x1
    4b44:	mov    edx,DWORD PTR [rsp+0x28]
    4b48:	add    QWORD PTR [rsp+0x40],0x4
    4b4e:	cmp    edx,DWORD PTR [rsp+0x7c]
    4b52:	jne    4855 <__ctype_b_loc@plt+0x1f85>
    4b58:	mov    edx,DWORD PTR [rsp+0x78]
    4b5c:	test   edx,edx
    4b5e:	setne  dl
    4b61:	xor    eax,eax
    4b63:	cmp    DWORD PTR [rsp+0x54],0x1
    4b68:	setne  al
    4b6b:	and    eax,edx
    4b6d:	jmp    46c5 <__ctype_b_loc@plt+0x1df5>
    4b72:	nop    WORD PTR [rax+rax*1+0x0]
    4b78:	mov    r8,QWORD PTR [rsp+0x68]
    4b7d:	sub    edx,DWORD PTR [rsp+0x64]
    4b81:	mov    rcx,QWORD PTR [rsp+0x38]
    4b86:	mov    rdi,QWORD PTR [rsp+0x70]
    4b8b:	mov    cx,WORD PTR [r8+rdx*2]
    4b90:	movzx  edi,BYTE PTR [rdi+rdx*2]
    4b94:	mov    QWORD PTR [rsp+0x38],rcx
    4b99:	jmp    4a59 <__ctype_b_loc@plt+0x2189>
    4b9e:	mov    edx,DWORD PTR [rsp+0x28]
    4ba2:	sub    edx,r10d
    4ba5:	mov    DWORD PTR [rsp+0x30],edx
    4ba9:	jmp    4a0d <__ctype_b_loc@plt+0x213d>
    4bae:	mov    eax,DWORD PTR [rsp+0x2c]
    4bb2:	test   eax,eax
    4bb4:	jne    4c07 <__ctype_b_loc@plt+0x2337>
    4bb6:	mov    eax,0x3
    4bbb:	jmp    46c5 <__ctype_b_loc@plt+0x1df5>
    4bc0:	mov    edi,0x30
    4bc5:	call   2780 <malloc@plt>
    4bca:	test   rax,rax
    4bcd:	je     4bb6 <__ctype_b_loc@plt+0x22e6>
    4bcf:	mov    r9d,0x163
    4bd5:	mov    r10d,0x163
    4bdb:	add    rax,0x10
    4bdf:	mov    QWORD PTR [rax-0x8],0x0
    4be7:	mov    WORD PTR [rax],r9w
    4beb:	mov    WORD PTR [rax+0x10],r10w
    4bf0:	add    DWORD PTR [rip+0x28851],0x3        # 2d448 <__ctype_b_loc@plt+0x2ab78>
    4bf7:	mov    QWORD PTR [r14],rax
    4bfa:	xor    eax,eax
    4bfc:	mov    DWORD PTR [rbx],0x1
    4c02:	jmp    46c5 <__ctype_b_loc@plt+0x1df5>
    4c07:	mov    rbx,QWORD PTR [rsp+0x120]
    4c0f:	test   rbx,rbx
    4c12:	je     4bb6 <__ctype_b_loc@plt+0x22e6>
    4c14:	lea    rdi,[rbx-0x10]
    4c18:	mov    rbx,QWORD PTR [rbx-0x8]
    4c1c:	call   24e0 <free@plt>
    4c21:	test   rbx,rbx
    4c24:	jne    4c14 <__ctype_b_loc@plt+0x2344>
    4c26:	jmp    4bb6 <__ctype_b_loc@plt+0x22e6>
    4c28:	mov    DWORD PTR [rbx],0x0
    4c2e:	xor    r15d,r15d
    4c31:	mov    DWORD PTR [rsp+0x54],0x0
    4c39:	jmp    475a <__ctype_b_loc@plt+0x1e8a>
    4c3e:	call   2600 <__stack_chk_fail@plt>
    4c43:	mov    edx,r8d
    4c46:	mov    esi,eax
    4c48:	sub    esi,DWORD PTR [rsp+rdx*4+0xd0]
    4c4f:	mov    DWORD PTR [rsp+0x78],esi
    4c53:	js     46c0 <__ctype_b_loc@plt+0x1df0>
    4c59:	mov    DWORD PTR [rsp+rdx*4+0xd0],eax
    4c60:	mov    DWORD PTR [rsp+0x84],0x0
    4c6b:	cmp    r8d,0x1
    4c6f:	je     47ab <__ctype_b_loc@plt+0x1edb>
    4c75:	jmp    477d <__ctype_b_loc@plt+0x1ead>
    4c7a:	nop    WORD PTR [rax+rax*1+0x0]
    4c80:	sub    rsp,0xd8
    4c87:	mov    QWORD PTR [rsp+0x30],rdx
    4c8c:	mov    QWORD PTR [rsp+0x38],rcx
    4c91:	mov    QWORD PTR [rsp+0x40],r8
    4c96:	mov    QWORD PTR [rsp+0x48],r9
    4c9b:	test   al,al
    4c9d:	je     4cd6 <__ctype_b_loc@plt+0x2406>
    4c9f:	movaps XMMWORD PTR [rsp+0x50],xmm0
    4ca4:	movaps XMMWORD PTR [rsp+0x60],xmm1
    4ca9:	movaps XMMWORD PTR [rsp+0x70],xmm2
    4cae:	movaps XMMWORD PTR [rsp+0x80],xmm3
    4cb6:	movaps XMMWORD PTR [rsp+0x90],xmm4
    4cbe:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    4cc6:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    4cce:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    4cd6:	mov    rax,QWORD PTR fs:0x28
    4cdf:	mov    QWORD PTR [rsp+0x18],rax
    4ce4:	xor    eax,eax
    4ce6:	lea    rax,[rsp+0xe0]
    4cee:	mov    DWORD PTR [rsp],0x10
    4cf5:	mov    QWORD PTR [rsp+0x8],rax
    4cfa:	lea    rax,[rsp+0x20]
    4cff:	mov    DWORD PTR [rsp+0x4],0x30
    4d07:	mov    QWORD PTR [rsp+0x10],rax
    4d0c:	test   esi,esi
    4d0e:	jne    4d38 <__ctype_b_loc@plt+0x2468>
    4d10:	mov    edx,DWORD PTR [rax+0x10]
    4d13:	xor    eax,eax
    4d15:	call   25a0 <fcntl@plt>
    4d1a:	mov    rdx,QWORD PTR [rsp+0x18]
    4d1f:	sub    rdx,QWORD PTR fs:0x28
    4d28:	jne    4d57 <__ctype_b_loc@plt+0x2487>
    4d2a:	add    rsp,0xd8
    4d31:	ret    
    4d32:	nop    WORD PTR [rax+rax*1+0x0]
    4d38:	lea    eax,[rsi-0x2]
    4d3b:	and    eax,0xfffffffd
    4d3e:	je     4d50 <__ctype_b_loc@plt+0x2480>
    4d40:	xor    eax,eax
    4d42:	call   25a0 <fcntl@plt>
    4d47:	jmp    4d1a <__ctype_b_loc@plt+0x244a>
    4d49:	nop    DWORD PTR [rax+0x0]
    4d50:	mov    rax,QWORD PTR [rsp+0x10]
    4d55:	jmp    4d10 <__ctype_b_loc@plt+0x2440>
    4d57:	call   2600 <__stack_chk_fail@plt>
    4d5c:	nop    DWORD PTR [rax+0x0]
    4d60:	mov    eax,0x7fffffff
    4d65:	push   r14
    4d67:	cmp    edx,eax
    4d69:	push   r13
    4d6b:	mov    r13,rsi
    4d6e:	cmova  edx,eax
    4d71:	push   r12
    4d73:	push   rbp
    4d74:	mov    ebp,edi
    4d76:	push   rbx
    4d77:	mov    r12d,edx
    4d7a:	mov    rdx,r12
    4d7d:	call   2690 <read@plt>
    4d82:	mov    r14d,eax
    4d85:	test   eax,eax
    4d87:	js     4d98 <__ctype_b_loc@plt+0x24c8>
    4d89:	pop    rbx
    4d8a:	mov    eax,r14d
    4d8d:	pop    rbp
    4d8e:	pop    r12
    4d90:	pop    r13
    4d92:	pop    r14
    4d94:	ret    
    4d95:	nop    DWORD PTR [rax]
    4d98:	call   2520 <__errno_location@plt>
    4d9d:	cmp    DWORD PTR [rax],0xb
    4da0:	mov    rbx,rax
    4da3:	jne    4d89 <__ctype_b_loc@plt+0x24b9>
    4da5:	xor    eax,eax
    4da7:	mov    esi,0x3
    4dac:	mov    edi,ebp
    4dae:	call   4c80 <__ctype_b_loc@plt+0x23b0>
    4db3:	test   eax,eax
    4db5:	js     4d89 <__ctype_b_loc@plt+0x24b9>
    4db7:	test   ah,0x8
    4dba:	jne    4dc8 <__ctype_b_loc@plt+0x24f8>
    4dbc:	mov    DWORD PTR [rbx],0xb
    4dc2:	jmp    4d89 <__ctype_b_loc@plt+0x24b9>
    4dc4:	nop    DWORD PTR [rax+0x0]
    4dc8:	and    ah,0xf7
    4dcb:	mov    esi,0x4
    4dd0:	mov    edi,ebp
    4dd2:	mov    edx,eax
    4dd4:	xor    eax,eax
    4dd6:	call   4c80 <__ctype_b_loc@plt+0x23b0>
    4ddb:	cmp    eax,0xffffffff
    4dde:	je     4d89 <__ctype_b_loc@plt+0x24b9>
    4de0:	mov    rdx,r12
    4de3:	mov    rsi,r13
    4de6:	mov    edi,ebp
    4de8:	call   2690 <read@plt>
    4ded:	mov    r14d,eax
    4df0:	jmp    4d89 <__ctype_b_loc@plt+0x24b9>
    4df2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    4dfd:	nop    DWORD PTR [rax]
    4e00:	push   r13
    4e02:	push   r12
    4e04:	push   rbp
    4e05:	push   rbx
    4e06:	sub    rsp,0xd8
    4e0d:	mov    QWORD PTR [rsp+0x38],rcx
    4e12:	mov    QWORD PTR [rsp+0x40],r8
    4e17:	mov    QWORD PTR [rsp+0x48],r9
    4e1c:	test   al,al
    4e1e:	je     4e57 <__ctype_b_loc@plt+0x2587>
    4e20:	movaps XMMWORD PTR [rsp+0x50],xmm0
    4e25:	movaps XMMWORD PTR [rsp+0x60],xmm1
    4e2a:	movaps XMMWORD PTR [rsp+0x70],xmm2
    4e2f:	movaps XMMWORD PTR [rsp+0x80],xmm3
    4e37:	movaps XMMWORD PTR [rsp+0x90],xmm4
    4e3f:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    4e47:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    4e4f:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    4e57:	mov    rax,QWORD PTR fs:0x28
    4e60:	mov    QWORD PTR [rsp+0x18],rax
    4e65:	xor    eax,eax
    4e67:	xor    ecx,ecx
    4e69:	test   dl,0x40
    4e6c:	jne    4ea0 <__ctype_b_loc@plt+0x25d0>
    4e6e:	xor    eax,eax
    4e70:	call   25f0 <openat@plt>
    4e75:	mov    r12d,eax
    4e78:	cmp    eax,0x2
    4e7b:	jbe    4ed9 <__ctype_b_loc@plt+0x2609>
    4e7d:	mov    rax,QWORD PTR [rsp+0x18]
    4e82:	sub    rax,QWORD PTR fs:0x28
    4e8b:	jne    4f0a <__ctype_b_loc@plt+0x263a>
    4e8d:	add    rsp,0xd8
    4e94:	mov    eax,r12d
    4e97:	pop    rbx
    4e98:	pop    rbp
    4e99:	pop    r12
    4e9b:	pop    r13
    4e9d:	ret    
    4e9e:	xchg   ax,ax
    4ea0:	lea    rax,[rsp+0x100]
    4ea8:	mov    ecx,DWORD PTR [rsp+0x38]
    4eac:	mov    DWORD PTR [rsp],0x18
    4eb3:	mov    QWORD PTR [rsp+0x8],rax
    4eb8:	lea    rax,[rsp+0x20]
    4ebd:	mov    QWORD PTR [rsp+0x10],rax
    4ec2:	xor    eax,eax
    4ec4:	mov    DWORD PTR [rsp+0x4],0x30
    4ecc:	call   25f0 <openat@plt>
    4ed1:	mov    r12d,eax
    4ed4:	cmp    eax,0x2
    4ed7:	ja     4e7d <__ctype_b_loc@plt+0x25ad>
    4ed9:	mov    edi,r12d
    4edc:	mov    edx,0x3
    4ee1:	xor    esi,esi
    4ee3:	xor    eax,eax
    4ee5:	call   4c80 <__ctype_b_loc@plt+0x23b0>
    4eea:	mov    ebp,eax
    4eec:	call   2520 <__errno_location@plt>
    4ef1:	mov    edi,r12d
    4ef4:	mov    r12d,ebp
    4ef7:	mov    r13d,DWORD PTR [rax]
    4efa:	mov    rbx,rax
    4efd:	call   2650 <close@plt>
    4f02:	mov    DWORD PTR [rbx],r13d
    4f05:	jmp    4e7d <__ctype_b_loc@plt+0x25ad>
    4f0a:	call   2600 <__stack_chk_fail@plt>
    4f0f:	nop
    4f10:	push   rbp
    4f11:	mov    rbp,rdi
    4f14:	test   rdi,rdi
    4f17:	je     4f22 <__ctype_b_loc@plt+0x2652>
    4f19:	call   27a0 <__freading@plt>
    4f1e:	test   eax,eax
    4f20:	jne    4f30 <__ctype_b_loc@plt+0x2660>
    4f22:	mov    rdi,rbp
    4f25:	pop    rbp
    4f26:	jmp    2790 <fflush@plt>
    4f2b:	nop    DWORD PTR [rax+rax*1+0x0]
    4f30:	test   DWORD PTR [rbp+0x0],0x100
    4f37:	je     4f22 <__ctype_b_loc@plt+0x2652>
    4f39:	mov    rax,QWORD PTR [rbp+0x8]
    4f3d:	cmp    QWORD PTR [rbp+0x10],rax
    4f41:	je     4f60 <__ctype_b_loc@plt+0x2690>
    4f43:	mov    rdi,rbp
    4f46:	mov    edx,0x1
    4f4b:	xor    esi,esi
    4f4d:	call   2800 <fseeko@plt>
    4f52:	mov    rdi,rbp
    4f55:	pop    rbp
    4f56:	jmp    2790 <fflush@plt>
    4f5b:	nop    DWORD PTR [rax+rax*1+0x0]
    4f60:	mov    rax,QWORD PTR [rbp+0x20]
    4f64:	cmp    QWORD PTR [rbp+0x28],rax
    4f68:	jne    4f43 <__ctype_b_loc@plt+0x2673>
    4f6a:	cmp    QWORD PTR [rbp+0x48],0x0
    4f6f:	jne    4f43 <__ctype_b_loc@plt+0x2673>
    4f71:	mov    rdi,rbp
    4f74:	call   2760 <fileno@plt>
    4f79:	xor    esi,esi
    4f7b:	mov    edx,0x1
    4f80:	mov    edi,eax
    4f82:	call   2630 <lseek@plt>
    4f87:	cmp    rax,0xffffffffffffffff
    4f8b:	je     4f22 <__ctype_b_loc@plt+0x2652>
    4f8d:	and    DWORD PTR [rbp+0x0],0xffffffef
    4f91:	mov    QWORD PTR [rbp+0x90],rax
    4f98:	jmp    4f22 <__ctype_b_loc@plt+0x2652>
    4f9a:	nop    WORD PTR [rax+rax*1+0x0]
    4fa0:	push   rbp
    4fa1:	mov    r11,rdx
    4fa4:	mov    r8d,0x7
    4faa:	mov    r9d,0x7
    4fb0:	mov    rbp,rsp
    4fb3:	push   r15
    4fb5:	mov    r15,rcx
    4fb8:	push   r14
    4fba:	xor    r14d,r14d
    4fbd:	push   r13
    4fbf:	lea    r13,[rbp-0x2a0]
    4fc6:	push   r12
    4fc8:	push   rbx
    4fc9:	sub    rsp,0x408
    4fd0:	mov    QWORD PTR [rbp-0x3f0],rdi
    4fd7:	mov    QWORD PTR [rbp-0x410],rsi
    4fde:	mov    rax,QWORD PTR fs:0x28
    4fe7:	mov    QWORD PTR [rbp-0x38],rax
    4feb:	xor    eax,eax
    4fed:	lea    rax,[rbp-0x3a0]
    4ff4:	mov    QWORD PTR [rbp-0x408],r13
    4ffb:	mov    QWORD PTR [rbp-0x400],rax
    5002:	mov    QWORD PTR [rbp-0x3a8],rax
    5009:	mov    rax,rdx
    500c:	mov    QWORD PTR [rbp-0x2c0],0x0
    5017:	mov    QWORD PTR [rbp-0x2b8],r13
    501e:	mov    QWORD PTR [rbp-0x3b0],0x0
    5029:	mov    QWORD PTR [rbp-0x3d0],0x0
    5034:	mov    QWORD PTR [rbp-0x3c8],0x0
    503f:	mov    QWORD PTR [rbp-0x3d8],0x0
    504a:	jmp    5060 <__ctype_b_loc@plt+0x2790>
    504c:	nop    DWORD PTR [rax+0x0]
    5050:	lea    rbx,[rax+0x1]
    5054:	cmp    dl,0x25
    5057:	je     54c0 <__ctype_b_loc@plt+0x2bf0>
    505d:	mov    rax,rbx
    5060:	movzx  edx,BYTE PTR [rax]
    5063:	test   dl,dl
    5065:	jne    5050 <__ctype_b_loc@plt+0x2780>
    5067:	lea    rdx,[r14+r14*4]
    506b:	mov    r9,QWORD PTR [rbp-0x3a8]
    5072:	mov    rsi,QWORD PTR [rbp-0x3b0]
    5079:	lea    rcx,[rip+0xc340]        # 113c0 <__ctype_b_loc@plt+0xeaf0>
    5080:	lea    rdx,[r14+rdx*2]
    5084:	lea    r10,[rip+0xca45]        # 11ad0 <__ctype_b_loc@plt+0xf200>
    508b:	mov    QWORD PTR [r13+rdx*8+0x0],rax
    5090:	mov    rax,QWORD PTR [rbp-0x3c8]
    5097:	xor    edx,edx
    5099:	lea    rbx,[rip+0xbf64]        # 11004 <__ctype_b_loc@plt+0xe734>
    50a0:	mov    QWORD PTR [rbp-0x2b0],rax
    50a7:	mov    rax,QWORD PTR [rbp-0x3d0]
    50ae:	mov    QWORD PTR [rbp-0x2a8],rax
    50b5:	mov    rax,r9
    50b8:	test   rsi,rsi
    50bb:	je     5105 <__ctype_b_loc@plt+0x2835>
    50bd:	nop    DWORD PTR [rax]
    50c0:	cmp    DWORD PTR [rax],0x16
    50c3:	ja     6c35 <__ctype_b_loc@plt+0x4365>
    50c9:	mov    edi,DWORD PTR [rax]
    50cb:	movsxd rdi,DWORD PTR [rcx+rdi*4]
    50cf:	add    rdi,rcx
    50d2:	notrack jmp rdi
    50d5:	nop    DWORD PTR [rax]
    50d8:	mov    edi,DWORD PTR [r15]
    50db:	cmp    edi,0x2f
    50de:	ja     54a8 <__ctype_b_loc@plt+0x2bd8>
    50e4:	mov    r8d,edi
    50e7:	add    edi,0x8
    50ea:	add    r8,QWORD PTR [r15+0x10]
    50ee:	mov    DWORD PTR [r15],edi
    50f1:	mov    rdi,QWORD PTR [r8]
    50f4:	mov    QWORD PTR [rax+0x10],rdi
    50f8:	add    rdx,0x1
    50fc:	add    rax,0x20
    5100:	cmp    rdx,rsi
    5103:	jne    50c0 <__ctype_b_loc@plt+0x27f0>
    5105:	mov    rbx,QWORD PTR [rbp-0x3c8]
    510c:	mov    rdx,0xffffffffffffffff
    5113:	lea    rax,[rbx+0x7]
    5117:	cmp    rbx,0xfffffffffffffff9
    511b:	cmovae rax,rdx
    511f:	add    rax,QWORD PTR [rbp-0x3d0]
    5126:	jb     6fd4 <__ctype_b_loc@plt+0x4704>
    512c:	mov    rdi,rax
    512f:	xor    r12d,r12d
    5132:	add    rdi,0x6
    5136:	setb   r12b
    513a:	jb     6fd4 <__ctype_b_loc@plt+0x4704>
    5140:	cmp    rdi,0xf9f
    5147:	jbe    5ba0 <__ctype_b_loc@plt+0x32d0>
    514d:	cmp    rdi,0xffffffffffffffff
    5151:	je     6fd4 <__ctype_b_loc@plt+0x4704>
    5157:	mov    QWORD PTR [rbp-0x3c8],r11
    515e:	call   2780 <malloc@plt>
    5163:	mov    r11,QWORD PTR [rbp-0x3c8]
    516a:	test   rax,rax
    516d:	mov    QWORD PTR [rbp-0x3e0],rax
    5174:	je     6fd4 <__ctype_b_loc@plt+0x4704>
    517a:	mov    rax,QWORD PTR [rbp-0x3e0]
    5181:	mov    QWORD PTR [rbp-0x418],rax
    5188:	mov    rax,QWORD PTR [rbp-0x410]
    518f:	mov    r15,QWORD PTR [r13+0x0]
    5193:	mov    QWORD PTR [rbp-0x3f8],0x0
    519e:	mov    r8,QWORD PTR [rbp-0x3f0]
    51a5:	mov    r14,QWORD PTR [rax]
    51a8:	cmp    r15,r11
    51ab:	je     5dc2 <__ctype_b_loc@plt+0x34f2>
    51b1:	sub    r15,r11
    51b4:	mov    rbx,r12
    51b7:	mov    rax,0xffffffffffffffff
    51be:	add    rbx,r15
    51c1:	cmovb  rbx,rax
    51c5:	cmp    r14,rbx
    51c8:	jae    5253 <__ctype_b_loc@plt+0x2983>
    51ce:	test   r14,r14
    51d1:	je     5e80 <__ctype_b_loc@plt+0x35b0>
    51d7:	js     5dd8 <__ctype_b_loc@plt+0x3508>
    51dd:	add    r14,r14
    51e0:	cmp    r14,rbx
    51e3:	cmovb  r14,rbx
    51e7:	cmp    r14,0xffffffffffffffff
    51eb:	je     5dd8 <__ctype_b_loc@plt+0x3508>
    51f1:	cmp    r8,QWORD PTR [rbp-0x3f0]
    51f8:	mov    QWORD PTR [rbp-0x3d0],r11
    51ff:	jne    5e90 <__ctype_b_loc@plt+0x35c0>
    5205:	mov    rdi,r14
    5208:	mov    QWORD PTR [rbp-0x3c8],r8
    520f:	call   2780 <malloc@plt>
    5214:	mov    r8,QWORD PTR [rbp-0x3c8]
    521b:	mov    r11,QWORD PTR [rbp-0x3d0]
    5222:	test   rax,rax
    5225:	je     70b7 <__ctype_b_loc@plt+0x47e7>
    522b:	test   r12,r12
    522e:	je     6b62 <__ctype_b_loc@plt+0x4292>
    5234:	mov    rsi,r8
    5237:	mov    rdx,r12
    523a:	mov    rdi,rax
    523d:	mov    QWORD PTR [rbp-0x3c8],r11
    5244:	call   2750 <memcpy@plt>
    5249:	mov    r11,QWORD PTR [rbp-0x3c8]
    5250:	mov    r8,rax
    5253:	lea    rdi,[r8+r12*1]
    5257:	mov    rdx,r15
    525a:	mov    rsi,r11
    525d:	mov    QWORD PTR [rbp-0x3c8],r8
    5264:	call   2750 <memcpy@plt>
    5269:	mov    r8,QWORD PTR [rbp-0x3c8]
    5270:	mov    rax,QWORD PTR [rbp-0x3f8]
    5277:	cmp    QWORD PTR [rbp-0x2c0],rax
    527e:	je     6dc1 <__ctype_b_loc@plt+0x44f1>
    5284:	movzx  edx,BYTE PTR [r13+0x48]
    5289:	mov    rax,QWORD PTR [r13+0x50]
    528d:	cmp    dl,0x25
    5290:	je     5d20 <__ctype_b_loc@plt+0x3450>
    5296:	cmp    rax,0xffffffffffffffff
    529a:	je     28e0 <__ctype_b_loc@plt+0x10>
    52a0:	mov    r15,QWORD PTR [rbp-0x3a8]
    52a7:	shl    rax,0x5
    52ab:	add    rax,r15
    52ae:	mov    esi,DWORD PTR [rax]
    52b0:	mov    DWORD PTR [rbp-0x3d8],esi
    52b6:	cmp    dl,0x6e
    52b9:	je     5ec0 <__ctype_b_loc@plt+0x35f0>
    52bf:	mov    eax,DWORD PTR [r13+0x10]
    52c3:	mov    rsi,QWORD PTR [rbp-0x3e0]
    52ca:	mov    BYTE PTR [rsi],0x25
    52cd:	test   al,0x1
    52cf:	jne    5ef0 <__ctype_b_loc@plt+0x3620>
    52d5:	add    rsi,0x1
    52d9:	mov    QWORD PTR [rbp-0x3c8],rsi
    52e0:	test   al,0x2
    52e2:	je     52f9 <__ctype_b_loc@plt+0x2a29>
    52e4:	mov    rsi,QWORD PTR [rbp-0x3c8]
    52eb:	mov    BYTE PTR [rsi],0x2d
    52ee:	add    rsi,0x1
    52f2:	mov    QWORD PTR [rbp-0x3c8],rsi
    52f9:	test   al,0x4
    52fb:	je     5312 <__ctype_b_loc@plt+0x2a42>
    52fd:	mov    rsi,QWORD PTR [rbp-0x3c8]
    5304:	mov    BYTE PTR [rsi],0x2b
    5307:	add    rsi,0x1
    530b:	mov    QWORD PTR [rbp-0x3c8],rsi
    5312:	test   al,0x8
    5314:	je     532b <__ctype_b_loc@plt+0x2a5b>
    5316:	mov    rsi,QWORD PTR [rbp-0x3c8]
    531d:	mov    BYTE PTR [rsi],0x20
    5320:	add    rsi,0x1
    5324:	mov    QWORD PTR [rbp-0x3c8],rsi
    532b:	test   al,0x10
    532d:	je     5344 <__ctype_b_loc@plt+0x2a74>
    532f:	mov    rsi,QWORD PTR [rbp-0x3c8]
    5336:	mov    BYTE PTR [rsi],0x23
    5339:	add    rsi,0x1
    533d:	mov    QWORD PTR [rbp-0x3c8],rsi
    5344:	test   al,0x40
    5346:	je     535d <__ctype_b_loc@plt+0x2a8d>
    5348:	mov    rsi,QWORD PTR [rbp-0x3c8]
    534f:	mov    BYTE PTR [rsi],0x49
    5352:	add    rsi,0x1
    5356:	mov    QWORD PTR [rbp-0x3c8],rsi
    535d:	test   al,0x20
    535f:	je     5376 <__ctype_b_loc@plt+0x2aa6>
    5361:	mov    rax,QWORD PTR [rbp-0x3c8]
    5368:	mov    BYTE PTR [rax],0x30
    536b:	add    rax,0x1
    536f:	mov    QWORD PTR [rbp-0x3c8],rax
    5376:	mov    rsi,QWORD PTR [r13+0x18]
    537a:	mov    rax,QWORD PTR [r13+0x20]
    537e:	cmp    rsi,rax
    5381:	je     53be <__ctype_b_loc@plt+0x2aee>
    5383:	mov    r12,QWORD PTR [rbp-0x3c8]
    538a:	sub    rax,rsi
    538d:	mov    QWORD PTR [rbp-0x3e8],r8
    5394:	mov    rdx,rax
    5397:	mov    QWORD PTR [rbp-0x3d0],rax
    539e:	mov    rdi,r12
    53a1:	call   2750 <memcpy@plt>
    53a6:	mov    rdx,QWORD PTR [rbp-0x3d0]
    53ad:	mov    r8,QWORD PTR [rbp-0x3e8]
    53b4:	add    rax,rdx
    53b7:	mov    QWORD PTR [rbp-0x3c8],rax
    53be:	mov    rsi,QWORD PTR [r13+0x30]
    53c2:	mov    rax,QWORD PTR [r13+0x38]
    53c6:	cmp    rsi,rax
    53c9:	je     5406 <__ctype_b_loc@plt+0x2b36>
    53cb:	mov    r12,QWORD PTR [rbp-0x3c8]
    53d2:	sub    rax,rsi
    53d5:	mov    QWORD PTR [rbp-0x3e8],r8
    53dc:	mov    rdx,rax
    53df:	mov    QWORD PTR [rbp-0x3d0],rax
    53e6:	mov    rdi,r12
    53e9:	call   2750 <memcpy@plt>
    53ee:	mov    rdx,QWORD PTR [rbp-0x3d0]
    53f5:	mov    r8,QWORD PTR [rbp-0x3e8]
    53fc:	add    rax,rdx
    53ff:	mov    QWORD PTR [rbp-0x3c8],rax
    5406:	mov    eax,DWORD PTR [rbp-0x3d8]
    540c:	sub    eax,0x7
    540f:	cmp    eax,0x9
    5412:	ja     5a41 <__ctype_b_loc@plt+0x3171>
    5418:	lea    rsi,[rip+0xbffd]        # 1141c <__ctype_b_loc@plt+0xeb4c>
    541f:	movsxd rax,DWORD PTR [rsi+rax*4]
    5423:	add    rax,rsi
    5426:	notrack jmp rax
    5429:	nop    DWORD PTR [rax+0x0]
    5430:	mov    edi,DWORD PTR [r15]
    5433:	cmp    edi,0x2f
    5436:	ja     5610 <__ctype_b_loc@plt+0x2d40>
    543c:	mov    r8d,edi
    543f:	add    edi,0x8
    5442:	add    r8,QWORD PTR [r15+0x10]
    5446:	mov    DWORD PTR [r15],edi
    5449:	mov    edi,DWORD PTR [r8]
    544c:	mov    DWORD PTR [rax+0x10],edi
    544f:	jmp    50f8 <__ctype_b_loc@plt+0x2828>
    5454:	nop    DWORD PTR [rax+0x0]
    5458:	mov    edi,DWORD PTR [r15]
    545b:	cmp    edi,0x2f
    545e:	jbe    5730 <__ctype_b_loc@plt+0x2e60>
    5464:	mov    r8,QWORD PTR [r15+0x8]
    5468:	lea    rdi,[r8+0x8]
    546c:	mov    QWORD PTR [r15+0x8],rdi
    5470:	mov    edi,DWORD PTR [r8]
    5473:	mov    WORD PTR [rax+0x10],di
    5477:	jmp    50f8 <__ctype_b_loc@plt+0x2828>
    547c:	nop    DWORD PTR [rax+0x0]
    5480:	mov    edi,DWORD PTR [r15]
    5483:	cmp    edi,0x2f
    5486:	jbe    5748 <__ctype_b_loc@plt+0x2e78>
    548c:	mov    r8,QWORD PTR [r15+0x8]
    5490:	lea    rdi,[r8+0x8]
    5494:	mov    QWORD PTR [r15+0x8],rdi
    5498:	mov    edi,DWORD PTR [r8]
    549b:	mov    BYTE PTR [rax+0x10],dil
    549f:	jmp    50f8 <__ctype_b_loc@plt+0x2828>
    54a4:	nop    DWORD PTR [rax+0x0]
    54a8:	mov    r8,QWORD PTR [r15+0x8]
    54ac:	lea    rdi,[r8+0x8]
    54b0:	mov    QWORD PTR [r15+0x8],rdi
    54b4:	jmp    50f1 <__ctype_b_loc@plt+0x2821>
    54b9:	nop    DWORD PTR [rax+0x0]
    54c0:	lea    rdx,[r14+r14*4]
    54c4:	lea    rdx,[r14+rdx*2]
    54c8:	mov    r14,0xffffffffffffffff
    54cf:	lea    r13,[r13+rdx*8+0x0]
    54d4:	mov    QWORD PTR [r13+0x0],rax
    54d8:	mov    DWORD PTR [r13+0x10],0x0
    54e0:	mov    QWORD PTR [r13+0x18],0x0
    54e8:	mov    QWORD PTR [r13+0x20],0x0
    54f0:	mov    QWORD PTR [r13+0x28],0xffffffffffffffff
    54f8:	mov    QWORD PTR [r13+0x30],0x0
    5500:	mov    QWORD PTR [r13+0x38],0x0
    5508:	mov    QWORD PTR [r13+0x40],0xffffffffffffffff
    5510:	mov    QWORD PTR [r13+0x50],0xffffffffffffffff
    5518:	movzx  r12d,BYTE PTR [rax+0x1]
    551d:	lea    edx,[r12-0x30]
    5522:	cmp    dl,0x9
    5525:	jbe    5fc0 <__ctype_b_loc@plt+0x36f0>
    552b:	lea    rcx,[rip+0xbf12]        # 11444 <__ctype_b_loc@plt+0xeb74>
    5532:	lea    rdx,[rbx+0x1]
    5536:	cmp    r12b,0x27
    553a:	je     55d9 <__ctype_b_loc@plt+0x2d09>
    5540:	lea    eax,[r12-0x20]
    5545:	cmp    al,0x29
    5547:	ja     5560 <__ctype_b_loc@plt+0x2c90>
    5549:	movzx  eax,al
    554c:	movsxd rax,DWORD PTR [rcx+rax*4]
    5550:	add    rax,rcx
    5553:	notrack jmp rax
    5556:	cs nop WORD PTR [rax+rax*1+0x0]
    5560:	cmp    r12b,0x2a
    5564:	je     5760 <__ctype_b_loc@plt+0x2e90>
    556a:	lea    eax,[r12-0x30]
    556f:	cmp    al,0x9
    5571:	jbe    6b12 <__ctype_b_loc@plt+0x4242>
    5577:	cmp    r12b,0x2e
    557b:	je     58c0 <__ctype_b_loc@plt+0x2ff0>
    5581:	xor    edx,edx
    5583:	lea    rsi,[rip+0xbf62]        # 114ec <__ctype_b_loc@plt+0xec1c>
    558a:	mov    edi,0x1
    558f:	add    rbx,0x1
    5593:	cmp    r12b,0x68
    5597:	je     5665 <__ctype_b_loc@plt+0x2d95>
    559d:	nop    DWORD PTR [rax]
    55a0:	lea    eax,[r12-0x4c]
    55a5:	cmp    al,0x2e
    55a7:	ja     5628 <__ctype_b_loc@plt+0x2d58>
    55a9:	movzx  eax,al
    55ac:	movsxd rax,DWORD PTR [rsi+rax*4]
    55b0:	add    rax,rsi
    55b3:	notrack jmp rax
    55b6:	mov    eax,DWORD PTR [r13+0x10]
    55ba:	or     eax,0x40
    55bd:	nop    DWORD PTR [rax]
    55c0:	mov    DWORD PTR [r13+0x10],eax
    55c4:	movzx  r12d,BYTE PTR [rdx]
    55c8:	mov    rbx,rdx
    55cb:	lea    rdx,[rbx+0x1]
    55cf:	cmp    r12b,0x27
    55d3:	jne    5540 <__ctype_b_loc@plt+0x2c70>
    55d9:	mov    eax,DWORD PTR [r13+0x10]
    55dd:	or     eax,0x1
    55e0:	jmp    55c0 <__ctype_b_loc@plt+0x2cf0>
    55e2:	mov    eax,DWORD PTR [r13+0x10]
    55e6:	or     eax,0x20
    55e9:	jmp    55c0 <__ctype_b_loc@plt+0x2cf0>
    55eb:	mov    eax,DWORD PTR [r13+0x10]
    55ef:	or     eax,0x2
    55f2:	jmp    55c0 <__ctype_b_loc@plt+0x2cf0>
    55f4:	mov    eax,DWORD PTR [r13+0x10]
    55f8:	or     eax,0x4
    55fb:	jmp    55c0 <__ctype_b_loc@plt+0x2cf0>
    55fd:	mov    eax,DWORD PTR [r13+0x10]
    5601:	or     eax,0x10
    5604:	jmp    55c0 <__ctype_b_loc@plt+0x2cf0>
    5606:	mov    eax,DWORD PTR [r13+0x10]
    560a:	or     eax,0x8
    560d:	jmp    55c0 <__ctype_b_loc@plt+0x2cf0>
    560f:	nop
    5610:	mov    r8,QWORD PTR [r15+0x8]
    5614:	lea    rdi,[r8+0x8]
    5618:	mov    QWORD PTR [r15+0x8],rdi
    561c:	jmp    5449 <__ctype_b_loc@plt+0x2b79>
    5621:	nop    DWORD PTR [rax+0x0]
    5628:	lea    eax,[r12-0x25]
    562d:	cmp    al,0x53
    562f:	ja     6060 <__ctype_b_loc@plt+0x3790>
    5635:	lea    rcx,[rip+0xbf6c]        # 115a8 <__ctype_b_loc@plt+0xecd8>
    563c:	movzx  eax,al
    563f:	movsxd rax,DWORD PTR [rcx+rax*4]
    5643:	add    rax,rcx
    5646:	notrack jmp rax
    5649:	nop    DWORD PTR [rax+0x0]
    5650:	add    edx,0x8
    5653:	movzx  r12d,BYTE PTR [rbx]
    5657:	add    rbx,0x1
    565b:	cmp    r12b,0x68
    565f:	jne    55a0 <__ctype_b_loc@plt+0x2cd0>
    5665:	mov    ecx,edx
    5667:	mov    eax,edi
    5669:	and    ecx,0x1
    566c:	shl    eax,cl
    566e:	or     edx,eax
    5670:	jmp    5653 <__ctype_b_loc@plt+0x2d83>
    5672:	nop    WORD PTR [rax+rax*1+0x0]
    5678:	mov    edi,DWORD PTR [r15+0x4]
    567c:	cmp    edi,0xaf
    5682:	ja     6550 <__ctype_b_loc@plt+0x3c80>
    5688:	mov    r8d,edi
    568b:	add    edi,0x10
    568e:	add    r8,QWORD PTR [r15+0x10]
    5692:	mov    DWORD PTR [r15+0x4],edi
    5696:	movsd  xmm0,QWORD PTR [r8]
    569b:	movsd  QWORD PTR [rax+0x10],xmm0
    56a0:	jmp    50f8 <__ctype_b_loc@plt+0x2828>
    56a5:	nop    DWORD PTR [rax]
    56a8:	mov    rdi,QWORD PTR [r15+0x8]
    56ac:	add    rdi,0xf
    56b0:	and    rdi,0xfffffffffffffff0
    56b4:	lea    r8,[rdi+0x10]
    56b8:	mov    QWORD PTR [r15+0x8],r8
    56bc:	fld    TBYTE PTR [rdi]
    56be:	fstp   TBYTE PTR [rax+0x10]
    56c1:	jmp    50f8 <__ctype_b_loc@plt+0x2828>
    56c6:	cs nop WORD PTR [rax+rax*1+0x0]
    56d0:	mov    edi,DWORD PTR [r15]
    56d3:	cmp    edi,0x2f
    56d6:	jbe    6568 <__ctype_b_loc@plt+0x3c98>
    56dc:	mov    r8,QWORD PTR [r15+0x8]
    56e0:	lea    rdi,[r8+0x8]
    56e4:	mov    QWORD PTR [r15+0x8],rdi
    56e8:	mov    rdi,QWORD PTR [r8]
    56eb:	test   rdi,rdi
    56ee:	cmove  rdi,rbx
    56f2:	mov    QWORD PTR [rax+0x10],rdi
    56f6:	jmp    50f8 <__ctype_b_loc@plt+0x2828>
    56fb:	nop    DWORD PTR [rax+rax*1+0x0]
    5700:	mov    edi,DWORD PTR [r15]
    5703:	cmp    edi,0x2f
    5706:	jbe    6580 <__ctype_b_loc@plt+0x3cb0>
    570c:	mov    r8,QWORD PTR [r15+0x8]
    5710:	lea    rdi,[r8+0x8]
    5714:	mov    QWORD PTR [r15+0x8],rdi
    5718:	mov    rdi,QWORD PTR [r8]
    571b:	test   rdi,rdi
    571e:	cmove  rdi,r10
    5722:	mov    QWORD PTR [rax+0x10],rdi
    5726:	jmp    50f8 <__ctype_b_loc@plt+0x2828>
    572b:	nop    DWORD PTR [rax+rax*1+0x0]
    5730:	mov    r8d,edi
    5733:	add    edi,0x8
    5736:	add    r8,QWORD PTR [r15+0x10]
    573a:	mov    DWORD PTR [r15],edi
    573d:	jmp    5470 <__ctype_b_loc@plt+0x2ba0>
    5742:	nop    WORD PTR [rax+rax*1+0x0]
    5748:	mov    r8d,edi
    574b:	add    edi,0x8
    574e:	add    r8,QWORD PTR [r15+0x10]
    5752:	mov    DWORD PTR [r15],edi
    5755:	jmp    5498 <__ctype_b_loc@plt+0x2bc8>
    575a:	nop    WORD PTR [rax+rax*1+0x0]
    5760:	mov    rsi,QWORD PTR [rbp-0x3c8]
    5767:	mov    eax,0x1
    576c:	mov    QWORD PTR [r13+0x18],rbx
    5770:	mov    QWORD PTR [r13+0x20],rdx
    5774:	movzx  ecx,BYTE PTR [rbx+0x1]
    5778:	test   rsi,rsi
    577b:	cmovne rax,rsi
    577f:	mov    QWORD PTR [rbp-0x3c8],rax
    5786:	lea    eax,[rcx-0x30]
    5789:	cmp    al,0x9
    578b:	jbe    66b9 <__ctype_b_loc@plt+0x3de9>
    5791:	mov    rbx,QWORD PTR [rbp-0x3d8]
    5798:	mov    QWORD PTR [r13+0x28],rbx
    579c:	lea    rax,[rbx+0x1]
    57a0:	cmp    rbx,0xffffffffffffffff
    57a4:	je     6060 <__ctype_b_loc@plt+0x3790>
    57aa:	mov    r12,QWORD PTR [rbp-0x3d8]
    57b1:	mov    QWORD PTR [rbp-0x3d8],rax
    57b8:	mov    rbx,rdx
    57bb:	mov    rdi,QWORD PTR [rbp-0x3a8]
    57c2:	cmp    r8,r12
    57c5:	ja     5851 <__ctype_b_loc@plt+0x2f81>
    57cb:	add    r8,r8
    57ce:	lea    rax,[r12+0x1]
    57d3:	cmp    r8,r12
    57d6:	cmovbe r8,rax
    57da:	mov    rax,r8
    57dd:	shr    rax,0x3b
    57e1:	jne    6d1d <__ctype_b_loc@plt+0x444d>
    57e7:	mov    rsi,r8
    57ea:	mov    QWORD PTR [rbp-0x3f8],r11
    57f1:	shl    rsi,0x5
    57f5:	cmp    rdi,QWORD PTR [rbp-0x400]
    57fc:	mov    QWORD PTR [rbp-0x3e8],r8
    5803:	mov    QWORD PTR [rbp-0x3e0],r9
    580a:	je     6c91 <__ctype_b_loc@plt+0x43c1>
    5810:	call   27b0 <realloc@plt>
    5815:	mov    r9,QWORD PTR [rbp-0x3e0]
    581c:	mov    r8,QWORD PTR [rbp-0x3e8]
    5823:	mov    rdi,rax
    5826:	mov    r11,QWORD PTR [rbp-0x3f8]
    582d:	mov    rax,QWORD PTR [rbp-0x3a8]
    5834:	test   rdi,rdi
    5837:	je     708f <__ctype_b_loc@plt+0x47bf>
    583d:	cmp    rax,QWORD PTR [rbp-0x400]
    5844:	je     6ef8 <__ctype_b_loc@plt+0x4628>
    584a:	mov    QWORD PTR [rbp-0x3a8],rdi
    5851:	mov    rdx,QWORD PTR [rbp-0x3b0]
    5858:	mov    rax,rdx
    585b:	shl    rax,0x5
    585f:	add    rax,rdi
    5862:	cmp    rdx,r12
    5865:	ja     5893 <__ctype_b_loc@plt+0x2fc3>
    5867:	nop    WORD PTR [rax+rax*1+0x0]
    5870:	add    rdx,0x1
    5874:	mov    DWORD PTR [rax],0x0
    587a:	mov    rcx,rax
    587d:	add    rax,0x20
    5881:	cmp    rdx,r12
    5884:	jbe    5870 <__ctype_b_loc@plt+0x2fa0>
    5886:	mov    QWORD PTR [rbp-0x3b0],rdx
    588d:	mov    DWORD PTR [rcx],0x0
    5893:	shl    r12,0x5
    5897:	add    r12,rdi
    589a:	mov    eax,DWORD PTR [r12]
    589e:	test   eax,eax
    58a0:	jne    6b6a <__ctype_b_loc@plt+0x429a>
    58a6:	mov    DWORD PTR [r12],0x5
    58ae:	movzx  r12d,BYTE PTR [rbx]
    58b2:	cmp    r12b,0x2e
    58b6:	jne    5581 <__ctype_b_loc@plt+0x2cb1>
    58bc:	nop    DWORD PTR [rax+0x0]
    58c0:	cmp    BYTE PTR [rbx+0x1],0x2a
    58c4:	jne    65ab <__ctype_b_loc@plt+0x3cdb>
    58ca:	mov    rsi,QWORD PTR [rbp-0x3d0]
    58d1:	mov    eax,0x2
    58d6:	lea    rcx,[rbx+0x2]
    58da:	mov    QWORD PTR [r13+0x30],rbx
    58de:	mov    QWORD PTR [r13+0x38],rcx
    58e2:	cmp    rsi,rax
    58e5:	cmovae rax,rsi
    58e9:	movzx  esi,BYTE PTR [rbx+0x2]
    58ed:	mov    QWORD PTR [rbp-0x3d0],rax
    58f4:	lea    eax,[rsi-0x30]
    58f7:	cmp    al,0x9
    58f9:	jbe    6d2f <__ctype_b_loc@plt+0x445f>
    58ff:	mov    rbx,QWORD PTR [r13+0x40]
    5903:	cmp    rbx,0xffffffffffffffff
    5907:	je     6ce2 <__ctype_b_loc@plt+0x4412>
    590d:	mov    rdi,QWORD PTR [rbp-0x3a8]
    5914:	cmp    r8,rbx
    5917:	ja     59b0 <__ctype_b_loc@plt+0x30e0>
    591d:	add    r8,r8
    5920:	lea    rax,[rbx+0x1]
    5924:	cmp    r8,rbx
    5927:	cmovbe r8,rax
    592b:	mov    rax,r8
    592e:	shr    rax,0x3b
    5932:	jne    6d1d <__ctype_b_loc@plt+0x444d>
    5938:	mov    rsi,r8
    593b:	mov    QWORD PTR [rbp-0x418],r11
    5942:	shl    rsi,0x5
    5946:	cmp    rdi,QWORD PTR [rbp-0x400]
    594d:	mov    QWORD PTR [rbp-0x3f8],r8
    5954:	mov    QWORD PTR [rbp-0x3e8],r9
    595b:	mov    QWORD PTR [rbp-0x3e0],rcx
    5962:	je     6f41 <__ctype_b_loc@plt+0x4671>
    5968:	call   27b0 <realloc@plt>
    596d:	mov    rcx,QWORD PTR [rbp-0x3e0]
    5974:	mov    r9,QWORD PTR [rbp-0x3e8]
    597b:	mov    rdi,rax
    597e:	mov    r8,QWORD PTR [rbp-0x3f8]
    5985:	mov    rax,QWORD PTR [rbp-0x3a8]
    598c:	test   rdi,rdi
    598f:	mov    r11,QWORD PTR [rbp-0x418]
    5996:	je     708f <__ctype_b_loc@plt+0x47bf>
    599c:	cmp    rax,QWORD PTR [rbp-0x400]
    59a3:	je     6f71 <__ctype_b_loc@plt+0x46a1>
    59a9:	mov    QWORD PTR [rbp-0x3a8],rdi
    59b0:	mov    rdx,QWORD PTR [rbp-0x3b0]
    59b7:	mov    rax,rdx
    59ba:	shl    rax,0x5
    59be:	add    rax,rdi
    59c1:	cmp    rdx,rbx
    59c4:	ja     59f3 <__ctype_b_loc@plt+0x3123>
    59c6:	cs nop WORD PTR [rax+rax*1+0x0]
    59d0:	add    rdx,0x1
    59d4:	mov    DWORD PTR [rax],0x0
    59da:	mov    rsi,rax
    59dd:	add    rax,0x20
    59e1:	cmp    rdx,rbx
    59e4:	jbe    59d0 <__ctype_b_loc@plt+0x3100>
    59e6:	mov    QWORD PTR [rbp-0x3b0],rdx
    59ed:	mov    DWORD PTR [rsi],0x0
    59f3:	shl    rbx,0x5
    59f7:	lea    rax,[rdi+rbx*1]
    59fb:	mov    edx,DWORD PTR [rax]
    59fd:	test   edx,edx
    59ff:	jne    6c62 <__ctype_b_loc@plt+0x4392>
    5a05:	mov    DWORD PTR [rax],0x5
    5a0b:	mov    rbx,rcx
    5a0e:	movzx  r12d,BYTE PTR [rcx]
    5a12:	jmp    5581 <__ctype_b_loc@plt+0x2cb1>
    5a17:	mov    rax,QWORD PTR [rbp-0x3c8]
    5a1e:	mov    BYTE PTR [rax],0x6c
    5a21:	add    rax,0x1
    5a25:	mov    QWORD PTR [rbp-0x3c8],rax
    5a2c:	mov    rax,QWORD PTR [rbp-0x3c8]
    5a33:	mov    BYTE PTR [rax],0x6c
    5a36:	add    rax,0x1
    5a3a:	mov    QWORD PTR [rbp-0x3c8],rax
    5a41:	movzx  eax,BYTE PTR [r13+0x48]
    5a46:	mov    rsi,QWORD PTR [rbp-0x3c8]
    5a4d:	mov    BYTE PTR [rsi],al
    5a4f:	mov    BYTE PTR [rsi+0x1],0x0
    5a53:	mov    rax,QWORD PTR [r13+0x28]
    5a57:	cmp    rax,0xffffffffffffffff
    5a5b:	je     5fb0 <__ctype_b_loc@plt+0x36e0>
    5a61:	shl    rax,0x5
    5a65:	add    rax,r15
    5a68:	cmp    DWORD PTR [rax],0x5
    5a6b:	jne    28e0 <__ctype_b_loc@plt+0x10>
    5a71:	mov    DWORD PTR [rbp-0x3e8],0x1
    5a7b:	mov    eax,DWORD PTR [rax+0x10]
    5a7e:	mov    DWORD PTR [rbp-0x3b8],eax
    5a84:	mov    rax,QWORD PTR [r13+0x40]
    5a88:	cmp    rax,0xffffffffffffffff
    5a8c:	je     5ab8 <__ctype_b_loc@plt+0x31e8>
    5a8e:	shl    rax,0x5
    5a92:	lea    rcx,[r15+rax*1]
    5a96:	cmp    DWORD PTR [rcx],0x5
    5a99:	jne    28e0 <__ctype_b_loc@plt+0x10>
    5a9f:	mov    eax,DWORD PTR [rbp-0x3e8]
    5aa5:	mov    edx,DWORD PTR [rcx+0x10]
    5aa8:	mov    DWORD PTR [rbp+rax*4-0x3b8],edx
    5aaf:	lea    eax,[rax+0x1]
    5ab2:	mov    DWORD PTR [rbp-0x3e8],eax
    5ab8:	mov    rax,rbx
    5abb:	add    rax,0x2
    5abf:	jb     5dca <__ctype_b_loc@plt+0x34fa>
    5ac5:	cmp    r14,rax
    5ac8:	jae    6980 <__ctype_b_loc@plt+0x40b0>
    5ace:	test   r14,r14
    5ad1:	jne    64f8 <__ctype_b_loc@plt+0x3c28>
    5ad7:	cmp    rax,0xc
    5adb:	ja     650a <__ctype_b_loc@plt+0x3c3a>
    5ae1:	mov    r14d,0xc
    5ae7:	cmp    r8,QWORD PTR [rbp-0x3f0]
    5aee:	jne    6524 <__ctype_b_loc@plt+0x3c54>
    5af4:	mov    rdi,r14
    5af7:	mov    QWORD PTR [rbp-0x3d0],r8
    5afe:	call   2780 <malloc@plt>
    5b03:	mov    r8,QWORD PTR [rbp-0x3d0]
    5b0a:	test   rax,rax
    5b0d:	mov    r15,rax
    5b10:	je     5dd8 <__ctype_b_loc@plt+0x3508>
    5b16:	test   rbx,rbx
    5b19:	je     5b2d <__ctype_b_loc@plt+0x325d>
    5b1b:	mov    rsi,QWORD PTR [rbp-0x3f0]
    5b22:	mov    rdx,rbx
    5b25:	mov    rdi,rax
    5b28:	call   2750 <memcpy@plt>
    5b2d:	mov    BYTE PTR [r15+rbx*1],0x0
    5b32:	mov    r12,r15
    5b35:	mov    r15,r13
    5b38:	call   2520 <__errno_location@plt>
    5b3d:	mov    QWORD PTR [rbp-0x3d0],rax
    5b44:	mov    eax,DWORD PTR [rax]
    5b46:	mov    DWORD PTR [rbp-0x41c],eax
    5b4c:	nop    DWORD PTR [rax+0x0]
    5b50:	mov    r10,r14
    5b53:	mov    esi,0x7fffffff
    5b58:	mov    rax,QWORD PTR [rbp-0x3d0]
    5b5f:	mov    DWORD PTR [rbp-0x3bc],0xffffffff
    5b69:	sub    r10,rbx
    5b6c:	cmp    r10,rsi
    5b6f:	mov    DWORD PTR [rax],0x0
    5b75:	mov    eax,DWORD PTR [rbp-0x3d8]
    5b7b:	cmovbe rsi,r10
    5b7f:	mov    r13,rsi
    5b82:	cmp    eax,0x11
    5b85:	ja     28e5 <__ctype_b_loc@plt+0x15>
    5b8b:	lea    rcx,[rip+0xbb66]        # 116f8 <__ctype_b_loc@plt+0xee28>
    5b92:	movsxd rax,DWORD PTR [rcx+rax*4]
    5b96:	add    rax,rcx
    5b99:	notrack jmp rax
    5b9c:	nop    DWORD PTR [rax+0x0]
    5ba0:	add    rax,0x1d
    5ba4:	mov    rcx,rsp
    5ba7:	mov    rdx,rax
    5baa:	and    rax,0xfffffffffffff000
    5bb0:	and    rdx,0xfffffffffffffff0
    5bb4:	sub    rcx,rax
    5bb7:	cmp    rsp,rcx
    5bba:	je     675f <__ctype_b_loc@plt+0x3e8f>
    5bc0:	sub    rsp,0x1000
    5bc7:	or     QWORD PTR [rsp+0xff8],0x0
    5bd0:	jmp    5bb7 <__ctype_b_loc@plt+0x32e7>
    5bd2:	or     edx,0x4
    5bd5:	jmp    5653 <__ctype_b_loc@plt+0x2d83>
    5bda:	xor    ecx,ecx
    5bdc:	cmp    edx,0x7
    5bdf:	setg   cl
    5be2:	add    ecx,0xd
    5be5:	nop    DWORD PTR [rax]
    5be8:	cmp    r14,0xffffffffffffffff
    5bec:	je     6950 <__ctype_b_loc@plt+0x4080>
    5bf2:	mov    QWORD PTR [r13+0x50],r14
    5bf6:	mov    rdi,QWORD PTR [rbp-0x3a8]
    5bfd:	cmp    r8,r14
    5c00:	ja     5c97 <__ctype_b_loc@plt+0x33c7>
    5c06:	add    r8,r8
    5c09:	lea    rax,[r14+0x1]
    5c0d:	cmp    r8,r14
    5c10:	cmovbe r8,rax
    5c14:	mov    rax,r8
    5c17:	shr    rax,0x3b
    5c1b:	jne    6d1d <__ctype_b_loc@plt+0x444d>
    5c21:	mov    rsi,r8
    5c24:	mov    QWORD PTR [rbp-0x418],r11
    5c2b:	shl    rsi,0x5
    5c2f:	cmp    rdi,QWORD PTR [rbp-0x400]
    5c36:	mov    QWORD PTR [rbp-0x3f8],r8
    5c3d:	mov    QWORD PTR [rbp-0x3e8],r9
    5c44:	mov    DWORD PTR [rbp-0x3e0],ecx
    5c4a:	je     6b78 <__ctype_b_loc@plt+0x42a8>
    5c50:	call   27b0 <realloc@plt>
    5c55:	mov    ecx,DWORD PTR [rbp-0x3e0]
    5c5b:	mov    r9,QWORD PTR [rbp-0x3e8]
    5c62:	test   rax,rax
    5c65:	mov    r8,QWORD PTR [rbp-0x3f8]
    5c6c:	mov    r11,QWORD PTR [rbp-0x418]
    5c73:	mov    rdi,rax
    5c76:	je     6d16 <__ctype_b_loc@plt+0x4446>
    5c7c:	mov    rax,QWORD PTR [rbp-0x400]
    5c83:	cmp    QWORD PTR [rbp-0x3a8],rax
    5c8a:	je     6ba3 <__ctype_b_loc@plt+0x42d3>
    5c90:	mov    QWORD PTR [rbp-0x3a8],rdi
    5c97:	mov    rdx,QWORD PTR [rbp-0x3b0]
    5c9e:	mov    rax,rdx
    5ca1:	shl    rax,0x5
    5ca5:	add    rax,rdi
    5ca8:	cmp    rdx,r14
    5cab:	ja     5cd3 <__ctype_b_loc@plt+0x3403>
    5cad:	nop    DWORD PTR [rax]
    5cb0:	add    rdx,0x1
    5cb4:	mov    DWORD PTR [rax],0x0
    5cba:	mov    rsi,rax
    5cbd:	add    rax,0x20
    5cc1:	cmp    rdx,r14
    5cc4:	jbe    5cb0 <__ctype_b_loc@plt+0x33e0>
    5cc6:	mov    QWORD PTR [rbp-0x3b0],rdx
    5ccd:	mov    DWORD PTR [rsi],0x0
    5cd3:	shl    r14,0x5
    5cd7:	add    r14,rdi
    5cda:	mov    eax,DWORD PTR [r14]
    5cdd:	test   eax,eax
    5cdf:	jne    6940 <__ctype_b_loc@plt+0x4070>
    5ce5:	mov    DWORD PTR [r14],ecx
    5ce8:	mov    rax,QWORD PTR [rbp-0x2c0]
    5cef:	mov    BYTE PTR [r13+0x48],r12b
    5cf3:	mov    QWORD PTR [r13+0x8],rbx
    5cf7:	lea    r14,[rax+0x1]
    5cfb:	mov    QWORD PTR [rbp-0x2c0],r14
    5d02:	cmp    r14,r9
    5d05:	jae    5f10 <__ctype_b_loc@plt+0x3640>
    5d0b:	mov    r13,QWORD PTR [rbp-0x2b8]
    5d12:	jmp    505d <__ctype_b_loc@plt+0x278d>
    5d17:	nop    WORD PTR [rax+rax*1+0x0]
    5d20:	cmp    rax,0xffffffffffffffff
    5d24:	jne    28e0 <__ctype_b_loc@plt+0x10>
    5d2a:	lea    r12,[rbx+0x1]
    5d2e:	cmp    rbx,0xffffffffffffffff
    5d32:	mov    rax,0xffffffffffffffff
    5d39:	cmovae r12,rax
    5d3d:	cmp    r14,r12
    5d40:	jae    5da0 <__ctype_b_loc@plt+0x34d0>
    5d42:	test   r14,r14
    5d45:	jne    659d <__ctype_b_loc@plt+0x3ccd>
    5d4b:	mov    r14d,0xc
    5d51:	cmp    r14,r12
    5d54:	cmovb  r14,r12
    5d58:	cmp    r14,0xffffffffffffffff
    5d5c:	je     5dd8 <__ctype_b_loc@plt+0x3508>
    5d5e:	cmp    r8,QWORD PTR [rbp-0x3f0]
    5d65:	jne    6ae8 <__ctype_b_loc@plt+0x4218>
    5d6b:	mov    rdi,r14
    5d6e:	mov    QWORD PTR [rbp-0x3c8],r8
    5d75:	call   2780 <malloc@plt>
    5d7a:	mov    r8,QWORD PTR [rbp-0x3c8]
    5d81:	test   rax,rax
    5d84:	je     5dd8 <__ctype_b_loc@plt+0x3508>
    5d86:	test   rbx,rbx
    5d89:	je     6d0e <__ctype_b_loc@plt+0x443e>
    5d8f:	mov    rsi,r8
    5d92:	mov    rdx,rbx
    5d95:	mov    rdi,rax
    5d98:	call   2750 <memcpy@plt>
    5d9d:	mov    r8,rax
    5da0:	mov    BYTE PTR [r8+rbx*1],0x25
    5da5:	mov    r11,QWORD PTR [r13+0x8]
    5da9:	mov    r15,QWORD PTR [r13+0x58]
    5dad:	add    r13,0x58
    5db1:	add    QWORD PTR [rbp-0x3f8],0x1
    5db9:	cmp    r15,r11
    5dbc:	jne    51b1 <__ctype_b_loc@plt+0x28e1>
    5dc2:	mov    rbx,r12
    5dc5:	jmp    5270 <__ctype_b_loc@plt+0x29a0>
    5dca:	cmp    r14,0xffffffffffffffff
    5dce:	je     6980 <__ctype_b_loc@plt+0x40b0>
    5dd4:	nop    DWORD PTR [rax+0x0]
    5dd8:	mov    QWORD PTR [rbp-0x3c8],r8
    5ddf:	call   2520 <__errno_location@plt>
    5de4:	mov    r8,QWORD PTR [rbp-0x3c8]
    5deb:	mov    QWORD PTR [rbp-0x3d0],rax
    5df2:	nop    WORD PTR [rax+rax*1+0x0]
    5df8:	cmp    r8,QWORD PTR [rbp-0x3f0]
    5dff:	jne    6673 <__ctype_b_loc@plt+0x3da3>
    5e05:	cmp    QWORD PTR [rbp-0x418],0x0
    5e0d:	je     5e1b <__ctype_b_loc@plt+0x354b>
    5e0f:	mov    rdi,QWORD PTR [rbp-0x418]
    5e16:	call   24e0 <free@plt>
    5e1b:	mov    r13,QWORD PTR [rbp-0x2b8]
    5e22:	cmp    r13,QWORD PTR [rbp-0x408]
    5e29:	je     5e33 <__ctype_b_loc@plt+0x3563>
    5e2b:	mov    rdi,r13
    5e2e:	call   24e0 <free@plt>
    5e33:	mov    rdi,QWORD PTR [rbp-0x3a8]
    5e3a:	cmp    rdi,QWORD PTR [rbp-0x400]
    5e41:	je     5e48 <__ctype_b_loc@plt+0x3578>
    5e43:	call   24e0 <free@plt>
    5e48:	mov    rax,QWORD PTR [rbp-0x3d0]
    5e4f:	xor    r8d,r8d
    5e52:	mov    DWORD PTR [rax],0xc
    5e58:	mov    rax,QWORD PTR [rbp-0x38]
    5e5c:	sub    rax,QWORD PTR fs:0x28
    5e65:	jne    70b2 <__ctype_b_loc@plt+0x47e2>
    5e6b:	lea    rsp,[rbp-0x28]
    5e6f:	mov    rax,r8
    5e72:	pop    rbx
    5e73:	pop    r12
    5e75:	pop    r13
    5e77:	pop    r14
    5e79:	pop    r15
    5e7b:	pop    rbp
    5e7c:	ret    
    5e7d:	nop    DWORD PTR [rax]
    5e80:	mov    r14d,0xc
    5e86:	jmp    51e0 <__ctype_b_loc@plt+0x2910>
    5e8b:	nop    DWORD PTR [rax+rax*1+0x0]
    5e90:	mov    rsi,r14
    5e93:	mov    rdi,r8
    5e96:	mov    QWORD PTR [rbp-0x3c8],r8
    5e9d:	call   27b0 <realloc@plt>
    5ea2:	mov    r11,QWORD PTR [rbp-0x3d0]
    5ea9:	test   rax,rax
    5eac:	je     6660 <__ctype_b_loc@plt+0x3d90>
    5eb2:	mov    r8,rax
    5eb5:	jmp    5253 <__ctype_b_loc@plt+0x2983>
    5eba:	nop    WORD PTR [rax+rax*1+0x0]
    5ec0:	mov    r12d,esi
    5ec3:	sub    r12d,0x12
    5ec7:	cmp    r12d,0x4
    5ecb:	ja     28e5 <__ctype_b_loc@plt+0x15>
    5ed1:	lea    rsi,[rip+0xb868]        # 11740 <__ctype_b_loc@plt+0xee70>
    5ed8:	mov    rax,QWORD PTR [rax+0x10]
    5edc:	movsxd rdx,DWORD PTR [rsi+r12*4]
    5ee0:	add    rdx,rsi
    5ee3:	notrack jmp rdx
    5ee6:	cs nop WORD PTR [rax+rax*1+0x0]
    5ef0:	mov    rsi,QWORD PTR [rbp-0x3e0]
    5ef7:	lea    rdi,[rsi+0x2]
    5efb:	mov    BYTE PTR [rsi+0x1],0x27
    5eff:	mov    QWORD PTR [rbp-0x3c8],rdi
    5f06:	jmp    52e0 <__ctype_b_loc@plt+0x2a10>
    5f0b:	nop    DWORD PTR [rax+rax*1+0x0]
    5f10:	test   r9,r9
    5f13:	js     6d16 <__ctype_b_loc@plt+0x4446>
    5f19:	movabs rax,0x2e8ba2e8ba2e8ba
    5f23:	lea    r12,[r9+r9*1]
    5f27:	cmp    r12,rax
    5f2a:	ja     6d16 <__ctype_b_loc@plt+0x4446>
    5f30:	lea    rax,[r9+r9*4]
    5f34:	mov    rdi,QWORD PTR [rbp-0x2b8]
    5f3b:	mov    QWORD PTR [rbp-0x3e8],r11
    5f42:	lea    rsi,[r9+rax*2]
    5f46:	mov    QWORD PTR [rbp-0x3e0],r8
    5f4d:	shl    rsi,0x4
    5f51:	cmp    rdi,QWORD PTR [rbp-0x408]
    5f58:	je     6602 <__ctype_b_loc@plt+0x3d32>
    5f5e:	call   27b0 <realloc@plt>
    5f63:	mov    r8,QWORD PTR [rbp-0x3e0]
    5f6a:	mov    r11,QWORD PTR [rbp-0x3e8]
    5f71:	test   rax,rax
    5f74:	mov    r13,rax
    5f77:	je     6d16 <__ctype_b_loc@plt+0x4446>
    5f7d:	mov    rax,QWORD PTR [rbp-0x408]
    5f84:	cmp    QWORD PTR [rbp-0x2b8],rax
    5f8b:	je     7097 <__ctype_b_loc@plt+0x47c7>
    5f91:	mov    QWORD PTR [rbp-0x2b8],r13
    5f98:	mov    r14,QWORD PTR [rbp-0x2c0]
    5f9f:	mov    r9,r12
    5fa2:	jmp    505d <__ctype_b_loc@plt+0x278d>
    5fa7:	nop    WORD PTR [rax+rax*1+0x0]
    5fb0:	mov    DWORD PTR [rbp-0x3e8],0x0
    5fba:	jmp    5a84 <__ctype_b_loc@plt+0x31b4>
    5fbf:	nop
    5fc0:	mov    rdx,rbx
    5fc3:	nop    DWORD PTR [rax+rax*1+0x0]
    5fc8:	movzx  ecx,BYTE PTR [rdx+0x1]
    5fcc:	add    rdx,0x1
    5fd0:	lea    esi,[rcx-0x30]
    5fd3:	cmp    sil,0x9
    5fd7:	jbe    5fc8 <__ctype_b_loc@plt+0x36f8>
    5fd9:	mov    r14,0xffffffffffffffff
    5fe0:	cmp    cl,0x24
    5fe3:	jne    552b <__ctype_b_loc@plt+0x2c5b>
    5fe9:	add    rax,0x2
    5fed:	xor    edi,edi
    5fef:	jmp    6005 <__ctype_b_loc@plt+0x3735>
    5ff1:	nop    DWORD PTR [rax+0x0]
    5ff8:	cmp    dl,0x9
    5ffb:	ja     6ed9 <__ctype_b_loc@plt+0x4609>
    6001:	add    rax,0x1
    6005:	lea    edx,[r12-0x30]
    600a:	lea    rcx,[rax-0x1]
    600e:	movabs rbx,0x1999999999999999
    6018:	movsx  rdx,dl
    601c:	cmp    rdi,rbx
    601f:	ja     6db5 <__ctype_b_loc@plt+0x44e5>
    6025:	lea    rsi,[rdi+rdi*4]
    6029:	add    rsi,rsi
    602c:	movzx  r12d,BYTE PTR [rax]
    6030:	add    rsi,rdx
    6033:	mov    rdi,rsi
    6036:	lea    edx,[r12-0x30]
    603b:	jae    5ff8 <__ctype_b_loc@plt+0x3728>
    603d:	cmp    dl,0x9
    6040:	ja     6060 <__ctype_b_loc@plt+0x3790>
    6042:	mov    rcx,rax
    6045:	movsx  rdx,dl
    6049:	add    rax,0x1
    604d:	mov    rsi,0xffffffffffffffff
    6054:	jmp    602c <__ctype_b_loc@plt+0x375c>
    6056:	cs nop WORD PTR [rax+rax*1+0x0]
    6060:	mov    rdi,QWORD PTR [rbp-0x3a8]
    6067:	cmp    rdi,QWORD PTR [rbp-0x400]
    606e:	je     6075 <__ctype_b_loc@plt+0x37a5>
    6070:	call   24e0 <free@plt>
    6075:	mov    rdi,QWORD PTR [rbp-0x2b8]
    607c:	cmp    rdi,QWORD PTR [rbp-0x408]
    6083:	je     608a <__ctype_b_loc@plt+0x37ba>
    6085:	call   24e0 <free@plt>
    608a:	call   2520 <__errno_location@plt>
    608f:	xor    r8d,r8d
    6092:	mov    DWORD PTR [rax],0x16
    6098:	jmp    5e58 <__ctype_b_loc@plt+0x3588>
    609d:	nop    DWORD PTR [rax]
    60a0:	mov    rax,QWORD PTR [r15+0x50]
    60a4:	lea    rdi,[r12+rbx*1]
    60a8:	shl    rax,0x5
    60ac:	add    rax,QWORD PTR [rbp-0x3a8]
    60b3:	mov    r9,QWORD PTR [rax+0x10]
    60b7:	mov    eax,DWORD PTR [rbp-0x3e8]
    60bd:	mov    QWORD PTR [rbp-0x428],r10
    60c4:	cmp    eax,0x1
    60c7:	je     6910 <__ctype_b_loc@plt+0x4040>
    60cd:	cmp    eax,0x2
    60d0:	je     68f8 <__ctype_b_loc@plt+0x4028>
    60d6:	sub    rsp,0x8
    60da:	lea    rax,[rbp-0x3bc]
    60e1:	push   rax
    60e2:	mov    r8,QWORD PTR [rbp-0x3e0]
    60e9:	mov    rcx,0xffffffffffffffff
    60f0:	mov    rsi,r13
    60f3:	xor    eax,eax
    60f5:	mov    edx,0x1
    60fa:	call   24c0 <__snprintf_chk@plt>
    60ff:	mov    r10,QWORD PTR [rbp-0x428]
    6106:	pop    rdx
    6107:	pop    rcx
    6108:	mov    edx,DWORD PTR [rbp-0x3bc]
    610e:	test   edx,edx
    6110:	js     6258 <__ctype_b_loc@plt+0x3988>
    6116:	movsxd rcx,edx
    6119:	cmp    rcx,r13
    611c:	jae    612b <__ctype_b_loc@plt+0x385b>
    611e:	add    rcx,r12
    6121:	cmp    BYTE PTR [rcx+rbx*1],0x0
    6125:	jne    28e0 <__ctype_b_loc@plt+0x10>
    612b:	cmp    edx,eax
    612d:	jge    6137 <__ctype_b_loc@plt+0x3867>
    612f:	mov    DWORD PTR [rbp-0x3bc],eax
    6135:	mov    edx,eax
    6137:	lea    eax,[rdx+0x1]
    613a:	cmp    rax,r13
    613d:	jb     6a60 <__ctype_b_loc@plt+0x4190>
    6143:	cmp    r10,0x7ffffffe
    614a:	ja     6a88 <__ctype_b_loc@plt+0x41b8>
    6150:	lea    eax,[rdx+0x2]
    6153:	xor    ecx,ecx
    6155:	add    rax,rbx
    6158:	setb   cl
    615b:	test   r14,r14
    615e:	js     68a0 <__ctype_b_loc@plt+0x3fd0>
    6164:	lea    rdx,[r14+r14*1]
    6168:	test   rcx,rcx
    616b:	jne    68ea <__ctype_b_loc@plt+0x401a>
    6171:	cmp    rdx,rax
    6174:	cmovae rax,rdx
    6178:	cmp    r14,rax
    617b:	jae    5b50 <__ctype_b_loc@plt+0x3280>
    6181:	test   r14,r14
    6184:	mov    ecx,0xc
    6189:	cmove  rdx,rcx
    618d:	cmp    rdx,rax
    6190:	cmovae rax,rdx
    6194:	mov    r14,rax
    6197:	cmp    rax,0xffffffffffffffff
    619b:	je     68ea <__ctype_b_loc@plt+0x401a>
    61a1:	cmp    r12,QWORD PTR [rbp-0x3f0]
    61a8:	jne    68c0 <__ctype_b_loc@plt+0x3ff0>
    61ae:	mov    rdi,rax
    61b1:	call   2780 <malloc@plt>
    61b6:	test   rax,rax
    61b9:	je     68ea <__ctype_b_loc@plt+0x401a>
    61bf:	test   rbx,rbx
    61c2:	je     6930 <__ctype_b_loc@plt+0x4060>
    61c8:	mov    rsi,r12
    61cb:	mov    rdx,rbx
    61ce:	mov    rdi,rax
    61d1:	call   2750 <memcpy@plt>
    61d6:	mov    r12,rax
    61d9:	jmp    5b50 <__ctype_b_loc@plt+0x3280>
    61de:	xchg   ax,ax
    61e0:	mov    rax,QWORD PTR [r15+0x50]
    61e4:	lea    rdi,[r12+rbx*1]
    61e8:	shl    rax,0x5
    61ec:	add    rax,QWORD PTR [rbp-0x3a8]
    61f3:	mov    r9d,DWORD PTR [rax+0x10]
    61f7:	mov    eax,DWORD PTR [rbp-0x3e8]
    61fd:	cmp    eax,0x1
    6200:	je     63f0 <__ctype_b_loc@plt+0x3b20>
    6206:	mov    QWORD PTR [rbp-0x428],r10
    620d:	cmp    eax,0x2
    6210:	je     6448 <__ctype_b_loc@plt+0x3b78>
    6216:	sub    rsp,0x8
    621a:	lea    rax,[rbp-0x3bc]
    6221:	push   rax
    6222:	mov    r8,QWORD PTR [rbp-0x3e0]
    6229:	mov    edx,0x1
    622e:	mov    rsi,r13
    6231:	xor    eax,eax
    6233:	mov    rcx,0xffffffffffffffff
    623a:	call   24c0 <__snprintf_chk@plt>
    623f:	mov    edx,DWORD PTR [rbp-0x3bc]
    6245:	pop    r8
    6247:	mov    r10,QWORD PTR [rbp-0x428]
    624e:	pop    r9
    6250:	test   edx,edx
    6252:	jns    6116 <__ctype_b_loc@plt+0x3846>
    6258:	mov    rsi,QWORD PTR [rbp-0x3c8]
    625f:	cmp    BYTE PTR [rsi+0x1],0x0
    6263:	jne    6920 <__ctype_b_loc@plt+0x4050>
    6269:	test   eax,eax
    626b:	jns    612f <__ctype_b_loc@plt+0x385f>
    6271:	mov    rax,QWORD PTR [rbp-0x3d0]
    6278:	mov    r13,r15
    627b:	mov    r15,r12
    627e:	mov    ebx,DWORD PTR [rax]
    6280:	test   ebx,ebx
    6282:	jne    629b <__ctype_b_loc@plt+0x39cb>
    6284:	movzx  eax,BYTE PTR [r13+0x48]
    6289:	mov    ebx,0x54
    628e:	and    eax,0xffffffef
    6291:	cmp    al,0x63
    6293:	mov    eax,0x16
    6298:	cmovne ebx,eax
    629b:	cmp    r15,QWORD PTR [rbp-0x3f0]
    62a2:	jne    6c77 <__ctype_b_loc@plt+0x43a7>
    62a8:	mov    rax,QWORD PTR [rbp-0x418]
    62af:	test   rax,rax
    62b2:	je     62bc <__ctype_b_loc@plt+0x39ec>
    62b4:	mov    rdi,rax
    62b7:	call   24e0 <free@plt>
    62bc:	mov    rdi,QWORD PTR [rbp-0x2b8]
    62c3:	cmp    rdi,QWORD PTR [rbp-0x408]
    62ca:	je     62d1 <__ctype_b_loc@plt+0x3a01>
    62cc:	call   24e0 <free@plt>
    62d1:	mov    rdi,QWORD PTR [rbp-0x3a8]
    62d8:	cmp    rdi,QWORD PTR [rbp-0x400]
    62df:	je     62e6 <__ctype_b_loc@plt+0x3a16>
    62e1:	call   24e0 <free@plt>
    62e6:	mov    rax,QWORD PTR [rbp-0x3d0]
    62ed:	xor    r8d,r8d
    62f0:	mov    DWORD PTR [rax],ebx
    62f2:	jmp    5e58 <__ctype_b_loc@plt+0x3588>
    62f7:	nop    WORD PTR [rax+rax*1+0x0]
    6300:	mov    rax,QWORD PTR [r15+0x50]
    6304:	mov    QWORD PTR [rbp-0x428],r10
    630b:	lea    rdi,[r12+rbx*1]
    630f:	shl    rax,0x5
    6313:	add    rax,QWORD PTR [rbp-0x3a8]
    631a:	fld    TBYTE PTR [rax+0x10]
    631d:	mov    eax,DWORD PTR [rbp-0x3e8]
    6323:	cmp    eax,0x1
    6326:	je     69e0 <__ctype_b_loc@plt+0x4110>
    632c:	cmp    eax,0x2
    632f:	je     6990 <__ctype_b_loc@plt+0x40c0>
    6335:	sub    rsp,0x10
    6339:	lea    r9,[rbp-0x3bc]
    6340:	fstp   TBYTE PTR [rsp]
    6343:	jmp    60e2 <__ctype_b_loc@plt+0x3812>
    6348:	nop    DWORD PTR [rax+rax*1+0x0]
    6350:	mov    rax,QWORD PTR [r15+0x50]
    6354:	mov    QWORD PTR [rbp-0x428],r10
    635b:	lea    rdi,[r12+rbx*1]
    635f:	shl    rax,0x5
    6363:	add    rax,QWORD PTR [rbp-0x3a8]
    636a:	movsd  xmm0,QWORD PTR [rax+0x10]
    636f:	mov    eax,DWORD PTR [rbp-0x3e8]
    6375:	cmp    eax,0x1
    6378:	je     6a48 <__ctype_b_loc@plt+0x4178>
    637e:	cmp    eax,0x2
    6381:	je     6a00 <__ctype_b_loc@plt+0x4130>
    6387:	mov    r8,QWORD PTR [rbp-0x3e0]
    638e:	mov    edx,0x1
    6393:	mov    eax,0x1
    6398:	lea    r9,[rbp-0x3bc]
    639f:	mov    rcx,0xffffffffffffffff
    63a6:	call   24c0 <__snprintf_chk@plt>
    63ab:	mov    r10,QWORD PTR [rbp-0x428]
    63b2:	jmp    6108 <__ctype_b_loc@plt+0x3838>
    63b7:	nop    WORD PTR [rax+rax*1+0x0]
    63c0:	mov    rax,QWORD PTR [r15+0x50]
    63c4:	lea    rdi,[r12+rbx*1]
    63c8:	shl    rax,0x5
    63cc:	add    rax,QWORD PTR [rbp-0x3a8]
    63d3:	movzx  r9d,WORD PTR [rax+0x10]
    63d8:	mov    eax,DWORD PTR [rbp-0x3e8]
    63de:	cmp    eax,0x1
    63e1:	jne    6206 <__ctype_b_loc@plt+0x3936>
    63e7:	nop    WORD PTR [rax+rax*1+0x0]
    63f0:	lea    rax,[rbp-0x3bc]
    63f7:	mov    QWORD PTR [rbp-0x428],r10
    63fe:	push   rax
    63ff:	push   r9
    6401:	mov    r9d,DWORD PTR [rbp-0x3b8]
    6408:	jmp    6222 <__ctype_b_loc@plt+0x3952>
    640d:	nop    DWORD PTR [rax]
    6410:	mov    rax,QWORD PTR [r15+0x50]
    6414:	lea    rdi,[r12+rbx*1]
    6418:	shl    rax,0x5
    641c:	add    rax,QWORD PTR [rbp-0x3a8]
    6423:	movsx  r9d,WORD PTR [rax+0x10]
    6428:	mov    eax,DWORD PTR [rbp-0x3e8]
    642e:	cmp    eax,0x1
    6431:	je     63f0 <__ctype_b_loc@plt+0x3b20>
    6433:	mov    QWORD PTR [rbp-0x428],r10
    643a:	cmp    eax,0x2
    643d:	jne    6216 <__ctype_b_loc@plt+0x3946>
    6443:	nop    DWORD PTR [rax+rax*1+0x0]
    6448:	sub    rsp,0x8
    644c:	lea    rax,[rbp-0x3bc]
    6453:	push   rax
    6454:	push   r9
    6456:	mov    eax,DWORD PTR [rbp-0x3b4]
    645c:	push   rax
    645d:	mov    r9d,DWORD PTR [rbp-0x3b8]
    6464:	mov    edx,0x1
    6469:	mov    rsi,r13
    646c:	xor    eax,eax
    646e:	mov    r8,QWORD PTR [rbp-0x3e0]
    6475:	mov    rcx,0xffffffffffffffff
    647c:	call   24c0 <__snprintf_chk@plt>
    6481:	mov    r10,QWORD PTR [rbp-0x428]
    6488:	add    rsp,0x20
    648c:	jmp    6108 <__ctype_b_loc@plt+0x3838>
    6491:	nop    DWORD PTR [rax+0x0]
    6498:	mov    rax,QWORD PTR [r15+0x50]
    649c:	lea    rdi,[r12+rbx*1]
    64a0:	shl    rax,0x5
    64a4:	add    rax,QWORD PTR [rbp-0x3a8]
    64ab:	movzx  r9d,BYTE PTR [rax+0x10]
    64b0:	mov    eax,DWORD PTR [rbp-0x3e8]
    64b6:	cmp    eax,0x1
    64b9:	jne    6206 <__ctype_b_loc@plt+0x3936>
    64bf:	jmp    63f0 <__ctype_b_loc@plt+0x3b20>
    64c4:	nop    DWORD PTR [rax+0x0]
    64c8:	mov    rax,QWORD PTR [r15+0x50]
    64cc:	lea    rdi,[r12+rbx*1]
    64d0:	shl    rax,0x5
    64d4:	add    rax,QWORD PTR [rbp-0x3a8]
    64db:	movsx  r9d,BYTE PTR [rax+0x10]
    64e0:	mov    eax,DWORD PTR [rbp-0x3e8]
    64e6:	cmp    eax,0x1
    64e9:	jne    6206 <__ctype_b_loc@plt+0x3936>
    64ef:	jmp    63f0 <__ctype_b_loc@plt+0x3b20>
    64f4:	nop    DWORD PTR [rax+0x0]
    64f8:	js     5dd8 <__ctype_b_loc@plt+0x3508>
    64fe:	add    r14,r14
    6501:	cmp    r14,rax
    6504:	jae    5ae7 <__ctype_b_loc@plt+0x3217>
    650a:	cmp    rax,0xffffffffffffffff
    650e:	je     5dd8 <__ctype_b_loc@plt+0x3508>
    6514:	mov    r14,rax
    6517:	cmp    r8,QWORD PTR [rbp-0x3f0]
    651e:	je     5af4 <__ctype_b_loc@plt+0x3224>
    6524:	mov    rdi,r8
    6527:	mov    rsi,r14
    652a:	mov    QWORD PTR [rbp-0x3d0],r8
    6531:	call   27b0 <realloc@plt>
    6536:	mov    r8,QWORD PTR [rbp-0x3d0]
    653d:	test   rax,rax
    6540:	mov    r15,rax
    6543:	jne    5b2d <__ctype_b_loc@plt+0x325d>
    6549:	jmp    5dd8 <__ctype_b_loc@plt+0x3508>
    654e:	xchg   ax,ax
    6550:	mov    r8,QWORD PTR [r15+0x8]
    6554:	lea    rdi,[r8+0x8]
    6558:	mov    QWORD PTR [r15+0x8],rdi
    655c:	jmp    5696 <__ctype_b_loc@plt+0x2dc6>
    6561:	nop    DWORD PTR [rax+0x0]
    6568:	mov    r8d,edi
    656b:	add    edi,0x8
    656e:	add    r8,QWORD PTR [r15+0x10]
    6572:	mov    DWORD PTR [r15],edi
    6575:	jmp    56e8 <__ctype_b_loc@plt+0x2e18>
    657a:	nop    WORD PTR [rax+rax*1+0x0]
    6580:	mov    r8d,edi
    6583:	add    edi,0x8
    6586:	add    r8,QWORD PTR [r15+0x10]
    658a:	mov    DWORD PTR [r15],edi
    658d:	jmp    5718 <__ctype_b_loc@plt+0x2e48>
    6592:	mov    QWORD PTR [rax],rbx
    6595:	mov    r12,rbx
    6598:	jmp    5da5 <__ctype_b_loc@plt+0x34d5>
    659d:	js     5dd8 <__ctype_b_loc@plt+0x3508>
    65a3:	add    r14,r14
    65a6:	jmp    5d51 <__ctype_b_loc@plt+0x3481>
    65ab:	mov    QWORD PTR [r13+0x30],rbx
    65af:	movzx  eax,BYTE PTR [rbx+0x1]
    65b3:	lea    rdx,[rbx+0x1]
    65b7:	sub    eax,0x30
    65ba:	cmp    al,0x9
    65bc:	ja     6fe5 <__ctype_b_loc@plt+0x4715>
    65c2:	nop    WORD PTR [rax+rax*1+0x0]
    65c8:	movzx  eax,BYTE PTR [rdx+0x1]
    65cc:	add    rdx,0x1
    65d0:	sub    eax,0x30
    65d3:	cmp    al,0x9
    65d5:	jbe    65c8 <__ctype_b_loc@plt+0x3cf8>
    65d7:	mov    rax,rdx
    65da:	sub    rax,rbx
    65dd:	mov    rbx,rdx
    65e0:	mov    rsi,QWORD PTR [rbp-0x3d0]
    65e7:	mov    QWORD PTR [r13+0x38],rdx
    65eb:	movzx  r12d,BYTE PTR [rdx]
    65ef:	cmp    rsi,rax
    65f2:	cmovae rax,rsi
    65f6:	mov    QWORD PTR [rbp-0x3d0],rax
    65fd:	jmp    5581 <__ctype_b_loc@plt+0x2cb1>
    6602:	mov    rdi,rsi
    6605:	call   2780 <malloc@plt>
    660a:	mov    r8,QWORD PTR [rbp-0x3e0]
    6611:	mov    r11,QWORD PTR [rbp-0x3e8]
    6618:	test   rax,rax
    661b:	mov    r13,rax
    661e:	je     6bf8 <__ctype_b_loc@plt+0x4328>
    6624:	lea    rax,[r14+r14*4]
    6628:	mov    rsi,QWORD PTR [rbp-0x408]
    662f:	mov    rdi,r13
    6632:	mov    QWORD PTR [rbp-0x3e8],r11
    6639:	lea    rdx,[r14+rax*2]
    663d:	mov    QWORD PTR [rbp-0x3e0],r8
    6644:	shl    rdx,0x3
    6648:	call   2750 <memcpy@plt>
    664d:	mov    r11,QWORD PTR [rbp-0x3e8]
    6654:	mov    r8,QWORD PTR [rbp-0x3e0]
    665b:	jmp    5f91 <__ctype_b_loc@plt+0x36c1>
    6660:	call   2520 <__errno_location@plt>
    6665:	mov    r8,QWORD PTR [rbp-0x3c8]
    666c:	mov    QWORD PTR [rbp-0x3d0],rax
    6673:	mov    rdi,r8
    6676:	call   24e0 <free@plt>
    667b:	jmp    5e05 <__ctype_b_loc@plt+0x3535>
    6680:	mov    DWORD PTR [rax],ebx
    6682:	mov    r12,rbx
    6685:	jmp    5da5 <__ctype_b_loc@plt+0x34d5>
    668a:	mov    WORD PTR [rax],bx
    668d:	mov    r12,rbx
    6690:	jmp    5da5 <__ctype_b_loc@plt+0x34d5>
    6695:	mov    BYTE PTR [rax],bl
    6697:	mov    r12,rbx
    669a:	jmp    5da5 <__ctype_b_loc@plt+0x34d5>
    669f:	mov    rax,QWORD PTR [rbp-0x3c8]
    66a6:	mov    BYTE PTR [rax],0x4c
    66a9:	add    rax,0x1
    66ad:	mov    QWORD PTR [rbp-0x3c8],rax
    66b4:	jmp    5a41 <__ctype_b_loc@plt+0x3171>
    66b9:	mov    rax,rdx
    66bc:	nop    DWORD PTR [rax+0x0]
    66c0:	movzx  esi,BYTE PTR [rax+0x1]
    66c4:	add    rax,0x1
    66c8:	lea    edi,[rsi-0x30]
    66cb:	cmp    dil,0x9
    66cf:	jbe    66c0 <__ctype_b_loc@plt+0x3df0>
    66d1:	cmp    sil,0x24
    66d5:	jne    5791 <__ctype_b_loc@plt+0x2ec1>
    66db:	add    rbx,0x2
    66df:	xor    esi,esi
    66e1:	jmp    66ef <__ctype_b_loc@plt+0x3e1f>
    66e3:	cmp    al,0x9
    66e5:	ja     6ff2 <__ctype_b_loc@plt+0x4722>
    66eb:	add    rbx,0x1
    66ef:	lea    eax,[rcx-0x30]
    66f2:	lea    rdx,[rbx-0x1]
    66f6:	movabs rdi,0x1999999999999999
    6700:	movsx  rax,al
    6704:	cmp    rsi,rdi
    6707:	ja     6fc8 <__ctype_b_loc@plt+0x46f8>
    670d:	lea    rcx,[rsi+rsi*4]
    6711:	add    rcx,rcx
    6714:	add    rcx,rax
    6717:	mov    r12,rcx
    671a:	mov    rsi,rcx
    671d:	movzx  ecx,BYTE PTR [rbx]
    6720:	lea    eax,[rcx-0x30]
    6723:	jae    66e3 <__ctype_b_loc@plt+0x3e13>
    6725:	cmp    al,0x9
    6727:	ja     6060 <__ctype_b_loc@plt+0x3790>
    672d:	mov    rdx,rbx
    6730:	movsx  rax,al
    6734:	add    rbx,0x1
    6738:	mov    rcx,0xffffffffffffffff
    673f:	jmp    6714 <__ctype_b_loc@plt+0x3e44>
    6741:	mov    ecx,0xc
    6746:	cmp    edx,0xf
    6749:	jg     5be8 <__ctype_b_loc@plt+0x3318>
    674f:	xor    ecx,ecx
    6751:	and    edx,0x4
    6754:	setne  cl
    6757:	add    ecx,0xb
    675a:	jmp    5be8 <__ctype_b_loc@plt+0x3318>
    675f:	and    edx,0xfff
    6765:	sub    rsp,rdx
    6768:	test   rdx,rdx
    676b:	jne    6cbd <__ctype_b_loc@plt+0x43ed>
    6771:	mov    QWORD PTR [rbp-0x418],0x0
    677c:	lea    rax,[rsp+0xf]
    6781:	and    rax,0xfffffffffffffff0
    6785:	mov    QWORD PTR [rbp-0x3e0],rax
    678c:	jmp    5188 <__ctype_b_loc@plt+0x28b8>
    6791:	mov    ecx,0xa
    6796:	cmp    edx,0xf
    6799:	jg     5be8 <__ctype_b_loc@plt+0x3318>
    679f:	test   dl,0x4
    67a2:	jne    5be8 <__ctype_b_loc@plt+0x3318>
    67a8:	mov    ecx,0x8
    67ad:	cmp    edx,0x7
    67b0:	jg     5be8 <__ctype_b_loc@plt+0x3318>
    67b6:	mov    ecx,0x2
    67bb:	test   dl,0x2
    67be:	jne    5be8 <__ctype_b_loc@plt+0x3318>
    67c4:	and    edx,0x1
    67c7:	cmp    edx,0x1
    67ca:	sbb    ecx,ecx
    67cc:	and    ecx,0x2
    67cf:	add    ecx,0x4
    67d2:	jmp    5be8 <__ctype_b_loc@plt+0x3318>
    67d7:	nop    WORD PTR [rax+rax*1+0x0]
    67e0:	mov    ecx,0x9
    67e5:	cmp    edx,0xf
    67e8:	jg     5be8 <__ctype_b_loc@plt+0x3318>
    67ee:	test   dl,0x4
    67f1:	jne    5be8 <__ctype_b_loc@plt+0x3318>
    67f7:	mov    ecx,0x7
    67fc:	cmp    edx,0x7
    67ff:	jg     5be8 <__ctype_b_loc@plt+0x3318>
    6805:	mov    ecx,0x1
    680a:	test   dl,0x2
    680d:	jne    5be8 <__ctype_b_loc@plt+0x3318>
    6813:	and    edx,0x1
    6816:	cmp    edx,0x1
    6819:	sbb    ecx,ecx
    681b:	and    ecx,0x2
    681e:	add    ecx,0x3
    6821:	jmp    5be8 <__ctype_b_loc@plt+0x3318>
    6826:	cs nop WORD PTR [rax+rax*1+0x0]
    6830:	mov    ecx,0x16
    6835:	cmp    edx,0xf
    6838:	jg     5be8 <__ctype_b_loc@plt+0x3318>
    683e:	test   dl,0x4
    6841:	jne    5be8 <__ctype_b_loc@plt+0x3318>
    6847:	mov    ecx,0x15
    684c:	cmp    edx,0x7
    684f:	jg     5be8 <__ctype_b_loc@plt+0x3318>
    6855:	mov    ecx,0x12
    685a:	test   dl,0x2
    685d:	jne    5be8 <__ctype_b_loc@plt+0x3318>
    6863:	and    edx,0x1
    6866:	mov    ecx,0x14
    686b:	sub    ecx,edx
    686d:	jmp    5be8 <__ctype_b_loc@plt+0x3318>
    6872:	nop    WORD PTR [rax+rax*1+0x0]
    6878:	xor    ecx,ecx
    687a:	cmp    edx,0x7
    687d:	setg   cl
    6880:	add    ecx,0xf
    6883:	jmp    5be8 <__ctype_b_loc@plt+0x3318>
    6888:	mov    ecx,0xe
    688d:	mov    r12d,0x63
    6893:	jmp    5be8 <__ctype_b_loc@plt+0x3318>
    6898:	nop    DWORD PTR [rax+rax*1+0x0]
    68a0:	test   rcx,rcx
    68a3:	jne    68e0 <__ctype_b_loc@plt+0x4010>
    68a5:	mov    rax,0xffffffffffffffff
    68ac:	mov    rdx,0xffffffffffffffff
    68b3:	jmp    6178 <__ctype_b_loc@plt+0x38a8>
    68b8:	nop    DWORD PTR [rax+rax*1+0x0]
    68c0:	mov    rsi,rax
    68c3:	mov    rdi,r12
    68c6:	call   27b0 <realloc@plt>
    68cb:	test   rax,rax
    68ce:	je     68ea <__ctype_b_loc@plt+0x401a>
    68d0:	mov    r12,rax
    68d3:	jmp    5b50 <__ctype_b_loc@plt+0x3280>
    68d8:	nop    DWORD PTR [rax+rax*1+0x0]
    68e0:	cmp    r14,0xffffffffffffffff
    68e4:	je     5b50 <__ctype_b_loc@plt+0x3280>
    68ea:	mov    r8,r12
    68ed:	jmp    5df8 <__ctype_b_loc@plt+0x3528>
    68f2:	nop    WORD PTR [rax+rax*1+0x0]
    68f8:	sub    rsp,0x8
    68fc:	lea    rax,[rbp-0x3bc]
    6903:	push   rax
    6904:	push   r9
    6906:	jmp    6456 <__ctype_b_loc@plt+0x3b86>
    690b:	nop    DWORD PTR [rax+rax*1+0x0]
    6910:	lea    rax,[rbp-0x3bc]
    6917:	push   rax
    6918:	push   r9
    691a:	jmp    6401 <__ctype_b_loc@plt+0x3b31>
    691f:	nop
    6920:	mov    BYTE PTR [rsi+0x1],0x0
    6924:	jmp    5b50 <__ctype_b_loc@plt+0x3280>
    6929:	nop    DWORD PTR [rax+0x0]
    6930:	mov    r12,rax
    6933:	jmp    5b50 <__ctype_b_loc@plt+0x3280>
    6938:	nop    DWORD PTR [rax+rax*1+0x0]
    6940:	cmp    eax,ecx
    6942:	je     5ce8 <__ctype_b_loc@plt+0x3418>
    6948:	jmp    6067 <__ctype_b_loc@plt+0x3797>
    694d:	nop    DWORD PTR [rax]
    6950:	mov    rsi,QWORD PTR [rbp-0x3d8]
    6957:	mov    QWORD PTR [r13+0x50],rsi
    695b:	lea    rax,[rsi+0x1]
    695f:	cmp    rsi,0xffffffffffffffff
    6963:	je     6060 <__ctype_b_loc@plt+0x3790>
    6969:	mov    r14,QWORD PTR [rbp-0x3d8]
    6970:	mov    QWORD PTR [rbp-0x3d8],rax
    6977:	jmp    5bf6 <__ctype_b_loc@plt+0x3326>
    697c:	nop    DWORD PTR [rax+0x0]
    6980:	mov    r15,r8
    6983:	jmp    5b2d <__ctype_b_loc@plt+0x325d>
    6988:	nop    DWORD PTR [rax+rax*1+0x0]
    6990:	sub    rsp,0x8
    6994:	lea    rax,[rbp-0x3bc]
    699b:	mov    r9d,DWORD PTR [rbp-0x3b8]
    69a2:	mov    r8,QWORD PTR [rbp-0x3e0]
    69a9:	push   rax
    69aa:	mov    eax,DWORD PTR [rbp-0x3b4]
    69b0:	mov    rcx,0xffffffffffffffff
    69b7:	mov    edx,0x1
    69bc:	sub    rsp,0x18
    69c0:	fstp   TBYTE PTR [rsp+0x8]
    69c4:	push   rax
    69c5:	xor    eax,eax
    69c7:	call   24c0 <__snprintf_chk@plt>
    69cc:	mov    r10,QWORD PTR [rbp-0x428]
    69d3:	add    rsp,0x30
    69d7:	jmp    6108 <__ctype_b_loc@plt+0x3838>
    69dc:	nop    DWORD PTR [rax+0x0]
    69e0:	sub    rsp,0x8
    69e4:	lea    rax,[rbp-0x3bc]
    69eb:	push   rax
    69ec:	sub    rsp,0x10
    69f0:	fstp   TBYTE PTR [rsp]
    69f3:	jmp    645d <__ctype_b_loc@plt+0x3b8d>
    69f8:	nop    DWORD PTR [rax+rax*1+0x0]
    6a00:	lea    rax,[rbp-0x3bc]
    6a07:	push   rax
    6a08:	mov    eax,DWORD PTR [rbp-0x3b4]
    6a0e:	push   rax
    6a0f:	mov    r9d,DWORD PTR [rbp-0x3b8]
    6a16:	mov    rsi,r13
    6a19:	mov    r8,QWORD PTR [rbp-0x3e0]
    6a20:	mov    rcx,0xffffffffffffffff
    6a27:	mov    edx,0x1
    6a2c:	mov    eax,0x1
    6a31:	call   24c0 <__snprintf_chk@plt>
    6a36:	pop    rsi
    6a37:	mov    r10,QWORD PTR [rbp-0x428]
    6a3e:	pop    rdi
    6a3f:	jmp    6108 <__ctype_b_loc@plt+0x3838>
    6a44:	nop    DWORD PTR [rax+0x0]
    6a48:	sub    rsp,0x8
    6a4c:	lea    rax,[rbp-0x3bc]
    6a53:	push   rax
    6a54:	jmp    6a0f <__ctype_b_loc@plt+0x413f>
    6a56:	cs nop WORD PTR [rax+rax*1+0x0]
    6a60:	movsxd rax,edx
    6a63:	mov    r13,r15
    6a66:	mov    r15,r12
    6a69:	lea    r12,[rax+rbx*1]
    6a6d:	mov    rax,QWORD PTR [rbp-0x3d0]
    6a74:	mov    ebx,DWORD PTR [rbp-0x41c]
    6a7a:	mov    r8,r15
    6a7d:	mov    DWORD PTR [rax],ebx
    6a7f:	jmp    5da5 <__ctype_b_loc@plt+0x34d5>
    6a84:	nop    DWORD PTR [rax+0x0]
    6a88:	cmp    r12,QWORD PTR [rbp-0x3f0]
    6a8f:	jne    6c84 <__ctype_b_loc@plt+0x43b4>
    6a95:	mov    rax,QWORD PTR [rbp-0x418]
    6a9c:	test   rax,rax
    6a9f:	je     6aa9 <__ctype_b_loc@plt+0x41d9>
    6aa1:	mov    rdi,rax
    6aa4:	call   24e0 <free@plt>
    6aa9:	mov    rdi,QWORD PTR [rbp-0x2b8]
    6ab0:	cmp    rdi,QWORD PTR [rbp-0x408]
    6ab7:	je     6abe <__ctype_b_loc@plt+0x41ee>
    6ab9:	call   24e0 <free@plt>
    6abe:	mov    rdi,QWORD PTR [rbp-0x3a8]
    6ac5:	cmp    rdi,QWORD PTR [rbp-0x400]
    6acc:	je     6ad3 <__ctype_b_loc@plt+0x4203>
    6ace:	call   24e0 <free@plt>
    6ad3:	mov    rax,QWORD PTR [rbp-0x3d0]
    6ada:	xor    r8d,r8d
    6add:	mov    DWORD PTR [rax],0x4b
    6ae3:	jmp    5e58 <__ctype_b_loc@plt+0x3588>
    6ae8:	mov    rdi,r8
    6aeb:	mov    rsi,r14
    6aee:	mov    QWORD PTR [rbp-0x3c8],r8
    6af5:	call   27b0 <realloc@plt>
    6afa:	mov    r8,QWORD PTR [rbp-0x3c8]
    6b01:	test   rax,rax
    6b04:	je     5dd8 <__ctype_b_loc@plt+0x3508>
    6b0a:	mov    r8,rax
    6b0d:	jmp    5da0 <__ctype_b_loc@plt+0x34d0>
    6b12:	mov    QWORD PTR [r13+0x18],rbx
    6b16:	movzx  eax,BYTE PTR [rbx]
    6b19:	sub    eax,0x30
    6b1c:	cmp    al,0x9
    6b1e:	ja     6b55 <__ctype_b_loc@plt+0x4285>
    6b20:	mov    rdx,rbx
    6b23:	nop    DWORD PTR [rax+rax*1+0x0]
    6b28:	movzx  eax,BYTE PTR [rdx+0x1]
    6b2c:	add    rdx,0x1
    6b30:	sub    eax,0x30
    6b33:	cmp    al,0x9
    6b35:	jbe    6b28 <__ctype_b_loc@plt+0x4258>
    6b37:	mov    rax,rdx
    6b3a:	sub    rax,rbx
    6b3d:	mov    rbx,QWORD PTR [rbp-0x3c8]
    6b44:	cmp    rbx,rax
    6b47:	cmovae rax,rbx
    6b4b:	mov    rbx,rdx
    6b4e:	mov    QWORD PTR [rbp-0x3c8],rax
    6b55:	mov    QWORD PTR [r13+0x20],rbx
    6b59:	movzx  r12d,BYTE PTR [rbx]
    6b5d:	jmp    5577 <__ctype_b_loc@plt+0x2ca7>
    6b62:	mov    r8,rax
    6b65:	jmp    5253 <__ctype_b_loc@plt+0x2983>
    6b6a:	cmp    eax,0x5
    6b6d:	je     6b59 <__ctype_b_loc@plt+0x4289>
    6b6f:	jmp    6067 <__ctype_b_loc@plt+0x3797>
    6b74:	nop    DWORD PTR [rax+0x0]
    6b78:	mov    rdi,rsi
    6b7b:	call   2780 <malloc@plt>
    6b80:	mov    ecx,DWORD PTR [rbp-0x3e0]
    6b86:	mov    r9,QWORD PTR [rbp-0x3e8]
    6b8d:	test   rax,rax
    6b90:	mov    r8,QWORD PTR [rbp-0x3f8]
    6b97:	mov    r11,QWORD PTR [rbp-0x418]
    6b9e:	mov    rdi,rax
    6ba1:	je     6c0d <__ctype_b_loc@plt+0x433d>
    6ba3:	mov    rdx,QWORD PTR [rbp-0x3b0]
    6baa:	mov    rsi,QWORD PTR [rbp-0x400]
    6bb1:	mov    QWORD PTR [rbp-0x418],r11
    6bb8:	mov    QWORD PTR [rbp-0x3f8],r8
    6bbf:	shl    rdx,0x5
    6bc3:	mov    QWORD PTR [rbp-0x3e8],r9
    6bca:	mov    DWORD PTR [rbp-0x3e0],ecx
    6bd0:	call   2750 <memcpy@plt>
    6bd5:	mov    r11,QWORD PTR [rbp-0x418]
    6bdc:	mov    r8,QWORD PTR [rbp-0x3f8]
    6be3:	mov    r9,QWORD PTR [rbp-0x3e8]
    6bea:	mov    ecx,DWORD PTR [rbp-0x3e0]
    6bf0:	mov    rdi,rax
    6bf3:	jmp    5c90 <__ctype_b_loc@plt+0x33c0>
    6bf8:	mov    rdi,QWORD PTR [rbp-0x3a8]
    6bff:	cmp    rdi,QWORD PTR [rbp-0x400]
    6c06:	je     6c22 <__ctype_b_loc@plt+0x4352>
    6c08:	call   24e0 <free@plt>
    6c0d:	mov    rdi,QWORD PTR [rbp-0x2b8]
    6c14:	cmp    rdi,QWORD PTR [rbp-0x408]
    6c1b:	je     6c22 <__ctype_b_loc@plt+0x4352>
    6c1d:	call   24e0 <free@plt>
    6c22:	call   2520 <__errno_location@plt>
    6c27:	xor    r8d,r8d
    6c2a:	mov    DWORD PTR [rax],0xc
    6c30:	jmp    5e58 <__ctype_b_loc@plt+0x3588>
    6c35:	cmp    r13,QWORD PTR [rbp-0x408]
    6c3c:	je     6c4d <__ctype_b_loc@plt+0x437d>
    6c3e:	mov    rdi,r13
    6c41:	call   24e0 <free@plt>
    6c46:	mov    r9,QWORD PTR [rbp-0x3a8]
    6c4d:	cmp    r9,QWORD PTR [rbp-0x400]
    6c54:	je     608a <__ctype_b_loc@plt+0x37ba>
    6c5a:	mov    rdi,r9
    6c5d:	jmp    6085 <__ctype_b_loc@plt+0x37b5>
    6c62:	cmp    edx,0x5
    6c65:	jne    6067 <__ctype_b_loc@plt+0x3797>
    6c6b:	movzx  r12d,BYTE PTR [rcx]
    6c6f:	mov    rbx,rcx
    6c72:	jmp    5581 <__ctype_b_loc@plt+0x2cb1>
    6c77:	mov    rdi,r15
    6c7a:	call   24e0 <free@plt>
    6c7f:	jmp    62a8 <__ctype_b_loc@plt+0x39d8>
    6c84:	mov    rdi,r12
    6c87:	call   24e0 <free@plt>
    6c8c:	jmp    6a95 <__ctype_b_loc@plt+0x41c5>
    6c91:	mov    rdi,rsi
    6c94:	call   2780 <malloc@plt>
    6c99:	mov    r11,QWORD PTR [rbp-0x3f8]
    6ca0:	mov    r8,QWORD PTR [rbp-0x3e8]
    6ca7:	mov    rdi,rax
    6caa:	mov    r9,QWORD PTR [rbp-0x3e0]
    6cb1:	mov    rax,QWORD PTR [rbp-0x400]
    6cb8:	jmp    5834 <__ctype_b_loc@plt+0x2f64>
    6cbd:	or     QWORD PTR [rsp+rdx*1-0x8],0x0
    6cc3:	jmp    6771 <__ctype_b_loc@plt+0x3ea1>
    6cc8:	mov    ecx,0x11
    6ccd:	jmp    5be8 <__ctype_b_loc@plt+0x3318>
    6cd2:	mov    ecx,0x10
    6cd7:	mov    r12d,0x73
    6cdd:	jmp    5be8 <__ctype_b_loc@plt+0x3318>
    6ce2:	mov    rbx,QWORD PTR [rbp-0x3d8]
    6ce9:	mov    QWORD PTR [r13+0x40],rbx
    6ced:	lea    rax,[rbx+0x1]
    6cf1:	cmp    rbx,0xffffffffffffffff
    6cf5:	je     6060 <__ctype_b_loc@plt+0x3790>
    6cfb:	mov    rbx,QWORD PTR [rbp-0x3d8]
    6d02:	mov    QWORD PTR [rbp-0x3d8],rax
    6d09:	jmp    590d <__ctype_b_loc@plt+0x303d>
    6d0e:	mov    r8,rax
    6d11:	jmp    5da0 <__ctype_b_loc@plt+0x34d0>
    6d16:	mov    rdi,QWORD PTR [rbp-0x3a8]
    6d1d:	cmp    rdi,QWORD PTR [rbp-0x400]
    6d24:	jne    6c08 <__ctype_b_loc@plt+0x4338>
    6d2a:	jmp    6c0d <__ctype_b_loc@plt+0x433d>
    6d2f:	mov    rax,rcx
    6d32:	nop    WORD PTR [rax+rax*1+0x0]
    6d38:	movzx  edx,BYTE PTR [rax+0x1]
    6d3c:	add    rax,0x1
    6d40:	lea    edi,[rdx-0x30]
    6d43:	cmp    dil,0x9
    6d47:	jbe    6d38 <__ctype_b_loc@plt+0x4468>
    6d49:	cmp    dl,0x24
    6d4c:	jne    58ff <__ctype_b_loc@plt+0x302f>
    6d52:	add    rbx,0x3
    6d56:	xor    edi,edi
    6d58:	jmp    6d66 <__ctype_b_loc@plt+0x4496>
    6d5a:	cmp    al,0x9
    6d5c:	ja     7025 <__ctype_b_loc@plt+0x4755>
    6d62:	add    rbx,0x1
    6d66:	lea    eax,[rsi-0x30]
    6d69:	lea    rcx,[rbx-0x1]
    6d6d:	movabs rsi,0x1999999999999999
    6d77:	movsx  rax,al
    6d7b:	cmp    rdi,rsi
    6d7e:	ja     7019 <__ctype_b_loc@plt+0x4749>
    6d84:	lea    rdx,[rdi+rdi*4]
    6d88:	add    rdx,rdx
    6d8b:	movzx  esi,BYTE PTR [rbx]
    6d8e:	add    rdx,rax
    6d91:	mov    rdi,rdx
    6d94:	lea    eax,[rsi-0x30]
    6d97:	jae    6d5a <__ctype_b_loc@plt+0x448a>
    6d99:	cmp    al,0x9
    6d9b:	ja     6060 <__ctype_b_loc@plt+0x3790>
    6da1:	mov    rcx,rbx
    6da4:	movsx  rax,al
    6da8:	add    rbx,0x1
    6dac:	mov    rdx,0xffffffffffffffff
    6db3:	jmp    6d8b <__ctype_b_loc@plt+0x44bb>
    6db5:	mov    rsi,0xffffffffffffffff
    6dbc:	jmp    602c <__ctype_b_loc@plt+0x375c>
    6dc1:	mov    r12,rbx
    6dc4:	add    r12,0x1
    6dc8:	jb     70a3 <__ctype_b_loc@plt+0x47d3>
    6dce:	cmp    r14,r12
    6dd1:	jae    6e32 <__ctype_b_loc@plt+0x4562>
    6dd3:	test   r14,r14
    6dd6:	jne    7063 <__ctype_b_loc@plt+0x4793>
    6ddc:	cmp    r12,0xc
    6de0:	ja     7075 <__ctype_b_loc@plt+0x47a5>
    6de6:	mov    r14d,0xc
    6dec:	cmp    r8,QWORD PTR [rbp-0x3f0]
    6df3:	jne    7040 <__ctype_b_loc@plt+0x4770>
    6df9:	mov    rdi,r14
    6dfc:	mov    QWORD PTR [rbp-0x3c8],r8
    6e03:	call   2780 <malloc@plt>
    6e08:	mov    r8,QWORD PTR [rbp-0x3c8]
    6e0f:	test   rax,rax
    6e12:	je     70b7 <__ctype_b_loc@plt+0x47e7>
    6e18:	test   rbx,rbx
    6e1b:	je     7087 <__ctype_b_loc@plt+0x47b7>
    6e21:	mov    rsi,r8
    6e24:	mov    rdx,rbx
    6e27:	mov    rdi,rax
    6e2a:	call   2750 <memcpy@plt>
    6e2f:	mov    r8,rax
    6e32:	mov    BYTE PTR [r8+rbx*1],0x0
    6e37:	cmp    r14,r12
    6e3a:	jbe    6e65 <__ctype_b_loc@plt+0x4595>
    6e3c:	cmp    r8,QWORD PTR [rbp-0x3f0]
    6e43:	je     6e65 <__ctype_b_loc@plt+0x4595>
    6e45:	mov    rdi,r8
    6e48:	mov    rsi,r12
    6e4b:	mov    QWORD PTR [rbp-0x3c8],r8
    6e52:	call   27b0 <realloc@plt>
    6e57:	mov    r8,QWORD PTR [rbp-0x3c8]
    6e5e:	test   rax,rax
    6e61:	cmovne r8,rax
    6e65:	mov    rdi,QWORD PTR [rbp-0x418]
    6e6c:	test   rdi,rdi
    6e6f:	je     6e84 <__ctype_b_loc@plt+0x45b4>
    6e71:	mov    QWORD PTR [rbp-0x3c8],r8
    6e78:	call   24e0 <free@plt>
    6e7d:	mov    r8,QWORD PTR [rbp-0x3c8]
    6e84:	mov    rdi,QWORD PTR [rbp-0x2b8]
    6e8b:	cmp    rdi,QWORD PTR [rbp-0x408]
    6e92:	je     6ea7 <__ctype_b_loc@plt+0x45d7>
    6e94:	mov    QWORD PTR [rbp-0x3c8],r8
    6e9b:	call   24e0 <free@plt>
    6ea0:	mov    r8,QWORD PTR [rbp-0x3c8]
    6ea7:	mov    rdi,QWORD PTR [rbp-0x3a8]
    6eae:	cmp    rdi,QWORD PTR [rbp-0x400]
    6eb5:	je     6eca <__ctype_b_loc@plt+0x45fa>
    6eb7:	mov    QWORD PTR [rbp-0x3c8],r8
    6ebe:	call   24e0 <free@plt>
    6ec3:	mov    r8,QWORD PTR [rbp-0x3c8]
    6eca:	mov    rax,QWORD PTR [rbp-0x410]
    6ed1:	mov    QWORD PTR [rax],rbx
    6ed4:	jmp    5e58 <__ctype_b_loc@plt+0x3588>
    6ed9:	mov    r14,rsi
    6edc:	sub    r14,0x1
    6ee0:	cmp    r14,0xfffffffffffffffd
    6ee4:	ja     6060 <__ctype_b_loc@plt+0x3790>
    6eea:	movzx  r12d,BYTE PTR [rcx+0x2]
    6eef:	lea    rbx,[rcx+0x2]
    6ef3:	jmp    552b <__ctype_b_loc@plt+0x2c5b>
    6ef8:	mov    rdx,QWORD PTR [rbp-0x3b0]
    6eff:	mov    rsi,QWORD PTR [rbp-0x400]
    6f06:	mov    QWORD PTR [rbp-0x3f8],r11
    6f0d:	mov    QWORD PTR [rbp-0x3e8],r8
    6f14:	shl    rdx,0x5
    6f18:	mov    QWORD PTR [rbp-0x3e0],r9
    6f1f:	call   2750 <memcpy@plt>
    6f24:	mov    r11,QWORD PTR [rbp-0x3f8]
    6f2b:	mov    r8,QWORD PTR [rbp-0x3e8]
    6f32:	mov    r9,QWORD PTR [rbp-0x3e0]
    6f39:	mov    rdi,rax
    6f3c:	jmp    584a <__ctype_b_loc@plt+0x2f7a>
    6f41:	mov    rdi,rsi
    6f44:	call   2780 <malloc@plt>
    6f49:	mov    rcx,QWORD PTR [rbp-0x3e0]
    6f50:	mov    r9,QWORD PTR [rbp-0x3e8]
    6f57:	test   rax,rax
    6f5a:	mov    r8,QWORD PTR [rbp-0x3f8]
    6f61:	mov    r11,QWORD PTR [rbp-0x418]
    6f68:	mov    rdi,rax
    6f6b:	je     700d <__ctype_b_loc@plt+0x473d>
    6f71:	mov    rdx,QWORD PTR [rbp-0x3b0]
    6f78:	mov    rsi,QWORD PTR [rbp-0x400]
    6f7f:	mov    QWORD PTR [rbp-0x418],r11
    6f86:	mov    QWORD PTR [rbp-0x3f8],r8
    6f8d:	shl    rdx,0x5
    6f91:	mov    QWORD PTR [rbp-0x3e8],r9
    6f98:	mov    QWORD PTR [rbp-0x3e0],rcx
    6f9f:	call   2750 <memcpy@plt>
    6fa4:	mov    r11,QWORD PTR [rbp-0x418]
    6fab:	mov    r8,QWORD PTR [rbp-0x3f8]
    6fb2:	mov    r9,QWORD PTR [rbp-0x3e8]
    6fb9:	mov    rcx,QWORD PTR [rbp-0x3e0]
    6fc0:	mov    rdi,rax
    6fc3:	jmp    59a9 <__ctype_b_loc@plt+0x30d9>
    6fc8:	mov    rcx,0xffffffffffffffff
    6fcf:	jmp    6714 <__ctype_b_loc@plt+0x3e44>
    6fd4:	call   2520 <__errno_location@plt>
    6fd9:	mov    QWORD PTR [rbp-0x3d0],rax
    6fe0:	jmp    5e22 <__ctype_b_loc@plt+0x3552>
    6fe5:	mov    rbx,rdx
    6fe8:	mov    eax,0x1
    6fed:	jmp    65e0 <__ctype_b_loc@plt+0x3d10>
    6ff2:	sub    r12,0x1
    6ff6:	cmp    r12,0xfffffffffffffffd
    6ffa:	ja     6060 <__ctype_b_loc@plt+0x3790>
    7000:	mov    QWORD PTR [r13+0x28],r12
    7004:	lea    rbx,[rdx+0x2]
    7008:	jmp    57bb <__ctype_b_loc@plt+0x2eeb>
    700d:	mov    rdi,QWORD PTR [rbp-0x400]
    7014:	jmp    6d1d <__ctype_b_loc@plt+0x444d>
    7019:	mov    rdx,0xffffffffffffffff
    7020:	jmp    6d8b <__ctype_b_loc@plt+0x44bb>
    7025:	lea    rbx,[rdx-0x1]
    7029:	cmp    rbx,0xfffffffffffffffd
    702d:	ja     6060 <__ctype_b_loc@plt+0x3790>
    7033:	mov    QWORD PTR [r13+0x40],rbx
    7037:	add    rcx,0x2
    703b:	jmp    590d <__ctype_b_loc@plt+0x303d>
    7040:	mov    rsi,r14
    7043:	mov    rdi,r8
    7046:	mov    QWORD PTR [rbp-0x3c8],r8
    704d:	call   27b0 <realloc@plt>
    7052:	test   rax,rax
    7055:	je     6660 <__ctype_b_loc@plt+0x3d90>
    705b:	mov    r8,rax
    705e:	jmp    6e32 <__ctype_b_loc@plt+0x4562>
    7063:	js     5dd8 <__ctype_b_loc@plt+0x3508>
    7069:	add    r14,r14
    706c:	cmp    r14,r12
    706f:	jae    6dec <__ctype_b_loc@plt+0x451c>
    7075:	cmp    r12,0xffffffffffffffff
    7079:	je     5dd8 <__ctype_b_loc@plt+0x3508>
    707f:	mov    r14,r12
    7082:	jmp    6dec <__ctype_b_loc@plt+0x451c>
    7087:	mov    r8,rax
    708a:	jmp    6e32 <__ctype_b_loc@plt+0x4562>
    708f:	mov    rdi,rax
    7092:	jmp    6d1d <__ctype_b_loc@plt+0x444d>
    7097:	mov    r14,QWORD PTR [rbp-0x2c0]
    709e:	jmp    6624 <__ctype_b_loc@plt+0x3d54>
    70a3:	cmp    r14,0xffffffffffffffff
    70a7:	je     6e32 <__ctype_b_loc@plt+0x4562>
    70ad:	jmp    5dd8 <__ctype_b_loc@plt+0x3508>
    70b2:	call   2600 <__stack_chk_fail@plt>
    70b7:	call   2520 <__errno_location@plt>
    70bc:	mov    QWORD PTR [rbp-0x3d0],rax
    70c3:	jmp    5e05 <__ctype_b_loc@plt+0x3535>
    70c8:	nop    DWORD PTR [rax+rax*1+0x0]
    70d0:	push   r13
    70d2:	mov    r10,rsi
    70d5:	push   r12
    70d7:	mov    r12,rdi
    70da:	push   rbp
    70db:	push   rbx
    70dc:	sub    rsp,0x8c8
    70e3:	mov    QWORD PTR [rsp+0x820],rdx
    70eb:	mov    QWORD PTR [rsp+0x828],rcx
    70f3:	mov    QWORD PTR [rsp+0x830],r8
    70fb:	mov    QWORD PTR [rsp+0x838],r9
    7103:	test   al,al
    7105:	je     7147 <__ctype_b_loc@plt+0x4877>
    7107:	movaps XMMWORD PTR [rsp+0x840],xmm0
    710f:	movaps XMMWORD PTR [rsp+0x850],xmm1
    7117:	movaps XMMWORD PTR [rsp+0x860],xmm2
    711f:	movaps XMMWORD PTR [rsp+0x870],xmm3
    7127:	movaps XMMWORD PTR [rsp+0x880],xmm4
    712f:	movaps XMMWORD PTR [rsp+0x890],xmm5
    7137:	movaps XMMWORD PTR [rsp+0x8a0],xmm6
    713f:	movaps XMMWORD PTR [rsp+0x8b0],xmm7
    7147:	mov    rax,QWORD PTR fs:0x28
    7150:	mov    QWORD PTR [rsp+0x808],rax
    7158:	xor    eax,eax
    715a:	lea    r13,[rsp+0x30]
    715f:	lea    rcx,[rsp+0x10]
    7164:	mov    rdx,r10
    7167:	lea    rax,[rsp+0x8f0]
    716f:	lea    rsi,[rsp+0x8]
    7174:	mov    rdi,r13
    7177:	mov    QWORD PTR [rsp+0x8],0x7d0
    7180:	mov    QWORD PTR [rsp+0x18],rax
    7185:	lea    rax,[rsp+0x810]
    718d:	mov    DWORD PTR [rsp+0x10],0x10
    7195:	mov    DWORD PTR [rsp+0x14],0x30
    719d:	mov    QWORD PTR [rsp+0x20],rax
    71a2:	call   4fa0 <__ctype_b_loc@plt+0x26d0>
    71a7:	mov    rbx,QWORD PTR [rsp+0x8]
    71ac:	mov    rbp,rax
    71af:	test   rax,rax
    71b2:	je     723e <__ctype_b_loc@plt+0x496e>
    71b8:	mov    rcx,r12
    71bb:	mov    rdx,rbx
    71be:	mov    esi,0x1
    71c3:	mov    rdi,rax
    71c6:	call   2870 <fwrite@plt>
    71cb:	cmp    rax,rbx
    71ce:	jb     7210 <__ctype_b_loc@plt+0x4940>
    71d0:	cmp    rbp,r13
    71d3:	je     71dd <__ctype_b_loc@plt+0x490d>
    71d5:	mov    rdi,rbp
    71d8:	call   24e0 <free@plt>
    71dd:	cmp    rbx,0x7fffffff
    71e4:	ja     7233 <__ctype_b_loc@plt+0x4963>
    71e6:	mov    r12d,ebx
    71e9:	mov    rax,QWORD PTR [rsp+0x808]
    71f1:	sub    rax,QWORD PTR fs:0x28
    71fa:	jne    724b <__ctype_b_loc@plt+0x497b>
    71fc:	add    rsp,0x8c8
    7203:	mov    eax,r12d
    7206:	pop    rbx
    7207:	pop    rbp
    7208:	pop    r12
    720a:	pop    r13
    720c:	ret    
    720d:	nop    DWORD PTR [rax]
    7210:	mov    r12d,0xffffffff
    7216:	cmp    rbp,r13
    7219:	je     71e9 <__ctype_b_loc@plt+0x4919>
    721b:	call   2520 <__errno_location@plt>
    7220:	mov    rdi,rbp
    7223:	mov    r13d,DWORD PTR [rax]
    7226:	mov    rbx,rax
    7229:	call   24e0 <free@plt>
    722e:	mov    DWORD PTR [rbx],r13d
    7231:	jmp    71e9 <__ctype_b_loc@plt+0x4919>
    7233:	call   2520 <__errno_location@plt>
    7238:	mov    DWORD PTR [rax],0x4b
    723e:	or     DWORD PTR [r12],0x20
    7243:	mov    r12d,0xffffffff
    7249:	jmp    71e9 <__ctype_b_loc@plt+0x4919>
    724b:	call   2600 <__stack_chk_fail@plt>
    7250:	push   rax
    7251:	pop    rax
    7252:	lea    rsi,[rip+0xb24f]        # 124a8 <__ctype_b_loc@plt+0xfbd8>
    7259:	sub    rsp,0x8
    725d:	mov    rax,QWORD PTR [rip+0xfd84]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    7264:	mov    rdx,QWORD PTR [rip+0x67bcd]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    726b:	mov    rdi,QWORD PTR [rax]
    726e:	xor    eax,eax
    7270:	call   70d0 <__ctype_b_loc@plt+0x4800>
    7275:	mov    edi,0x1
    727a:	call   4400 <__ctype_b_loc@plt+0x1b30>
    727f:	nop
    7280:	endbr64 
    7284:	mov    eax,DWORD PTR [rip+0x261aa]        # 2d434 <__ctype_b_loc@plt+0x2ab64>
    728a:	test   eax,eax
    728c:	je     7298 <__ctype_b_loc@plt+0x49c8>
    728e:	mov    eax,0x1
    7293:	ret    
    7294:	nop    DWORD PTR [rax+0x0]
    7298:	push   rbp
    7299:	mov    ebp,edi
    729b:	push   rbx
    729c:	mov    ebx,esi
    729e:	lea    rsi,[rip+0xb22b]        # 124d0 <__ctype_b_loc@plt+0xfc00>
    72a5:	sub    rsp,0x8
    72a9:	mov    rax,QWORD PTR [rip+0xfd38]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    72b0:	mov    DWORD PTR [rip+0x2617a],0x1        # 2d434 <__ctype_b_loc@plt+0x2ab64>
    72ba:	mov    rdi,QWORD PTR [rax]
    72bd:	xor    eax,eax
    72bf:	call   70d0 <__ctype_b_loc@plt+0x4800>
    72c4:	cmp    ebp,ebx
    72c6:	je     72d2 <__ctype_b_loc@plt+0x4a02>
    72c8:	mov    DWORD PTR [rip+0x676ee],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    72d2:	add    rsp,0x8
    72d6:	mov    eax,0x1
    72db:	pop    rbx
    72dc:	pop    rbp
    72dd:	ret    
    72de:	xchg   ax,ax
    72e0:	push   rax
    72e1:	pop    rax
    72e2:	lea    rcx,[rip+0x676f7]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    72e9:	lea    rsi,[rip+0x9d1b]        # 1100b <__ctype_b_loc@plt+0xe73b>
    72f0:	sub    rsp,0x8
    72f4:	mov    rax,QWORD PTR [rip+0xfced]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    72fb:	mov    r8,rdi
    72fe:	mov    rdx,QWORD PTR [rip+0x67b33]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    7305:	mov    rdi,QWORD PTR [rax]
    7308:	xor    eax,eax
    730a:	call   70d0 <__ctype_b_loc@plt+0x4800>
    730f:	call   4550 <__ctype_b_loc@plt+0x1c80>
    7314:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    731f:	nop
    7320:	push   r15
    7322:	pxor   xmm0,xmm0
    7326:	mov    r10d,edx
    7329:	mov    edx,edi
    732b:	push   r14
    732d:	mov    r14,rcx
    7330:	lea    ecx,[rdi-0x1]
    7333:	push   r13
    7335:	mov    r13,rsi
    7338:	push   r12
    733a:	push   rbp
    733b:	push   rbx
    733c:	sub    rsp,0xb8
    7343:	mov    rax,QWORD PTR fs:0x28
    734c:	mov    QWORD PTR [rsp+0xa8],rax
    7354:	xor    eax,eax
    7356:	mov    rax,rsi
    7359:	movups XMMWORD PTR [rsp+0x52],xmm0
    735e:	lea    rsi,[rsi+rcx*1+0x1]
    7363:	movups XMMWORD PTR [rsp+0x62],xmm0
    7368:	nop    DWORD PTR [rax+rax*1+0x0]
    7370:	movzx  ecx,BYTE PTR [rax]
    7373:	add    rax,0x1
    7377:	add    WORD PTR [rsp+rcx*2+0x50],0x1
    737d:	cmp    rax,rsi
    7380:	jne    7370 <__ctype_b_loc@plt+0x4aa0>
    7382:	xor    eax,eax
    7384:	xor    r9d,r9d
    7387:	lea    rbx,[rsp+0x50]
    738c:	mov    r11d,0x10
    7392:	mov    WORD PTR [rsp+0x82],ax
    739a:	lea    r8,[rsp+0x80]
    73a2:	mov    eax,0x1
    73a7:	nop    WORD PTR [rax+rax*1+0x0]
    73b0:	movzx  esi,WORD PTR [rbx+rax*2]
    73b4:	mov    ecx,r11d
    73b7:	sub    ecx,eax
    73b9:	shl    esi,cl
    73bb:	add    r9d,esi
    73be:	mov    WORD PTR [r8+rax*2+0x2],r9w
    73c4:	add    rax,0x1
    73c8:	cmp    rax,0x11
    73cc:	jne    73b0 <__ctype_b_loc@plt+0x4ae0>
    73ce:	movzx  ecx,WORD PTR [rsp+0xa2]
    73d6:	test   cx,cx
    73d9:	jne    7607 <__ctype_b_loc@plt+0x4d37>
    73df:	mov    ebx,r11d
    73e2:	mov    eax,0x1
    73e7:	lea    r11,[rsp+0x20]
    73ec:	mov    r9d,0x1
    73f2:	sub    ebx,r10d
    73f5:	mov    DWORD PTR [rsp+0x10],ebx
    73f9:	jmp    7405 <__ctype_b_loc@plt+0x4b35>
    73fb:	nop    DWORD PTR [rax+rax*1+0x0]
    7400:	movzx  ecx,WORD PTR [r8+rax*2]
    7405:	movzx  esi,cx
    7408:	mov    ecx,ebx
    740a:	sar    esi,cl
    740c:	mov    ecx,r10d
    740f:	mov    WORD PTR [r8+rax*2],si
    7414:	sub    ecx,eax
    7416:	mov    esi,r9d
    7419:	shl    esi,cl
    741b:	mov    WORD PTR [r11+rax*2],si
    7420:	add    rax,0x1
    7424:	cmp    r10d,eax
    7427:	jae    7400 <__ctype_b_loc@plt+0x4b30>
    7429:	lea    r11d,[r10+0x1]
    742d:	mov    r9d,0x10
    7433:	mov    r8d,0x1
    7439:	mov    eax,r11d
    743c:	nop    DWORD PTR [rax+0x0]
    7440:	mov    ecx,r9d
    7443:	mov    ebx,r8d
    7446:	mov    esi,eax
    7448:	sub    ecx,eax
    744a:	add    eax,0x1
    744d:	shl    ebx,cl
    744f:	mov    WORD PTR [rsp+rsi*2+0x20],bx
    7454:	cmp    eax,0x11
    7457:	jne    7440 <__ctype_b_loc@plt+0x4b70>
    7459:	movsxd r11,r11d
    745c:	movzx  ecx,BYTE PTR [rsp+0x10]
    7461:	movzx  eax,WORD PTR [rsp+r11*2+0x80]
    746a:	sar    eax,cl
    746c:	test   eax,eax
    746e:	jne    75dc <__ctype_b_loc@plt+0x4d0c>
    7474:	mov    eax,0x1
    7479:	mov    ecx,0xf
    747e:	mov    QWORD PTR [rsp+0x8],r14
    7483:	mov    r15d,edi
    7486:	sub    ecx,r10d
    7489:	mov    r9d,eax
    748c:	lea    rsi,[rip+0x679ed]        # 6ee80 <__ctype_b_loc@plt+0x6c5b0>
    7493:	xor    edi,edi
    7495:	shl    r9d,cl
    7498:	mov    ecx,r10d
    749b:	shl    eax,cl
    749d:	mov    DWORD PTR [rsp+0x14],eax
    74a1:	lea    rax,[r14+0x2]
    74a5:	mov    QWORD PTR [rsp+0x18],rax
    74aa:	nop    WORD PTR [rax+rax*1+0x0]
    74b0:	movzx  eax,BYTE PTR [r13+rdi*1+0x0]
    74b6:	test   eax,eax
    74b8:	je     7528 <__ctype_b_loc@plt+0x4c58>
    74ba:	mov    r11d,eax
    74bd:	movzx  r8d,WORD PTR [rsp+r11*2+0x80]
    74c6:	movzx  ebp,WORD PTR [rsp+r11*2+0x20]
    74cc:	cmp    r10d,eax
    74cf:	jb     7560 <__ctype_b_loc@plt+0x4c90>
    74d5:	movzx  r12d,r8w
    74d9:	movzx  ebx,bp
    74dc:	add    ebx,r12d
    74df:	cmp    DWORD PTR [rsp+0x14],ebx
    74e3:	jb     7607 <__ctype_b_loc@plt+0x4d37>
    74e9:	cmp    ebx,r12d
    74ec:	jbe    751c <__ctype_b_loc@plt+0x4c4c>
    74ee:	mov    rax,QWORD PTR [rsp+0x8]
    74f3:	sub    ebx,r12d
    74f6:	movzx  r14d,r8w
    74fa:	mov    ecx,edi
    74fc:	sub    ebx,0x1
    74ff:	add    rbx,r14
    7502:	lea    rax,[rax+r14*2]
    7506:	mov    r14,QWORD PTR [rsp+0x18]
    750b:	lea    rbx,[r14+rbx*2]
    750f:	nop
    7510:	mov    WORD PTR [rax],cx
    7513:	add    rax,0x2
    7517:	cmp    rbx,rax
    751a:	jne    7510 <__ctype_b_loc@plt+0x4c40>
    751c:	add    r8d,ebp
    751f:	mov    WORD PTR [rsp+r11*2+0x80],r8w
    7528:	add    rdi,0x1
    752c:	cmp    r15,rdi
    752f:	jne    74b0 <__ctype_b_loc@plt+0x4be0>
    7535:	mov    rax,QWORD PTR [rsp+0xa8]
    753d:	sub    rax,QWORD PTR fs:0x28
    7546:	jne    7613 <__ctype_b_loc@plt+0x4d43>
    754c:	add    rsp,0xb8
    7553:	pop    rbx
    7554:	pop    rbp
    7555:	pop    r12
    7557:	pop    r13
    7559:	pop    r14
    755b:	pop    r15
    755d:	ret    
    755e:	xchg   ax,ax
    7560:	movzx  ecx,BYTE PTR [rsp+0x10]
    7565:	movzx  ebx,r8w
    7569:	mov    r14d,ebx
    756c:	shr    r14d,cl
    756f:	sub    eax,r10d
    7572:	mov    rcx,r14
    7575:	mov    r14,QWORD PTR [rsp+0x8]
    757a:	lea    r12,[r14+rcx*2]
    757e:	mov    ecx,eax
    7580:	jne    7597 <__ctype_b_loc@plt+0x4cc7>
    7582:	jmp    75d2 <__ctype_b_loc@plt+0x4d02>
    7584:	nop    DWORD PTR [rax+0x0]
    7588:	lea    r12,[rsi+rax*2+0x10000]
    7590:	add    ebx,ebx
    7592:	sub    ecx,0x1
    7595:	je     75d2 <__ctype_b_loc@plt+0x4d02>
    7597:	movzx  eax,WORD PTR [r12]
    759c:	test   ax,ax
    759f:	jne    75c2 <__ctype_b_loc@plt+0x4cf2>
    75a1:	mov    eax,edx
    75a3:	xor    r14d,r14d
    75a6:	mov    WORD PTR [rsi+rax*2],r14w
    75ab:	xor    r14d,r14d
    75ae:	mov    WORD PTR [rsi+rax*2+0x10000],r14w
    75b7:	movzx  eax,dx
    75ba:	mov    WORD PTR [r12],dx
    75bf:	add    edx,0x1
    75c2:	test   r9d,ebx
    75c5:	jne    7588 <__ctype_b_loc@plt+0x4cb8>
    75c7:	lea    r12,[rsi+rax*2]
    75cb:	add    ebx,ebx
    75cd:	sub    ecx,0x1
    75d0:	jne    7597 <__ctype_b_loc@plt+0x4cc7>
    75d2:	mov    WORD PTR [r12],di
    75d7:	jmp    751c <__ctype_b_loc@plt+0x4c4c>
    75dc:	mov    ecx,r10d
    75df:	shl    r8d,cl
    75e2:	cmp    eax,r8d
    75e5:	je     7474 <__ctype_b_loc@plt+0x4ba4>
    75eb:	nop    DWORD PTR [rax+rax*1+0x0]
    75f0:	mov    ecx,eax
    75f2:	xor    r15d,r15d
    75f5:	add    eax,0x1
    75f8:	mov    WORD PTR [r14+rcx*2],r15w
    75fd:	cmp    r8d,eax
    7600:	jne    75f0 <__ctype_b_loc@plt+0x4d20>
    7602:	jmp    7474 <__ctype_b_loc@plt+0x4ba4>
    7607:	lea    rdi,[rip+0x9a0a]        # 11018 <__ctype_b_loc@plt+0xe748>
    760e:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    7613:	call   2600 <__stack_chk_fail@plt>
    7618:	nop    DWORD PTR [rax+rax*1+0x0]
    7620:	push   rax
    7621:	pop    rax
    7622:	lea    rsi,[rip+0x99fa]        # 11023 <__ctype_b_loc@plt+0xe753>
    7629:	sub    rsp,0x8
    762d:	mov    rax,QWORD PTR [rip+0xf9b4]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    7634:	mov    rdx,QWORD PTR [rip+0x677fd]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    763b:	mov    rdi,QWORD PTR [rax]
    763e:	xor    eax,eax
    7640:	call   70d0 <__ctype_b_loc@plt+0x4800>
    7645:	call   4550 <__ctype_b_loc@plt+0x1c80>
    764a:	nop    WORD PTR [rax+rax*1+0x0]
    7650:	push   r12
    7652:	push   rbp
    7653:	mov    rbp,rdi
    7656:	sub    rsp,0x8
    765a:	call   25e0 <strlen@plt>
    765f:	lea    r12,[rax+0x1]
    7663:	mov    rdi,r12
    7666:	call   2780 <malloc@plt>
    766b:	test   rax,rax
    766e:	je     7685 <__ctype_b_loc@plt+0x4db5>
    7670:	add    rsp,0x8
    7674:	mov    rdx,r12
    7677:	mov    rsi,rbp
    767a:	mov    rdi,rax
    767d:	pop    rbp
    767e:	pop    r12
    7680:	jmp    2750 <memcpy@plt>
    7685:	call   7620 <__ctype_b_loc@plt+0x4d50>
    768a:	nop    WORD PTR [rax+rax*1+0x0]
    7690:	push   r12
    7692:	push   rbp
    7693:	push   rbx
    7694:	call   2520 <__errno_location@plt>
    7699:	mov    rbp,QWORD PTR [rip+0xf948]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    76a0:	mov    rdx,QWORD PTR [rip+0x67791]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    76a7:	lea    rsi,[rip+0x998c]        # 1103a <__ctype_b_loc@plt+0xe76a>
    76ae:	mov    r12d,DWORD PTR [rax]
    76b1:	mov    rbx,rax
    76b4:	xor    eax,eax
    76b6:	mov    rdi,QWORD PTR [rbp+0x0]
    76ba:	call   70d0 <__ctype_b_loc@plt+0x4800>
    76bf:	test   r12d,r12d
    76c2:	je     76d8 <__ctype_b_loc@plt+0x4e08>
    76c4:	mov    DWORD PTR [rbx],r12d
    76c7:	lea    rdi,[rip+0x67312]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    76ce:	call   2820 <perror@plt>
    76d3:	call   4550 <__ctype_b_loc@plt+0x1c80>
    76d8:	mov    rdi,QWORD PTR [rbp+0x0]
    76dc:	lea    rdx,[rip+0x672fd]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    76e3:	lea    rsi,[rip+0x9956]        # 11040 <__ctype_b_loc@plt+0xe770>
    76ea:	xor    eax,eax
    76ec:	call   70d0 <__ctype_b_loc@plt+0x4800>
    76f1:	jmp    76d3 <__ctype_b_loc@plt+0x4e03>
    76f3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    76fe:	xchg   ax,ax
    7700:	endbr64 
    7704:	push   rbp
    7705:	mov    edx,esi
    7707:	mov    rbp,rdi
    770a:	mov    rsi,rdi
    770d:	mov    edi,DWORD PTR [rip+0x66d55]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    7713:	call   4d60 <__ctype_b_loc@plt+0x2490>
    7718:	mov    r8d,eax
    771b:	test   eax,eax
    771d:	je     7738 <__ctype_b_loc@plt+0x4e68>
    771f:	cmp    eax,0xffffffff
    7722:	je     773d <__ctype_b_loc@plt+0x4e6d>
    7724:	mov    esi,eax
    7726:	mov    rdi,rbp
    7729:	call   37a0 <__ctype_b_loc@plt+0xed0>
    772e:	mov    eax,r8d
    7731:	add    QWORD PTR [rip+0x66d20],rax        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    7738:	mov    eax,r8d
    773b:	pop    rbp
    773c:	ret    
    773d:	call   7690 <__ctype_b_loc@plt+0x4dc0>
    7742:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    774d:	nop    DWORD PTR [rax]
    7750:	push   rbp
    7751:	push   rbx
    7752:	sub    rsp,0x8
    7756:	call   2520 <__errno_location@plt>
    775b:	mov    rdx,QWORD PTR [rip+0x676d6]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    7762:	lea    rsi,[rip+0x98d1]        # 1103a <__ctype_b_loc@plt+0xe76a>
    7769:	mov    ebp,DWORD PTR [rax]
    776b:	mov    rbx,rax
    776e:	mov    rax,QWORD PTR [rip+0xf873]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    7775:	mov    rdi,QWORD PTR [rax]
    7778:	xor    eax,eax
    777a:	call   70d0 <__ctype_b_loc@plt+0x4800>
    777f:	mov    DWORD PTR [rbx],ebp
    7781:	lea    rdi,[rip+0x66cf8]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    7788:	call   2820 <perror@plt>
    778d:	call   4550 <__ctype_b_loc@plt+0x1c80>
    7792:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    779d:	nop    DWORD PTR [rax]
    77a0:	mov    rax,QWORD PTR [rip+0xf809]        # 16fb0 <__ctype_b_loc@plt+0x146e0>
    77a7:	push   r12
    77a9:	push   rbp
    77aa:	push   rbx
    77ab:	mov    rbp,QWORD PTR [rax]
    77ae:	mov    rdi,rbp
    77b1:	call   2760 <fileno@plt>
    77b6:	mov    rdi,rbp
    77b9:	test   eax,eax
    77bb:	js     7811 <__ctype_b_loc@plt+0x4f41>
    77bd:	call   27a0 <__freading@plt>
    77c2:	test   eax,eax
    77c4:	jne    77f2 <__ctype_b_loc@plt+0x4f22>
    77c6:	mov    rdi,rbp
    77c9:	call   4f10 <__ctype_b_loc@plt+0x2640>
    77ce:	test   eax,eax
    77d0:	je     780e <__ctype_b_loc@plt+0x4f3e>
    77d2:	call   2520 <__errno_location@plt>
    77d7:	mov    rdi,rbp
    77da:	mov    r12d,DWORD PTR [rax]
    77dd:	mov    rbx,rax
    77e0:	call   25d0 <fclose@plt>
    77e5:	test   r12d,r12d
    77e8:	je     7816 <__ctype_b_loc@plt+0x4f46>
    77ea:	mov    DWORD PTR [rbx],r12d
    77ed:	call   7750 <__ctype_b_loc@plt+0x4e80>
    77f2:	mov    rdi,rbp
    77f5:	call   2760 <fileno@plt>
    77fa:	xor    esi,esi
    77fc:	mov    edx,0x1
    7801:	mov    edi,eax
    7803:	call   2630 <lseek@plt>
    7808:	add    rax,0x1
    780c:	jne    77c6 <__ctype_b_loc@plt+0x4ef6>
    780e:	mov    rdi,rbp
    7811:	call   25d0 <fclose@plt>
    7816:	test   eax,eax
    7818:	jne    77ed <__ctype_b_loc@plt+0x4f1d>
    781a:	xor    edi,edi
    781c:	call   4400 <__ctype_b_loc@plt+0x1b30>
    7821:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    782c:	nop    DWORD PTR [rax+0x0]
    7830:	endbr64 
    7834:	push   r14
    7836:	push   r13
    7838:	push   r12
    783a:	mov    r12d,edi
    783d:	push   rbp
    783e:	push   rbx
    783f:	mov    ebx,esi
    7841:	call   2520 <__errno_location@plt>
    7846:	mov    r13d,DWORD PTR [rip+0x66bf3]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    784d:	mov    r14d,DWORD PTR [rip+0x66bf0]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    7854:	mov    DWORD PTR [rax],0x0
    785a:	cmp    r14d,r13d
    785d:	jae    78f9 <__ctype_b_loc@plt+0x5029>
    7863:	lea    rbp,[rip+0x26796]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    786a:	nop    WORD PTR [rax+rax*1+0x0]
    7870:	sub    r13d,r14d
    7873:	add    r14,rbp
    7876:	jmp    788d <__ctype_b_loc@plt+0x4fbd>
    7878:	nop    DWORD PTR [rax+rax*1+0x0]
    7880:	cmp    eax,0xffffffff
    7883:	je     7904 <__ctype_b_loc@plt+0x5034>
    7885:	sub    r13d,eax
    7888:	mov    eax,eax
    788a:	add    r14,rax
    788d:	mov    edx,0x7fffffff
    7892:	mov    rsi,r14
    7895:	mov    edi,ebx
    7897:	cmp    r13d,edx
    789a:	cmovbe rdx,r13
    789e:	call   25c0 <write@plt>
    78a3:	cmp    eax,r13d
    78a6:	jne    7880 <__ctype_b_loc@plt+0x4fb0>
    78a8:	mov    edx,0x40000
    78ad:	mov    rsi,rbp
    78b0:	mov    edi,r12d
    78b3:	mov    eax,DWORD PTR [rip+0x66b87]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    78b9:	sub    eax,DWORD PTR [rip+0x66b85]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    78bf:	add    QWORD PTR [rip+0x66b9a],rax        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    78c6:	call   4d60 <__ctype_b_loc@plt+0x2490>
    78cb:	mov    r13d,eax
    78ce:	cmp    eax,0xffffffff
    78d1:	je     7909 <__ctype_b_loc@plt+0x5039>
    78d3:	cdqe   
    78d5:	mov    DWORD PTR [rip+0x66b64],r13d        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    78dc:	xor    r14d,r14d
    78df:	add    QWORD PTR [rip+0x66b72],rax        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    78e6:	mov    DWORD PTR [rip+0x66b54],0x0        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    78f0:	test   r13d,r13d
    78f3:	jne    7870 <__ctype_b_loc@plt+0x4fa0>
    78f9:	pop    rbx
    78fa:	xor    eax,eax
    78fc:	pop    rbp
    78fd:	pop    r12
    78ff:	pop    r13
    7901:	pop    r14
    7903:	ret    
    7904:	call   7750 <__ctype_b_loc@plt+0x4e80>
    7909:	call   7690 <__ctype_b_loc@plt+0x4dc0>
    790e:	xchg   ax,ax
    7910:	push   r12
    7912:	push   rbp
    7913:	mov    ebp,DWORD PTR [rip+0xdaee7]        # e2800 <__ctype_b_loc@plt+0xdff30>
    7919:	push   rbx
    791a:	test   ebp,ebp
    791c:	je     7946 <__ctype_b_loc@plt+0x5076>
    791e:	mov    eax,DWORD PTR [rip+0x674c4]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    7924:	mov    ebx,DWORD PTR [rip+0x25b2a]        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    792a:	lea    r12,[rip+0x9a6cf]        # a2000 <__ctype_b_loc@plt+0x9f730>
    7931:	test   eax,eax
    7933:	je     795c <__ctype_b_loc@plt+0x508c>
    7935:	add    QWORD PTR [rip+0x66b24],rbp        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    793c:	mov    DWORD PTR [rip+0xdaeba],0x0        # e2800 <__ctype_b_loc@plt+0xdff30>
    7946:	pop    rbx
    7947:	pop    rbp
    7948:	pop    r12
    794a:	ret    
    794b:	nop    DWORD PTR [rax+rax*1+0x0]
    7950:	cmp    eax,0xffffffff
    7953:	je     797d <__ctype_b_loc@plt+0x50ad>
    7955:	sub    ebp,eax
    7957:	mov    eax,eax
    7959:	add    r12,rax
    795c:	mov    edx,0x7fffffff
    7961:	mov    rsi,r12
    7964:	mov    edi,ebx
    7966:	cmp    ebp,edx
    7968:	cmovbe rdx,rbp
    796c:	call   25c0 <write@plt>
    7971:	cmp    eax,ebp
    7973:	jne    7950 <__ctype_b_loc@plt+0x5080>
    7975:	mov    ebp,DWORD PTR [rip+0xdae85]        # e2800 <__ctype_b_loc@plt+0xdff30>
    797b:	jmp    7935 <__ctype_b_loc@plt+0x5065>
    797d:	call   7750 <__ctype_b_loc@plt+0x4e80>
    7982:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    798d:	nop    DWORD PTR [rax]
    7990:	mov    edx,DWORD PTR [rip+0xdae72]        # e2808 <__ctype_b_loc@plt+0xdff38>
    7996:	mov    eax,edi
    7998:	push   r12
    799a:	push   rbp
    799b:	mov    ecx,edx
    799d:	push   rbx
    799e:	mov    ebx,esi
    79a0:	shl    eax,cl
    79a2:	mov    ecx,0x10
    79a7:	or     ax,WORD PTR [rip+0xdae56]        # e2804 <__ctype_b_loc@plt+0xdff34>
    79ae:	sub    ecx,esi
    79b0:	add    esi,edx
    79b2:	cmp    ecx,edx
    79b4:	jge    79fc <__ctype_b_loc@plt+0x512c>
    79b6:	mov    ecx,DWORD PTR [rip+0xdae44]        # e2800 <__ctype_b_loc@plt+0xdff30>
    79bc:	mov    WORD PTR [rip+0xdae41],ax        # e2804 <__ctype_b_loc@plt+0xdff34>
    79c3:	mov    ebp,edi
    79c5:	lea    esi,[rcx+0x1]
    79c8:	cmp    ecx,0x3fffd
    79ce:	ja     7a10 <__ctype_b_loc@plt+0x5140>
    79d0:	lea    rdi,[rip+0x9a629]        # a2000 <__ctype_b_loc@plt+0x9f730>
    79d7:	mov    r8d,ecx
    79da:	add    ecx,0x2
    79dd:	mov    BYTE PTR [rdi+r8*1],al
    79e1:	mov    DWORD PTR [rip+0xdae19],ecx        # e2800 <__ctype_b_loc@plt+0xdff30>
    79e7:	mov    BYTE PTR [rdi+rsi*1],ah
    79ea:	mov    ecx,0x10
    79ef:	movzx  ebp,bp
    79f2:	lea    esi,[rdx+rbx*1-0x10]
    79f6:	sub    ecx,edx
    79f8:	sar    ebp,cl
    79fa:	mov    eax,ebp
    79fc:	pop    rbx
    79fd:	pop    rbp
    79fe:	mov    WORD PTR [rip+0xdadff],ax        # e2804 <__ctype_b_loc@plt+0xdff34>
    7a05:	mov    DWORD PTR [rip+0xdadfd],esi        # e2808 <__ctype_b_loc@plt+0xdff38>
    7a0b:	pop    r12
    7a0d:	ret    
    7a0e:	xchg   ax,ax
    7a10:	lea    r12,[rip+0x9a5e9]        # a2000 <__ctype_b_loc@plt+0x9f730>
    7a17:	mov    DWORD PTR [rip+0xdade3],esi        # e2800 <__ctype_b_loc@plt+0xdff30>
    7a1d:	mov    BYTE PTR [r12+rcx*1],al
    7a21:	cmp    esi,0x40000
    7a27:	je     7a60 <__ctype_b_loc@plt+0x5190>
    7a29:	lea    edx,[rsi+0x1]
    7a2c:	movzx  eax,ah
    7a2f:	mov    DWORD PTR [rip+0xdadcb],edx        # e2800 <__ctype_b_loc@plt+0xdff30>
    7a35:	mov    BYTE PTR [r12+rsi*1],al
    7a39:	cmp    edx,0x40000
    7a3f:	je     7a50 <__ctype_b_loc@plt+0x5180>
    7a41:	mov    edx,DWORD PTR [rip+0xdadc1]        # e2808 <__ctype_b_loc@plt+0xdff38>
    7a47:	jmp    79ea <__ctype_b_loc@plt+0x511a>
    7a49:	nop    DWORD PTR [rax+0x0]
    7a50:	call   7910 <__ctype_b_loc@plt+0x5040>
    7a55:	jmp    7a41 <__ctype_b_loc@plt+0x5171>
    7a57:	nop    WORD PTR [rax+rax*1+0x0]
    7a60:	call   7910 <__ctype_b_loc@plt+0x5040>
    7a65:	movzx  eax,WORD PTR [rip+0xdad98]        # e2804 <__ctype_b_loc@plt+0xdff34>
    7a6c:	mov    esi,DWORD PTR [rip+0xdad8e]        # e2800 <__ctype_b_loc@plt+0xdff30>
    7a72:	jmp    7a29 <__ctype_b_loc@plt+0x5159>
    7a74:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    7a7f:	nop
    7a80:	push   r15
    7a82:	mov    eax,esi
    7a84:	push   r14
    7a86:	push   r13
    7a88:	push   r12
    7a8a:	push   rbp
    7a8b:	push   rbx
    7a8c:	sub    rsp,0x18
    7a90:	movzx  ebp,WORD PTR [rdi+0x2]
    7a94:	mov    DWORD PTR [rsp+0x8],esi
    7a98:	cmp    ebp,0x1
    7a9b:	mov    QWORD PTR [rsp],rdi
    7a9f:	sbb    esi,esi
    7aa1:	add    esi,0x4
    7aa4:	cmp    ebp,0x1
    7aa7:	sbb    ecx,ecx
    7aa9:	and    ecx,0x83
    7aaf:	add    ecx,0x7
    7ab2:	test   eax,eax
    7ab4:	js     7b38 <__ctype_b_loc@plt+0x5268>
    7aba:	xor    r12d,r12d
    7abd:	xor    edx,edx
    7abf:	mov    edi,0xffffffff
    7ac4:	lea    rbx,[rip+0x24ed5]        # 2c9a0 <__ctype_b_loc@plt+0x2a0d0>
    7acb:	nop    DWORD PTR [rax+rax*1+0x0]
    7ad0:	mov    rax,QWORD PTR [rsp]
    7ad4:	lea    r14d,[rdx+0x1]
    7ad8:	mov    r13d,ebp
    7adb:	movzx  ebp,WORD PTR [rax+r12*4+0x6]
    7ae1:	cmp    r14d,ecx
    7ae4:	jge    7b50 <__ctype_b_loc@plt+0x5280>
    7ae6:	cmp    ebp,r13d
    7ae9:	je     7c30 <__ctype_b_loc@plt+0x5360>
    7aef:	cmp    r14d,esi
    7af2:	jge    7b50 <__ctype_b_loc@plt+0x5280>
    7af4:	movsxd r15,r13d
    7af7:	nop    WORD PTR [rax+rax*1+0x0]
    7b00:	movzx  esi,WORD PTR [rbx+r15*4+0x2]
    7b06:	movzx  edi,WORD PTR [rbx+r15*4]
    7b0b:	call   7990 <__ctype_b_loc@plt+0x50c0>
    7b10:	sub    r14d,0x1
    7b14:	jne    7b00 <__ctype_b_loc@plt+0x5230>
    7b16:	test   ebp,ebp
    7b18:	je     7bb8 <__ctype_b_loc@plt+0x52e8>
    7b1e:	mov    edi,r13d
    7b21:	mov    esi,0x4
    7b26:	mov    ecx,0x7
    7b2b:	xor    edx,edx
    7b2d:	add    r12,0x1
    7b31:	cmp    DWORD PTR [rsp+0x8],r12d
    7b36:	jge    7ad0 <__ctype_b_loc@plt+0x5200>
    7b38:	add    rsp,0x18
    7b3c:	pop    rbx
    7b3d:	pop    rbp
    7b3e:	pop    r12
    7b40:	pop    r13
    7b42:	pop    r14
    7b44:	pop    r15
    7b46:	ret    
    7b47:	nop    WORD PTR [rax+rax*1+0x0]
    7b50:	mov    DWORD PTR [rsp+0xc],edx
    7b54:	test   r13d,r13d
    7b57:	je     7bd0 <__ctype_b_loc@plt+0x5300>
    7b59:	cmp    edi,r13d
    7b5c:	je     7b74 <__ctype_b_loc@plt+0x52a4>
    7b5e:	movsxd rax,r13d
    7b61:	movzx  esi,WORD PTR [rbx+rax*4+0x2]
    7b66:	movzx  edi,WORD PTR [rbx+rax*4]
    7b6a:	call   7990 <__ctype_b_loc@plt+0x50c0>
    7b6f:	mov    r14d,DWORD PTR [rsp+0xc]
    7b74:	movzx  esi,WORD PTR [rip+0x24e67]        # 2c9e2 <__ctype_b_loc@plt+0x2a112>
    7b7b:	movzx  edi,WORD PTR [rip+0x24e5e]        # 2c9e0 <__ctype_b_loc@plt+0x2a110>
    7b82:	call   7990 <__ctype_b_loc@plt+0x50c0>
    7b87:	lea    edi,[r14-0x3]
    7b8b:	mov    esi,0x2
    7b90:	call   7990 <__ctype_b_loc@plt+0x50c0>
    7b95:	test   ebp,ebp
    7b97:	je     7bb8 <__ctype_b_loc@plt+0x52e8>
    7b99:	cmp    ebp,r13d
    7b9c:	jne    7b1e <__ctype_b_loc@plt+0x524e>
    7b9e:	mov    edi,ebp
    7ba0:	mov    esi,0x3
    7ba5:	mov    ecx,0x6
    7baa:	xor    edx,edx
    7bac:	jmp    7b2d <__ctype_b_loc@plt+0x525d>
    7bb1:	nop    DWORD PTR [rax+0x0]
    7bb8:	mov    edi,r13d
    7bbb:	mov    esi,0x3
    7bc0:	mov    ecx,0x8a
    7bc5:	xor    edx,edx
    7bc7:	jmp    7b2d <__ctype_b_loc@plt+0x525d>
    7bcc:	nop    DWORD PTR [rax+0x0]
    7bd0:	cmp    r14d,0xa
    7bd4:	jg     7c00 <__ctype_b_loc@plt+0x5330>
    7bd6:	movzx  esi,WORD PTR [rip+0x24e09]        # 2c9e6 <__ctype_b_loc@plt+0x2a116>
    7bdd:	movzx  edi,WORD PTR [rip+0x24e00]        # 2c9e4 <__ctype_b_loc@plt+0x2a114>
    7be4:	call   7990 <__ctype_b_loc@plt+0x50c0>
    7be9:	mov    edx,DWORD PTR [rsp+0xc]
    7bed:	mov    esi,0x3
    7bf2:	lea    edi,[rdx-0x2]
    7bf5:	call   7990 <__ctype_b_loc@plt+0x50c0>
    7bfa:	jmp    7b95 <__ctype_b_loc@plt+0x52c5>
    7bfc:	nop    DWORD PTR [rax+0x0]
    7c00:	movzx  esi,WORD PTR [rip+0x24de3]        # 2c9ea <__ctype_b_loc@plt+0x2a11a>
    7c07:	movzx  edi,WORD PTR [rip+0x24dda]        # 2c9e8 <__ctype_b_loc@plt+0x2a118>
    7c0e:	call   7990 <__ctype_b_loc@plt+0x50c0>
    7c13:	mov    edx,DWORD PTR [rsp+0xc]
    7c17:	mov    esi,0x7
    7c1c:	lea    edi,[rdx-0xa]
    7c1f:	call   7990 <__ctype_b_loc@plt+0x50c0>
    7c24:	jmp    7b95 <__ctype_b_loc@plt+0x52c5>
    7c29:	nop    DWORD PTR [rax+0x0]
    7c30:	mov    edx,r14d
    7c33:	jmp    7b2d <__ctype_b_loc@plt+0x525d>
    7c38:	nop    DWORD PTR [rax+rax*1+0x0]
    7c40:	push   r15
    7c42:	push   r14
    7c44:	push   r13
    7c46:	mov    r13,rdi
    7c49:	push   r12
    7c4b:	push   rbp
    7c4c:	push   rbx
    7c4d:	sub    rsp,0x28
    7c51:	mov    eax,DWORD PTR [rip+0x24d21]        # 2c978 <__ctype_b_loc@plt+0x2a0a8>
    7c57:	mov    QWORD PTR [rsp+0x18],rsi
    7c5c:	test   eax,eax
    7c5e:	je     7d92 <__ctype_b_loc@plt+0x54c2>
    7c64:	xor    ebx,ebx
    7c66:	xor    r14d,r14d
    7c69:	xor    r12d,r12d
    7c6c:	xor    eax,eax
    7c6e:	lea    r15,[rip+0x2638b]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    7c75:	jmp    7ca1 <__ctype_b_loc@plt+0x53d1>
    7c77:	nop    WORD PTR [rax+rax*1+0x0]
    7c80:	lea    rax,[r13+rax*4+0x0]
    7c85:	movzx  esi,WORD PTR [rax+0x2]
    7c89:	movzx  edi,WORD PTR [rax]
    7c8c:	call   7990 <__ctype_b_loc@plt+0x50c0>
    7c91:	shr    bl,1
    7c93:	cmp    DWORD PTR [rip+0x24cdf],ebp        # 2c978 <__ctype_b_loc@plt+0x2a0a8>
    7c99:	jbe    7d92 <__ctype_b_loc@plt+0x54c2>
    7c9f:	mov    eax,ebp
    7ca1:	test   al,0x7
    7ca3:	jne    7cb7 <__ctype_b_loc@plt+0x53e7>
    7ca5:	mov    edx,r14d
    7ca8:	lea    rbx,[rip+0x12e51]        # 1ab00 <__ctype_b_loc@plt+0x18230>
    7caf:	add    r14d,0x1
    7cb3:	movzx  ebx,BYTE PTR [rbx+rdx*1]
    7cb7:	lea    ebp,[rax+0x1]
    7cba:	movzx  eax,BYTE PTR [r15+rax*1]
    7cbf:	test   bl,0x1
    7cc2:	je     7c80 <__ctype_b_loc@plt+0x53b0>
    7cc4:	movzx  ecx,al
    7cc7:	mov    DWORD PTR [rsp+0x8],ecx
    7ccb:	lea    rcx,[rip+0x2402e]        # 2bd00 <__ctype_b_loc@plt+0x29430>
    7cd2:	movzx  eax,BYTE PTR [rcx+rax*1]
    7cd6:	lea    edx,[rax+0x101]
    7cdc:	mov    DWORD PTR [rsp+0x10],eax
    7ce0:	lea    rdx,[r13+rdx*4+0x0]
    7ce5:	movzx  esi,WORD PTR [rdx+0x2]
    7ce9:	movzx  edi,WORD PTR [rdx]
    7cec:	call   7990 <__ctype_b_loc@plt+0x50c0>
    7cf1:	mov    eax,DWORD PTR [rsp+0x10]
    7cf5:	lea    rcx,[rip+0xf384]        # 17080 <__ctype_b_loc@plt+0x147b0>
    7cfc:	mov    esi,DWORD PTR [rcx+rax*4]
    7cff:	test   esi,esi
    7d01:	jne    7dd8 <__ctype_b_loc@plt+0x5508>
    7d07:	lea    eax,[r12+0x1]
    7d0c:	mov    DWORD PTR [rsp+0x10],eax
    7d10:	lea    rax,[rip+0x13de9]        # 1bb00 <__ctype_b_loc@plt+0x19230>
    7d17:	movzx  edx,WORD PTR [rax+r12*2]
    7d1c:	cmp    edx,0xff
    7d22:	ja     7db8 <__ctype_b_loc@plt+0x54e8>
    7d28:	mov    eax,edx
    7d2a:	lea    rcx,[rip+0x23dcf]        # 2bb00 <__ctype_b_loc@plt+0x29230>
    7d31:	movzx  eax,BYTE PTR [rcx+rax*1]
    7d35:	mov    rdi,QWORD PTR [rsp+0x18]
    7d3a:	mov    DWORD PTR [rsp+0x14],edx
    7d3e:	mov    QWORD PTR [rsp+0x8],rax
    7d43:	lea    rcx,[rdi+rax*4]
    7d47:	movzx  esi,WORD PTR [rcx+0x2]
    7d4b:	movzx  edi,WORD PTR [rcx]
    7d4e:	call   7990 <__ctype_b_loc@plt+0x50c0>
    7d53:	mov    rax,QWORD PTR [rsp+0x8]
    7d58:	lea    rcx,[rip+0xf3a1]        # 17100 <__ctype_b_loc@plt+0x14830>
    7d5f:	mov    r12d,DWORD PTR [rsp+0x10]
    7d64:	mov    edx,DWORD PTR [rsp+0x14]
    7d68:	mov    esi,DWORD PTR [rcx+rax*4]
    7d6b:	test   esi,esi
    7d6d:	je     7c91 <__ctype_b_loc@plt+0x53c1>
    7d73:	lea    rcx,[rip+0x12c86]        # 1aa00 <__ctype_b_loc@plt+0x18130>
    7d7a:	shr    bl,1
    7d7c:	sub    edx,DWORD PTR [rcx+rax*4]
    7d7f:	mov    edi,edx
    7d81:	call   7990 <__ctype_b_loc@plt+0x50c0>
    7d86:	cmp    DWORD PTR [rip+0x24bec],ebp        # 2c978 <__ctype_b_loc@plt+0x2a0a8>
    7d8c:	ja     7c9f <__ctype_b_loc@plt+0x53cf>
    7d92:	movzx  esi,WORD PTR [r13+0x402]
    7d9a:	movzx  edi,WORD PTR [r13+0x400]
    7da2:	add    rsp,0x28
    7da6:	pop    rbx
    7da7:	pop    rbp
    7da8:	pop    r12
    7daa:	pop    r13
    7dac:	pop    r14
    7dae:	pop    r15
    7db0:	jmp    7990 <__ctype_b_loc@plt+0x50c0>
    7db5:	nop    DWORD PTR [rax]
    7db8:	mov    eax,edx
    7dba:	lea    rcx,[rip+0x23d3f]        # 2bb00 <__ctype_b_loc@plt+0x29230>
    7dc1:	shr    eax,0x7
    7dc4:	add    eax,0x100
    7dc9:	movzx  eax,BYTE PTR [rcx+rax*1]
    7dcd:	jmp    7d35 <__ctype_b_loc@plt+0x5465>
    7dd2:	nop    WORD PTR [rax+rax*1+0x0]
    7dd8:	lea    rdx,[rip+0x12ca1]        # 1aa80 <__ctype_b_loc@plt+0x181b0>
    7ddf:	mov    edi,DWORD PTR [rsp+0x8]
    7de3:	sub    edi,DWORD PTR [rdx+rax*4]
    7de6:	call   7990 <__ctype_b_loc@plt+0x50c0>
    7deb:	jmp    7d07 <__ctype_b_loc@plt+0x5437>
    7df0:	mov    eax,DWORD PTR [rip+0xdaa12]        # e2808 <__ctype_b_loc@plt+0xdff38>
    7df6:	push   rbx
    7df7:	cmp    eax,0x8
    7dfa:	jle    7e78 <__ctype_b_loc@plt+0x55a8>
    7dfc:	mov    eax,DWORD PTR [rip+0xda9fe]        # e2800 <__ctype_b_loc@plt+0xdff30>
    7e02:	movzx  ecx,WORD PTR [rip+0xda9fb]        # e2804 <__ctype_b_loc@plt+0xdff34>
    7e09:	lea    edx,[rax+0x1]
    7e0c:	cmp    eax,0x3fffd
    7e11:	ja     7e40 <__ctype_b_loc@plt+0x5570>
    7e13:	lea    rsi,[rip+0x9a1e6]        # a2000 <__ctype_b_loc@plt+0x9f730>
    7e1a:	mov    edi,eax
    7e1c:	add    eax,0x2
    7e1f:	mov    BYTE PTR [rsi+rdi*1],cl
    7e22:	mov    DWORD PTR [rip+0xda9d8],eax        # e2800 <__ctype_b_loc@plt+0xdff30>
    7e28:	mov    BYTE PTR [rsi+rdx*1],ch
    7e2b:	mov    DWORD PTR [rip+0xda9d3],0x0        # e2808 <__ctype_b_loc@plt+0xdff38>
    7e35:	xor    eax,eax
    7e37:	pop    rbx
    7e38:	mov    WORD PTR [rip+0xda9c5],ax        # e2804 <__ctype_b_loc@plt+0xdff34>
    7e3f:	ret    
    7e40:	lea    rbx,[rip+0x9a1b9]        # a2000 <__ctype_b_loc@plt+0x9f730>
    7e47:	mov    DWORD PTR [rip+0xda9b3],edx        # e2800 <__ctype_b_loc@plt+0xdff30>
    7e4d:	mov    BYTE PTR [rbx+rax*1],cl
    7e50:	cmp    edx,0x40000
    7e56:	je     7eb0 <__ctype_b_loc@plt+0x55e0>
    7e58:	lea    eax,[rdx+0x1]
    7e5b:	mov    BYTE PTR [rbx+rdx*1],ch
    7e5e:	mov    DWORD PTR [rip+0xda99c],eax        # e2800 <__ctype_b_loc@plt+0xdff30>
    7e64:	cmp    eax,0x40000
    7e69:	jne    7e2b <__ctype_b_loc@plt+0x555b>
    7e6b:	call   7910 <__ctype_b_loc@plt+0x5040>
    7e70:	jmp    7e2b <__ctype_b_loc@plt+0x555b>
    7e72:	nop    WORD PTR [rax+rax*1+0x0]
    7e78:	test   eax,eax
    7e7a:	jle    7e2b <__ctype_b_loc@plt+0x555b>
    7e7c:	mov    eax,DWORD PTR [rip+0xda97e]        # e2800 <__ctype_b_loc@plt+0xdff30>
    7e82:	movzx  esi,WORD PTR [rip+0xda97b]        # e2804 <__ctype_b_loc@plt+0xdff34>
    7e89:	lea    rcx,[rip+0x9a170]        # a2000 <__ctype_b_loc@plt+0x9f730>
    7e90:	lea    edx,[rax+0x1]
    7e93:	mov    BYTE PTR [rcx+rax*1],sil
    7e97:	mov    DWORD PTR [rip+0xda963],edx        # e2800 <__ctype_b_loc@plt+0xdff30>
    7e9d:	cmp    edx,0x40000
    7ea3:	jne    7e2b <__ctype_b_loc@plt+0x555b>
    7ea5:	jmp    7e6b <__ctype_b_loc@plt+0x559b>
    7ea7:	nop    WORD PTR [rax+rax*1+0x0]
    7eb0:	call   7910 <__ctype_b_loc@plt+0x5040>
    7eb5:	movzx  ecx,WORD PTR [rip+0xda948]        # e2804 <__ctype_b_loc@plt+0xdff34>
    7ebc:	mov    edx,DWORD PTR [rip+0xda93e]        # e2800 <__ctype_b_loc@plt+0xdff30>
    7ec2:	jmp    7e58 <__ctype_b_loc@plt+0x5588>
    7ec4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    7ecf:	nop
    7ed0:	push   r13
    7ed2:	mov    r13d,esi
    7ed5:	push   r12
    7ed7:	mov    r12d,r13d
    7eda:	push   rbp
    7edb:	shr    r12w,0x8
    7ee0:	push   rbx
    7ee1:	mov    rbx,rdi
    7ee4:	sub    rsp,0x18
    7ee8:	call   7df0 <__ctype_b_loc@plt+0x5520>
    7eed:	mov    edx,DWORD PTR [rip+0xda90d]        # e2800 <__ctype_b_loc@plt+0xdff30>
    7ef3:	cmp    edx,0x3fffd
    7ef9:	ja     7fd0 <__ctype_b_loc@plt+0x5700>
    7eff:	mov    eax,edx
    7f01:	lea    rbp,[rip+0x9a0f8]        # a2000 <__ctype_b_loc@plt+0x9f730>
    7f08:	mov    BYTE PTR [rbp+rax*1+0x0],r13b
    7f0d:	lea    eax,[rdx+0x2]
    7f10:	add    edx,0x1
    7f13:	mov    BYTE PTR [rbp+rdx*1+0x0],r12b
    7f18:	mov    ecx,r13d
    7f1b:	mov    esi,r13d
    7f1e:	lea    edx,[rax+0x1]
    7f21:	not    ecx
    7f23:	not    esi
    7f25:	shr    cx,0x8
    7f29:	cmp    eax,0x3fffd
    7f2e:	ja     7f98 <__ctype_b_loc@plt+0x56c8>
    7f30:	mov    edi,eax
    7f32:	add    eax,0x2
    7f35:	mov    BYTE PTR [rbp+rdi*1+0x0],sil
    7f3a:	mov    DWORD PTR [rip+0xda8c0],eax        # e2800 <__ctype_b_loc@plt+0xdff30>
    7f40:	mov    BYTE PTR [rbp+rdx*1+0x0],cl
    7f44:	mov    r12d,r13d
    7f47:	add    r12,rbx
    7f4a:	test   r13d,r13d
    7f4d:	jne    7f5d <__ctype_b_loc@plt+0x568d>
    7f4f:	jmp    7f89 <__ctype_b_loc@plt+0x56b9>
    7f51:	nop    DWORD PTR [rax+0x0]
    7f58:	cmp    rbx,r12
    7f5b:	je     7f89 <__ctype_b_loc@plt+0x56b9>
    7f5d:	mov    eax,DWORD PTR [rip+0xda89d]        # e2800 <__ctype_b_loc@plt+0xdff30>
    7f63:	movzx  ecx,BYTE PTR [rbx]
    7f66:	add    rbx,0x1
    7f6a:	lea    edx,[rax+0x1]
    7f6d:	mov    BYTE PTR [rbp+rax*1+0x0],cl
    7f71:	mov    DWORD PTR [rip+0xda889],edx        # e2800 <__ctype_b_loc@plt+0xdff30>
    7f77:	cmp    edx,0x40000
    7f7d:	jne    7f58 <__ctype_b_loc@plt+0x5688>
    7f7f:	call   7910 <__ctype_b_loc@plt+0x5040>
    7f84:	cmp    rbx,r12
    7f87:	jne    7f5d <__ctype_b_loc@plt+0x568d>
    7f89:	add    rsp,0x18
    7f8d:	pop    rbx
    7f8e:	pop    rbp
    7f8f:	pop    r12
    7f91:	pop    r13
    7f93:	ret    
    7f94:	nop    DWORD PTR [rax+0x0]
    7f98:	mov    DWORD PTR [rip+0xda862],edx        # e2800 <__ctype_b_loc@plt+0xdff30>
    7f9e:	mov    BYTE PTR [rbp+rax*1+0x0],sil
    7fa3:	cmp    edx,0x40000
    7fa9:	je     8023 <__ctype_b_loc@plt+0x5753>
    7fab:	lea    eax,[rdx+0x1]
    7fae:	mov    BYTE PTR [rbp+rdx*1+0x0],cl
    7fb2:	mov    DWORD PTR [rip+0xda848],eax        # e2800 <__ctype_b_loc@plt+0xdff30>
    7fb8:	cmp    eax,0x40000
    7fbd:	jne    7f44 <__ctype_b_loc@plt+0x5674>
    7fbf:	call   7910 <__ctype_b_loc@plt+0x5040>
    7fc4:	jmp    7f44 <__ctype_b_loc@plt+0x5674>
    7fc9:	nop    DWORD PTR [rax+0x0]
    7fd0:	lea    ecx,[rdx+0x1]
    7fd3:	lea    rbp,[rip+0x9a026]        # a2000 <__ctype_b_loc@plt+0x9f730>
    7fda:	mov    DWORD PTR [rip+0xda820],ecx        # e2800 <__ctype_b_loc@plt+0xdff30>
    7fe0:	mov    BYTE PTR [rbp+rdx*1+0x0],r13b
    7fe5:	cmp    ecx,0x40000
    7feb:	je     8016 <__ctype_b_loc@plt+0x5746>
    7fed:	lea    eax,[rcx+0x1]
    7ff0:	mov    BYTE PTR [rbp+rcx*1+0x0],r12b
    7ff5:	mov    DWORD PTR [rip+0xda805],eax        # e2800 <__ctype_b_loc@plt+0xdff30>
    7ffb:	cmp    eax,0x40000
    8000:	jne    7f18 <__ctype_b_loc@plt+0x5648>
    8006:	call   7910 <__ctype_b_loc@plt+0x5040>
    800b:	mov    eax,DWORD PTR [rip+0xda7ef]        # e2800 <__ctype_b_loc@plt+0xdff30>
    8011:	jmp    7f18 <__ctype_b_loc@plt+0x5648>
    8016:	call   7910 <__ctype_b_loc@plt+0x5040>
    801b:	mov    ecx,DWORD PTR [rip+0xda7df]        # e2800 <__ctype_b_loc@plt+0xdff30>
    8021:	jmp    7fed <__ctype_b_loc@plt+0x571d>
    8023:	mov    DWORD PTR [rsp+0xc],ecx
    8027:	call   7910 <__ctype_b_loc@plt+0x5040>
    802c:	mov    edx,DWORD PTR [rip+0xda7ce]        # e2800 <__ctype_b_loc@plt+0xdff30>
    8032:	mov    ecx,DWORD PTR [rsp+0xc]
    8036:	jmp    7fab <__ctype_b_loc@plt+0x56db>
    803b:	nop    DWORD PTR [rax+rax*1+0x0]
    8040:	push   r15
    8042:	mov    r15,rsi
    8045:	push   r14
    8047:	push   r13
    8049:	lea    r13,[rip+0x24af0]        # 2cb40 <__ctype_b_loc@plt+0x2a270>
    8050:	push   r12
    8052:	push   rbp
    8053:	mov    ebp,ecx
    8055:	push   rbx
    8056:	sub    rsp,0x28
    805a:	mov    r8,QWORD PTR [rip+0x124a7]        # 1a508 <__ctype_b_loc@plt+0x17c38>
    8061:	mov    eax,DWORD PTR [rip+0x24919]        # 2c980 <__ctype_b_loc@plt+0x2a0b0>
    8067:	movzx  ecx,BYTE PTR [rip+0x24907]        # 2c975 <__ctype_b_loc@plt+0x2a0a5>
    806e:	mov    DWORD PTR [rsp+0x18],edx
    8072:	lea    rdx,[rip+0x12a87]        # 1ab00 <__ctype_b_loc@plt+0x18230>
    8079:	cmp    WORD PTR [r8],0xffff
    807e:	mov    QWORD PTR [rsp+0x8],rdi
    8083:	mov    BYTE PTR [rdx+rax*1],cl
    8086:	je     82fb <__ctype_b_loc@plt+0x5a2b>
    808c:	lea    rdi,[rip+0xf2ad]        # 17340 <__ctype_b_loc@plt+0x14a70>
    8093:	lea    r14,[rip+0x249a6]        # 2ca40 <__ctype_b_loc@plt+0x2a170>
    809a:	call   3990 <__ctype_b_loc@plt+0x10c0>
    809f:	lea    rdi,[rip+0xf25a]        # 17300 <__ctype_b_loc@plt+0x14a30>
    80a6:	lea    r12,[rip+0x248f3]        # 2c9a0 <__ctype_b_loc@plt+0x2a0d0>
    80ad:	call   3990 <__ctype_b_loc@plt+0x10c0>
    80b2:	mov    esi,DWORD PTR [rip+0xf2ac]        # 17364 <__ctype_b_loc@plt+0x14a94>
    80b8:	mov    rdi,r13
    80bb:	call   3fd0 <__ctype_b_loc@plt+0x1700>
    80c0:	mov    esi,DWORD PTR [rip+0xf25e]        # 17324 <__ctype_b_loc@plt+0x14a54>
    80c6:	mov    rdi,r14
    80c9:	call   3fd0 <__ctype_b_loc@plt+0x1700>
    80ce:	lea    rdi,[rip+0xf1eb]        # 172c0 <__ctype_b_loc@plt+0x149f0>
    80d5:	call   3990 <__ctype_b_loc@plt+0x10c0>
    80da:	mov    eax,0x12
    80df:	mov    edx,0xf
    80e4:	lea    rsi,[rip+0x99c5]        # 11ab0 <__ctype_b_loc@plt+0xf1e0>
    80eb:	jmp    80f4 <__ctype_b_loc@plt+0x5824>
    80ed:	nop    DWORD PTR [rax]
    80f0:	movzx  edx,BYTE PTR [rsi+rax*1]
    80f4:	cmp    WORD PTR [r12+rdx*4+0x2],0x0
    80fb:	movsxd rbx,eax
    80fe:	jne    82f0 <__ctype_b_loc@plt+0x5a20>
    8104:	sub    rax,0x1
    8108:	cmp    rax,0x2
    810c:	jne    80f0 <__ctype_b_loc@plt+0x5820>
    810e:	mov    eax,0x17
    8113:	mov    ebx,0x2
    8118:	mov    rcx,QWORD PTR [rip+0x24871]        # 2c990 <__ctype_b_loc@plt+0x2a0c0>
    811f:	add    rax,QWORD PTR [rip+0x24862]        # 2c988 <__ctype_b_loc@plt+0x2a0b8>
    8126:	lea    r8,[r15+0x4]
    812a:	mov    QWORD PTR [rip+0x24857],rax        # 2c988 <__ctype_b_loc@plt+0x2a0b8>
    8131:	add    rax,0xa
    8135:	lea    rdx,[rcx+0xa]
    8139:	shr    rax,0x3
    813d:	mov    QWORD PTR [rsp+0x10],r8
    8142:	shr    rdx,0x3
    8146:	add    QWORD PTR [rip+0x123b3],r15        # 1a500 <__ctype_b_loc@plt+0x17c30>
    814d:	mov    rsi,rdx
    8150:	cmp    rax,rdx
    8153:	cmovbe rsi,rax
    8157:	cmp    rsi,r8
    815a:	jb     8168 <__ctype_b_loc@plt+0x5898>
    815c:	cmp    QWORD PTR [rsp+0x8],0x0
    8162:	jne    8250 <__ctype_b_loc@plt+0x5980>
    8168:	cmp    rax,rdx
    816b:	jae    82b0 <__ctype_b_loc@plt+0x59e0>
    8171:	lea    edi,[rbp+0x4]
    8174:	mov    esi,0x3
    8179:	call   7990 <__ctype_b_loc@plt+0x50c0>
    817e:	mov    eax,DWORD PTR [rip+0xf1e0]        # 17364 <__ctype_b_loc@plt+0x14a94>
    8184:	mov    esi,0x5
    8189:	mov    r15d,DWORD PTR [rip+0xf194]        # 17324 <__ctype_b_loc@plt+0x14a54>
    8190:	lea    edi,[rax-0x100]
    8196:	mov    DWORD PTR [rsp+0x1c],eax
    819a:	mov    DWORD PTR [rsp+0x10],r15d
    819f:	call   7990 <__ctype_b_loc@plt+0x50c0>
    81a4:	mov    edi,r15d
    81a7:	mov    esi,0x5
    81ac:	lea    r15,[rip+0x98fd]        # 11ab0 <__ctype_b_loc@plt+0xf1e0>
    81b3:	call   7990 <__ctype_b_loc@plt+0x50c0>
    81b8:	lea    edi,[rbx-0x3]
    81bb:	mov    esi,0x4
    81c0:	add    rbx,r15
    81c3:	call   7990 <__ctype_b_loc@plt+0x50c0>
    81c8:	mov    eax,0x10
    81cd:	jmp    81d9 <__ctype_b_loc@plt+0x5909>
    81cf:	nop
    81d0:	movzx  eax,BYTE PTR [r15+0x1]
    81d5:	add    r15,0x1
    81d9:	movzx  edi,WORD PTR [r12+rax*4+0x2]
    81df:	mov    esi,0x3
    81e4:	call   7990 <__ctype_b_loc@plt+0x50c0>
    81e9:	cmp    rbx,r15
    81ec:	jne    81d0 <__ctype_b_loc@plt+0x5900>
    81ee:	mov    esi,DWORD PTR [rsp+0x1c]
    81f2:	mov    rdi,r13
    81f5:	call   7a80 <__ctype_b_loc@plt+0x51b0>
    81fa:	mov    esi,DWORD PTR [rsp+0x10]
    81fe:	mov    rdi,r14
    8201:	call   7a80 <__ctype_b_loc@plt+0x51b0>
    8206:	mov    rsi,r14
    8209:	mov    rdi,r13
    820c:	call   7c40 <__ctype_b_loc@plt+0x5370>
    8211:	mov    rax,QWORD PTR [rip+0x24770]        # 2c988 <__ctype_b_loc@plt+0x2a0b8>
    8218:	add    rax,0x3
    821c:	add    QWORD PTR [rip+0x122d5],rax        # 1a4f8 <__ctype_b_loc@plt+0x17c28>
    8223:	call   3800 <__ctype_b_loc@plt+0xf30>
    8228:	test   ebp,ebp
    822a:	jne    8291 <__ctype_b_loc@plt+0x59c1>
    822c:	mov    eax,DWORD PTR [rsp+0x18]
    8230:	test   eax,eax
    8232:	je     8241 <__ctype_b_loc@plt+0x5971>
    8234:	test   BYTE PTR [rip+0x122bd],0x7        # 1a4f8 <__ctype_b_loc@plt+0x17c28>
    823b:	jne    8371 <__ctype_b_loc@plt+0x5aa1>
    8241:	add    rsp,0x28
    8245:	pop    rbx
    8246:	pop    rbp
    8247:	pop    r12
    8249:	pop    r13
    824b:	pop    r14
    824d:	pop    r15
    824f:	ret    
    8250:	mov    esi,0x3
    8255:	mov    edi,ebp
    8257:	call   7990 <__ctype_b_loc@plt+0x50c0>
    825c:	mov    rax,QWORD PTR [rip+0x12295]        # 1a4f8 <__ctype_b_loc@plt+0x17c28>
    8263:	mov    r8,QWORD PTR [rsp+0x10]
    8268:	mov    esi,r15d
    826b:	mov    rdi,QWORD PTR [rsp+0x8]
    8270:	add    rax,0xa
    8274:	and    rax,0xfffffffffffffff8
    8278:	lea    rax,[rax+r8*8]
    827c:	mov    QWORD PTR [rip+0x12275],rax        # 1a4f8 <__ctype_b_loc@plt+0x17c28>
    8283:	call   7ed0 <__ctype_b_loc@plt+0x5600>
    8288:	call   3800 <__ctype_b_loc@plt+0xf30>
    828d:	test   ebp,ebp
    828f:	je     822c <__ctype_b_loc@plt+0x595c>
    8291:	call   7df0 <__ctype_b_loc@plt+0x5520>
    8296:	add    QWORD PTR [rip+0x1225a],0x7        # 1a4f8 <__ctype_b_loc@plt+0x17c28>
    829e:	add    rsp,0x28
    82a2:	pop    rbx
    82a3:	pop    rbp
    82a4:	pop    r12
    82a6:	pop    r13
    82a8:	pop    r14
    82aa:	pop    r15
    82ac:	ret    
    82ad:	nop    DWORD PTR [rax]
    82b0:	lea    edi,[rbp+0x2]
    82b3:	mov    esi,0x3
    82b8:	call   7990 <__ctype_b_loc@plt+0x50c0>
    82bd:	lea    rsi,[rip+0x121bc]        # 1a480 <__ctype_b_loc@plt+0x17bb0>
    82c4:	lea    rdi,[rip+0x11d35]        # 1a000 <__ctype_b_loc@plt+0x17730>
    82cb:	call   7c40 <__ctype_b_loc@plt+0x5370>
    82d0:	mov    rax,QWORD PTR [rip+0x246b9]        # 2c990 <__ctype_b_loc@plt+0x2a0c0>
    82d7:	add    rax,0x3
    82db:	add    QWORD PTR [rip+0x12216],rax        # 1a4f8 <__ctype_b_loc@plt+0x17c28>
    82e2:	jmp    8223 <__ctype_b_loc@plt+0x5953>
    82e7:	nop    WORD PTR [rax+rax*1+0x0]
    82f0:	lea    eax,[rbx+rbx*2+0x11]
    82f4:	cdqe   
    82f6:	jmp    8118 <__ctype_b_loc@plt+0x5848>
    82fb:	lea    rsi,[r13+0x1c]
    82ff:	mov    rax,r13
    8302:	xor    edx,edx
    8304:	nop    DWORD PTR [rax+0x0]
    8308:	movzx  ecx,WORD PTR [rax]
    830b:	add    rax,0x4
    830f:	add    edx,ecx
    8311:	cmp    rsi,rax
    8314:	jne    8308 <__ctype_b_loc@plt+0x5a38>
    8316:	lea    rax,[rip+0x2483f]        # 2cb5c <__ctype_b_loc@plt+0x2a28c>
    831d:	xor    ecx,ecx
    831f:	lea    rdi,[rax+0x1e4]
    8326:	cs nop WORD PTR [rax+rax*1+0x0]
    8330:	movzx  esi,WORD PTR [rax]
    8333:	add    rax,0x4
    8337:	add    ecx,esi
    8339:	cmp    rdi,rax
    833c:	jne    8330 <__ctype_b_loc@plt+0x5a60>
    833e:	lea    rax,[rip+0x249fb]        # 2cd40 <__ctype_b_loc@plt+0x2a470>
    8345:	lea    rdi,[rax+0x200]
    834c:	nop    DWORD PTR [rax+0x0]
    8350:	movzx  esi,WORD PTR [rax]
    8353:	add    rax,0x4
    8357:	add    edx,esi
    8359:	cmp    rdi,rax
    835c:	jne    8350 <__ctype_b_loc@plt+0x5a80>
    835e:	shr    ecx,0x2
    8361:	xor    eax,eax
    8363:	cmp    edx,ecx
    8365:	setbe  al
    8368:	mov    WORD PTR [r8],ax
    836c:	jmp    808c <__ctype_b_loc@plt+0x57bc>
    8371:	mov    esi,0x3
    8376:	xor    edi,edi
    8378:	call   7990 <__ctype_b_loc@plt+0x50c0>
    837d:	mov    rax,QWORD PTR [rip+0x12174]        # 1a4f8 <__ctype_b_loc@plt+0x17c28>
    8384:	mov    rdi,QWORD PTR [rsp+0x8]
    8389:	xor    esi,esi
    838b:	add    rax,0xa
    838f:	and    rax,0xfffffffffffffff8
    8393:	mov    QWORD PTR [rip+0x1215e],rax        # 1a4f8 <__ctype_b_loc@plt+0x17c28>
    839a:	add    rsp,0x28
    839e:	pop    rbx
    839f:	pop    rbp
    83a0:	pop    r12
    83a2:	pop    r13
    83a4:	pop    r14
    83a6:	pop    r15
    83a8:	jmp    7ed0 <__ctype_b_loc@plt+0x5600>
    83ad:	nop    DWORD PTR [rax]
    83b0:	push   r12
    83b2:	push   rbp
    83b3:	mov    ebp,DWORD PTR [rip+0xda447]        # e2800 <__ctype_b_loc@plt+0xdff30>
    83b9:	push   rbx
    83ba:	test   ebp,ebp
    83bc:	jne    83c8 <__ctype_b_loc@plt+0x5af8>
    83be:	pop    rbx
    83bf:	pop    rbp
    83c0:	pop    r12
    83c2:	ret    
    83c3:	nop    DWORD PTR [rax+rax*1+0x0]
    83c8:	mov    r8d,ebp
    83cb:	lea    rdx,[rip+0x87c2e]        # 90000 <__ctype_b_loc@plt+0x8d730>
    83d2:	mov    rax,QWORD PTR [rip+0xeeaf]        # 17288 <__ctype_b_loc@plt+0x149b8>
    83d9:	lea    rsi,[rip+0x9860]        # 11c40 <__ctype_b_loc@plt+0xf370>
    83e0:	lea    rdi,[rdx+r8*1]
    83e4:	nop    DWORD PTR [rax+0x0]
    83e8:	movzx  ecx,BYTE PTR [rdx]
    83eb:	add    rdx,0x1
    83ef:	xor    ecx,eax
    83f1:	shr    rax,0x8
    83f5:	movzx  ecx,cl
    83f8:	xor    rax,QWORD PTR [rsi+rcx*8]
    83fc:	cmp    rdx,rdi
    83ff:	jne    83e8 <__ctype_b_loc@plt+0x5b18>
    8401:	mov    QWORD PTR [rip+0xee80],rax        # 17288 <__ctype_b_loc@plt+0x149b8>
    8408:	mov    eax,DWORD PTR [rip+0x669da]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    840e:	lea    r12,[rip+0x87beb]        # 90000 <__ctype_b_loc@plt+0x8d730>
    8415:	mov    ebx,DWORD PTR [rip+0x25039]        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    841b:	test   eax,eax
    841d:	je     8444 <__ctype_b_loc@plt+0x5b74>
    841f:	pop    rbx
    8420:	pop    rbp
    8421:	mov    DWORD PTR [rip+0xda3d5],0x0        # e2800 <__ctype_b_loc@plt+0xdff30>
    842b:	add    QWORD PTR [rip+0x6602e],r8        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    8432:	pop    r12
    8434:	ret    
    8435:	nop    DWORD PTR [rax]
    8438:	cmp    eax,0xffffffff
    843b:	je     8466 <__ctype_b_loc@plt+0x5b96>
    843d:	sub    ebp,eax
    843f:	mov    eax,eax
    8441:	add    r12,rax
    8444:	mov    edx,0x7fffffff
    8449:	mov    rsi,r12
    844c:	mov    edi,ebx
    844e:	cmp    ebp,edx
    8450:	cmovbe rdx,rbp
    8454:	call   25c0 <write@plt>
    8459:	cmp    eax,ebp
    845b:	jne    8438 <__ctype_b_loc@plt+0x5b68>
    845d:	mov    r8d,DWORD PTR [rip+0xda39c]        # e2800 <__ctype_b_loc@plt+0xdff30>
    8464:	jmp    841f <__ctype_b_loc@plt+0x5b4f>
    8466:	call   7750 <__ctype_b_loc@plt+0x4e80>
    846b:	nop    DWORD PTR [rax+rax*1+0x0]
    8470:	push   r12
    8472:	xor    eax,eax
    8474:	mov    r12d,edi
    8477:	push   rbp
    8478:	lea    rbp,[rip+0x25b81]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    847f:	push   rbx
    8480:	mov    ebx,0x40000
    8485:	mov    DWORD PTR [rip+0x65fb1],0x0        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    848f:	jmp    84b0 <__ctype_b_loc@plt+0x5be0>
    8491:	nop    DWORD PTR [rax+0x0]
    8498:	cmp    eax,0xffffffff
    849b:	je     8515 <__ctype_b_loc@plt+0x5c45>
    849d:	add    eax,DWORD PTR [rip+0x65f9d]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    84a3:	mov    DWORD PTR [rip+0x65f97],eax        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    84a9:	cmp    eax,0x3ffff
    84ae:	ja     84e8 <__ctype_b_loc@plt+0x5c18>
    84b0:	mov    edx,ebx
    84b2:	mov    edi,DWORD PTR [rip+0x65fb0]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    84b8:	lea    rsi,[rbp+rax*1+0x0]
    84bd:	sub    edx,eax
    84bf:	call   4d60 <__ctype_b_loc@plt+0x2490>
    84c4:	test   eax,eax
    84c6:	jne    8498 <__ctype_b_loc@plt+0x5bc8>
    84c8:	mov    eax,DWORD PTR [rip+0x65f72]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    84ce:	test   eax,eax
    84d0:	jne    84e8 <__ctype_b_loc@plt+0x5c18>
    84d2:	test   r12d,r12d
    84d5:	je     8505 <__ctype_b_loc@plt+0x5c35>
    84d7:	pop    rbx
    84d8:	mov    eax,0xffffffff
    84dd:	pop    rbp
    84de:	pop    r12
    84e0:	ret    
    84e1:	nop    DWORD PTR [rax+0x0]
    84e8:	pop    rbx
    84e9:	pop    rbp
    84ea:	mov    DWORD PTR [rip+0x65f50],0x1        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    84f4:	add    QWORD PTR [rip+0x65f5d],rax        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    84fb:	pop    r12
    84fd:	movzx  eax,BYTE PTR [rip+0x25afc]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8504:	ret    
    8505:	call   83b0 <__ctype_b_loc@plt+0x5ae0>
    850a:	call   2520 <__errno_location@plt>
    850f:	mov    DWORD PTR [rax],0x0
    8515:	call   7690 <__ctype_b_loc@plt+0x4dc0>
    851a:	nop    WORD PTR [rax+rax*1+0x0]
    8520:	push   r13
    8522:	and    esi,0x2
    8525:	lea    r13,[rip+0x25ad4]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    852c:	push   r12
    852e:	mov    r12d,esi
    8531:	push   rbp
    8532:	lea    rbp,[rip+0x9707]        # 11c40 <__ctype_b_loc@plt+0xf370>
    8539:	push   rbx
    853a:	mov    rbx,rdi
    853d:	sub    rsp,0x8
    8541:	test   rdi,rdi
    8544:	je     857e <__ctype_b_loc@plt+0x5cae>
    8546:	cs nop WORD PTR [rax+rax*1+0x0]
    8550:	mov    eax,DWORD PTR [rip+0x65eee]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8556:	cmp    eax,DWORD PTR [rip+0x65ee4]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    855c:	jae    85a2 <__ctype_b_loc@plt+0x5cd2>
    855e:	lea    edx,[rax+0x1]
    8561:	movzx  eax,BYTE PTR [r13+rax*1+0x0]
    8567:	mov    DWORD PTR [rip+0x65ed7],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    856d:	test   r12d,r12d
    8570:	jne    85ae <__ctype_b_loc@plt+0x5cde>
    8572:	cmp    rbx,0xffffffffffffffff
    8576:	je     8590 <__ctype_b_loc@plt+0x5cc0>
    8578:	sub    rbx,0x1
    857c:	jne    8550 <__ctype_b_loc@plt+0x5c80>
    857e:	add    rsp,0x8
    8582:	pop    rbx
    8583:	pop    rbp
    8584:	pop    r12
    8586:	pop    r13
    8588:	ret    
    8589:	nop    DWORD PTR [rax+0x0]
    8590:	test   al,al
    8592:	je     857e <__ctype_b_loc@plt+0x5cae>
    8594:	mov    eax,DWORD PTR [rip+0x65eaa]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    859a:	cmp    eax,DWORD PTR [rip+0x65ea0]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    85a0:	jb     855e <__ctype_b_loc@plt+0x5c8e>
    85a2:	xor    edi,edi
    85a4:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    85a9:	test   r12d,r12d
    85ac:	je     8572 <__ctype_b_loc@plt+0x5ca2>
    85ae:	mov    rdx,QWORD PTR [rip+0xecd3]        # 17288 <__ctype_b_loc@plt+0x149b8>
    85b5:	mov    ecx,eax
    85b7:	xor    ecx,edx
    85b9:	shr    rdx,0x8
    85bd:	movzx  ecx,cl
    85c0:	xor    rdx,QWORD PTR [rbp+rcx*8+0x0]
    85c5:	mov    QWORD PTR [rip+0xecbc],rdx        # 17288 <__ctype_b_loc@plt+0x149b8>
    85cc:	jmp    8572 <__ctype_b_loc@plt+0x5ca2>
    85ce:	xchg   ax,ax
    85d0:	push   r15
    85d2:	push   r14
    85d4:	push   r13
    85d6:	push   r12
    85d8:	push   rbp
    85d9:	push   rbx
    85da:	mov    ebx,edi
    85dc:	sub    rsp,0x28
    85e0:	mov    esi,DWORD PTR [rip+0x66822]        # 6ee08 <__ctype_b_loc@plt+0x6c538>
    85e6:	mov    ecx,DWORD PTR [rip+0x65e54]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    85ec:	mov    rax,QWORD PTR fs:0x28
    85f5:	mov    QWORD PTR [rsp+0x18],rax
    85fa:	xor    eax,eax
    85fc:	mov    eax,DWORD PTR [rip+0x65e42]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8602:	test   esi,esi
    8604:	je     8614 <__ctype_b_loc@plt+0x5d44>
    8606:	mov    edx,DWORD PTR [rip+0x66804]        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    860c:	test   edx,edx
    860e:	jne    8760 <__ctype_b_loc@plt+0x5e90>
    8614:	cmp    eax,ecx
    8616:	jae    8af0 <__ctype_b_loc@plt+0x6220>
    861c:	lea    edx,[rax+0x1]
    861f:	lea    rsi,[rip+0x259da]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8626:	mov    DWORD PTR [rip+0x65e18],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    862c:	movzx  eax,BYTE PTR [rsi+rax*1]
    8630:	mov    BYTE PTR [rsp+0xe],al
    8634:	test   al,al
    8636:	jne    8730 <__ctype_b_loc@plt+0x5e60>
    863c:	cmp    ecx,edx
    863e:	jbe    8e40 <__ctype_b_loc@plt+0x6570>
    8644:	lea    eax,[rdx+0x1]
    8647:	mov    DWORD PTR [rip+0x65df7],eax        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    864d:	lea    rax,[rip+0x259ac]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8654:	movzx  ebp,BYTE PTR [rax+rdx*1]
    8658:	mov    eax,ebp
    865a:	xor    r12d,r12d
    865d:	mov    BYTE PTR [rsp+0xf],al
    8661:	mov    eax,DWORD PTR [rip+0x65e05]        # 6e46c <__ctype_b_loc@plt+0x6bb9c>
    8667:	mov    DWORD PTR [rip+0xec23],0xffffffff        # 17294 <__ctype_b_loc@plt+0x149c4>
    8671:	mov    QWORD PTR [rip+0x65dd4],0x0        # 6e450 <__ctype_b_loc@plt+0x6bb80>
    867c:	add    eax,0x1
    867f:	cmp    WORD PTR [rsp+0xe],0x8b1f
    8686:	mov    DWORD PTR [rip+0x65de0],eax        # 6e46c <__ctype_b_loc@plt+0x6bb9c>
    868c:	mov    DWORD PTR [rip+0x65db2],0x0        # 6e448 <__ctype_b_loc@plt+0x6bb78>
    8696:	je     87b0 <__ctype_b_loc@plt+0x5ee0>
    869c:	cmp    WORD PTR [rsp+0xe],0x9e1f
    86a3:	je     87b0 <__ctype_b_loc@plt+0x5ee0>
    86a9:	cmp    WORD PTR [rsp+0xe],0x4b50
    86b0:	jne    86bf <__ctype_b_loc@plt+0x5def>
    86b2:	cmp    DWORD PTR [rip+0x65d8b],0x2        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    86b9:	je     91c0 <__ctype_b_loc@plt+0x68f0>
    86bf:	cmp    WORD PTR [rsp+0xe],0x1e1f
    86c6:	je     8d60 <__ctype_b_loc@plt+0x6490>
    86cc:	cmp    WORD PTR [rsp+0xe],0x9d1f
    86d3:	jne    90a8 <__ctype_b_loc@plt+0x67d8>
    86d9:	lea    rax,[rip+0xcf0]        # 93d0 <__ctype_b_loc@plt+0x6b00>
    86e0:	mov    r8d,0x1
    86e6:	mov    DWORD PTR [rip+0xeba4],0x1        # 17294 <__ctype_b_loc@plt+0x149c4>
    86f0:	mov    QWORD PTR [rip+0xed19],rax        # 17410 <__ctype_b_loc@plt+0x14b40>
    86f7:	mov    DWORD PTR [rip+0x65d47],0x1        # 6e448 <__ctype_b_loc@plt+0x6bb78>
    8701:	nop    DWORD PTR [rax+0x0]
    8708:	mov    rax,QWORD PTR [rsp+0x18]
    870d:	sub    rax,QWORD PTR fs:0x28
    8716:	jne    93bb <__ctype_b_loc@plt+0x6aeb>
    871c:	add    rsp,0x28
    8720:	mov    eax,r8d
    8723:	pop    rbx
    8724:	pop    rbp
    8725:	pop    r12
    8727:	pop    r13
    8729:	pop    r14
    872b:	pop    r15
    872d:	ret    
    872e:	xchg   ax,ax
    8730:	cmp    ecx,edx
    8732:	jbe    8e58 <__ctype_b_loc@plt+0x6588>
    8738:	lea    eax,[rdx+0x1]
    873b:	mov    DWORD PTR [rip+0x65d03],eax        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8741:	lea    rax,[rip+0x258b8]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8748:	movzx  eax,BYTE PTR [rax+rdx*1]
    874c:	xor    ebp,ebp
    874e:	xor    r12d,r12d
    8751:	jmp    865d <__ctype_b_loc@plt+0x5d8d>
    8756:	cs nop WORD PTR [rax+rax*1+0x0]
    8760:	cmp    eax,ecx
    8762:	jae    8d88 <__ctype_b_loc@plt+0x64b8>
    8768:	lea    edx,[rax+0x1]
    876b:	lea    rsi,[rip+0x2588e]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8772:	movzx  r12d,BYTE PTR [rsi+rax*1]
    8777:	mov    DWORD PTR [rip+0x65cc7],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    877d:	mov    eax,r12d
    8780:	mov    BYTE PTR [rsp+0xe],al
    8784:	cmp    ecx,edx
    8786:	jbe    8f58 <__ctype_b_loc@plt+0x6688>
    878c:	lea    eax,[rdx+0x1]
    878f:	mov    DWORD PTR [rip+0x65caf],eax        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8795:	lea    rax,[rip+0x25864]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    879c:	movzx  ebp,BYTE PTR [rax+rdx*1]
    87a0:	mov    eax,ebp
    87a2:	jmp    865d <__ctype_b_loc@plt+0x5d8d>
    87a7:	nop    WORD PTR [rax+rax*1+0x0]
    87b0:	mov    eax,DWORD PTR [rip+0x65c8e]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    87b6:	cmp    eax,DWORD PTR [rip+0x65c84]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    87bc:	jae    8ae0 <__ctype_b_loc@plt+0x6210>
    87c2:	lea    edx,[rax+0x1]
    87c5:	mov    DWORD PTR [rip+0x65c79],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    87cb:	lea    rdx,[rip+0x2582e]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    87d2:	movzx  eax,BYTE PTR [rdx+rax*1]
    87d6:	mov    DWORD PTR [rip+0xeab8],eax        # 17294 <__ctype_b_loc@plt+0x149c4>
    87dc:	cmp    eax,0x8
    87df:	jne    933d <__ctype_b_loc@plt+0x6a6d>
    87e5:	lea    rax,[rip+0x31b4]        # b9a0 <__ctype_b_loc@plt+0x90d0>
    87ec:	mov    QWORD PTR [rip+0xec1d],rax        # 17410 <__ctype_b_loc@plt+0x14b40>
    87f3:	mov    eax,DWORD PTR [rip+0x65c4b]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    87f9:	cmp    eax,DWORD PTR [rip+0x65c41]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    87ff:	jae    8b10 <__ctype_b_loc@plt+0x6240>
    8805:	lea    edx,[rax+0x1]
    8808:	mov    DWORD PTR [rip+0x65c36],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    880e:	lea    rdx,[rip+0x257eb]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8815:	movzx  ebx,BYTE PTR [rdx+rax*1]
    8819:	test   bl,0x20
    881c:	jne    937b <__ctype_b_loc@plt+0x6aab>
    8822:	test   bl,0xc0
    8825:	jne    8b20 <__ctype_b_loc@plt+0x6250>
    882b:	mov    eax,DWORD PTR [rip+0x65c13]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8831:	mov    edx,DWORD PTR [rip+0x65c09]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    8837:	cmp    eax,edx
    8839:	jae    8c50 <__ctype_b_loc@plt+0x6380>
    883f:	lea    ecx,[rax+0x1]
    8842:	lea    rsi,[rip+0x257b7]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8849:	mov    DWORD PTR [rip+0x65bf5],ecx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    884f:	movzx  r13d,BYTE PTR [rsi+rax*1]
    8854:	cmp    ecx,edx
    8856:	jae    8c30 <__ctype_b_loc@plt+0x6360>
    885c:	lea    esi,[rcx+0x1]
    885f:	lea    rax,[rip+0x2579a]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8866:	movzx  eax,BYTE PTR [rax+rcx*1]
    886a:	mov    DWORD PTR [rip+0x65bd4],esi        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8870:	shl    rax,0x8
    8874:	or     r13,rax
    8877:	cmp    esi,edx
    8879:	jae    8c08 <__ctype_b_loc@plt+0x6338>
    887f:	lea    ecx,[rsi+0x1]
    8882:	lea    rax,[rip+0x25777]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8889:	movzx  r12d,BYTE PTR [rax+rsi*1]
    888e:	mov    DWORD PTR [rip+0x65bb0],ecx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8894:	shl    r12,0x10
    8898:	or     r13,r12
    889b:	cmp    edx,ecx
    889d:	jbe    8bf0 <__ctype_b_loc@plt+0x6320>
    88a3:	lea    eax,[rcx+0x1]
    88a6:	mov    DWORD PTR [rip+0x65b98],eax        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    88ac:	lea    rax,[rip+0x2574d]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    88b3:	movzx  eax,BYTE PTR [rax+rcx*1]
    88b7:	shl    rax,0x18
    88bb:	or     r13,rax
    88be:	je     88ce <__ctype_b_loc@plt+0x5ffe>
    88c0:	mov    eax,DWORD PTR [rip+0xe9da]        # 172a0 <__ctype_b_loc@plt+0x149d0>
    88c6:	test   eax,eax
    88c8:	je     8d38 <__ctype_b_loc@plt+0x6468>
    88ce:	mov    eax,DWORD PTR [rip+0x65b70]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    88d4:	mov    ecx,DWORD PTR [rip+0x65b66]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    88da:	cmp    eax,ecx
    88dc:	jae    8bd0 <__ctype_b_loc@plt+0x6300>
    88e2:	lea    edx,[rax+0x1]
    88e5:	lea    rsi,[rip+0x25714]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    88ec:	mov    DWORD PTR [rip+0x65b52],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    88f2:	movzx  eax,BYTE PTR [rsi+rax*1]
    88f6:	mov    BYTE PTR [rsp+0x16],al
    88fa:	cmp    edx,ecx
    88fc:	jae    8bc0 <__ctype_b_loc@plt+0x62f0>
    8902:	lea    eax,[rdx+0x1]
    8905:	mov    DWORD PTR [rip+0x65b39],eax        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    890b:	lea    rax,[rip+0x256ee]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8912:	movzx  eax,BYTE PTR [rax+rdx*1]
    8916:	mov    r12d,ebx
    8919:	mov    BYTE PTR [rsp+0x17],al
    891d:	and    r12d,0x2
    8921:	jne    8b70 <__ctype_b_loc@plt+0x62a0>
    8927:	test   bl,0x4
    892a:	je     899e <__ctype_b_loc@plt+0x60ce>
    892c:	mov    eax,DWORD PTR [rip+0x65b12]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8932:	mov    ecx,DWORD PTR [rip+0x65b08]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    8938:	cmp    eax,ecx
    893a:	jae    8f20 <__ctype_b_loc@plt+0x6650>
    8940:	lea    edx,[rax+0x1]
    8943:	lea    rsi,[rip+0x256b6]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    894a:	mov    DWORD PTR [rip+0x65af4],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8950:	movzx  r15d,BYTE PTR [rsi+rax*1]
    8955:	cmp    edx,ecx
    8957:	jae    8f08 <__ctype_b_loc@plt+0x6638>
    895d:	lea    eax,[rdx+0x1]
    8960:	mov    DWORD PTR [rip+0x65ade],eax        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8966:	lea    rax,[rip+0x25693]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    896d:	movzx  r14d,BYTE PTR [rax+rdx*1]
    8972:	mov    r13d,r14d
    8975:	mov    eax,DWORD PTR [rip+0x6647d]        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    897b:	shl    r13d,0x8
    897f:	or     r13d,r15d
    8982:	test   eax,eax
    8984:	jne    8e98 <__ctype_b_loc@plt+0x65c8>
    898a:	test   r12b,r12b
    898d:	jne    8eca <__ctype_b_loc@plt+0x65fa>
    8993:	movzx  esi,bl
    8996:	mov    edi,r13d
    8999:	call   8520 <__ctype_b_loc@plt+0x5c50>
    899e:	test   bl,0x8
    89a1:	je     8a43 <__ctype_b_loc@plt+0x6173>
    89a7:	mov    r13d,DWORD PTR [rip+0xe8ee]        # 1729c <__ctype_b_loc@plt+0x149cc>
    89ae:	test   r13d,r13d
    89b1:	jne    8a34 <__ctype_b_loc@plt+0x6164>
    89b7:	mov    r11d,DWORD PTR [rip+0x66452]        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    89be:	test   r11d,r11d
    89c1:	jne    8a28 <__ctype_b_loc@plt+0x6158>
    89c3:	cmp    DWORD PTR [rip+0x65aa2],0x1        # 6e46c <__ctype_b_loc@plt+0x6bb9c>
    89ca:	jg     8a34 <__ctype_b_loc@plt+0x6164>
    89cc:	movzx  eax,BYTE PTR [rip+0x65aad]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    89d3:	lea    r14,[rip+0x65aa6]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    89da:	cmp    al,0x2f
    89dc:	jne    89ed <__ctype_b_loc@plt+0x611d>
    89de:	xchg   ax,ax
    89e0:	movzx  eax,BYTE PTR [r14+0x1]
    89e5:	add    r14,0x1
    89e9:	cmp    al,0x2f
    89eb:	je     89e0 <__ctype_b_loc@plt+0x6110>
    89ed:	test   al,al
    89ef:	je     8f80 <__ctype_b_loc@plt+0x66b0>
    89f5:	mov    rdx,r14
    89f8:	xor    ecx,ecx
    89fa:	jmp    8a19 <__ctype_b_loc@plt+0x6149>
    89fc:	nop    DWORD PTR [rax+0x0]
    8a00:	test   cl,cl
    8a02:	je     8a09 <__ctype_b_loc@plt+0x6139>
    8a04:	mov    r14,rdx
    8a07:	xor    ecx,ecx
    8a09:	movzx  eax,BYTE PTR [rdx+0x1]
    8a0d:	add    rdx,0x1
    8a11:	test   al,al
    8a13:	je     8f80 <__ctype_b_loc@plt+0x66b0>
    8a19:	cmp    al,0x2f
    8a1b:	jne    8a00 <__ctype_b_loc@plt+0x6130>
    8a1d:	mov    ecx,0x1
    8a22:	jmp    8a09 <__ctype_b_loc@plt+0x6139>
    8a24:	nop    DWORD PTR [rax+0x0]
    8a28:	mov    r10d,DWORD PTR [rip+0x663d1]        # 6ee00 <__ctype_b_loc@plt+0x6c530>
    8a2f:	test   r10d,r10d
    8a32:	jne    89c3 <__ctype_b_loc@plt+0x60f3>
    8a34:	movzx  esi,bl
    8a37:	mov    rdi,0xffffffffffffffff
    8a3e:	call   8520 <__ctype_b_loc@plt+0x5c50>
    8a43:	test   bl,0x10
    8a46:	jne    8d20 <__ctype_b_loc@plt+0x6450>
    8a4c:	test   r12b,r12b
    8a4f:	jne    8c70 <__ctype_b_loc@plt+0x63a0>
    8a55:	cmp    DWORD PTR [rip+0x65a10],0x1        # 6e46c <__ctype_b_loc@plt+0x6bb9c>
    8a5c:	mov    r8d,DWORD PTR [rip+0xe831]        # 17294 <__ctype_b_loc@plt+0x149c4>
    8a63:	je     8ac0 <__ctype_b_loc@plt+0x61f0>
    8a65:	test   r8d,r8d
    8a68:	jns    8708 <__ctype_b_loc@plt+0x5e38>
    8a6e:	cmp    BYTE PTR [rsp+0xe],0x0
    8a73:	jne    8a86 <__ctype_b_loc@plt+0x61b6>
    8a75:	test   ebp,ebp
    8a77:	je     8e10 <__ctype_b_loc@plt+0x6540>
    8a7d:	cmp    ebp,0xffffffff
    8a80:	je     8dd0 <__ctype_b_loc@plt+0x6500>
    8a86:	mov    edx,DWORD PTR [rip+0x6638c]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    8a8c:	test   edx,edx
    8a8e:	je     8e68 <__ctype_b_loc@plt+0x6598>
    8a94:	mov    eax,DWORD PTR [rip+0x65f26]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    8a9a:	mov    r8d,0xfffffffe
    8aa0:	test   eax,eax
    8aa2:	jne    8708 <__ctype_b_loc@plt+0x5e38>
    8aa8:	mov    DWORD PTR [rip+0x65f0e],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    8ab2:	jmp    8708 <__ctype_b_loc@plt+0x5e38>
    8ab7:	nop    WORD PTR [rax+rax*1+0x0]
    8ac0:	mov    eax,DWORD PTR [rip+0x6597e]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8ac6:	add    eax,0x8
    8ac9:	mov    QWORD PTR [rip+0x65980],rax        # 6e450 <__ctype_b_loc@plt+0x6bb80>
    8ad0:	test   r8d,r8d
    8ad3:	jns    8708 <__ctype_b_loc@plt+0x5e38>
    8ad9:	jmp    9189 <__ctype_b_loc@plt+0x68b9>
    8ade:	xchg   ax,ax
    8ae0:	xor    edi,edi
    8ae2:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8ae7:	jmp    87d6 <__ctype_b_loc@plt+0x5f06>
    8aec:	nop    DWORD PTR [rax+0x0]
    8af0:	xor    edi,edi
    8af2:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8af7:	mov    edx,DWORD PTR [rip+0x65947]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8afd:	mov    ecx,DWORD PTR [rip+0x6593d]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    8b03:	jmp    8630 <__ctype_b_loc@plt+0x5d60>
    8b08:	nop    DWORD PTR [rax+rax*1+0x0]
    8b10:	xor    edi,edi
    8b12:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8b17:	mov    ebx,eax
    8b19:	jmp    8819 <__ctype_b_loc@plt+0x5f49>
    8b1e:	xchg   ax,ax
    8b20:	mov    rax,QWORD PTR [rip+0xe4c1]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    8b27:	mov    rdx,QWORD PTR [rip+0x6630a]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    8b2e:	movzx  r8d,bl
    8b32:	lea    rcx,[rip+0x65ea7]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    8b39:	lea    rsi,[rip+0x9a18]        # 12558 <__ctype_b_loc@plt+0xfc88>
    8b40:	mov    rdi,QWORD PTR [rax]
    8b43:	xor    eax,eax
    8b45:	call   70d0 <__ctype_b_loc@plt+0x4800>
    8b4a:	cmp    DWORD PTR [rip+0x662b7],0x1        # 6ee08 <__ctype_b_loc@plt+0x6c538>
    8b51:	mov    DWORD PTR [rip+0x65e65],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    8b5b:	jg     882b <__ctype_b_loc@plt+0x5f5b>
    8b61:	mov    r8d,0xffffffff
    8b67:	jmp    8708 <__ctype_b_loc@plt+0x5e38>
    8b6c:	nop    DWORD PTR [rax+0x0]
    8b70:	mov    BYTE PTR [rsp+0x10],0x8
    8b75:	mov    eax,0xffffffff
    8b7a:	lea    rdx,[rsp+0xe]
    8b7f:	lea    rdi,[rip+0x90ba]        # 11c40 <__ctype_b_loc@plt+0xf370>
    8b86:	mov    BYTE PTR [rsp+0x11],bl
    8b8a:	lea    rsi,[rsp+0x18]
    8b8f:	mov    DWORD PTR [rsp+0x12],r13d
    8b94:	nop    DWORD PTR [rax+0x0]
    8b98:	movzx  ecx,BYTE PTR [rdx]
    8b9b:	add    rdx,0x1
    8b9f:	xor    ecx,eax
    8ba1:	shr    rax,0x8
    8ba5:	movzx  ecx,cl
    8ba8:	xor    rax,QWORD PTR [rdi+rcx*8]
    8bac:	cmp    rdx,rsi
    8baf:	jne    8b98 <__ctype_b_loc@plt+0x62c8>
    8bb1:	mov    QWORD PTR [rip+0xe6d0],rax        # 17288 <__ctype_b_loc@plt+0x149b8>
    8bb8:	jmp    8927 <__ctype_b_loc@plt+0x6057>
    8bbd:	nop    DWORD PTR [rax]
    8bc0:	xor    edi,edi
    8bc2:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8bc7:	jmp    8916 <__ctype_b_loc@plt+0x6046>
    8bcc:	nop    DWORD PTR [rax+0x0]
    8bd0:	xor    edi,edi
    8bd2:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8bd7:	mov    edx,DWORD PTR [rip+0x65867]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8bdd:	mov    ecx,DWORD PTR [rip+0x6585d]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    8be3:	jmp    88f6 <__ctype_b_loc@plt+0x6026>
    8be8:	nop    DWORD PTR [rax+rax*1+0x0]
    8bf0:	xor    edi,edi
    8bf2:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8bf7:	cdqe   
    8bf9:	shl    rax,0x18
    8bfd:	jmp    88bb <__ctype_b_loc@plt+0x5feb>
    8c02:	nop    WORD PTR [rax+rax*1+0x0]
    8c08:	xor    edi,edi
    8c0a:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8c0f:	mov    ecx,DWORD PTR [rip+0x6582f]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8c15:	mov    edx,DWORD PTR [rip+0x65825]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    8c1b:	movsxd r12,eax
    8c1e:	shl    r12,0x10
    8c22:	jmp    8898 <__ctype_b_loc@plt+0x5fc8>
    8c27:	nop    WORD PTR [rax+rax*1+0x0]
    8c30:	xor    edi,edi
    8c32:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8c37:	mov    esi,DWORD PTR [rip+0x65807]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8c3d:	mov    edx,DWORD PTR [rip+0x657fd]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    8c43:	cdqe   
    8c45:	shl    rax,0x8
    8c49:	jmp    8874 <__ctype_b_loc@plt+0x5fa4>
    8c4e:	xchg   ax,ax
    8c50:	xor    edi,edi
    8c52:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8c57:	mov    ecx,DWORD PTR [rip+0x657e7]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8c5d:	mov    edx,DWORD PTR [rip+0x657dd]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    8c63:	movsxd r13,eax
    8c66:	jmp    8854 <__ctype_b_loc@plt+0x5f84>
    8c6b:	nop    DWORD PTR [rax+rax*1+0x0]
    8c70:	mov    eax,DWORD PTR [rip+0x657ce]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8c76:	mov    ecx,DWORD PTR [rip+0x657c4]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    8c7c:	mov    ebx,0xffffffff
    8c81:	xor    rbx,QWORD PTR [rip+0xe600]        # 17288 <__ctype_b_loc@plt+0x149b8>
    8c88:	movzx  ebx,bx
    8c8b:	cmp    eax,ecx
    8c8d:	jae    8db0 <__ctype_b_loc@plt+0x64e0>
    8c93:	lea    edx,[rax+0x1]
    8c96:	lea    rsi,[rip+0x25363]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8c9d:	mov    DWORD PTR [rip+0x657a1],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8ca3:	movzx  r12d,BYTE PTR [rsi+rax*1]
    8ca8:	cmp    edx,ecx
    8caa:	jae    8f70 <__ctype_b_loc@plt+0x66a0>
    8cb0:	lea    eax,[rdx+0x1]
    8cb3:	mov    DWORD PTR [rip+0x6578b],eax        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8cb9:	lea    rax,[rip+0x25340]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8cc0:	movzx  eax,BYTE PTR [rax+rdx*1]
    8cc4:	shl    eax,0x8
    8cc7:	or     eax,r12d
    8cca:	cmp    ebx,eax
    8ccc:	je     8a55 <__ctype_b_loc@plt+0x6185>
    8cd2:	mov    r8d,eax
    8cd5:	mov    rax,QWORD PTR [rip+0xe30c]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    8cdc:	mov    rdx,QWORD PTR [rip+0x66155]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    8ce3:	mov    r9d,ebx
    8ce6:	lea    rcx,[rip+0x65cf3]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    8ced:	lea    rsi,[rip+0x991c]        # 12610 <__ctype_b_loc@plt+0xfd40>
    8cf4:	mov    rdi,QWORD PTR [rax]
    8cf7:	xor    eax,eax
    8cf9:	call   70d0 <__ctype_b_loc@plt+0x4800>
    8cfe:	cmp    DWORD PTR [rip+0x66103],0x1        # 6ee08 <__ctype_b_loc@plt+0x6c538>
    8d05:	mov    DWORD PTR [rip+0x65cb1],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    8d0f:	jg     8a55 <__ctype_b_loc@plt+0x6185>
    8d15:	jmp    8b61 <__ctype_b_loc@plt+0x6291>
    8d1a:	nop    WORD PTR [rax+rax*1+0x0]
    8d20:	movzx  esi,bl
    8d23:	mov    rdi,0xffffffffffffffff
    8d2a:	call   8520 <__ctype_b_loc@plt+0x5c50>
    8d2f:	jmp    8a4c <__ctype_b_loc@plt+0x617c>
    8d34:	nop    DWORD PTR [rax+0x0]
    8d38:	test   r13,r13
    8d3b:	js     8fe0 <__ctype_b_loc@plt+0x6710>
    8d41:	mov    QWORD PTR [rip+0x65bc8],r13        # 6e910 <__ctype_b_loc@plt+0x6c040>
    8d48:	mov    QWORD PTR [rip+0x65bc5],0x0        # 6e918 <__ctype_b_loc@plt+0x6c048>
    8d53:	jmp    88ce <__ctype_b_loc@plt+0x5ffe>
    8d58:	nop    DWORD PTR [rax+rax*1+0x0]
    8d60:	lea    rax,[rip+0x2699]        # b400 <__ctype_b_loc@plt+0x8b30>
    8d67:	mov    r8d,0x2
    8d6d:	mov    DWORD PTR [rip+0xe51d],0x2        # 17294 <__ctype_b_loc@plt+0x149c4>
    8d77:	mov    QWORD PTR [rip+0xe692],rax        # 17410 <__ctype_b_loc@plt+0x14b40>
    8d7e:	jmp    8708 <__ctype_b_loc@plt+0x5e38>
    8d83:	nop    DWORD PTR [rax+rax*1+0x0]
    8d88:	mov    edi,0x1
    8d8d:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8d92:	mov    edx,DWORD PTR [rip+0x656ac]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8d98:	mov    ecx,DWORD PTR [rip+0x656a2]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    8d9e:	mov    r12d,eax
    8da1:	jmp    8780 <__ctype_b_loc@plt+0x5eb0>
    8da6:	cs nop WORD PTR [rax+rax*1+0x0]
    8db0:	xor    edi,edi
    8db2:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8db7:	mov    edx,DWORD PTR [rip+0x65687]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8dbd:	mov    ecx,DWORD PTR [rip+0x6567d]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    8dc3:	mov    r12d,eax
    8dc6:	jmp    8ca8 <__ctype_b_loc@plt+0x63d8>
    8dcb:	nop    DWORD PTR [rax+rax*1+0x0]
    8dd0:	mov    edi,DWORD PTR [rip+0x66022]        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    8dd6:	test   edi,edi
    8dd8:	je     8dfc <__ctype_b_loc@plt+0x652c>
    8dda:	mov    esi,DWORD PTR [rip+0x66038]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    8de0:	test   esi,esi
    8de2:	je     92b0 <__ctype_b_loc@plt+0x69e0>
    8de8:	mov    ecx,DWORD PTR [rip+0x65bd2]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    8dee:	test   ecx,ecx
    8df0:	jne    8dfc <__ctype_b_loc@plt+0x652c>
    8df2:	mov    DWORD PTR [rip+0x65bc4],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    8dfc:	mov    r8d,0xfffffffd
    8e02:	jmp    8708 <__ctype_b_loc@plt+0x5e38>
    8e07:	nop    WORD PTR [rax+rax*1+0x0]
    8e10:	lea    rbx,[rip+0x251e9]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8e17:	mov    eax,DWORD PTR [rip+0x65627]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8e1d:	cmp    eax,DWORD PTR [rip+0x6561d]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    8e23:	jae    8f40 <__ctype_b_loc@plt+0x6670>
    8e29:	lea    edx,[rax+0x1]
    8e2c:	movzx  ebp,BYTE PTR [rbx+rax*1]
    8e30:	mov    DWORD PTR [rip+0x6560e],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8e36:	test   ebp,ebp
    8e38:	jne    8a7d <__ctype_b_loc@plt+0x61ad>
    8e3e:	jmp    8e17 <__ctype_b_loc@plt+0x6547>
    8e40:	mov    edi,0x1
    8e45:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8e4a:	mov    ebp,eax
    8e4c:	jmp    865a <__ctype_b_loc@plt+0x5d8a>
    8e51:	nop    DWORD PTR [rax+0x0]
    8e58:	xor    edi,edi
    8e5a:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8e5f:	jmp    874c <__ctype_b_loc@plt+0x5e7c>
    8e64:	nop    DWORD PTR [rax+0x0]
    8e68:	mov    rax,QWORD PTR [rip+0xe179]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    8e6f:	mov    rdx,QWORD PTR [rip+0x65fc2]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    8e76:	lea    rcx,[rip+0x65b63]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    8e7d:	lea    rsi,[rip+0x988c]        # 12710 <__ctype_b_loc@plt+0xfe40>
    8e84:	mov    rdi,QWORD PTR [rax]
    8e87:	xor    eax,eax
    8e89:	call   70d0 <__ctype_b_loc@plt+0x4800>
    8e8e:	jmp    8a94 <__ctype_b_loc@plt+0x61c4>
    8e93:	nop    DWORD PTR [rax+rax*1+0x0]
    8e98:	mov    rax,QWORD PTR [rip+0xe149]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    8e9f:	mov    rdx,QWORD PTR [rip+0x65f92]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    8ea6:	mov    r8d,r13d
    8ea9:	lea    rcx,[rip+0x65b30]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    8eb0:	lea    rsi,[rip+0x9701]        # 125b8 <__ctype_b_loc@plt+0xfce8>
    8eb7:	mov    rdi,QWORD PTR [rax]
    8eba:	xor    eax,eax
    8ebc:	call   70d0 <__ctype_b_loc@plt+0x4800>
    8ec1:	test   r12b,r12b
    8ec4:	je     8993 <__ctype_b_loc@plt+0x60c3>
    8eca:	mov    rax,QWORD PTR [rip+0xe3b7]        # 17288 <__ctype_b_loc@plt+0x149b8>
    8ed1:	lea    rdx,[rip+0x8d68]        # 11c40 <__ctype_b_loc@plt+0xf370>
    8ed8:	xor    r15d,eax
    8edb:	shr    rax,0x8
    8edf:	movzx  r15d,r15b
    8ee3:	xor    rax,QWORD PTR [rdx+r15*8]
    8ee7:	xor    r14d,eax
    8eea:	shr    rax,0x8
    8eee:	movzx  r14d,r14b
    8ef2:	xor    rax,QWORD PTR [rdx+r14*8]
    8ef6:	mov    QWORD PTR [rip+0xe38b],rax        # 17288 <__ctype_b_loc@plt+0x149b8>
    8efd:	jmp    8993 <__ctype_b_loc@plt+0x60c3>
    8f02:	nop    WORD PTR [rax+rax*1+0x0]
    8f08:	xor    edi,edi
    8f0a:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8f0f:	movzx  r14d,al
    8f13:	jmp    8972 <__ctype_b_loc@plt+0x60a2>
    8f18:	nop    DWORD PTR [rax+rax*1+0x0]
    8f20:	xor    edi,edi
    8f22:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8f27:	mov    edx,DWORD PTR [rip+0x65517]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8f2d:	mov    ecx,DWORD PTR [rip+0x6550d]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    8f33:	movzx  r15d,al
    8f37:	jmp    8955 <__ctype_b_loc@plt+0x6085>
    8f3c:	nop    DWORD PTR [rax+0x0]
    8f40:	mov    edi,0x1
    8f45:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8f4a:	mov    ebp,eax
    8f4c:	jmp    8e36 <__ctype_b_loc@plt+0x6566>
    8f51:	nop    DWORD PTR [rax+0x0]
    8f58:	mov    edi,0x1
    8f5d:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8f62:	mov    ebp,eax
    8f64:	jmp    865d <__ctype_b_loc@plt+0x5d8d>
    8f69:	nop    DWORD PTR [rax+0x0]
    8f70:	xor    edi,edi
    8f72:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8f77:	shl    eax,0x8
    8f7a:	jmp    8cc7 <__ctype_b_loc@plt+0x63f7>
    8f7f:	nop
    8f80:	mov    r13,r14
    8f83:	lea    rcx,[rip+0x25076]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8f8a:	lea    r15,[rip+0x658ef]        # 6e880 <__ctype_b_loc@plt+0x6bfb0>
    8f91:	jmp    8fba <__ctype_b_loc@plt+0x66ea>
    8f93:	nop    DWORD PTR [rax+rax*1+0x0]
    8f98:	lea    edx,[rax+0x1]
    8f9b:	movzx  eax,BYTE PTR [rcx+rax*1]
    8f9f:	mov    DWORD PTR [rip+0x6549f],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8fa5:	mov    BYTE PTR [r13+0x0],al
    8fa9:	add    r13,0x1
    8fad:	test   al,al
    8faf:	je     9028 <__ctype_b_loc@plt+0x6758>
    8fb1:	cmp    r13,r15
    8fb4:	jae    93af <__ctype_b_loc@plt+0x6adf>
    8fba:	mov    eax,DWORD PTR [rip+0x65484]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    8fc0:	cmp    eax,DWORD PTR [rip+0x6547a]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    8fc6:	jb     8f98 <__ctype_b_loc@plt+0x66c8>
    8fc8:	xor    edi,edi
    8fca:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    8fcf:	lea    rcx,[rip+0x2502a]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    8fd6:	jmp    8fa5 <__ctype_b_loc@plt+0x66d5>
    8fd8:	nop    DWORD PTR [rax+rax*1+0x0]
    8fe0:	mov    eax,DWORD PTR [rip+0x65e32]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    8fe6:	test   eax,eax
    8fe8:	je     92e0 <__ctype_b_loc@plt+0x6a10>
    8fee:	mov    eax,DWORD PTR [rip+0x659cc]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    8ff4:	test   eax,eax
    8ff6:	jne    9002 <__ctype_b_loc@plt+0x6732>
    8ff8:	mov    DWORD PTR [rip+0x659be],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    9002:	movabs rax,0x7fffffffffffffff
    900c:	mov    QWORD PTR [rip+0x65901],0x3b9ac9ff        # 6e918 <__ctype_b_loc@plt+0x6c048>
    9017:	mov    QWORD PTR [rip+0x658f2],rax        # 6e910 <__ctype_b_loc@plt+0x6c040>
    901e:	jmp    88ce <__ctype_b_loc@plt+0x5ffe>
    9023:	nop    DWORD PTR [rax+rax*1+0x0]
    9028:	test   r12b,r12b
    902b:	jne    9310 <__ctype_b_loc@plt+0x6a40>
    9031:	movzx  eax,BYTE PTR [r14]
    9035:	mov    r13,r14
    9038:	cmp    al,0x2f
    903a:	jne    904d <__ctype_b_loc@plt+0x677d>
    903c:	nop    DWORD PTR [rax+0x0]
    9040:	movzx  eax,BYTE PTR [r13+0x1]
    9045:	add    r13,0x1
    9049:	cmp    al,0x2f
    904b:	je     9040 <__ctype_b_loc@plt+0x6770>
    904d:	test   al,al
    904f:	je     9080 <__ctype_b_loc@plt+0x67b0>
    9051:	mov    rdx,r13
    9054:	xor    ecx,ecx
    9056:	jmp    9075 <__ctype_b_loc@plt+0x67a5>
    9058:	nop    DWORD PTR [rax+rax*1+0x0]
    9060:	test   cl,cl
    9062:	je     9069 <__ctype_b_loc@plt+0x6799>
    9064:	mov    r13,rdx
    9067:	xor    ecx,ecx
    9069:	movzx  eax,BYTE PTR [rdx+0x1]
    906d:	add    rdx,0x1
    9071:	test   al,al
    9073:	je     9080 <__ctype_b_loc@plt+0x67b0>
    9075:	cmp    al,0x2f
    9077:	jne    9060 <__ctype_b_loc@plt+0x6790>
    9079:	mov    ecx,0x1
    907e:	jmp    9069 <__ctype_b_loc@plt+0x6799>
    9080:	mov    rdi,r13
    9083:	call   25e0 <strlen@plt>
    9088:	mov    ecx,0x400
    908d:	mov    rsi,r13
    9090:	mov    rdi,r14
    9093:	lea    rdx,[rax+0x1]
    9097:	call   2700 <__memmove_chk@plt>
    909c:	jmp    8a43 <__ctype_b_loc@plt+0x6173>
    90a1:	nop    DWORD PTR [rax+0x0]
    90a8:	cmp    WORD PTR [rsp+0xe],0xa01f
    90af:	je     9280 <__ctype_b_loc@plt+0x69b0>
    90b5:	mov    r9d,DWORD PTR [rip+0x65d4c]        # 6ee08 <__ctype_b_loc@plt+0x6c538>
    90bc:	test   r9d,r9d
    90bf:	je     9180 <__ctype_b_loc@plt+0x68b0>
    90c5:	mov    r8d,DWORD PTR [rip+0x65d44]        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    90cc:	test   r8d,r8d
    90cf:	je     9180 <__ctype_b_loc@plt+0x68b0>
    90d5:	mov    r8d,DWORD PTR [rip+0x65d24]        # 6ee00 <__ctype_b_loc@plt+0x6c530>
    90dc:	test   r8d,r8d
    90df:	jne    9180 <__ctype_b_loc@plt+0x68b0>
    90e5:	lea    rax,[rip+0xffffffffffffe744]        # 7830 <__ctype_b_loc@plt+0x4f60>
    90ec:	mov    DWORD PTR [rip+0xe19e],0x0        # 17294 <__ctype_b_loc@plt+0x149c4>
    90f6:	mov    QWORD PTR [rip+0xe313],rax        # 17410 <__ctype_b_loc@plt+0x14b40>
    90fd:	cmp    ebp,0xffffffff
    9100:	je     9109 <__ctype_b_loc@plt+0x6839>
    9102:	sub    DWORD PTR [rip+0x6533b],0x1        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9109:	mov    DWORD PTR [rip+0x65335],0x1        # 6e448 <__ctype_b_loc@plt+0x6bb78>
    9113:	cmp    r12d,0xffffffff
    9117:	je     8708 <__ctype_b_loc@plt+0x5e38>
    911d:	mov    ebx,0x1
    9122:	lea    r12,[rsp+0xe]
    9127:	jmp    9140 <__ctype_b_loc@plt+0x6870>
    9129:	nop    DWORD PTR [rax+0x0]
    9130:	cmp    eax,0xffffffff
    9133:	je     93c0 <__ctype_b_loc@plt+0x6af0>
    9139:	sub    ebx,eax
    913b:	mov    eax,eax
    913d:	add    r12,rax
    9140:	mov    eax,0x7fffffff
    9145:	mov    rsi,r12
    9148:	mov    edi,0x1
    914d:	cmp    ebx,eax
    914f:	cmovbe eax,ebx
    9152:	mov    edx,eax
    9154:	call   25c0 <write@plt>
    9159:	cmp    eax,ebx
    915b:	jne    9130 <__ctype_b_loc@plt+0x6860>
    915d:	mov    r8d,DWORD PTR [rip+0xe130]        # 17294 <__ctype_b_loc@plt+0x149c4>
    9164:	add    QWORD PTR [rip+0x652f4],0x1        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    916c:	test   r8d,r8d
    916f:	jns    8708 <__ctype_b_loc@plt+0x5e38>
    9175:	mov    eax,DWORD PTR [rip+0x652f1]        # 6e46c <__ctype_b_loc@plt+0x6bb9c>
    917b:	nop    DWORD PTR [rax+rax*1+0x0]
    9180:	cmp    eax,0x1
    9183:	jne    8a6e <__ctype_b_loc@plt+0x619e>
    9189:	mov    rdx,QWORD PTR [rip+0x65ca8]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    9190:	lea    rcx,[rip+0x65849]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    9197:	lea    rsi,[rip+0x7ebe]        # 1105c <__ctype_b_loc@plt+0xe78c>
    919e:	mov    rax,QWORD PTR [rip+0xde43]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    91a5:	mov    rdi,QWORD PTR [rax]
    91a8:	xor    eax,eax
    91aa:	call   70d0 <__ctype_b_loc@plt+0x4800>
    91af:	mov    DWORD PTR [rip+0x65807],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    91b9:	jmp    8b61 <__ctype_b_loc@plt+0x6291>
    91be:	xchg   ax,ax
    91c0:	cmp    DWORD PTR [rip+0x24e36],0x4034b50        # 2e000 <__ctype_b_loc@plt+0x2b730>
    91ca:	jne    86bf <__ctype_b_loc@plt+0x5def>
    91d0:	lea    rax,[rip+0x27c9]        # b9a0 <__ctype_b_loc@plt+0x90d0>
    91d7:	movzx  edx,WORD PTR [rip+0x24e3c]        # 2e01a <__ctype_b_loc@plt+0x2b74a>
    91de:	mov    DWORD PTR [rip+0x65284],ebx        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    91e4:	mov    QWORD PTR [rip+0xe225],rax        # 17410 <__ctype_b_loc@plt+0x14b40>
    91eb:	movzx  eax,WORD PTR [rip+0x24e2a]        # 2e01c <__ctype_b_loc@plt+0x2b74c>
    91f2:	lea    eax,[rdx+rax*1+0x1e]
    91f6:	cmp    eax,DWORD PTR [rip+0x65244]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    91fc:	mov    DWORD PTR [rip+0x65242],eax        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9202:	ja     9323 <__ctype_b_loc@plt+0x6a53>
    9208:	movzx  r8d,BYTE PTR [rip+0x24df8]        # 2e008 <__ctype_b_loc@plt+0x2b738>
    9210:	mov    eax,r8d
    9213:	mov    DWORD PTR [rip+0xe07a],r8d        # 17294 <__ctype_b_loc@plt+0x149c4>
    921a:	test   al,0xf7
    921c:	jne    9395 <__ctype_b_loc@plt+0x6ac5>
    9222:	movzx  eax,BYTE PTR [rip+0x24ddd]        # 2e006 <__ctype_b_loc@plt+0x2b736>
    9229:	lea    rcx,[rip+0x657b0]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    9230:	lea    rsi,[rip+0x9479]        # 126b0 <__ctype_b_loc@plt+0xfde0>
    9237:	mov    edx,eax
    9239:	and    edx,0x1
    923c:	mov    DWORD PTR [rip+0x2463e],edx        # 2d880 <__ctype_b_loc@plt+0x2afb0>
    9242:	mov    rdx,QWORD PTR [rip+0x65bef]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    9249:	test   al,0x1
    924b:	jne    919e <__ctype_b_loc@plt+0x68ce>
    9251:	mov    DWORD PTR [rip+0x2461d],0x1        # 2d878 <__ctype_b_loc@plt+0x2afa8>
    925b:	shr    al,0x3
    925e:	mov    DWORD PTR [rip+0x651e0],0x1        # 6e448 <__ctype_b_loc@plt+0x6bb78>
    9268:	and    eax,0x1
    926b:	mov    DWORD PTR [rip+0x2460b],eax        # 2d87c <__ctype_b_loc@plt+0x2afac>
    9271:	jmp    8708 <__ctype_b_loc@plt+0x5e38>
    9276:	cs nop WORD PTR [rax+rax*1+0x0]
    9280:	lea    rax,[rip+0x1b09]        # ad90 <__ctype_b_loc@plt+0x84c0>
    9287:	mov    r8d,0x3
    928d:	mov    DWORD PTR [rip+0xdffd],0x3        # 17294 <__ctype_b_loc@plt+0x149c4>
    9297:	mov    QWORD PTR [rip+0xe172],rax        # 17410 <__ctype_b_loc@plt+0x14b40>
    929e:	mov    DWORD PTR [rip+0x651a0],0x1        # 6e448 <__ctype_b_loc@plt+0x6bb78>
    92a8:	jmp    8708 <__ctype_b_loc@plt+0x5e38>
    92ad:	nop    DWORD PTR [rax]
    92b0:	mov    rax,QWORD PTR [rip+0xdd31]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    92b7:	mov    rdx,QWORD PTR [rip+0x65b7a]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    92be:	lea    rcx,[rip+0x6571b]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    92c5:	lea    rsi,[rip+0x940c]        # 126d8 <__ctype_b_loc@plt+0xfe08>
    92cc:	mov    rdi,QWORD PTR [rax]
    92cf:	xor    eax,eax
    92d1:	call   70d0 <__ctype_b_loc@plt+0x4800>
    92d6:	jmp    8de8 <__ctype_b_loc@plt+0x6518>
    92db:	nop    DWORD PTR [rax+rax*1+0x0]
    92e0:	mov    rax,QWORD PTR [rip+0xdd01]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    92e7:	mov    rdx,QWORD PTR [rip+0x65b4a]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    92ee:	mov    r8,r13
    92f1:	lea    rcx,[rip+0x656e8]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    92f8:	lea    rsi,[rip+0x9281]        # 12580 <__ctype_b_loc@plt+0xfcb0>
    92ff:	mov    rdi,QWORD PTR [rax]
    9302:	xor    eax,eax
    9304:	call   70d0 <__ctype_b_loc@plt+0x4800>
    9309:	jmp    8fee <__ctype_b_loc@plt+0x671e>
    930e:	xchg   ax,ax
    9310:	mov    esi,r13d
    9313:	mov    rdi,r14
    9316:	sub    esi,r14d
    9319:	call   37a0 <__ctype_b_loc@plt+0xed0>
    931e:	jmp    9031 <__ctype_b_loc@plt+0x6761>
    9323:	mov    rdx,QWORD PTR [rip+0x65b0e]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    932a:	lea    rcx,[rip+0x656af]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    9331:	lea    rsi,[rip+0x9318]        # 12650 <__ctype_b_loc@plt+0xfd80>
    9338:	jmp    919e <__ctype_b_loc@plt+0x68ce>
    933d:	mov    r8d,eax
    9340:	mov    rax,QWORD PTR [rip+0xdca1]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    9347:	mov    rdx,QWORD PTR [rip+0x65aea]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    934e:	lea    rcx,[rip+0x6568b]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    9355:	lea    rsi,[rip+0x91a4]        # 12500 <__ctype_b_loc@plt+0xfc30>
    935c:	mov    rdi,QWORD PTR [rax]
    935f:	xor    eax,eax
    9361:	call   70d0 <__ctype_b_loc@plt+0x4800>
    9366:	mov    r8d,0xffffffff
    936c:	mov    DWORD PTR [rip+0x6564a],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    9376:	jmp    8708 <__ctype_b_loc@plt+0x5e38>
    937b:	mov    rdx,QWORD PTR [rip+0x65ab6]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    9382:	lea    rcx,[rip+0x65657]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    9389:	lea    rsi,[rip+0x91a0]        # 12530 <__ctype_b_loc@plt+0xfc60>
    9390:	jmp    919e <__ctype_b_loc@plt+0x68ce>
    9395:	mov    rdx,QWORD PTR [rip+0x65a9c]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    939c:	lea    rcx,[rip+0x6563d]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    93a3:	lea    rsi,[rip+0x92c6]        # 12670 <__ctype_b_loc@plt+0xfda0>
    93aa:	jmp    919e <__ctype_b_loc@plt+0x68ce>
    93af:	lea    rdi,[rip+0x9232]        # 125e8 <__ctype_b_loc@plt+0xfd18>
    93b6:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    93bb:	call   2600 <__stack_chk_fail@plt>
    93c0:	call   7750 <__ctype_b_loc@plt+0x4e80>
    93c5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    93d0:	endbr64 
    93d4:	push   r15
    93d6:	mov    r15d,esi
    93d9:	push   r14
    93db:	push   r13
    93dd:	push   r12
    93df:	push   rbp
    93e0:	push   rbx
    93e1:	sub    rsp,0x78
    93e5:	mov    eax,DWORD PTR [rip+0x65059]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    93eb:	cmp    eax,DWORD PTR [rip+0x6504f]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    93f1:	mov    DWORD PTR [rsp+0x6c],edi
    93f5:	jae    9a12 <__ctype_b_loc@plt+0x7142>
    93fb:	lea    edx,[rax+0x1]
    93fe:	mov    DWORD PTR [rip+0x65040],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9404:	lea    rdx,[rip+0x24bf5]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    940b:	movzx  eax,BYTE PTR [rdx+rax*1]
    940f:	mov    edx,eax
    9411:	mov    r8d,eax
    9414:	mov    DWORD PTR [rip+0xde8a],eax        # 172a4 <__ctype_b_loc@plt+0x149d4>
    941a:	and    edx,0x80
    9420:	mov    DWORD PTR [rip+0xdc46],edx        # 1706c <__ctype_b_loc@plt+0x1479c>
    9426:	and    r8d,0x60
    942a:	je     9458 <__ctype_b_loc@plt+0x6b88>
    942c:	mov    r11d,DWORD PTR [rip+0x659e5]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    9433:	test   r11d,r11d
    9436:	je     9a74 <__ctype_b_loc@plt+0x71a4>
    943c:	mov    r10d,DWORD PTR [rip+0x6557d]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    9443:	test   r10d,r10d
    9446:	jne    9452 <__ctype_b_loc@plt+0x6b82>
    9448:	mov    DWORD PTR [rip+0x6556e],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    9452:	mov    eax,DWORD PTR [rip+0xde4c]        # 172a4 <__ctype_b_loc@plt+0x149d4>
    9458:	and    eax,0x1f
    945b:	mov    r8d,eax
    945e:	mov    DWORD PTR [rip+0xde40],eax        # 172a4 <__ctype_b_loc@plt+0x149d4>
    9464:	mov    eax,0x1
    9469:	mov    ecx,r8d
    946c:	shl    rax,cl
    946f:	mov    QWORD PTR [rsp+0x58],rax
    9474:	cmp    r8d,0x10
    9478:	jg     9a2a <__ctype_b_loc@plt+0x715a>
    947e:	mov    eax,DWORD PTR [rip+0x64fc0]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9484:	mov    esi,DWORD PTR [rip+0x64fb6]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    948a:	mov    ecx,0x20
    948f:	lea    rdi,[rip+0x659ea]        # 6ee80 <__ctype_b_loc@plt+0x6c5b0>
    9496:	lea    r13,[rip+0x86b63]        # 90000 <__ctype_b_loc@plt+0x8d730>
    949d:	shl    eax,0x3
    94a0:	cmp    DWORD PTR [rip+0xdbc5],0x1        # 1706c <__ctype_b_loc@plt+0x1479c>
    94a7:	mov    DWORD PTR [rsp+0x64],esi
    94ab:	mov    QWORD PTR [rsp+0x18],rax
    94b0:	mov    eax,0x100
    94b5:	sbb    rax,0xffffffffffffffff
    94b9:	mov    QWORD PTR [rsp+0x20],rax
    94be:	xor    eax,eax
    94c0:	rep stos QWORD PTR es:[rdi],rax
    94c3:	mov    eax,0xff
    94c8:	nop    DWORD PTR [rax+rax*1+0x0]
    94d0:	mov    BYTE PTR [r13+rax*1+0x0],al
    94d5:	sub    rax,0x1
    94d9:	jae    94d0 <__ctype_b_loc@plt+0x6c00>
    94db:	mov    QWORD PTR [rsp+0x10],0xffffffffffffffff
    94e4:	xor    r14d,r14d
    94e7:	mov    DWORD PTR [rsp+0x60],0x9
    94ef:	mov    QWORD PTR [rsp+0x30],0x1ff
    94f8:	mov    DWORD PTR [rsp+0x68],0x1ff
    9500:	mov    DWORD PTR [rsp+0x50],0x0
    9508:	mov    rcx,QWORD PTR [rsp+0x18]
    950d:	sar    rcx,0x3
    9511:	cmp    ecx,esi
    9513:	jbe    97a2 <__ctype_b_loc@plt+0x6ed2>
    9519:	mov    DWORD PTR [rip+0x64f1d],0x0        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    9523:	lea    rsi,[rip+0x24ad6]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    952a:	mov    edi,DWORD PTR [rsp+0x6c]
    952e:	mov    edx,0x40000
    9533:	call   4d60 <__ctype_b_loc@plt+0x2490>
    9538:	mov    DWORD PTR [rsp+0x64],eax
    953c:	cmp    eax,0xffffffff
    953f:	je     9ae6 <__ctype_b_loc@plt+0x7216>
    9545:	movsxd rax,DWORD PTR [rsp+0x64]
    954a:	mov    esi,DWORD PTR [rip+0x64ef0]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    9550:	add    QWORD PTR [rip+0x64f01],rax        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    9557:	add    esi,eax
    9559:	mov    DWORD PTR [rip+0x64ee1],esi        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    955f:	mov    r9d,DWORD PTR [rsp+0x64]
    9564:	mov    ecx,esi
    9566:	test   r9d,r9d
    9569:	je     9951 <__ctype_b_loc@plt+0x7081>
    956f:	mov    eax,esi
    9571:	xor    edx,edx
    9573:	div    DWORD PTR [rsp+0x60]
    9577:	sub    rcx,rdx
    957a:	lea    rax,[rcx*8+0x0]
    9582:	mov    QWORD PTR [rsp+0x48],rax
    9587:	test   rax,rax
    958a:	jle    9ad8 <__ctype_b_loc@plt+0x7208>
    9590:	mov    rdi,QWORD PTR [rsp+0x30]
    9595:	cmp    QWORD PTR [rsp+0x20],rdi
    959a:	jg     9a1e <__ctype_b_loc@plt+0x714e>
    95a0:	mov    QWORD PTR [rsp+0x18],0x0
    95a9:	mov    eax,DWORD PTR [rsp+0x68]
    95ad:	mov    QWORD PTR [rsp+0x38],rax
    95b2:	movsxd rax,DWORD PTR [rsp+0x60]
    95b7:	mov    QWORD PTR [rsp+0x40],rax
    95bc:	nop    DWORD PTR [rax+0x0]
    95c0:	mov    rsi,QWORD PTR [rsp+0x18]
    95c5:	lea    rdi,[rip+0x24a34]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    95cc:	mov    rbx,QWORD PTR [rsp+0x10]
    95d1:	mov    rcx,rsi
    95d4:	mov    QWORD PTR [rsp+0x28],rbx
    95d9:	sar    rcx,0x3
    95dd:	lea    rdx,[rdi+rcx*1]
    95e1:	movzx  eax,BYTE PTR [rdx+0x1]
    95e5:	movzx  edx,BYTE PTR [rdx+0x2]
    95e9:	shl    rax,0x8
    95ed:	shl    rdx,0x10
    95f1:	or     rax,rdx
    95f4:	movzx  edx,BYTE PTR [rdi+rcx*1]
    95f8:	mov    ecx,esi
    95fa:	and    ecx,0x7
    95fd:	or     rax,rdx
    9600:	sar    rax,cl
    9603:	and    rax,QWORD PTR [rsp+0x38]
    9608:	mov    QWORD PTR [rsp+0x10],rax
    960d:	mov    rax,QWORD PTR [rsp+0x40]
    9612:	add    rsi,rax
    9615:	mov    QWORD PTR [rsp+0x18],rsi
    961a:	cmp    rbx,0xffffffffffffffff
    961e:	je     97f0 <__ctype_b_loc@plt+0x6f20>
    9624:	cmp    QWORD PTR [rsp+0x10],0x100
    962d:	je     9910 <__ctype_b_loc@plt+0x7040>
    9633:	mov    rcx,QWORD PTR [rsp+0x20]
    9638:	cmp    QWORD PTR [rsp+0x10],rcx
    963d:	jl     9940 <__ctype_b_loc@plt+0x7070>
    9643:	jg     9afc <__ctype_b_loc@plt+0x722c>
    9649:	movzx  eax,BYTE PTR [rsp+0x50]
    964e:	lea    rdx,[rip+0x224a8]        # 2bafd <__ctype_b_loc@plt+0x2922d>
    9655:	mov    BYTE PTR [rip+0x224a2],al        # 2bafd <__ctype_b_loc@plt+0x2922d>
    965b:	mov    rax,QWORD PTR [rsp+0x28]
    9660:	jmp    967f <__ctype_b_loc@plt+0x6daf>
    9662:	nop    WORD PTR [rax+rax*1+0x0]
    9668:	movzx  ecx,BYTE PTR [r13+rax*1+0x0]
    966e:	lea    rsi,[rip+0x6580b]        # 6ee80 <__ctype_b_loc@plt+0x6c5b0>
    9675:	sub    rdx,0x1
    9679:	movzx  eax,WORD PTR [rsi+rax*2]
    967d:	mov    BYTE PTR [rdx],cl
    967f:	cmp    rax,0xff
    9685:	jg     9668 <__ctype_b_loc@plt+0x6d98>
    9687:	movzx  ecx,BYTE PTR [r13+rax*1+0x0]
    968d:	lea    rbp,[rdx-0x1]
    9691:	mov    BYTE PTR [rdx-0x1],cl
    9694:	lea    rdx,[rip+0x22463]        # 2bafe <__ctype_b_loc@plt+0x2922e>
    969b:	sub    rdx,rbp
    969e:	mov    BYTE PTR [rsp+0x57],cl
    96a2:	lea    ebx,[r14+rdx*1]
    96a6:	mov    DWORD PTR [rsp+0x50],ecx
    96aa:	cmp    ebx,0x3ffff
    96b0:	jg     9848 <__ctype_b_loc@plt+0x6f78>
    96b6:	movsxd rdi,r14d
    96b9:	lea    rax,[rip+0x98940]        # a2000 <__ctype_b_loc@plt+0x9f730>
    96c0:	movsxd rdx,edx
    96c3:	mov    rsi,rbp
    96c6:	add    rdi,rax
    96c9:	mov    r14d,ebx
    96cc:	call   2750 <memcpy@plt>
    96d1:	mov    rax,QWORD PTR [rsp+0x20]
    96d6:	cmp    QWORD PTR [rsp+0x58],rax
    96db:	jle    9700 <__ctype_b_loc@plt+0x6e30>
    96dd:	movzx  edi,WORD PTR [rsp+0x28]
    96e2:	movzx  ecx,BYTE PTR [rsp+0x57]
    96e7:	lea    rsi,[rip+0x65792]        # 6ee80 <__ctype_b_loc@plt+0x6c5b0>
    96ee:	mov    WORD PTR [rsi+rax*2],di
    96f2:	mov    BYTE PTR [r13+rax*1+0x0],cl
    96f7:	add    rax,0x1
    96fb:	mov    QWORD PTR [rsp+0x20],rax
    9700:	mov    rcx,QWORD PTR [rsp+0x18]
    9705:	cmp    QWORD PTR [rsp+0x48],rcx
    970a:	jle    982a <__ctype_b_loc@plt+0x6f5a>
    9710:	mov    rcx,QWORD PTR [rsp+0x30]
    9715:	cmp    QWORD PTR [rsp+0x20],rcx
    971a:	jle    95c0 <__ctype_b_loc@plt+0x6cf0>
    9720:	mov    rdi,QWORD PTR [rsp+0x18]
    9725:	mov    esi,DWORD PTR [rip+0x64d15]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    972b:	sub    rdi,0x1
    972f:	mov    ebx,DWORD PTR [rsp+0x60]
    9733:	lea    ecx,[rbx*8+0x0]
    973a:	add    ebx,0x1
    973d:	movsxd rcx,ecx
    9740:	mov    DWORD PTR [rsp+0x60],ebx
    9744:	lea    rax,[rcx+rdi*1]
    9748:	cqo    
    974a:	idiv   rcx
    974d:	sub    rcx,rdx
    9750:	cmp    DWORD PTR [rip+0xdb4e],ebx        # 172a4 <__ctype_b_loc@plt+0x149d4>
    9756:	lea    rax,[rcx+rdi*1]
    975a:	mov    QWORD PTR [rsp+0x18],rax
    975f:	mov    rax,QWORD PTR [rsp+0x58]
    9764:	mov    QWORD PTR [rsp+0x30],rax
    9769:	je     977e <__ctype_b_loc@plt+0x6eae>
    976b:	mov    eax,0x1
    9770:	mov    ecx,ebx
    9772:	shl    rax,cl
    9775:	sub    rax,0x1
    9779:	mov    QWORD PTR [rsp+0x30],rax
    977e:	movzx  ecx,BYTE PTR [rsp+0x60]
    9783:	mov    eax,0x1
    9788:	shl    eax,cl
    978a:	mov    rcx,QWORD PTR [rsp+0x18]
    978f:	sub    eax,0x1
    9792:	sar    rcx,0x3
    9796:	mov    DWORD PTR [rsp+0x68],eax
    979a:	cmp    ecx,esi
    979c:	ja     9519 <__ctype_b_loc@plt+0x6c49>
    97a2:	sub    esi,ecx
    97a4:	test   esi,esi
    97a6:	jle    97d0 <__ctype_b_loc@plt+0x6f00>
    97a8:	lea    rax,[rip+0x24851]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    97af:	lea    edx,[rsi-0x1]
    97b2:	movsxd rcx,ecx
    97b5:	lea    rdi,[rax+0x1]
    97b9:	add    rdi,rdx
    97bc:	nop    DWORD PTR [rax+0x0]
    97c0:	movzx  edx,BYTE PTR [rax+rcx*1]
    97c4:	add    rax,0x1
    97c8:	mov    BYTE PTR [rax-0x1],dl
    97cb:	cmp    rdi,rax
    97ce:	jne    97c0 <__ctype_b_loc@plt+0x6ef0>
    97d0:	mov    DWORD PTR [rip+0x64c6a],esi        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    97d6:	cmp    esi,0x3f
    97d9:	ja     955f <__ctype_b_loc@plt+0x6c8f>
    97df:	lea    rax,[rip+0x2481a]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    97e6:	add    rsi,rax
    97e9:	jmp    952a <__ctype_b_loc@plt+0x6c5a>
    97ee:	xchg   ax,ax
    97f0:	cmp    QWORD PTR [rsp+0x10],0xff
    97f9:	jg     9af0 <__ctype_b_loc@plt+0x7220>
    97ff:	mov    rsi,QWORD PTR [rsp+0x10]
    9804:	movsxd rax,r14d
    9807:	mov    rcx,QWORD PTR [rsp+0x18]
    980c:	lea    rdi,[rip+0x987ed]        # a2000 <__ctype_b_loc@plt+0x9f730>
    9813:	add    r14d,0x1
    9817:	mov    DWORD PTR [rsp+0x50],esi
    981b:	mov    BYTE PTR [rdi+rax*1],sil
    981f:	cmp    QWORD PTR [rsp+0x48],rcx
    9824:	jg     9710 <__ctype_b_loc@plt+0x6e40>
    982a:	mov    edx,DWORD PTR [rsp+0x64]
    982e:	test   edx,edx
    9830:	je     996f <__ctype_b_loc@plt+0x709f>
    9836:	mov    esi,DWORD PTR [rip+0x64c04]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    983c:	jmp    9508 <__ctype_b_loc@plt+0x6c38>
    9841:	nop    DWORD PTR [rax+0x0]
    9848:	mov    QWORD PTR [rsp+0x8],rbp
    984d:	mov    ebx,edx
    984f:	jmp    987c <__ctype_b_loc@plt+0x6fac>
    9851:	nop    DWORD PTR [rax+0x0]
    9858:	xor    r14d,r14d
    985b:	movsxd rbx,ebx
    985e:	add    QWORD PTR [rsp+0x8],rbx
    9863:	mov    rax,QWORD PTR [rsp+0x8]
    9868:	lea    rdi,[rip+0x2228f]        # 2bafe <__ctype_b_loc@plt+0x2922e>
    986f:	sub    rdi,rax
    9872:	mov    ebx,edi
    9874:	test   edi,edi
    9876:	jle    96d1 <__ctype_b_loc@plt+0x6e01>
    987c:	mov    eax,0x40000
    9881:	sub    eax,r14d
    9884:	cmp    eax,ebx
    9886:	cmovle ebx,eax
    9889:	test   ebx,ebx
    988b:	jle    98aa <__ctype_b_loc@plt+0x6fda>
    988d:	movsxd rdi,r14d
    9890:	lea    rax,[rip+0x98769]        # a2000 <__ctype_b_loc@plt+0x9f730>
    9897:	movsxd rdx,ebx
    989a:	add    r14d,ebx
    989d:	mov    rsi,QWORD PTR [rsp+0x8]
    98a2:	add    rdi,rax
    98a5:	call   2750 <memcpy@plt>
    98aa:	cmp    r14d,0x3ffff
    98b1:	jle    985b <__ctype_b_loc@plt+0x6f8b>
    98b3:	mov    ecx,DWORD PTR [rip+0x6552f]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    98b9:	mov    r12d,r14d
    98bc:	lea    rbp,[rip+0x9873d]        # a2000 <__ctype_b_loc@plt+0x9f730>
    98c3:	test   ecx,ecx
    98c5:	jne    9858 <__ctype_b_loc@plt+0x6f88>
    98c7:	jmp    98e1 <__ctype_b_loc@plt+0x7011>
    98c9:	nop    DWORD PTR [rax+0x0]
    98d0:	cmp    eax,0xffffffff
    98d3:	je     9a0d <__ctype_b_loc@plt+0x713d>
    98d9:	sub    r12d,eax
    98dc:	mov    eax,eax
    98de:	add    rbp,rax
    98e1:	mov    edx,0x7fffffff
    98e6:	mov    rsi,rbp
    98e9:	mov    edi,r15d
    98ec:	cmp    r12d,edx
    98ef:	cmovbe rdx,r12
    98f3:	call   25c0 <write@plt>
    98f8:	cmp    eax,r12d
    98fb:	jne    98d0 <__ctype_b_loc@plt+0x7000>
    98fd:	movsxd r14,r14d
    9900:	add    QWORD PTR [rip+0x64b59],r14        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    9907:	xor    r14d,r14d
    990a:	jmp    985b <__ctype_b_loc@plt+0x6f8b>
    990f:	nop
    9910:	mov    r8d,DWORD PTR [rip+0xd755]        # 1706c <__ctype_b_loc@plt+0x1479c>
    9917:	test   r8d,r8d
    991a:	jne    999d <__ctype_b_loc@plt+0x70cd>
    9920:	cmp    QWORD PTR [rsp+0x20],0x100
    9929:	mov    eax,0x100
    992e:	lea    rdx,[rip+0x221c9]        # 2bafe <__ctype_b_loc@plt+0x2922e>
    9935:	je     9649 <__ctype_b_loc@plt+0x6d79>
    993b:	jmp    9668 <__ctype_b_loc@plt+0x6d98>
    9940:	mov    rax,QWORD PTR [rsp+0x10]
    9945:	lea    rdx,[rip+0x221b2]        # 2bafe <__ctype_b_loc@plt+0x2922e>
    994c:	jmp    967f <__ctype_b_loc@plt+0x6daf>
    9951:	mov    eax,DWORD PTR [rsp+0x60]
    9955:	shl    rcx,0x3
    9959:	sub    eax,0x1
    995c:	cdqe   
    995e:	sub    rcx,rax
    9961:	mov    QWORD PTR [rsp+0x48],rcx
    9966:	test   rcx,rcx
    9969:	jg     9590 <__ctype_b_loc@plt+0x6cc0>
    996f:	mov    eax,DWORD PTR [rip+0x65473]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    9975:	test   eax,eax
    9977:	jne    998c <__ctype_b_loc@plt+0x70bc>
    9979:	mov    ebx,r14d
    997c:	lea    rbp,[rip+0x9867d]        # a2000 <__ctype_b_loc@plt+0x9f730>
    9983:	test   r14d,r14d
    9986:	jg     9aaf <__ctype_b_loc@plt+0x71df>
    998c:	add    rsp,0x78
    9990:	xor    eax,eax
    9992:	pop    rbx
    9993:	pop    rbp
    9994:	pop    r12
    9996:	pop    r13
    9998:	pop    r14
    999a:	pop    r15
    999c:	ret    
    999d:	xor    eax,eax
    999f:	mov    ecx,0x20
    99a4:	lea    rdi,[rip+0x654d5]        # 6ee80 <__ctype_b_loc@plt+0x6c5b0>
    99ab:	mov    rsi,QWORD PTR [rsp+0x18]
    99b0:	rep stos QWORD PTR es:[rdi],rax
    99b3:	mov    ecx,DWORD PTR [rsp+0x60]
    99b7:	mov    QWORD PTR [rsp+0x20],0x100
    99c0:	sub    rsi,0x1
    99c4:	mov    DWORD PTR [rsp+0x60],0x9
    99cc:	shl    ecx,0x3
    99cf:	mov    DWORD PTR [rsp+0x68],0x1ff
    99d7:	mov    QWORD PTR [rsp+0x30],0x1ff
    99e0:	movsxd rcx,ecx
    99e3:	lea    rax,[rsi+rcx*1]
    99e7:	cqo    
    99e9:	idiv   rcx
    99ec:	sub    rcx,rdx
    99ef:	lea    rax,[rcx+rsi*1]
    99f3:	mov    esi,DWORD PTR [rip+0x64a47]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    99f9:	mov    QWORD PTR [rsp+0x18],rax
    99fe:	mov    rax,QWORD PTR [rsp+0x28]
    9a03:	mov    QWORD PTR [rsp+0x10],rax
    9a08:	jmp    9508 <__ctype_b_loc@plt+0x6c38>
    9a0d:	call   7750 <__ctype_b_loc@plt+0x4e80>
    9a12:	xor    edi,edi
    9a14:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    9a19:	jmp    940f <__ctype_b_loc@plt+0x6b3f>
    9a1e:	mov    rdi,0xffffffffffffffff
    9a25:	jmp    972f <__ctype_b_loc@plt+0x6e5f>
    9a2a:	mov    rax,QWORD PTR [rip+0xd5b7]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    9a31:	mov    rdx,QWORD PTR [rip+0x65400]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    9a38:	mov    r9d,0x10
    9a3e:	lea    rcx,[rip+0x64f9b]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    9a45:	lea    rsi,[rip+0x8d54]        # 127a0 <__ctype_b_loc@plt+0xfed0>
    9a4c:	mov    rdi,QWORD PTR [rax]
    9a4f:	xor    eax,eax
    9a51:	call   70d0 <__ctype_b_loc@plt+0x4800>
    9a56:	mov    eax,0x1
    9a5b:	mov    DWORD PTR [rip+0x64f5b],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    9a65:	add    rsp,0x78
    9a69:	pop    rbx
    9a6a:	pop    rbp
    9a6b:	pop    r12
    9a6d:	pop    r13
    9a6f:	pop    r14
    9a71:	pop    r15
    9a73:	ret    
    9a74:	mov    rax,QWORD PTR [rip+0xd56d]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    9a7b:	mov    rdx,QWORD PTR [rip+0x653b6]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    9a82:	lea    rcx,[rip+0x64f57]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    9a89:	lea    rsi,[rip+0x8ce8]        # 12778 <__ctype_b_loc@plt+0xfea8>
    9a90:	mov    rdi,QWORD PTR [rax]
    9a93:	xor    eax,eax
    9a95:	call   70d0 <__ctype_b_loc@plt+0x4800>
    9a9a:	jmp    943c <__ctype_b_loc@plt+0x6b6c>
    9a9f:	cmp    eax,0xffffffff
    9aa2:	je     9a0d <__ctype_b_loc@plt+0x713d>
    9aa8:	sub    ebx,eax
    9aaa:	mov    eax,eax
    9aac:	add    rbp,rax
    9aaf:	mov    eax,0x7fffffff
    9ab4:	mov    rsi,rbp
    9ab7:	mov    edi,r15d
    9aba:	cmp    ebx,eax
    9abc:	cmovbe eax,ebx
    9abf:	mov    edx,eax
    9ac1:	call   25c0 <write@plt>
    9ac6:	cmp    eax,ebx
    9ac8:	jne    9a9f <__ctype_b_loc@plt+0x71cf>
    9aca:	movsxd rax,r14d
    9acd:	add    QWORD PTR [rip+0x6498c],rax        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    9ad4:	xor    eax,eax
    9ad6:	jmp    9a65 <__ctype_b_loc@plt+0x7195>
    9ad8:	mov    QWORD PTR [rsp+0x18],0x0
    9ae1:	jmp    9508 <__ctype_b_loc@plt+0x6c38>
    9ae6:	call   7690 <__ctype_b_loc@plt+0x4dc0>
    9aeb:	nop    DWORD PTR [rax+rax*1+0x0]
    9af0:	lea    rdi,[rip+0x7582]        # 11079 <__ctype_b_loc@plt+0xe7a9>
    9af7:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    9afc:	mov    edi,DWORD PTR [rip+0x652e6]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    9b02:	test   edi,edi
    9b04:	jne    9b15 <__ctype_b_loc@plt+0x7245>
    9b06:	mov    ebx,r14d
    9b09:	lea    rbp,[rip+0x984f0]        # a2000 <__ctype_b_loc@plt+0x9f730>
    9b10:	test   r14d,r14d
    9b13:	jg     9b44 <__ctype_b_loc@plt+0x7274>
    9b15:	mov    esi,DWORD PTR [rip+0x652f5]        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    9b1b:	lea    rdi,[rip+0x7557]        # 11079 <__ctype_b_loc@plt+0xe7a9>
    9b22:	lea    rax,[rip+0x8c1f]        # 12748 <__ctype_b_loc@plt+0xfe78>
    9b29:	test   esi,esi
    9b2b:	cmove  rdi,rax
    9b2f:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    9b34:	cmp    eax,0xffffffff
    9b37:	je     9a0d <__ctype_b_loc@plt+0x713d>
    9b3d:	sub    ebx,eax
    9b3f:	mov    eax,eax
    9b41:	add    rbp,rax
    9b44:	mov    eax,0x7fffffff
    9b49:	mov    rsi,rbp
    9b4c:	mov    edi,r15d
    9b4f:	cmp    ebx,eax
    9b51:	cmovbe eax,ebx
    9b54:	mov    edx,eax
    9b56:	call   25c0 <write@plt>
    9b5b:	cmp    eax,ebx
    9b5d:	jne    9b34 <__ctype_b_loc@plt+0x7264>
    9b5f:	movsxd rax,r14d
    9b62:	add    QWORD PTR [rip+0x648f7],rax        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    9b69:	jmp    9b15 <__ctype_b_loc@plt+0x7245>
    9b6b:	nop    DWORD PTR [rax+rax*1+0x0]
    9b70:	push   r15
    9b72:	movsxd rax,edx
    9b75:	push   r14
    9b77:	push   r13
    9b79:	push   r12
    9b7b:	push   rbp
    9b7c:	lea    rbp,[rip+0x2447d]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    9b83:	push   rbx
    9b84:	sub    rsp,0x48
    9b88:	mov    r14,QWORD PTR [rip+0x238b1]        # 2d440 <__ctype_b_loc@plt+0x2ab70>
    9b8f:	mov    r13d,DWORD PTR [rip+0x238a2]        # 2d438 <__ctype_b_loc@plt+0x2ab68>
    9b96:	mov    QWORD PTR [rsp+0x28],rsi
    9b9b:	lea    rsi,[rip+0x801e]        # 11bc0 <__ctype_b_loc@plt+0xf2f0>
    9ba2:	mov    r12d,DWORD PTR [rip+0xd8c57]        # e2800 <__ctype_b_loc@plt+0xdff30>
    9ba9:	movzx  eax,WORD PTR [rsi+rax*2]
    9bad:	mov    QWORD PTR [rsp+0x10],rdi
    9bb2:	mov    DWORD PTR [rsp+0xc],edx
    9bb6:	mov    DWORD PTR [rsp+0x18],eax
    9bba:	movsxd rax,ecx
    9bbd:	movzx  eax,WORD PTR [rsi+rax*2]
    9bc1:	mov    DWORD PTR [rsp+0x34],ecx
    9bc5:	mov    DWORD PTR [rsp+0x30],eax
    9bc9:	nop    DWORD PTR [rax+0x0]
    9bd0:	cmp    r13d,DWORD PTR [rsp+0xc]
    9bd5:	jb     9c50 <__ctype_b_loc@plt+0x7380>
    9bd7:	mov    edx,DWORD PTR [rsp+0x18]
    9bdb:	mov    rax,QWORD PTR [rsp+0x10]
    9be0:	and    edx,r14d
    9be3:	shl    rdx,0x4
    9be7:	lea    rbx,[rax+rdx*1]
    9beb:	movzx  r8d,BYTE PTR [rbx]
    9bef:	cmp    r8d,0x10
    9bf3:	ja     9cb3 <__ctype_b_loc@plt+0x73e3>
    9bf9:	movzx  eax,BYTE PTR [rbx+0x1]
    9bfd:	mov    ecx,eax
    9bff:	sub    r13d,eax
    9c02:	shr    r14,cl
    9c05:	cmp    r8d,0x10
    9c09:	jne    9d20 <__ctype_b_loc@plt+0x7450>
    9c0f:	movzx  edx,WORD PTR [rbx+0x8]
    9c13:	mov    eax,r12d
    9c16:	lea    rsi,[rip+0x863e3]        # 90000 <__ctype_b_loc@plt+0x8d730>
    9c1d:	add    r12d,0x1
    9c21:	mov    BYTE PTR [rsi+rax*1],dl
    9c24:	cmp    r12d,0x8000
    9c2b:	jne    9bd0 <__ctype_b_loc@plt+0x7300>
    9c2d:	mov    DWORD PTR [rip+0xd8bc9],0x8000        # e2800 <__ctype_b_loc@plt+0xdff30>
    9c37:	xor    r12d,r12d
    9c3a:	call   83b0 <__ctype_b_loc@plt+0x5ae0>
    9c3f:	cmp    r13d,DWORD PTR [rsp+0xc]
    9c44:	jae    9bd7 <__ctype_b_loc@plt+0x7307>
    9c46:	cs nop WORD PTR [rax+rax*1+0x0]
    9c50:	mov    eax,DWORD PTR [rip+0x647ee]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9c56:	cmp    eax,DWORD PTR [rip+0x647e4]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    9c5c:	jae    a078 <__ctype_b_loc@plt+0x77a8>
    9c62:	lea    edx,[rax+0x1]
    9c65:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    9c6a:	mov    DWORD PTR [rip+0x647d4],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9c70:	mov    ecx,r13d
    9c73:	add    r13d,0x8
    9c77:	shl    rax,cl
    9c7a:	or     r14,rax
    9c7d:	jmp    9bd0 <__ctype_b_loc@plt+0x7300>
    9c82:	nop    WORD PTR [rax+rax*1+0x0]
    9c88:	lea    rsi,[rip+0x7f31]        # 11bc0 <__ctype_b_loc@plt+0xf2f0>
    9c8f:	movzx  eax,WORD PTR [rsi+r15*2]
    9c94:	and    eax,r14d
    9c97:	movzx  eax,ax
    9c9a:	shl    rax,0x4
    9c9e:	add    rax,QWORD PTR [rbx+0x8]
    9ca2:	movzx  r8d,BYTE PTR [rax]
    9ca6:	mov    rbx,rax
    9ca9:	cmp    r8d,0x10
    9cad:	jbe    9bf9 <__ctype_b_loc@plt+0x7329>
    9cb3:	cmp    r8d,0x63
    9cb7:	je     a090 <__ctype_b_loc@plt+0x77c0>
    9cbd:	movzx  eax,BYTE PTR [rbx+0x1]
    9cc1:	lea    r15d,[r8-0x10]
    9cc5:	mov    ecx,eax
    9cc7:	sub    r13d,eax
    9cca:	shr    r14,cl
    9ccd:	cmp    r13d,r15d
    9cd0:	jb     9cf8 <__ctype_b_loc@plt+0x7428>
    9cd2:	jmp    9c88 <__ctype_b_loc@plt+0x73b8>
    9cd4:	nop    DWORD PTR [rax+0x0]
    9cd8:	lea    edx,[rax+0x1]
    9cdb:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    9ce0:	mov    DWORD PTR [rip+0x6475e],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9ce6:	mov    ecx,r13d
    9ce9:	add    r13d,0x8
    9ced:	shl    rax,cl
    9cf0:	or     r14,rax
    9cf3:	cmp    r15d,r13d
    9cf6:	jbe    9c88 <__ctype_b_loc@plt+0x73b8>
    9cf8:	mov    eax,DWORD PTR [rip+0x64746]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9cfe:	cmp    eax,DWORD PTR [rip+0x6473c]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    9d04:	jb     9cd8 <__ctype_b_loc@plt+0x7408>
    9d06:	xor    edi,edi
    9d08:	mov    DWORD PTR [rip+0xd8af1],r12d        # e2800 <__ctype_b_loc@plt+0xdff30>
    9d0f:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    9d14:	movzx  eax,al
    9d17:	jmp    9ce6 <__ctype_b_loc@plt+0x7416>
    9d19:	nop    DWORD PTR [rax+0x0]
    9d20:	cmp    r8d,0xf
    9d24:	je     a0a4 <__ctype_b_loc@plt+0x77d4>
    9d2a:	cmp    r8d,r13d
    9d2d:	jbe    9d83 <__ctype_b_loc@plt+0x74b3>
    9d2f:	mov    r15d,r8d
    9d32:	jmp    9d58 <__ctype_b_loc@plt+0x7488>
    9d34:	nop    DWORD PTR [rax+0x0]
    9d38:	lea    edx,[rax+0x1]
    9d3b:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    9d40:	mov    DWORD PTR [rip+0x646fe],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9d46:	mov    ecx,r13d
    9d49:	add    r13d,0x8
    9d4d:	shl    rax,cl
    9d50:	or     r14,rax
    9d53:	cmp    r15d,r13d
    9d56:	jbe    9d80 <__ctype_b_loc@plt+0x74b0>
    9d58:	mov    eax,DWORD PTR [rip+0x646e6]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9d5e:	cmp    eax,DWORD PTR [rip+0x646dc]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    9d64:	jb     9d38 <__ctype_b_loc@plt+0x7468>
    9d66:	xor    edi,edi
    9d68:	mov    DWORD PTR [rip+0xd8a91],r12d        # e2800 <__ctype_b_loc@plt+0xdff30>
    9d6f:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    9d74:	movzx  eax,al
    9d77:	jmp    9d46 <__ctype_b_loc@plt+0x7476>
    9d79:	nop    DWORD PTR [rax+0x0]
    9d80:	mov    r8d,r15d
    9d83:	movzx  eax,WORD PTR [rbx+0x8]
    9d87:	lea    rsi,[rip+0x7e32]        # 11bc0 <__ctype_b_loc@plt+0xf2f0>
    9d8e:	mov    r15d,r13d
    9d91:	mov    rbx,r14
    9d94:	mov    r13d,DWORD PTR [rsp+0x34]
    9d99:	mov    ecx,r8d
    9d9c:	sub    r15d,r8d
    9d9f:	mov    WORD PTR [rsp+0x1c],ax
    9da4:	mov    eax,r8d
    9da7:	shr    rbx,cl
    9daa:	movzx  eax,WORD PTR [rsi+rax*2]
    9dae:	mov    WORD PTR [rsp+0x20],ax
    9db3:	cmp    r13d,r15d
    9db6:	ja     9de0 <__ctype_b_loc@plt+0x7510>
    9db8:	jmp    9e08 <__ctype_b_loc@plt+0x7538>
    9dba:	nop    WORD PTR [rax+rax*1+0x0]
    9dc0:	lea    edx,[rax+0x1]
    9dc3:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    9dc8:	mov    DWORD PTR [rip+0x64676],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9dce:	mov    ecx,r15d
    9dd1:	add    r15d,0x8
    9dd5:	shl    rax,cl
    9dd8:	or     rbx,rax
    9ddb:	cmp    r13d,r15d
    9dde:	jbe    9e08 <__ctype_b_loc@plt+0x7538>
    9de0:	mov    eax,DWORD PTR [rip+0x6465e]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9de6:	cmp    eax,DWORD PTR [rip+0x64654]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    9dec:	jb     9dc0 <__ctype_b_loc@plt+0x74f0>
    9dee:	xor    edi,edi
    9df0:	mov    DWORD PTR [rip+0xd8a09],r12d        # e2800 <__ctype_b_loc@plt+0xdff30>
    9df7:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    9dfc:	movzx  eax,al
    9dff:	jmp    9dce <__ctype_b_loc@plt+0x74fe>
    9e01:	nop    DWORD PTR [rax+0x0]
    9e08:	mov    r13d,DWORD PTR [rsp+0x30]
    9e0d:	and    r13d,ebx
    9e10:	shl    r13,0x4
    9e14:	add    r13,QWORD PTR [rsp+0x28]
    9e19:	movzx  r8d,BYTE PTR [r13+0x0]
    9e1e:	cmp    r8d,0x10
    9e22:	jbe    9ed1 <__ctype_b_loc@plt+0x7601>
    9e28:	mov    QWORD PTR [rsp+0x38],r14
    9e2d:	nop    DWORD PTR [rax]
    9e30:	cmp    r8d,0x63
    9e34:	je     a090 <__ctype_b_loc@plt+0x77c0>
    9e3a:	movzx  eax,BYTE PTR [r13+0x1]
    9e3f:	lea    r14d,[r8-0x10]
    9e43:	mov    ecx,eax
    9e45:	sub    r15d,eax
    9e48:	shr    rbx,cl
    9e4b:	cmp    r15d,r14d
    9e4e:	jb     9e78 <__ctype_b_loc@plt+0x75a8>
    9e50:	jmp    9ea0 <__ctype_b_loc@plt+0x75d0>
    9e52:	nop    WORD PTR [rax+rax*1+0x0]
    9e58:	lea    edx,[rax+0x1]
    9e5b:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    9e60:	mov    DWORD PTR [rip+0x645de],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9e66:	mov    ecx,r15d
    9e69:	add    r15d,0x8
    9e6d:	shl    rax,cl
    9e70:	or     rbx,rax
    9e73:	cmp    r14d,r15d
    9e76:	jbe    9ea0 <__ctype_b_loc@plt+0x75d0>
    9e78:	mov    eax,DWORD PTR [rip+0x645c6]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9e7e:	cmp    eax,DWORD PTR [rip+0x645bc]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    9e84:	jb     9e58 <__ctype_b_loc@plt+0x7588>
    9e86:	xor    edi,edi
    9e88:	mov    DWORD PTR [rip+0xd8971],r12d        # e2800 <__ctype_b_loc@plt+0xdff30>
    9e8f:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    9e94:	movzx  eax,al
    9e97:	jmp    9e66 <__ctype_b_loc@plt+0x7596>
    9e99:	nop    DWORD PTR [rax+0x0]
    9ea0:	mov    edx,r14d
    9ea3:	lea    rsi,[rip+0x7d16]        # 11bc0 <__ctype_b_loc@plt+0xf2f0>
    9eaa:	movzx  eax,WORD PTR [rsi+rdx*2]
    9eae:	and    eax,ebx
    9eb0:	movzx  eax,ax
    9eb3:	shl    rax,0x4
    9eb7:	add    rax,QWORD PTR [r13+0x8]
    9ebb:	movzx  r8d,BYTE PTR [rax]
    9ebf:	mov    r13,rax
    9ec2:	cmp    r8d,0x10
    9ec6:	ja     9e30 <__ctype_b_loc@plt+0x7560>
    9ecc:	mov    r14,QWORD PTR [rsp+0x38]
    9ed1:	movzx  eax,BYTE PTR [r13+0x1]
    9ed6:	mov    edx,r15d
    9ed9:	mov    rsi,rbx
    9edc:	mov    ecx,eax
    9ede:	sub    edx,eax
    9ee0:	shr    rsi,cl
    9ee3:	cmp    r8d,edx
    9ee6:	jbe    9f5a <__ctype_b_loc@plt+0x768a>
    9ee8:	mov    QWORD PTR [rsp+0x38],r13
    9eed:	mov    r15,rsi
    9ef0:	mov    r13d,r8d
    9ef3:	mov    ebx,edx
    9ef5:	jmp    9f1e <__ctype_b_loc@plt+0x764e>
    9ef7:	nop    WORD PTR [rax+rax*1+0x0]
    9f00:	lea    edx,[rax+0x1]
    9f03:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    9f08:	mov    ecx,ebx
    9f0a:	add    ebx,0x8
    9f0d:	mov    DWORD PTR [rip+0x64531],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9f13:	shl    rax,cl
    9f16:	or     r15,rax
    9f19:	cmp    r13d,ebx
    9f1c:	jbe    9f4d <__ctype_b_loc@plt+0x767d>
    9f1e:	mov    eax,DWORD PTR [rip+0x64520]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    9f24:	cmp    eax,DWORD PTR [rip+0x64516]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    9f2a:	jb     9f00 <__ctype_b_loc@plt+0x7630>
    9f2c:	xor    edi,edi
    9f2e:	mov    DWORD PTR [rip+0xd88cb],r12d        # e2800 <__ctype_b_loc@plt+0xdff30>
    9f35:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    9f3a:	mov    ecx,ebx
    9f3c:	add    ebx,0x8
    9f3f:	movzx  eax,al
    9f42:	shl    rax,cl
    9f45:	or     r15,rax
    9f48:	cmp    r13d,ebx
    9f4b:	ja     9f1e <__ctype_b_loc@plt+0x764e>
    9f4d:	mov    r8d,r13d
    9f50:	mov    r13,QWORD PTR [rsp+0x38]
    9f55:	mov    rsi,r15
    9f58:	mov    edx,ebx
    9f5a:	movzx  r15d,WORD PTR [rsp+0x20]
    9f60:	mov    edi,r12d
    9f63:	mov    ecx,r8d
    9f66:	sub    edx,r8d
    9f69:	movzx  eax,WORD PTR [rsp+0x1c]
    9f6e:	lea    rbx,[rip+0x7c4b]        # 11bc0 <__ctype_b_loc@plt+0xf2f0>
    9f75:	mov    DWORD PTR [rsp+0x1c],edx
    9f79:	and    r15d,r14d
    9f7c:	lea    r9d,[r15+rax*1]
    9f80:	movzx  eax,WORD PTR [r13+0x8]
    9f85:	mov    r13d,r9d
    9f88:	sub    edi,eax
    9f8a:	mov    eax,r8d
    9f8d:	movzx  eax,WORD PTR [rbx+rax*2]
    9f91:	and    eax,esi
    9f93:	shr    rsi,cl
    9f96:	sub    edi,eax
    9f98:	mov    QWORD PTR [rsp+0x20],rsi
    9f9d:	mov    r14d,edi
    9fa0:	jmp    9fdb <__ctype_b_loc@plt+0x770b>
    9fa2:	nop    WORD PTR [rax+rax*1+0x0]
    9fa8:	lea    rax,[rip+0x86051]        # 90000 <__ctype_b_loc@plt+0x8d730>
    9faf:	mov    edi,r12d
    9fb2:	mov    esi,ebx
    9fb4:	mov    edx,r15d
    9fb7:	add    rdi,rax
    9fba:	add    rsi,rax
    9fbd:	lea    r14d,[rbx+r15*1]
    9fc1:	add    r12d,r15d
    9fc4:	call   2750 <memcpy@plt>
    9fc9:	cmp    r12d,0x8000
    9fd0:	je     a047 <__ctype_b_loc@plt+0x7777>
    9fd2:	test   r13d,r13d
    9fd5:	je     a062 <__ctype_b_loc@plt+0x7792>
    9fdb:	mov    ebx,r14d
    9fde:	mov    eax,0x8000
    9fe3:	mov    r15d,0x8000
    9fe9:	mov    esi,r12d
    9fec:	and    ebx,0x7fff
    9ff2:	sub    r15d,r12d
    9ff5:	sub    eax,ebx
    9ff7:	cmp    r12d,ebx
    9ffa:	cmovb  r15d,eax
    9ffe:	mov    eax,ebx
    a000:	cmp    r13d,r15d
    a003:	cmovbe r15d,r13d
    a007:	sub    esi,ebx
    a009:	sub    eax,r12d
    a00c:	sub    r13d,r15d
    a00f:	cmp    r12d,ebx
    a012:	cmova  eax,esi
    a015:	cmp    eax,r15d
    a018:	jae    9fa8 <__ctype_b_loc@plt+0x76d8>
    a01a:	lea    r14d,[rbx+r15*1]
    a01e:	mov    eax,ebx
    a020:	mov    ecx,eax
    a022:	lea    rdi,[rip+0x85fd7]        # 90000 <__ctype_b_loc@plt+0x8d730>
    a029:	lea    edx,[rax+rsi*1]
    a02c:	add    eax,0x1
    a02f:	movzx  ecx,BYTE PTR [rdi+rcx*1]
    a033:	mov    BYTE PTR [rdi+rdx*1],cl
    a036:	cmp    eax,r14d
    a039:	jne    a020 <__ctype_b_loc@plt+0x7750>
    a03b:	add    r12d,r15d
    a03e:	cmp    r12d,0x8000
    a045:	jne    9fd2 <__ctype_b_loc@plt+0x7702>
    a047:	mov    DWORD PTR [rip+0xd87af],0x8000        # e2800 <__ctype_b_loc@plt+0xdff30>
    a051:	xor    r12d,r12d
    a054:	call   83b0 <__ctype_b_loc@plt+0x5ae0>
    a059:	test   r13d,r13d
    a05c:	jne    9fdb <__ctype_b_loc@plt+0x770b>
    a062:	mov    r13d,DWORD PTR [rsp+0x1c]
    a067:	mov    r14,QWORD PTR [rsp+0x20]
    a06c:	jmp    9bd0 <__ctype_b_loc@plt+0x7300>
    a071:	nop    DWORD PTR [rax+0x0]
    a078:	xor    edi,edi
    a07a:	mov    DWORD PTR [rip+0xd877f],r12d        # e2800 <__ctype_b_loc@plt+0xdff30>
    a081:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    a086:	movzx  eax,al
    a089:	jmp    9c70 <__ctype_b_loc@plt+0x73a0>
    a08e:	xchg   ax,ax
    a090:	mov    eax,0x1
    a095:	add    rsp,0x48
    a099:	pop    rbx
    a09a:	pop    rbp
    a09b:	pop    r12
    a09d:	pop    r13
    a09f:	pop    r14
    a0a1:	pop    r15
    a0a3:	ret    
    a0a4:	mov    DWORD PTR [rip+0xd8755],r12d        # e2800 <__ctype_b_loc@plt+0xdff30>
    a0ab:	xor    eax,eax
    a0ad:	mov    QWORD PTR [rip+0x2338c],r14        # 2d440 <__ctype_b_loc@plt+0x2ab70>
    a0b4:	mov    DWORD PTR [rip+0x2337d],r13d        # 2d438 <__ctype_b_loc@plt+0x2ab68>
    a0bb:	jmp    a095 <__ctype_b_loc@plt+0x77c5>
    a0bd:	nop    DWORD PTR [rax]
    a0c0:	push   r12
    a0c2:	push   rbp
    a0c3:	push   rbx
    a0c4:	sub    rsp,0x4b0
    a0cb:	mov    rax,QWORD PTR fs:0x28
    a0d4:	mov    QWORD PTR [rsp+0x4a8],rax
    a0dc:	xor    eax,eax
    a0de:	lea    rbp,[rsp+0x20]
    a0e3:	lea    rdx,[rsp+0x260]
    a0eb:	mov    rbx,rbp
    a0ee:	mov    rax,rbp
    a0f1:	nop    DWORD PTR [rax+0x0]
    a0f8:	mov    DWORD PTR [rax],0x8
    a0fe:	add    rax,0x4
    a102:	cmp    rax,rdx
    a105:	jne    a0f8 <__ctype_b_loc@plt+0x7828>
    a107:	lea    rdx,[rbp+0x400]
    a10e:	xchg   ax,ax
    a110:	mov    DWORD PTR [rax],0x9
    a116:	add    rax,0x4
    a11a:	cmp    rax,rdx
    a11d:	jne    a110 <__ctype_b_loc@plt+0x7840>
    a11f:	lea    rax,[rsp+0x420]
    a127:	lea    rdx,[rbp+0x460]
    a12e:	xchg   ax,ax
    a130:	mov    DWORD PTR [rax],0x7
    a136:	add    rax,0x4
    a13a:	cmp    rdx,rax
    a13d:	jne    a130 <__ctype_b_loc@plt+0x7860>
    a13f:	mov    DWORD PTR [rsp+0xc],0x7
    a147:	sub    rsp,0x8
    a14b:	movabs rax,0x800000008
    a155:	lea    rcx,[rip+0xd0e4]        # 17240 <__ctype_b_loc@plt+0x14970>
    a15c:	mov    QWORD PTR [rsp+0x488],rax
    a164:	mov    esi,0x120
    a169:	mov    edx,0x101
    a16e:	lea    r8,[rip+0xd08b]        # 17200 <__ctype_b_loc@plt+0x14930>
    a175:	mov    QWORD PTR [rsp+0x490],rax
    a17d:	mov    rdi,rbp
    a180:	mov    QWORD PTR [rsp+0x498],rax
    a188:	mov    QWORD PTR [rsp+0x4a0],rax
    a190:	lea    rax,[rsp+0x14]
    a195:	push   rax
    a196:	lea    r9,[rsp+0x28]
    a19b:	call   4570 <__ctype_b_loc@plt+0x1ca0>
    a1a0:	pop    rcx
    a1a1:	pop    rsi
    a1a2:	mov    r12d,eax
    a1a5:	test   eax,eax
    a1a7:	jne    a222 <__ctype_b_loc@plt+0x7952>
    a1a9:	lea    rax,[rbp+0x78]
    a1ad:	nop    DWORD PTR [rax]
    a1b0:	mov    DWORD PTR [rbx],0x5
    a1b6:	add    rbx,0x4
    a1ba:	cmp    rbx,rax
    a1bd:	jne    a1b0 <__ctype_b_loc@plt+0x78e0>
    a1bf:	sub    rsp,0x8
    a1c3:	xor    edx,edx
    a1c5:	lea    r8,[rip+0xcfb4]        # 17180 <__ctype_b_loc@plt+0x148b0>
    a1cc:	mov    rdi,rbp
    a1cf:	mov    DWORD PTR [rsp+0x10],0x5
    a1d7:	lea    rax,[rsp+0x10]
    a1dc:	mov    esi,0x1e
    a1e1:	lea    rcx,[rip+0xcfd8]        # 171c0 <__ctype_b_loc@plt+0x148f0>
    a1e8:	push   rax
    a1e9:	lea    r9,[rsp+0x20]
    a1ee:	call   4570 <__ctype_b_loc@plt+0x1ca0>
    a1f3:	mov    r12d,eax
    a1f6:	pop    rax
    a1f7:	pop    rdx
    a1f8:	cmp    r12d,0x1
    a1fc:	jg     a244 <__ctype_b_loc@plt+0x7974>
    a1fe:	mov    ecx,DWORD PTR [rsp+0x8]
    a202:	mov    edx,DWORD PTR [rsp+0xc]
    a206:	mov    rsi,QWORD PTR [rsp+0x10]
    a20b:	mov    rdi,QWORD PTR [rsp+0x18]
    a210:	call   9b70 <__ctype_b_loc@plt+0x72a0>
    a215:	mov    r12d,eax
    a218:	test   eax,eax
    a21a:	je     a264 <__ctype_b_loc@plt+0x7994>
    a21c:	mov    r12d,0x1
    a222:	mov    rax,QWORD PTR [rsp+0x4a8]
    a22a:	sub    rax,QWORD PTR fs:0x28
    a233:	jne    a2a7 <__ctype_b_loc@plt+0x79d7>
    a235:	add    rsp,0x4b0
    a23c:	mov    eax,r12d
    a23f:	pop    rbx
    a240:	pop    rbp
    a241:	pop    r12
    a243:	ret    
    a244:	mov    rbx,QWORD PTR [rsp+0x18]
    a249:	test   rbx,rbx
    a24c:	je     a222 <__ctype_b_loc@plt+0x7952>
    a24e:	xchg   ax,ax
    a250:	lea    rdi,[rbx-0x10]
    a254:	mov    rbx,QWORD PTR [rbx-0x8]
    a258:	call   24e0 <free@plt>
    a25d:	test   rbx,rbx
    a260:	jne    a250 <__ctype_b_loc@plt+0x7980>
    a262:	jmp    a222 <__ctype_b_loc@plt+0x7952>
    a264:	mov    rbx,QWORD PTR [rsp+0x18]
    a269:	test   rbx,rbx
    a26c:	je     a282 <__ctype_b_loc@plt+0x79b2>
    a26e:	xchg   ax,ax
    a270:	lea    rdi,[rbx-0x10]
    a274:	mov    rbx,QWORD PTR [rbx-0x8]
    a278:	call   24e0 <free@plt>
    a27d:	test   rbx,rbx
    a280:	jne    a270 <__ctype_b_loc@plt+0x79a0>
    a282:	mov    rbx,QWORD PTR [rsp+0x10]
    a287:	test   rbx,rbx
    a28a:	je     a222 <__ctype_b_loc@plt+0x7952>
    a28c:	nop    DWORD PTR [rax+0x0]
    a290:	lea    rdi,[rbx-0x10]
    a294:	mov    rbx,QWORD PTR [rbx-0x8]
    a298:	call   24e0 <free@plt>
    a29d:	test   rbx,rbx
    a2a0:	jne    a290 <__ctype_b_loc@plt+0x79c0>
    a2a2:	jmp    a222 <__ctype_b_loc@plt+0x7952>
    a2a7:	call   2600 <__stack_chk_fail@plt>
    a2ac:	nop    DWORD PTR [rax+0x0]
    a2b0:	push   r15
    a2b2:	push   r14
    a2b4:	push   r13
    a2b6:	push   r12
    a2b8:	push   rbp
    a2b9:	push   rbx
    a2ba:	sub    rsp,0x558
    a2c1:	mov    r13d,DWORD PTR [rip+0x23170]        # 2d438 <__ctype_b_loc@plt+0x2ab68>
    a2c8:	mov    rbx,QWORD PTR [rip+0x23171]        # 2d440 <__ctype_b_loc@plt+0x2ab70>
    a2cf:	mov    rax,QWORD PTR fs:0x28
    a2d8:	mov    QWORD PTR [rsp+0x548],rax
    a2e0:	xor    eax,eax
    a2e2:	mov    ebp,DWORD PTR [rip+0xd8518]        # e2800 <__ctype_b_loc@plt+0xdff30>
    a2e8:	cmp    r13d,0x4
    a2ec:	ja     a321 <__ctype_b_loc@plt+0x7a51>
    a2ee:	mov    eax,DWORD PTR [rip+0x64150]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a2f4:	cmp    eax,DWORD PTR [rip+0x64146]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    a2fa:	jae    a470 <__ctype_b_loc@plt+0x7ba0>
    a300:	lea    edx,[rax+0x1]
    a303:	mov    DWORD PTR [rip+0x6413b],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a309:	lea    rdx,[rip+0x23cf0]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    a310:	movzx  eax,BYTE PTR [rdx+rax*1]
    a314:	mov    ecx,r13d
    a317:	add    r13d,0x8
    a31b:	shl    rax,cl
    a31e:	or     rbx,rax
    a321:	mov    eax,ebx
    a323:	lea    r12d,[r13-0x5]
    a327:	shr    rbx,0x5
    a32b:	and    eax,0x1f
    a32e:	add    eax,0x101
    a333:	mov    DWORD PTR [rsp+0x18],eax
    a337:	cmp    r12d,0x4
    a33b:	ja     a370 <__ctype_b_loc@plt+0x7aa0>
    a33d:	mov    eax,DWORD PTR [rip+0x64101]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a343:	cmp    eax,DWORD PTR [rip+0x640f7]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    a349:	jae    a480 <__ctype_b_loc@plt+0x7bb0>
    a34f:	lea    edx,[rax+0x1]
    a352:	mov    DWORD PTR [rip+0x640ec],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a358:	lea    rdx,[rip+0x23ca1]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    a35f:	movzx  eax,BYTE PTR [rdx+rax*1]
    a363:	mov    ecx,r12d
    a366:	lea    r12d,[r13+0x3]
    a36a:	shl    rax,cl
    a36d:	or     rbx,rax
    a370:	mov    eax,ebx
    a372:	lea    r14d,[r12-0x5]
    a377:	shr    rbx,0x5
    a37b:	and    eax,0x1f
    a37e:	mov    r13,rbx
    a381:	add    eax,0x1
    a384:	mov    DWORD PTR [rsp+0x1c],eax
    a388:	cmp    r14d,0x3
    a38c:	ja     a3c2 <__ctype_b_loc@plt+0x7af2>
    a38e:	mov    eax,DWORD PTR [rip+0x640b0]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a394:	cmp    eax,DWORD PTR [rip+0x640a6]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    a39a:	jae    a498 <__ctype_b_loc@plt+0x7bc8>
    a3a0:	lea    edx,[rax+0x1]
    a3a3:	mov    DWORD PTR [rip+0x6409b],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a3a9:	lea    rdx,[rip+0x23c50]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    a3b0:	movzx  eax,BYTE PTR [rdx+rax*1]
    a3b4:	mov    ecx,r14d
    a3b7:	lea    r14d,[r12+0x3]
    a3bc:	shl    rax,cl
    a3bf:	or     r13,rax
    a3c2:	cmp    DWORD PTR [rsp+0x18],0x11e
    a3ca:	ja     a6f8 <__ctype_b_loc@plt+0x7e28>
    a3d0:	cmp    DWORD PTR [rsp+0x1c],0x1e
    a3d5:	ja     a6f8 <__ctype_b_loc@plt+0x7e28>
    a3db:	mov    eax,r13d
    a3de:	sub    r14d,0x4
    a3e2:	shr    r13,0x4
    a3e6:	lea    r12,[rip+0x7773]        # 11b60 <__ctype_b_loc@plt+0xf290>
    a3ed:	and    eax,0xf
    a3f0:	lea    rdx,[r12+0x10]
    a3f5:	lea    r15,[rip+0x23c04]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    a3fc:	lea    ebx,[rax+0x4]
    a3ff:	lea    rax,[rdx+rax*4]
    a403:	mov    DWORD PTR [rsp],ebx
    a406:	mov    rbx,rax
    a409:	jmp    a44a <__ctype_b_loc@plt+0x7b7a>
    a40b:	nop    DWORD PTR [rax+rax*1+0x0]
    a410:	lea    ecx,[rax+0x1]
    a413:	movzx  eax,BYTE PTR [r15+rax*1]
    a418:	mov    DWORD PTR [rip+0x64026],ecx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a41e:	mov    ecx,r14d
    a421:	add    r14d,0x8
    a425:	shl    rax,cl
    a428:	or     r13,rax
    a42b:	mov    eax,DWORD PTR [r12]
    a42f:	mov    ecx,r13d
    a432:	add    r12,0x4
    a436:	shr    r13,0x3
    a43a:	and    ecx,0x7
    a43d:	sub    r14d,0x3
    a441:	mov    DWORD PTR [rsp+rax*4+0x50],ecx
    a445:	cmp    rbx,r12
    a448:	je     a4b0 <__ctype_b_loc@plt+0x7be0>
    a44a:	cmp    r14d,0x2
    a44e:	ja     a42b <__ctype_b_loc@plt+0x7b5b>
    a450:	mov    eax,DWORD PTR [rip+0x63fee]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a456:	cmp    eax,DWORD PTR [rip+0x63fe4]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    a45c:	jb     a410 <__ctype_b_loc@plt+0x7b40>
    a45e:	xor    edi,edi
    a460:	mov    DWORD PTR [rip+0xd839a],ebp        # e2800 <__ctype_b_loc@plt+0xdff30>
    a466:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    a46b:	movzx  eax,al
    a46e:	jmp    a41e <__ctype_b_loc@plt+0x7b4e>
    a470:	xor    edi,edi
    a472:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    a477:	movzx  eax,al
    a47a:	jmp    a314 <__ctype_b_loc@plt+0x7a44>
    a47f:	nop
    a480:	xor    edi,edi
    a482:	mov    DWORD PTR [rip+0xd8378],ebp        # e2800 <__ctype_b_loc@plt+0xdff30>
    a488:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    a48d:	movzx  eax,al
    a490:	jmp    a363 <__ctype_b_loc@plt+0x7a93>
    a495:	nop    DWORD PTR [rax]
    a498:	xor    edi,edi
    a49a:	mov    DWORD PTR [rip+0xd8360],ebp        # e2800 <__ctype_b_loc@plt+0xdff30>
    a4a0:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    a4a5:	movzx  eax,al
    a4a8:	jmp    a3b4 <__ctype_b_loc@plt+0x7ae4>
    a4ad:	nop    DWORD PTR [rax]
    a4b0:	mov    ebx,DWORD PTR [rsp]
    a4b3:	cmp    ebx,0x13
    a4b6:	je     a4dc <__ctype_b_loc@plt+0x7c0c>
    a4b8:	nop    DWORD PTR [rax+rax*1+0x0]
    a4c0:	mov    eax,ebx
    a4c2:	lea    rsi,[rip+0x7697]        # 11b60 <__ctype_b_loc@plt+0xf290>
    a4c9:	add    ebx,0x1
    a4cc:	mov    eax,DWORD PTR [rsi+rax*4]
    a4cf:	mov    DWORD PTR [rsp+rax*4+0x50],0x0
    a4d7:	cmp    ebx,0x13
    a4da:	jne    a4c0 <__ctype_b_loc@plt+0x7bf0>
    a4dc:	lea    rdi,[rsp+0x50]
    a4e1:	lea    r9,[rsp+0x48]
    a4e6:	sub    rsp,0x8
    a4ea:	xor    ecx,ecx
    a4ec:	mov    DWORD PTR [rsp+0x44],0x7
    a4f4:	xor    r8d,r8d
    a4f7:	mov    edx,0x13
    a4fc:	mov    esi,0x13
    a501:	mov    QWORD PTR [rsp+0x30],r9
    a506:	mov    QWORD PTR [rsp+0x18],rdi
    a50b:	lea    rax,[rsp+0x44]
    a510:	mov    QWORD PTR [rsp+0x28],rax
    a515:	push   rax
    a516:	call   4570 <__ctype_b_loc@plt+0x1ca0>
    a51b:	pop    rdi
    a51c:	pop    r8
    a51e:	mov    r12d,eax
    a521:	test   eax,eax
    a523:	jne    a5c0 <__ctype_b_loc@plt+0x7cf0>
    a529:	cmp    QWORD PTR [rsp+0x48],0x0
    a52f:	je     a95a <__ctype_b_loc@plt+0x808a>
    a535:	movsxd rdx,DWORD PTR [rsp+0x3c]
    a53a:	mov    eax,DWORD PTR [rsp+0x18]
    a53e:	mov    DWORD PTR [rsp+0xc],0x0
    a546:	lea    r15,[rip+0x23ab3]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    a54d:	add    eax,DWORD PTR [rsp+0x1c]
    a551:	mov    DWORD PTR [rsp],0x0
    a558:	mov    DWORD PTR [rsp+0x4],eax
    a55c:	lea    rax,[rip+0x765d]        # 11bc0 <__ctype_b_loc@plt+0xf2f0>
    a563:	mov    rbx,rdx
    a566:	movzx  eax,WORD PTR [rax+rdx*2]
    a56a:	mov    DWORD PTR [rsp+0x8],eax
    a56e:	mov    eax,r14d
    a571:	mov    r14,r13
    a574:	mov    r13d,eax
    a577:	jmp    a59b <__ctype_b_loc@plt+0x7ccb>
    a579:	nop    DWORD PTR [rax+0x0]
    a580:	lea    edx,[rax+0x1]
    a583:	movzx  eax,BYTE PTR [r15+rax*1]
    a588:	mov    DWORD PTR [rip+0x63eb6],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a58e:	mov    ecx,r13d
    a591:	add    r13d,0x8
    a595:	shl    rax,cl
    a598:	or     r14,rax
    a59b:	cmp    ebx,r13d
    a59e:	jbe    a600 <__ctype_b_loc@plt+0x7d30>
    a5a0:	mov    eax,DWORD PTR [rip+0x63e9e]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a5a6:	cmp    eax,DWORD PTR [rip+0x63e94]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    a5ac:	jb     a580 <__ctype_b_loc@plt+0x7cb0>
    a5ae:	xor    edi,edi
    a5b0:	mov    DWORD PTR [rip+0xd824a],ebp        # e2800 <__ctype_b_loc@plt+0xdff30>
    a5b6:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    a5bb:	movzx  eax,al
    a5be:	jmp    a58e <__ctype_b_loc@plt+0x7cbe>
    a5c0:	cmp    eax,0x1
    a5c3:	je     a9db <__ctype_b_loc@plt+0x810b>
    a5c9:	nop    DWORD PTR [rax+0x0]
    a5d0:	mov    rax,QWORD PTR [rsp+0x548]
    a5d8:	sub    rax,QWORD PTR fs:0x28
    a5e1:	jne    aa86 <__ctype_b_loc@plt+0x81b6>
    a5e7:	add    rsp,0x558
    a5ee:	mov    eax,r12d
    a5f1:	pop    rbx
    a5f2:	pop    rbp
    a5f3:	pop    r12
    a5f5:	pop    r13
    a5f7:	pop    r14
    a5f9:	pop    r15
    a5fb:	ret    
    a5fc:	nop    DWORD PTR [rax+0x0]
    a600:	mov    eax,DWORD PTR [rsp+0x8]
    a604:	mov    rsi,QWORD PTR [rsp+0x48]
    a609:	and    eax,r14d
    a60c:	shl    rax,0x4
    a610:	add    rax,rsi
    a613:	mov    QWORD PTR [rsp+0x40],rax
    a618:	movzx  ecx,BYTE PTR [rax+0x1]
    a61c:	shr    r14,cl
    a61f:	sub    r13d,ecx
    a622:	cmp    BYTE PTR [rax],0x63
    a625:	je     a93a <__ctype_b_loc@plt+0x806a>
    a62b:	movzx  eax,WORD PTR [rax+0x8]
    a62f:	cmp    eax,0xf
    a632:	ja     a708 <__ctype_b_loc@plt+0x7e38>
    a638:	movsxd rcx,r12d
    a63b:	mov    DWORD PTR [rsp+0xc],eax
    a63f:	add    r12d,0x1
    a643:	mov    DWORD PTR [rsp+rcx*4+0x50],eax
    a647:	mov    DWORD PTR [rsp],r12d
    a64b:	cmp    r12d,DWORD PTR [rsp+0x4]
    a650:	jb     a59b <__ctype_b_loc@plt+0x7ccb>
    a656:	mov    rbx,QWORD PTR [rsp+0x48]
    a65b:	mov    eax,r13d
    a65e:	mov    r13,r14
    a661:	mov    r14d,eax
    a664:	test   rbx,rbx
    a667:	je     a682 <__ctype_b_loc@plt+0x7db2>
    a669:	nop    DWORD PTR [rax+0x0]
    a670:	lea    rdi,[rbx-0x10]
    a674:	mov    rbx,QWORD PTR [rbx-0x8]
    a678:	call   24e0 <free@plt>
    a67d:	test   rbx,rbx
    a680:	jne    a670 <__ctype_b_loc@plt+0x7da0>
    a682:	sub    rsp,0x8
    a686:	mov    DWORD PTR [rsp+0x44],0x9
    a68e:	lea    rcx,[rip+0xcbab]        # 17240 <__ctype_b_loc@plt+0x14970>
    a695:	lea    r8,[rip+0xcb64]        # 17200 <__ctype_b_loc@plt+0x14930>
    a69c:	push   QWORD PTR [rsp+0x28]
    a6a0:	mov    esi,DWORD PTR [rsp+0x28]
    a6a4:	mov    edx,0x101
    a6a9:	mov    r9,QWORD PTR [rsp+0x38]
    a6ae:	mov    QWORD PTR [rip+0x22d8b],r13        # 2d440 <__ctype_b_loc@plt+0x2ab70>
    a6b5:	mov    rdi,QWORD PTR [rsp+0x20]
    a6ba:	mov    DWORD PTR [rip+0x22d77],r14d        # 2d438 <__ctype_b_loc@plt+0x2ab68>
    a6c1:	call   4570 <__ctype_b_loc@plt+0x1ca0>
    a6c6:	pop    rcx
    a6c7:	pop    rsi
    a6c8:	mov    r12d,eax
    a6cb:	test   eax,eax
    a6cd:	je     a965 <__ctype_b_loc@plt+0x8095>
    a6d3:	cmp    eax,0x1
    a6d6:	jne    a5d0 <__ctype_b_loc@plt+0x7d00>
    a6dc:	mov    rbx,QWORD PTR [rsp+0x48]
    a6e1:	test   rbx,rbx
    a6e4:	je     a6f8 <__ctype_b_loc@plt+0x7e28>
    a6e6:	lea    rdi,[rbx-0x10]
    a6ea:	mov    rbx,QWORD PTR [rbx-0x8]
    a6ee:	call   24e0 <free@plt>
    a6f3:	test   rbx,rbx
    a6f6:	jne    a6e6 <__ctype_b_loc@plt+0x7e16>
    a6f8:	mov    r12d,0x1
    a6fe:	jmp    a5d0 <__ctype_b_loc@plt+0x7d00>
    a703:	nop    DWORD PTR [rax+rax*1+0x0]
    a708:	cmp    eax,0x10
    a70b:	je     a8a5 <__ctype_b_loc@plt+0x7fd5>
    a711:	cmp    eax,0x11
    a714:	je     a7d8 <__ctype_b_loc@plt+0x7f08>
    a71a:	cmp    r13d,0x6
    a71e:	ja     a74d <__ctype_b_loc@plt+0x7e7d>
    a720:	mov    eax,DWORD PTR [rip+0x63d1e]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a726:	cmp    eax,DWORD PTR [rip+0x63d14]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    a72c:	jae    a7c0 <__ctype_b_loc@plt+0x7ef0>
    a732:	lea    ecx,[rax+0x1]
    a735:	movzx  eax,BYTE PTR [r15+rax*1]
    a73a:	mov    DWORD PTR [rip+0x63d04],ecx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a740:	mov    ecx,r13d
    a743:	add    r13d,0x8
    a747:	shl    rax,cl
    a74a:	or     r14,rax
    a74d:	mov    esi,r14d
    a750:	mov    eax,DWORD PTR [rsp]
    a753:	shr    r14,0x7
    a757:	sub    r13d,0x7
    a75b:	and    esi,0x7f
    a75e:	lea    eax,[rsi+rax*1+0xb]
    a762:	cmp    eax,DWORD PTR [rsp+0x4]
    a766:	ja     a6f8 <__ctype_b_loc@plt+0x7e28>
    a768:	mov    rdi,QWORD PTR [rsp+0x10]
    a76d:	movsxd rcx,r12d
    a770:	lea    eax,[rsi+0xb]
    a773:	lea    r12d,[rsi+r12*1+0xb]
    a778:	shl    rax,0x2
    a77c:	lea    rcx,[rdi+rcx*4]
    a780:	lea    rdi,[rcx+0x8]
    a784:	mov    QWORD PTR [rcx],0x0
    a78b:	mov    QWORD PTR [rax+rcx*1-0x8],0x0
    a794:	and    rdi,0xfffffffffffffff8
    a798:	sub    rcx,rdi
    a79b:	add    ecx,eax
    a79d:	mov    eax,ecx
    a79f:	shr    eax,0x3
    a7a2:	mov    ecx,eax
    a7a4:	xor    eax,eax
    a7a6:	rep stos QWORD PTR es:[rdi],rax
    a7a9:	mov    DWORD PTR [rsp+0xc],0x0
    a7b1:	jmp    a647 <__ctype_b_loc@plt+0x7d77>
    a7b6:	cs nop WORD PTR [rax+rax*1+0x0]
    a7c0:	xor    edi,edi
    a7c2:	mov    DWORD PTR [rip+0xd8038],ebp        # e2800 <__ctype_b_loc@plt+0xdff30>
    a7c8:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    a7cd:	movzx  eax,al
    a7d0:	jmp    a740 <__ctype_b_loc@plt+0x7e70>
    a7d5:	nop    DWORD PTR [rax]
    a7d8:	cmp    r13d,0x2
    a7dc:	ja     a80b <__ctype_b_loc@plt+0x7f3b>
    a7de:	mov    eax,DWORD PTR [rip+0x63c60]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a7e4:	cmp    eax,DWORD PTR [rip+0x63c56]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    a7ea:	jae    a890 <__ctype_b_loc@plt+0x7fc0>
    a7f0:	lea    ecx,[rax+0x1]
    a7f3:	movzx  eax,BYTE PTR [r15+rax*1]
    a7f8:	mov    DWORD PTR [rip+0x63c46],ecx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a7fe:	mov    ecx,r13d
    a801:	add    r13d,0x8
    a805:	shl    rax,cl
    a808:	or     r14,rax
    a80b:	mov    esi,r14d
    a80e:	mov    eax,DWORD PTR [rsp]
    a811:	shr    r14,0x3
    a815:	sub    r13d,0x3
    a819:	and    esi,0x7
    a81c:	lea    eax,[rsi+rax*1+0x3]
    a820:	cmp    eax,DWORD PTR [rsp+0x4]
    a824:	ja     a6f8 <__ctype_b_loc@plt+0x7e28>
    a82a:	mov    rdi,QWORD PTR [rsp+0x10]
    a82f:	movsxd rcx,r12d
    a832:	lea    eax,[rsi+0x3]
    a835:	xor    r9d,r9d
    a838:	shl    rax,0x2
    a83c:	lea    rcx,[rdi+rcx*4]
    a840:	lea    rdi,[rcx+0x8]
    a844:	mov    QWORD PTR [rcx],0x0
    a84b:	mov    QWORD PTR [rax+rcx*1-0x8],0x0
    a854:	and    rdi,0xfffffffffffffff8
    a858:	sub    rcx,rdi
    a85b:	add    eax,ecx
    a85d:	and    eax,0xfffffff8
    a860:	cmp    eax,0x8
    a863:	jb     a877 <__ctype_b_loc@plt+0x7fa7>
    a865:	and    eax,0xfffffff8
    a868:	xor    ecx,ecx
    a86a:	mov    edx,ecx
    a86c:	add    ecx,0x8
    a86f:	mov    QWORD PTR [rdi+rdx*1],r9
    a873:	cmp    ecx,eax
    a875:	jb     a86a <__ctype_b_loc@plt+0x7f9a>
    a877:	mov    DWORD PTR [rsp+0xc],0x0
    a87f:	lea    r12d,[rsi+r12*1+0x3]
    a884:	jmp    a647 <__ctype_b_loc@plt+0x7d77>
    a889:	nop    DWORD PTR [rax+0x0]
    a890:	xor    edi,edi
    a892:	mov    DWORD PTR [rip+0xd7f68],ebp        # e2800 <__ctype_b_loc@plt+0xdff30>
    a898:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    a89d:	movzx  eax,al
    a8a0:	jmp    a7fe <__ctype_b_loc@plt+0x7f2e>
    a8a5:	cmp    r13d,0x1
    a8a9:	ja     a8d4 <__ctype_b_loc@plt+0x8004>
    a8ab:	mov    eax,DWORD PTR [rip+0x63b93]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a8b1:	cmp    eax,DWORD PTR [rip+0x63b89]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    a8b7:	jae    a928 <__ctype_b_loc@plt+0x8058>
    a8b9:	lea    ecx,[rax+0x1]
    a8bc:	movzx  eax,BYTE PTR [r15+rax*1]
    a8c1:	mov    DWORD PTR [rip+0x63b7d],ecx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    a8c7:	mov    ecx,r13d
    a8ca:	add    r13d,0x8
    a8ce:	shl    rax,cl
    a8d1:	or     r14,rax
    a8d4:	mov    esi,r14d
    a8d7:	mov    eax,DWORD PTR [rsp]
    a8da:	shr    r14,0x2
    a8de:	sub    r13d,0x2
    a8e2:	and    esi,0x3
    a8e5:	lea    eax,[rsi+rax*1+0x3]
    a8e9:	cmp    eax,DWORD PTR [rsp+0x4]
    a8ed:	ja     a6f8 <__ctype_b_loc@plt+0x7e28>
    a8f3:	movsxd rdi,r12d
    a8f6:	mov    rax,QWORD PTR [rsp+0x10]
    a8fb:	mov    ecx,esi
    a8fd:	mov    edx,DWORD PTR [rsp+0xc]
    a901:	add    rcx,rdi
    a904:	lea    rax,[rax+rdi*4]
    a908:	lea    rcx,[rsp+rcx*4+0x5c]
    a90d:	nop    DWORD PTR [rax]
    a910:	mov    DWORD PTR [rax],edx
    a912:	add    rax,0x4
    a916:	cmp    rcx,rax
    a919:	jne    a910 <__ctype_b_loc@plt+0x8040>
    a91b:	lea    r12d,[rsi+r12*1+0x3]
    a920:	jmp    a647 <__ctype_b_loc@plt+0x7d77>
    a925:	nop    DWORD PTR [rax]
    a928:	xor    edi,edi
    a92a:	mov    DWORD PTR [rip+0xd7ed0],ebp        # e2800 <__ctype_b_loc@plt+0xdff30>
    a930:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    a935:	movzx  eax,al
    a938:	jmp    a8c7 <__ctype_b_loc@plt+0x7ff7>
    a93a:	test   rsi,rsi
    a93d:	je     a95a <__ctype_b_loc@plt+0x808a>
    a93f:	mov    rbx,rsi
    a942:	nop    WORD PTR [rax+rax*1+0x0]
    a948:	lea    rdi,[rbx-0x10]
    a94c:	mov    rbx,QWORD PTR [rbx-0x8]
    a950:	call   24e0 <free@plt>
    a955:	test   rbx,rbx
    a958:	jne    a948 <__ctype_b_loc@plt+0x8078>
    a95a:	mov    r12d,0x2
    a960:	jmp    a5d0 <__ctype_b_loc@plt+0x7d00>
    a965:	mov    eax,DWORD PTR [rsp+0x18]
    a969:	mov    rsi,QWORD PTR [rsp+0x10]
    a96e:	sub    rsp,0x8
    a972:	xor    edx,edx
    a974:	mov    DWORD PTR [rsp+0x40],0x6
    a97c:	lea    r8,[rip+0xc7fd]        # 17180 <__ctype_b_loc@plt+0x148b0>
    a983:	lea    rcx,[rip+0xc836]        # 171c0 <__ctype_b_loc@plt+0x148f0>
    a98a:	lea    rdi,[rsi+rax*4]
    a98e:	lea    rax,[rsp+0x40]
    a993:	push   rax
    a994:	mov    esi,DWORD PTR [rsp+0x2c]
    a998:	lea    r9,[rsp+0x50]
    a99d:	call   4570 <__ctype_b_loc@plt+0x1ca0>
    a9a2:	mov    r12d,eax
    a9a5:	pop    rax
    a9a6:	pop    rdx
    a9a7:	test   r12d,r12d
    a9aa:	je     aa00 <__ctype_b_loc@plt+0x8130>
    a9ac:	cmp    r12d,0x1
    a9b0:	je     aa61 <__ctype_b_loc@plt+0x8191>
    a9b6:	mov    rbx,QWORD PTR [rsp+0x48]
    a9bb:	test   rbx,rbx
    a9be:	je     a5d0 <__ctype_b_loc@plt+0x7d00>
    a9c4:	lea    rdi,[rbx-0x10]
    a9c8:	mov    rbx,QWORD PTR [rbx-0x8]
    a9cc:	call   24e0 <free@plt>
    a9d1:	test   rbx,rbx
    a9d4:	jne    a9c4 <__ctype_b_loc@plt+0x80f4>
    a9d6:	jmp    a5d0 <__ctype_b_loc@plt+0x7d00>
    a9db:	mov    rbx,QWORD PTR [rsp+0x48]
    a9e0:	test   rbx,rbx
    a9e3:	je     a6f8 <__ctype_b_loc@plt+0x7e28>
    a9e9:	lea    rdi,[rbx-0x10]
    a9ed:	mov    rbx,QWORD PTR [rbx-0x8]
    a9f1:	call   24e0 <free@plt>
    a9f6:	test   rbx,rbx
    a9f9:	jne    a9e9 <__ctype_b_loc@plt+0x8119>
    a9fb:	jmp    a6f8 <__ctype_b_loc@plt+0x7e28>
    aa00:	mov    ecx,DWORD PTR [rsp+0x38]
    aa04:	mov    edx,DWORD PTR [rsp+0x3c]
    aa08:	xor    r12d,r12d
    aa0b:	mov    rsi,QWORD PTR [rsp+0x40]
    aa10:	mov    rdi,QWORD PTR [rsp+0x48]
    aa15:	call   9b70 <__ctype_b_loc@plt+0x72a0>
    aa1a:	mov    rbx,QWORD PTR [rsp+0x48]
    aa1f:	test   eax,eax
    aa21:	setne  r12b
    aa25:	test   rbx,rbx
    aa28:	je     aa3c <__ctype_b_loc@plt+0x816c>
    aa2a:	lea    rdi,[rbx-0x10]
    aa2e:	mov    rbx,QWORD PTR [rbx-0x8]
    aa32:	call   24e0 <free@plt>
    aa37:	test   rbx,rbx
    aa3a:	jne    aa2a <__ctype_b_loc@plt+0x815a>
    aa3c:	mov    rbx,QWORD PTR [rsp+0x40]
    aa41:	test   rbx,rbx
    aa44:	je     a5d0 <__ctype_b_loc@plt+0x7d00>
    aa4a:	lea    rdi,[rbx-0x10]
    aa4e:	mov    rbx,QWORD PTR [rbx-0x8]
    aa52:	call   24e0 <free@plt>
    aa57:	test   rbx,rbx
    aa5a:	jne    aa4a <__ctype_b_loc@plt+0x817a>
    aa5c:	jmp    a5d0 <__ctype_b_loc@plt+0x7d00>
    aa61:	mov    rbx,QWORD PTR [rsp+0x40]
    aa66:	test   rbx,rbx
    aa69:	je     a9b6 <__ctype_b_loc@plt+0x80e6>
    aa6f:	lea    rdi,[rbx-0x10]
    aa73:	mov    rbx,QWORD PTR [rbx-0x8]
    aa77:	call   24e0 <free@plt>
    aa7c:	test   rbx,rbx
    aa7f:	jne    aa6f <__ctype_b_loc@plt+0x819f>
    aa81:	jmp    a9b6 <__ctype_b_loc@plt+0x80e6>
    aa86:	call   2600 <__stack_chk_fail@plt>
    aa8b:	nop    DWORD PTR [rax+rax*1+0x0]
    aa90:	push   rbp
    aa91:	mov    ecx,edi
    aa93:	push   rbx
    aa94:	mov    ebx,edi
    aa96:	sub    rsp,0x8
    aa9a:	movzx  edx,WORD PTR [rip+0xff47]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    aaa1:	mov    eax,DWORD PTR [rip+0xff3d]        # 1a9e4 <__ctype_b_loc@plt+0x18114>
    aaa7:	shl    edx,cl
    aaa9:	mov    ecx,DWORD PTR [rip+0xff31]        # 1a9e0 <__ctype_b_loc@plt+0x18110>
    aaaf:	cmp    edi,ecx
    aab1:	jle    ab30 <__ctype_b_loc@plt+0x8260>
    aab3:	lea    rbp,[rip+0x23546]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    aaba:	jmp    aae8 <__ctype_b_loc@plt+0x8218>
    aabc:	nop    DWORD PTR [rax+0x0]
    aac0:	lea    ecx,[rax+0x1]
    aac3:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    aac8:	mov    DWORD PTR [rip+0x63976],ecx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    aace:	mov    DWORD PTR [rip+0xff10],eax        # 1a9e4 <__ctype_b_loc@plt+0x18114>
    aad4:	mov    DWORD PTR [rip+0xff02],0x8        # 1a9e0 <__ctype_b_loc@plt+0x18110>
    aade:	mov    ecx,0x8
    aae3:	cmp    ebx,0x8
    aae6:	jle    ab30 <__ctype_b_loc@plt+0x8260>
    aae8:	sub    ebx,ecx
    aaea:	mov    ecx,ebx
    aaec:	shl    eax,cl
    aaee:	or     edx,eax
    aaf0:	mov    eax,DWORD PTR [rip+0x6394e]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    aaf6:	cmp    eax,DWORD PTR [rip+0x63944]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    aafc:	mov    WORD PTR [rip+0xfee5],dx        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    ab03:	jb     aac0 <__ctype_b_loc@plt+0x81f0>
    ab05:	mov    edi,0x1
    ab0a:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    ab0f:	mov    DWORD PTR [rip+0xfecf],eax        # 1a9e4 <__ctype_b_loc@plt+0x18114>
    ab15:	cmp    eax,0xffffffff
    ab18:	jne    ab4a <__ctype_b_loc@plt+0x827a>
    ab1a:	mov    DWORD PTR [rip+0xfec0],0x0        # 1a9e4 <__ctype_b_loc@plt+0x18114>
    ab24:	movzx  edx,WORD PTR [rip+0xfebd]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    ab2b:	xor    eax,eax
    ab2d:	jmp    aad4 <__ctype_b_loc@plt+0x8204>
    ab2f:	nop
    ab30:	sub    ecx,ebx
    ab32:	shr    eax,cl
    ab34:	mov    DWORD PTR [rip+0xfea6],ecx        # 1a9e0 <__ctype_b_loc@plt+0x18110>
    ab3a:	or     edx,eax
    ab3c:	mov    WORD PTR [rip+0xfea5],dx        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    ab43:	add    rsp,0x8
    ab47:	pop    rbx
    ab48:	pop    rbp
    ab49:	ret    
    ab4a:	movzx  edx,WORD PTR [rip+0xfe97]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    ab51:	jmp    aad4 <__ctype_b_loc@plt+0x8204>
    ab53:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    ab5e:	xchg   ax,ax
    ab60:	push   r15
    ab62:	push   r14
    ab64:	mov    r14d,0x10
    ab6a:	push   r13
    ab6c:	sub    r14d,esi
    ab6f:	mov    r13d,esi
    ab72:	push   r12
    ab74:	mov    ecx,r14d
    ab77:	push   rbp
    ab78:	push   rbx
    ab79:	mov    ebx,edx
    ab7b:	sub    rsp,0x18
    ab7f:	movzx  ebp,WORD PTR [rip+0xfe62]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    ab86:	mov    DWORD PTR [rsp+0x8],edi
    ab8a:	mov    edi,esi
    ab8c:	sar    ebp,cl
    ab8e:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    ab93:	test   ebp,ebp
    ab95:	je     acf0 <__ctype_b_loc@plt+0x8420>
    ab9b:	lea    eax,[rbx-0x1]
    ab9e:	xor    r14d,r14d
    aba1:	lea    r13,[rip+0xfe18]        # 1a9c0 <__ctype_b_loc@plt+0x180f0>
    aba8:	mov    DWORD PTR [rsp+0xc],eax
    abac:	movsxd rbx,r14d
    abaf:	lea    rax,[rip+0xfe0b]        # 1a9c1 <__ctype_b_loc@plt+0x180f1>
    abb6:	lea    r15,[r13+rbx*1+0x0]
    abbb:	add    rbx,rax
    abbe:	mov    eax,DWORD PTR [rsp+0xc]
    abc2:	sub    eax,r14d
    abc5:	add    rbx,rax
    abc8:	jmp    abea <__ctype_b_loc@plt+0x831a>
    abca:	nop    WORD PTR [rax+rax*1+0x0]
    abd0:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    abd5:	add    r15,0x1
    abd9:	mov    BYTE PTR [r15-0x1],r12b
    abdd:	add    r14d,0x1
    abe1:	cmp    r15,rbx
    abe4:	je     aca0 <__ctype_b_loc@plt+0x83d0>
    abea:	cmp    r14d,ebp
    abed:	jge    ac50 <__ctype_b_loc@plt+0x8380>
    abef:	movzx  r8d,WORD PTR [rip+0xfdf1]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    abf7:	mov    edi,0x3
    abfc:	mov    edx,r8d
    abff:	shr    dx,0xd
    ac03:	mov    r12d,edx
    ac06:	cmp    dx,0x7
    ac0a:	jne    abd0 <__ctype_b_loc@plt+0x8300>
    ac0c:	movzx  r9d,r8w
    ac10:	test   r8w,0x1000
    ac16:	je     ace0 <__ctype_b_loc@plt+0x8410>
    ac1c:	mov    edx,0x1000
    ac21:	mov    eax,0x7
    ac26:	cs nop WORD PTR [rax+rax*1+0x0]
    ac30:	shr    edx,1
    ac32:	mov    edi,eax
    ac34:	add    eax,0x1
    ac37:	test   edx,r9d
    ac3a:	jne    ac30 <__ctype_b_loc@plt+0x8360>
    ac3c:	cmp    eax,0x10
    ac3f:	jg     ad83 <__ctype_b_loc@plt+0x84b3>
    ac45:	sub    edi,0x2
    ac48:	mov    r12d,eax
    ac4b:	jmp    abd0 <__ctype_b_loc@plt+0x8300>
    ac4d:	nop    DWORD PTR [rax]
    ac50:	cmp    r14d,DWORD PTR [rsp+0x8]
    ac55:	jge    ac74 <__ctype_b_loc@plt+0x83a4>
    ac57:	mov    eax,DWORD PTR [rsp+0x8]
    ac5b:	movsxd rsi,r14d
    ac5e:	lea    rdi,[r13+rsi*1+0x0]
    ac63:	xor    esi,esi
    ac65:	lea    edx,[rax-0x1]
    ac68:	sub    edx,r14d
    ac6b:	add    rdx,0x1
    ac6f:	call   2640 <memset@plt>
    ac74:	mov    edi,DWORD PTR [rsp+0x8]
    ac78:	add    rsp,0x18
    ac7c:	mov    rsi,r13
    ac7f:	lea    rcx,[rip+0xfb3a]        # 1a7c0 <__ctype_b_loc@plt+0x17ef0>
    ac86:	pop    rbx
    ac87:	mov    edx,0x8
    ac8c:	pop    rbp
    ac8d:	pop    r12
    ac8f:	pop    r13
    ac91:	pop    r14
    ac93:	pop    r15
    ac95:	jmp    7320 <__ctype_b_loc@plt+0x4a50>
    ac9a:	nop    WORD PTR [rax+rax*1+0x0]
    aca0:	movzx  ebx,WORD PTR [rip+0xfd41]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    aca7:	mov    edi,0x2
    acac:	sar    ebx,0xe
    acaf:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    acb4:	test   ebx,ebx
    acb6:	je     abac <__ctype_b_loc@plt+0x82dc>
    acbc:	movsxd rdx,r14d
    acbf:	xor    eax,eax
    acc1:	add    rdx,r13
    acc4:	mov    ecx,eax
    acc6:	add    eax,0x1
    acc9:	mov    BYTE PTR [rdx+rcx*1],0x0
    accd:	cmp    eax,ebx
    accf:	jb     acc4 <__ctype_b_loc@plt+0x83f4>
    acd1:	add    r14d,ebx
    acd4:	jmp    abac <__ctype_b_loc@plt+0x82dc>
    acd9:	nop    DWORD PTR [rax+0x0]
    ace0:	mov    r12d,0x7
    ace6:	mov    edi,0x4
    aceb:	jmp    abd0 <__ctype_b_loc@plt+0x8300>
    acf0:	movzx  edx,WORD PTR [rip+0xfcf1]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    acf7:	mov    ecx,r14d
    acfa:	mov    edi,r13d
    acfd:	mov    ebx,edx
    acff:	sar    ebx,cl
    ad01:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    ad06:	mov    esi,DWORD PTR [rsp+0x8]
    ad0a:	xor    edi,edi
    ad0c:	xor    eax,eax
    ad0e:	lea    rdx,[rip+0xfcab]        # 1a9c0 <__ctype_b_loc@plt+0x180f0>
    ad15:	and    esi,0xfffffff8
    ad18:	mov    ecx,eax
    ad1a:	add    eax,0x8
    ad1d:	mov    QWORD PTR [rdx+rcx*1],rdi
    ad21:	cmp    eax,esi
    ad23:	jb     ad18 <__ctype_b_loc@plt+0x8448>
    ad25:	add    rdx,rax
    ad28:	test   BYTE PTR [rsp+0x8],0x4
    ad2d:	je     ad39 <__ctype_b_loc@plt+0x8469>
    ad2f:	mov    DWORD PTR [rdx],0x0
    ad35:	add    rdx,0x4
    ad39:	test   BYTE PTR [rsp+0x8],0x2
    ad3e:	je     ad4a <__ctype_b_loc@plt+0x847a>
    ad40:	xor    eax,eax
    ad42:	add    rdx,0x2
    ad46:	mov    WORD PTR [rdx-0x2],ax
    ad4a:	test   BYTE PTR [rsp+0x8],0x1
    ad4f:	je     ad54 <__ctype_b_loc@plt+0x8484>
    ad51:	mov    BYTE PTR [rdx],0x0
    ad54:	lea    rax,[rip+0xfa65]        # 1a7c0 <__ctype_b_loc@plt+0x17ef0>
    ad5b:	mov    edx,ebx
    ad5d:	lea    rcx,[rax+0x200]
    ad64:	nop    DWORD PTR [rax+0x0]
    ad68:	mov    WORD PTR [rax],dx
    ad6b:	add    rax,0x2
    ad6f:	cmp    rcx,rax
    ad72:	jne    ad68 <__ctype_b_loc@plt+0x8498>
    ad74:	add    rsp,0x18
    ad78:	pop    rbx
    ad79:	pop    rbp
    ad7a:	pop    r12
    ad7c:	pop    r13
    ad7e:	pop    r14
    ad80:	pop    r15
    ad82:	ret    
    ad83:	lea    rdi,[rip+0x628e]        # 11018 <__ctype_b_loc@plt+0xe748>
    ad8a:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    ad8f:	nop
    ad90:	endbr64 
    ad94:	push   r15
    ad96:	xor    r9d,r9d
    ad99:	lea    r15,[rip+0x85260]        # 90000 <__ctype_b_loc@plt+0x8d730>
    ada0:	push   r14
    ada2:	push   r13
    ada4:	push   r12
    ada6:	push   rbp
    ada7:	push   rbx
    ada8:	lea    rbx,[rip+0x640d1]        # 6ee80 <__ctype_b_loc@plt+0x6c5b0>
    adaf:	sub    rsp,0x28
    adb3:	mov    DWORD PTR [rip+0x636af],edi        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    adb9:	mov    edi,0x10
    adbe:	mov    DWORD PTR [rsp+0x18],esi
    adc2:	mov    DWORD PTR [rip+0x2268c],esi        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    adc8:	mov    WORD PTR [rip+0xfc18],r9w        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    add0:	mov    DWORD PTR [rip+0xfc0a],0x0        # 1a9e4 <__ctype_b_loc@plt+0x18114>
    adda:	mov    DWORD PTR [rip+0xfbfc],0x0        # 1a9e0 <__ctype_b_loc@plt+0x18110>
    ade4:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    ade9:	xor    ecx,ecx
    adeb:	mov    DWORD PTR [rip+0xf9b3],0x0        # 1a7a8 <__ctype_b_loc@plt+0x17ed8>
    adf5:	mov    DWORD PTR [rip+0xf9a1],0x0        # 1a7a0 <__ctype_b_loc@plt+0x17ed0>
    adff:	nop
    ae00:	mov    eax,DWORD PTR [rip+0xf996]        # 1a79c <__ctype_b_loc@plt+0x17ecc>
    ae06:	xor    edx,edx
    ae08:	xor    esi,esi
    ae0a:	jmp    ae39 <__ctype_b_loc@plt+0x8569>
    ae0c:	nop    DWORD PTR [rax+0x0]
    ae10:	mov    esi,eax
    ae12:	add    eax,0x1
    ae15:	movzx  esi,BYTE PTR [r15+rsi*1]
    ae1a:	and    eax,0x1fff
    ae1f:	mov    BYTE PTR [r15+rdx*1],sil
    ae23:	add    rdx,0x1
    ae27:	mov    esi,0x1
    ae2c:	cmp    rdx,0x2000
    ae33:	je     b230 <__ctype_b_loc@plt+0x8960>
    ae39:	mov    r14d,edx
    ae3c:	sub    ecx,0x1
    ae3f:	jns    ae10 <__ctype_b_loc@plt+0x8540>
    ae41:	mov    DWORD PTR [rip+0xf95d],ecx        # 1a7a4 <__ctype_b_loc@plt+0x17ed4>
    ae47:	test   sil,sil
    ae4a:	je     ae52 <__ctype_b_loc@plt+0x8582>
    ae4c:	mov    DWORD PTR [rip+0xf94a],eax        # 1a79c <__ctype_b_loc@plt+0x17ecc>
    ae52:	lea    rbp,[rip+0x971a7]        # a2000 <__ctype_b_loc@plt+0x9f730>
    ae59:	nop    DWORD PTR [rax+0x0]
    ae60:	mov    eax,DWORD PTR [rip+0xf942]        # 1a7a8 <__ctype_b_loc@plt+0x17ed8>
    ae66:	movzx  edx,WORD PTR [rip+0xfb7b]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    ae6d:	test   eax,eax
    ae6f:	je     af30 <__ctype_b_loc@plt+0x8660>
    ae75:	sub    eax,0x1
    ae78:	lea    rdi,[rip+0x10c81]        # 1bb00 <__ctype_b_loc@plt+0x19230>
    ae7f:	mov    DWORD PTR [rip+0xf923],eax        # 1a7a8 <__ctype_b_loc@plt+0x17ed8>
    ae85:	mov    eax,edx
    ae87:	shr    ax,0x4
    ae8b:	and    eax,0xfff
    ae90:	movzx  r12d,WORD PTR [rdi+rax*2]
    ae95:	cmp    r12d,0x1fd
    ae9c:	jbe    aed3 <__ctype_b_loc@plt+0x8603>
    ae9e:	mov    eax,0x8
    aea3:	jmp    aebf <__ctype_b_loc@plt+0x85ef>
    aea5:	nop    DWORD PTR [rax]
    aea8:	add    r12d,0x8000
    aeaf:	shr    eax,1
    aeb1:	movzx  r12d,WORD PTR [rbx+r12*2]
    aeb6:	cmp    r12d,0x1fd
    aebd:	jbe    aed3 <__ctype_b_loc@plt+0x8603>
    aebf:	test   eax,edx
    aec1:	jne    aea8 <__ctype_b_loc@plt+0x85d8>
    aec3:	movzx  r12d,WORD PTR [rbx+r12*2]
    aec8:	shr    eax,1
    aeca:	cmp    r12d,0x1fd
    aed1:	ja     aebf <__ctype_b_loc@plt+0x85ef>
    aed3:	mov    eax,r12d
    aed6:	movzx  edi,BYTE PTR [rbp+rax*1+0x0]
    aedb:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    aee0:	cmp    r12d,0xff
    aee7:	ja     b140 <__ctype_b_loc@plt+0x8870>
    aeed:	mov    eax,r14d
    aef0:	add    r14d,0x1
    aef4:	mov    BYTE PTR [r15+rax*1],r12b
    aef8:	cmp    r14d,0x2000
    aeff:	jne    ae60 <__ctype_b_loc@plt+0x8590>
    af05:	mov    eax,DWORD PTR [rip+0x63edd]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    af0b:	test   eax,eax
    af0d:	je     b24a <__ctype_b_loc@plt+0x897a>
    af13:	mov    edx,DWORD PTR [rip+0xf887]        # 1a7a0 <__ctype_b_loc@plt+0x17ed0>
    af19:	test   edx,edx
    af1b:	jne    b2b2 <__ctype_b_loc@plt+0x89e2>
    af21:	mov    ecx,DWORD PTR [rip+0xf87d]        # 1a7a4 <__ctype_b_loc@plt+0x17ed4>
    af27:	jmp    ae00 <__ctype_b_loc@plt+0x8530>
    af2c:	nop    DWORD PTR [rax+0x0]
    af30:	movzx  r12d,dx
    af34:	mov    edi,0x10
    af39:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    af3e:	mov    DWORD PTR [rip+0xf863],r12d        # 1a7a8 <__ctype_b_loc@plt+0x17ed8>
    af45:	test   r12d,r12d
    af48:	je     b298 <__ctype_b_loc@plt+0x89c8>
    af4e:	mov    edx,0x3
    af53:	mov    esi,0x5
    af58:	mov    edi,0x13
    af5d:	xor    r12d,r12d
    af60:	call   ab60 <__ctype_b_loc@plt+0x8290>
    af65:	movzx  eax,WORD PTR [rip+0xfa7c]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    af6c:	mov    edi,0x9
    af71:	sar    eax,0x7
    af74:	mov    DWORD PTR [rsp+0x4],eax
    af78:	mov    r13d,eax
    af7b:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    af80:	lea    rax,[rip+0xf839]        # 1a7c0 <__ctype_b_loc@plt+0x17ef0>
    af87:	mov    QWORD PTR [rsp+0x10],rax
    af8c:	lea    rax,[rip+0xfa2d]        # 1a9c0 <__ctype_b_loc@plt+0x180f0>
    af93:	mov    QWORD PTR [rsp+0x8],rax
    af98:	test   r13d,r13d
    af9b:	jne    afd9 <__ctype_b_loc@plt+0x8709>
    af9d:	jmp    b2d9 <__ctype_b_loc@plt+0x8a09>
    afa2:	nop    WORD PTR [rax+rax*1+0x0]
    afa8:	mov    rdi,QWORD PTR [rsp+0x8]
    afad:	movsxd rax,r13d
    afb0:	movzx  edi,BYTE PTR [rdi+rax*1]
    afb4:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    afb9:	cmp    r13d,0x2
    afbd:	jle    b028 <__ctype_b_loc@plt+0x8758>
    afbf:	movsxd rax,r12d
    afc2:	lea    edx,[r13-0x2]
    afc6:	add    r12d,0x1
    afca:	mov    BYTE PTR [rbp+rax*1+0x0],dl
    afce:	cmp    DWORD PTR [rsp+0x4],r12d
    afd3:	jle    b093 <__ctype_b_loc@plt+0x87c3>
    afd9:	movzx  ecx,WORD PTR [rip+0xfa08]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    afe0:	mov    rdi,QWORD PTR [rsp+0x10]
    afe5:	mov    eax,ecx
    afe7:	shr    ax,0x8
    afeb:	movzx  eax,al
    afee:	movzx  r13d,WORD PTR [rdi+rax*2]
    aff3:	cmp    r13d,0x12
    aff7:	jle    afa8 <__ctype_b_loc@plt+0x86d8>
    aff9:	mov    eax,0x80
    affe:	jmp    b017 <__ctype_b_loc@plt+0x8747>
    b000:	lea    edx,[r13+0x8000]
    b007:	movsxd rdx,edx
    b00a:	movzx  r13d,WORD PTR [rbx+rdx*2]
    b00f:	shr    eax,1
    b011:	cmp    r13d,0x12
    b015:	jle    afa8 <__ctype_b_loc@plt+0x86d8>
    b017:	test   eax,ecx
    b019:	jne    b000 <__ctype_b_loc@plt+0x8730>
    b01b:	movsxd rdx,r13d
    b01e:	movzx  r13d,WORD PTR [rbx+rdx*2]
    b023:	jmp    b00f <__ctype_b_loc@plt+0x873f>
    b025:	nop    DWORD PTR [rax]
    b028:	test   r13d,r13d
    b02b:	je     b057 <__ctype_b_loc@plt+0x8787>
    b02d:	movzx  eax,WORD PTR [rip+0xf9b4]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    b034:	mov    DWORD PTR [rsp+0x1c],eax
    b038:	cmp    r13d,0x1
    b03c:	je     b370 <__ctype_b_loc@plt+0x8aa0>
    b042:	mov    edi,0x9
    b047:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    b04c:	mov    eax,DWORD PTR [rsp+0x1c]
    b050:	sar    eax,0x7
    b053:	lea    r13d,[rax+0x13]
    b057:	movsxd rax,r12d
    b05a:	lea    ecx,[r13+0x1]
    b05e:	add    rax,rbp
    b061:	cmp    ecx,0x8
    b064:	jae    b110 <__ctype_b_loc@plt+0x8840>
    b06a:	test   cl,0x4
    b06d:	jne    b3bc <__ctype_b_loc@plt+0x8aec>
    b073:	test   ecx,ecx
    b075:	je     b083 <__ctype_b_loc@plt+0x87b3>
    b077:	mov    BYTE PTR [rax],0x0
    b07a:	test   cl,0x2
    b07d:	jne    b3cf <__ctype_b_loc@plt+0x8aff>
    b083:	lea    r12d,[r13+r12*1+0x1]
    b088:	cmp    DWORD PTR [rsp+0x4],r12d
    b08d:	jg     afd9 <__ctype_b_loc@plt+0x8709>
    b093:	cmp    r12d,0x1fd
    b09a:	jg     b0d0 <__ctype_b_loc@plt+0x8800>
    b09c:	mov    eax,0x1fe
    b0a1:	movsxd rsi,r12d
    b0a4:	sub    eax,r12d
    b0a7:	add    rsi,rbp
    b0aa:	cmp    eax,0x8
    b0ad:	jae    b332 <__ctype_b_loc@plt+0x8a62>
    b0b3:	test   al,0x4
    b0b5:	jne    b3db <__ctype_b_loc@plt+0x8b0b>
    b0bb:	test   eax,eax
    b0bd:	je     b0d0 <__ctype_b_loc@plt+0x8800>
    b0bf:	mov    BYTE PTR [rsi],0x0
    b0c2:	test   al,0x2
    b0c4:	jne    b3ee <__ctype_b_loc@plt+0x8b1e>
    b0ca:	nop    WORD PTR [rax+rax*1+0x0]
    b0d0:	lea    rcx,[rip+0x10a29]        # 1bb00 <__ctype_b_loc@plt+0x19230>
    b0d7:	mov    edx,0xc
    b0dc:	mov    rsi,rbp
    b0df:	mov    edi,0x1fe
    b0e4:	call   7320 <__ctype_b_loc@plt+0x4a50>
    b0e9:	mov    edx,0xffffffff
    b0ee:	mov    esi,0x4
    b0f3:	mov    edi,0xe
    b0f8:	call   ab60 <__ctype_b_loc@plt+0x8290>
    b0fd:	mov    eax,DWORD PTR [rip+0xf6a5]        # 1a7a8 <__ctype_b_loc@plt+0x17ed8>
    b103:	movzx  edx,WORD PTR [rip+0xf8de]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    b10a:	jmp    ae75 <__ctype_b_loc@plt+0x85a5>
    b10f:	nop
    b110:	mov    edi,ecx
    b112:	mov    QWORD PTR [rax],0x0
    b119:	mov    QWORD PTR [rax+rdi*1-0x8],0x0
    b122:	lea    rdi,[rax+0x8]
    b126:	and    rdi,0xfffffffffffffff8
    b12a:	sub    rax,rdi
    b12d:	add    ecx,eax
    b12f:	xor    eax,eax
    b131:	shr    ecx,0x3
    b134:	rep stos QWORD PTR es:[rdi],rax
    b137:	jmp    b083 <__ctype_b_loc@plt+0x87b3>
    b13c:	nop    DWORD PTR [rax+0x0]
    b140:	movzx  edx,WORD PTR [rip+0xf8a1]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    b147:	lea    rdi,[rip+0xf672]        # 1a7c0 <__ctype_b_loc@plt+0x17ef0>
    b14e:	sub    r12d,0xfd
    b155:	mov    DWORD PTR [rip+0xf648],r12d        # 1a7a4 <__ctype_b_loc@plt+0x17ed4>
    b15c:	mov    eax,edx
    b15e:	shr    ax,0x8
    b162:	movzx  eax,al
    b165:	movzx  r13d,WORD PTR [rdi+rax*2]
    b16a:	cmp    r13d,0xd
    b16e:	jbe    b1a5 <__ctype_b_loc@plt+0x88d5>
    b170:	mov    eax,0x80
    b175:	jmp    b194 <__ctype_b_loc@plt+0x88c4>
    b177:	nop    WORD PTR [rax+rax*1+0x0]
    b180:	lea    ecx,[r13+0x8000]
    b187:	shr    eax,1
    b189:	movzx  r13d,WORD PTR [rbx+rcx*2]
    b18e:	cmp    r13d,0xd
    b192:	jbe    b1a5 <__ctype_b_loc@plt+0x88d5>
    b194:	test   eax,edx
    b196:	jne    b180 <__ctype_b_loc@plt+0x88b0>
    b198:	movzx  r13d,WORD PTR [rbx+r13*2]
    b19d:	shr    eax,1
    b19f:	cmp    r13d,0xd
    b1a3:	ja     b194 <__ctype_b_loc@plt+0x88c4>
    b1a5:	lea    rax,[rip+0xf814]        # 1a9c0 <__ctype_b_loc@plt+0x180f0>
    b1ac:	mov    rsi,rax
    b1af:	mov    eax,r13d
    b1b2:	movzx  edi,BYTE PTR [rsi+rax*1]
    b1b6:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    b1bb:	test   r13d,r13d
    b1be:	jne    b38a <__ctype_b_loc@plt+0x8aba>
    b1c4:	lea    eax,[r14-0x1]
    b1c8:	mov    edx,DWORD PTR [rip+0xf5d6]        # 1a7a4 <__ctype_b_loc@plt+0x17ed4>
    b1ce:	xor    ecx,ecx
    b1d0:	sub    eax,r13d
    b1d3:	and    eax,0x1fff
    b1d8:	mov    DWORD PTR [rip+0xf5be],eax        # 1a79c <__ctype_b_loc@plt+0x17ecc>
    b1de:	jmp    b20c <__ctype_b_loc@plt+0x893c>
    b1e0:	mov    ecx,eax
    b1e2:	add    eax,0x1
    b1e5:	movzx  esi,BYTE PTR [r15+rcx*1]
    b1ea:	mov    ecx,r14d
    b1ed:	add    r14d,0x1
    b1f1:	and    eax,0x1fff
    b1f6:	mov    BYTE PTR [r15+rcx*1],sil
    b1fa:	mov    ecx,0x1
    b1ff:	cmp    r14d,0x2000
    b206:	je     b2c8 <__ctype_b_loc@plt+0x89f8>
    b20c:	sub    edx,0x1
    b20f:	jns    b1e0 <__ctype_b_loc@plt+0x8910>
    b211:	mov    DWORD PTR [rip+0xf58d],edx        # 1a7a4 <__ctype_b_loc@plt+0x17ed4>
    b217:	test   cl,cl
    b219:	je     ae60 <__ctype_b_loc@plt+0x8590>
    b21f:	mov    DWORD PTR [rip+0xf577],eax        # 1a79c <__ctype_b_loc@plt+0x17ecc>
    b225:	jmp    ae60 <__ctype_b_loc@plt+0x8590>
    b22a:	nop    WORD PTR [rax+rax*1+0x0]
    b230:	mov    DWORD PTR [rip+0xf566],eax        # 1a79c <__ctype_b_loc@plt+0x17ecc>
    b236:	mov    eax,DWORD PTR [rip+0x63bac]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    b23c:	mov    DWORD PTR [rip+0xf562],ecx        # 1a7a4 <__ctype_b_loc@plt+0x17ed4>
    b242:	test   eax,eax
    b244:	jne    af13 <__ctype_b_loc@plt+0x8643>
    b24a:	mov    r14d,0x2000
    b250:	lea    rbp,[rip+0x84da9]        # 90000 <__ctype_b_loc@plt+0x8d730>
    b257:	jmp    b268 <__ctype_b_loc@plt+0x8998>
    b259:	nop    DWORD PTR [rax+0x0]
    b260:	sub    r14d,eax
    b263:	mov    eax,eax
    b265:	add    rbp,rax
    b268:	mov    edx,0x7fffffff
    b26d:	mov    edi,DWORD PTR [rsp+0x18]
    b271:	mov    rsi,rbp
    b274:	cmp    r14d,edx
    b277:	cmovbe rdx,r14
    b27b:	call   25c0 <write@plt>
    b280:	cmp    eax,r14d
    b283:	je     af13 <__ctype_b_loc@plt+0x8643>
    b289:	cmp    eax,0xffffffff
    b28c:	jne    b260 <__ctype_b_loc@plt+0x8990>
    b28e:	call   7750 <__ctype_b_loc@plt+0x4e80>
    b293:	nop    DWORD PTR [rax+rax*1+0x0]
    b298:	mov    r8d,DWORD PTR [rip+0x63b49]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    b29f:	mov    DWORD PTR [rip+0xf4f7],0x1        # 1a7a0 <__ctype_b_loc@plt+0x17ed0>
    b2a9:	test   r8d,r8d
    b2ac:	je     b360 <__ctype_b_loc@plt+0x8a90>
    b2b2:	add    rsp,0x28
    b2b6:	xor    eax,eax
    b2b8:	pop    rbx
    b2b9:	pop    rbp
    b2ba:	pop    r12
    b2bc:	pop    r13
    b2be:	pop    r14
    b2c0:	pop    r15
    b2c2:	ret    
    b2c3:	nop    DWORD PTR [rax+rax*1+0x0]
    b2c8:	mov    DWORD PTR [rip+0xf4d6],edx        # 1a7a4 <__ctype_b_loc@plt+0x17ed4>
    b2ce:	mov    DWORD PTR [rip+0xf4c8],eax        # 1a79c <__ctype_b_loc@plt+0x17ecc>
    b2d4:	jmp    af05 <__ctype_b_loc@plt+0x8635>
    b2d9:	mov    edi,0x9
    b2de:	movzx  r12d,WORD PTR [rip+0xf702]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    b2e6:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    b2eb:	xor    eax,eax
    b2ed:	mov    ecx,0x3f
    b2f2:	mov    rdi,rbp
    b2f5:	rep stos QWORD PTR es:[rdi],rax
    b2f8:	lea    rax,[rip+0x10801]        # 1bb00 <__ctype_b_loc@plt+0x19230>
    b2ff:	sar    r12d,0x7
    b303:	lea    rdx,[rax+0x2000]
    b30a:	mov    DWORD PTR [rdi],0x0
    b310:	xor    edi,edi
    b312:	mov    WORD PTR [rip+0x96ee3],di        # a21fc <__ctype_b_loc@plt+0x9f92c>
    b319:	nop    DWORD PTR [rax+0x0]
    b320:	mov    WORD PTR [rax],r12w
    b324:	add    rax,0x2
    b328:	cmp    rax,rdx
    b32b:	jne    b320 <__ctype_b_loc@plt+0x8a50>
    b32d:	jmp    b0e9 <__ctype_b_loc@plt+0x8819>
    b332:	lea    rdi,[rsi+0x8]
    b336:	mov    edx,eax
    b338:	mov    QWORD PTR [rsi],0x0
    b33f:	mov    QWORD PTR [rsi+rdx*1-0x8],0x0
    b348:	and    rdi,0xfffffffffffffff8
    b34c:	sub    rsi,rdi
    b34f:	add    eax,esi
    b351:	shr    eax,0x3
    b354:	mov    ecx,eax
    b356:	xor    eax,eax
    b358:	rep stos QWORD PTR es:[rdi],rax
    b35b:	jmp    b0d0 <__ctype_b_loc@plt+0x8800>
    b360:	test   r14d,r14d
    b363:	je     b2b2 <__ctype_b_loc@plt+0x89e2>
    b369:	jmp    b250 <__ctype_b_loc@plt+0x8980>
    b36e:	xchg   ax,ax
    b370:	mov    edi,0x4
    b375:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    b37a:	mov    edx,DWORD PTR [rsp+0x1c]
    b37e:	sar    edx,0xc
    b381:	lea    r13d,[rdx+0x2]
    b385:	jmp    b057 <__ctype_b_loc@plt+0x8787>
    b38a:	sub    r13d,0x1
    b38e:	movzx  r12d,WORD PTR [rip+0xf652]        # 1a9e8 <__ctype_b_loc@plt+0x18118>
    b396:	mov    ecx,0x10
    b39b:	sub    ecx,r13d
    b39e:	mov    edi,r13d
    b3a1:	sar    r12d,cl
    b3a4:	call   aa90 <__ctype_b_loc@plt+0x81c0>
    b3a9:	mov    ecx,r13d
    b3ac:	mov    eax,0x1
    b3b1:	shl    eax,cl
    b3b3:	lea    r13d,[rax+r12*1]
    b3b7:	jmp    b1c4 <__ctype_b_loc@plt+0x88f4>
    b3bc:	mov    DWORD PTR [rax],0x0
    b3c2:	mov    DWORD PTR [rax+rcx*1-0x4],0x0
    b3ca:	jmp    b083 <__ctype_b_loc@plt+0x87b3>
    b3cf:	xor    esi,esi
    b3d1:	mov    WORD PTR [rax+rcx*1-0x2],si
    b3d6:	jmp    b083 <__ctype_b_loc@plt+0x87b3>
    b3db:	mov    DWORD PTR [rsi],0x0
    b3e1:	mov    DWORD PTR [rsi+rax*1-0x4],0x0
    b3e9:	jmp    b0d0 <__ctype_b_loc@plt+0x8800>
    b3ee:	xor    ecx,ecx
    b3f0:	mov    WORD PTR [rsi+rax*1-0x2],cx
    b3f5:	jmp    b0d0 <__ctype_b_loc@plt+0x8800>
    b3fa:	nop    WORD PTR [rax+rax*1+0x0]
    b400:	endbr64 
    b404:	push   r15
    b406:	xor    eax,eax
    b408:	push   r14
    b40a:	push   r13
    b40c:	push   r12
    b40e:	lea    r12,[rip+0x22beb]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    b415:	push   rbp
    b416:	mov    ebp,0x4
    b41b:	push   rbx
    b41c:	sub    rsp,0x18
    b420:	mov    DWORD PTR [rip+0x63042],edi        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    b426:	mov    edx,DWORD PTR [rip+0x63018]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    b42c:	mov    QWORD PTR [rip+0xf0e1],0x0        # 1a518 <__ctype_b_loc@plt+0x17c48>
    b437:	mov    DWORD PTR [rip+0x22017],esi        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    b43d:	mov    esi,DWORD PTR [rip+0x62ffd]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    b443:	shl    rax,0x8
    b447:	mov    rbx,rax
    b44a:	cmp    edx,esi
    b44c:	jae    b521 <__ctype_b_loc@plt+0x8c51>
    b452:	lea    ecx,[rdx+0x1]
    b455:	movzx  eax,BYTE PTR [r12+rdx*1]
    b45a:	mov    DWORD PTR [rip+0x62fe4],ecx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    b460:	mov    edx,ecx
    b462:	movzx  eax,al
    b465:	or     rax,rbx
    b468:	mov    QWORD PTR [rip+0xf0a9],rax        # 1a518 <__ctype_b_loc@plt+0x17c48>
    b46f:	sub    ebp,0x1
    b472:	jne    b443 <__ctype_b_loc@plt+0x8b73>
    b474:	cmp    edx,esi
    b476:	jae    b94f <__ctype_b_loc@plt+0x907f>
    b47c:	lea    eax,[rdx+0x1]
    b47f:	mov    DWORD PTR [rip+0x62fbf],eax        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    b485:	lea    rax,[rip+0x22b74]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    b48c:	movzx  eax,BYTE PTR [rax+rdx*1]
    b490:	mov    DWORD PTR [rip+0xf2f2],eax        # 1a788 <__ctype_b_loc@plt+0x17eb8>
    b496:	sub    eax,0x1
    b499:	cmp    eax,0x18
    b49c:	ja     b978 <__ctype_b_loc@plt+0x90a8>
    b4a2:	mov    r12d,0x1
    b4a8:	xor    r13d,r13d
    b4ab:	mov    ebp,0x1
    b4b0:	lea    r14,[rip+0x22b49]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    b4b7:	lea    rbx,[rip+0xf262]        # 1a720 <__ctype_b_loc@plt+0x17e50>
    b4be:	jmp    b4ff <__ctype_b_loc@plt+0x8c2f>
    b4c0:	lea    edx,[rax+0x1]
    b4c3:	movzx  eax,BYTE PTR [r14+rax*1]
    b4c8:	mov    DWORD PTR [rip+0x62f76],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    b4ce:	mov    r8d,DWORD PTR [rip+0xf2b3]        # 1a788 <__ctype_b_loc@plt+0x17eb8>
    b4d5:	xor    ecx,ecx
    b4d7:	mov    edx,ebp
    b4d9:	mov    DWORD PTR [rbx+r12*4],eax
    b4dd:	cmp    r8d,r12d
    b4e0:	sete   cl
    b4e3:	sub    edx,ecx
    b4e5:	cmp    edx,eax
    b4e7:	jl     b990 <__ctype_b_loc@plt+0x90c0>
    b4ed:	sub    ebp,eax
    b4ef:	add    r12,0x1
    b4f3:	add    r13d,eax
    b4f6:	lea    ebp,[rbp+rbp*1+0x1]
    b4fa:	cmp    r8d,r12d
    b4fd:	jl     b541 <__ctype_b_loc@plt+0x8c71>
    b4ff:	mov    eax,DWORD PTR [rip+0x62f3f]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    b505:	cmp    eax,DWORD PTR [rip+0x62f35]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    b50b:	jb     b4c0 <__ctype_b_loc@plt+0x8bf0>
    b50d:	xor    edi,edi
    b50f:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    b514:	test   eax,eax
    b516:	js     b8d7 <__ctype_b_loc@plt+0x9007>
    b51c:	movzx  eax,al
    b51f:	jmp    b4ce <__ctype_b_loc@plt+0x8bfe>
    b521:	xor    edi,edi
    b523:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    b528:	test   eax,eax
    b52a:	js     b8d7 <__ctype_b_loc@plt+0x9007>
    b530:	mov    edx,DWORD PTR [rip+0x62f0e]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    b536:	mov    esi,DWORD PTR [rip+0x62f04]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    b53c:	jmp    b462 <__ctype_b_loc@plt+0x8b92>
    b541:	cmp    r13d,0xff
    b548:	jg     b990 <__ctype_b_loc@plt+0x90c0>
    b54e:	movsxd rax,r8d
    b551:	mov    edx,DWORD PTR [rbx+rax*4]
    b554:	lea    ecx,[rdx+0x1]
    b557:	mov    DWORD PTR [rbx+rax*4],ecx
    b55a:	test   r8d,r8d
    b55d:	jle    b966 <__ctype_b_loc@plt+0x9096>
    b563:	mov    r15d,0x1
    b569:	xor    r13d,r13d
    b56c:	lea    rcx,[rip+0x22a8d]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    b573:	lea    rbp,[rip+0xefa5]        # 1a51f <__ctype_b_loc@plt+0x17c4f>
    b57a:	nop    WORD PTR [rax+rax*1+0x0]
    b580:	lea    rax,[rip+0xf099]        # 1a620 <__ctype_b_loc@plt+0x17d50>
    b587:	mov    DWORD PTR [rax+r15*4],r13d
    b58b:	mov    eax,DWORD PTR [rbx+r15*4]
    b58f:	test   eax,eax
    b591:	jle    b5fe <__ctype_b_loc@plt+0x8d2e>
    b593:	lea    r12d,[r13+0x1]
    b597:	sub    eax,0x1
    b59a:	movsxd r12,r12d
    b59d:	lea    r14,[r13+rax*1+0x2]
    b5a2:	jmp    b5c3 <__ctype_b_loc@plt+0x8cf3>
    b5a4:	nop    DWORD PTR [rax+0x0]
    b5a8:	lea    esi,[rax+0x1]
    b5ab:	movzx  eax,BYTE PTR [rcx+rax*1]
    b5af:	add    r12,0x1
    b5b3:	mov    DWORD PTR [rip+0x62e8b],esi        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    b5b9:	mov    BYTE PTR [r12+rbp*1-0x1],al
    b5be:	cmp    r14,r12
    b5c1:	je     b5f7 <__ctype_b_loc@plt+0x8d27>
    b5c3:	mov    eax,DWORD PTR [rip+0x62e7b]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    b5c9:	cmp    eax,DWORD PTR [rip+0x62e71]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    b5cf:	movsxd r13,r12d
    b5d2:	jb     b5a8 <__ctype_b_loc@plt+0x8cd8>
    b5d4:	xor    edi,edi
    b5d6:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    b5db:	test   eax,eax
    b5dd:	js     b8d7 <__ctype_b_loc@plt+0x9007>
    b5e3:	mov    BYTE PTR [r12+rbp*1],al
    b5e7:	add    r12,0x1
    b5eb:	lea    rcx,[rip+0x22a0e]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    b5f2:	cmp    r14,r12
    b5f5:	jne    b5c3 <__ctype_b_loc@plt+0x8cf3>
    b5f7:	mov    r8d,DWORD PTR [rip+0xf18a]        # 1a788 <__ctype_b_loc@plt+0x17eb8>
    b5fe:	add    r15,0x1
    b602:	cmp    r8d,r15d
    b605:	jge    b580 <__ctype_b_loc@plt+0x8cb0>
    b60b:	movsxd rax,r8d
    b60e:	mov    edi,DWORD PTR [rbx+rax*4]
    b611:	lea    edx,[rdi+0x1]
    b614:	mov    DWORD PTR [rsp+0xc],edi
    b618:	mov    DWORD PTR [rbx+rax*4],edx
    b61b:	test   r8d,r8d
    b61e:	jle    b96c <__ctype_b_loc@plt+0x909c>
    b624:	xor    ebp,ebp
    b626:	jmp    b633 <__ctype_b_loc@plt+0x8d63>
    b628:	nop    DWORD PTR [rax+rax*1+0x0]
    b630:	mov    edx,DWORD PTR [rbx+rax*4]
    b633:	sar    ebp,1
    b635:	lea    rdi,[rip+0xf064]        # 1a6a0 <__ctype_b_loc@plt+0x17dd0>
    b63c:	mov    DWORD PTR [rdi+rax*4],ebp
    b63f:	lea    rdi,[rip+0xefda]        # 1a620 <__ctype_b_loc@plt+0x17d50>
    b646:	sub    DWORD PTR [rdi+rax*4],ebp
    b649:	sub    rax,0x1
    b64d:	add    ebp,edx
    b64f:	test   eax,eax
    b651:	jg     b630 <__ctype_b_loc@plt+0x8d60>
    b653:	sar    ebp,1
    b655:	cmp    ebp,0x1
    b658:	jne    b96c <__ctype_b_loc@plt+0x909c>
    b65e:	mov    eax,0xc
    b663:	mov    r12d,0x1
    b669:	cmp    r8d,eax
    b66c:	cmovg  r8d,eax
    b670:	lea    rax,[rip+0x96989]        # a2000 <__ctype_b_loc@plt+0x9f730>
    b677:	mov    ecx,r8d
    b67a:	mov    DWORD PTR [rip+0xf10b],r8d        # 1a78c <__ctype_b_loc@plt+0x17ebc>
    b681:	shl    ebp,cl
    b683:	movsxd rdi,ebp
    b686:	add    rdi,rax
    b689:	nop    DWORD PTR [rax+0x0]
    b690:	mov    eax,DWORD PTR [rbx+r12*4]
    b694:	mov    ecx,r8d
    b697:	sub    ecx,r12d
    b69a:	shl    eax,cl
    b69c:	lea    edx,[rax-0x1]
    b69f:	test   eax,eax
    b6a1:	je     b6c5 <__ctype_b_loc@plt+0x8df5>
    b6a3:	mov    rax,rdx
    b6a6:	mov    esi,r12d
    b6a9:	add    rdx,0x1
    b6ad:	mov    DWORD PTR [rsp+0x8],r8d
    b6b2:	not    rax
    b6b5:	add    rdi,rax
    b6b8:	call   2640 <memset@plt>
    b6bd:	mov    r8d,DWORD PTR [rsp+0x8]
    b6c2:	mov    rdi,rax
    b6c5:	add    r12,0x1
    b6c9:	cmp    r8d,r12d
    b6cc:	jge    b690 <__ctype_b_loc@plt+0x8dc0>
    b6ce:	lea    rax,[rip+0x9692b]        # a2000 <__ctype_b_loc@plt+0x9f730>
    b6d5:	cmp    rdi,rax
    b6d8:	jbe    b6fb <__ctype_b_loc@plt+0x8e2b>
    b6da:	lea    rax,[rip+0x9691f]        # a2000 <__ctype_b_loc@plt+0x9f730>
    b6e1:	xor    esi,esi
    b6e3:	mov    DWORD PTR [rsp+0x8],r8d
    b6e8:	sub    rdi,rax
    b6eb:	mov    rdx,rdi
    b6ee:	mov    rdi,rax
    b6f1:	call   2640 <memset@plt>
    b6f6:	mov    r8d,DWORD PTR [rsp+0x8]
    b6fb:	mov    DWORD PTR [rip+0xf093],0x0        # 1a798 <__ctype_b_loc@plt+0x17ec8>
    b705:	lea    eax,[rbp-0x1]
    b708:	xor    esi,esi
    b70a:	lea    rbp,[rip+0x228ef]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    b711:	mov    QWORD PTR [rip+0xf074],0x0        # 1a790 <__ctype_b_loc@plt+0x17ec0>
    b71c:	mov    DWORD PTR [rsp+0x8],eax
    b720:	xor    eax,eax
    b722:	nop    WORD PTR [rax+rax*1+0x0]
    b728:	cmp    esi,r8d
    b72b:	jl     b7d0 <__ctype_b_loc@plt+0x8f00>
    b731:	mov    ecx,esi
    b733:	mov    edi,DWORD PTR [rsp+0x8]
    b737:	mov    rdx,rax
    b73a:	lea    rbx,[rip+0x968bf]        # a2000 <__ctype_b_loc@plt+0x9f730>
    b741:	sub    ecx,r8d
    b744:	shr    rdx,cl
    b747:	and    edi,edx
    b749:	mov    edx,edi
    b74b:	movzx  r12d,BYTE PTR [rbx+rdx*1]
    b750:	test   r12d,r12d
    b753:	je     b850 <__ctype_b_loc@plt+0x8f80>
    b759:	mov    ecx,r8d
    b75c:	sub    ecx,r12d
    b75f:	shr    edi,cl
    b761:	cmp    edi,DWORD PTR [rsp+0xc]
    b765:	je     b818 <__ctype_b_loc@plt+0x8f48>
    b76b:	lea    rbx,[rip+0xeeae]        # 1a620 <__ctype_b_loc@plt+0x17d50>
    b772:	movsxd rcx,r12d
    b775:	mov    edx,DWORD PTR [rip+0xd7085]        # e2800 <__ctype_b_loc@plt+0xdff30>
    b77b:	mov    eax,edi
    b77d:	add    eax,DWORD PTR [rbx+rcx*4]
    b780:	lea    rbx,[rip+0xed99]        # 1a520 <__ctype_b_loc@plt+0x17c50>
    b787:	movzx  eax,BYTE PTR [rbx+rax*1]
    b78b:	lea    esi,[rdx+0x1]
    b78e:	lea    rbx,[rip+0x8486b]        # 90000 <__ctype_b_loc@plt+0x8d730>
    b795:	mov    DWORD PTR [rip+0xd7065],esi        # e2800 <__ctype_b_loc@plt+0xdff30>
    b79b:	mov    BYTE PTR [rbx+rdx*1],al
    b79e:	cmp    esi,0x8000
    b7a4:	je     b920 <__ctype_b_loc@plt+0x9050>
    b7aa:	mov    esi,DWORD PTR [rip+0xefe8]        # 1a798 <__ctype_b_loc@plt+0x17ec8>
    b7b0:	mov    r8d,DWORD PTR [rip+0xefd5]        # 1a78c <__ctype_b_loc@plt+0x17ebc>
    b7b7:	mov    rax,QWORD PTR [rip+0xefd2]        # 1a790 <__ctype_b_loc@plt+0x17ec0>
    b7be:	sub    esi,r12d
    b7c1:	mov    DWORD PTR [rip+0xefd1],esi        # 1a798 <__ctype_b_loc@plt+0x17ec8>
    b7c7:	cmp    esi,r8d
    b7ca:	jge    b731 <__ctype_b_loc@plt+0x8e61>
    b7d0:	shl    rax,0x8
    b7d4:	mov    rbx,rax
    b7d7:	mov    eax,DWORD PTR [rip+0x62c67]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    b7dd:	cmp    eax,DWORD PTR [rip+0x62c5d]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    b7e3:	jae    b92a <__ctype_b_loc@plt+0x905a>
    b7e9:	lea    edx,[rax+0x1]
    b7ec:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    b7f1:	mov    DWORD PTR [rip+0x62c4d],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    b7f7:	movzx  eax,al
    b7fa:	add    esi,0x8
    b7fd:	or     rax,rbx
    b800:	mov    DWORD PTR [rip+0xef92],esi        # 1a798 <__ctype_b_loc@plt+0x17ec8>
    b806:	mov    QWORD PTR [rip+0xef83],rax        # 1a790 <__ctype_b_loc@plt+0x17ec0>
    b80d:	jmp    b728 <__ctype_b_loc@plt+0x8e58>
    b812:	nop    WORD PTR [rax+rax*1+0x0]
    b818:	cmp    DWORD PTR [rip+0xef69],r12d        # 1a788 <__ctype_b_loc@plt+0x17eb8>
    b81f:	jne    b76b <__ctype_b_loc@plt+0x8e9b>
    b825:	call   83b0 <__ctype_b_loc@plt+0x5ae0>
    b82a:	mov    eax,DWORD PTR [rip+0x62c30]        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    b830:	cmp    rax,QWORD PTR [rip+0xece1]        # 1a518 <__ctype_b_loc@plt+0x17c48>
    b837:	jne    b984 <__ctype_b_loc@plt+0x90b4>
    b83d:	add    rsp,0x18
    b841:	xor    eax,eax
    b843:	pop    rbx
    b844:	pop    rbp
    b845:	pop    r12
    b847:	pop    r13
    b849:	pop    r14
    b84b:	pop    r15
    b84d:	ret    
    b84e:	xchg   ax,ax
    b850:	movsxd rdx,r8d
    b853:	lea    rbx,[rip+0xee46]        # 1a6a0 <__ctype_b_loc@plt+0x17dd0>
    b85a:	movsxd r13,DWORD PTR [rsp+0x8]
    b85f:	cmp    edi,DWORD PTR [rbx+rdx*4]
    b862:	jae    b947 <__ctype_b_loc@plt+0x9077>
    b868:	add    r8d,0x1
    b86c:	movsxd rbx,r8d
    b86f:	nop
    b870:	mov    r12d,ebx
    b873:	lea    r13,[r13+r13*1+0x1]
    b878:	mov    r15d,ebx
    b87b:	cmp    ebx,esi
    b87d:	jg     b8b7 <__ctype_b_loc@plt+0x8fe7>
    b87f:	jmp    b8e8 <__ctype_b_loc@plt+0x9018>
    b881:	nop    DWORD PTR [rax+0x0]
    b888:	lea    esi,[rax+0x1]
    b88b:	movzx  eax,BYTE PTR [rbp+rax*1+0x0]
    b890:	mov    DWORD PTR [rip+0x62bae],esi        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    b896:	mov    ecx,DWORD PTR [rip+0xeefc]        # 1a798 <__ctype_b_loc@plt+0x17ec8>
    b89c:	movzx  eax,al
    b89f:	or     rax,r14
    b8a2:	lea    esi,[rcx+0x8]
    b8a5:	mov    QWORD PTR [rip+0xeee4],rax        # 1a790 <__ctype_b_loc@plt+0x17ec0>
    b8ac:	mov    DWORD PTR [rip+0xeee6],esi        # 1a798 <__ctype_b_loc@plt+0x17ec8>
    b8b2:	cmp    esi,r15d
    b8b5:	jge    b8e8 <__ctype_b_loc@plt+0x9018>
    b8b7:	shl    rax,0x8
    b8bb:	mov    r14,rax
    b8be:	mov    eax,DWORD PTR [rip+0x62b80]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    b8c4:	cmp    eax,DWORD PTR [rip+0x62b76]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    b8ca:	jb     b888 <__ctype_b_loc@plt+0x8fb8>
    b8cc:	xor    edi,edi
    b8ce:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    b8d3:	test   eax,eax
    b8d5:	jns    b896 <__ctype_b_loc@plt+0x8fc6>
    b8d7:	lea    rdi,[rip+0x6f02]        # 127e0 <__ctype_b_loc@plt+0xff10>
    b8de:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    b8e3:	nop    DWORD PTR [rax+rax*1+0x0]
    b8e8:	mov    ecx,esi
    b8ea:	mov    rdx,rax
    b8ed:	sub    ecx,r12d
    b8f0:	shr    rdx,cl
    b8f3:	mov    edi,edx
    b8f5:	lea    rdx,[rip+0xeda4]        # 1a6a0 <__ctype_b_loc@plt+0x17dd0>
    b8fc:	mov    edx,DWORD PTR [rdx+rbx*4]
    b8ff:	and    edi,r13d
    b902:	add    rbx,0x1
    b906:	cmp    edx,edi
    b908:	jbe    b761 <__ctype_b_loc@plt+0x8e91>
    b90e:	mov    esi,DWORD PTR [rip+0xee84]        # 1a798 <__ctype_b_loc@plt+0x17ec8>
    b914:	jmp    b870 <__ctype_b_loc@plt+0x8fa0>
    b919:	nop    DWORD PTR [rax+0x0]
    b920:	call   83b0 <__ctype_b_loc@plt+0x5ae0>
    b925:	jmp    b7aa <__ctype_b_loc@plt+0x8eda>
    b92a:	xor    edi,edi
    b92c:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    b931:	test   eax,eax
    b933:	js     b8d7 <__ctype_b_loc@plt+0x9007>
    b935:	mov    esi,DWORD PTR [rip+0xee5d]        # 1a798 <__ctype_b_loc@plt+0x17ec8>
    b93b:	mov    r8d,DWORD PTR [rip+0xee4a]        # 1a78c <__ctype_b_loc@plt+0x17ebc>
    b942:	jmp    b7f7 <__ctype_b_loc@plt+0x8f27>
    b947:	mov    r12d,r8d
    b94a:	jmp    b761 <__ctype_b_loc@plt+0x8e91>
    b94f:	xor    edi,edi
    b951:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    b956:	test   eax,eax
    b958:	js     b8d7 <__ctype_b_loc@plt+0x9007>
    b95e:	movzx  eax,al
    b961:	jmp    b490 <__ctype_b_loc@plt+0x8bc0>
    b966:	add    edx,0x2
    b969:	mov    DWORD PTR [rbx+rax*4],edx
    b96c:	lea    rdi,[rip+0x6f2d]        # 128a0 <__ctype_b_loc@plt+0xffd0>
    b973:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    b978:	lea    rdi,[rip+0x6e99]        # 12818 <__ctype_b_loc@plt+0xff48>
    b97f:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    b984:	lea    rdi,[rip+0x6eed]        # 12878 <__ctype_b_loc@plt+0xffa8>
    b98b:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    b990:	lea    rdi,[rip+0x6ec1]        # 12858 <__ctype_b_loc@plt+0xff88>
    b997:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    b99c:	nop    DWORD PTR [rax+0x0]
    b9a0:	endbr64 
    b9a4:	push   r15
    b9a6:	push   r14
    b9a8:	push   r13
    b9aa:	push   r12
    b9ac:	push   rbp
    b9ad:	push   rbx
    b9ae:	sub    rsp,0x48
    b9b2:	mov    ebp,DWORD PTR [rip+0x21ec0]        # 2d878 <__ctype_b_loc@plt+0x2afa8>
    b9b8:	mov    rax,QWORD PTR fs:0x28
    b9c1:	mov    QWORD PTR [rsp+0x38],rax
    b9c6:	xor    eax,eax
    b9c8:	mov    eax,0xffffffff
    b9cd:	mov    DWORD PTR [rip+0x62a95],edi        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    b9d3:	mov    QWORD PTR [rip+0xb8ae],rax        # 17288 <__ctype_b_loc@plt+0x149b8>
    b9da:	mov    eax,DWORD PTR [rip+0xb8b4]        # 17294 <__ctype_b_loc@plt+0x149c4>
    b9e0:	mov    DWORD PTR [rip+0x21a6e],esi        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    b9e6:	test   ebp,ebp
    b9e8:	je     bc88 <__ctype_b_loc@plt+0x93b8>
    b9ee:	mov    ebx,DWORD PTR [rip+0x21e88]        # 2d87c <__ctype_b_loc@plt+0x2afac>
    b9f4:	test   ebx,ebx
    b9f6:	je     baa8 <__ctype_b_loc@plt+0x91d8>
    b9fc:	mov    QWORD PTR [rsp+0x10],0x0
    ba05:	mov    QWORD PTR [rsp+0x8],0x0
    ba0e:	cmp    eax,0x8
    ba11:	je     bca3 <__ctype_b_loc@plt+0x93d3>
    ba17:	test   eax,eax
    ba19:	jne    c168 <__ctype_b_loc@plt+0x9898>
    ba1f:	mov    ecx,DWORD PTR [rip+0x225ed]        # 2e012 <__ctype_b_loc@plt+0x2b742>
    ba25:	mov    r11d,DWORD PTR [rip+0x21e54]        # 2d880 <__ctype_b_loc@plt+0x2afb0>
    ba2c:	mov    r14d,DWORD PTR [rip+0x225e3]        # 2e016 <__ctype_b_loc@plt+0x2b746>
    ba33:	mov    rax,rcx
    ba36:	test   r11d,r11d
    ba39:	je     ba3f <__ctype_b_loc@plt+0x916f>
    ba3b:	lea    rax,[rcx-0xc]
    ba3f:	cmp    r14,rax
    ba42:	jne    c174 <__ctype_b_loc@plt+0x98a4>
    ba48:	lea    rbp,[rip+0x845b1]        # 90000 <__ctype_b_loc@plt+0x8d730>
    ba4f:	lea    rbx,[rip+0x225aa]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    ba56:	test   r14,r14
    ba59:	jne    ba8e <__ctype_b_loc@plt+0x91be>
    ba5b:	jmp    bad8 <__ctype_b_loc@plt+0x9208>
    ba5d:	nop    DWORD PTR [rax]
    ba60:	lea    edx,[rax+0x1]
    ba63:	movzx  eax,BYTE PTR [rbx+rax*1]
    ba67:	mov    DWORD PTR [rip+0x629d7],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    ba6d:	mov    edx,DWORD PTR [rip+0xd6d8d]        # e2800 <__ctype_b_loc@plt+0xdff30>
    ba73:	lea    ecx,[rdx+0x1]
    ba76:	mov    BYTE PTR [rbp+rdx*1+0x0],al
    ba7a:	mov    DWORD PTR [rip+0xd6d80],ecx        # e2800 <__ctype_b_loc@plt+0xdff30>
    ba80:	cmp    ecx,0x8000
    ba86:	je     bac8 <__ctype_b_loc@plt+0x91f8>
    ba88:	sub    r14,0x1
    ba8c:	je     bad8 <__ctype_b_loc@plt+0x9208>
    ba8e:	mov    eax,DWORD PTR [rip+0x629b0]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    ba94:	cmp    eax,DWORD PTR [rip+0x629a6]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    ba9a:	jb     ba60 <__ctype_b_loc@plt+0x9190>
    ba9c:	xor    edi,edi
    ba9e:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    baa3:	jmp    ba6d <__ctype_b_loc@plt+0x919d>
    baa5:	nop    DWORD PTR [rax]
    baa8:	mov    esi,DWORD PTR [rip+0x22560]        # 2e00e <__ctype_b_loc@plt+0x2b73e>
    baae:	mov    QWORD PTR [rsp+0x8],rsi
    bab3:	mov    esi,DWORD PTR [rip+0x2255d]        # 2e016 <__ctype_b_loc@plt+0x2b746>
    bab9:	mov    QWORD PTR [rsp+0x10],rsi
    babe:	jmp    ba0e <__ctype_b_loc@plt+0x913e>
    bac3:	nop    DWORD PTR [rax+rax*1+0x0]
    bac8:	call   83b0 <__ctype_b_loc@plt+0x5ae0>
    bacd:	sub    r14,0x1
    bad1:	jne    ba8e <__ctype_b_loc@plt+0x91be>
    bad3:	nop    DWORD PTR [rax+rax*1+0x0]
    bad8:	call   83b0 <__ctype_b_loc@plt+0x5ae0>
    badd:	mov    r10d,DWORD PTR [rip+0x21d94]        # 2d878 <__ctype_b_loc@plt+0x2afa8>
    bae4:	test   r10d,r10d
    bae7:	jne    bdb0 <__ctype_b_loc@plt+0x94e0>
    baed:	lea    rbx,[rsp+0x20]
    baf2:	lea    rbp,[rsp+0x28]
    baf7:	lea    r12,[rip+0x22502]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    bafe:	jmp    bb1a <__ctype_b_loc@plt+0x924a>
    bb00:	lea    edx,[rax+0x1]
    bb03:	movzx  eax,BYTE PTR [r12+rax*1]
    bb08:	add    rbx,0x1
    bb0c:	mov    DWORD PTR [rip+0x62932],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bb12:	mov    BYTE PTR [rbx-0x1],al
    bb15:	cmp    rbx,rbp
    bb18:	je     bb3b <__ctype_b_loc@plt+0x926b>
    bb1a:	mov    eax,DWORD PTR [rip+0x62924]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bb20:	cmp    eax,DWORD PTR [rip+0x6291a]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    bb26:	jb     bb00 <__ctype_b_loc@plt+0x9230>
    bb28:	xor    edi,edi
    bb2a:	add    rbx,0x1
    bb2e:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    bb33:	mov    BYTE PTR [rbx-0x1],al
    bb36:	cmp    rbx,rbp
    bb39:	jne    bb1a <__ctype_b_loc@plt+0x924a>
    bb3b:	mov    eax,DWORD PTR [rsp+0x20]
    bb3f:	mov    QWORD PTR [rsp+0x8],rax
    bb44:	mov    eax,DWORD PTR [rsp+0x24]
    bb48:	mov    QWORD PTR [rsp+0x10],rax
    bb4d:	mov    eax,0xffffffff
    bb52:	xor    r14d,r14d
    bb55:	xor    rax,QWORD PTR [rip+0xb72c]        # 17288 <__ctype_b_loc@plt+0x149b8>
    bb5c:	cmp    QWORD PTR [rsp+0x8],rax
    bb61:	je     bb8f <__ctype_b_loc@plt+0x92bf>
    bb63:	mov    rax,QWORD PTR [rip+0xb47e]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    bb6a:	mov    rdx,QWORD PTR [rip+0x632c7]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    bb71:	lea    rcx,[rip+0x62e68]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    bb78:	lea    rsi,[rip+0x6dc1]        # 12940 <__ctype_b_loc@plt+0x10070>
    bb7f:	mov    r14d,0x1
    bb85:	mov    rdi,QWORD PTR [rax]
    bb88:	xor    eax,eax
    bb8a:	call   70d0 <__ctype_b_loc@plt+0x4800>
    bb8f:	mov    eax,DWORD PTR [rip+0x628cb]        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    bb95:	cmp    rax,QWORD PTR [rsp+0x10]
    bb9a:	je     be30 <__ctype_b_loc@plt+0x9560>
    bba0:	mov    rax,QWORD PTR [rip+0xb441]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    bba7:	mov    rdx,QWORD PTR [rip+0x6328a]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    bbae:	lea    rcx,[rip+0x62e2b]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    bbb5:	lea    rsi,[rip+0x6db4]        # 12970 <__ctype_b_loc@plt+0x100a0>
    bbbc:	mov    rdi,QWORD PTR [rax]
    bbbf:	xor    eax,eax
    bbc1:	call   70d0 <__ctype_b_loc@plt+0x4800>
    bbc6:	mov    r8d,DWORD PTR [rip+0x21cab]        # 2d878 <__ctype_b_loc@plt+0x2afa8>
    bbcd:	test   r8d,r8d
    bbd0:	je     be88 <__ctype_b_loc@plt+0x95b8>
    bbd6:	mov    edx,DWORD PTR [rip+0x62868]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bbdc:	lea    eax,[rdx+0x4]
    bbdf:	cmp    DWORD PTR [rip+0x6285b],eax        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    bbe5:	jbe    be7e <__ctype_b_loc@plt+0x95ae>
    bbeb:	mov    r14d,0x1
    bbf1:	lea    rax,[rip+0x2240b]        # 2e003 <__ctype_b_loc@plt+0x2b733>
    bbf8:	lea    rcx,[rip+0x22403]        # 2e002 <__ctype_b_loc@plt+0x2b732>
    bbff:	movzx  eax,BYTE PTR [rdx+rax*1]
    bc03:	movzx  ecx,BYTE PTR [rcx+rdx*1]
    bc07:	lea    rsi,[rip+0x223f2]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    bc0e:	shl    eax,0x8
    bc11:	or     eax,ecx
    bc13:	lea    rcx,[rip+0x223e7]        # 2e001 <__ctype_b_loc@plt+0x2b731>
    bc1a:	movzx  ecx,BYTE PTR [rdx+rcx*1]
    bc1e:	movzx  edx,BYTE PTR [rsi+rdx*1]
    bc22:	cdqe   
    bc24:	shl    rax,0x10
    bc28:	shl    ecx,0x8
    bc2b:	or     edx,ecx
    bc2d:	movsxd rdx,edx
    bc30:	or     rax,rdx
    bc33:	cmp    rax,0x4034b50
    bc39:	je     c097 <__ctype_b_loc@plt+0x97c7>
    bc3f:	mov    DWORD PTR [rip+0x21c2f],0x0        # 2d878 <__ctype_b_loc@plt+0x2afa8>
    bc49:	mov    DWORD PTR [rip+0x21c29],0x0        # 2d87c <__ctype_b_loc@plt+0x2afac>
    bc53:	test   r14d,r14d
    bc56:	jne    be92 <__ctype_b_loc@plt+0x95c2>
    bc5c:	mov    rax,QWORD PTR [rsp+0x38]
    bc61:	sub    rax,QWORD PTR fs:0x28
    bc6a:	jne    c1a9 <__ctype_b_loc@plt+0x98d9>
    bc70:	add    rsp,0x48
    bc74:	mov    eax,r14d
    bc77:	pop    rbx
    bc78:	pop    rbp
    bc79:	pop    r12
    bc7b:	pop    r13
    bc7d:	pop    r14
    bc7f:	pop    r15
    bc81:	ret    
    bc82:	nop    WORD PTR [rax+rax*1+0x0]
    bc88:	cmp    eax,0x8
    bc8b:	jne    c168 <__ctype_b_loc@plt+0x9898>
    bc91:	mov    QWORD PTR [rsp+0x10],0x0
    bc9a:	mov    QWORD PTR [rsp+0x8],0x0
    bca3:	mov    DWORD PTR [rip+0xd6b53],0x0        # e2800 <__ctype_b_loc@plt+0xdff30>
    bcad:	xor    r15d,r15d
    bcb0:	xor    r14d,r14d
    bcb3:	lea    rbx,[rip+0x22346]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    bcba:	mov    DWORD PTR [rip+0x21774],0x0        # 2d438 <__ctype_b_loc@plt+0x2ab68>
    bcc4:	mov    QWORD PTR [rip+0x21771],0x0        # 2d440 <__ctype_b_loc@plt+0x2ab70>
    bccf:	nop
    bcd0:	mov    DWORD PTR [rip+0x2176e],0x0        # 2d448 <__ctype_b_loc@plt+0x2ab78>
    bcda:	test   r15d,r15d
    bcdd:	jne    bd5c <__ctype_b_loc@plt+0x948c>
    bcdf:	mov    eax,DWORD PTR [rip+0x6275f]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bce5:	cmp    eax,DWORD PTR [rip+0x62755]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    bceb:	jae    bd50 <__ctype_b_loc@plt+0x9480>
    bced:	lea    edx,[rax+0x1]
    bcf0:	movzx  eax,BYTE PTR [rbx+rax*1]
    bcf4:	mov    DWORD PTR [rip+0x6274a],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bcfa:	or     rax,r14
    bcfd:	mov    r15d,0x5
    bd03:	mov    ebp,eax
    bd05:	shr    rax,1
    bd08:	and    ebp,0x1
    bd0b:	mov    r14,rax
    bd0e:	mov    eax,r14d
    bd11:	shr    r14,0x2
    bd15:	mov    DWORD PTR [rip+0x2171c],r15d        # 2d438 <__ctype_b_loc@plt+0x2ab68>
    bd1c:	and    eax,0x3
    bd1f:	mov    QWORD PTR [rip+0x2171a],r14        # 2d440 <__ctype_b_loc@plt+0x2ab70>
    bd26:	cmp    eax,0x2
    bd29:	je     c090 <__ctype_b_loc@plt+0x97c0>
    bd2f:	test   eax,eax
    bd31:	je     beb8 <__ctype_b_loc@plt+0x95e8>
    bd37:	cmp    eax,0x1
    bd3a:	je     c060 <__ctype_b_loc@plt+0x9790>
    bd40:	lea    rdi,[rip+0x6b79]        # 128c0 <__ctype_b_loc@plt+0xfff0>
    bd47:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    bd4c:	nop    DWORD PTR [rax+0x0]
    bd50:	xor    edi,edi
    bd52:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    bd57:	movzx  eax,al
    bd5a:	jmp    bcfa <__ctype_b_loc@plt+0x942a>
    bd5c:	mov    ebp,r14d
    bd5f:	lea    r12d,[r15-0x1]
    bd63:	shr    r14,1
    bd66:	and    ebp,0x1
    bd69:	cmp    r12d,0x1
    bd6d:	ja     c1b3 <__ctype_b_loc@plt+0x98e3>
    bd73:	mov    eax,DWORD PTR [rip+0x626cb]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bd79:	cmp    eax,DWORD PTR [rip+0x626c1]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    bd7f:	jae    bda0 <__ctype_b_loc@plt+0x94d0>
    bd81:	lea    edx,[rax+0x1]
    bd84:	movzx  eax,BYTE PTR [rbx+rax*1]
    bd88:	mov    DWORD PTR [rip+0x626b6],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bd8e:	mov    ecx,r12d
    bd91:	add    r15d,0x5
    bd95:	shl    rax,cl
    bd98:	or     r14,rax
    bd9b:	jmp    bd0e <__ctype_b_loc@plt+0x943e>
    bda0:	xor    edi,edi
    bda2:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    bda7:	movzx  eax,al
    bdaa:	jmp    bd8e <__ctype_b_loc@plt+0x94be>
    bdac:	nop    DWORD PTR [rax+0x0]
    bdb0:	mov    r9d,DWORD PTR [rip+0x21ac5]        # 2d87c <__ctype_b_loc@plt+0x2afac>
    bdb7:	test   r9d,r9d
    bdba:	je     bb4d <__ctype_b_loc@plt+0x927d>
    bdc0:	lea    rbx,[rsp+0x20]
    bdc5:	lea    rbp,[rsp+0x30]
    bdca:	lea    r12,[rip+0x2222f]        # 2e000 <__ctype_b_loc@plt+0x2b730>
    bdd1:	jmp    bdf2 <__ctype_b_loc@plt+0x9522>
    bdd3:	nop    DWORD PTR [rax+rax*1+0x0]
    bdd8:	lea    edx,[rax+0x1]
    bddb:	movzx  eax,BYTE PTR [r12+rax*1]
    bde0:	add    rbx,0x1
    bde4:	mov    DWORD PTR [rip+0x6265a],edx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bdea:	mov    BYTE PTR [rbx-0x1],al
    bded:	cmp    rbp,rbx
    bdf0:	je     be13 <__ctype_b_loc@plt+0x9543>
    bdf2:	mov    eax,DWORD PTR [rip+0x6264c]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bdf8:	cmp    eax,DWORD PTR [rip+0x62642]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    bdfe:	jb     bdd8 <__ctype_b_loc@plt+0x9508>
    be00:	xor    edi,edi
    be02:	add    rbx,0x1
    be06:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    be0b:	mov    BYTE PTR [rbx-0x1],al
    be0e:	cmp    rbp,rbx
    be11:	jne    bdf2 <__ctype_b_loc@plt+0x9522>
    be13:	mov    eax,DWORD PTR [rsp+0x24]
    be17:	mov    QWORD PTR [rsp+0x8],rax
    be1c:	mov    eax,DWORD PTR [rsp+0x2c]
    be20:	mov    QWORD PTR [rsp+0x10],rax
    be25:	jmp    bb4d <__ctype_b_loc@plt+0x927d>
    be2a:	nop    WORD PTR [rax+rax*1+0x0]
    be30:	mov    edi,DWORD PTR [rip+0x21a42]        # 2d878 <__ctype_b_loc@plt+0x2afa8>
    be36:	test   edi,edi
    be38:	je     bc3f <__ctype_b_loc@plt+0x936f>
    be3e:	mov    edx,DWORD PTR [rip+0x62600]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    be44:	lea    eax,[rdx+0x4]
    be47:	cmp    eax,DWORD PTR [rip+0x625f3]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    be4d:	jae    bc3f <__ctype_b_loc@plt+0x936f>
    be53:	jmp    bbf1 <__ctype_b_loc@plt+0x9321>
    be58:	mov    rax,QWORD PTR [rip+0xb189]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    be5f:	mov    rdx,QWORD PTR [rip+0x62fd2]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    be66:	lea    rcx,[rip+0x62b73]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    be6d:	lea    rsi,[rip+0x6b5c]        # 129d0 <__ctype_b_loc@plt+0x10100>
    be74:	mov    rdi,QWORD PTR [rax]
    be77:	xor    eax,eax
    be79:	call   70d0 <__ctype_b_loc@plt+0x4800>
    be7e:	mov    DWORD PTR [rip+0x219f0],0x0        # 2d878 <__ctype_b_loc@plt+0x2afa8>
    be88:	mov    DWORD PTR [rip+0x219ea],0x0        # 2d87c <__ctype_b_loc@plt+0x2afac>
    be92:	mov    DWORD PTR [rip+0x62b24],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    be9c:	mov    eax,DWORD PTR [rip+0x62f46]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    bea2:	test   eax,eax
    bea4:	je     c1ae <__ctype_b_loc@plt+0x98de>
    beaa:	mov    r14d,0x1
    beb0:	jmp    bc5c <__ctype_b_loc@plt+0x938c>
    beb5:	nop    DWORD PTR [rax]
    beb8:	mov    eax,r15d
    bebb:	mov    r13d,DWORD PTR [rip+0xd693e]        # e2800 <__ctype_b_loc@plt+0xdff30>
    bec2:	and    eax,0x7
    bec5:	mov    ecx,eax
    bec7:	mov    DWORD PTR [rsp+0x1c],eax
    becb:	shr    r14,cl
    bece:	mov    r12,r14
    bed1:	mov    r14d,r15d
    bed4:	sub    r14d,eax
    bed7:	cmp    r14d,0xf
    bedb:	ja     bf4a <__ctype_b_loc@plt+0x967a>
    bedd:	mov    ecx,r14d
    bee0:	jmp    bf03 <__ctype_b_loc@plt+0x9633>
    bee2:	nop    WORD PTR [rax+rax*1+0x0]
    bee8:	lea    edi,[rax+0x1]
    beeb:	movzx  eax,BYTE PTR [rbx+rax*1]
    beef:	mov    DWORD PTR [rip+0x6254f],edi        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bef5:	shl    rax,cl
    bef8:	add    ecx,0x8
    befb:	or     r12,rax
    befe:	cmp    ecx,0xf
    bf01:	ja     bf38 <__ctype_b_loc@plt+0x9668>
    bf03:	mov    eax,DWORD PTR [rip+0x6253b]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bf09:	cmp    eax,DWORD PTR [rip+0x62531]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    bf0f:	jb     bee8 <__ctype_b_loc@plt+0x9618>
    bf11:	xor    edi,edi
    bf13:	mov    DWORD PTR [rsp+0x18],ecx
    bf17:	mov    DWORD PTR [rip+0xd68e2],r13d        # e2800 <__ctype_b_loc@plt+0xdff30>
    bf1e:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    bf23:	mov    ecx,DWORD PTR [rsp+0x18]
    bf27:	movzx  eax,al
    bf2a:	shl    rax,cl
    bf2d:	add    ecx,0x8
    bf30:	or     r12,rax
    bf33:	cmp    ecx,0xf
    bf36:	jbe    bf03 <__ctype_b_loc@plt+0x9633>
    bf38:	mov    eax,DWORD PTR [rsp+0x1c]
    bf3c:	sub    eax,r15d
    bf3f:	add    eax,0xf
    bf42:	and    eax,0xfffffff8
    bf45:	lea    r14d,[r14+rax*1+0x8]
    bf4a:	movzx  eax,r12w
    bf4e:	lea    r15d,[r14-0x10]
    bf52:	shr    r12,0x10
    bf56:	mov    DWORD PTR [rsp+0x18],eax
    bf5a:	cmp    r15d,0xf
    bf5e:	jbe    bf88 <__ctype_b_loc@plt+0x96b8>
    bf60:	jmp    bfc0 <__ctype_b_loc@plt+0x96f0>
    bf62:	nop    WORD PTR [rax+rax*1+0x0]
    bf68:	lea    esi,[rax+0x1]
    bf6b:	movzx  eax,BYTE PTR [rbx+rax*1]
    bf6f:	mov    DWORD PTR [rip+0x624cf],esi        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bf75:	mov    ecx,r15d
    bf78:	add    r15d,0x8
    bf7c:	shl    rax,cl
    bf7f:	or     r12,rax
    bf82:	cmp    r15d,0xf
    bf86:	ja     bfb0 <__ctype_b_loc@plt+0x96e0>
    bf88:	mov    eax,DWORD PTR [rip+0x624b6]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bf8e:	cmp    eax,DWORD PTR [rip+0x624ac]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    bf94:	jb     bf68 <__ctype_b_loc@plt+0x9698>
    bf96:	xor    edi,edi
    bf98:	mov    DWORD PTR [rip+0xd6861],r13d        # e2800 <__ctype_b_loc@plt+0xdff30>
    bf9f:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    bfa4:	movzx  eax,al
    bfa7:	jmp    bf75 <__ctype_b_loc@plt+0x96a5>
    bfa9:	nop    DWORD PTR [rax+0x0]
    bfb0:	mov    eax,0x1f
    bfb5:	sub    eax,r14d
    bfb8:	and    eax,0xfffffff8
    bfbb:	lea    r15d,[rax+r14*1-0x8]
    bfc0:	mov    eax,r12d
    bfc3:	mov    esi,DWORD PTR [rsp+0x18]
    bfc7:	not    eax
    bfc9:	movzx  eax,ax
    bfcc:	cmp    esi,eax
    bfce:	jne    bd40 <__ctype_b_loc@plt+0x9470>
    bfd4:	shr    r12,0x10
    bfd8:	sub    r15d,0x10
    bfdc:	lea    r14d,[rsi-0x1]
    bfe0:	test   esi,esi
    bfe2:	jne    c033 <__ctype_b_loc@plt+0x9763>
    bfe4:	jmp    c0f0 <__ctype_b_loc@plt+0x9820>
    bfe9:	nop    DWORD PTR [rax+0x0]
    bff0:	lea    ecx,[rax+0x1]
    bff3:	movzx  eax,BYTE PTR [rbx+rax*1]
    bff7:	mov    DWORD PTR [rip+0x62447],ecx        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    bffd:	mov    ecx,r15d
    c000:	shl    rax,cl
    c003:	or     r12,rax
    c006:	mov    eax,r13d
    c009:	lea    rsi,[rip+0x83ff0]        # 90000 <__ctype_b_loc@plt+0x8d730>
    c010:	add    r13d,0x1
    c014:	mov    BYTE PTR [rsi+rax*1],r12b
    c018:	cmp    r13d,0x8000
    c01f:	je     c0d0 <__ctype_b_loc@plt+0x9800>
    c025:	shr    r12,0x8
    c029:	sub    r14d,0x1
    c02d:	jb     c0f0 <__ctype_b_loc@plt+0x9820>
    c033:	cmp    r15d,0x7
    c037:	ja     c10a <__ctype_b_loc@plt+0x983a>
    c03d:	mov    eax,DWORD PTR [rip+0x62401]        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    c043:	cmp    eax,DWORD PTR [rip+0x623f7]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    c049:	jb     bff0 <__ctype_b_loc@plt+0x9720>
    c04b:	xor    edi,edi
    c04d:	mov    DWORD PTR [rip+0xd67ac],r13d        # e2800 <__ctype_b_loc@plt+0xdff30>
    c054:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    c059:	movzx  eax,al
    c05c:	jmp    bffd <__ctype_b_loc@plt+0x972d>
    c05e:	xchg   ax,ax
    c060:	call   a0c0 <__ctype_b_loc@plt+0x77f0>
    c065:	test   eax,eax
    c067:	jne    c19b <__ctype_b_loc@plt+0x98cb>
    c06d:	mov    r15d,DWORD PTR [rip+0x213c4]        # 2d438 <__ctype_b_loc@plt+0x2ab68>
    c074:	test   ebp,ebp
    c076:	jne    c113 <__ctype_b_loc@plt+0x9843>
    c07c:	mov    r14,QWORD PTR [rip+0x213bd]        # 2d440 <__ctype_b_loc@plt+0x2ab70>
    c083:	jmp    bcd0 <__ctype_b_loc@plt+0x9400>
    c088:	nop    DWORD PTR [rax+rax*1+0x0]
    c090:	call   a2b0 <__ctype_b_loc@plt+0x79e0>
    c095:	jmp    c065 <__ctype_b_loc@plt+0x9795>
    c097:	mov    esi,DWORD PTR [rip+0x62d73]        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    c09d:	test   esi,esi
    c09f:	je     be58 <__ctype_b_loc@plt+0x9588>
    c0a5:	mov    ecx,DWORD PTR [rip+0x62d6d]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    c0ab:	test   ecx,ecx
    c0ad:	je     c13d <__ctype_b_loc@plt+0x986d>
    c0b3:	mov    edx,DWORD PTR [rip+0x62907]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    c0b9:	test   edx,edx
    c0bb:	jne    bc3f <__ctype_b_loc@plt+0x936f>
    c0c1:	mov    DWORD PTR [rip+0x628f5],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    c0cb:	jmp    bc3f <__ctype_b_loc@plt+0x936f>
    c0d0:	mov    DWORD PTR [rip+0xd6726],0x8000        # e2800 <__ctype_b_loc@plt+0xdff30>
    c0da:	xor    r13d,r13d
    c0dd:	shr    r12,0x8
    c0e1:	call   83b0 <__ctype_b_loc@plt+0x5ae0>
    c0e6:	sub    r14d,0x1
    c0ea:	jae    c033 <__ctype_b_loc@plt+0x9763>
    c0f0:	mov    DWORD PTR [rip+0xd6709],r13d        # e2800 <__ctype_b_loc@plt+0xdff30>
    c0f7:	mov    QWORD PTR [rip+0x21342],r12        # 2d440 <__ctype_b_loc@plt+0x2ab70>
    c0fe:	mov    DWORD PTR [rip+0x21333],r15d        # 2d438 <__ctype_b_loc@plt+0x2ab68>
    c105:	jmp    c074 <__ctype_b_loc@plt+0x97a4>
    c10a:	sub    r15d,0x8
    c10e:	jmp    c006 <__ctype_b_loc@plt+0x9736>
    c113:	cmp    r15d,0x7
    c117:	jbe    bad8 <__ctype_b_loc@plt+0x9208>
    c11d:	lea    eax,[r15-0x8]
    c121:	mov    esi,r15d
    c124:	shr    eax,0x3
    c127:	and    esi,0x7
    c12a:	not    eax
    c12c:	mov    DWORD PTR [rip+0x21306],esi        # 2d438 <__ctype_b_loc@plt+0x2ab68>
    c132:	add    DWORD PTR [rip+0x6230c],eax        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    c138:	jmp    bad8 <__ctype_b_loc@plt+0x9208>
    c13d:	mov    rax,QWORD PTR [rip+0xaea4]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    c144:	mov    rdx,QWORD PTR [rip+0x62ced]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    c14b:	lea    rcx,[rip+0x6288e]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    c152:	lea    rsi,[rip+0x6847]        # 129a0 <__ctype_b_loc@plt+0x100d0>
    c159:	mov    rdi,QWORD PTR [rax]
    c15c:	xor    eax,eax
    c15e:	call   70d0 <__ctype_b_loc@plt+0x4800>
    c163:	jmp    c0b3 <__ctype_b_loc@plt+0x97e3>
    c168:	lea    rdi,[rip+0x67b1]        # 12920 <__ctype_b_loc@plt+0x10050>
    c16f:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    c174:	mov    rax,QWORD PTR [rip+0xae6d]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    c17b:	mov    rdx,r14
    c17e:	lea    rsi,[rip+0x4f03]        # 11088 <__ctype_b_loc@plt+0xe7b8>
    c185:	mov    rdi,QWORD PTR [rax]
    c188:	xor    eax,eax
    c18a:	call   70d0 <__ctype_b_loc@plt+0x4800>
    c18f:	lea    rdi,[rip+0x675a]        # 128f0 <__ctype_b_loc@plt+0x10020>
    c196:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    c19b:	cmp    eax,0x3
    c19e:	jne    bd40 <__ctype_b_loc@plt+0x9470>
    c1a4:	call   7620 <__ctype_b_loc@plt+0x4d50>
    c1a9:	call   2600 <__stack_chk_fail@plt>
    c1ae:	call   4550 <__ctype_b_loc@plt+0x1c80>
    c1b3:	sub    r15d,0x3
    c1b7:	jmp    bd0e <__ctype_b_loc@plt+0x943e>
    c1bc:	nop    DWORD PTR [rax+0x0]
    c1c0:	endbr64 
    c1c4:	push   r15
    c1c6:	push   r14
    c1c8:	push   r13
    c1ca:	mov    r13d,0xffff8b1f
    c1d0:	push   r12
    c1d2:	xor    r12d,r12d
    c1d5:	push   rbp
    c1d6:	mov    ebp,esi
    c1d8:	push   rbx
    c1d9:	sub    rsp,0x68
    c1dd:	mov    r14d,DWORD PTR [rip+0x2126c]        # 2d450 <__ctype_b_loc@plt+0x2ab80>
    c1e4:	mov    rax,QWORD PTR fs:0x28
    c1ed:	mov    QWORD PTR [rsp+0x58],rax
    c1f2:	xor    eax,eax
    c1f4:	mov    WORD PTR [rsp+0x2e],r12w
    c1fa:	test   r14d,r14d
    c1fd:	mov    DWORD PTR [rip+0x62265],edi        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    c203:	setne  al
    c206:	mov    DWORD PTR [rip+0x21248],esi        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    c20c:	shl    eax,0x3
    c20f:	cmp    QWORD PTR [rip+0x62701],0x0        # 6e918 <__ctype_b_loc@plt+0x6c048>
    c217:	mov    DWORD PTR [rip+0xb073],0x8        # 17294 <__ctype_b_loc@plt+0x149c4>
    c221:	mov    WORD PTR [rip+0x95dd7],r13w        # a2000 <__ctype_b_loc@plt+0x9f730>
    c229:	mov    BYTE PTR [rip+0x95dd2],0x8        # a2002 <__ctype_b_loc@plt+0x9f732>
    c230:	mov    DWORD PTR [rip+0xd65c6],0x4        # e2800 <__ctype_b_loc@plt+0xdff30>
    c23a:	mov    BYTE PTR [rip+0x95dc3],al        # a2003 <__ctype_b_loc@plt+0x9f733>
    c240:	js     ce6d <__ctype_b_loc@plt+0xa59d>
    c246:	mov    rax,QWORD PTR [rip+0x626c3]        # 6e910 <__ctype_b_loc@plt+0x6c040>
    c24d:	mov    edx,0xfffffffe
    c252:	lea    rcx,[rax-0x1]
    c256:	cmp    rcx,rdx
    c259:	ja     d1a3 <__ctype_b_loc@plt+0xa8d3>
    c25f:	mov    edi,eax
    c261:	movzx  esi,ah
    c264:	shr    rax,0x10
    c268:	mov    ecx,eax
    c26a:	movzx  edx,ah
    c26d:	mov    BYTE PTR [rip+0x95d90],dil        # a2004 <__ctype_b_loc@plt+0x9f734>
    c274:	mov    eax,0x7
    c279:	mov    ebx,0x6
    c27e:	lea    rdi,[rip+0x95d7b]        # a2000 <__ctype_b_loc@plt+0x9f730>
    c285:	mov    BYTE PTR [rip+0x95d79],sil        # a2005 <__ctype_b_loc@plt+0x9f735>
    c28c:	mov    QWORD PTR [rsp+0x8],rdi
    c291:	mov    rdi,QWORD PTR [rsp+0x8]
    c296:	mov    esi,ebx
    c298:	add    ebx,0x2
    c29b:	mov    DWORD PTR [rsp+0x10],ebx
    c29f:	mov    BYTE PTR [rdi+rsi*1],cl
    c2a2:	mov    DWORD PTR [rip+0xd6558],ebx        # e2800 <__ctype_b_loc@plt+0xdff30>
    c2a8:	mov    BYTE PTR [rdi+rax*1],dl
    c2ab:	mov    eax,0xffffffff
    c2b0:	xor    r10d,r10d
    c2b3:	mov    DWORD PTR [rip+0xd654b],0x0        # e2808 <__ctype_b_loc@plt+0xdff38>
    c2bd:	mov    QWORD PTR [rip+0xafc4],rax        # 17288 <__ctype_b_loc@plt+0x149b8>
    c2c4:	mov    WORD PTR [rip+0xd6538],r10w        # e2804 <__ctype_b_loc@plt+0xdff34>
    c2cc:	cmp    ebp,0xffffffff
    c2cf:	je     c2df <__ctype_b_loc@plt+0x9a0f>
    c2d1:	lea    rax,[rip+0xffffffffffffb428]        # 7700 <__ctype_b_loc@plt+0x4e30>
    c2d8:	mov    QWORD PTR [rip+0x62b69],rax        # 6ee48 <__ctype_b_loc@plt+0x6c578>
    c2df:	movzx  r12d,WORD PTR [rip+0xe19b]        # 1a482 <__ctype_b_loc@plt+0x17bb2>
    c2e7:	lea    rax,[rsp+0x2e]
    c2ec:	mov    QWORD PTR [rip+0xe209],0x0        # 1a500 <__ctype_b_loc@plt+0x17c30>
    c2f7:	mov    QWORD PTR [rip+0xe20a],rax        # 1a508 <__ctype_b_loc@plt+0x17c38>
    c2fe:	mov    QWORD PTR [rip+0xe1ef],0x0        # 1a4f8 <__ctype_b_loc@plt+0x17c28>
    c309:	test   r12w,r12w
    c30d:	jne    c5dd <__ctype_b_loc@plt+0x9d0d>
    c313:	xor    ebp,ebp
    c315:	xor    ebx,ebx
    c317:	lea    r13,[rip+0xe762]        # 1aa80 <__ctype_b_loc@plt+0x181b0>
    c31e:	lea    r14,[rip+0xad5b]        # 17080 <__ctype_b_loc@plt+0x147b0>
    c325:	nop    DWORD PTR [rax]
    c328:	mov    ecx,DWORD PTR [r14+rbp*4]
    c32c:	mov    r15d,0x1
    c332:	mov    DWORD PTR [r13+rbp*4+0x0],ebx
    c337:	shl    r15d,cl
    c33a:	test   r15d,r15d
    c33d:	jle    c359 <__ctype_b_loc@plt+0x9a89>
    c33f:	movsxd rdi,ebx
    c342:	lea    rax,[rip+0x1f9b7]        # 2bd00 <__ctype_b_loc@plt+0x29430>
    c349:	movsxd rdx,r15d
    c34c:	mov    esi,ebp
    c34e:	add    rdi,rax
    c351:	add    ebx,r15d
    c354:	call   2640 <memset@plt>
    c359:	add    rbp,0x1
    c35d:	cmp    rbp,0x1c
    c361:	jne    c328 <__ctype_b_loc@plt+0x9a58>
    c363:	lea    eax,[rbx-0x1]
    c366:	lea    rbx,[rip+0x1f993]        # 2bd00 <__ctype_b_loc@plt+0x29430>
    c36d:	xor    ebp,ebp
    c36f:	cdqe   
    c371:	lea    r13,[rip+0xe688]        # 1aa00 <__ctype_b_loc@plt+0x18130>
    c378:	lea    r14,[rip+0xad81]        # 17100 <__ctype_b_loc@plt+0x14830>
    c37f:	mov    BYTE PTR [rbx+rax*1],0x1c
    c383:	xor    ebx,ebx
    c385:	nop    DWORD PTR [rax]
    c388:	mov    ecx,DWORD PTR [r14+rbp*4]
    c38c:	mov    r15d,0x1
    c392:	mov    DWORD PTR [r13+rbp*4+0x0],ebx
    c397:	shl    r15d,cl
    c39a:	test   r15d,r15d
    c39d:	jle    c3b9 <__ctype_b_loc@plt+0x9ae9>
    c39f:	movsxd rdi,ebx
    c3a2:	lea    rax,[rip+0x1f757]        # 2bb00 <__ctype_b_loc@plt+0x29230>
    c3a9:	movsxd rdx,r15d
    c3ac:	mov    esi,ebp
    c3ae:	add    rdi,rax
    c3b1:	add    ebx,r15d
    c3b4:	call   2640 <memset@plt>
    c3b9:	add    rbp,0x1
    c3bd:	cmp    rbp,0x10
    c3c1:	jne    c388 <__ctype_b_loc@plt+0x9ab8>
    c3c3:	sar    ebx,0x7
    c3c6:	cs nop WORD PTR [rax+rax*1+0x0]
    c3d0:	mov    eax,ebx
    c3d2:	mov    r15d,0x1
    c3d8:	shl    eax,0x7
    c3db:	mov    DWORD PTR [r13+rbp*4+0x0],eax
    c3e0:	mov    eax,DWORD PTR [r14+rbp*4]
    c3e4:	lea    ecx,[rax-0x7]
    c3e7:	shl    r15d,cl
    c3ea:	test   r15d,r15d
    c3ed:	jle    c40e <__ctype_b_loc@plt+0x9b3e>
    c3ef:	movsxd rax,ebx
    c3f2:	lea    rdi,[rip+0x1f707]        # 2bb00 <__ctype_b_loc@plt+0x29230>
    c3f9:	movsxd rdx,r15d
    c3fc:	mov    esi,ebp
    c3fe:	lea    rdi,[rdi+rax*1+0x100]
    c406:	add    ebx,r15d
    c409:	call   2640 <memset@plt>
    c40e:	add    rbp,0x1
    c412:	cmp    rbp,0x1e
    c416:	jne    c3d0 <__ctype_b_loc@plt+0x9b00>
    c418:	pxor   xmm0,xmm0
    c41c:	lea    rax,[rip+0xdbdf]        # 1a002 <__ctype_b_loc@plt+0x17732>
    c423:	movaps XMMWORD PTR [rip+0x1f9d6],xmm0        # 2be00 <__ctype_b_loc@plt+0x29530>
    c42a:	lea    rdi,[rax-0x2]
    c42e:	lea    rdx,[rax+0x240]
    c435:	movaps XMMWORD PTR [rip+0x1f9d4],xmm0        # 2be10 <__ctype_b_loc@plt+0x29540>
    c43c:	nop    DWORD PTR [rax+0x0]
    c440:	mov    r9d,0x8
    c446:	add    rax,0x4
    c44a:	mov    WORD PTR [rax-0x4],r9w
    c44f:	cmp    rdx,rax
    c452:	jne    c440 <__ctype_b_loc@plt+0x9b70>
    c454:	lea    rax,[rip+0xdde7]        # 1a242 <__ctype_b_loc@plt+0x17972>
    c45b:	lea    rdx,[rax+0x1c0]
    c462:	nop    WORD PTR [rax+rax*1+0x0]
    c468:	mov    r8d,0x9
    c46e:	add    rax,0x4
    c472:	mov    WORD PTR [rax-0x4],r8w
    c477:	cmp    rdx,rax
    c47a:	jne    c468 <__ctype_b_loc@plt+0x9b98>
    c47c:	mov    esi,0x70
    c481:	lea    rax,[rip+0xdf7a]        # 1a402 <__ctype_b_loc@plt+0x17b32>
    c488:	mov    WORD PTR [rip+0x1f983],si        # 2be12 <__ctype_b_loc@plt+0x29542>
    c48f:	lea    rdx,[rax+0x60]
    c493:	nop    DWORD PTR [rax+rax*1+0x0]
    c498:	mov    ecx,0x7
    c49d:	add    rax,0x4
    c4a1:	mov    WORD PTR [rax-0x4],cx
    c4a5:	cmp    rax,rdx
    c4a8:	jne    c498 <__ctype_b_loc@plt+0x9bc8>
    c4aa:	mov    r11d,0x8
    c4b0:	mov    ebx,0x8
    c4b5:	mov    ebp,0x8
    c4ba:	mov    r13d,0x8
    c4c0:	mov    r14d,0x8
    c4c6:	mov    r15d,0x8
    c4cc:	mov    eax,0x8
    c4d1:	mov    WORD PTR [rip+0xdf89],r11w        # 1a462 <__ctype_b_loc@plt+0x17b92>
    c4d9:	mov    WORD PTR [rip+0xdf86],bx        # 1a466 <__ctype_b_loc@plt+0x17b96>
    c4e0:	lea    rcx,[rip+0x1f919]        # 2be00 <__ctype_b_loc@plt+0x29530>
    c4e7:	lea    rdx,[rsp+0x32]
    c4ec:	mov    WORD PTR [rip+0xdf77],bp        # 1a46a <__ctype_b_loc@plt+0x17b9a>
    c4f3:	mov    WORD PTR [rip+0xdf73],r13w        # 1a46e <__ctype_b_loc@plt+0x17b9e>
    c4fb:	mov    WORD PTR [rip+0xdf6f],r14w        # 1a472 <__ctype_b_loc@plt+0x17ba2>
    c503:	mov    WORD PTR [rip+0xdf6b],r15w        # 1a476 <__ctype_b_loc@plt+0x17ba6>
    c50b:	mov    DWORD PTR [rip+0x1f8f9],0x980018        # 2be0e <__ctype_b_loc@plt+0x2953e>
    c515:	mov    WORD PTR [rip+0xdf5e],ax        # 1a47a <__ctype_b_loc@plt+0x17baa>
    c51c:	mov    eax,0x8
    c521:	mov    WORD PTR [rip+0xdf56],ax        # 1a47e <__ctype_b_loc@plt+0x17bae>
    c528:	xor    eax,eax
    c52a:	nop    WORD PTR [rax+rax*1+0x0]
    c530:	add    r12w,WORD PTR [rcx+rax*1]
    c535:	add    r12d,r12d
    c538:	mov    WORD PTR [rdx+rax*1],r12w
    c53d:	add    rax,0x2
    c541:	cmp    rax,0x1e
    c545:	jne    c530 <__ctype_b_loc@plt+0x9c60>
    c547:	lea    r8,[rip+0xdf32]        # 1a480 <__ctype_b_loc@plt+0x17bb0>
    c54e:	xchg   ax,ax
    c550:	movzx  edx,WORD PTR [rdi+0x2]
    c554:	test   edx,edx
    c556:	je     c584 <__ctype_b_loc@plt+0x9cb4>
    c558:	movsxd rax,edx
    c55b:	movzx  ecx,WORD PTR [rsp+rax*2+0x30]
    c560:	lea    esi,[rcx+0x1]
    c563:	mov    WORD PTR [rsp+rax*2+0x30],si
    c568:	xor    esi,esi
    c56a:	nop    WORD PTR [rax+rax*1+0x0]
    c570:	mov    eax,ecx
    c572:	shr    ecx,1
    c574:	and    eax,0x1
    c577:	or     eax,esi
    c579:	lea    esi,[rax+rax*1]
    c57c:	sub    edx,0x1
    c57f:	jne    c570 <__ctype_b_loc@plt+0x9ca0>
    c581:	mov    WORD PTR [rdi],ax
    c584:	add    rdi,0x4
    c588:	cmp    r8,rdi
    c58b:	jne    c550 <__ctype_b_loc@plt+0x9c80>
    c58d:	lea    r9,[rip+0xdeee]        # 1a482 <__ctype_b_loc@plt+0x17bb2>
    c594:	xor    edi,edi
    c596:	lea    r8,[r9-0x2]
    c59a:	nop    WORD PTR [rax+rax*1+0x0]
    c5a0:	mov    r10d,0x5
    c5a6:	mov    ecx,edi
    c5a8:	mov    edx,0x5
    c5ad:	xor    esi,esi
    c5af:	mov    WORD PTR [r9+rdi*4],r10w
    c5b4:	nop    DWORD PTR [rax+0x0]
    c5b8:	mov    eax,ecx
    c5ba:	shr    ecx,1
    c5bc:	and    eax,0x1
    c5bf:	or     eax,esi
    c5c1:	lea    esi,[rax+rax*1]
    c5c4:	sub    edx,0x1
    c5c7:	jne    c5b8 <__ctype_b_loc@plt+0x9ce8>
    c5c9:	mov    WORD PTR [r8+rdi*4],ax
    c5ce:	add    rdi,0x1
    c5d2:	cmp    rdi,0x1e
    c5d6:	jne    c5a0 <__ctype_b_loc@plt+0x9cd0>
    c5d8:	call   3800 <__ctype_b_loc@plt+0xf30>
    c5dd:	mov    eax,DWORD PTR [rip+0xacb5]        # 17298 <__ctype_b_loc@plt+0x149c8>
    c5e3:	mov    edx,0x4
    c5e8:	cmp    eax,0x1
    c5eb:	je     c5f7 <__ctype_b_loc@plt+0x9d27>
    c5ed:	xor    edx,edx
    c5ef:	cmp    eax,0x9
    c5f2:	sete   dl
    c5f5:	add    edx,edx
    c5f7:	mov    ebx,DWORD PTR [rsp+0x10]
    c5fb:	mov    rdi,QWORD PTR [rsp+0x8]
    c600:	lea    eax,[rbx+0x1]
    c603:	mov    BYTE PTR [rdi+rbx*1],dl
    c606:	mov    DWORD PTR [rip+0xd61f4],eax        # e2800 <__ctype_b_loc@plt+0xdff30>
    c60c:	cmp    eax,0x40000
    c611:	je     d193 <__ctype_b_loc@plt+0xa8c3>
    c617:	mov    rbx,QWORD PTR [rsp+0x8]
    c61c:	lea    edx,[rax+0x1]
    c61f:	mov    DWORD PTR [rip+0xd61db],edx        # e2800 <__ctype_b_loc@plt+0xdff30>
    c625:	mov    BYTE PTR [rbx+rax*1],0x3
    c629:	cmp    edx,0x40000
    c62f:	je     d183 <__ctype_b_loc@plt+0xa8b3>
    c635:	mov    r9d,DWORD PTR [rip+0x20e14]        # 2d450 <__ctype_b_loc@plt+0x2ab80>
    c63c:	test   r9d,r9d
    c63f:	je     c6f8 <__ctype_b_loc@plt+0x9e28>
    c645:	movzx  eax,BYTE PTR [rip+0x62394]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    c64c:	lea    rbx,[rip+0x6238d]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    c653:	cmp    al,0x2f
    c655:	jne    c66c <__ctype_b_loc@plt+0x9d9c>
    c657:	nop    WORD PTR [rax+rax*1+0x0]
    c660:	movzx  eax,BYTE PTR [rbx+0x1]
    c664:	add    rbx,0x1
    c668:	cmp    al,0x2f
    c66a:	je     c660 <__ctype_b_loc@plt+0x9d90>
    c66c:	test   al,al
    c66e:	je     c6ae <__ctype_b_loc@plt+0x9dde>
    c670:	mov    rcx,rbx
    c673:	xor    esi,esi
    c675:	jmp    c696 <__ctype_b_loc@plt+0x9dc6>
    c677:	nop    WORD PTR [rax+rax*1+0x0]
    c680:	test   sil,sil
    c683:	je     c68a <__ctype_b_loc@plt+0x9dba>
    c685:	mov    rbx,rcx
    c688:	xor    esi,esi
    c68a:	movzx  eax,BYTE PTR [rcx+0x1]
    c68e:	add    rcx,0x1
    c692:	test   al,al
    c694:	je     c6ab <__ctype_b_loc@plt+0x9ddb>
    c696:	cmp    al,0x2f
    c698:	jne    c680 <__ctype_b_loc@plt+0x9db0>
    c69a:	movzx  eax,BYTE PTR [rcx+0x1]
    c69e:	add    rcx,0x1
    c6a2:	mov    esi,0x1
    c6a7:	test   al,al
    c6a9:	jne    c696 <__ctype_b_loc@plt+0x9dc6>
    c6ab:	movzx  eax,BYTE PTR [rbx]
    c6ae:	mov    rbp,QWORD PTR [rsp+0x8]
    c6b3:	mov    ecx,edx
    c6b5:	jmp    c6cd <__ctype_b_loc@plt+0x9dfd>
    c6b7:	nop    WORD PTR [rax+rax*1+0x0]
    c6c0:	add    rbx,0x1
    c6c4:	test   al,al
    c6c6:	je     c6f8 <__ctype_b_loc@plt+0x9e28>
    c6c8:	movzx  eax,BYTE PTR [rbx]
    c6cb:	mov    ecx,edx
    c6cd:	add    edx,0x1
    c6d0:	mov    BYTE PTR [rbp+rcx*1+0x0],al
    c6d4:	mov    DWORD PTR [rip+0xd6126],edx        # e2800 <__ctype_b_loc@plt+0xdff30>
    c6da:	cmp    edx,0x40000
    c6e0:	jne    c6c0 <__ctype_b_loc@plt+0x9df0>
    c6e2:	call   7910 <__ctype_b_loc@plt+0x5040>
    c6e7:	movzx  eax,BYTE PTR [rbx]
    c6ea:	add    rbx,0x1
    c6ee:	mov    edx,DWORD PTR [rip+0xd610c]        # e2800 <__ctype_b_loc@plt+0xdff30>
    c6f4:	test   al,al
    c6f6:	jne    c6c8 <__ctype_b_loc@plt+0x9df8>
    c6f8:	mov    ebx,DWORD PTR [rip+0xab9a]        # 17298 <__ctype_b_loc@plt+0x149c8>
    c6fe:	mov    eax,edx
    c700:	mov    QWORD PTR [rip+0x61d49],rax        # 6e450 <__ctype_b_loc@plt+0x6bb80>
    c707:	lea    eax,[rbx-0x1]
    c70a:	cmp    eax,0x8
    c70d:	ja     d402 <__ctype_b_loc@plt+0xab32>
    c713:	mov    edx,0x10000
    c718:	xor    esi,esi
    c71a:	lea    rdi,[rip+0x7275f]        # 7ee80 <__ctype_b_loc@plt+0x7c5b0>
    c721:	call   2640 <memset@plt>
    c726:	mov    eax,0xffffffff
    c72b:	movsxd rdx,ebx
    c72e:	lea    r12,[rip+0x838cb]        # 90000 <__ctype_b_loc@plt+0x8d730>
    c735:	mov    QWORD PTR [rip+0x62724],rax        # 6ee60 <__ctype_b_loc@plt+0x6c590>
    c73c:	mov    esi,0x10000
    c741:	lea    rax,[rip+0x53b8]        # 11b00 <__ctype_b_loc@plt+0xf230>
    c748:	mov    rdi,r12
    c74b:	mov    QWORD PTR [rip+0x626ea],0x0        # 6ee40 <__ctype_b_loc@plt+0x6c570>
    c756:	movzx  ecx,WORD PTR [rax+rdx*8+0x2]
    c75b:	mov    DWORD PTR [rip+0x9389b],0x0        # a0000 <__ctype_b_loc@plt+0x9d730>
    c765:	mov    DWORD PTR [rip+0xdda9],ecx        # 1a514 <__ctype_b_loc@plt+0x17c44>
    c76b:	movzx  ecx,WORD PTR [rax+rdx*8]
    c76f:	mov    QWORD PTR [rip+0x626de],0x0        # 6ee58 <__ctype_b_loc@plt+0x6c588>
    c77a:	mov    DWORD PTR [rip+0x82708],ecx        # 8ee88 <__ctype_b_loc@plt+0x8c5b8>
    c780:	movzx  ecx,WORD PTR [rax+rdx*8+0x4]
    c785:	movzx  eax,WORD PTR [rax+rdx*8+0x6]
    c78a:	mov    DWORD PTR [rip+0x826f0],ecx        # 8ee80 <__ctype_b_loc@plt+0x8c5b0>
    c790:	mov    DWORD PTR [rip+0x9386e],eax        # a0004 <__ctype_b_loc@plt+0x9d734>
    c796:	call   QWORD PTR [rip+0x626ac]        # 6ee48 <__ctype_b_loc@plt+0x6c578>
    c79c:	lea    edx,[rax-0x1]
    c79f:	mov    DWORD PTR [rip+0x626c3],eax        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    c7a5:	cmp    edx,0xfffffffd
    c7a8:	ja     ce7a <__ctype_b_loc@plt+0xa5aa>
    c7ae:	mov    DWORD PTR [rip+0x62698],0x0        # 6ee50 <__ctype_b_loc@plt+0x6c580>
    c7b8:	cmp    eax,0x105
    c7bd:	ja     c7dd <__ctype_b_loc@plt+0x9f0d>
    c7bf:	nop
    c7c0:	call   4290 <__ctype_b_loc@plt+0x19c0>
    c7c5:	cmp    DWORD PTR [rip+0x62699],0x105        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    c7cf:	ja     c7dd <__ctype_b_loc@plt+0x9f0d>
    c7d1:	mov    r8d,DWORD PTR [rip+0x62678]        # 6ee50 <__ctype_b_loc@plt+0x6c580>
    c7d8:	test   r8d,r8d
    c7db:	je     c7c0 <__ctype_b_loc@plt+0x9ef0>
    c7dd:	movzx  eax,BYTE PTR [rip+0x8381c]        # 90000 <__ctype_b_loc@plt+0x8d730>
    c7e4:	movzx  edx,BYTE PTR [rip+0x83816]        # 90001 <__ctype_b_loc@plt+0x8d731>
    c7eb:	shl    eax,0x5
    c7ee:	xor    eax,edx
    c7f0:	mov    DWORD PTR [rip+0xdd1a],eax        # 1a510 <__ctype_b_loc@plt+0x17c40>
    c7f6:	cmp    ebx,0x3
    c7f9:	jle    ce97 <__ctype_b_loc@plt+0xa5c7>
    c7ff:	mov    ebx,DWORD PTR [rip+0x62663]        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    c805:	test   ebx,ebx
    c807:	je     d300 <__ctype_b_loc@plt+0xaa30>
    c80d:	xor    r15d,r15d
    c810:	mov    DWORD PTR [rsp+0x10],0x0
    c818:	mov    r8d,0x2
    c81e:	lea    rbp,[rip+0x6265b]        # 6ee80 <__ctype_b_loc@plt+0x6c5b0>
    c825:	nop    DWORD PTR [rax]
    c828:	mov    r14d,DWORD PTR [rip+0x937d1]        # a0000 <__ctype_b_loc@plt+0x9d730>
    c82f:	shl    eax,0x5
    c832:	mov    DWORD PTR [rip+0x82653],r8d        # 8ee8c <__ctype_b_loc@plt+0x8c5bc>
    c839:	mov    esi,DWORD PTR [rip+0x82645]        # 8ee84 <__ctype_b_loc@plt+0x8c5b4>
    c83f:	lea    edx,[r14+0x2]
    c843:	mov    r9d,r14d
    c846:	movzx  edx,BYTE PTR [r12+rdx*1]
    c84b:	and    r9d,0x7fff
    c852:	xor    edx,eax
    c854:	and    edx,0x7fff
    c85a:	lea    eax,[rdx+0x8000]
    c860:	mov    DWORD PTR [rip+0xdcaa],edx        # 1a510 <__ctype_b_loc@plt+0x17c40>
    c866:	lea    rax,[rbp+rax*2+0x0]
    c86b:	movzx  edi,WORD PTR [rax]
    c86e:	mov    WORD PTR [rbp+r9*2+0x0],di
    c874:	mov    WORD PTR [rax],r14w
    c878:	test   edi,edi
    c87a:	je     c8a0 <__ctype_b_loc@plt+0x9fd0>
    c87c:	cmp    r8d,DWORD PTR [rip+0xdc91]        # 1a514 <__ctype_b_loc@plt+0x17c44>
    c883:	jae    c8a0 <__ctype_b_loc@plt+0x9fd0>
    c885:	mov    eax,r14d
    c888:	sub    eax,edi
    c88a:	cmp    eax,0x7efa
    c88f:	ja     c8a0 <__ctype_b_loc@plt+0x9fd0>
    c891:	cmp    r14d,0xfefa
    c898:	jbe    d13a <__ctype_b_loc@plt+0xa86a>
    c89e:	xchg   ax,ax
    c8a0:	mov    r13d,0x2
    c8a6:	mov    r9d,DWORD PTR [rip+0x62543]        # 6edf0 <__ctype_b_loc@plt+0x6c520>
    c8ad:	cmp    r8d,r13d
    c8b0:	jb     c8bc <__ctype_b_loc@plt+0x9fec>
    c8b2:	cmp    r8d,0x2
    c8b6:	ja     cc05 <__ctype_b_loc@plt+0xa335>
    c8bc:	test   r15d,r15d
    c8bf:	jne    c9a8 <__ctype_b_loc@plt+0xa0d8>
    c8c5:	test   r9d,r9d
    c8c8:	je     c938 <__ctype_b_loc@plt+0xa068>
    c8ca:	mov    esi,r14d
    c8cd:	cmp    rsi,QWORD PTR [rip+0x6258c]        # 6ee60 <__ctype_b_loc@plt+0x6c590>
    c8d4:	jbe    ca54 <__ctype_b_loc@plt+0xa184>
    c8da:	mov    eax,0xffffffff
    c8df:	mov    edx,0x1
    c8e4:	mov    QWORD PTR [rip+0x62575],rax        # 6ee60 <__ctype_b_loc@plt+0x6c590>
    c8eb:	mov    rax,QWORD PTR [rip+0x62566]        # 6ee58 <__ctype_b_loc@plt+0x6c588>
    c8f2:	mov    edi,eax
    c8f4:	sub    rsi,rax
    c8f7:	add    rdi,r12
    c8fa:	test   rax,rax
    c8fd:	mov    eax,0x0
    c902:	cmovs  rdi,rax
    c906:	xor    ecx,ecx
    c908:	call   8040 <__ctype_b_loc@plt+0x5770>
    c90d:	mov    eax,DWORD PTR [rip+0x936ed]        # a0000 <__ctype_b_loc@plt+0x9d730>
    c913:	mov    ecx,DWORD PTR [rip+0x624d7]        # 6edf0 <__ctype_b_loc@plt+0x6c520>
    c919:	mov    DWORD PTR [rsp+0x10],0x2
    c921:	mov    QWORD PTR [rip+0x62530],rax        # 6ee58 <__ctype_b_loc@plt+0x6c588>
    c928:	mov    r14,rax
    c92b:	test   ecx,ecx
    c92d:	jne    ca54 <__ctype_b_loc@plt+0xa184>
    c933:	nop    DWORD PTR [rax+rax*1+0x0]
    c938:	mov    eax,DWORD PTR [rip+0x6252a]        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    c93e:	lea    ecx,[r14+0x1]
    c942:	mov    r15d,0x1
    c948:	mov    DWORD PTR [rip+0x936b2],ecx        # a0000 <__ctype_b_loc@plt+0x9d730>
    c94e:	lea    ebx,[rax-0x1]
    c951:	mov    DWORD PTR [rip+0x62511],ebx        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    c957:	cmp    ebx,0x105
    c95d:	jbe    c97b <__ctype_b_loc@plt+0xa0ab>
    c95f:	jmp    c993 <__ctype_b_loc@plt+0xa0c3>
    c961:	nop    DWORD PTR [rax+0x0]
    c968:	call   4290 <__ctype_b_loc@plt+0x19c0>
    c96d:	mov    ebx,DWORD PTR [rip+0x624f5]        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    c973:	cmp    ebx,0x105
    c979:	ja     c993 <__ctype_b_loc@plt+0xa0c3>
    c97b:	mov    edx,DWORD PTR [rip+0x624cf]        # 6ee50 <__ctype_b_loc@plt+0x6c580>
    c981:	test   edx,edx
    c983:	je     c968 <__ctype_b_loc@plt+0xa098>
    c985:	mov    ebx,DWORD PTR [rip+0x624dd]        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    c98b:	test   ebx,ebx
    c98d:	je     ca76 <__ctype_b_loc@plt+0xa1a6>
    c993:	mov    eax,DWORD PTR [rip+0xdb77]        # 1a510 <__ctype_b_loc@plt+0x17c40>
    c999:	mov    r8d,r13d
    c99c:	jmp    c828 <__ctype_b_loc@plt+0x9f58>
    c9a1:	nop    DWORD PTR [rax+0x0]
    c9a8:	lea    eax,[r14-0x1]
    c9ac:	xor    edi,edi
    c9ae:	mov    DWORD PTR [rsp+0x14],r9d
    c9b3:	movzx  esi,BYTE PTR [r12+rax*1]
    c9b8:	call   40e0 <__ctype_b_loc@plt+0x1810>
    c9bd:	mov    r9d,DWORD PTR [rsp+0x14]
    c9c2:	mov    DWORD PTR [rsp+0x10],eax
    c9c6:	test   r9d,r9d
    c9c9:	je     ca66 <__ctype_b_loc@plt+0xa196>
    c9cf:	mov    esi,r14d
    c9d2:	cmp    rsi,QWORD PTR [rip+0x62487]        # 6ee60 <__ctype_b_loc@plt+0x6c590>
    c9d9:	jbe    cbe4 <__ctype_b_loc@plt+0xa314>
    c9df:	mov    eax,0xffffffff
    c9e4:	mov    DWORD PTR [rsp+0x10],0x2
    c9ec:	mov    edx,r15d
    c9ef:	mov    QWORD PTR [rip+0x6246a],rax        # 6ee60 <__ctype_b_loc@plt+0x6c590>
    c9f6:	mov    rax,QWORD PTR [rip+0x6245b]        # 6ee58 <__ctype_b_loc@plt+0x6c588>
    c9fd:	mov    edi,eax
    c9ff:	sub    rsi,rax
    ca02:	add    rdi,r12
    ca05:	test   rax,rax
    ca08:	mov    eax,0x0
    ca0d:	cmovs  rdi,rax
    ca11:	xor    ecx,ecx
    ca13:	call   8040 <__ctype_b_loc@plt+0x5770>
    ca18:	mov    eax,DWORD PTR [rip+0x935e2]        # a0000 <__ctype_b_loc@plt+0x9d730>
    ca1e:	mov    esi,DWORD PTR [rip+0x623cc]        # 6edf0 <__ctype_b_loc@plt+0x6c520>
    ca24:	mov    QWORD PTR [rip+0x6242d],rax        # 6ee58 <__ctype_b_loc@plt+0x6c588>
    ca2b:	mov    r14,rax
    ca2e:	test   esi,esi
    ca30:	jne    cbf3 <__ctype_b_loc@plt+0xa323>
    ca36:	mov    eax,DWORD PTR [rip+0x6242c]        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    ca3c:	lea    ecx,[r14+0x1]
    ca40:	mov    DWORD PTR [rip+0x935ba],ecx        # a0000 <__ctype_b_loc@plt+0x9d730>
    ca46:	lea    ebx,[rax-0x1]
    ca49:	mov    DWORD PTR [rip+0x62419],ebx        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    ca4f:	jmp    c957 <__ctype_b_loc@plt+0xa087>
    ca54:	mov    esi,0x1
    ca59:	mov    edi,r14d
    ca5c:	call   3620 <__ctype_b_loc@plt+0xd50>
    ca61:	jmp    c938 <__ctype_b_loc@plt+0xa068>
    ca66:	mov    eax,DWORD PTR [rsp+0x10]
    ca6a:	mov    esi,r14d
    ca6d:	lea    edx,[rax-0x1]
    ca70:	test   eax,eax
    ca72:	jne    c9f6 <__ctype_b_loc@plt+0xa126>
    ca74:	jmp    ca36 <__ctype_b_loc@plt+0xa166>
    ca76:	mov    edx,DWORD PTR [rsp+0x10]
    ca7a:	mov    r10d,DWORD PTR [rip+0x9357f]        # a0000 <__ctype_b_loc@plt+0x9d730>
    ca81:	sub    edx,0x1
    ca84:	test   r15d,r15d
    ca87:	je     caa1 <__ctype_b_loc@plt+0xa1d1>
    ca89:	lea    eax,[r10-0x1]
    ca8d:	xor    edi,edi
    ca8f:	mov    DWORD PTR [rsp+0x10],edx
    ca93:	movzx  esi,BYTE PTR [r12+rax*1]
    ca98:	call   40e0 <__ctype_b_loc@plt+0x1810>
    ca9d:	mov    edx,DWORD PTR [rsp+0x10]
    caa1:	mov    rax,QWORD PTR [rip+0x623b0]        # 6ee58 <__ctype_b_loc@plt+0x6c588>
    caa8:	mov    esi,r10d
    caab:	mov    ecx,eax
    caad:	sub    rsi,rax
    cab0:	lea    rdi,[r12+rcx*1]
    cab4:	test   rax,rax
    cab7:	mov    eax,0x0
    cabc:	mov    ecx,0x1
    cac1:	cmovs  rdi,rax
    cac5:	call   8040 <__ctype_b_loc@plt+0x5770>
    caca:	mov    rax,QWORD PTR [rip+0x61e4f]        # 6e920 <__ctype_b_loc@plt+0x6c050>
    cad1:	cmp    rax,0xffffffffffffffff
    cad5:	je     cb06 <__ctype_b_loc@plt+0xa236>
    cad7:	cmp    rax,QWORD PTR [rip+0x6197a]        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    cade:	je     cb06 <__ctype_b_loc@plt+0xa236>
    cae0:	mov    rax,QWORD PTR [rip+0xa501]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    cae7:	mov    rdx,QWORD PTR [rip+0x6234a]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    caee:	lea    rcx,[rip+0x61eeb]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    caf5:	lea    rsi,[rip+0x5f34]        # 12a30 <__ctype_b_loc@plt+0x10160>
    cafc:	mov    rdi,QWORD PTR [rax]
    caff:	xor    eax,eax
    cb01:	call   70d0 <__ctype_b_loc@plt+0x4800>
    cb06:	mov    rdx,QWORD PTR [rip+0xa77b]        # 17288 <__ctype_b_loc@plt+0x149b8>
    cb0d:	mov    eax,DWORD PTR [rip+0xd5ced]        # e2800 <__ctype_b_loc@plt+0xdff30>
    cb13:	mov    ebp,0xffffffff
    cb18:	mov    rbx,rdx
    cb1b:	lea    ecx,[rax+0x1]
    cb1e:	xor    rbx,rbp
    cb21:	cmp    eax,0x3fffd
    cb26:	ja     ce20 <__ctype_b_loc@plt+0xa550>
    cb2c:	mov    rdi,QWORD PTR [rsp+0x8]
    cb31:	mov    esi,eax
    cb33:	add    eax,0x2
    cb36:	mov    BYTE PTR [rdi+rsi*1],bl
    cb39:	mov    BYTE PTR [rdi+rcx*1],bh
    cb3c:	shr    rdx,0x10
    cb40:	lea    ecx,[rax+0x1]
    cb43:	xor    rdx,0xffff
    cb4a:	cmp    eax,0x3fffd
    cb4f:	ja     cdda <__ctype_b_loc@plt+0xa50a>
    cb55:	mov    rbx,QWORD PTR [rsp+0x8]
    cb5a:	mov    esi,eax
    cb5c:	add    eax,0x2
    cb5f:	mov    BYTE PTR [rbx+rsi*1],dl
    cb62:	mov    BYTE PTR [rbx+rcx*1],dh
    cb65:	mov    rdx,QWORD PTR [rip+0x618ec]        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    cb6c:	lea    ecx,[rax+0x1]
    cb6f:	cmp    eax,0x3fffd
    cb74:	ja     cd8d <__ctype_b_loc@plt+0xa4bd>
    cb7a:	mov    rbx,QWORD PTR [rsp+0x8]
    cb7f:	mov    esi,eax
    cb81:	add    eax,0x2
    cb84:	mov    BYTE PTR [rbx+rsi*1],dl
    cb87:	mov    BYTE PTR [rbx+rcx*1],dh
    cb8a:	shr    rdx,0x10
    cb8e:	lea    ecx,[rax+0x1]
    cb91:	cmp    eax,0x3fffd
    cb96:	ja     cd4d <__ctype_b_loc@plt+0xa47d>
    cb9c:	mov    rbx,QWORD PTR [rsp+0x8]
    cba1:	mov    esi,eax
    cba3:	add    eax,0x2
    cba6:	mov    DWORD PTR [rip+0xd5c54],eax        # e2800 <__ctype_b_loc@plt+0xdff30>
    cbac:	mov    BYTE PTR [rbx+rsi*1],dl
    cbaf:	mov    BYTE PTR [rbx+rcx*1],dh
    cbb2:	add    QWORD PTR [rip+0x61896],0x8        # 6e450 <__ctype_b_loc@plt+0x6bb80>
    cbba:	call   7910 <__ctype_b_loc@plt+0x5040>
    cbbf:	mov    rax,QWORD PTR [rsp+0x58]
    cbc4:	sub    rax,QWORD PTR fs:0x28
    cbcd:	jne    d40e <__ctype_b_loc@plt+0xab3e>
    cbd3:	add    rsp,0x68
    cbd7:	xor    eax,eax
    cbd9:	pop    rbx
    cbda:	pop    rbp
    cbdb:	pop    r12
    cbdd:	pop    r13
    cbdf:	pop    r14
    cbe1:	pop    r15
    cbe3:	ret    
    cbe4:	mov    eax,DWORD PTR [rsp+0x10]
    cbe8:	lea    edx,[rax-0x1]
    cbeb:	test   eax,eax
    cbed:	jne    c9f6 <__ctype_b_loc@plt+0xa126>
    cbf3:	mov    esi,0x1
    cbf8:	mov    edi,r14d
    cbfb:	call   3620 <__ctype_b_loc@plt+0xd50>
    cc00:	jmp    ca36 <__ctype_b_loc@plt+0xa166>
    cc05:	lea    r13d,[r14-0x1]
    cc09:	lea    r15d,[r8-0x3]
    cc0d:	mov    DWORD PTR [rsp+0x1c],r9d
    cc12:	add    ebx,0x1
    cc15:	mov    edi,r13d
    cc18:	mov    DWORD PTR [rsp+0x18],edx
    cc1c:	sub    edi,esi
    cc1e:	mov    esi,r15d
    cc21:	mov    DWORD PTR [rsp+0x14],r8d
    cc26:	call   40e0 <__ctype_b_loc@plt+0x1810>
    cc2b:	mov    r8d,DWORD PTR [rsp+0x14]
    cc30:	mov    r9d,DWORD PTR [rsp+0x1c]
    cc35:	mov    DWORD PTR [rsp+0x10],eax
    cc39:	mov    edx,DWORD PTR [rsp+0x18]
    cc3d:	sub    ebx,r8d
    cc40:	test   r9d,r9d
    cc43:	mov    DWORD PTR [rip+0x6221f],ebx        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    cc49:	jne    d257 <__ctype_b_loc@plt+0xa987>
    cc4f:	lea    edi,[r8+r14*1-0x2]
    cc54:	mov    eax,r14d
    cc57:	nop    WORD PTR [rax+rax*1+0x0]
    cc60:	mov    ecx,eax
    cc62:	shl    edx,0x5
    cc65:	add    eax,0x1
    cc68:	add    ecx,0x3
    cc6b:	mov    r10d,eax
    cc6e:	movzx  ecx,BYTE PTR [r12+rcx*1]
    cc73:	and    r10d,0x7fff
    cc7a:	xor    edx,ecx
    cc7c:	and    edx,0x7fff
    cc82:	lea    ecx,[rdx+0x8000]
    cc88:	lea    rsi,[rbp+rcx*2+0x0]
    cc8d:	movzx  r11d,WORD PTR [rsi]
    cc91:	mov    WORD PTR [rbp+r10*2+0x0],r11w
    cc97:	mov    WORD PTR [rsi],ax
    cc9a:	cmp    eax,edi
    cc9c:	jne    cc60 <__ctype_b_loc@plt+0xa390>
    cc9e:	lea    r15d,[r14+r15*1+0x1]
    cca3:	add    r13d,r8d
    cca6:	mov    WORD PTR [rbp+r10*2+0x0],r11w
    ccac:	mov    DWORD PTR [rip+0xd85e],edx        # 1a510 <__ctype_b_loc@plt+0x17c40>
    ccb2:	mov    WORD PTR [rsi],r15w
    ccb6:	mov    DWORD PTR [rip+0x821cc],0x0        # 8ee8c <__ctype_b_loc@plt+0x8c5bc>
    ccc0:	mov    DWORD PTR [rip+0x93339],r13d        # a0000 <__ctype_b_loc@plt+0x9d730>
    ccc7:	test   r9d,r9d
    ccca:	je     ccf4 <__ctype_b_loc@plt+0xa424>
    cccc:	mov    eax,r13d
    cccf:	cmp    rax,QWORD PTR [rip+0x6218a]        # 6ee60 <__ctype_b_loc@plt+0x6c590>
    ccd6:	jbe    ccf4 <__ctype_b_loc@plt+0xa424>
    ccd8:	mov    ebx,0xffffffff
    ccdd:	mov    DWORD PTR [rsp+0x10],0x2
    cce5:	mov    r8d,0x1
    cceb:	mov    QWORD PTR [rip+0x6216e],rbx        # 6ee60 <__ctype_b_loc@plt+0x6c590>
    ccf2:	jmp    cd07 <__ctype_b_loc@plt+0xa437>
    ccf4:	mov    eax,DWORD PTR [rsp+0x10]
    ccf8:	test   eax,eax
    ccfa:	je     d249 <__ctype_b_loc@plt+0xa979>
    cd00:	lea    r8d,[rax-0x1]
    cd04:	mov    eax,r13d
    cd07:	mov    rdx,QWORD PTR [rip+0x6214a]        # 6ee58 <__ctype_b_loc@plt+0x6c588>
    cd0e:	mov    r13d,0x2
    cd14:	sub    rax,rdx
    cd17:	mov    edi,edx
    cd19:	mov    rsi,rax
    cd1c:	add    rdi,r12
    cd1f:	xor    eax,eax
    cd21:	test   rdx,rdx
    cd24:	cmovs  rdi,rax
    cd28:	mov    edx,r8d
    cd2b:	xor    ecx,ecx
    cd2d:	xor    r15d,r15d
    cd30:	call   8040 <__ctype_b_loc@plt+0x5770>
    cd35:	mov    eax,DWORD PTR [rip+0x932c5]        # a0000 <__ctype_b_loc@plt+0x9d730>
    cd3b:	mov    ebx,DWORD PTR [rip+0x62127]        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    cd41:	mov    QWORD PTR [rip+0x62110],rax        # 6ee58 <__ctype_b_loc@plt+0x6c588>
    cd48:	jmp    c957 <__ctype_b_loc@plt+0xa087>
    cd4d:	mov    rbx,QWORD PTR [rsp+0x8]
    cd52:	mov    DWORD PTR [rip+0xd5aa8],ecx        # e2800 <__ctype_b_loc@plt+0xdff30>
    cd58:	mov    BYTE PTR [rbx+rax*1],dl
    cd5b:	cmp    ecx,0x40000
    cd61:	je     d276 <__ctype_b_loc@plt+0xa9a6>
    cd67:	mov    rdi,QWORD PTR [rsp+0x8]
    cd6c:	lea    eax,[rcx+0x1]
    cd6f:	mov    DWORD PTR [rip+0xd5a8b],eax        # e2800 <__ctype_b_loc@plt+0xdff30>
    cd75:	mov    BYTE PTR [rdi+rcx*1],dh
    cd78:	cmp    eax,0x40000
    cd7d:	jne    cbb2 <__ctype_b_loc@plt+0xa2e2>
    cd83:	call   7910 <__ctype_b_loc@plt+0x5040>
    cd88:	jmp    cbb2 <__ctype_b_loc@plt+0xa2e2>
    cd8d:	mov    rbx,QWORD PTR [rsp+0x8]
    cd92:	mov    DWORD PTR [rip+0xd5a68],ecx        # e2800 <__ctype_b_loc@plt+0xdff30>
    cd98:	mov    BYTE PTR [rbx+rax*1],dl
    cd9b:	cmp    ecx,0x40000
    cda1:	je     d2b3 <__ctype_b_loc@plt+0xa9e3>
    cda7:	mov    rdi,QWORD PTR [rsp+0x8]
    cdac:	lea    eax,[rcx+0x1]
    cdaf:	mov    DWORD PTR [rip+0xd5a4b],eax        # e2800 <__ctype_b_loc@plt+0xdff30>
    cdb5:	mov    BYTE PTR [rdi+rcx*1],dh
    cdb8:	cmp    eax,0x40000
    cdbd:	jne    cb8a <__ctype_b_loc@plt+0xa2ba>
    cdc3:	call   7910 <__ctype_b_loc@plt+0x5040>
    cdc8:	mov    eax,DWORD PTR [rip+0xd5a32]        # e2800 <__ctype_b_loc@plt+0xdff30>
    cdce:	mov    rdx,QWORD PTR [rip+0x61683]        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    cdd5:	jmp    cb8a <__ctype_b_loc@plt+0xa2ba>
    cdda:	mov    rbx,QWORD PTR [rsp+0x8]
    cddf:	mov    DWORD PTR [rip+0xd5a1b],ecx        # e2800 <__ctype_b_loc@plt+0xdff30>
    cde5:	mov    BYTE PTR [rbx+rax*1],dl
    cde8:	cmp    ecx,0x40000
    cdee:	je     d291 <__ctype_b_loc@plt+0xa9c1>
    cdf4:	mov    rdi,QWORD PTR [rsp+0x8]
    cdf9:	lea    eax,[rcx+0x1]
    cdfc:	mov    DWORD PTR [rip+0xd59fe],eax        # e2800 <__ctype_b_loc@plt+0xdff30>
    ce02:	mov    BYTE PTR [rdi+rcx*1],dh
    ce05:	cmp    eax,0x40000
    ce0a:	jne    cb65 <__ctype_b_loc@plt+0xa295>
    ce10:	call   7910 <__ctype_b_loc@plt+0x5040>
    ce15:	mov    eax,DWORD PTR [rip+0xd59e5]        # e2800 <__ctype_b_loc@plt+0xdff30>
    ce1b:	jmp    cb65 <__ctype_b_loc@plt+0xa295>
    ce20:	mov    rdi,QWORD PTR [rsp+0x8]
    ce25:	mov    DWORD PTR [rip+0xd59d5],ecx        # e2800 <__ctype_b_loc@plt+0xdff30>
    ce2b:	mov    BYTE PTR [rdi+rax*1],bl
    ce2e:	cmp    ecx,0x40000
    ce34:	je     d2ca <__ctype_b_loc@plt+0xa9fa>
    ce3a:	mov    rdi,QWORD PTR [rsp+0x8]
    ce3f:	lea    eax,[rcx+0x1]
    ce42:	mov    DWORD PTR [rip+0xd59b8],eax        # e2800 <__ctype_b_loc@plt+0xdff30>
    ce48:	mov    BYTE PTR [rdi+rcx*1],bh
    ce4b:	cmp    eax,0x40000
    ce50:	jne    cb3c <__ctype_b_loc@plt+0xa26c>
    ce56:	call   7910 <__ctype_b_loc@plt+0x5040>
    ce5b:	mov    eax,DWORD PTR [rip+0xd599f]        # e2800 <__ctype_b_loc@plt+0xdff30>
    ce61:	mov    rdx,QWORD PTR [rip+0xa420]        # 17288 <__ctype_b_loc@plt+0x149b8>
    ce68:	jmp    cb3c <__ctype_b_loc@plt+0xa26c>
    ce6d:	xor    edx,edx
    ce6f:	xor    ecx,ecx
    ce71:	xor    esi,esi
    ce73:	xor    edi,edi
    ce75:	jmp    c26d <__ctype_b_loc@plt+0x999d>
    ce7a:	mov    DWORD PTR [rip+0x61fcc],0x1        # 6ee50 <__ctype_b_loc@plt+0x6c580>
    ce84:	mov    DWORD PTR [rip+0x61fda],0x0        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    ce8e:	cmp    ebx,0x3
    ce91:	jg     d300 <__ctype_b_loc@plt+0xaa30>
    ce97:	mov    r13d,DWORD PTR [rip+0x61fca]        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    ce9e:	mov    DWORD PTR [rip+0x81fe4],0x2        # 8ee8c <__ctype_b_loc@plt+0x8c5bc>
    cea8:	test   r13d,r13d
    ceab:	je     d3c1 <__ctype_b_loc@plt+0xaaf1>
    ceb1:	lea    rbp,[rip+0x61fc8]        # 6ee80 <__ctype_b_loc@plt+0x6c5b0>
    ceb8:	mov    ebx,DWORD PTR [rip+0x93142]        # a0000 <__ctype_b_loc@plt+0x9d730>
    cebe:	mov    r14d,DWORD PTR [rip+0xd64b]        # 1a510 <__ctype_b_loc@plt+0x17c40>
    cec5:	mov    r15d,DWORD PTR [rip+0x61f24]        # 6edf0 <__ctype_b_loc@plt+0x6c520>
    cecc:	lea    eax,[rbx+0x2]
    cecf:	shl    r14d,0x5
    ced3:	mov    esi,ebx
    ced5:	movzx  eax,BYTE PTR [r12+rax*1]
    ceda:	and    esi,0x7fff
    cee0:	xor    r14d,eax
    cee3:	and    r14d,0x7fff
    ceea:	lea    eax,[r14+0x8000]
    cef1:	mov    DWORD PTR [rip+0xd618],r14d        # 1a510 <__ctype_b_loc@plt+0x17c40>
    cef8:	lea    rax,[rbp+rax*2+0x0]
    cefd:	movzx  edi,WORD PTR [rax]
    cf00:	mov    WORD PTR [rbp+rsi*2+0x0],di
    cf05:	mov    WORD PTR [rax],bx
    cf08:	test   edi,edi
    cf0a:	je     cf23 <__ctype_b_loc@plt+0xa653>
    cf0c:	mov    eax,ebx
    cf0e:	sub    eax,edi
    cf10:	cmp    eax,0x7efa
    cf15:	ja     cf23 <__ctype_b_loc@plt+0xa653>
    cf17:	cmp    ebx,0xfefa
    cf1d:	jbe    d035 <__ctype_b_loc@plt+0xa765>
    cf23:	mov    eax,ebx
    cf25:	xor    edi,edi
    cf27:	movzx  esi,BYTE PTR [r12+rax*1]
    cf2c:	call   40e0 <__ctype_b_loc@plt+0x1810>
    cf31:	mov    DWORD PTR [rsp+0x10],eax
    cf35:	test   r15d,r15d
    cf38:	jne    d0a6 <__ctype_b_loc@plt+0xa7d6>
    cf3e:	sub    r13d,0x1
    cf42:	lea    eax,[rbx+0x1]
    cf45:	mov    DWORD PTR [rip+0x61f1c],r13d        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    cf4c:	mov    DWORD PTR [rip+0x930ae],eax        # a0000 <__ctype_b_loc@plt+0x9d730>
    cf52:	test   r15d,r15d
    cf55:	je     d01f <__ctype_b_loc@plt+0xa74f>
    cf5b:	mov    esi,DWORD PTR [rip+0x9309f]        # a0000 <__ctype_b_loc@plt+0x9d730>
    cf61:	cmp    rsi,QWORD PTR [rip+0x61ef8]        # 6ee60 <__ctype_b_loc@plt+0x6c590>
    cf68:	jbe    d01f <__ctype_b_loc@plt+0xa74f>
    cf6e:	mov    eax,0xffffffff
    cf73:	mov    DWORD PTR [rsp+0x10],0x2
    cf7b:	mov    edx,0x1
    cf80:	mov    QWORD PTR [rip+0x61ed9],rax        # 6ee60 <__ctype_b_loc@plt+0x6c590>
    cf87:	mov    rax,QWORD PTR [rip+0x61eca]        # 6ee58 <__ctype_b_loc@plt+0x6c588>
    cf8e:	mov    edi,eax
    cf90:	sub    rsi,rax
    cf93:	add    rdi,r12
    cf96:	test   rax,rax
    cf99:	mov    eax,0x0
    cf9e:	cmovs  rdi,rax
    cfa2:	xor    ecx,ecx
    cfa4:	call   8040 <__ctype_b_loc@plt+0x5770>
    cfa9:	mov    eax,DWORD PTR [rip+0x93051]        # a0000 <__ctype_b_loc@plt+0x9d730>
    cfaf:	mov    QWORD PTR [rip+0x61ea2],rax        # 6ee58 <__ctype_b_loc@plt+0x6c588>
    cfb6:	mov    eax,DWORD PTR [rip+0x61eac]        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    cfbc:	mov    r13d,eax
    cfbf:	cmp    eax,0x105
    cfc4:	jbe    cfe9 <__ctype_b_loc@plt+0xa719>
    cfc6:	jmp    ceb8 <__ctype_b_loc@plt+0xa5e8>
    cfcb:	nop    DWORD PTR [rax+rax*1+0x0]
    cfd0:	call   4290 <__ctype_b_loc@plt+0x19c0>
    cfd5:	mov    eax,DWORD PTR [rip+0x61e8d]        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    cfdb:	mov    r13d,eax
    cfde:	cmp    eax,0x105
    cfe3:	ja     ceb8 <__ctype_b_loc@plt+0xa5e8>
    cfe9:	mov    edi,DWORD PTR [rip+0x61e61]        # 6ee50 <__ctype_b_loc@plt+0x6c580>
    cfef:	test   edi,edi
    cff1:	je     cfd0 <__ctype_b_loc@plt+0xa700>
    cff3:	mov    r13d,eax
    cff6:	test   eax,eax
    cff8:	jne    ceb8 <__ctype_b_loc@plt+0xa5e8>
    cffe:	mov    ebx,DWORD PTR [rsp+0x10]
    d002:	lea    edx,[rbx-0x1]
    d005:	mov    rax,QWORD PTR [rip+0x61e4c]        # 6ee58 <__ctype_b_loc@plt+0x6c588>
    d00c:	mov    esi,DWORD PTR [rip+0x92fee]        # a0000 <__ctype_b_loc@plt+0x9d730>
    d012:	mov    edi,eax
    d014:	sub    rsi,rax
    d017:	add    rdi,r12
    d01a:	jmp    cab4 <__ctype_b_loc@plt+0xa1e4>
    d01f:	mov    eax,DWORD PTR [rsp+0x10]
    d023:	test   eax,eax
    d025:	je     cfb6 <__ctype_b_loc@plt+0xa6e6>
    d027:	mov    esi,DWORD PTR [rip+0x92fd3]        # a0000 <__ctype_b_loc@plt+0x9d730>
    d02d:	lea    edx,[rax-0x1]
    d030:	jmp    cf87 <__ctype_b_loc@plt+0xa6b7>
    d035:	call   3400 <__ctype_b_loc@plt+0xb30>
    d03a:	cmp    eax,r13d
    d03d:	cmova  eax,r13d
    d041:	cmp    eax,0x2
    d044:	jbe    cf23 <__ctype_b_loc@plt+0xa653>
    d04a:	lea    esi,[rax-0x3]
    d04d:	mov    edi,ebx
    d04f:	sub    edi,DWORD PTR [rip+0x81e2f]        # 8ee84 <__ctype_b_loc@plt+0x8c5b4>
    d055:	mov    DWORD PTR [rsp+0x14],eax
    d059:	call   40e0 <__ctype_b_loc@plt+0x1810>
    d05e:	mov    ecx,DWORD PTR [rsp+0x14]
    d062:	mov    DWORD PTR [rsp+0x10],eax
    d066:	sub    r13d,ecx
    d069:	mov    DWORD PTR [rip+0x61df8],r13d        # 6ee68 <__ctype_b_loc@plt+0x6c598>
    d070:	test   r15d,r15d
    d073:	jne    d0b7 <__ctype_b_loc@plt+0xa7e7>
    d075:	cmp    ecx,DWORD PTR [rip+0xd499]        # 1a514 <__ctype_b_loc@plt+0x17c44>
    d07b:	jbe    d0cc <__ctype_b_loc@plt+0xa7fc>
    d07d:	lea    eax,[rcx+rbx*1]
    d080:	mov    rcx,rax
    d083:	mov    DWORD PTR [rip+0x92f77],eax        # a0000 <__ctype_b_loc@plt+0x9d730>
    d089:	movzx  eax,BYTE PTR [r12+rax*1]
    d08e:	lea    edx,[rcx+0x1]
    d091:	movzx  edx,BYTE PTR [r12+rdx*1]
    d096:	shl    eax,0x5
    d099:	xor    eax,edx
    d09b:	mov    DWORD PTR [rip+0xd46f],eax        # 1a510 <__ctype_b_loc@plt+0x17c40>
    d0a1:	jmp    cf52 <__ctype_b_loc@plt+0xa682>
    d0a6:	mov    esi,0x1
    d0ab:	mov    edi,ebx
    d0ad:	call   3620 <__ctype_b_loc@plt+0xd50>
    d0b2:	jmp    cf3e <__ctype_b_loc@plt+0xa66e>
    d0b7:	mov    esi,ecx
    d0b9:	mov    edi,ebx
    d0bb:	call   3620 <__ctype_b_loc@plt+0xd50>
    d0c0:	mov    ecx,DWORD PTR [rsp+0x14]
    d0c4:	cmp    ecx,DWORD PTR [rip+0xd44a]        # 1a514 <__ctype_b_loc@plt+0x17c44>
    d0ca:	ja     d07d <__ctype_b_loc@plt+0xa7ad>
    d0cc:	lea    r8d,[rbx+rcx*1-0x1]
    d0d1:	mov    eax,ebx
    d0d3:	nop    DWORD PTR [rax+rax*1+0x0]
    d0d8:	mov    esi,eax
    d0da:	shl    r14d,0x5
    d0de:	add    eax,0x1
    d0e1:	add    esi,0x3
    d0e4:	mov    edi,eax
    d0e6:	movzx  esi,BYTE PTR [r12+rsi*1]
    d0eb:	and    edi,0x7fff
    d0f1:	xor    r14d,esi
    d0f4:	and    r14d,0x7fff
    d0fb:	lea    esi,[r14+0x8000]
    d102:	lea    rsi,[rbp+rsi*2+0x0]
    d107:	movzx  r9d,WORD PTR [rsi]
    d10b:	mov    WORD PTR [rbp+rdi*2+0x0],r9w
    d111:	mov    WORD PTR [rsi],ax
    d114:	cmp    eax,r8d
    d117:	jne    d0d8 <__ctype_b_loc@plt+0xa808>
    d119:	lea    eax,[rbx+rcx*1-0x1]
    d11d:	add    ecx,ebx
    d11f:	mov    WORD PTR [rbp+rdi*2+0x0],r9w
    d125:	mov    DWORD PTR [rip+0xd3e4],r14d        # 1a510 <__ctype_b_loc@plt+0x17c40>
    d12c:	mov    WORD PTR [rsi],ax
    d12f:	mov    DWORD PTR [rip+0x92ecb],ecx        # a0000 <__ctype_b_loc@plt+0x9d730>
    d135:	jmp    cf52 <__ctype_b_loc@plt+0xa682>
    d13a:	mov    DWORD PTR [rsp+0x1c],r8d
    d13f:	mov    DWORD PTR [rsp+0x18],esi
    d143:	mov    DWORD PTR [rsp+0x14],edx
    d147:	call   3400 <__ctype_b_loc@plt+0xb30>
    d14c:	mov    edx,DWORD PTR [rsp+0x14]
    d150:	mov    esi,DWORD PTR [rsp+0x18]
    d154:	cmp    eax,ebx
    d156:	mov    r8d,DWORD PTR [rsp+0x1c]
    d15b:	cmova  eax,ebx
    d15e:	cmp    eax,0x3
    d161:	mov    r13d,eax
    d164:	jne    c8a6 <__ctype_b_loc@plt+0x9fd6>
    d16a:	mov    eax,r14d
    d16d:	sub    eax,DWORD PTR [rip+0x81d11]        # 8ee84 <__ctype_b_loc@plt+0x8c5b4>
    d173:	cmp    eax,0x1000
    d178:	ja     c8a0 <__ctype_b_loc@plt+0x9fd0>
    d17e:	jmp    c8a6 <__ctype_b_loc@plt+0x9fd6>
    d183:	call   7910 <__ctype_b_loc@plt+0x5040>
    d188:	mov    edx,DWORD PTR [rip+0xd5672]        # e2800 <__ctype_b_loc@plt+0xdff30>
    d18e:	jmp    c635 <__ctype_b_loc@plt+0x9d65>
    d193:	call   7910 <__ctype_b_loc@plt+0x5040>
    d198:	mov    eax,DWORD PTR [rip+0xd5662]        # e2800 <__ctype_b_loc@plt+0xdff30>
    d19e:	jmp    c617 <__ctype_b_loc@plt+0x9d47>
    d1a3:	mov    ebx,DWORD PTR [rip+0x61c6f]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    d1a9:	test   ebx,ebx
    d1ab:	je     d311 <__ctype_b_loc@plt+0xaa41>
    d1b1:	mov    eax,DWORD PTR [rip+0x61809]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    d1b7:	test   eax,eax
    d1b9:	jne    d3da <__ctype_b_loc@plt+0xab0a>
    d1bf:	mov    DWORD PTR [rip+0x617f7],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    d1c9:	mov    ecx,0x5
    d1ce:	mov    edx,0x4
    d1d3:	lea    rdi,[rip+0x94e26]        # a2000 <__ctype_b_loc@plt+0x9f730>
    d1da:	lea    ebx,[rdx+0x2]
    d1dd:	mov    BYTE PTR [rdi+rdx*1],0x0
    d1e1:	lea    eax,[rdx+0x3]
    d1e4:	mov    QWORD PTR [rsp+0x8],rdi
    d1e9:	mov    BYTE PTR [rdi+rcx*1],0x0
    d1ed:	cmp    ebx,0x3fffd
    d1f3:	jbe    d2f7 <__ctype_b_loc@plt+0xaa27>
    d1f9:	mov    rdi,QWORD PTR [rsp+0x8]
    d1fe:	mov    DWORD PTR [rip+0xd55fc],eax        # e2800 <__ctype_b_loc@plt+0xdff30>
    d204:	mov    BYTE PTR [rdi+rbx*1],0x0
    d208:	cmp    eax,0x40000
    d20d:	je     d2e7 <__ctype_b_loc@plt+0xaa17>
    d213:	mov    rdi,QWORD PTR [rsp+0x8]
    d218:	lea    ebx,[rax+0x1]
    d21b:	mov    DWORD PTR [rsp+0x10],ebx
    d21f:	mov    DWORD PTR [rip+0xd55db],ebx        # e2800 <__ctype_b_loc@plt+0xdff30>
    d225:	mov    BYTE PTR [rdi+rax*1],0x0
    d229:	cmp    ebx,0x40000
    d22f:	jne    c2ab <__ctype_b_loc@plt+0x99db>
    d235:	call   7910 <__ctype_b_loc@plt+0x5040>
    d23a:	mov    eax,DWORD PTR [rip+0xd55c0]        # e2800 <__ctype_b_loc@plt+0xdff30>
    d240:	mov    DWORD PTR [rsp+0x10],eax
    d244:	jmp    c2ab <__ctype_b_loc@plt+0x99db>
    d249:	xor    r15d,r15d
    d24c:	mov    r13d,0x2
    d252:	jmp    c957 <__ctype_b_loc@plt+0xa087>
    d257:	lea    esi,[r8-0x1]
    d25b:	mov    edi,r14d
    d25e:	call   3620 <__ctype_b_loc@plt+0xd50>
    d263:	mov    r9d,DWORD PTR [rsp+0x1c]
    d268:	mov    edx,DWORD PTR [rsp+0x18]
    d26c:	mov    r8d,DWORD PTR [rsp+0x14]
    d271:	jmp    cc4f <__ctype_b_loc@plt+0xa37f>
    d276:	call   7910 <__ctype_b_loc@plt+0x5040>
    d27b:	mov    rdx,QWORD PTR [rip+0x611d6]        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    d282:	mov    ecx,DWORD PTR [rip+0xd5578]        # e2800 <__ctype_b_loc@plt+0xdff30>
    d288:	shr    rdx,0x10
    d28c:	jmp    cd67 <__ctype_b_loc@plt+0xa497>
    d291:	call   7910 <__ctype_b_loc@plt+0x5040>
    d296:	mov    rdx,QWORD PTR [rip+0x9feb]        # 17288 <__ctype_b_loc@plt+0x149b8>
    d29d:	mov    ecx,DWORD PTR [rip+0xd555d]        # e2800 <__ctype_b_loc@plt+0xdff30>
    d2a3:	shr    rdx,0x10
    d2a7:	xor    rdx,0xffff
    d2ae:	jmp    cdf4 <__ctype_b_loc@plt+0xa524>
    d2b3:	call   7910 <__ctype_b_loc@plt+0x5040>
    d2b8:	mov    rdx,QWORD PTR [rip+0x61199]        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    d2bf:	mov    ecx,DWORD PTR [rip+0xd553b]        # e2800 <__ctype_b_loc@plt+0xdff30>
    d2c5:	jmp    cda7 <__ctype_b_loc@plt+0xa4d7>
    d2ca:	call   7910 <__ctype_b_loc@plt+0x5040>
    d2cf:	mov    rdx,QWORD PTR [rip+0x9fb2]        # 17288 <__ctype_b_loc@plt+0x149b8>
    d2d6:	mov    rbx,rbp
    d2d9:	mov    ecx,DWORD PTR [rip+0xd5521]        # e2800 <__ctype_b_loc@plt+0xdff30>
    d2df:	xor    rbx,rdx
    d2e2:	jmp    ce3a <__ctype_b_loc@plt+0xa56a>
    d2e7:	call   7910 <__ctype_b_loc@plt+0x5040>
    d2ec:	mov    eax,DWORD PTR [rip+0xd550e]        # e2800 <__ctype_b_loc@plt+0xdff30>
    d2f2:	jmp    d213 <__ctype_b_loc@plt+0xa943>
    d2f7:	xor    edx,edx
    d2f9:	xor    ecx,ecx
    d2fb:	jmp    c291 <__ctype_b_loc@plt+0x99c1>
    d300:	mov    r10d,DWORD PTR [rip+0x92cf9]        # a0000 <__ctype_b_loc@plt+0x9d730>
    d307:	mov    edx,0xffffffff
    d30c:	jmp    caa1 <__ctype_b_loc@plt+0xa1d1>
    d311:	mov    rax,QWORD PTR [rip+0x9cd0]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    d318:	mov    rdx,QWORD PTR [rip+0x61b19]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    d31f:	lea    rcx,[rip+0x616ba]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    d326:	lea    r8,[rip+0x56d3]        # 12a00 <__ctype_b_loc@plt+0x10130>
    d32d:	lea    rsi,[rip+0x3d66]        # 1109a <__ctype_b_loc@plt+0xe7ca>
    d334:	mov    rdi,QWORD PTR [rax]
    d337:	xor    eax,eax
    d339:	call   70d0 <__ctype_b_loc@plt+0x4800>
    d33e:	mov    edx,DWORD PTR [rip+0xd54bc]        # e2800 <__ctype_b_loc@plt+0xdff30>
    d344:	mov    r11d,DWORD PTR [rip+0x61675]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    d34b:	lea    ecx,[rdx+0x1]
    d34e:	test   r11d,r11d
    d351:	je     d3cb <__ctype_b_loc@plt+0xaafb>
    d353:	cmp    edx,0x3fffd
    d359:	jbe    d1d3 <__ctype_b_loc@plt+0xa903>
    d35f:	lea    rax,[rip+0x94c9a]        # a2000 <__ctype_b_loc@plt+0x9f730>
    d366:	mov    DWORD PTR [rip+0xd5494],ecx        # e2800 <__ctype_b_loc@plt+0xdff30>
    d36c:	mov    QWORD PTR [rsp+0x8],rax
    d371:	mov    BYTE PTR [rax+rdx*1],0x0
    d375:	cmp    ecx,0x40000
    d37b:	je     d3a1 <__ctype_b_loc@plt+0xaad1>
    d37d:	mov    rdi,QWORD PTR [rsp+0x8]
    d382:	lea    ebx,[rcx+0x1]
    d385:	mov    eax,ecx
    d387:	mov    DWORD PTR [rip+0xd5473],ebx        # e2800 <__ctype_b_loc@plt+0xdff30>
    d38d:	mov    BYTE PTR [rdi+rax*1],0x0
    d391:	cmp    ebx,0x40000
    d397:	je     d3ae <__ctype_b_loc@plt+0xaade>
    d399:	lea    eax,[rcx+0x2]
    d39c:	jmp    d1ed <__ctype_b_loc@plt+0xa91d>
    d3a1:	call   7910 <__ctype_b_loc@plt+0x5040>
    d3a6:	mov    ecx,DWORD PTR [rip+0xd5454]        # e2800 <__ctype_b_loc@plt+0xdff30>
    d3ac:	jmp    d37d <__ctype_b_loc@plt+0xaaad>
    d3ae:	call   7910 <__ctype_b_loc@plt+0x5040>
    d3b3:	mov    ebx,DWORD PTR [rip+0xd5447]        # e2800 <__ctype_b_loc@plt+0xdff30>
    d3b9:	lea    eax,[rbx+0x1]
    d3bc:	jmp    d1ed <__ctype_b_loc@plt+0xa91d>
    d3c1:	mov    edx,0xffffffff
    d3c6:	jmp    d005 <__ctype_b_loc@plt+0xa735>
    d3cb:	mov    DWORD PTR [rip+0x615eb],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    d3d5:	jmp    d353 <__ctype_b_loc@plt+0xaa83>
    d3da:	lea    rdi,[rip+0x94c1f]        # a2000 <__ctype_b_loc@plt+0x9f730>
    d3e1:	xor    edx,edx
    d3e3:	xor    ecx,ecx
    d3e5:	mov    eax,0x7
    d3ea:	mov    WORD PTR [rip+0x94c11],0x0        # a2004 <__ctype_b_loc@plt+0x9f734>
    d3f3:	mov    ebx,0x6
    d3f8:	mov    QWORD PTR [rsp+0x8],rdi
    d3fd:	jmp    c291 <__ctype_b_loc@plt+0x99c1>
    d402:	lea    rdi,[rip+0x3ca6]        # 110af <__ctype_b_loc@plt+0xe7df>
    d409:	call   72e0 <__ctype_b_loc@plt+0x4a10>
    d40e:	call   2600 <__stack_chk_fail@plt>
    d413:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    d41e:	xchg   ax,ax
    d420:	push   r13
    d422:	mov    r8,rsi
    d425:	mov    rcx,rdx
    d428:	push   r12
    d42a:	mov    rdx,r8
    d42d:	mov    r12,rdi
    d430:	push   rbp
    d431:	push   rbx
    d432:	sub    rsp,0x7f8
    d439:	mov    rax,QWORD PTR fs:0x28
    d442:	mov    QWORD PTR [rsp+0x7e8],rax
    d44a:	xor    eax,eax
    d44c:	lea    r13,[rsp+0x10]
    d451:	lea    rsi,[rsp+0x8]
    d456:	mov    QWORD PTR [rsp+0x8],0x7d0
    d45f:	mov    rdi,r13
    d462:	call   4fa0 <__ctype_b_loc@plt+0x26d0>
    d467:	mov    rbx,QWORD PTR [rsp+0x8]
    d46c:	test   rax,rax
    d46f:	je     d4fe <__ctype_b_loc@plt+0xac2e>
    d475:	mov    rcx,r12
    d478:	mov    rdx,rbx
    d47b:	mov    esi,0x1
    d480:	mov    rdi,rax
    d483:	mov    rbp,rax
    d486:	call   2870 <fwrite@plt>
    d48b:	cmp    rax,rbx
    d48e:	jb     d4d0 <__ctype_b_loc@plt+0xac00>
    d490:	cmp    rbp,r13
    d493:	je     d49d <__ctype_b_loc@plt+0xabcd>
    d495:	mov    rdi,rbp
    d498:	call   24e0 <free@plt>
    d49d:	cmp    rbx,0x7fffffff
    d4a4:	ja     d4f3 <__ctype_b_loc@plt+0xac23>
    d4a6:	mov    r12d,ebx
    d4a9:	mov    rax,QWORD PTR [rsp+0x7e8]
    d4b1:	sub    rax,QWORD PTR fs:0x28
    d4ba:	jne    d50b <__ctype_b_loc@plt+0xac3b>
    d4bc:	add    rsp,0x7f8
    d4c3:	mov    eax,r12d
    d4c6:	pop    rbx
    d4c7:	pop    rbp
    d4c8:	pop    r12
    d4ca:	pop    r13
    d4cc:	ret    
    d4cd:	nop    DWORD PTR [rax]
    d4d0:	mov    r12d,0xffffffff
    d4d6:	cmp    rbp,r13
    d4d9:	je     d4a9 <__ctype_b_loc@plt+0xabd9>
    d4db:	call   2520 <__errno_location@plt>
    d4e0:	mov    rdi,rbp
    d4e3:	mov    r13d,DWORD PTR [rax]
    d4e6:	mov    rbx,rax
    d4e9:	call   24e0 <free@plt>
    d4ee:	mov    DWORD PTR [rbx],r13d
    d4f1:	jmp    d4a9 <__ctype_b_loc@plt+0xabd9>
    d4f3:	call   2520 <__errno_location@plt>
    d4f8:	mov    DWORD PTR [rax],0x4b
    d4fe:	or     DWORD PTR [r12],0x20
    d503:	mov    r12d,0xffffffff
    d509:	jmp    d4a9 <__ctype_b_loc@plt+0xabd9>
    d50b:	call   2600 <__stack_chk_fail@plt>
    d510:	sub    rsp,0xd8
    d517:	mov    r10,rdi
    d51a:	mov    QWORD PTR [rsp+0x28],rsi
    d51f:	mov    QWORD PTR [rsp+0x30],rdx
    d524:	mov    QWORD PTR [rsp+0x38],rcx
    d529:	mov    QWORD PTR [rsp+0x40],r8
    d52e:	mov    QWORD PTR [rsp+0x48],r9
    d533:	test   al,al
    d535:	je     d56e <__ctype_b_loc@plt+0xac9e>
    d537:	movaps XMMWORD PTR [rsp+0x50],xmm0
    d53c:	movaps XMMWORD PTR [rsp+0x60],xmm1
    d541:	movaps XMMWORD PTR [rsp+0x70],xmm2
    d546:	movaps XMMWORD PTR [rsp+0x80],xmm3
    d54e:	movaps XMMWORD PTR [rsp+0x90],xmm4
    d556:	movaps XMMWORD PTR [rsp+0xa0],xmm5
    d55e:	movaps XMMWORD PTR [rsp+0xb0],xmm6
    d566:	movaps XMMWORD PTR [rsp+0xc0],xmm7
    d56e:	mov    rax,QWORD PTR fs:0x28
    d577:	mov    QWORD PTR [rsp+0x18],rax
    d57c:	xor    eax,eax
    d57e:	lea    rax,[rsp+0xe0]
    d586:	mov    rdx,rsp
    d589:	mov    rsi,r10
    d58c:	mov    QWORD PTR [rsp+0x8],rax
    d591:	lea    rax,[rsp+0x20]
    d596:	mov    QWORD PTR [rsp+0x10],rax
    d59b:	mov    rax,QWORD PTR [rip+0x9a0e]        # 16fb0 <__ctype_b_loc@plt+0x146e0>
    d5a2:	mov    DWORD PTR [rsp],0x8
    d5a9:	mov    rdi,QWORD PTR [rax]
    d5ac:	mov    DWORD PTR [rsp+0x4],0x30
    d5b4:	call   d420 <__ctype_b_loc@plt+0xab50>
    d5b9:	mov    rdx,QWORD PTR [rsp+0x18]
    d5be:	sub    rdx,QWORD PTR fs:0x28
    d5c7:	jne    d5d1 <__ctype_b_loc@plt+0xad01>
    d5c9:	add    rsp,0xd8
    d5d0:	ret    
    d5d1:	call   2600 <__stack_chk_fail@plt>
    d5d6:	cs nop WORD PTR [rax+rax*1+0x0]
    d5e0:	push   rbp
    d5e1:	lea    rdx,[rip+0x3ad6]        # 110be <__ctype_b_loc@plt+0xe7ee>
    d5e8:	lea    rdi,[rip+0x3ad4]        # 110c3 <__ctype_b_loc@plt+0xe7f3>
    d5ef:	xor    eax,eax
    d5f1:	push   rbx
    d5f2:	lea    rbp,[rip+0x3ab2]        # 110ab <__ctype_b_loc@plt+0xe7db>
    d5f9:	lea    rbx,[rip+0x9540]        # 16b40 <__ctype_b_loc@plt+0x14270>
    d600:	sub    rsp,0x8
    d604:	mov    rsi,QWORD PTR [rip+0x6182d]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    d60b:	call   d510 <__ctype_b_loc@plt+0xac40>
    d610:	lea    rsi,[rip+0x5449]        # 12a60 <__ctype_b_loc@plt+0x10190>
    d617:	nop    WORD PTR [rax+rax*1+0x0]
    d620:	add    rbx,0x8
    d624:	mov    rdi,rbp
    d627:	xor    eax,eax
    d629:	call   d510 <__ctype_b_loc@plt+0xac40>
    d62e:	mov    rsi,QWORD PTR [rbx]
    d631:	test   rsi,rsi
    d634:	jne    d620 <__ctype_b_loc@plt+0xad50>
    d636:	add    rsp,0x8
    d63a:	pop    rbx
    d63b:	pop    rbp
    d63c:	ret    
    d63d:	nop    DWORD PTR [rax]
    d640:	push   r13
    d642:	mov    rcx,rsi
    d645:	movabs rsi,0xcccccccccccccccd
    d64f:	push   r12
    d651:	push   rbp
    d652:	mov    rbp,rdi
    d655:	push   rbx
    d656:	sub    rsp,0x58
    d65a:	mov    rax,QWORD PTR fs:0x28
    d663:	mov    QWORD PTR [rsp+0x48],rax
    d668:	xor    eax,eax
    d66a:	lea    r12,[rsp+0x40]
    d66f:	mov    rbx,r12
    d672:	test   rcx,rcx
    d675:	js     d710 <__ctype_b_loc@plt+0xae40>
    d67b:	nop    DWORD PTR [rax+rax*1+0x0]
    d680:	mov    rax,rcx
    d683:	sub    rbx,0x1
    d687:	mul    rsi
    d68a:	shr    rdx,0x3
    d68e:	lea    rax,[rdx+rdx*4]
    d692:	add    rax,rax
    d695:	sub    rcx,rax
    d698:	add    ecx,0x30
    d69b:	mov    BYTE PTR [rbx],cl
    d69d:	mov    rcx,rdx
    d6a0:	test   rdx,rdx
    d6a3:	jne    d680 <__ctype_b_loc@plt+0xadb0>
    d6a5:	mov    rdx,r12
    d6a8:	mov    eax,0x13
    d6ad:	mov    r13d,0x12
    d6b3:	sub    rdx,rbx
    d6b6:	sub    eax,edx
    d6b8:	sub    r13d,edx
    d6bb:	test   eax,eax
    d6bd:	jle    d6d8 <__ctype_b_loc@plt+0xae08>
    d6bf:	nop
    d6c0:	mov    rsi,rbp
    d6c3:	mov    edi,0x20
    d6c8:	call   26e0 <putc@plt>
    d6cd:	mov    eax,r13d
    d6d0:	sub    r13d,0x1
    d6d4:	test   eax,eax
    d6d6:	jg     d6c0 <__ctype_b_loc@plt+0xadf0>
    d6d8:	cmp    rbx,r12
    d6db:	jae    d6f4 <__ctype_b_loc@plt+0xae24>
    d6dd:	nop    DWORD PTR [rax]
    d6e0:	movsx  edi,BYTE PTR [rbx]
    d6e3:	mov    rsi,rbp
    d6e6:	add    rbx,0x1
    d6ea:	call   26e0 <putc@plt>
    d6ef:	cmp    rbx,r12
    d6f2:	jne    d6e0 <__ctype_b_loc@plt+0xae10>
    d6f4:	mov    rax,QWORD PTR [rsp+0x48]
    d6f9:	sub    rax,QWORD PTR fs:0x28
    d702:	jne    d763 <__ctype_b_loc@plt+0xae93>
    d704:	add    rsp,0x58
    d708:	pop    rbx
    d709:	pop    rbp
    d70a:	pop    r12
    d70c:	pop    r13
    d70e:	ret    
    d70f:	nop
    d710:	mov    rsi,r12
    d713:	mov    edi,0x30
    d718:	movabs r8,0x6666666666666667
    d722:	nop    WORD PTR [rax+rax*1+0x0]
    d728:	mov    rax,rcx
    d72b:	mov    rbx,rsi
    d72e:	sub    rsi,0x1
    d732:	imul   r8
    d735:	mov    rax,rcx
    d738:	sar    rax,0x3f
    d73c:	sar    rdx,0x2
    d740:	sub    rdx,rax
    d743:	lea    rax,[rdx+rdx*4]
    d747:	lea    eax,[rdi+rax*2]
    d74a:	sub    eax,ecx
    d74c:	mov    rcx,rdx
    d74f:	mov    BYTE PTR [rsi],al
    d751:	test   rdx,rdx
    d754:	jne    d728 <__ctype_b_loc@plt+0xae58>
    d756:	mov    BYTE PTR [rsi-0x1],0x2d
    d75a:	sub    rbx,0x2
    d75e:	jmp    d6a5 <__ctype_b_loc@plt+0xadd5>
    d763:	call   2600 <__stack_chk_fail@plt>
    d768:	nop    DWORD PTR [rax+rax*1+0x0]
    d770:	push   r12
    d772:	push   rbp
    d773:	mov    ebp,edi
    d775:	push   rbx
    d776:	movsxd rbx,esi
    d779:	sub    rsp,0x10
    d77d:	mov    edx,DWORD PTR [rip+0x9b01]        # 17284 <__ctype_b_loc@plt+0x149b4>
    d783:	mov    rax,QWORD PTR fs:0x28
    d78c:	mov    QWORD PTR [rsp+0x8],rax
    d791:	xor    eax,eax
    d793:	test   edx,edx
    d795:	je     d8f8 <__ctype_b_loc@plt+0xb028>
    d79b:	test   ebx,ebx
    d79d:	js     d900 <__ctype_b_loc@plt+0xb030>
    d7a3:	mov    r12d,DWORD PTR [rip+0x6164e]        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    d7aa:	mov    DWORD PTR [rip+0x9ad0],0x0        # 17284 <__ctype_b_loc@plt+0x149b4>
    d7b4:	test   r12d,r12d
    d7b7:	jne    db50 <__ctype_b_loc@plt+0xb280>
    d7bd:	mov    r11d,DWORD PTR [rip+0x61654]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    d7c4:	test   r11d,r11d
    d7c7:	je     db08 <__ctype_b_loc@plt+0xb238>
    d7cd:	mov    rax,QWORD PTR [rip+0x6114c]        # 6e920 <__ctype_b_loc@plt+0x6c050>
    d7d4:	mov    QWORD PTR [rip+0x60c81],0xffffffffffffffff        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    d7df:	mov    QWORD PTR [rip+0x60c72],rax        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    d7e6:	cmp    ebx,0x8
    d7e9:	je     da10 <__ctype_b_loc@plt+0xb140>
    d7ef:	mov    r12,0xffffffffffffffff
    d7f6:	mov    edx,DWORD PTR [rip+0x615fc]        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    d7fc:	test   edx,edx
    d7fe:	jne    da50 <__ctype_b_loc@plt+0xb180>
    d804:	mov    rbx,QWORD PTR [rip+0x97a5]        # 16fb0 <__ctype_b_loc@plt+0x146e0>
    d80b:	mov    rsi,QWORD PTR [rip+0x60c46]        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    d812:	lea    rbp,[rip+0x38f6]        # 1110f <__ctype_b_loc@plt+0xe83f>
    d819:	mov    rdi,QWORD PTR [rbx]
    d81c:	call   d640 <__ctype_b_loc@plt+0xad70>
    d821:	mov    rdi,rbp
    d824:	xor    eax,eax
    d826:	call   d510 <__ctype_b_loc@plt+0xac40>
    d82b:	mov    rsi,QWORD PTR [rip+0x60c2e]        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    d832:	mov    rdi,QWORD PTR [rbx]
    d835:	call   d640 <__ctype_b_loc@plt+0xad70>
    d83a:	mov    rdi,rbp
    d83d:	xor    eax,eax
    d83f:	call   d510 <__ctype_b_loc@plt+0xac40>
    d844:	mov    rax,QWORD PTR [rip+0x60c0d]        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    d84b:	cmp    rax,0xffffffffffffffff
    d84f:	je     d9d8 <__ctype_b_loc@plt+0xb108>
    d855:	mov    rdx,QWORD PTR [rip+0x20014]        # 2d870 <__ctype_b_loc@plt+0x2afa0>
    d85c:	test   rdx,rdx
    d85f:	js     d86b <__ctype_b_loc@plt+0xaf9b>
    d861:	add    rdx,rax
    d864:	mov    QWORD PTR [rip+0x20005],rdx        # 2d870 <__ctype_b_loc@plt+0x2afa0>
    d86b:	mov    rdx,QWORD PTR [rip+0x60bee]        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    d872:	mov    rdi,QWORD PTR [rbx]
    d875:	cmp    rdx,0xffffffffffffffff
    d879:	jne    dab0 <__ctype_b_loc@plt+0xb1e0>
    d87f:	mov    QWORD PTR [rip+0x1ffde],0xffffffffffffffff        # 2d868 <__ctype_b_loc@plt+0x2af98>
    d88a:	pxor   xmm0,xmm0
    d88e:	mov    QWORD PTR [rip+0x60bb7],0x0        # 6e450 <__ctype_b_loc@plt+0x6bb80>
    d899:	mov    QWORD PTR [rip+0x60bbc],0x0        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    d8a4:	mov    QWORD PTR [rip+0x60ba9],0x0        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    d8af:	lea    rsi,[rip+0x385b]        # 11111 <__ctype_b_loc@plt+0xe841>
    d8b6:	mov    eax,0x1
    d8bb:	call   70d0 <__ctype_b_loc@plt+0x4800>
    d8c0:	mov    rax,QWORD PTR [rsp+0x8]
    d8c5:	sub    rax,QWORD PTR fs:0x28
    d8ce:	jne    dc69 <__ctype_b_loc@plt+0xb399>
    d8d4:	add    rsp,0x10
    d8d8:	lea    rsi,[rip+0x60ba1]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    d8df:	lea    rdi,[rip+0x37c4]        # 110aa <__ctype_b_loc@plt+0xe7da>
    d8e6:	xor    eax,eax
    d8e8:	pop    rbx
    d8e9:	pop    rbp
    d8ea:	pop    r12
    d8ec:	jmp    d510 <__ctype_b_loc@plt+0xac40>
    d8f1:	nop    DWORD PTR [rax+0x0]
    d8f8:	test   ebx,ebx
    d8fa:	jns    d7cd <__ctype_b_loc@plt+0xaefd>
    d900:	mov    rsi,QWORD PTR [rip+0x1ff69]        # 2d870 <__ctype_b_loc@plt+0x2afa0>
    d907:	test   rsi,rsi
    d90a:	jle    db68 <__ctype_b_loc@plt+0xb298>
    d910:	cmp    QWORD PTR [rip+0x1ff50],0x0        # 2d868 <__ctype_b_loc@plt+0x2af98>
    d918:	jle    db68 <__ctype_b_loc@plt+0xb298>
    d91e:	mov    r8d,DWORD PTR [rip+0x614d3]        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    d925:	test   r8d,r8d
    d928:	jne    dc20 <__ctype_b_loc@plt+0xb350>
    d92e:	mov    eax,DWORD PTR [rip+0x614e4]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    d934:	test   eax,eax
    d936:	jne    dba0 <__ctype_b_loc@plt+0xb2d0>
    d93c:	mov    rbx,QWORD PTR [rip+0x966d]        # 16fb0 <__ctype_b_loc@plt+0x146e0>
    d943:	lea    rbp,[rip+0x37c5]        # 1110f <__ctype_b_loc@plt+0xe83f>
    d94a:	mov    rdi,QWORD PTR [rbx]
    d94d:	call   d640 <__ctype_b_loc@plt+0xad70>
    d952:	mov    rdi,rbp
    d955:	xor    eax,eax
    d957:	call   d510 <__ctype_b_loc@plt+0xac40>
    d95c:	mov    rsi,QWORD PTR [rip+0x1ff05]        # 2d868 <__ctype_b_loc@plt+0x2af98>
    d963:	mov    rdi,QWORD PTR [rbx]
    d966:	call   d640 <__ctype_b_loc@plt+0xad70>
    d96b:	mov    rdi,rbp
    d96e:	xor    eax,eax
    d970:	call   d510 <__ctype_b_loc@plt+0xac40>
    d975:	mov    rsi,QWORD PTR [rip+0x1fef4]        # 2d870 <__ctype_b_loc@plt+0x2afa0>
    d97c:	mov    rax,QWORD PTR [rip+0x1fee5]        # 2d868 <__ctype_b_loc@plt+0x2af98>
    d983:	mov    rdi,QWORD PTR [rbx]
    d986:	pxor   xmm0,xmm0
    d98a:	mov    rdx,QWORD PTR [rip+0x60abf]        # 6e450 <__ctype_b_loc@plt+0x6bb80>
    d991:	test   rax,rax
    d994:	jne    dbb8 <__ctype_b_loc@plt+0xb2e8>
    d99a:	lea    rsi,[rip+0x3770]        # 11111 <__ctype_b_loc@plt+0xe841>
    d9a1:	mov    eax,0x1
    d9a6:	call   70d0 <__ctype_b_loc@plt+0x4800>
    d9ab:	mov    rax,QWORD PTR [rsp+0x8]
    d9b0:	sub    rax,QWORD PTR fs:0x28
    d9b9:	jne    dc69 <__ctype_b_loc@plt+0xb399>
    d9bf:	add    rsp,0x10
    d9c3:	lea    rdi,[rip+0x374f]        # 11119 <__ctype_b_loc@plt+0xe849>
    d9ca:	xor    eax,eax
    d9cc:	pop    rbx
    d9cd:	pop    rbp
    d9ce:	pop    r12
    d9d0:	jmp    d510 <__ctype_b_loc@plt+0xac40>
    d9d5:	nop    DWORD PTR [rax]
    d9d8:	mov    QWORD PTR [rip+0x1fe8d],0xffffffffffffffff        # 2d870 <__ctype_b_loc@plt+0x2afa0>
    d9e3:	mov    rdi,QWORD PTR [rbx]
    d9e6:	pxor   xmm0,xmm0
    d9ea:	mov    QWORD PTR [rip+0x60a5b],0x0        # 6e450 <__ctype_b_loc@plt+0x6bb80>
    d9f5:	mov    QWORD PTR [rip+0x60a60],0x0        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    da00:	mov    QWORD PTR [rip+0x60a4d],0x0        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    da0b:	jmp    d8af <__ctype_b_loc@plt+0xafdf>
    da10:	mov    ecx,DWORD PTR [rip+0x60a32]        # 6e448 <__ctype_b_loc@plt+0x6bb78>
    da16:	test   ecx,ecx
    da18:	jne    d7ef <__ctype_b_loc@plt+0xaf1f>
    da1e:	mov    edx,0x2
    da23:	mov    rsi,0xfffffffffffffff8
    da2a:	mov    edi,ebp
    da2c:	call   2630 <lseek@plt>
    da31:	cmp    rax,0xffffffffffffffff
    da35:	jne    dbe8 <__ctype_b_loc@plt+0xb318>
    da3b:	mov    QWORD PTR [rip+0x60a12],0xffffffffffffffff        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    da46:	jmp    d7ef <__ctype_b_loc@plt+0xaf1f>
    da4b:	nop    DWORD PTR [rax+rax*1+0x0]
    da50:	lea    rdi,[rip+0x60eb9]        # 6e910 <__ctype_b_loc@plt+0x6c040>
    da57:	call   2500 <localtime@plt>
    da5c:	mov    rdx,r12
    da5f:	lea    rdi,[rip+0x36be]        # 11124 <__ctype_b_loc@plt+0xe854>
    da66:	mov    rbp,rax
    da69:	lea    rax,[rip+0x8c30]        # 166a0 <__ctype_b_loc@plt+0x13dd0>
    da70:	mov    rsi,QWORD PTR [rax+rbx*8]
    da74:	xor    eax,eax
    da76:	call   d510 <__ctype_b_loc@plt+0xac40>
    da7b:	test   rbp,rbp
    da7e:	je     db88 <__ctype_b_loc@plt+0xb2b8>
    da84:	movsxd rsi,DWORD PTR [rbp+0x10]
    da88:	lea    rax,[rip+0x4171]        # 11c00 <__ctype_b_loc@plt+0xf330>
    da8f:	mov    ecx,DWORD PTR [rbp+0x8]
    da92:	lea    rdi,[rip+0x3696]        # 1112f <__ctype_b_loc@plt+0xe85f>
    da99:	mov    edx,DWORD PTR [rbp+0xc]
    da9c:	mov    r8d,DWORD PTR [rbp+0x4]
    daa0:	lea    rsi,[rax+rsi*4]
    daa4:	xor    eax,eax
    daa6:	call   d510 <__ctype_b_loc@plt+0xac40>
    daab:	jmp    d804 <__ctype_b_loc@plt+0xaf34>
    dab0:	sub    rax,QWORD PTR [rip+0x60999]        # 6e450 <__ctype_b_loc@plt+0x6bb80>
    dab7:	mov    rcx,rdx
    daba:	sub    rcx,rax
    dabd:	mov    rax,QWORD PTR [rip+0x1fda4]        # 2d868 <__ctype_b_loc@plt+0x2af98>
    dac4:	test   rax,rax
    dac7:	js     dad3 <__ctype_b_loc@plt+0xb203>
    dac9:	add    rax,rdx
    dacc:	mov    QWORD PTR [rip+0x1fd95],rax        # 2d868 <__ctype_b_loc@plt+0x2af98>
    dad3:	mov    rdi,QWORD PTR [rbx]
    dad6:	test   rdx,rdx
    dad9:	je     dc60 <__ctype_b_loc@plt+0xb390>
    dadf:	pxor   xmm0,xmm0
    dae3:	pxor   xmm1,xmm1
    dae7:	cvtsi2sd xmm0,rcx
    daec:	mulsd  xmm0,QWORD PTR [rip+0x597c]        # 13470 <__ctype_b_loc@plt+0x10ba0>
    daf4:	cvtsi2sd xmm1,rdx
    daf9:	divsd  xmm0,xmm1
    dafd:	jmp    d8af <__ctype_b_loc@plt+0xafdf>
    db02:	nop    WORD PTR [rax+rax*1+0x0]
    db08:	sub    rsp,0x8
    db0c:	lea    rax,[rip+0x35d4]        # 110e7 <__ctype_b_loc@plt+0xe817>
    db13:	mov    r9d,0x13
    db19:	mov    r8d,0x13
    db1f:	push   rax
    db20:	lea    rcx,[rip+0x35c2]        # 110e9 <__ctype_b_loc@plt+0xe819>
    db27:	xor    eax,eax
    db29:	mov    edx,0x13
    db2e:	mov    esi,0x13
    db33:	lea    rdi,[rip+0x4f5e]        # 12a98 <__ctype_b_loc@plt+0x101c8>
    db3a:	call   d510 <__ctype_b_loc@plt+0xac40>
    db3f:	pop    r9
    db41:	pop    r10
    db43:	jmp    d7cd <__ctype_b_loc@plt+0xaefd>
    db48:	nop    DWORD PTR [rax+rax*1+0x0]
    db50:	lea    rdi,[rip+0x3573]        # 110ca <__ctype_b_loc@plt+0xe7fa>
    db57:	call   d510 <__ctype_b_loc@plt+0xac40>
    db5c:	jmp    d7bd <__ctype_b_loc@plt+0xaeed>
    db61:	nop    DWORD PTR [rax+0x0]
    db68:	mov    rax,QWORD PTR [rsp+0x8]
    db6d:	sub    rax,QWORD PTR fs:0x28
    db76:	jne    dc69 <__ctype_b_loc@plt+0xb399>
    db7c:	add    rsp,0x10
    db80:	pop    rbx
    db81:	pop    rbp
    db82:	pop    r12
    db84:	ret    
    db85:	nop    DWORD PTR [rax]
    db88:	lea    rdi,[rip+0x35b1]        # 11140 <__ctype_b_loc@plt+0xe870>
    db8f:	xor    eax,eax
    db91:	call   d510 <__ctype_b_loc@plt+0xac40>
    db96:	jmp    d804 <__ctype_b_loc@plt+0xaf34>
    db9b:	nop    DWORD PTR [rax+rax*1+0x0]
    dba0:	mov    rax,QWORD PTR [rip+0x9409]        # 16fb0 <__ctype_b_loc@plt+0x146e0>
    dba7:	mov    rdx,QWORD PTR [rip+0x608a2]        # 6e450 <__ctype_b_loc@plt+0x6bb80>
    dbae:	mov    rdi,QWORD PTR [rax]
    dbb1:	mov    rax,QWORD PTR [rip+0x1fcb0]        # 2d868 <__ctype_b_loc@plt+0x2af98>
    dbb8:	sub    rsi,rdx
    dbbb:	pxor   xmm0,xmm0
    dbbf:	pxor   xmm1,xmm1
    dbc3:	mov    rdx,rax
    dbc6:	sub    rdx,rsi
    dbc9:	cvtsi2sd xmm1,rax
    dbce:	cvtsi2sd xmm0,rdx
    dbd3:	mulsd  xmm0,QWORD PTR [rip+0x5895]        # 13470 <__ctype_b_loc@plt+0x10ba0>
    dbdb:	divsd  xmm0,xmm1
    dbdf:	jmp    d99a <__ctype_b_loc@plt+0xb0ca>
    dbe4:	nop    DWORD PTR [rax+0x0]
    dbe8:	add    rax,0x8
    dbec:	mov    rsi,rsp
    dbef:	mov    edx,0x8
    dbf4:	mov    edi,ebp
    dbf6:	mov    QWORD PTR [rip+0x6085b],rax        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    dbfd:	call   2690 <read@plt>
    dc02:	cmp    rax,0x8
    dc06:	jne    dc6e <__ctype_b_loc@plt+0xb39e>
    dc08:	mov    eax,DWORD PTR [rsp+0x4]
    dc0c:	mov    r12d,DWORD PTR [rsp]
    dc10:	mov    QWORD PTR [rip+0x60849],rax        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    dc17:	jmp    d7f6 <__ctype_b_loc@plt+0xaf26>
    dc1c:	nop    DWORD PTR [rax+0x0]
    dc20:	lea    rdi,[rip+0x34cd]        # 110f4 <__ctype_b_loc@plt+0xe824>
    dc27:	xor    eax,eax
    dc29:	call   d510 <__ctype_b_loc@plt+0xac40>
    dc2e:	mov    edi,DWORD PTR [rip+0x611c4]        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    dc34:	mov    rsi,QWORD PTR [rip+0x1fc35]        # 2d870 <__ctype_b_loc@plt+0x2afa0>
    dc3b:	test   edi,edi
    dc3d:	jne    d93c <__ctype_b_loc@plt+0xb06c>
    dc43:	cmp    DWORD PTR [rip+0x611ce],0x0        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    dc4a:	je     d93c <__ctype_b_loc@plt+0xb06c>
    dc50:	mov    rbx,QWORD PTR [rip+0x9359]        # 16fb0 <__ctype_b_loc@plt+0x146e0>
    dc57:	jmp    d97c <__ctype_b_loc@plt+0xb0ac>
    dc5c:	nop    DWORD PTR [rax+0x0]
    dc60:	pxor   xmm0,xmm0
    dc64:	jmp    d8af <__ctype_b_loc@plt+0xafdf>
    dc69:	call   2600 <__stack_chk_fail@plt>
    dc6e:	call   7690 <__ctype_b_loc@plt+0x4dc0>
    dc73:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    dc7e:	xchg   ax,ax
    dc80:	push   rbp
    dc81:	push   rbx
    dc82:	sub    rsp,0x8
    dc86:	mov    ebx,DWORD PTR [rip+0x61174]        # 6ee00 <__ctype_b_loc@plt+0x6c530>
    dc8c:	mov    eax,ebx
    dc8e:	or     eax,DWORD PTR [rip+0x61174]        # 6ee08 <__ctype_b_loc@plt+0x6c538>
    dc94:	jne    dcc0 <__ctype_b_loc@plt+0xb3f0>
    dc96:	cmp    BYTE PTR [rip+0x6115f],0x0        # 6edfc <__ctype_b_loc@plt+0x6c52c>
    dc9d:	jne    df3f <__ctype_b_loc@plt+0xb66f>
    dca3:	mov    r11d,DWORD PTR [rip+0x61162]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    dcaa:	xor    edi,edi
    dcac:	test   r11d,r11d
    dcaf:	sete   dil
    dcb3:	call   2580 <isatty@plt>
    dcb8:	test   eax,eax
    dcba:	jne    df3f <__ctype_b_loc@plt+0xb66f>
    dcc0:	mov    r9d,0x6e
    dcc6:	mov    r10d,0x7475
    dccc:	xor    edi,edi
    dcce:	mov    DWORD PTR [rip+0x60d08],0x69647473        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    dcd8:	lea    rsi,[rip+0x60ba1]        # 6e880 <__ctype_b_loc@plt+0x6bfb0>
    dcdf:	mov    WORD PTR [rip+0x60cfd],r9w        # 6e9e4 <__ctype_b_loc@plt+0x6c114>
    dce7:	mov    DWORD PTR [rip+0x6078f],0x6f647473        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    dcf1:	mov    WORD PTR [rip+0x6078b],r10w        # 6e484 <__ctype_b_loc@plt+0x6bbb4>
    dcf9:	mov    BYTE PTR [rip+0x60786],0x0        # 6e486 <__ctype_b_loc@plt+0x6bbb6>
    dd00:	call   2880 <fstat@plt>
    dd05:	test   eax,eax
    dd07:	jne    def4 <__ctype_b_loc@plt+0xb624>
    dd0d:	call   3720 <__ctype_b_loc@plt+0xe50>
    dd12:	mov    r8d,DWORD PTR [rip+0x610f3]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    dd19:	mov    DWORD PTR [rip+0xd4add],0x0        # e2800 <__ctype_b_loc@plt+0xdff30>
    dd23:	mov    DWORD PTR [rip+0x60717],0x0        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    dd2d:	mov    DWORD PTR [rip+0x60709],0x0        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    dd37:	mov    QWORD PTR [rip+0x6071e],0x0        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    dd42:	mov    QWORD PTR [rip+0x6070b],0x0        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    dd4d:	mov    DWORD PTR [rip+0x610b9],0x1        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    dd57:	mov    DWORD PTR [rip+0x6070b],0x0        # 6e46c <__ctype_b_loc@plt+0x6bb9c>
    dd61:	mov    DWORD PTR [rip+0x606fd],0x0        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    dd6b:	mov    BYTE PTR [rip+0x6106e],0x1        # 6ede0 <__ctype_b_loc@plt+0x6c510>
    dd72:	test   r8d,r8d
    dd75:	jne    de30 <__ctype_b_loc@plt+0xb560>
    dd7b:	test   ebx,ebx
    dd7d:	je     ddc0 <__ctype_b_loc@plt+0xb4f0>
    dd7f:	jmp    de53 <__ctype_b_loc@plt+0xb583>
    dd84:	nop    DWORD PTR [rax+0x0]
    dd88:	mov    esi,DWORD PTR [rip+0x606ba]        # 6e448 <__ctype_b_loc@plt+0x6bb78>
    dd8e:	test   esi,esi
    dd90:	jne    dddb <__ctype_b_loc@plt+0xb50b>
    dd92:	mov    eax,DWORD PTR [rip+0x606a8]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    dd98:	cmp    DWORD PTR [rip+0x606a6],eax        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    dd9e:	je     de08 <__ctype_b_loc@plt+0xb538>
    dda0:	mov    edi,DWORD PTR [rip+0x606c2]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    dda6:	call   85d0 <__ctype_b_loc@plt+0x5d00>
    ddab:	mov    DWORD PTR [rip+0x94e3],eax        # 17294 <__ctype_b_loc@plt+0x149c4>
    ddb1:	test   eax,eax
    ddb3:	js     ddfd <__ctype_b_loc@plt+0xb52d>
    ddb5:	mov    QWORD PTR [rip+0x606a0],0x0        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    ddc0:	xor    edi,edi
    ddc2:	mov    esi,0x1
    ddc7:	call   QWORD PTR [rip+0x9643]        # 17410 <__ctype_b_loc@plt+0x14b40>
    ddcd:	test   eax,eax
    ddcf:	jne    ddfd <__ctype_b_loc@plt+0xb52d>
    ddd1:	mov    edi,DWORD PTR [rip+0x61035]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    ddd7:	test   edi,edi
    ddd9:	jne    dd88 <__ctype_b_loc@plt+0xb4b8>
    dddb:	mov    ecx,DWORD PTR [rip+0x61017]        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    dde1:	test   ecx,ecx
    dde3:	je     ddfd <__ctype_b_loc@plt+0xb52d>
    dde5:	mov    edx,DWORD PTR [rip+0x60ffd]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    ddeb:	test   edx,edx
    dded:	jne    de6a <__ctype_b_loc@plt+0xb59a>
    ddef:	mov    eax,DWORD PTR [rip+0x61017]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    ddf5:	test   eax,eax
    ddf7:	je     de88 <__ctype_b_loc@plt+0xb5b8>
    ddfd:	add    rsp,0x8
    de01:	pop    rbx
    de02:	pop    rbp
    de03:	ret    
    de04:	nop    DWORD PTR [rax+0x0]
    de08:	cmp    eax,0x40000
    de0d:	jne    dddb <__ctype_b_loc@plt+0xb50b>
    de0f:	mov    edi,0x1
    de14:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    de19:	cmp    eax,0xffffffff
    de1c:	je     dddb <__ctype_b_loc@plt+0xb50b>
    de1e:	mov    DWORD PTR [rip+0x6061c],0x0        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    de28:	jmp    dda0 <__ctype_b_loc@plt+0xb4d0>
    de2d:	nop    DWORD PTR [rax]
    de30:	xor    edi,edi
    de32:	call   85d0 <__ctype_b_loc@plt+0x5d00>
    de37:	mov    DWORD PTR [rip+0x9457],eax        # 17294 <__ctype_b_loc@plt+0x149c4>
    de3d:	test   eax,eax
    de3f:	js     df97 <__ctype_b_loc@plt+0xb6c7>
    de45:	mov    ebx,DWORD PTR [rip+0x60fb5]        # 6ee00 <__ctype_b_loc@plt+0x6c530>
    de4b:	test   ebx,ebx
    de4d:	je     ddc0 <__ctype_b_loc@plt+0xb4f0>
    de53:	mov    esi,DWORD PTR [rip+0x943b]        # 17294 <__ctype_b_loc@plt+0x149c4>
    de59:	mov    edi,DWORD PTR [rip+0x60609]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    de5f:	add    rsp,0x8
    de63:	pop    rbx
    de64:	pop    rbp
    de65:	jmp    d770 <__ctype_b_loc@plt+0xaea0>
    de6a:	mov    rax,QWORD PTR [rip+0x9177]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    de71:	lea    rsi,[rip+0x32fd]        # 11175 <__ctype_b_loc@plt+0xe8a5>
    de78:	mov    rdi,QWORD PTR [rax]
    de7b:	add    rsp,0x8
    de7f:	xor    eax,eax
    de81:	pop    rbx
    de82:	pop    rbp
    de83:	jmp    70d0 <__ctype_b_loc@plt+0x4800>
    de88:	mov    rbx,QWORD PTR [rip+0x9159]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    de8f:	mov    rax,QWORD PTR [rip+0x605c2]        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    de96:	pxor   xmm0,xmm0
    de9a:	mov    rdx,QWORD PTR [rip+0x605bf]        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    dea1:	mov    rcx,QWORD PTR [rip+0x605a8]        # 6e450 <__ctype_b_loc@plt+0x6bb80>
    dea8:	mov    rdi,QWORD PTR [rbx]
    deab:	test   rax,rax
    deae:	je     ded7 <__ctype_b_loc@plt+0xb607>
    deb0:	sub    rdx,rcx
    deb3:	pxor   xmm0,xmm0
    deb7:	pxor   xmm1,xmm1
    debb:	mov    rcx,rax
    debe:	sub    rcx,rdx
    dec1:	cvtsi2sd xmm1,rax
    dec6:	cvtsi2sd xmm0,rcx
    decb:	mulsd  xmm0,QWORD PTR [rip+0x559d]        # 13470 <__ctype_b_loc@plt+0x10ba0>
    ded3:	divsd  xmm0,xmm1
    ded7:	lea    rsi,[rip+0x3233]        # 11111 <__ctype_b_loc@plt+0xe841>
    dede:	mov    eax,0x1
    dee3:	call   70d0 <__ctype_b_loc@plt+0x4800>
    dee8:	mov    rdi,QWORD PTR [rbx]
    deeb:	lea    rsi,[rip+0x33cc]        # 112be <__ctype_b_loc@plt+0xe9ee>
    def2:	jmp    de7b <__ctype_b_loc@plt+0xb5ab>
    def4:	call   2520 <__errno_location@plt>
    def9:	mov    rdx,QWORD PTR [rip+0x60f38]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    df00:	lea    rsi,[rip+0x3134]        # 1103b <__ctype_b_loc@plt+0xe76b>
    df07:	mov    ebp,DWORD PTR [rax]
    df09:	mov    rbx,rax
    df0c:	mov    rax,QWORD PTR [rip+0x90d5]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    df13:	mov    rdi,QWORD PTR [rax]
    df16:	xor    eax,eax
    df18:	call   70d0 <__ctype_b_loc@plt+0x4800>
    df1d:	mov    DWORD PTR [rbx],ebp
    df1f:	lea    rdi,[rip+0x3240]        # 11166 <__ctype_b_loc@plt+0xe896>
    df26:	call   2820 <perror@plt>
    df2b:	mov    DWORD PTR [rip+0x60a8b],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    df35:	mov    edi,0x1
    df3a:	call   4400 <__ctype_b_loc@plt+0x1b30>
    df3f:	cmp    DWORD PTR [rip+0x60ed2],0x0        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    df46:	jne    df35 <__ctype_b_loc@plt+0xb665>
    df48:	cmp    DWORD PTR [rip+0x60ebd],0x0        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    df4f:	lea    rax,[rip+0x3205]        # 1115b <__ctype_b_loc@plt+0xe88b>
    df56:	lea    rcx,[rip+0x31f4]        # 11151 <__ctype_b_loc@plt+0xe881>
    df5d:	mov    rdx,QWORD PTR [rip+0x60ed4]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    df64:	cmove  rcx,rax
    df68:	lea    r8,[rip+0x31df]        # 1114e <__ctype_b_loc@plt+0xe87e>
    df6f:	lea    rax,[rip+0x3305]        # 1127b <__ctype_b_loc@plt+0xe9ab>
    df76:	cmove  r8,rax
    df7a:	mov    rax,QWORD PTR [rip+0x9067]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    df81:	mov    r9,rdx
    df84:	lea    rsi,[rip+0x4b35]        # 12ac0 <__ctype_b_loc@plt+0x101f0>
    df8b:	mov    rdi,QWORD PTR [rax]
    df8e:	xor    eax,eax
    df90:	call   70d0 <__ctype_b_loc@plt+0x4800>
    df95:	jmp    df35 <__ctype_b_loc@plt+0xb665>
    df97:	mov    edi,DWORD PTR [rip+0x60a23]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    df9d:	call   4400 <__ctype_b_loc@plt+0x1b30>
    dfa2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    dfad:	nop    DWORD PTR [rax]
    dfb0:	push   r13
    dfb2:	xor    edx,edx
    dfb4:	mov    esi,0x10000
    dfb9:	lea    rdi,[rip+0x60080]        # 6e040 <__ctype_b_loc@plt+0x6b770>
    dfc0:	push   r12
    dfc2:	xor    eax,eax
    dfc4:	push   rbp
    dfc5:	push   rbx
    dfc6:	sub    rsp,0x8
    dfca:	call   27f0 <open@plt>
    dfcf:	mov    r12d,eax
    dfd2:	cmp    eax,0x2
    dfd5:	jbe    dfe8 <__ctype_b_loc@plt+0xb718>
    dfd7:	add    rsp,0x8
    dfdb:	mov    eax,r12d
    dfde:	pop    rbx
    dfdf:	pop    rbp
    dfe0:	pop    r12
    dfe2:	pop    r13
    dfe4:	ret    
    dfe5:	nop    DWORD PTR [rax]
    dfe8:	mov    edi,eax
    dfea:	mov    edx,0x3
    dfef:	xor    esi,esi
    dff1:	xor    eax,eax
    dff3:	call   4c80 <__ctype_b_loc@plt+0x23b0>
    dff8:	mov    ebp,eax
    dffa:	call   2520 <__errno_location@plt>
    dfff:	mov    edi,r12d
    e002:	mov    r12d,ebp
    e005:	mov    r13d,DWORD PTR [rax]
    e008:	mov    rbx,rax
    e00b:	call   2650 <close@plt>
    e010:	mov    eax,r12d
    e013:	mov    DWORD PTR [rbx],r13d
    e016:	add    rsp,0x8
    e01a:	pop    rbx
    e01b:	pop    rbp
    e01c:	pop    r12
    e01e:	pop    r13
    e020:	ret    
    e021:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    e02c:	nop    DWORD PTR [rax+0x0]
    e030:	push   r13
    e032:	push   r12
    e034:	push   rbp
    e035:	push   rbx
    e036:	sub    rsp,0x8
    e03a:	test   rsi,rsi
    e03d:	je     e0c8 <__ctype_b_loc@plt+0xb7f8>
    e043:	mov    rbp,rdi
    e046:	mov    rbx,rsi
    e049:	mov    r13,rsi
    e04c:	lea    r12,[rip+0x5ffed]        # 6e040 <__ctype_b_loc@plt+0x6b770>
    e053:	mov    rdx,r13
    e056:	mov    rsi,rbp
    e059:	mov    rdi,r12
    e05c:	call   26a0 <memcmp@plt>
    e061:	mov    r8d,eax
    e064:	mov    eax,DWORD PTR [rip+0x9226]        # 17290 <__ctype_b_loc@plt+0x149c0>
    e06a:	test   r8d,r8d
    e06d:	jne    e088 <__ctype_b_loc@plt+0xb7b8>
    e06f:	cmp    BYTE PTR [r12+rbx*1],0x0
    e074:	jne    e088 <__ctype_b_loc@plt+0xb7b8>
    e076:	add    rsp,0x8
    e07a:	pop    rbx
    e07b:	pop    rbp
    e07c:	pop    r12
    e07e:	pop    r13
    e080:	ret    
    e081:	nop    DWORD PTR [rax+0x0]
    e088:	test   eax,eax
    e08a:	jns    e0e0 <__ctype_b_loc@plt+0xb810>
    e08c:	mov    rdx,r13
    e08f:	mov    rsi,rbp
    e092:	mov    rdi,r12
    e095:	mov    ecx,0x400
    e09a:	call   2710 <__memcpy_chk@plt>
    e09f:	mov    rdi,r12
    e0a2:	mov    esi,0x10000
    e0a7:	xor    eax,eax
    e0a9:	mov    BYTE PTR [r12+rbx*1],0x0
    e0ae:	call   dfb0 <__ctype_b_loc@plt+0xb6e0>
    e0b3:	mov    DWORD PTR [rip+0x91d7],eax        # 17290 <__ctype_b_loc@plt+0x149c0>
    e0b9:	add    rsp,0x8
    e0bd:	pop    rbx
    e0be:	pop    rbp
    e0bf:	pop    r12
    e0c1:	pop    r13
    e0c3:	ret    
    e0c4:	nop    DWORD PTR [rax+0x0]
    e0c8:	mov    r13d,0x1
    e0ce:	mov    ebx,0x1
    e0d3:	lea    rbp,[rip+0x4366]        # 12440 <__ctype_b_loc@plt+0xfb70>
    e0da:	jmp    e04c <__ctype_b_loc@plt+0xb77c>
    e0df:	nop
    e0e0:	mov    edi,eax
    e0e2:	call   2650 <close@plt>
    e0e7:	jmp    e08c <__ctype_b_loc@plt+0xb7bc>
    e0e9:	nop    DWORD PTR [rax+0x0]
    e0f0:	mov    eax,DWORD PTR [rip+0x60d1a]        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    e0f6:	or     eax,DWORD PTR [rip+0x60d0c]        # 6ee08 <__ctype_b_loc@plt+0x6c538>
    e0fc:	push   r12
    e0fe:	cmp    eax,0x1
    e101:	mov    eax,DWORD PTR [rip+0x60cfd]        # 6ee04 <__ctype_b_loc@plt+0x6c534>
    e107:	push   rbp
    e108:	sbb    r12d,r12d
    e10b:	push   rbx
    e10c:	and    r12d,0x20000
    e113:	add    r12d,0x900
    e11a:	test   eax,eax
    e11c:	je     e180 <__ctype_b_loc@plt+0xb8b0>
    e11e:	lea    rbp,[rip+0x608bb]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    e125:	mov    edi,0xffffff9c
    e12a:	mov    edx,r12d
    e12d:	mov    rsi,rbp
    e130:	xor    eax,eax
    e132:	call   4e00 <__ctype_b_loc@plt+0x2530>
    e137:	mov    r12d,eax
    e13a:	test   eax,eax
    e13c:	jns    e150 <__ctype_b_loc@plt+0xb880>
    e13e:	mov    eax,r12d
    e141:	pop    rbx
    e142:	pop    rbp
    e143:	pop    r12
    e145:	ret    
    e146:	cs nop WORD PTR [rax+rax*1+0x0]
    e150:	lea    rsi,[rip+0x60729]        # 6e880 <__ctype_b_loc@plt+0x6bfb0>
    e157:	mov    edi,eax
    e159:	call   2880 <fstat@plt>
    e15e:	test   eax,eax
    e160:	je     e13e <__ctype_b_loc@plt+0xb86e>
    e162:	call   2520 <__errno_location@plt>
    e167:	mov    edi,r12d
    e16a:	mov    r12d,0xffffffff
    e170:	mov    ebx,DWORD PTR [rax]
    e172:	mov    rbp,rax
    e175:	call   2650 <close@plt>
    e17a:	mov    DWORD PTR [rbp+0x0],ebx
    e17d:	jmp    e13e <__ctype_b_loc@plt+0xb86e>
    e17f:	nop
    e180:	movzx  eax,BYTE PTR [rip+0x60859]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    e187:	lea    rdi,[rip+0x60852]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    e18e:	mov    rbp,rdi
    e191:	cmp    al,0x2f
    e193:	jne    e1a4 <__ctype_b_loc@plt+0xb8d4>
    e195:	nop    DWORD PTR [rax]
    e198:	movzx  eax,BYTE PTR [rbp+0x1]
    e19c:	add    rbp,0x1
    e1a0:	cmp    al,0x2f
    e1a2:	je     e198 <__ctype_b_loc@plt+0xb8c8>
    e1a4:	test   al,al
    e1a6:	je     e1da <__ctype_b_loc@plt+0xb90a>
    e1a8:	mov    rdx,rbp
    e1ab:	xor    ecx,ecx
    e1ad:	jmp    e1c5 <__ctype_b_loc@plt+0xb8f5>
    e1af:	nop
    e1b0:	test   cl,cl
    e1b2:	je     e1b9 <__ctype_b_loc@plt+0xb8e9>
    e1b4:	mov    rbp,rdx
    e1b7:	xor    ecx,ecx
    e1b9:	movzx  eax,BYTE PTR [rdx+0x1]
    e1bd:	add    rdx,0x1
    e1c1:	test   al,al
    e1c3:	je     e1da <__ctype_b_loc@plt+0xb90a>
    e1c5:	cmp    al,0x2f
    e1c7:	jne    e1b0 <__ctype_b_loc@plt+0xb8e0>
    e1c9:	movzx  eax,BYTE PTR [rdx+0x1]
    e1cd:	add    rdx,0x1
    e1d1:	mov    ecx,0x1
    e1d6:	test   al,al
    e1d8:	jne    e1c5 <__ctype_b_loc@plt+0xb8f5>
    e1da:	mov    rsi,rbp
    e1dd:	sub    rsi,rdi
    e1e0:	call   e030 <__ctype_b_loc@plt+0xb760>
    e1e5:	mov    edi,eax
    e1e7:	test   eax,eax
    e1e9:	jns    e12a <__ctype_b_loc@plt+0xb85a>
    e1ef:	jmp    e11e <__ctype_b_loc@plt+0xb84e>
    e1f4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    e1ff:	nop
    e200:	push   r13
    e202:	push   r12
    e204:	push   rbp
    e205:	push   rbx
    e206:	sub    rsp,0x8
    e20a:	movzx  ebx,BYTE PTR [rdi]
    e20d:	test   bl,bl
    e20f:	je     e24c <__ctype_b_loc@plt+0xb97c>
    e211:	mov    rbp,rdi
    e214:	call   28d0 <__ctype_b_loc@plt>
    e219:	mov    r13,rax
    e21c:	nop    DWORD PTR [rax+0x0]
    e220:	mov    rax,QWORD PTR [r13+0x0]
    e224:	movzx  r12d,bl
    e228:	test   BYTE PTR [rax+r12*2+0x1],0x1
    e22e:	je     e23d <__ctype_b_loc@plt+0xb96d>
    e230:	call   28c0 <__ctype_tolower_loc@plt>
    e235:	mov    rax,QWORD PTR [rax]
    e238:	movzx  ebx,BYTE PTR [rax+r12*4]
    e23d:	mov    BYTE PTR [rbp+0x0],bl
    e240:	movzx  ebx,BYTE PTR [rbp+0x1]
    e244:	add    rbp,0x1
    e248:	test   bl,bl
    e24a:	jne    e220 <__ctype_b_loc@plt+0xb950>
    e24c:	add    rsp,0x8
    e250:	pop    rbx
    e251:	pop    rbp
    e252:	pop    r12
    e254:	pop    r13
    e256:	ret    
    e257:	nop    WORD PTR [rax+rax*1+0x0]
    e260:	push   r15
    e262:	push   r14
    e264:	push   r13
    e266:	push   r12
    e268:	push   rbp
    e269:	push   rbx
    e26a:	sub    rsp,0x58
    e26e:	mov    r13,QWORD PTR [rip+0x9153]        # 173c8 <__ctype_b_loc@plt+0x14af8>
    e275:	mov    r12,QWORD PTR [rip+0x60bac]        # 6ee28 <__ctype_b_loc@plt+0x6c558>
    e27c:	mov    QWORD PTR [rsp+0x10],rdi
    e281:	mov    rax,QWORD PTR fs:0x28
    e28a:	mov    QWORD PTR [rsp+0x48],rax
    e28f:	xor    eax,eax
    e291:	test   r13,r13
    e294:	je     e2da <__ctype_b_loc@plt+0xba0a>
    e296:	mov    rbp,QWORD PTR [rip+0x60b83]        # 6ee20 <__ctype_b_loc@plt+0x6c550>
    e29d:	lea    rbx,[rip+0x9124]        # 173c8 <__ctype_b_loc@plt+0x14af8>
    e2a4:	nop    DWORD PTR [rax+0x0]
    e2a8:	mov    rdi,r13
    e2ab:	call   25e0 <strlen@plt>
    e2b0:	cmp    rbp,rax
    e2b3:	jae    e2cd <__ctype_b_loc@plt+0xb9fd>
    e2b5:	sub    rax,rbp
    e2b8:	mov    rdi,r12
    e2bb:	lea    rsi,[r13+rax*1+0x0]
    e2c0:	call   26d0 <strcmp@plt>
    e2c5:	test   eax,eax
    e2c7:	je     e400 <__ctype_b_loc@plt+0xbb30>
    e2cd:	mov    r13,QWORD PTR [rbx+0x8]
    e2d1:	add    rbx,0x8
    e2d5:	test   r13,r13
    e2d8:	jne    e2a8 <__ctype_b_loc@plt+0xb9d8>
    e2da:	mov    rdi,r12
    e2dd:	call   7650 <__ctype_b_loc@plt+0x4d80>
    e2e2:	mov    rdi,rax
    e2e5:	mov    QWORD PTR [rsp+0x8],rax
    e2ea:	call   e200 <__ctype_b_loc@plt+0xb930>
    e2ef:	lea    rax,[rip+0x90ca]        # 173c0 <__ctype_b_loc@plt+0x14af0>
    e2f6:	xor    edx,edx
    e2f8:	mov    rbx,rax
    e2fb:	mov    rcx,QWORD PTR [rsp+0x8]
    e300:	mov    r14,QWORD PTR [rsp+0x10]
    e305:	mov    QWORD PTR [rax+rdx*8],rcx
    e309:	mov    rdi,r14
    e30c:	call   25e0 <strlen@plt>
    e311:	mov    QWORD PTR [rsp+0x18],rax
    e316:	cmp    eax,0x20
    e319:	jg     e3d0 <__ctype_b_loc@plt+0xbb00>
    e31f:	lea    r13,[rsp+0x20]
    e324:	lea    rdx,[rax+0x1]
    e328:	mov    ecx,0x21
    e32d:	mov    rsi,r14
    e330:	mov    rdi,r13
    e333:	call   2710 <__memcpy_chk@plt>
    e338:	mov    rdi,r13
    e33b:	call   e200 <__ctype_b_loc@plt+0xb930>
    e340:	mov    rdi,r13
    e343:	call   25e0 <strlen@plt>
    e348:	mov    r15,QWORD PTR [rbx]
    e34b:	mov    r12,rax
    e34e:	mov    ebp,eax
    e350:	mov    rdi,r15
    e353:	call   25e0 <strlen@plt>
    e358:	cmp    ebp,eax
    e35a:	jle    e389 <__ctype_b_loc@plt+0xbab9>
    e35c:	mov    edx,ebp
    e35e:	sub    edx,eax
    e360:	sub    edx,0x1
    e363:	movsxd rdx,edx
    e366:	cmp    BYTE PTR [rsp+rdx*1+0x20],0x2f
    e36b:	je     e389 <__ctype_b_loc@plt+0xbab9>
    e36d:	movsxd r14,eax
    e370:	mov    rdi,r12
    e373:	mov    rsi,r15
    e376:	sub    rdi,r14
    e379:	add    rdi,r13
    e37c:	call   26d0 <strcmp@plt>
    e381:	test   eax,eax
    e383:	je     e430 <__ctype_b_loc@plt+0xbb60>
    e389:	mov    r15,QWORD PTR [rbx+0x8]
    e38d:	add    rbx,0x8
    e391:	test   r15,r15
    e394:	jne    e350 <__ctype_b_loc@plt+0xba80>
    e396:	mov    rdi,QWORD PTR [rsp+0x8]
    e39b:	call   24e0 <free@plt>
    e3a0:	mov    rax,QWORD PTR [rsp+0x48]
    e3a5:	sub    rax,QWORD PTR fs:0x28
    e3ae:	jne    e445 <__ctype_b_loc@plt+0xbb75>
    e3b4:	add    rsp,0x58
    e3b8:	mov    rax,r15
    e3bb:	pop    rbx
    e3bc:	pop    rbp
    e3bd:	pop    r12
    e3bf:	pop    r13
    e3c1:	pop    r14
    e3c3:	pop    r15
    e3c5:	ret    
    e3c6:	cs nop WORD PTR [rax+rax*1+0x0]
    e3d0:	movsxd rax,DWORD PTR [rsp+0x18]
    e3d5:	mov    rcx,QWORD PTR [rsp+0x10]
    e3da:	lea    r13,[rsp+0x20]
    e3df:	mov    edx,0x21
    e3e4:	mov    rdi,r13
    e3e7:	lea    rsi,[rcx+rax*1-0x20]
    e3ec:	call   27c0 <__strcpy_chk@plt>
    e3f1:	jmp    e338 <__ctype_b_loc@plt+0xba68>
    e3f6:	cs nop WORD PTR [rax+rax*1+0x0]
    e400:	mov    rdi,r12
    e403:	lea    rbx,[rip+0x8fbe]        # 173c8 <__ctype_b_loc@plt+0x14af8>
    e40a:	call   7650 <__ctype_b_loc@plt+0x4d80>
    e40f:	mov    rdi,rax
    e412:	mov    QWORD PTR [rsp+0x8],rax
    e417:	call   e200 <__ctype_b_loc@plt+0xb930>
    e41c:	mov    edx,0x8
    e421:	lea    rax,[rbx-0x8]
    e425:	jmp    e2fb <__ctype_b_loc@plt+0xba2b>
    e42a:	nop    WORD PTR [rax+rax*1+0x0]
    e430:	movsxd rax,DWORD PTR [rsp+0x18]
    e435:	mov    r15,QWORD PTR [rsp+0x10]
    e43a:	sub    rax,r14
    e43d:	add    r15,rax
    e440:	jmp    e396 <__ctype_b_loc@plt+0xbac6>
    e445:	call   2600 <__stack_chk_fail@plt>
    e44a:	nop    WORD PTR [rax+rax*1+0x0]
    e450:	push   r15
    e452:	push   r14
    e454:	push   r13
    e456:	push   r12
    e458:	mov    r12,rdi
    e45b:	push   rbp
    e45c:	push   rbx
    e45d:	sub    rsp,0x498
    e464:	mov    rax,QWORD PTR fs:0x28
    e46d:	mov    QWORD PTR [rsp+0x488],rax
    e475:	mov    rax,QWORD PTR [rip+0x609ac]        # 6ee28 <__ctype_b_loc@plt+0x6c558>
    e47c:	mov    QWORD PTR [rip+0x8efd],rax        # 17380 <__ctype_b_loc@plt+0x14ab0>
    e483:	call   25e0 <strlen@plt>
    e488:	cmp    rax,0x3fe
    e48e:	ja     e5b8 <__ctype_b_loc@plt+0xbce8>
    e494:	lea    rbp,[rip+0x60545]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    e49b:	lea    rdx,[rax+0x1]
    e49f:	mov    ecx,0x400
    e4a4:	mov    rsi,r12
    e4a7:	mov    rdi,rbp
    e4aa:	call   2710 <__memcpy_chk@plt>
    e4af:	call   e0f0 <__ctype_b_loc@plt+0xb820>
    e4b4:	mov    r9d,eax
    e4b7:	test   eax,eax
    e4b9:	jns    e620 <__ctype_b_loc@plt+0xbd50>
    e4bf:	call   2520 <__errno_location@plt>
    e4c4:	mov    r9d,DWORD PTR [rip+0x60941]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    e4cb:	mov    QWORD PTR [rsp],rax
    e4cf:	mov    ebx,DWORD PTR [rax]
    e4d1:	test   r9d,r9d
    e4d4:	je     f8d9 <__ctype_b_loc@plt+0xd009>
    e4da:	cmp    ebx,0x2
    e4dd:	jne    f8d9 <__ctype_b_loc@plt+0xd009>
    e4e3:	mov    rdi,rbp
    e4e6:	call   e260 <__ctype_b_loc@plt+0xb990>
    e4eb:	test   rax,rax
    e4ee:	jne    ff54 <__ctype_b_loc@plt+0xd684>
    e4f4:	mov    rdi,rbp
    e4f7:	lea    rbx,[rip+0x8e82]        # 17380 <__ctype_b_loc@plt+0x14ab0>
    e4fe:	call   25e0 <strlen@plt>
    e503:	mov    rdi,QWORD PTR [rip+0x6091e]        # 6ee28 <__ctype_b_loc@plt+0x6c558>
    e50a:	lea    rsi,[rip+0x2c7f]        # 11190 <__ctype_b_loc@plt+0xe8c0>
    e511:	mov    QWORD PTR [rsp+0x8],rax
    e516:	call   26d0 <strcmp@plt>
    e51b:	test   eax,eax
    e51d:	lea    rax,[rbx+0x8]
    e521:	cmove  rbx,rax
    e525:	xor    r13d,r13d
    e528:	mov    r14,QWORD PTR [rbx]
    e52b:	jmp    e58f <__ctype_b_loc@plt+0xbcbf>
    e52d:	nop    DWORD PTR [rax]
    e530:	mov    edx,0x400
    e535:	mov    rsi,r14
    e538:	mov    rdi,rbp
    e53b:	call   2490 <__strcat_chk@plt>
    e540:	call   e0f0 <__ctype_b_loc@plt+0xb820>
    e545:	mov    r9d,eax
    e548:	test   eax,eax
    e54a:	jns    e620 <__ctype_b_loc@plt+0xbd50>
    e550:	mov    rax,QWORD PTR [rsp]
    e554:	mov    r15d,DWORD PTR [rax]
    e557:	cmp    r15d,0x2
    e55b:	jne    e910 <__ctype_b_loc@plt+0xc040>
    e561:	mov    r15,QWORD PTR [rip+0x608c0]        # 6ee28 <__ctype_b_loc@plt+0x6c558>
    e568:	mov    rdi,r14
    e56b:	mov    rsi,r15
    e56e:	call   26d0 <strcmp@plt>
    e573:	test   eax,eax
    e575:	mov    eax,0x2
    e57a:	cmove  r13d,eax
    e57e:	mov    r14,QWORD PTR [rbx+0x8]
    e582:	add    rbx,0x8
    e586:	test   r14,r14
    e589:	je     e960 <__ctype_b_loc@plt+0xc090>
    e58f:	mov    edx,0x400
    e594:	mov    rsi,r12
    e597:	mov    rdi,rbp
    e59a:	call   27c0 <__strcpy_chk@plt>
    e59f:	mov    rdi,r14
    e5a2:	call   25e0 <strlen@plt>
    e5a7:	add    rax,QWORD PTR [rsp+0x8]
    e5ac:	cmp    rax,0x3ff
    e5b2:	jbe    e530 <__ctype_b_loc@plt+0xbc60>
    e5b8:	mov    rax,QWORD PTR [rip+0x8a29]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    e5bf:	mov    rdx,QWORD PTR [rip+0x60872]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    e5c6:	mov    rcx,r12
    e5c9:	lea    rsi,[rip+0x2bc4]        # 11194 <__ctype_b_loc@plt+0xe8c4>
    e5d0:	mov    rdi,QWORD PTR [rax]
    e5d3:	xor    eax,eax
    e5d5:	call   70d0 <__ctype_b_loc@plt+0x4800>
    e5da:	mov    DWORD PTR [rip+0x603dc],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    e5e4:	mov    DWORD PTR [rip+0x5fe7a],0xffffffff        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    e5ee:	mov    rax,QWORD PTR [rsp+0x488]
    e5f6:	sub    rax,QWORD PTR fs:0x28
    e5ff:	jne    f96f <__ctype_b_loc@plt+0xd09f>
    e605:	add    rsp,0x498
    e60c:	pop    rbx
    e60d:	pop    rbp
    e60e:	pop    r12
    e610:	pop    r13
    e612:	pop    r14
    e614:	pop    r15
    e616:	ret    
    e617:	nop    WORD PTR [rax+rax*1+0x0]
    e620:	mov    edx,DWORD PTR [rip+0x60272]        # 6e898 <__ctype_b_loc@plt+0x6bfc8>
    e626:	mov    DWORD PTR [rip+0x5fe3b],r9d        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    e62d:	mov    eax,edx
    e62f:	and    eax,0xf000
    e634:	cmp    eax,0x4000
    e639:	je     e6b0 <__ctype_b_loc@plt+0xbde0>
    e63b:	mov    ecx,DWORD PTR [rip+0x607cf]        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    e641:	test   ecx,ecx
    e643:	jne    e7f0 <__ctype_b_loc@plt+0xbf20>
    e649:	cmp    eax,0x8000
    e64e:	je     e730 <__ctype_b_loc@plt+0xbe60>
    e654:	mov    eax,DWORD PTR [rip+0x607be]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    e65a:	test   eax,eax
    e65c:	je     efc8 <__ctype_b_loc@plt+0xc6f8>
    e662:	mov    edx,DWORD PTR [rip+0x60358]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    e668:	test   edx,edx
    e66a:	jne    e676 <__ctype_b_loc@plt+0xbda6>
    e66c:	mov    DWORD PTR [rip+0x6034a],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    e676:	mov    rax,QWORD PTR [rsp+0x488]
    e67e:	sub    rax,QWORD PTR fs:0x28
    e687:	jne    f96f <__ctype_b_loc@plt+0xd09f>
    e68d:	mov    edi,r9d
    e690:	add    rsp,0x498
    e697:	pop    rbx
    e698:	pop    rbp
    e699:	pop    r12
    e69b:	pop    r13
    e69d:	pop    r14
    e69f:	pop    r15
    e6a1:	jmp    2650 <close@plt>
    e6a6:	cs nop WORD PTR [rax+rax*1+0x0]
    e6b0:	mov    r8d,DWORD PTR [rip+0x6073d]        # 6edf4 <__ctype_b_loc@plt+0x6c524>
    e6b7:	mov    edi,r9d
    e6ba:	test   r8d,r8d
    e6bd:	je     e7c0 <__ctype_b_loc@plt+0xbef0>
    e6c3:	mov    DWORD PTR [rsp],r9d
    e6c7:	call   2830 <fdopendir@plt>
    e6cc:	mov    rbp,rax
    e6cf:	call   2520 <__errno_location@plt>
    e6d4:	mov    rbx,rax
    e6d7:	test   rbp,rbp
    e6da:	je     f91f <__ctype_b_loc@plt+0xd04f>
    e6e0:	xor    r13d,r13d
    e6e3:	xor    r15d,r15d
    e6e6:	xor    r14d,r14d
    e6e9:	jmp    e6f8 <__ctype_b_loc@plt+0xbe28>
    e6eb:	nop    DWORD PTR [rax+rax*1+0x0]
    e6f0:	test   dl,dl
    e6f2:	jne    ec20 <__ctype_b_loc@plt+0xc350>
    e6f8:	mov    DWORD PTR [rbx],0x0
    e6fe:	mov    rdi,rbp
    e701:	call   2770 <readdir@plt>
    e706:	test   rax,rax
    e709:	je     e9d0 <__ctype_b_loc@plt+0xc100>
    e70f:	movzx  edx,BYTE PTR [rax+0x13]
    e713:	lea    r8,[rax+0x13]
    e717:	cmp    dl,0x2e
    e71a:	jne    e6f0 <__ctype_b_loc@plt+0xbe20>
    e71c:	movzx  edx,BYTE PTR [rax+0x14]
    e720:	cmp    dl,0x2e
    e723:	jne    e6f0 <__ctype_b_loc@plt+0xbe20>
    e725:	movzx  edx,BYTE PTR [rax+0x15]
    e729:	jmp    e6f0 <__ctype_b_loc@plt+0xbe20>
    e72b:	nop    DWORD PTR [rax+rax*1+0x0]
    e730:	test   dh,0x8
    e733:	jne    ef70 <__ctype_b_loc@plt+0xc6a0>
    e739:	test   dh,0x4
    e73c:	jne    f167 <__ctype_b_loc@plt+0xc897>
    e742:	mov    eax,DWORD PTR [rip+0x606c0]        # 6ee08 <__ctype_b_loc@plt+0x6c538>
    e748:	test   eax,eax
    e74a:	jne    f0f3 <__ctype_b_loc@plt+0xc823>
    e750:	and    dh,0x2
    e753:	jne    fb4a <__ctype_b_loc@plt+0xd27a>
    e759:	mov    rax,QWORD PTR [rip+0x60130]        # 6e890 <__ctype_b_loc@plt+0x6bfc0>
    e760:	cmp    rax,0x1
    e764:	jbe    f0f3 <__ctype_b_loc@plt+0xc823>
    e76a:	mov    r15d,DWORD PTR [rip+0x606a7]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    e771:	test   r15d,r15d
    e774:	jne    e662 <__ctype_b_loc@plt+0xbd92>
    e77a:	cmp    rax,0x2
    e77e:	lea    r8,[rax-0x1]
    e782:	mov    edx,0x73
    e787:	mov    rcx,rbp
    e78a:	mov    rax,QWORD PTR [rip+0x8857]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    e791:	mov    r9d,0x20
    e797:	lea    rsi,[rip+0x4472]        # 12c10 <__ctype_b_loc@plt+0x10340>
    e79e:	cmovne r9d,edx
    e7a2:	mov    rdx,QWORD PTR [rip+0x6068f]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    e7a9:	mov    rdi,QWORD PTR [rax]
    e7ac:	xor    eax,eax
    e7ae:	call   70d0 <__ctype_b_loc@plt+0x4800>
    e7b3:	mov    r9d,DWORD PTR [rip+0x5fcae]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    e7ba:	jmp    e662 <__ctype_b_loc@plt+0xbd92>
    e7bf:	nop
    e7c0:	call   2650 <close@plt>
    e7c5:	mov    edi,DWORD PTR [rip+0x6064d]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    e7cb:	test   edi,edi
    e7cd:	je     f140 <__ctype_b_loc@plt+0xc870>
    e7d3:	mov    esi,DWORD PTR [rip+0x601e7]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    e7d9:	test   esi,esi
    e7db:	jne    e5ee <__ctype_b_loc@plt+0xbd1e>
    e7e1:	mov    DWORD PTR [rip+0x601d5],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    e7eb:	jmp    e5ee <__ctype_b_loc@plt+0xbd1e>
    e7f0:	call   3720 <__ctype_b_loc@plt+0xe50>
    e7f5:	mov    eax,DWORD PTR [rip+0x60605]        # 6ee00 <__ctype_b_loc@plt+0x6c530>
    e7fb:	or     eax,DWORD PTR [rip+0x605e7]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    e801:	mov    edx,DWORD PTR [rip+0x60605]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    e807:	je     ecf8 <__ctype_b_loc@plt+0xc428>
    e80d:	lea    r12,[rip+0x5fc6c]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    e814:	mov    edx,0x400
    e819:	mov    rsi,rbp
    e81c:	mov    DWORD PTR [rsp],r9d
    e820:	mov    rdi,r12
    e823:	call   27c0 <__strcpy_chk@plt>
    e828:	mov    rdi,r12
    e82b:	call   e260 <__ctype_b_loc@plt+0xb990>
    e830:	mov    r13d,DWORD PTR [rip+0x605d5]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    e837:	mov    r9d,DWORD PTR [rsp]
    e83b:	mov    rbx,rax
    e83e:	test   r13d,r13d
    e841:	je     ebb0 <__ctype_b_loc@plt+0xc2e0>
    e847:	test   rax,rax
    e84a:	je     eff6 <__ctype_b_loc@plt+0xc726>
    e850:	mov    rdi,rax
    e853:	mov    DWORD PTR [rsp],r9d
    e857:	call   e200 <__ctype_b_loc@plt+0xb930>
    e85c:	lea    rsi,[rip+0x296b]        # 111ce <__ctype_b_loc@plt+0xe8fe>
    e863:	mov    rdi,rbx
    e866:	call   26d0 <strcmp@plt>
    e86b:	mov    r9d,DWORD PTR [rsp]
    e86f:	test   eax,eax
    e871:	je     f3cb <__ctype_b_loc@plt+0xcafb>
    e877:	lea    rsi,[rip+0x2955]        # 111d3 <__ctype_b_loc@plt+0xe903>
    e87e:	mov    rdi,rbx
    e881:	call   26d0 <strcmp@plt>
    e886:	mov    r9d,DWORD PTR [rsp]
    e88a:	test   eax,eax
    e88c:	je     f3cb <__ctype_b_loc@plt+0xcafb>
    e892:	mov    BYTE PTR [rbx],0x0
    e895:	mov    DWORD PTR [rip+0xd3f61],0x0        # e2800 <__ctype_b_loc@plt+0xdff30>
    e89f:	mov    DWORD PTR [rip+0x5fb9b],0x0        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    e8a9:	mov    DWORD PTR [rip+0x5fb8d],0x0        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    e8b3:	mov    QWORD PTR [rip+0x5fba2],0x0        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    e8be:	mov    QWORD PTR [rip+0x5fb8f],0x0        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    e8c9:	mov    DWORD PTR [rip+0x5fb99],0x0        # 6e46c <__ctype_b_loc@plt+0x6bb9c>
    e8d3:	mov    edi,r9d
    e8d6:	call   85d0 <__ctype_b_loc@plt+0x5d00>
    e8db:	mov    DWORD PTR [rip+0x89b3],eax        # 17294 <__ctype_b_loc@plt+0x149c4>
    e8e1:	test   eax,eax
    e8e3:	jns    ed5d <__ctype_b_loc@plt+0xc48d>
    e8e9:	mov    rax,QWORD PTR [rsp+0x488]
    e8f1:	sub    rax,QWORD PTR fs:0x28
    e8fa:	jne    f96f <__ctype_b_loc@plt+0xd09f>
    e900:	mov    edi,DWORD PTR [rip+0x5fb62]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    e906:	jmp    e690 <__ctype_b_loc@plt+0xbdc0>
    e90b:	nop    DWORD PTR [rax+rax*1+0x0]
    e910:	mov    rax,QWORD PTR [rip+0x86d1]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    e917:	mov    rdx,QWORD PTR [rip+0x6051a]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    e91e:	lea    rsi,[rip+0x2716]        # 1103b <__ctype_b_loc@plt+0xe76b>
    e925:	mov    rdi,QWORD PTR [rax]
    e928:	xor    eax,eax
    e92a:	call   70d0 <__ctype_b_loc@plt+0x4800>
    e92f:	mov    rax,QWORD PTR [rsp]
    e933:	mov    rdi,rbp
    e936:	mov    DWORD PTR [rax],r15d
    e939:	call   2820 <perror@plt>
    e93e:	mov    DWORD PTR [rip+0x60078],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    e948:	mov    DWORD PTR [rip+0x5fb16],0xffffffff        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    e952:	jmp    e5ee <__ctype_b_loc@plt+0xbd1e>
    e957:	nop    WORD PTR [rax+rax*1+0x0]
    e960:	mov    edx,0x400
    e965:	mov    rsi,r12
    e968:	mov    rdi,rbp
    e96b:	call   27c0 <__strcpy_chk@plt>
    e970:	mov    edx,0x400
    e975:	mov    rsi,r15
    e978:	mov    rdi,rbp
    e97b:	call   2490 <__strcat_chk@plt>
    e980:	mov    rbx,QWORD PTR [rsp]
    e984:	mov    rax,QWORD PTR [rip+0x865d]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    e98b:	lea    rsi,[rip+0x26a9]        # 1103b <__ctype_b_loc@plt+0xe76b>
    e992:	mov    rdx,QWORD PTR [rip+0x6049f]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    e999:	mov    DWORD PTR [rbx],r13d
    e99c:	mov    rdi,QWORD PTR [rax]
    e99f:	xor    eax,eax
    e9a1:	call   70d0 <__ctype_b_loc@plt+0x4800>
    e9a6:	mov    DWORD PTR [rbx],r13d
    e9a9:	mov    rdi,rbp
    e9ac:	call   2820 <perror@plt>
    e9b1:	mov    DWORD PTR [rip+0x60005],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    e9bb:	mov    DWORD PTR [rip+0x5faa3],0xffffffff        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    e9c5:	jmp    e5ee <__ctype_b_loc@plt+0xbd1e>
    e9ca:	nop    WORD PTR [rax+rax*1+0x0]
    e9d0:	mov    ecx,DWORD PTR [rbx]
    e9d2:	test   ecx,ecx
    e9d4:	jne    fd7e <__ctype_b_loc@plt+0xd4ae>
    e9da:	cmp    r15,r13
    e9dd:	je     f0fd <__ctype_b_loc@plt+0xc82d>
    e9e3:	mov    BYTE PTR [r14+r13*1],0x0
    e9e8:	test   r14,r14
    e9eb:	je     fecf <__ctype_b_loc@plt+0xd5ff>
    e9f1:	mov    rdi,rbp
    e9f4:	call   2670 <closedir@plt>
    e9f9:	test   eax,eax
    e9fb:	jne    f89f <__ctype_b_loc@plt+0xcfcf>
    ea01:	cmp    BYTE PTR [r14],0x0
    ea05:	mov    rbx,r14
    ea08:	lea    rbp,[rsp+0x80]
    ea10:	jne    ea36 <__ctype_b_loc@plt+0xc166>
    ea12:	jmp    ecc8 <__ctype_b_loc@plt+0xc3f8>
    ea17:	nop    WORD PTR [rax+rax*1+0x0]
    ea20:	cmp    BYTE PTR [rbx+0x1],0x0
    ea24:	lea    r13,[rax+0x1]
    ea28:	jne    ea46 <__ctype_b_loc@plt+0xc176>
    ea2a:	add    rbx,r13
    ea2d:	cmp    BYTE PTR [rbx],0x0
    ea30:	je     ecc8 <__ctype_b_loc@plt+0xc3f8>
    ea36:	mov    rdi,rbx
    ea39:	call   25e0 <strlen@plt>
    ea3e:	cmp    BYTE PTR [rbx],0x2e
    ea41:	mov    r15,rax
    ea44:	je     ea20 <__ctype_b_loc@plt+0xc150>
    ea46:	cmp    BYTE PTR [rbx],0x2e
    ea49:	jne    ea60 <__ctype_b_loc@plt+0xc190>
    ea4b:	cmp    BYTE PTR [rbx+0x1],0x2e
    ea4f:	jne    ea60 <__ctype_b_loc@plt+0xc190>
    ea51:	cmp    BYTE PTR [rbx+0x2],0x0
    ea55:	lea    r13,[r15+0x1]
    ea59:	je     ea2a <__ctype_b_loc@plt+0xc15a>
    ea5b:	nop    DWORD PTR [rax+rax*1+0x0]
    ea60:	mov    rdi,r12
    ea63:	call   25e0 <strlen@plt>
    ea68:	mov    r8,rax
    ea6b:	mov    r13,rax
    ea6e:	lea    rax,[rax+r15*1]
    ea72:	cmp    rax,0x3fd
    ea78:	ja     eb60 <__ctype_b_loc@plt+0xc290>
    ea7e:	lea    r10,[r8+0x1]
    ea82:	mov    ecx,0x400
    ea87:	mov    rsi,r12
    ea8a:	mov    rdi,rbp
    ea8d:	mov    rdx,r10
    ea90:	mov    QWORD PTR [rsp+0x8],r8
    ea95:	mov    QWORD PTR [rsp],r10
    ea99:	call   2710 <__memcpy_chk@plt>
    ea9e:	movzx  eax,BYTE PTR [rsp+0x80]
    eaa6:	mov    r10,QWORD PTR [rsp]
    eaaa:	mov    rdx,rbp
    eaad:	mov    r8,QWORD PTR [rsp+0x8]
    eab2:	cmp    al,0x2f
    eab4:	jne    eacc <__ctype_b_loc@plt+0xc1fc>
    eab6:	cs nop WORD PTR [rax+rax*1+0x0]
    eac0:	movzx  eax,BYTE PTR [rdx+0x1]
    eac4:	add    rdx,0x1
    eac8:	cmp    al,0x2f
    eaca:	je     eac0 <__ctype_b_loc@plt+0xc1f0>
    eacc:	test   al,al
    eace:	je     eb24 <__ctype_b_loc@plt+0xc254>
    ead0:	mov    rcx,rdx
    ead3:	xor    esi,esi
    ead5:	jmp    eaf6 <__ctype_b_loc@plt+0xc226>
    ead7:	nop    WORD PTR [rax+rax*1+0x0]
    eae0:	test   sil,sil
    eae3:	je     eaea <__ctype_b_loc@plt+0xc21a>
    eae5:	mov    rdx,rcx
    eae8:	xor    esi,esi
    eaea:	movzx  eax,BYTE PTR [rcx+0x1]
    eaee:	add    rcx,0x1
    eaf2:	test   al,al
    eaf4:	je     eb0b <__ctype_b_loc@plt+0xc23b>
    eaf6:	cmp    al,0x2f
    eaf8:	jne    eae0 <__ctype_b_loc@plt+0xc210>
    eafa:	movzx  eax,BYTE PTR [rcx+0x1]
    eafe:	add    rcx,0x1
    eb02:	mov    esi,0x1
    eb07:	test   al,al
    eb09:	jne    eaf6 <__ctype_b_loc@plt+0xc226>
    eb0b:	cmp    BYTE PTR [rdx],0x0
    eb0e:	je     eb24 <__ctype_b_loc@plt+0xc254>
    eb10:	cmp    BYTE PTR [rsp+r8*1+0x7f],0x2f
    eb16:	je     eb24 <__ctype_b_loc@plt+0xc254>
    eb18:	mov    BYTE PTR [rsp+r8*1+0x80],0x2f
    eb21:	mov    r13,r10
    eb24:	lea    rdi,[rbp+r13*1+0x0]
    eb29:	lea    r13,[r15+0x1]
    eb2d:	mov    rsi,rbx
    eb30:	mov    rdx,r13
    eb33:	call   2750 <memcpy@plt>
    eb38:	cmp    BYTE PTR [rbp+0x0],0x2d
    eb3c:	jne    eba0 <__ctype_b_loc@plt+0xc2d0>
    eb3e:	cmp    BYTE PTR [rbp+0x1],0x0
    eb42:	jne    eba0 <__ctype_b_loc@plt+0xc2d0>
    eb44:	mov    r15d,DWORD PTR [rip+0x602c5]        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    eb4b:	call   dc80 <__ctype_b_loc@plt+0xb3b0>
    eb50:	mov    DWORD PTR [rip+0x602b9],r15d        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    eb57:	jmp    ea2a <__ctype_b_loc@plt+0xc15a>
    eb5c:	nop    DWORD PTR [rax+0x0]
    eb60:	mov    rax,QWORD PTR [rip+0x8481]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    eb67:	mov    rdx,QWORD PTR [rip+0x602ca]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    eb6e:	mov    r8,rbx
    eb71:	mov    rcx,r12
    eb74:	lea    rsi,[rip+0x2635]        # 111b0 <__ctype_b_loc@plt+0xe8e0>
    eb7b:	lea    r13,[r15+0x1]
    eb7f:	mov    rdi,QWORD PTR [rax]
    eb82:	xor    eax,eax
    eb84:	call   70d0 <__ctype_b_loc@plt+0x4800>
    eb89:	mov    DWORD PTR [rip+0x5fe2d],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    eb93:	jmp    ea2a <__ctype_b_loc@plt+0xc15a>
    eb98:	nop    DWORD PTR [rax+rax*1+0x0]
    eba0:	mov    rdi,rbp
    eba3:	call   e450 <__ctype_b_loc@plt+0xbb80>
    eba8:	jmp    ea2a <__ctype_b_loc@plt+0xc15a>
    ebad:	nop    DWORD PTR [rax]
    ebb0:	test   rax,rax
    ebb3:	je     ebc3 <__ctype_b_loc@plt+0xc2f3>
    ebb5:	mov    edi,DWORD PTR [rip+0x6024d]        # 6ee08 <__ctype_b_loc@plt+0x6c538>
    ebbb:	test   edi,edi
    ebbd:	je     fa7f <__ctype_b_loc@plt+0xd1af>
    ebc3:	mov    rdi,r12
    ebc6:	mov    DWORD PTR [rsp],r9d
    ebca:	mov    DWORD PTR [rip+0x1e87c],0x0        # 2d450 <__ctype_b_loc@plt+0x2ab80>
    ebd4:	call   25e0 <strlen@plt>
    ebd9:	mov    rdx,QWORD PTR [rip+0x60240]        # 6ee20 <__ctype_b_loc@plt+0x6c550>
    ebe0:	add    rdx,rax
    ebe3:	cmp    rdx,0x3ff
    ebea:	jbe    f098 <__ctype_b_loc@plt+0xc7c8>
    ebf0:	mov    ecx,DWORD PTR [rip+0x60222]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    ebf6:	mov    r9d,DWORD PTR [rsp]
    ebfa:	test   ecx,ecx
    ebfc:	jne    e662 <__ctype_b_loc@plt+0xbd92>
    ec02:	mov    rdx,QWORD PTR [rip+0x6022f]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    ec09:	mov    rcx,rbp
    ec0c:	lea    rsi,[rip+0x2581]        # 11194 <__ctype_b_loc@plt+0xe8c4>
    ec13:	jmp    efd9 <__ctype_b_loc@plt+0xc709>
    ec18:	nop    DWORD PTR [rax+rax*1+0x0]
    ec20:	mov    rdi,r8
    ec23:	mov    QWORD PTR [rsp+0x8],r8
    ec28:	call   25e0 <strlen@plt>
    ec2d:	mov    r8,QWORD PTR [rsp+0x8]
    ec32:	lea    rdx,[rax+0x1]
    ec36:	mov    rax,r15
    ec39:	mov    rcx,rdx
    ec3c:	sub    rax,r13
    ec3f:	add    rcx,r13
    ec42:	mov    QWORD PTR [rsp],rcx
    ec46:	setb   cl
    ec49:	cmp    rdx,rax
    ec4c:	movzx  ecx,cl
    ec4f:	jb     ecb0 <__ctype_b_loc@plt+0xc3e0>
    ec51:	test   rcx,rcx
    ec54:	jne    eca4 <__ctype_b_loc@plt+0xc3d4>
    ec56:	test   r14,r14
    ec59:	je     10067 <__ctype_b_loc@plt+0xd797>
    ec5f:	movabs rax,0x5555555555555553
    ec69:	mov    rcx,QWORD PTR [rsp]
    ec6d:	cmp    rcx,rax
    ec70:	ja     eca4 <__ctype_b_loc@plt+0xc3d4>
    ec72:	mov    rax,rcx
    ec75:	shr    rax,1
    ec78:	lea    r15,[rcx+rax*1+0x1]
    ec7d:	mov    rdi,r14
    ec80:	mov    rsi,r15
    ec83:	mov    QWORD PTR [rsp+0x10],rdx
    ec88:	mov    QWORD PTR [rsp+0x8],r8
    ec8d:	call   27b0 <realloc@plt>
    ec92:	mov    r8,QWORD PTR [rsp+0x8]
    ec97:	mov    rdx,QWORD PTR [rsp+0x10]
    ec9c:	test   rax,rax
    ec9f:	mov    r14,rax
    eca2:	jne    ecb0 <__ctype_b_loc@plt+0xc3e0>
    eca4:	call   7620 <__ctype_b_loc@plt+0x4d50>
    eca9:	nop    DWORD PTR [rax+0x0]
    ecb0:	lea    rdi,[r14+r13*1]
    ecb4:	mov    rsi,r8
    ecb7:	call   2750 <memcpy@plt>
    ecbc:	mov    r13,QWORD PTR [rsp]
    ecc0:	jmp    e6f8 <__ctype_b_loc@plt+0xbe28>
    ecc5:	nop    DWORD PTR [rax]
    ecc8:	mov    rax,QWORD PTR [rsp+0x488]
    ecd0:	sub    rax,QWORD PTR fs:0x28
    ecd9:	jne    f96f <__ctype_b_loc@plt+0xd09f>
    ecdf:	add    rsp,0x498
    ece6:	mov    rdi,r14
    ece9:	pop    rbx
    ecea:	pop    rbp
    eceb:	pop    r12
    eced:	pop    r13
    ecef:	pop    r14
    ecf1:	pop    r15
    ecf3:	jmp    24e0 <free@plt>
    ecf8:	mov    r14d,0x7475
    ecfe:	mov    DWORD PTR [rip+0x5f778],0x6f647473        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    ed08:	mov    WORD PTR [rip+0x5f774],r14w        # 6e484 <__ctype_b_loc@plt+0x6bbb4>
    ed10:	mov    BYTE PTR [rip+0x5f76f],0x0        # 6e486 <__ctype_b_loc@plt+0x6bbb6>
    ed17:	mov    DWORD PTR [rip+0xd3adf],0x0        # e2800 <__ctype_b_loc@plt+0xdff30>
    ed21:	mov    DWORD PTR [rip+0x5f719],0x0        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    ed2b:	mov    DWORD PTR [rip+0x5f70b],0x0        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    ed35:	mov    QWORD PTR [rip+0x5f720],0x0        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    ed40:	mov    QWORD PTR [rip+0x5f70d],0x0        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    ed4b:	mov    DWORD PTR [rip+0x5f717],0x0        # 6e46c <__ctype_b_loc@plt+0x6bb9c>
    ed55:	test   edx,edx
    ed57:	jne    e8d3 <__ctype_b_loc@plt+0xc003>
    ed5d:	mov    eax,DWORD PTR [rip+0x6009d]        # 6ee00 <__ctype_b_loc@plt+0x6c530>
    ed63:	test   eax,eax
    ed65:	jne    ef98 <__ctype_b_loc@plt+0xc6c8>
    ed6b:	mov    r13d,DWORD PTR [rip+0x6009e]        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    ed72:	test   r13d,r13d
    ed75:	je     f18b <__ctype_b_loc@plt+0xc8bb>
    ed7b:	mov    DWORD PTR [rip+0x1e6cf],0x1        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    ed85:	mov    edi,DWORD PTR [rip+0x1e6c5]        # 2d450 <__ctype_b_loc@plt+0x2ab80>
    ed8b:	mov    eax,DWORD PTR [rip+0x60067]        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    ed91:	test   edi,edi
    ed93:	je     f07e <__ctype_b_loc@plt+0xc7ae>
    ed99:	test   eax,eax
    ed9b:	je     ede4 <__ctype_b_loc@plt+0xc514>
    ed9d:	jmp    f87f <__ctype_b_loc@plt+0xcfaf>
    eda2:	nop    WORD PTR [rax+rax*1+0x0]
    eda8:	mov    ecx,DWORD PTR [rip+0x5f69a]        # 6e448 <__ctype_b_loc@plt+0x6bb78>
    edae:	test   ecx,ecx
    edb0:	jne    ee08 <__ctype_b_loc@plt+0xc538>
    edb2:	mov    eax,DWORD PTR [rip+0x5f688]        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    edb8:	cmp    DWORD PTR [rip+0x5f686],eax        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    edbe:	je     ef40 <__ctype_b_loc@plt+0xc670>
    edc4:	mov    edi,DWORD PTR [rip+0x5f69e]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    edca:	call   85d0 <__ctype_b_loc@plt+0x5d00>
    edcf:	mov    DWORD PTR [rip+0x84bf],eax        # 17294 <__ctype_b_loc@plt+0x149c4>
    edd5:	test   eax,eax
    edd7:	js     ee08 <__ctype_b_loc@plt+0xc538>
    edd9:	mov    QWORD PTR [rip+0x5f67c],0x0        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    ede4:	mov    esi,DWORD PTR [rip+0x1e66a]        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    edea:	mov    edi,DWORD PTR [rip+0x5f678]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    edf0:	call   QWORD PTR [rip+0x861a]        # 17410 <__ctype_b_loc@plt+0x14b40>
    edf6:	test   eax,eax
    edf8:	jne    f3bc <__ctype_b_loc@plt+0xcaec>
    edfe:	mov    esi,DWORD PTR [rip+0x60008]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    ee04:	test   esi,esi
    ee06:	jne    eda8 <__ctype_b_loc@plt+0xc4d8>
    ee08:	mov    edi,DWORD PTR [rip+0x5f65a]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    ee0e:	call   2650 <close@plt>
    ee13:	test   eax,eax
    ee15:	jne    efbc <__ctype_b_loc@plt+0xc6ec>
    ee1b:	mov    eax,DWORD PTR [rip+0x5ffef]        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    ee21:	test   eax,eax
    ee23:	je     f3da <__ctype_b_loc@plt+0xcb0a>
    ee29:	cmp    DWORD PTR [rip+0x8464],0xffffffff        # 17294 <__ctype_b_loc@plt+0x149c4>
    ee30:	je     e5ee <__ctype_b_loc@plt+0xbd1e>
    ee36:	mov    ebx,DWORD PTR [rip+0x5ffbc]        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    ee3c:	test   ebx,ebx
    ee3e:	je     e5ee <__ctype_b_loc@plt+0xbd1e>
    ee44:	mov    r15,QWORD PTR [rip+0x819d]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    ee4b:	mov    r11d,DWORD PTR [rip+0x5ff96]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    ee52:	mov    rdi,QWORD PTR [r15]
    ee55:	test   r11d,r11d
    ee58:	jne    fb37 <__ctype_b_loc@plt+0xd267>
    ee5e:	mov    r10d,DWORD PTR [rip+0x5ffa7]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    ee65:	mov    rax,QWORD PTR [rip+0x5f5ec]        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    ee6c:	pxor   xmm0,xmm0
    ee70:	mov    rdx,QWORD PTR [rip+0x5f5e9]        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    ee77:	mov    rcx,QWORD PTR [rip+0x5f5d2]        # 6e450 <__ctype_b_loc@plt+0x6bb80>
    ee7e:	test   r10d,r10d
    ee81:	je     facc <__ctype_b_loc@plt+0xd1fc>
    ee87:	test   rdx,rdx
    ee8a:	je     eeb3 <__ctype_b_loc@plt+0xc5e3>
    ee8c:	sub    rax,rcx
    ee8f:	pxor   xmm0,xmm0
    ee93:	pxor   xmm1,xmm1
    ee97:	mov    rcx,rdx
    ee9a:	sub    rcx,rax
    ee9d:	cvtsi2sd xmm1,rdx
    eea2:	cvtsi2sd xmm0,rcx
    eea7:	mulsd  xmm0,QWORD PTR [rip+0x45c1]        # 13470 <__ctype_b_loc@plt+0x10ba0>
    eeaf:	divsd  xmm0,xmm1
    eeb3:	lea    rsi,[rip+0x2257]        # 11111 <__ctype_b_loc@plt+0xe841>
    eeba:	mov    eax,0x1
    eebf:	call   70d0 <__ctype_b_loc@plt+0x4800>
    eec4:	mov    eax,DWORD PTR [rip+0x5ff1e]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    eeca:	or     eax,DWORD PTR [rip+0x5ff40]        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    eed0:	jne    ef06 <__ctype_b_loc@plt+0xc636>
    eed2:	mov    r9d,DWORD PTR [rip+0x5ff2b]        # 6ee04 <__ctype_b_loc@plt+0x6c534>
    eed9:	lea    rax,[rip+0x22a2]        # 11182 <__ctype_b_loc@plt+0xe8b2>
    eee0:	mov    rdi,QWORD PTR [r15]
    eee3:	lea    rdx,[rip+0x2290]        # 1117a <__ctype_b_loc@plt+0xe8aa>
    eeea:	lea    rcx,[rip+0x5f58f]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    eef1:	lea    rsi,[rip+0x236d]        # 11265 <__ctype_b_loc@plt+0xe995>
    eef8:	test   r9d,r9d
    eefb:	cmove  rdx,rax
    eeff:	xor    eax,eax
    ef01:	call   70d0 <__ctype_b_loc@plt+0x4800>
    ef06:	mov    rax,QWORD PTR [rsp+0x488]
    ef0e:	sub    rax,QWORD PTR fs:0x28
    ef17:	jne    f96f <__ctype_b_loc@plt+0xd09f>
    ef1d:	mov    rdi,QWORD PTR [r15]
    ef20:	add    rsp,0x498
    ef27:	lea    rsi,[rip+0x2390]        # 112be <__ctype_b_loc@plt+0xe9ee>
    ef2e:	xor    eax,eax
    ef30:	pop    rbx
    ef31:	pop    rbp
    ef32:	pop    r12
    ef34:	pop    r13
    ef36:	pop    r14
    ef38:	pop    r15
    ef3a:	jmp    70d0 <__ctype_b_loc@plt+0x4800>
    ef3f:	nop
    ef40:	cmp    eax,0x40000
    ef45:	jne    ee08 <__ctype_b_loc@plt+0xc538>
    ef4b:	mov    edi,0x1
    ef50:	call   8470 <__ctype_b_loc@plt+0x5ba0>
    ef55:	cmp    eax,0xffffffff
    ef58:	je     ee08 <__ctype_b_loc@plt+0xc538>
    ef5e:	mov    DWORD PTR [rip+0x5f4dc],0x0        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    ef68:	jmp    edc4 <__ctype_b_loc@plt+0xc4f4>
    ef6d:	nop    DWORD PTR [rax]
    ef70:	mov    eax,DWORD PTR [rip+0x5fea2]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    ef76:	test   eax,eax
    ef78:	jne    e662 <__ctype_b_loc@plt+0xbd92>
    ef7e:	mov    rdx,QWORD PTR [rip+0x5feb3]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    ef85:	mov    rcx,rbp
    ef88:	lea    rsi,[rip+0x3bf1]        # 12b80 <__ctype_b_loc@plt+0x102b0>
    ef8f:	jmp    efd9 <__ctype_b_loc@plt+0xc709>
    ef91:	nop    DWORD PTR [rax+0x0]
    ef98:	mov    edi,DWORD PTR [rip+0x5f4ca]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    ef9e:	mov    esi,DWORD PTR [rip+0x82f0]        # 17294 <__ctype_b_loc@plt+0x149c4>
    efa4:	call   d770 <__ctype_b_loc@plt+0xaea0>
    efa9:	mov    edi,DWORD PTR [rip+0x5f4b9]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    efaf:	call   2650 <close@plt>
    efb4:	test   eax,eax
    efb6:	je     e5ee <__ctype_b_loc@plt+0xbd1e>
    efbc:	call   7690 <__ctype_b_loc@plt+0x4dc0>
    efc1:	nop    DWORD PTR [rax+0x0]
    efc8:	mov    rdx,QWORD PTR [rip+0x5fe69]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    efcf:	mov    rcx,rbp
    efd2:	lea    rsi,[rip+0x3b6f]        # 12b48 <__ctype_b_loc@plt+0x10278>
    efd9:	mov    rax,QWORD PTR [rip+0x8008]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    efe0:	mov    rdi,QWORD PTR [rax]
    efe3:	xor    eax,eax
    efe5:	call   70d0 <__ctype_b_loc@plt+0x4800>
    efea:	mov    r9d,DWORD PTR [rip+0x5f477]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    eff1:	jmp    e662 <__ctype_b_loc@plt+0xbd92>
    eff6:	mov    r11d,DWORD PTR [rip+0x5fdf7]        # 6edf4 <__ctype_b_loc@plt+0x6c524>
    effd:	test   r11d,r11d
    f000:	jne    fd29 <__ctype_b_loc@plt+0xd459>
    f006:	mov    eax,DWORD PTR [rip+0x5fdf4]        # 6ee00 <__ctype_b_loc@plt+0x6c530>
    f00c:	or     eax,DWORD PTR [rip+0x5fdd6]        # 6ede8 <__ctype_b_loc@plt+0x6c518>
    f012:	jne    e895 <__ctype_b_loc@plt+0xbfc5>
    f018:	mov    edi,DWORD PTR [rip+0x5fdda]        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    f01e:	test   edi,edi
    f020:	jne    fd39 <__ctype_b_loc@plt+0xd469>
    f026:	mov    r10d,DWORD PTR [rip+0x5fdeb]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    f02d:	test   r10d,r10d
    f030:	jne    e676 <__ctype_b_loc@plt+0xbda6>
    f036:	mov    rax,QWORD PTR [rip+0x7fab]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    f03d:	mov    rdx,QWORD PTR [rip+0x5fdf4]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    f044:	mov    rcx,rbp
    f047:	lea    rsi,[rip+0x3bf2]        # 12c40 <__ctype_b_loc@plt+0x10370>
    f04e:	mov    rdi,QWORD PTR [rax]
    f051:	xor    eax,eax
    f053:	call   70d0 <__ctype_b_loc@plt+0x4800>
    f058:	mov    r8d,DWORD PTR [rip+0x5f961]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    f05f:	test   r8d,r8d
    f062:	jne    fac0 <__ctype_b_loc@plt+0xd1f0>
    f068:	mov    DWORD PTR [rip+0x5f94e],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    f072:	mov    r9d,DWORD PTR [rip+0x5f3ef]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    f079:	jmp    e676 <__ctype_b_loc@plt+0xbda6>
    f07e:	mov    r8d,DWORD PTR [rip+0x8217]        # 1729c <__ctype_b_loc@plt+0x149cc>
    f085:	xor    edx,edx
    f087:	test   r8d,r8d
    f08a:	sete   dl
    f08d:	mov    DWORD PTR [rip+0x1e3bd],edx        # 2d450 <__ctype_b_loc@plt+0x2ab80>
    f093:	jmp    ed99 <__ctype_b_loc@plt+0xc4c9>
    f098:	mov    rsi,QWORD PTR [rip+0x5fd89]        # 6ee28 <__ctype_b_loc@plt+0x6c558>
    f09f:	mov    edx,0x400
    f0a4:	lea    rdi,[r12+rax*1]
    f0a8:	sub    rdx,rax
    f0ab:	call   27c0 <__strcpy_chk@plt>
    f0b0:	mov    DWORD PTR [rip+0xd3746],0x0        # e2800 <__ctype_b_loc@plt+0xdff30>
    f0ba:	mov    DWORD PTR [rip+0x5f380],0x0        # 6e444 <__ctype_b_loc@plt+0x6bb74>
    f0c4:	mov    DWORD PTR [rip+0x5f372],0x0        # 6e440 <__ctype_b_loc@plt+0x6bb70>
    f0ce:	mov    QWORD PTR [rip+0x5f387],0x0        # 6e460 <__ctype_b_loc@plt+0x6bb90>
    f0d9:	mov    QWORD PTR [rip+0x5f374],0x0        # 6e458 <__ctype_b_loc@plt+0x6bb88>
    f0e4:	mov    DWORD PTR [rip+0x5f37e],0x0        # 6e46c <__ctype_b_loc@plt+0x6bb9c>
    f0ee:	jmp    ed5d <__ctype_b_loc@plt+0xc48d>
    f0f3:	call   3720 <__ctype_b_loc@plt+0xe50>
    f0f8:	jmp    e80d <__ctype_b_loc@plt+0xbf3d>
    f0fd:	lea    rdx,[r15+0x1]
    f101:	cmp    r15,0xffffffffffffffff
    f105:	jne    f110 <__ctype_b_loc@plt+0xc840>
    f107:	test   r14,r14
    f10a:	jne    10262 <__ctype_b_loc@plt+0xd992>
    f110:	mov    rdi,r14
    f113:	mov    rsi,rdx
    f116:	mov    QWORD PTR [rsp],rdx
    f11a:	call   27b0 <realloc@plt>
    f11f:	mov    r14,rax
    f122:	test   rax,rax
    f125:	jne    e9e3 <__ctype_b_loc@plt+0xc113>
    f12b:	mov    rdx,QWORD PTR [rsp]
    f12f:	test   rdx,rdx
    f132:	je     e9e3 <__ctype_b_loc@plt+0xc113>
    f138:	jmp    eca4 <__ctype_b_loc@plt+0xc3d4>
    f13d:	nop    DWORD PTR [rax]
    f140:	mov    rax,QWORD PTR [rip+0x7ea1]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    f147:	mov    rdx,QWORD PTR [rip+0x5fcea]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    f14e:	mov    rcx,rbp
    f151:	lea    rsi,[rip+0x39c8]        # 12b20 <__ctype_b_loc@plt+0x10250>
    f158:	mov    rdi,QWORD PTR [rax]
    f15b:	xor    eax,eax
    f15d:	call   70d0 <__ctype_b_loc@plt+0x4800>
    f162:	jmp    e7d3 <__ctype_b_loc@plt+0xbf03>
    f167:	mov    eax,DWORD PTR [rip+0x5fcab]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    f16d:	test   eax,eax
    f16f:	jne    e662 <__ctype_b_loc@plt+0xbd92>
    f175:	mov    rdx,QWORD PTR [rip+0x5fcbc]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    f17c:	mov    rcx,rbp
    f17f:	lea    rsi,[rip+0x3a2a]        # 12bb0 <__ctype_b_loc@plt+0x102e0>
    f186:	jmp    efd9 <__ctype_b_loc@plt+0xc709>
    f18b:	mov    eax,DWORD PTR [rip+0x5fc73]        # 6ee04 <__ctype_b_loc@plt+0x6c534>
    f191:	test   eax,eax
    f193:	je     fb6e <__ctype_b_loc@plt+0xd29e>
    f199:	lea    r12,[rip+0x5f2e0]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    f1a0:	mov    DWORD PTR [rsp+0x10],0xffffff9c
    f1a8:	lea    rbx,[rip+0x5f2d1]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    f1af:	call   2520 <__errno_location@plt>
    f1b4:	lea    r14,[rsp+0x80]
    f1bc:	mov    QWORD PTR [rsp+0x8],rax
    f1c1:	lea    rax,[rip+0x5f2b8]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    f1c8:	lea    rdx,[rip+0x1e291]        # 2d460 <__ctype_b_loc@plt+0x2ab90>
    f1cf:	lea    rsi,[rax+0x1]
    f1d3:	movzx  eax,BYTE PTR [rax]
    f1d6:	lea    rcx,[rdx+0x1]
    f1da:	mov    BYTE PTR [rdx],al
    f1dc:	test   al,al
    f1de:	jne    f298 <__ctype_b_loc@plt+0xc9c8>
    f1e4:	xor    edi,edi
    f1e6:	mov    rdx,r14
    f1e9:	lea    rsi,[rip+0x5f750]        # 6e940 <__ctype_b_loc@plt+0x6c070>
    f1f0:	call   24b0 <sigprocmask@plt>
    f1f5:	mov    edi,DWORD PTR [rsp+0x10]
    f1f9:	mov    ecx,0x180
    f1fe:	xor    eax,eax
    f200:	mov    edx,0xc1
    f205:	mov    rsi,rbx
    f208:	call   4e00 <__ctype_b_loc@plt+0x2530>
    f20d:	xor    edx,edx
    f20f:	mov    rsi,r14
    f212:	mov    edi,0x2
    f217:	mov    r15d,eax
    f21a:	mov    DWORD PTR [rip+0x1e234],eax        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    f220:	mov    DWORD PTR [rip+0x805a],eax        # 17280 <__ctype_b_loc@plt+0x149b0>
    f226:	mov    rax,QWORD PTR [rsp+0x8]
    f22b:	mov    ecx,DWORD PTR [rax]
    f22d:	mov    DWORD PTR [rsp],ecx
    f230:	call   24b0 <sigprocmask@plt>
    f235:	test   r15d,r15d
    f238:	jns    100d3 <__ctype_b_loc@plt+0xd803>
    f23e:	mov    ecx,DWORD PTR [rsp]
    f241:	cmp    ecx,0x11
    f244:	je     f2a3 <__ctype_b_loc@plt+0xc9d3>
    f246:	cmp    ecx,0x24
    f249:	jne    f370 <__ctype_b_loc@plt+0xcaa0>
    f24f:	mov    rdi,r12
    f252:	call   25e0 <strlen@plt>
    f257:	mov    r13,rax
    f25a:	mov    eax,DWORD PTR [rip+0x5fbac]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    f260:	test   eax,eax
    f262:	je     fbdf <__ctype_b_loc@plt+0xd30f>
    f268:	cmp    r13,0x1
    f26c:	jbe    102ee <__ctype_b_loc@plt+0xda1e>
    f272:	lea    rax,[rip+0x5f206]        # 6e47f <__ctype_b_loc@plt+0x6bbaf>
    f279:	lea    rdx,[rip+0x1e1e0]        # 2d460 <__ctype_b_loc@plt+0x2ab90>
    f280:	mov    BYTE PTR [r13+rax*1+0x0],0x0
    f286:	mov    r13d,0x1
    f28c:	lea    rax,[rip+0x5f1ed]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    f293:	jmp    f1cf <__ctype_b_loc@plt+0xc8ff>
    f298:	mov    rax,rsi
    f29b:	mov    rdx,rcx
    f29e:	jmp    f1cf <__ctype_b_loc@plt+0xc8ff>
    f2a3:	mov    eax,DWORD PTR [rip+0x5fb5f]        # 6ee08 <__ctype_b_loc@plt+0x6c538>
    f2a9:	test   eax,eax
    f2ab:	jne    f35b <__ctype_b_loc@plt+0xca8b>
    f2b1:	mov    r15,QWORD PTR [rip+0x7d30]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    f2b8:	mov    rdx,QWORD PTR [rip+0x5fb79]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    f2bf:	mov    rcx,r12
    f2c2:	xor    eax,eax
    f2c4:	lea    rsi,[rip+0x1f37]        # 11202 <__ctype_b_loc@plt+0xe932>
    f2cb:	mov    rdi,QWORD PTR [r15]
    f2ce:	call   70d0 <__ctype_b_loc@plt+0x4800>
    f2d3:	mov    eax,DWORD PTR [rip+0x5f64f]        # 6e928 <__ctype_b_loc@plt+0x6c058>
    f2d9:	test   eax,eax
    f2db:	je     fd4e <__ctype_b_loc@plt+0xd47e>
    f2e1:	cmp    BYTE PTR [rip+0x5fb14],0x0        # 6edfc <__ctype_b_loc@plt+0x6c52c>
    f2e8:	jne    f2f9 <__ctype_b_loc@plt+0xca29>
    f2ea:	xor    edi,edi
    f2ec:	call   2580 <isatty@plt>
    f2f1:	test   eax,eax
    f2f3:	je     fd4e <__ctype_b_loc@plt+0xd47e>
    f2f9:	mov    rdi,QWORD PTR [r15]
    f2fc:	lea    rsi,[rip+0x39b5]        # 12cb8 <__ctype_b_loc@plt+0x103e8>
    f303:	xor    eax,eax
    f305:	call   70d0 <__ctype_b_loc@plt+0x4800>
    f30a:	mov    rdi,QWORD PTR [r15]
    f30d:	call   4f10 <__ctype_b_loc@plt+0x2640>
    f312:	mov    rax,QWORD PTR [rip+0x7c9f]        # 16fb8 <__ctype_b_loc@plt+0x146e8>
    f319:	mov    rdi,QWORD PTR [rax]
    f31c:	call   2890 <getc@plt>
    f321:	mov    ecx,eax
    f323:	and    ecx,0xffffffdf
    f326:	mov    DWORD PTR [rsp],ecx
    f329:	cmp    eax,0xffffffff
    f32c:	je     f351 <__ctype_b_loc@plt+0xca81>
    f32e:	cmp    eax,0xa
    f331:	je     f351 <__ctype_b_loc@plt+0xca81>
    f333:	nop    DWORD PTR [rax+rax*1+0x0]
    f338:	mov    rax,QWORD PTR [rip+0x7c79]        # 16fb8 <__ctype_b_loc@plt+0x146e8>
    f33f:	mov    rdi,QWORD PTR [rax]
    f342:	call   2890 <getc@plt>
    f347:	cmp    eax,0xa
    f34a:	je     f351 <__ctype_b_loc@plt+0xca81>
    f34c:	cmp    eax,0xffffffff
    f34f:	jne    f338 <__ctype_b_loc@plt+0xca68>
    f351:	cmp    DWORD PTR [rsp],0x59
    f355:	jne    fd4e <__ctype_b_loc@plt+0xd47e>
    f35b:	mov    rdi,r12
    f35e:	call   2540 <unlink@plt>
    f363:	test   eax,eax
    f365:	je     f1c1 <__ctype_b_loc@plt+0xc8f1>
    f36b:	nop    DWORD PTR [rax+rax*1+0x0]
    f370:	mov    r15,QWORD PTR [rsp+0x8]
    f375:	mov    rax,QWORD PTR [rip+0x7c6c]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    f37c:	lea    rsi,[rip+0x1cb8]        # 1103b <__ctype_b_loc@plt+0xe76b>
    f383:	mov    rdx,QWORD PTR [rip+0x5faae]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    f38a:	mov    rdi,QWORD PTR [rax]
    f38d:	mov    ebx,DWORD PTR [r15]
    f390:	xor    eax,eax
    f392:	call   70d0 <__ctype_b_loc@plt+0x4800>
    f397:	mov    DWORD PTR [r15],ebx
    f39a:	mov    rdi,r12
    f39d:	call   2820 <perror@plt>
    f3a2:	mov    DWORD PTR [rip+0x5f614],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    f3ac:	mov    edi,DWORD PTR [rip+0x5f0b6]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    f3b2:	call   2650 <close@plt>
    f3b7:	jmp    e5ee <__ctype_b_loc@plt+0xbd1e>
    f3bc:	mov    DWORD PTR [rip+0x7ece],0xffffffff        # 17294 <__ctype_b_loc@plt+0x149c4>
    f3c6:	jmp    ee08 <__ctype_b_loc@plt+0xc538>
    f3cb:	mov    DWORD PTR [rbx],0x7261742e
    f3d1:	mov    BYTE PTR [rbx+0x4],0x0
    f3d5:	jmp    e895 <__ctype_b_loc@plt+0xbfc5>
    f3da:	mov    r12d,DWORD PTR [rip+0x5f4b7]        # 6e898 <__ctype_b_loc@plt+0x6bfc8>
    f3e1:	mov    ebx,DWORD PTR [rip+0x5fa25]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
    f3e7:	mov    rdx,QWORD PTR [rip+0x5f4da]        # 6e8c8 <__ctype_b_loc@plt+0x6bff8>
    f3ee:	mov    rsi,QWORD PTR [rip+0x5f4db]        # 6e8d0 <__ctype_b_loc@plt+0x6c000>
    f3f5:	mov    rdi,QWORD PTR [rip+0x5f4dc]        # 6e8d8 <__ctype_b_loc@plt+0x6c008>
    f3fc:	mov    rcx,QWORD PTR [rip+0x5f4dd]        # 6e8e0 <__ctype_b_loc@plt+0x6c010>
    f403:	and    r12d,0x1ff
    f40a:	test   ebx,ebx
    f40c:	je     f438 <__ctype_b_loc@plt+0xcb68>
    f40e:	mov    r8,QWORD PTR [rip+0x5f503]        # 6e918 <__ctype_b_loc@plt+0x6c048>
    f415:	xor    ebx,ebx
    f417:	test   r8,r8
    f41a:	js     f438 <__ctype_b_loc@plt+0xcb68>
    f41c:	mov    r9,QWORD PTR [rip+0x5f4ed]        # 6e910 <__ctype_b_loc@plt+0x6c040>
    f423:	cmp    rdi,r9
    f426:	jne    f42d <__ctype_b_loc@plt+0xcb5d>
    f428:	cmp    rcx,r8
    f42b:	je     f438 <__ctype_b_loc@plt+0xcb68>
    f42d:	mov    rcx,r8
    f430:	mov    rdi,r9
    f433:	mov    ebx,0x1
    f438:	lea    r8,[rsi-0x3ffffffe]
    f43f:	mov    QWORD PTR [rsp+0x20],rdx
    f444:	mov    r13d,DWORD PTR [rip+0x1e009]        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    f44b:	mov    QWORD PTR [rsp+0x28],rsi
    f450:	mov    QWORD PTR [rsp+0x30],rdi
    f455:	mov    QWORD PTR [rsp+0x38],rcx
    f45a:	cmp    r8,0x1
    f45e:	jbe    f46d <__ctype_b_loc@plt+0xcb9d>
    f460:	cmp    rsi,0x3b9ac9ff
    f467:	ja     102d2 <__ctype_b_loc@plt+0xda02>
    f46d:	lea    rdx,[rcx-0x3ffffffe]
    f474:	cmp    rdx,0x1
    f478:	jbe    f487 <__ctype_b_loc@plt+0xcbb7>
    f47a:	cmp    rcx,0x3b9ac9ff
    f481:	ja     102d2 <__ctype_b_loc@plt+0xda02>
    f487:	xor    r14d,r14d
    f48a:	cmp    r8,0x1
    f48e:	ja     f4ac <__ctype_b_loc@plt+0xcbdc>
    f490:	mov    QWORD PTR [rsp+0x20],0x0
    f499:	xor    r14d,r14d
    f49c:	cmp    rsi,0x3ffffffe
    f4a3:	mov    eax,0x1
    f4a8:	sete   r14b
    f4ac:	mov    r8d,DWORD PTR [rip+0x1df99]        # 2d44c <__ctype_b_loc@plt+0x2ab7c>
    f4b3:	cmp    rdx,0x1
    f4b7:	jbe    fb01 <__ctype_b_loc@plt+0xd231>
    f4bd:	add    r14d,eax
    f4c0:	test   r8d,r8d
    f4c3:	js     fed6 <__ctype_b_loc@plt+0xd606>
    f4c9:	cmp    r14d,0x2
    f4cd:	je     feeb <__ctype_b_loc@plt+0xd61b>
    f4d3:	test   r13d,r13d
    f4d6:	js     1009b <__ctype_b_loc@plt+0xd7cb>
    f4dc:	lea    rsi,[rsp+0x20]
    f4e1:	mov    edi,r13d
    f4e4:	call   2840 <futimens@plt>
    f4e9:	mov    r15d,eax
    f4ec:	test   eax,eax
    f4ee:	jle    100be <__ctype_b_loc@plt+0xd7ee>
    f4f4:	call   2520 <__errno_location@plt>
    f4f9:	mov    DWORD PTR [rax],0x26
    f4ff:	mov    DWORD PTR [rip+0x1df43],0xffffffff        # 2d44c <__ctype_b_loc@plt+0x2ab7c>
    f509:	test   r14d,r14d
    f50c:	je     ffe1 <__ctype_b_loc@plt+0xd711>
    f512:	cmp    r14d,0x3
    f516:	jne    fea4 <__ctype_b_loc@plt+0xd5d4>
    f51c:	mov    rax,QWORD PTR [rsp+0x28]
    f521:	mov    rcx,QWORD PTR [rsp+0x38]
    f526:	cmp    rax,0x3ffffffe
    f52c:	je     ff9e <__ctype_b_loc@plt+0xd6ce>
    f532:	cmp    rax,0x3fffffff
    f538:	jne    f55b <__ctype_b_loc@plt+0xcc8b>
    f53a:	xor    r14d,r14d
    f53d:	cmp    rcx,0x3fffffff
    f544:	je     f5d1 <__ctype_b_loc@plt+0xcd01>
    f54a:	lea    rsi,[rsp+0x20]
    f54f:	xor    edi,edi
    f551:	call   25b0 <clock_gettime@plt>
    f556:	mov    rcx,QWORD PTR [rsp+0x38]
    f55b:	cmp    rcx,0x3ffffffe
    f562:	jne    ffc5 <__ctype_b_loc@plt+0xd6f5>
    f568:	mov    rdi,QWORD PTR [rsp+0xd8]
    f570:	mov    rcx,QWORD PTR [rsp+0xe0]
    f578:	mov    rsi,QWORD PTR [rsp+0x28]
    f57d:	mov    QWORD PTR [rsp+0x30],rdi
    f582:	mov    QWORD PTR [rsp+0x38],rcx
    f587:	mov    rax,QWORD PTR [rsp+0x20]
    f58c:	mov    QWORD PTR [rsp+0x50],rdi
    f591:	lea    r14,[rsp+0x40]
    f596:	movabs r8,0x20c49ba5e353f7cf
    f5a0:	mov    QWORD PTR [rsp+0x40],rax
    f5a5:	mov    rax,rsi
    f5a8:	sar    rsi,0x3f
    f5ac:	imul   r8
    f5af:	mov    rax,rcx
    f5b2:	sar    rcx,0x3f
    f5b6:	sar    rdx,0x7
    f5ba:	sub    rdx,rsi
    f5bd:	mov    QWORD PTR [rsp+0x48],rdx
    f5c2:	imul   r8
    f5c5:	sar    rdx,0x7
    f5c9:	sub    rdx,rcx
    f5cc:	mov    QWORD PTR [rsp+0x58],rdx
    f5d1:	mov    rdx,r14
    f5d4:	test   r13d,r13d
    f5d7:	js     10082 <__ctype_b_loc@plt+0xd7b2>
    f5dd:	xor    esi,esi
    f5df:	mov    edi,r13d
    f5e2:	call   28b0 <futimesat@plt>
    f5e7:	test   eax,eax
    f5e9:	je     f978 <__ctype_b_loc@plt+0xd0a8>
    f5ef:	mov    rsi,r14
    f5f2:	lea    rdi,[rip+0x5ee87]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    f5f9:	call   26b0 <utimes@plt>
    f5fe:	mov    r15d,eax
    f601:	test   r15d,r15d
    f604:	je     fa46 <__ctype_b_loc@plt+0xd176>
    f60a:	call   2520 <__errno_location@plt>
    f60f:	mov    r13d,DWORD PTR [rax]
    f612:	mov    rbx,rax
    f615:	mov    eax,DWORD PTR [rip+0x5f7fd]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    f61b:	test   eax,eax
    f61d:	je     1002f <__ctype_b_loc@plt+0xd75f>
    f623:	mov    edx,DWORD PTR [rip+0x5f397]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    f629:	test   edx,edx
    f62b:	jne    f64a <__ctype_b_loc@plt+0xcd7a>
    f62d:	mov    DWORD PTR [rip+0x5f389],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    f637:	test   eax,eax
    f639:	jne    f64a <__ctype_b_loc@plt+0xcd7a>
    f63b:	mov    DWORD PTR [rbx],r13d
    f63e:	lea    rdi,[rip+0x5ee3b]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    f645:	call   2820 <perror@plt>
    f64a:	mov    r13d,DWORD PTR [rip+0x1de03]        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    f651:	mov    edx,DWORD PTR [rip+0x5f249]        # 6e8a0 <__ctype_b_loc@plt+0x6bfd0>
    f657:	mov    esi,0xffffffff
    f65c:	mov    edi,r13d
    f65f:	call   2810 <fchown@plt>
    f664:	mov    esi,r12d
    f667:	mov    edi,r13d
    f66a:	call   27d0 <fchmod@plt>
    f66f:	test   eax,eax
    f671:	je     f6ba <__ctype_b_loc@plt+0xcdea>
    f673:	call   2520 <__errno_location@plt>
    f678:	mov    r12d,DWORD PTR [rax]
    f67b:	mov    rbx,rax
    f67e:	mov    eax,DWORD PTR [rip+0x5f794]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    f684:	test   eax,eax
    f686:	je     fff5 <__ctype_b_loc@plt+0xd725>
    f68c:	mov    ecx,DWORD PTR [rip+0x5f32e]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    f692:	test   ecx,ecx
    f694:	jne    f6ba <__ctype_b_loc@plt+0xcdea>
    f696:	mov    DWORD PTR [rip+0x5f320],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    f6a0:	test   eax,eax
    f6a2:	jne    f6b3 <__ctype_b_loc@plt+0xcde3>
    f6a4:	mov    DWORD PTR [rbx],r12d
    f6a7:	lea    rdi,[rip+0x5edd2]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    f6ae:	call   2820 <perror@plt>
    f6b3:	mov    r13d,DWORD PTR [rip+0x1dd9a]        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    f6ba:	mov    esi,DWORD PTR [rip+0x5f1dc]        # 6e89c <__ctype_b_loc@plt+0x6bfcc>
    f6c0:	mov    edx,0xffffffff
    f6c5:	mov    edi,r13d
    f6c8:	call   2810 <fchown@plt>
    f6cd:	cmp    BYTE PTR [rip+0x5f718],0x0        # 6edec <__ctype_b_loc@plt+0x6c51c>
    f6d4:	je     f71f <__ctype_b_loc@plt+0xce4f>
    f6d6:	mov    edi,DWORD PTR [rip+0x7bb4]        # 17290 <__ctype_b_loc@plt+0x149c0>
    f6dc:	test   edi,edi
    f6de:	js     f6fe <__ctype_b_loc@plt+0xce2e>
    f6e0:	call   2530 <fdatasync@plt>
    f6e5:	test   eax,eax
    f6e7:	je     f6f7 <__ctype_b_loc@plt+0xce27>
    f6e9:	call   2520 <__errno_location@plt>
    f6ee:	cmp    DWORD PTR [rax],0x16
    f6f1:	jne    10306 <__ctype_b_loc@plt+0xda36>
    f6f7:	mov    r13d,DWORD PTR [rip+0x1dd56]        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    f6fe:	mov    edi,r13d
    f701:	call   27e0 <fsync@plt>
    f706:	test   eax,eax
    f708:	je     f718 <__ctype_b_loc@plt+0xce48>
    f70a:	call   2520 <__errno_location@plt>
    f70f:	cmp    DWORD PTR [rax],0x16
    f712:	jne    10306 <__ctype_b_loc@plt+0xda36>
    f718:	mov    r13d,DWORD PTR [rip+0x1dd35]        # 2d454 <__ctype_b_loc@plt+0x2ab84>
    f71f:	mov    edi,r13d
    f722:	call   2650 <close@plt>
    f727:	test   eax,eax
    f729:	jne    10306 <__ctype_b_loc@plt+0xda36>
    f72f:	mov    r14d,DWORD PTR [rip+0x5f6ce]        # 6ee04 <__ctype_b_loc@plt+0x6c534>
    f736:	test   r14d,r14d
    f739:	jne    f835 <__ctype_b_loc@plt+0xcf65>
    f73f:	movzx  eax,BYTE PTR [rip+0x5f29a]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    f746:	lea    r12,[rip+0x5f293]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    f74d:	cmp    al,0x2f
    f74f:	jne    1020f <__ctype_b_loc@plt+0xd93f>
    f755:	nop    DWORD PTR [rax]
    f758:	movzx  eax,BYTE PTR [r12+0x1]
    f75e:	add    r12,0x1
    f762:	cmp    al,0x2f
    f764:	je     f758 <__ctype_b_loc@plt+0xce88>
    f766:	test   al,al
    f768:	je     f798 <__ctype_b_loc@plt+0xcec8>
    f76a:	mov    rdx,r12
    f76d:	xor    ecx,ecx
    f76f:	jmp    f78d <__ctype_b_loc@plt+0xcebd>
    f771:	nop    DWORD PTR [rax+0x0]
    f778:	test   cl,cl
    f77a:	je     f781 <__ctype_b_loc@plt+0xceb1>
    f77c:	mov    r12,rdx
    f77f:	xor    ecx,ecx
    f781:	movzx  eax,BYTE PTR [rdx+0x1]
    f785:	add    rdx,0x1
    f789:	test   al,al
    f78b:	je     f798 <__ctype_b_loc@plt+0xcec8>
    f78d:	cmp    al,0x2f
    f78f:	jne    f778 <__ctype_b_loc@plt+0xcea8>
    f791:	mov    ecx,0x1
    f796:	jmp    f781 <__ctype_b_loc@plt+0xceb1>
    f798:	mov    rbx,r12
    f79b:	lea    rsi,[rip+0x5f23e]        # 6e9e0 <__ctype_b_loc@plt+0x6c110>
    f7a2:	sub    rbx,rbp
    f7a5:	mov    rdx,rbx
    f7a8:	jne    f7bb <__ctype_b_loc@plt+0xceeb>
    f7aa:	mov    edx,0x1
    f7af:	mov    ebx,0x1
    f7b4:	lea    rsi,[rip+0x2c85]        # 12440 <__ctype_b_loc@plt+0xfb70>
    f7bb:	lea    r13,[rip+0x5e87e]        # 6e040 <__ctype_b_loc@plt+0x6b770>
    f7c2:	mov    rdi,r13
    f7c5:	call   26a0 <memcmp@plt>
    f7ca:	test   eax,eax
    f7cc:	jne    fe6a <__ctype_b_loc@plt+0xd59a>
    f7d2:	cmp    BYTE PTR [r13+rbx*1+0x0],0x0
    f7d8:	jne    fe6a <__ctype_b_loc@plt+0xd59a>
    f7de:	mov    r13d,DWORD PTR [rip+0x7aab]        # 17290 <__ctype_b_loc@plt+0x149c0>
    f7e5:	lea    r14,[rsp+0x80]
    f7ed:	lea    rsi,[rip+0x5f14c]        # 6e940 <__ctype_b_loc@plt+0x6c070>
    f7f4:	xor    edi,edi
    f7f6:	mov    rdx,r14
    f7f9:	call   24b0 <sigprocmask@plt>
    f7fe:	mov    DWORD PTR [rip+0x7a78],0xffffffff        # 17280 <__ctype_b_loc@plt+0x149b0>
    f808:	test   r13d,r13d
    f80b:	js     fe8d <__ctype_b_loc@plt+0xd5bd>
    f811:	xor    edx,edx
    f813:	mov    rsi,r12
    f816:	mov    edi,r13d
    f819:	call   2570 <unlinkat@plt>
    f81e:	test   eax,eax
    f820:	jne    fe09 <__ctype_b_loc@plt+0xd539>
    f826:	xor    edx,edx
    f828:	mov    rsi,r14
    f82b:	mov    edi,0x2
    f830:	call   24b0 <sigprocmask@plt>
    f835:	cmp    DWORD PTR [rip+0x7a58],0xffffffff        # 17294 <__ctype_b_loc@plt+0x149c4>
    f83c:	jne    ee36 <__ctype_b_loc@plt+0xc566>
    f842:	mov    ebp,DWORD PTR [rip+0x5f5c8]        # 6ee10 <__ctype_b_loc@plt+0x6c540>
    f848:	test   ebp,ebp
    f84a:	jne    e5ee <__ctype_b_loc@plt+0xbd1e>
    f850:	mov    rax,QWORD PTR [rsp+0x488]
    f858:	sub    rax,QWORD PTR fs:0x28
    f861:	jne    f96f <__ctype_b_loc@plt+0xd09f>
    f867:	add    rsp,0x498
    f86e:	xor    edi,edi
    f870:	pop    rbx
    f871:	pop    rbp
    f872:	pop    r12
    f874:	pop    r13
    f876:	pop    r14
    f878:	pop    r15
    f87a:	jmp    4440 <__ctype_b_loc@plt+0x1b70>
    f87f:	mov    rax,QWORD PTR [rip+0x7762]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    f886:	mov    rdx,rbp
    f889:	lea    rsi,[rip+0x19b4]        # 11244 <__ctype_b_loc@plt+0xe974>
    f890:	mov    rdi,QWORD PTR [rax]
    f893:	xor    eax,eax
    f895:	call   70d0 <__ctype_b_loc@plt+0x4800>
    f89a:	jmp    ede4 <__ctype_b_loc@plt+0xc514>
    f89f:	mov    rax,QWORD PTR [rip+0x7742]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    f8a6:	mov    ebp,DWORD PTR [rbx]
    f8a8:	lea    rsi,[rip+0x178c]        # 1103b <__ctype_b_loc@plt+0xe76b>
    f8af:	mov    rdx,QWORD PTR [rip+0x5f582]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    f8b6:	mov    rdi,QWORD PTR [rax]
    f8b9:	xor    eax,eax
    f8bb:	call   70d0 <__ctype_b_loc@plt+0x4800>
    f8c0:	mov    DWORD PTR [rbx],ebp
    f8c2:	mov    rdi,r12
    f8c5:	call   2820 <perror@plt>
    f8ca:	mov    DWORD PTR [rip+0x5f0ec],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    f8d4:	jmp    ea01 <__ctype_b_loc@plt+0xc131>
    f8d9:	mov    rax,QWORD PTR [rip+0x7708]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    f8e0:	mov    rdx,QWORD PTR [rip+0x5f551]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    f8e7:	lea    rsi,[rip+0x174d]        # 1103b <__ctype_b_loc@plt+0xe76b>
    f8ee:	mov    rdi,QWORD PTR [rax]
    f8f1:	xor    eax,eax
    f8f3:	call   70d0 <__ctype_b_loc@plt+0x4800>
    f8f8:	mov    rax,QWORD PTR [rsp]
    f8fc:	mov    rdi,rbp
    f8ff:	mov    DWORD PTR [rax],ebx
    f901:	call   2820 <perror@plt>
    f906:	mov    DWORD PTR [rip+0x5f0b0],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    f910:	mov    DWORD PTR [rip+0x5eb4e],0xffffffff        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    f91a:	jmp    e5ee <__ctype_b_loc@plt+0xbd1e>
    f91f:	mov    ebp,DWORD PTR [rax]
    f921:	mov    rax,QWORD PTR [rip+0x76c0]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    f928:	lea    rsi,[rip+0x170c]        # 1103b <__ctype_b_loc@plt+0xe76b>
    f92f:	mov    rdx,QWORD PTR [rip+0x5f502]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    f936:	mov    rdi,QWORD PTR [rax]
    f939:	xor    eax,eax
    f93b:	call   70d0 <__ctype_b_loc@plt+0x4800>
    f940:	mov    DWORD PTR [rbx],ebp
    f942:	mov    rdi,r12
    f945:	call   2820 <perror@plt>
    f94a:	mov    r9d,DWORD PTR [rsp]
    f94e:	mov    DWORD PTR [rip+0x5f068],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    f958:	mov    rax,QWORD PTR [rsp+0x488]
    f960:	sub    rax,QWORD PTR fs:0x28
    f969:	je     e68d <__ctype_b_loc@plt+0xbdbd>
    f96f:	call   2600 <__stack_chk_fail@plt>
    f974:	nop    DWORD PTR [rax+0x0]
    f978:	test   r14,r14
    f97b:	je     fa46 <__ctype_b_loc@plt+0xd176>
    f981:	cmp    QWORD PTR [r14+0x8],0x7a11f
    f989:	setg   r15b
    f98d:	cmp    QWORD PTR [r14+0x18],0x7a11f
    f995:	setg   cl
    f998:	test   r15b,r15b
    f99b:	jne    f9a5 <__ctype_b_loc@plt+0xd0d5>
    f99d:	test   cl,cl
    f99f:	je     fa46 <__ctype_b_loc@plt+0xd176>
    f9a5:	lea    rsi,[rsp+0x80]
    f9ad:	mov    edi,r13d
    f9b0:	mov    BYTE PTR [rsp],cl
    f9b3:	call   2880 <fstat@plt>
    f9b8:	test   eax,eax
    f9ba:	jne    fa46 <__ctype_b_loc@plt+0xd176>
    f9c0:	mov    rax,QWORD PTR [rsp+0xd8]
    f9c8:	sub    rax,QWORD PTR [r14+0x10]
    f9cc:	mov    rdx,QWORD PTR [rsp+0xc8]
    f9d4:	movzx  ecx,BYTE PTR [rsp]
    f9d8:	sub    rdx,QWORD PTR [r14]
    f9db:	sub    rax,0x1
    f9df:	movdqa xmm2,XMMWORD PTR [r14]
    f9e4:	sete   al
    f9e7:	movdqa xmm3,XMMWORD PTR [r14+0x10]
    f9ed:	and    eax,ecx
    f9ef:	sub    rdx,0x1
    f9f3:	movaps XMMWORD PTR [rsp+0x60],xmm2
    f9f8:	movaps XMMWORD PTR [rsp+0x70],xmm3
    f9fd:	jne    102ad <__ctype_b_loc@plt+0xd9dd>
    fa03:	test   r15b,r15b
    fa06:	je     102ad <__ctype_b_loc@plt+0xd9dd>
    fa0c:	cmp    QWORD PTR [rsp+0xd0],0x0
    fa15:	jne    102ad <__ctype_b_loc@plt+0xd9dd>
    fa1b:	mov    QWORD PTR [rsp+0x68],0x0
    fa24:	test   al,al
    fa26:	je     fa37 <__ctype_b_loc@plt+0xd167>
    fa28:	cmp    QWORD PTR [rsp+0xe0],0x0
    fa31:	je     102c4 <__ctype_b_loc@plt+0xd9f4>
    fa37:	lea    rdx,[rsp+0x60]
    fa3c:	xor    esi,esi
    fa3e:	mov    edi,r13d
    fa41:	call   28b0 <futimesat@plt>
    fa46:	test   ebx,ebx
    fa48:	je     f64a <__ctype_b_loc@plt+0xcd7a>
    fa4e:	cmp    DWORD PTR [rip+0x5f3a3],0x1        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    fa55:	jle    f64a <__ctype_b_loc@plt+0xcd7a>
    fa5b:	mov    rax,QWORD PTR [rip+0x7586]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    fa62:	lea    rdx,[rip+0x5ea17]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    fa69:	lea    rsi,[rip+0x17d9]        # 11249 <__ctype_b_loc@plt+0xe979>
    fa70:	mov    rdi,QWORD PTR [rax]
    fa73:	xor    eax,eax
    fa75:	call   70d0 <__ctype_b_loc@plt+0x4800>
    fa7a:	jmp    f64a <__ctype_b_loc@plt+0xcd7a>
    fa7f:	mov    esi,DWORD PTR [rip+0x5f373]        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    fa85:	test   esi,esi
    fa87:	jne    fa9b <__ctype_b_loc@plt+0xd1cb>
    fa89:	mov    eax,DWORD PTR [rip+0x5f365]        # 6edf4 <__ctype_b_loc@plt+0x6c524>
    fa8f:	or     eax,DWORD PTR [rip+0x5f383]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    fa95:	jne    e676 <__ctype_b_loc@plt+0xbda6>
    fa9b:	mov    rax,QWORD PTR [rip+0x7546]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    faa2:	mov    rdx,QWORD PTR [rip+0x5f38f]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    faa9:	mov    r8,rbx
    faac:	mov    rcx,rbp
    faaf:	lea    rsi,[rip+0x31b2]        # 12c68 <__ctype_b_loc@plt+0x10398>
    fab6:	mov    rdi,QWORD PTR [rax]
    fab9:	xor    eax,eax
    fabb:	call   70d0 <__ctype_b_loc@plt+0x4800>
    fac0:	mov    r9d,DWORD PTR [rip+0x5e9a1]        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    fac7:	jmp    e676 <__ctype_b_loc@plt+0xbda6>
    facc:	test   rax,rax
    facf:	je     eeb3 <__ctype_b_loc@plt+0xc5e3>
    fad5:	sub    rdx,rcx
    fad8:	pxor   xmm0,xmm0
    fadc:	pxor   xmm1,xmm1
    fae0:	mov    rcx,rax
    fae3:	sub    rcx,rdx
    fae6:	cvtsi2sd xmm1,rax
    faeb:	cvtsi2sd xmm0,rcx
    faf0:	mulsd  xmm0,QWORD PTR [rip+0x3978]        # 13470 <__ctype_b_loc@plt+0x10ba0>
    faf8:	divsd  xmm0,xmm1
    fafc:	jmp    eeb3 <__ctype_b_loc@plt+0xc5e3>
    fb01:	mov    QWORD PTR [rsp+0x30],0x0
    fb0a:	xor    eax,eax
    fb0c:	cmp    rcx,0x3ffffffe
    fb13:	sete   al
    fb16:	add    r14d,eax
    fb19:	test   r8d,r8d
    fb1c:	js     fe9a <__ctype_b_loc@plt+0xd5ca>
    fb22:	cmp    r14d,0x1
    fb26:	sete   r14b
    fb2a:	movzx  r14d,r14b
    fb2e:	add    r14d,0x1
    fb32:	jmp    f4c9 <__ctype_b_loc@plt+0xcbf9>
    fb37:	lea    rsi,[rip+0x1723]        # 11261 <__ctype_b_loc@plt+0xe991>
    fb3e:	xor    eax,eax
    fb40:	call   70d0 <__ctype_b_loc@plt+0x4800>
    fb45:	jmp    eec4 <__ctype_b_loc@plt+0xc5f4>
    fb4a:	mov    eax,DWORD PTR [rip+0x5f2c8]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    fb50:	test   eax,eax
    fb52:	jne    e662 <__ctype_b_loc@plt+0xbd92>
    fb58:	mov    rdx,QWORD PTR [rip+0x5f2d9]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    fb5f:	mov    rcx,rbp
    fb62:	lea    rsi,[rip+0x3077]        # 12be0 <__ctype_b_loc@plt+0x10310>
    fb69:	jmp    efd9 <__ctype_b_loc@plt+0xc709>
    fb6e:	movzx  eax,BYTE PTR [rip+0x5e90b]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    fb75:	lea    r12,[rip+0x5e904]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    fb7c:	mov    rbx,r12
    fb7f:	cmp    al,0x2f
    fb81:	jne    fb94 <__ctype_b_loc@plt+0xd2c4>
    fb83:	nop    DWORD PTR [rax+rax*1+0x0]
    fb88:	movzx  eax,BYTE PTR [rbx+0x1]
    fb8c:	add    rbx,0x1
    fb90:	cmp    al,0x2f
    fb92:	je     fb88 <__ctype_b_loc@plt+0xd2b8>
    fb94:	test   al,al
    fb96:	je     fbc0 <__ctype_b_loc@plt+0xd2f0>
    fb98:	mov    rdx,rbx
    fb9b:	xor    ecx,ecx
    fb9d:	jmp    fbb5 <__ctype_b_loc@plt+0xd2e5>
    fb9f:	nop
    fba0:	test   cl,cl
    fba2:	je     fba9 <__ctype_b_loc@plt+0xd2d9>
    fba4:	mov    rbx,rdx
    fba7:	xor    ecx,ecx
    fba9:	movzx  eax,BYTE PTR [rdx+0x1]
    fbad:	add    rdx,0x1
    fbb1:	test   al,al
    fbb3:	je     fbc0 <__ctype_b_loc@plt+0xd2f0>
    fbb5:	cmp    al,0x2f
    fbb7:	jne    fba0 <__ctype_b_loc@plt+0xd2d0>
    fbb9:	mov    ecx,0x1
    fbbe:	jmp    fba9 <__ctype_b_loc@plt+0xd2d9>
    fbc0:	mov    rsi,rbx
    fbc3:	mov    rdi,r12
    fbc6:	sub    rsi,r12
    fbc9:	call   e030 <__ctype_b_loc@plt+0xb760>
    fbce:	mov    DWORD PTR [rsp+0x10],eax
    fbd2:	test   eax,eax
    fbd4:	jns    f1af <__ctype_b_loc@plt+0xc8df>
    fbda:	jmp    f1a0 <__ctype_b_loc@plt+0xc8d0>
    fbdf:	mov    rdi,r12
    fbe2:	call   e260 <__ctype_b_loc@plt+0xb990>
    fbe7:	mov    r15,rax
    fbea:	test   rax,rax
    fbed:	je     102fa <__ctype_b_loc@plt+0xda2a>
    fbf3:	mov    BYTE PTR [rax],0x0
    fbf6:	mov    DWORD PTR [rip+0x1d850],0x1        # 2d450 <__ctype_b_loc@plt+0x2ab80>
    fc00:	cmp    r13,0x4
    fc04:	jbe    fc21 <__ctype_b_loc@plt+0xd351>
    fc06:	lea    r13,[rax-0x4]
    fc0a:	lea    rsi,[rip+0x15ec]        # 111fd <__ctype_b_loc@plt+0xe92d>
    fc11:	mov    rdi,r13
    fc14:	call   26d0 <strcmp@plt>
    fc19:	test   eax,eax
    fc1b:	je     1023c <__ctype_b_loc@plt+0xd96c>
    fc21:	movzx  eax,BYTE PTR [r12]
    fc26:	mov    DWORD PTR [rsp],0x3
    fc2d:	mov    BYTE PTR [rsp+0x1f],al
    fc31:	cmp    BYTE PTR [rsp+0x1f],0x2f
    fc36:	jne    101c3 <__ctype_b_loc@plt+0xd8f3>
    fc3c:	lea    r15,[rip+0x5e83d]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
    fc43:	nop    DWORD PTR [rax+rax*1+0x0]
    fc48:	movzx  eax,BYTE PTR [r15+0x1]
    fc4d:	add    r15,0x1
    fc51:	cmp    al,0x2f
    fc53:	je     fc48 <__ctype_b_loc@plt+0xd378>
    fc55:	test   al,al
    fc57:	je     fc81 <__ctype_b_loc@plt+0xd3b1>
    fc59:	mov    rcx,r15
    fc5c:	xor    esi,esi
    fc5e:	jmp    fc76 <__ctype_b_loc@plt+0xd3a6>
    fc60:	test   sil,sil
    fc63:	je     fc6a <__ctype_b_loc@plt+0xd39a>
    fc65:	mov    r15,rcx
    fc68:	xor    esi,esi
    fc6a:	movzx  eax,BYTE PTR [rcx+0x1]
    fc6e:	add    rcx,0x1
    fc72:	test   al,al
    fc74:	je     fcbf <__ctype_b_loc@plt+0xd3ef>
    fc76:	cmp    al,0x2f
    fc78:	jne    fc60 <__ctype_b_loc@plt+0xd390>
    fc7a:	mov    esi,0x1
    fc7f:	jmp    fc6a <__ctype_b_loc@plt+0xd39a>
    fc81:	sub    DWORD PTR [rsp],0x1
    fc85:	jne    fc31 <__ctype_b_loc@plt+0xd361>
    fc87:	mov    rdi,r12
    fc8a:	mov    esi,0x2e
    fc8f:	call   2620 <strrchr@plt>
    fc94:	mov    rdi,rax
    fc97:	test   rax,rax
    fc9a:	je     102e2 <__ctype_b_loc@plt+0xda12>
    fca0:	cmp    BYTE PTR [rdi+0x1],0x1
    fca4:	sbb    rdi,0x0
    fca8:	mov    rsi,QWORD PTR [rip+0x5f179]        # 6ee28 <__ctype_b_loc@plt+0x6c558>
    fcaf:	mov    r13d,0x1
    fcb5:	call   2560 <strcpy@plt>
    fcba:	jmp    f1c1 <__ctype_b_loc@plt+0xc8f1>
    fcbf:	cmp    BYTE PTR [r15],0x0
    fcc3:	je     fc81 <__ctype_b_loc@plt+0xd3b1>
    fcc5:	xor    r13d,r13d
    fcc8:	jmp    fce3 <__ctype_b_loc@plt+0xd413>
    fcca:	nop    WORD PTR [rax+rax*1+0x0]
    fcd0:	cmp    BYTE PTR [rcx],0x0
    fcd3:	lea    r13,[rcx-0x1]
    fcd7:	je     fd10 <__ctype_b_loc@plt+0xd440>
    fcd9:	cmp    BYTE PTR [rcx+0x1],0x0
    fcdd:	lea    r15,[rcx+0x1]
    fce1:	je     fd02 <__ctype_b_loc@plt+0xd432>
    fce3:	lea    rsi,[rip+0x139c]        # 11086 <__ctype_b_loc@plt+0xe7b6>
    fcea:	mov    rdi,r15
    fced:	call   2680 <strcspn@plt>
    fcf2:	movsxd rcx,eax
    fcf5:	add    rcx,r15
    fcf8:	cmp    eax,DWORD PTR [rsp]
    fcfb:	jg     fcd0 <__ctype_b_loc@plt+0xd400>
    fcfd:	cmp    BYTE PTR [rcx],0x0
    fd00:	jne    fcd9 <__ctype_b_loc@plt+0xd409>
    fd02:	test   r13,r13
    fd05:	je     fc81 <__ctype_b_loc@plt+0xd3b1>
    fd0b:	nop    DWORD PTR [rax+rax*1+0x0]
    fd10:	movzx  eax,BYTE PTR [r13+0x1]
    fd15:	mov    rdi,r13
    fd18:	add    r13,0x1
    fd1c:	mov    BYTE PTR [r13-0x1],al
    fd20:	test   al,al
    fd22:	jne    fd10 <__ctype_b_loc@plt+0xd440>
    fd24:	jmp    fca8 <__ctype_b_loc@plt+0xd3d8>
    fd29:	mov    r8d,DWORD PTR [rip+0x5f0c8]        # 6edf8 <__ctype_b_loc@plt+0x6c528>
    fd30:	test   r8d,r8d
    fd33:	je     e676 <__ctype_b_loc@plt+0xbda6>
    fd39:	mov    r9d,DWORD PTR [rip+0x5f0d8]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    fd40:	test   r9d,r9d
    fd43:	jne    f058 <__ctype_b_loc@plt+0xc788>
    fd49:	jmp    f036 <__ctype_b_loc@plt+0xc766>
    fd4e:	mov    rdi,QWORD PTR [r15]
    fd51:	lea    rsi,[rip+0x14c1]        # 11219 <__ctype_b_loc@plt+0xe949>
    fd58:	xor    eax,eax
    fd5a:	call   70d0 <__ctype_b_loc@plt+0x4800>
    fd5f:	mov    r11d,DWORD PTR [rip+0x5ec5a]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    fd66:	test   r11d,r11d
    fd69:	jne    f3ac <__ctype_b_loc@plt+0xcadc>
    fd6f:	mov    DWORD PTR [rip+0x5ec47],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    fd79:	jmp    f3ac <__ctype_b_loc@plt+0xcadc>
    fd7e:	mov    rdi,r14
    fd81:	mov    DWORD PTR [rsp],ecx
    fd84:	call   24e0 <free@plt>
    fd89:	mov    ecx,DWORD PTR [rsp]
    fd8c:	mov    r13,QWORD PTR [rip+0x7255]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    fd93:	mov    rdx,QWORD PTR [rip+0x5f09e]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    fd9a:	xor    eax,eax
    fd9c:	mov    DWORD PTR [rsp],ecx
    fd9f:	lea    r14,[rip+0x1295]        # 1103b <__ctype_b_loc@plt+0xe76b>
    fda6:	mov    rdi,QWORD PTR [r13+0x0]
    fdaa:	mov    rsi,r14
    fdad:	call   70d0 <__ctype_b_loc@plt+0x4800>
    fdb2:	mov    ecx,DWORD PTR [rsp]
    fdb5:	mov    rdi,r12
    fdb8:	mov    DWORD PTR [rbx],ecx
    fdba:	call   2820 <perror@plt>
    fdbf:	mov    rdi,rbp
    fdc2:	mov    DWORD PTR [rip+0x5ebf4],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    fdcc:	call   2670 <closedir@plt>
    fdd1:	test   eax,eax
    fdd3:	je     e5ee <__ctype_b_loc@plt+0xbd1e>
    fdd9:	mov    ebp,DWORD PTR [rbx]
    fddb:	mov    rdx,QWORD PTR [rip+0x5f056]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    fde2:	mov    rsi,r14
    fde5:	xor    eax,eax
    fde7:	mov    rdi,QWORD PTR [r13+0x0]
    fdeb:	call   70d0 <__ctype_b_loc@plt+0x4800>
    fdf0:	mov    DWORD PTR [rbx],ebp
    fdf2:	mov    rdi,r12
    fdf5:	call   2820 <perror@plt>
    fdfa:	mov    DWORD PTR [rip+0x5ebbc],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    fe04:	jmp    e5ee <__ctype_b_loc@plt+0xbd1e>
    fe09:	call   2520 <__errno_location@plt>
    fe0e:	xor    edx,edx
    fe10:	mov    rsi,r14
    fe13:	mov    edi,0x2
    fe18:	mov    r12d,DWORD PTR [rax]
    fe1b:	mov    rbx,rax
    fe1e:	call   24b0 <sigprocmask@plt>
    fe23:	test   r12d,r12d
    fe26:	je     f835 <__ctype_b_loc@plt+0xcf65>
    fe2c:	mov    eax,DWORD PTR [rip+0x5efe6]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
    fe32:	test   eax,eax
    fe34:	je     1017e <__ctype_b_loc@plt+0xd8ae>
    fe3a:	mov    esi,DWORD PTR [rip+0x5eb80]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    fe40:	test   esi,esi
    fe42:	jne    f835 <__ctype_b_loc@plt+0xcf65>
    fe48:	mov    DWORD PTR [rip+0x5eb6e],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    fe52:	test   eax,eax
    fe54:	jne    f835 <__ctype_b_loc@plt+0xcf65>
    fe5a:	mov    DWORD PTR [rbx],r12d
    fe5d:	mov    rdi,rbp
    fe60:	call   2820 <perror@plt>
    fe65:	jmp    f835 <__ctype_b_loc@plt+0xcf65>
    fe6a:	lea    r14,[rsp+0x80]
    fe72:	lea    rsi,[rip+0x5eac7]        # 6e940 <__ctype_b_loc@plt+0x6c070>
    fe79:	xor    edi,edi
    fe7b:	mov    rdx,r14
    fe7e:	call   24b0 <sigprocmask@plt>
    fe83:	mov    DWORD PTR [rip+0x73f3],0xffffffff        # 17280 <__ctype_b_loc@plt+0x149b0>
    fe8d:	mov    rdi,rbp
    fe90:	call   2540 <unlink@plt>
    fe95:	jmp    f81e <__ctype_b_loc@plt+0xcf4e>
    fe9a:	mov    DWORD PTR [rip+0x1d5a8],0xffffffff        # 2d44c <__ctype_b_loc@plt+0x2ab7c>
    fea4:	lea    rsi,[rsp+0x80]
    feac:	test   r13d,r13d
    feaf:	js     10168 <__ctype_b_loc@plt+0xd898>
    feb5:	mov    edi,r13d
    feb8:	call   2880 <fstat@plt>
    febd:	test   eax,eax
    febf:	setne  al
    fec2:	test   al,al
    fec4:	je     f51c <__ctype_b_loc@plt+0xcc4c>
    feca:	jmp    f60a <__ctype_b_loc@plt+0xcd3a>
    fecf:	mov    ecx,DWORD PTR [rbx]
    fed1:	jmp    fd8c <__ctype_b_loc@plt+0xd4bc>
    fed6:	mov    DWORD PTR [rip+0x1d56c],0xffffffff        # 2d44c <__ctype_b_loc@plt+0x2ab7c>
    fee0:	test   r14d,r14d
    fee3:	je     f587 <__ctype_b_loc@plt+0xccb7>
    fee9:	jmp    fea4 <__ctype_b_loc@plt+0xd5d4>
    feeb:	lea    rsi,[rsp+0x80]
    fef3:	test   r13d,r13d
    fef6:	js     101d4 <__ctype_b_loc@plt+0xd904>
    fefc:	mov    edi,r13d
    feff:	call   2880 <fstat@plt>
    ff04:	test   eax,eax
    ff06:	setne  al
    ff09:	test   al,al
    ff0b:	jne    f60a <__ctype_b_loc@plt+0xcd3a>
    ff11:	cmp    QWORD PTR [rsp+0x28],0x3ffffffe
    ff1a:	je     101ea <__ctype_b_loc@plt+0xd91a>
    ff20:	cmp    QWORD PTR [rsp+0x38],0x3ffffffe
    ff29:	mov    r14d,0x3
    ff2f:	jne    f4d3 <__ctype_b_loc@plt+0xcc03>
    ff35:	mov    rax,QWORD PTR [rsp+0xd8]
    ff3d:	mov    QWORD PTR [rsp+0x30],rax
    ff42:	mov    rax,QWORD PTR [rsp+0xe0]
    ff4a:	mov    QWORD PTR [rsp+0x38],rax
    ff4f:	jmp    f4d3 <__ctype_b_loc@plt+0xcc03>
    ff54:	mov    r15,QWORD PTR [rsp]
    ff58:	mov    rax,QWORD PTR [rip+0x7089]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    ff5f:	lea    rsi,[rip+0x10d5]        # 1103b <__ctype_b_loc@plt+0xe76b>
    ff66:	mov    rdx,QWORD PTR [rip+0x5eecb]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
    ff6d:	mov    rdi,QWORD PTR [rax]
    ff70:	mov    ebx,DWORD PTR [r15]
    ff73:	xor    eax,eax
    ff75:	call   70d0 <__ctype_b_loc@plt+0x4800>
    ff7a:	mov    DWORD PTR [r15],ebx
    ff7d:	mov    rdi,rbp
    ff80:	call   2820 <perror@plt>
    ff85:	mov    DWORD PTR [rip+0x5ea31],0x1        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
    ff8f:	mov    DWORD PTR [rip+0x5e4cf],0xffffffff        # 6e468 <__ctype_b_loc@plt+0x6bb98>
    ff99:	jmp    e5ee <__ctype_b_loc@plt+0xbd1e>
    ff9e:	cmp    rcx,0x3ffffffe
    ffa5:	je     fa46 <__ctype_b_loc@plt+0xd176>
    ffab:	mov    rax,QWORD PTR [rsp+0xc8]
    ffb3:	mov    QWORD PTR [rsp+0x20],rax
    ffb8:	mov    rax,QWORD PTR [rsp+0xd0]
    ffc0:	mov    QWORD PTR [rsp+0x28],rax
    ffc5:	cmp    rcx,0x3fffffff
    ffcc:	je     1021c <__ctype_b_loc@plt+0xd94c>
    ffd2:	mov    rsi,QWORD PTR [rsp+0x28]
    ffd7:	mov    rdi,QWORD PTR [rsp+0x30]
    ffdc:	jmp    f587 <__ctype_b_loc@plt+0xccb7>
    ffe1:	mov    rsi,QWORD PTR [rsp+0x28]
    ffe6:	mov    rdi,QWORD PTR [rsp+0x30]
    ffeb:	mov    rcx,QWORD PTR [rsp+0x38]
    fff0:	jmp    f587 <__ctype_b_loc@plt+0xccb7>
    fff5:	mov    rax,QWORD PTR [rip+0x6fec]        # 16fe8 <__ctype_b_loc@plt+0x14718>
    fffc:	mov    rdx,QWORD PTR [rip+0x5ee35]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
   10003:	lea    rsi,[rip+0x1031]        # 1103b <__ctype_b_loc@plt+0xe76b>
   1000a:	mov    rdi,QWORD PTR [rax]
   1000d:	xor    eax,eax
   1000f:	call   70d0 <__ctype_b_loc@plt+0x4800>
   10014:	mov    r15d,DWORD PTR [rip+0x5e9a5]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
   1001b:	mov    eax,DWORD PTR [rip+0x5edf7]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
   10021:	test   r15d,r15d
   10024:	je     f696 <__ctype_b_loc@plt+0xcdc6>
   1002a:	jmp    f6a0 <__ctype_b_loc@plt+0xcdd0>
   1002f:	mov    rax,QWORD PTR [rip+0x6fb2]        # 16fe8 <__ctype_b_loc@plt+0x14718>
   10036:	mov    rdx,QWORD PTR [rip+0x5edfb]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
   1003d:	lea    rsi,[rip+0xff7]        # 1103b <__ctype_b_loc@plt+0xe76b>
   10044:	mov    rdi,QWORD PTR [rax]
   10047:	xor    eax,eax
   10049:	call   70d0 <__ctype_b_loc@plt+0x4800>
   1004e:	mov    edx,DWORD PTR [rip+0x5e96c]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
   10054:	mov    eax,DWORD PTR [rip+0x5edbe]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
   1005a:	test   edx,edx
   1005c:	je     f62d <__ctype_b_loc@plt+0xcd5d>
   10062:	jmp    f637 <__ctype_b_loc@plt+0xcd67>
   10067:	mov    rax,QWORD PTR [rsp]
   1006b:	test   rax,rax
   1006e:	je     101b8 <__ctype_b_loc@plt+0xd8e8>
   10074:	js     eca4 <__ctype_b_loc@plt+0xc3d4>
   1007a:	mov    r15,rax
   1007d:	jmp    ec7d <__ctype_b_loc@plt+0xc3ad>
   10082:	lea    rsi,[rip+0x5e3f7]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
   10089:	mov    edi,0xffffff9c
   1008e:	call   28b0 <futimesat@plt>
   10093:	mov    r15d,eax
   10096:	jmp    f601 <__ctype_b_loc@plt+0xcd31>
   1009b:	lea    rdx,[rsp+0x20]
   100a0:	xor    ecx,ecx
   100a2:	mov    edi,0xffffff9c
   100a7:	lea    rsi,[rip+0x5e3d2]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
   100ae:	call   24f0 <utimensat@plt>
   100b3:	mov    r15d,eax
   100b6:	test   eax,eax
   100b8:	jg     f4f4 <__ctype_b_loc@plt+0xcc24>
   100be:	jne    1024f <__ctype_b_loc@plt+0xd97f>
   100c4:	mov    DWORD PTR [rip+0x1d37e],0x1        # 2d44c <__ctype_b_loc@plt+0x2ab7c>
   100ce:	jmp    f601 <__ctype_b_loc@plt+0xcd31>
   100d3:	mov    eax,DWORD PTR [rip+0x5ed33]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
   100d9:	test   r13d,r13d
   100dc:	je     10106 <__ctype_b_loc@plt+0xd836>
   100de:	test   eax,eax
   100e0:	je     10116 <__ctype_b_loc@plt+0xd846>
   100e2:	cmp    DWORD PTR [rip+0x5ed2f],0x0        # 6ee18 <__ctype_b_loc@plt+0x6c548>
   100e9:	je     10279 <__ctype_b_loc@plt+0xd9a9>
   100ef:	cmp    DWORD PTR [rip+0x5e8ca],0x0        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
   100f6:	jne    ed85 <__ctype_b_loc@plt+0xc4b5>
   100fc:	mov    DWORD PTR [rip+0x5e8ba],0x2        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
   10106:	mov    r9d,DWORD PTR [rip+0x5ecff]        # 6ee0c <__ctype_b_loc@plt+0x6c53c>
   1010d:	test   r9d,r9d
   10110:	jne    ed85 <__ctype_b_loc@plt+0xc4b5>
   10116:	mov    r10d,DWORD PTR [rip+0x1d333]        # 2d450 <__ctype_b_loc@plt+0x2ab80>
   1011d:	mov    eax,DWORD PTR [rip+0x5ecd5]        # 6edf8 <__ctype_b_loc@plt+0x6c528>
   10123:	test   r10d,r10d
   10126:	je     f07e <__ctype_b_loc@plt+0xc7ae>
   1012c:	mov    ecx,eax
   1012e:	or     ecx,DWORD PTR [rip+0x5ece4]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
   10134:	jne    ed99 <__ctype_b_loc@plt+0xc4c9>
   1013a:	mov    rax,QWORD PTR [rip+0x6ea7]        # 16fe8 <__ctype_b_loc@plt+0x14718>
   10141:	mov    rdx,QWORD PTR [rip+0x5ecf0]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
   10148:	mov    rcx,rbp
   1014b:	lea    r8,[rip+0x5e32e]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
   10152:	lea    rsi,[rip+0x10d2]        # 1122b <__ctype_b_loc@plt+0xe95b>
   10159:	mov    rdi,QWORD PTR [rax]
   1015c:	xor    eax,eax
   1015e:	call   70d0 <__ctype_b_loc@plt+0x4800>
   10163:	jmp    ed85 <__ctype_b_loc@plt+0xc4b5>
   10168:	lea    rdi,[rip+0x5e311]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
   1016f:	call   2730 <stat@plt>
   10174:	test   eax,eax
   10176:	setne  al
   10179:	jmp    fec2 <__ctype_b_loc@plt+0xd5f2>
   1017e:	mov    rax,QWORD PTR [rip+0x6e63]        # 16fe8 <__ctype_b_loc@plt+0x14718>
   10185:	mov    rdx,QWORD PTR [rip+0x5ecac]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
   1018c:	lea    rsi,[rip+0xea8]        # 1103b <__ctype_b_loc@plt+0xe76b>
   10193:	mov    rdi,QWORD PTR [rax]
   10196:	xor    eax,eax
   10198:	call   70d0 <__ctype_b_loc@plt+0x4800>
   1019d:	mov    r13d,DWORD PTR [rip+0x5e81c]        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
   101a4:	mov    eax,DWORD PTR [rip+0x5ec6e]        # 6ee18 <__ctype_b_loc@plt+0x6c548>
   101aa:	test   r13d,r13d
   101ad:	je     fe48 <__ctype_b_loc@plt+0xd578>
   101b3:	jmp    fe52 <__ctype_b_loc@plt+0xd582>
   101b8:	mov    r15d,0x80
   101be:	jmp    ec7d <__ctype_b_loc@plt+0xc3ad>
   101c3:	movzx  eax,BYTE PTR [rsp+0x1f]
   101c8:	lea    r15,[rip+0x5e2b1]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
   101cf:	jmp    fc55 <__ctype_b_loc@plt+0xd385>
   101d4:	lea    rdi,[rip+0x5e2a5]        # 6e480 <__ctype_b_loc@plt+0x6bbb0>
   101db:	call   2730 <stat@plt>
   101e0:	test   eax,eax
   101e2:	setne  al
   101e5:	jmp    ff09 <__ctype_b_loc@plt+0xd639>
   101ea:	mov    rax,QWORD PTR [rsp+0xc8]
   101f2:	mov    r14d,0x3
   101f8:	mov    QWORD PTR [rsp+0x20],rax
   101fd:	mov    rax,QWORD PTR [rsp+0xd0]
   10205:	mov    QWORD PTR [rsp+0x28],rax
   1020a:	jmp    f4d3 <__ctype_b_loc@plt+0xcc03>
   1020f:	test   al,al
   10211:	jne    f76a <__ctype_b_loc@plt+0xce9a>
   10217:	jmp    f7aa <__ctype_b_loc@plt+0xceda>
   1021c:	lea    rsi,[rsp+0x30]
   10221:	xor    edi,edi
   10223:	call   25b0 <clock_gettime@plt>
   10228:	mov    rsi,QWORD PTR [rsp+0x28]
   1022d:	mov    rdi,QWORD PTR [rsp+0x30]
   10232:	mov    rcx,QWORD PTR [rsp+0x38]
   10237:	jmp    f587 <__ctype_b_loc@plt+0xccb7>
   1023c:	mov    DWORD PTR [r15-0x4],0x7a67742e
   10244:	mov    r13d,0x1
   1024a:	jmp    f1c1 <__ctype_b_loc@plt+0xc8f1>
   1024f:	call   2520 <__errno_location@plt>
   10254:	cmp    DWORD PTR [rax],0x26
   10257:	jne    100c4 <__ctype_b_loc@plt+0xd7f4>
   1025d:	jmp    f4ff <__ctype_b_loc@plt+0xcc2f>
   10262:	mov    rdi,r14
   10265:	call   24e0 <free@plt>
   1026a:	mov    BYTE PTR ds:0xffffffffffffffff,0x0
   10272:	mov    ecx,DWORD PTR [rbx]
   10274:	jmp    fd8c <__ctype_b_loc@plt+0xd4bc>
   10279:	mov    rax,QWORD PTR [rip+0x6d68]        # 16fe8 <__ctype_b_loc@plt+0x14718>
   10280:	mov    rdx,QWORD PTR [rip+0x5ebb1]        # 6ee38 <__ctype_b_loc@plt+0x6c568>
   10287:	mov    rcx,r12
   1028a:	lea    rsi,[rip+0x2a4f]        # 12ce0 <__ctype_b_loc@plt+0x10410>
   10291:	mov    rdi,QWORD PTR [rax]
   10294:	xor    eax,eax
   10296:	call   70d0 <__ctype_b_loc@plt+0x4800>
   1029b:	cmp    DWORD PTR [rip+0x5e71e],0x0        # 6e9c0 <__ctype_b_loc@plt+0x6c0f0>
   102a2:	jne    10106 <__ctype_b_loc@plt+0xd836>
   102a8:	jmp    100fc <__ctype_b_loc@plt+0xd82c>
   102ad:	test   al,al
   102af:	je     fa46 <__ctype_b_loc@plt+0xd176>
   102b5:	cmp    QWORD PTR [rsp+0xe0],0x0
   102be:	jne    fa46 <__ctype_b_loc@plt+0xd176>
   102c4:	mov    QWORD PTR [rsp+0x78],0x0
   102cd:	jmp    fa37 <__ctype_b_loc@plt+0xd167>
   102d2:	call   2520 <__errno_location@plt>
   102d7:	mov    DWORD PTR [rax],0x16
   102dd:	jmp    f60a <__ctype_b_loc@plt+0xcd3a>
   102e2:	lea    rdi,[rip+0x29af]        # 12c98 <__ctype_b_loc@plt+0x103c8>
   102e9:	call   72e0 <__ctype_b_loc@plt+0x4a10>
   102ee:	lea    rdi,[rip+0xee3]        # 111d8 <__ctype_b_loc@plt+0xe908>
   102f5:	call   72e0 <__ctype_b_loc@plt+0x4a10>
   102fa:	lea    rdi,[rip+0xee6]        # 111e7 <__ctype_b_loc@plt+0xe917>
   10301:	call   72e0 <__ctype_b_loc@plt+0x4a10>
   10306:	call   7750 <__ctype_b_loc@plt+0x4e80>

Disassembly of section .fini:

000000000001030c <.fini>:
   1030c:	endbr64 
   10310:	sub    rsp,0x8
   10314:	add    rsp,0x8
   10318:	ret    
