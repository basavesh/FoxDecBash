
libwget.so:     file format elf64-x86-64


Disassembly of section .init:

000000000000e000 <_init>:
    e000:	endbr64 
    e004:	sub    rsp,0x8
    e008:	mov    rax,QWORD PTR [rip+0x67fe1]        # 75ff0 <__gmon_start__@Base>
    e00f:	test   rax,rax
    e012:	je     e016 <_init+0x16>
    e014:	call   rax
    e016:	add    rsp,0x8
    e01a:	ret    

Disassembly of section .plt:

000000000000e020 <.plt>:
    e020:	push   QWORD PTR [rip+0x67fe2]        # 76008 <_GLOBAL_OFFSET_TABLE_+0x8>
    e026:	bnd jmp QWORD PTR [rip+0x67fe3]        # 76010 <_GLOBAL_OFFSET_TABLE_+0x10>
    e02d:	nop    DWORD PTR [rax]
    e030:	endbr64 
    e034:	push   0x0
    e039:	bnd jmp e020 <_init+0x20>
    e03f:	nop
    e040:	endbr64 
    e044:	push   0x1
    e049:	bnd jmp e020 <_init+0x20>
    e04f:	nop
    e050:	endbr64 
    e054:	push   0x2
    e059:	bnd jmp e020 <_init+0x20>
    e05f:	nop
    e060:	endbr64 
    e064:	push   0x3
    e069:	bnd jmp e020 <_init+0x20>
    e06f:	nop
    e070:	endbr64 
    e074:	push   0x4
    e079:	bnd jmp e020 <_init+0x20>
    e07f:	nop
    e080:	endbr64 
    e084:	push   0x5
    e089:	bnd jmp e020 <_init+0x20>
    e08f:	nop
    e090:	endbr64 
    e094:	push   0x6
    e099:	bnd jmp e020 <_init+0x20>
    e09f:	nop
    e0a0:	endbr64 
    e0a4:	push   0x7
    e0a9:	bnd jmp e020 <_init+0x20>
    e0af:	nop
    e0b0:	endbr64 
    e0b4:	push   0x8
    e0b9:	bnd jmp e020 <_init+0x20>
    e0bf:	nop
    e0c0:	endbr64 
    e0c4:	push   0x9
    e0c9:	bnd jmp e020 <_init+0x20>
    e0cf:	nop
    e0d0:	endbr64 
    e0d4:	push   0xa
    e0d9:	bnd jmp e020 <_init+0x20>
    e0df:	nop
    e0e0:	endbr64 
    e0e4:	push   0xb
    e0e9:	bnd jmp e020 <_init+0x20>
    e0ef:	nop
    e0f0:	endbr64 
    e0f4:	push   0xc
    e0f9:	bnd jmp e020 <_init+0x20>
    e0ff:	nop
    e100:	endbr64 
    e104:	push   0xd
    e109:	bnd jmp e020 <_init+0x20>
    e10f:	nop
    e110:	endbr64 
    e114:	push   0xe
    e119:	bnd jmp e020 <_init+0x20>
    e11f:	nop
    e120:	endbr64 
    e124:	push   0xf
    e129:	bnd jmp e020 <_init+0x20>
    e12f:	nop
    e130:	endbr64 
    e134:	push   0x10
    e139:	bnd jmp e020 <_init+0x20>
    e13f:	nop
    e140:	endbr64 
    e144:	push   0x11
    e149:	bnd jmp e020 <_init+0x20>
    e14f:	nop
    e150:	endbr64 
    e154:	push   0x12
    e159:	bnd jmp e020 <_init+0x20>
    e15f:	nop
    e160:	endbr64 
    e164:	push   0x13
    e169:	bnd jmp e020 <_init+0x20>
    e16f:	nop
    e170:	endbr64 
    e174:	push   0x14
    e179:	bnd jmp e020 <_init+0x20>
    e17f:	nop
    e180:	endbr64 
    e184:	push   0x15
    e189:	bnd jmp e020 <_init+0x20>
    e18f:	nop
    e190:	endbr64 
    e194:	push   0x16
    e199:	bnd jmp e020 <_init+0x20>
    e19f:	nop
    e1a0:	endbr64 
    e1a4:	push   0x17
    e1a9:	bnd jmp e020 <_init+0x20>
    e1af:	nop
    e1b0:	endbr64 
    e1b4:	push   0x18
    e1b9:	bnd jmp e020 <_init+0x20>
    e1bf:	nop
    e1c0:	endbr64 
    e1c4:	push   0x19
    e1c9:	bnd jmp e020 <_init+0x20>
    e1cf:	nop
    e1d0:	endbr64 
    e1d4:	push   0x1a
    e1d9:	bnd jmp e020 <_init+0x20>
    e1df:	nop
    e1e0:	endbr64 
    e1e4:	push   0x1b
    e1e9:	bnd jmp e020 <_init+0x20>
    e1ef:	nop
    e1f0:	endbr64 
    e1f4:	push   0x1c
    e1f9:	bnd jmp e020 <_init+0x20>
    e1ff:	nop
    e200:	endbr64 
    e204:	push   0x1d
    e209:	bnd jmp e020 <_init+0x20>
    e20f:	nop
    e210:	endbr64 
    e214:	push   0x1e
    e219:	bnd jmp e020 <_init+0x20>
    e21f:	nop
    e220:	endbr64 
    e224:	push   0x1f
    e229:	bnd jmp e020 <_init+0x20>
    e22f:	nop
    e230:	endbr64 
    e234:	push   0x20
    e239:	bnd jmp e020 <_init+0x20>
    e23f:	nop
    e240:	endbr64 
    e244:	push   0x21
    e249:	bnd jmp e020 <_init+0x20>
    e24f:	nop
    e250:	endbr64 
    e254:	push   0x22
    e259:	bnd jmp e020 <_init+0x20>
    e25f:	nop
    e260:	endbr64 
    e264:	push   0x23
    e269:	bnd jmp e020 <_init+0x20>
    e26f:	nop
    e270:	endbr64 
    e274:	push   0x24
    e279:	bnd jmp e020 <_init+0x20>
    e27f:	nop
    e280:	endbr64 
    e284:	push   0x25
    e289:	bnd jmp e020 <_init+0x20>
    e28f:	nop
    e290:	endbr64 
    e294:	push   0x26
    e299:	bnd jmp e020 <_init+0x20>
    e29f:	nop
    e2a0:	endbr64 
    e2a4:	push   0x27
    e2a9:	bnd jmp e020 <_init+0x20>
    e2af:	nop
    e2b0:	endbr64 
    e2b4:	push   0x28
    e2b9:	bnd jmp e020 <_init+0x20>
    e2bf:	nop
    e2c0:	endbr64 
    e2c4:	push   0x29
    e2c9:	bnd jmp e020 <_init+0x20>
    e2cf:	nop
    e2d0:	endbr64 
    e2d4:	push   0x2a
    e2d9:	bnd jmp e020 <_init+0x20>
    e2df:	nop
    e2e0:	endbr64 
    e2e4:	push   0x2b
    e2e9:	bnd jmp e020 <_init+0x20>
    e2ef:	nop
    e2f0:	endbr64 
    e2f4:	push   0x2c
    e2f9:	bnd jmp e020 <_init+0x20>
    e2ff:	nop
    e300:	endbr64 
    e304:	push   0x2d
    e309:	bnd jmp e020 <_init+0x20>
    e30f:	nop
    e310:	endbr64 
    e314:	push   0x2e
    e319:	bnd jmp e020 <_init+0x20>
    e31f:	nop
    e320:	endbr64 
    e324:	push   0x2f
    e329:	bnd jmp e020 <_init+0x20>
    e32f:	nop
    e330:	endbr64 
    e334:	push   0x30
    e339:	bnd jmp e020 <_init+0x20>
    e33f:	nop
    e340:	endbr64 
    e344:	push   0x31
    e349:	bnd jmp e020 <_init+0x20>
    e34f:	nop
    e350:	endbr64 
    e354:	push   0x32
    e359:	bnd jmp e020 <_init+0x20>
    e35f:	nop
    e360:	endbr64 
    e364:	push   0x33
    e369:	bnd jmp e020 <_init+0x20>
    e36f:	nop
    e370:	endbr64 
    e374:	push   0x34
    e379:	bnd jmp e020 <_init+0x20>
    e37f:	nop
    e380:	endbr64 
    e384:	push   0x35
    e389:	bnd jmp e020 <_init+0x20>
    e38f:	nop
    e390:	endbr64 
    e394:	push   0x36
    e399:	bnd jmp e020 <_init+0x20>
    e39f:	nop
    e3a0:	endbr64 
    e3a4:	push   0x37
    e3a9:	bnd jmp e020 <_init+0x20>
    e3af:	nop
    e3b0:	endbr64 
    e3b4:	push   0x38
    e3b9:	bnd jmp e020 <_init+0x20>
    e3bf:	nop
    e3c0:	endbr64 
    e3c4:	push   0x39
    e3c9:	bnd jmp e020 <_init+0x20>
    e3cf:	nop
    e3d0:	endbr64 
    e3d4:	push   0x3a
    e3d9:	bnd jmp e020 <_init+0x20>
    e3df:	nop
    e3e0:	endbr64 
    e3e4:	push   0x3b
    e3e9:	bnd jmp e020 <_init+0x20>
    e3ef:	nop
    e3f0:	endbr64 
    e3f4:	push   0x3c
    e3f9:	bnd jmp e020 <_init+0x20>
    e3ff:	nop
    e400:	endbr64 
    e404:	push   0x3d
    e409:	bnd jmp e020 <_init+0x20>
    e40f:	nop
    e410:	endbr64 
    e414:	push   0x3e
    e419:	bnd jmp e020 <_init+0x20>
    e41f:	nop
    e420:	endbr64 
    e424:	push   0x3f
    e429:	bnd jmp e020 <_init+0x20>
    e42f:	nop
    e430:	endbr64 
    e434:	push   0x40
    e439:	bnd jmp e020 <_init+0x20>
    e43f:	nop
    e440:	endbr64 
    e444:	push   0x41
    e449:	bnd jmp e020 <_init+0x20>
    e44f:	nop
    e450:	endbr64 
    e454:	push   0x42
    e459:	bnd jmp e020 <_init+0x20>
    e45f:	nop
    e460:	endbr64 
    e464:	push   0x43
    e469:	bnd jmp e020 <_init+0x20>
    e46f:	nop
    e470:	endbr64 
    e474:	push   0x44
    e479:	bnd jmp e020 <_init+0x20>
    e47f:	nop
    e480:	endbr64 
    e484:	push   0x45
    e489:	bnd jmp e020 <_init+0x20>
    e48f:	nop
    e490:	endbr64 
    e494:	push   0x46
    e499:	bnd jmp e020 <_init+0x20>
    e49f:	nop
    e4a0:	endbr64 
    e4a4:	push   0x47
    e4a9:	bnd jmp e020 <_init+0x20>
    e4af:	nop
    e4b0:	endbr64 
    e4b4:	push   0x48
    e4b9:	bnd jmp e020 <_init+0x20>
    e4bf:	nop
    e4c0:	endbr64 
    e4c4:	push   0x49
    e4c9:	bnd jmp e020 <_init+0x20>
    e4cf:	nop
    e4d0:	endbr64 
    e4d4:	push   0x4a
    e4d9:	bnd jmp e020 <_init+0x20>
    e4df:	nop
    e4e0:	endbr64 
    e4e4:	push   0x4b
    e4e9:	bnd jmp e020 <_init+0x20>
    e4ef:	nop
    e4f0:	endbr64 
    e4f4:	push   0x4c
    e4f9:	bnd jmp e020 <_init+0x20>
    e4ff:	nop
    e500:	endbr64 
    e504:	push   0x4d
    e509:	bnd jmp e020 <_init+0x20>
    e50f:	nop
    e510:	endbr64 
    e514:	push   0x4e
    e519:	bnd jmp e020 <_init+0x20>
    e51f:	nop
    e520:	endbr64 
    e524:	push   0x4f
    e529:	bnd jmp e020 <_init+0x20>
    e52f:	nop
    e530:	endbr64 
    e534:	push   0x50
    e539:	bnd jmp e020 <_init+0x20>
    e53f:	nop
    e540:	endbr64 
    e544:	push   0x51
    e549:	bnd jmp e020 <_init+0x20>
    e54f:	nop
    e550:	endbr64 
    e554:	push   0x52
    e559:	bnd jmp e020 <_init+0x20>
    e55f:	nop
    e560:	endbr64 
    e564:	push   0x53
    e569:	bnd jmp e020 <_init+0x20>
    e56f:	nop
    e570:	endbr64 
    e574:	push   0x54
    e579:	bnd jmp e020 <_init+0x20>
    e57f:	nop
    e580:	endbr64 
    e584:	push   0x55
    e589:	bnd jmp e020 <_init+0x20>
    e58f:	nop
    e590:	endbr64 
    e594:	push   0x56
    e599:	bnd jmp e020 <_init+0x20>
    e59f:	nop
    e5a0:	endbr64 
    e5a4:	push   0x57
    e5a9:	bnd jmp e020 <_init+0x20>
    e5af:	nop
    e5b0:	endbr64 
    e5b4:	push   0x58
    e5b9:	bnd jmp e020 <_init+0x20>
    e5bf:	nop
    e5c0:	endbr64 
    e5c4:	push   0x59
    e5c9:	bnd jmp e020 <_init+0x20>
    e5cf:	nop
    e5d0:	endbr64 
    e5d4:	push   0x5a
    e5d9:	bnd jmp e020 <_init+0x20>
    e5df:	nop
    e5e0:	endbr64 
    e5e4:	push   0x5b
    e5e9:	bnd jmp e020 <_init+0x20>
    e5ef:	nop
    e5f0:	endbr64 
    e5f4:	push   0x5c
    e5f9:	bnd jmp e020 <_init+0x20>
    e5ff:	nop
    e600:	endbr64 
    e604:	push   0x5d
    e609:	bnd jmp e020 <_init+0x20>
    e60f:	nop
    e610:	endbr64 
    e614:	push   0x5e
    e619:	bnd jmp e020 <_init+0x20>
    e61f:	nop
    e620:	endbr64 
    e624:	push   0x5f
    e629:	bnd jmp e020 <_init+0x20>
    e62f:	nop
    e630:	endbr64 
    e634:	push   0x60
    e639:	bnd jmp e020 <_init+0x20>
    e63f:	nop
    e640:	endbr64 
    e644:	push   0x61
    e649:	bnd jmp e020 <_init+0x20>
    e64f:	nop
    e650:	endbr64 
    e654:	push   0x62
    e659:	bnd jmp e020 <_init+0x20>
    e65f:	nop
    e660:	endbr64 
    e664:	push   0x63
    e669:	bnd jmp e020 <_init+0x20>
    e66f:	nop
    e670:	endbr64 
    e674:	push   0x64
    e679:	bnd jmp e020 <_init+0x20>
    e67f:	nop
    e680:	endbr64 
    e684:	push   0x65
    e689:	bnd jmp e020 <_init+0x20>
    e68f:	nop
    e690:	endbr64 
    e694:	push   0x66
    e699:	bnd jmp e020 <_init+0x20>
    e69f:	nop
    e6a0:	endbr64 
    e6a4:	push   0x67
    e6a9:	bnd jmp e020 <_init+0x20>
    e6af:	nop
    e6b0:	endbr64 
    e6b4:	push   0x68
    e6b9:	bnd jmp e020 <_init+0x20>
    e6bf:	nop
    e6c0:	endbr64 
    e6c4:	push   0x69
    e6c9:	bnd jmp e020 <_init+0x20>
    e6cf:	nop
    e6d0:	endbr64 
    e6d4:	push   0x6a
    e6d9:	bnd jmp e020 <_init+0x20>
    e6df:	nop
    e6e0:	endbr64 
    e6e4:	push   0x6b
    e6e9:	bnd jmp e020 <_init+0x20>
    e6ef:	nop
    e6f0:	endbr64 
    e6f4:	push   0x6c
    e6f9:	bnd jmp e020 <_init+0x20>
    e6ff:	nop
    e700:	endbr64 
    e704:	push   0x6d
    e709:	bnd jmp e020 <_init+0x20>
    e70f:	nop
    e710:	endbr64 
    e714:	push   0x6e
    e719:	bnd jmp e020 <_init+0x20>
    e71f:	nop
    e720:	endbr64 
    e724:	push   0x6f
    e729:	bnd jmp e020 <_init+0x20>
    e72f:	nop
    e730:	endbr64 
    e734:	push   0x70
    e739:	bnd jmp e020 <_init+0x20>
    e73f:	nop
    e740:	endbr64 
    e744:	push   0x71
    e749:	bnd jmp e020 <_init+0x20>
    e74f:	nop
    e750:	endbr64 
    e754:	push   0x72
    e759:	bnd jmp e020 <_init+0x20>
    e75f:	nop
    e760:	endbr64 
    e764:	push   0x73
    e769:	bnd jmp e020 <_init+0x20>
    e76f:	nop
    e770:	endbr64 
    e774:	push   0x74
    e779:	bnd jmp e020 <_init+0x20>
    e77f:	nop
    e780:	endbr64 
    e784:	push   0x75
    e789:	bnd jmp e020 <_init+0x20>
    e78f:	nop
    e790:	endbr64 
    e794:	push   0x76
    e799:	bnd jmp e020 <_init+0x20>
    e79f:	nop
    e7a0:	endbr64 
    e7a4:	push   0x77
    e7a9:	bnd jmp e020 <_init+0x20>
    e7af:	nop
    e7b0:	endbr64 
    e7b4:	push   0x78
    e7b9:	bnd jmp e020 <_init+0x20>
    e7bf:	nop
    e7c0:	endbr64 
    e7c4:	push   0x79
    e7c9:	bnd jmp e020 <_init+0x20>
    e7cf:	nop
    e7d0:	endbr64 
    e7d4:	push   0x7a
    e7d9:	bnd jmp e020 <_init+0x20>
    e7df:	nop
    e7e0:	endbr64 
    e7e4:	push   0x7b
    e7e9:	bnd jmp e020 <_init+0x20>
    e7ef:	nop
    e7f0:	endbr64 
    e7f4:	push   0x7c
    e7f9:	bnd jmp e020 <_init+0x20>
    e7ff:	nop
    e800:	endbr64 
    e804:	push   0x7d
    e809:	bnd jmp e020 <_init+0x20>
    e80f:	nop
    e810:	endbr64 
    e814:	push   0x7e
    e819:	bnd jmp e020 <_init+0x20>
    e81f:	nop
    e820:	endbr64 
    e824:	push   0x7f
    e829:	bnd jmp e020 <_init+0x20>
    e82f:	nop
    e830:	endbr64 
    e834:	push   0x80
    e839:	bnd jmp e020 <_init+0x20>
    e83f:	nop
    e840:	endbr64 
    e844:	push   0x81
    e849:	bnd jmp e020 <_init+0x20>
    e84f:	nop
    e850:	endbr64 
    e854:	push   0x82
    e859:	bnd jmp e020 <_init+0x20>
    e85f:	nop
    e860:	endbr64 
    e864:	push   0x83
    e869:	bnd jmp e020 <_init+0x20>
    e86f:	nop
    e870:	endbr64 
    e874:	push   0x84
    e879:	bnd jmp e020 <_init+0x20>
    e87f:	nop
    e880:	endbr64 
    e884:	push   0x85
    e889:	bnd jmp e020 <_init+0x20>
    e88f:	nop
    e890:	endbr64 
    e894:	push   0x86
    e899:	bnd jmp e020 <_init+0x20>
    e89f:	nop
    e8a0:	endbr64 
    e8a4:	push   0x87
    e8a9:	bnd jmp e020 <_init+0x20>
    e8af:	nop
    e8b0:	endbr64 
    e8b4:	push   0x88
    e8b9:	bnd jmp e020 <_init+0x20>
    e8bf:	nop
    e8c0:	endbr64 
    e8c4:	push   0x89
    e8c9:	bnd jmp e020 <_init+0x20>
    e8cf:	nop
    e8d0:	endbr64 
    e8d4:	push   0x8a
    e8d9:	bnd jmp e020 <_init+0x20>
    e8df:	nop
    e8e0:	endbr64 
    e8e4:	push   0x8b
    e8e9:	bnd jmp e020 <_init+0x20>
    e8ef:	nop
    e8f0:	endbr64 
    e8f4:	push   0x8c
    e8f9:	bnd jmp e020 <_init+0x20>
    e8ff:	nop
    e900:	endbr64 
    e904:	push   0x8d
    e909:	bnd jmp e020 <_init+0x20>
    e90f:	nop
    e910:	endbr64 
    e914:	push   0x8e
    e919:	bnd jmp e020 <_init+0x20>
    e91f:	nop
    e920:	endbr64 
    e924:	push   0x8f
    e929:	bnd jmp e020 <_init+0x20>
    e92f:	nop
    e930:	endbr64 
    e934:	push   0x90
    e939:	bnd jmp e020 <_init+0x20>
    e93f:	nop
    e940:	endbr64 
    e944:	push   0x91
    e949:	bnd jmp e020 <_init+0x20>
    e94f:	nop
    e950:	endbr64 
    e954:	push   0x92
    e959:	bnd jmp e020 <_init+0x20>
    e95f:	nop
    e960:	endbr64 
    e964:	push   0x93
    e969:	bnd jmp e020 <_init+0x20>
    e96f:	nop
    e970:	endbr64 
    e974:	push   0x94
    e979:	bnd jmp e020 <_init+0x20>
    e97f:	nop
    e980:	endbr64 
    e984:	push   0x95
    e989:	bnd jmp e020 <_init+0x20>
    e98f:	nop
    e990:	endbr64 
    e994:	push   0x96
    e999:	bnd jmp e020 <_init+0x20>
    e99f:	nop
    e9a0:	endbr64 
    e9a4:	push   0x97
    e9a9:	bnd jmp e020 <_init+0x20>
    e9af:	nop
    e9b0:	endbr64 
    e9b4:	push   0x98
    e9b9:	bnd jmp e020 <_init+0x20>
    e9bf:	nop
    e9c0:	endbr64 
    e9c4:	push   0x99
    e9c9:	bnd jmp e020 <_init+0x20>
    e9cf:	nop
    e9d0:	endbr64 
    e9d4:	push   0x9a
    e9d9:	bnd jmp e020 <_init+0x20>
    e9df:	nop
    e9e0:	endbr64 
    e9e4:	push   0x9b
    e9e9:	bnd jmp e020 <_init+0x20>
    e9ef:	nop
    e9f0:	endbr64 
    e9f4:	push   0x9c
    e9f9:	bnd jmp e020 <_init+0x20>
    e9ff:	nop
    ea00:	endbr64 
    ea04:	push   0x9d
    ea09:	bnd jmp e020 <_init+0x20>
    ea0f:	nop
    ea10:	endbr64 
    ea14:	push   0x9e
    ea19:	bnd jmp e020 <_init+0x20>
    ea1f:	nop
    ea20:	endbr64 
    ea24:	push   0x9f
    ea29:	bnd jmp e020 <_init+0x20>
    ea2f:	nop
    ea30:	endbr64 
    ea34:	push   0xa0
    ea39:	bnd jmp e020 <_init+0x20>
    ea3f:	nop
    ea40:	endbr64 
    ea44:	push   0xa1
    ea49:	bnd jmp e020 <_init+0x20>
    ea4f:	nop
    ea50:	endbr64 
    ea54:	push   0xa2
    ea59:	bnd jmp e020 <_init+0x20>
    ea5f:	nop
    ea60:	endbr64 
    ea64:	push   0xa3
    ea69:	bnd jmp e020 <_init+0x20>
    ea6f:	nop
    ea70:	endbr64 
    ea74:	push   0xa4
    ea79:	bnd jmp e020 <_init+0x20>
    ea7f:	nop
    ea80:	endbr64 
    ea84:	push   0xa5
    ea89:	bnd jmp e020 <_init+0x20>
    ea8f:	nop
    ea90:	endbr64 
    ea94:	push   0xa6
    ea99:	bnd jmp e020 <_init+0x20>
    ea9f:	nop
    eaa0:	endbr64 
    eaa4:	push   0xa7
    eaa9:	bnd jmp e020 <_init+0x20>
    eaaf:	nop
    eab0:	endbr64 
    eab4:	push   0xa8
    eab9:	bnd jmp e020 <_init+0x20>
    eabf:	nop
    eac0:	endbr64 
    eac4:	push   0xa9
    eac9:	bnd jmp e020 <_init+0x20>
    eacf:	nop
    ead0:	endbr64 
    ead4:	push   0xaa
    ead9:	bnd jmp e020 <_init+0x20>
    eadf:	nop
    eae0:	endbr64 
    eae4:	push   0xab
    eae9:	bnd jmp e020 <_init+0x20>
    eaef:	nop
    eaf0:	endbr64 
    eaf4:	push   0xac
    eaf9:	bnd jmp e020 <_init+0x20>
    eaff:	nop
    eb00:	endbr64 
    eb04:	push   0xad
    eb09:	bnd jmp e020 <_init+0x20>
    eb0f:	nop
    eb10:	endbr64 
    eb14:	push   0xae
    eb19:	bnd jmp e020 <_init+0x20>
    eb1f:	nop
    eb20:	endbr64 
    eb24:	push   0xaf
    eb29:	bnd jmp e020 <_init+0x20>
    eb2f:	nop
    eb30:	endbr64 
    eb34:	push   0xb0
    eb39:	bnd jmp e020 <_init+0x20>
    eb3f:	nop
    eb40:	endbr64 
    eb44:	push   0xb1
    eb49:	bnd jmp e020 <_init+0x20>
    eb4f:	nop
    eb50:	endbr64 
    eb54:	push   0xb2
    eb59:	bnd jmp e020 <_init+0x20>
    eb5f:	nop
    eb60:	endbr64 
    eb64:	push   0xb3
    eb69:	bnd jmp e020 <_init+0x20>
    eb6f:	nop
    eb70:	endbr64 
    eb74:	push   0xb4
    eb79:	bnd jmp e020 <_init+0x20>
    eb7f:	nop
    eb80:	endbr64 
    eb84:	push   0xb5
    eb89:	bnd jmp e020 <_init+0x20>
    eb8f:	nop
    eb90:	endbr64 
    eb94:	push   0xb6
    eb99:	bnd jmp e020 <_init+0x20>
    eb9f:	nop
    eba0:	endbr64 
    eba4:	push   0xb7
    eba9:	bnd jmp e020 <_init+0x20>
    ebaf:	nop
    ebb0:	endbr64 
    ebb4:	push   0xb8
    ebb9:	bnd jmp e020 <_init+0x20>
    ebbf:	nop
    ebc0:	endbr64 
    ebc4:	push   0xb9
    ebc9:	bnd jmp e020 <_init+0x20>
    ebcf:	nop
    ebd0:	endbr64 
    ebd4:	push   0xba
    ebd9:	bnd jmp e020 <_init+0x20>
    ebdf:	nop
    ebe0:	endbr64 
    ebe4:	push   0xbb
    ebe9:	bnd jmp e020 <_init+0x20>
    ebef:	nop
    ebf0:	endbr64 
    ebf4:	push   0xbc
    ebf9:	bnd jmp e020 <_init+0x20>
    ebff:	nop
    ec00:	endbr64 
    ec04:	push   0xbd
    ec09:	bnd jmp e020 <_init+0x20>
    ec0f:	nop
    ec10:	endbr64 
    ec14:	push   0xbe
    ec19:	bnd jmp e020 <_init+0x20>
    ec1f:	nop
    ec20:	endbr64 
    ec24:	push   0xbf
    ec29:	bnd jmp e020 <_init+0x20>
    ec2f:	nop
    ec30:	endbr64 
    ec34:	push   0xc0
    ec39:	bnd jmp e020 <_init+0x20>
    ec3f:	nop
    ec40:	endbr64 
    ec44:	push   0xc1
    ec49:	bnd jmp e020 <_init+0x20>
    ec4f:	nop
    ec50:	endbr64 
    ec54:	push   0xc2
    ec59:	bnd jmp e020 <_init+0x20>
    ec5f:	nop
    ec60:	endbr64 
    ec64:	push   0xc3
    ec69:	bnd jmp e020 <_init+0x20>
    ec6f:	nop
    ec70:	endbr64 
    ec74:	push   0xc4
    ec79:	bnd jmp e020 <_init+0x20>
    ec7f:	nop
    ec80:	endbr64 
    ec84:	push   0xc5
    ec89:	bnd jmp e020 <_init+0x20>
    ec8f:	nop
    ec90:	endbr64 
    ec94:	push   0xc6
    ec99:	bnd jmp e020 <_init+0x20>
    ec9f:	nop
    eca0:	endbr64 
    eca4:	push   0xc7
    eca9:	bnd jmp e020 <_init+0x20>
    ecaf:	nop
    ecb0:	endbr64 
    ecb4:	push   0xc8
    ecb9:	bnd jmp e020 <_init+0x20>
    ecbf:	nop
    ecc0:	endbr64 
    ecc4:	push   0xc9
    ecc9:	bnd jmp e020 <_init+0x20>
    eccf:	nop
    ecd0:	endbr64 
    ecd4:	push   0xca
    ecd9:	bnd jmp e020 <_init+0x20>
    ecdf:	nop
    ece0:	endbr64 
    ece4:	push   0xcb
    ece9:	bnd jmp e020 <_init+0x20>
    ecef:	nop
    ecf0:	endbr64 
    ecf4:	push   0xcc
    ecf9:	bnd jmp e020 <_init+0x20>
    ecff:	nop
    ed00:	endbr64 
    ed04:	push   0xcd
    ed09:	bnd jmp e020 <_init+0x20>
    ed0f:	nop
    ed10:	endbr64 
    ed14:	push   0xce
    ed19:	bnd jmp e020 <_init+0x20>
    ed1f:	nop
    ed20:	endbr64 
    ed24:	push   0xcf
    ed29:	bnd jmp e020 <_init+0x20>
    ed2f:	nop
    ed30:	endbr64 
    ed34:	push   0xd0
    ed39:	bnd jmp e020 <_init+0x20>
    ed3f:	nop
    ed40:	endbr64 
    ed44:	push   0xd1
    ed49:	bnd jmp e020 <_init+0x20>
    ed4f:	nop
    ed50:	endbr64 
    ed54:	push   0xd2
    ed59:	bnd jmp e020 <_init+0x20>
    ed5f:	nop
    ed60:	endbr64 
    ed64:	push   0xd3
    ed69:	bnd jmp e020 <_init+0x20>
    ed6f:	nop
    ed70:	endbr64 
    ed74:	push   0xd4
    ed79:	bnd jmp e020 <_init+0x20>
    ed7f:	nop
    ed80:	endbr64 
    ed84:	push   0xd5
    ed89:	bnd jmp e020 <_init+0x20>
    ed8f:	nop
    ed90:	endbr64 
    ed94:	push   0xd6
    ed99:	bnd jmp e020 <_init+0x20>
    ed9f:	nop
    eda0:	endbr64 
    eda4:	push   0xd7
    eda9:	bnd jmp e020 <_init+0x20>
    edaf:	nop
    edb0:	endbr64 
    edb4:	push   0xd8
    edb9:	bnd jmp e020 <_init+0x20>
    edbf:	nop
    edc0:	endbr64 
    edc4:	push   0xd9
    edc9:	bnd jmp e020 <_init+0x20>
    edcf:	nop
    edd0:	endbr64 
    edd4:	push   0xda
    edd9:	bnd jmp e020 <_init+0x20>
    eddf:	nop
    ede0:	endbr64 
    ede4:	push   0xdb
    ede9:	bnd jmp e020 <_init+0x20>
    edef:	nop
    edf0:	endbr64 
    edf4:	push   0xdc
    edf9:	bnd jmp e020 <_init+0x20>
    edff:	nop
    ee00:	endbr64 
    ee04:	push   0xdd
    ee09:	bnd jmp e020 <_init+0x20>
    ee0f:	nop
    ee10:	endbr64 
    ee14:	push   0xde
    ee19:	bnd jmp e020 <_init+0x20>
    ee1f:	nop
    ee20:	endbr64 
    ee24:	push   0xdf
    ee29:	bnd jmp e020 <_init+0x20>
    ee2f:	nop
    ee30:	endbr64 
    ee34:	push   0xe0
    ee39:	bnd jmp e020 <_init+0x20>
    ee3f:	nop
    ee40:	endbr64 
    ee44:	push   0xe1
    ee49:	bnd jmp e020 <_init+0x20>
    ee4f:	nop
    ee50:	endbr64 
    ee54:	push   0xe2
    ee59:	bnd jmp e020 <_init+0x20>
    ee5f:	nop
    ee60:	endbr64 
    ee64:	push   0xe3
    ee69:	bnd jmp e020 <_init+0x20>
    ee6f:	nop
    ee70:	endbr64 
    ee74:	push   0xe4
    ee79:	bnd jmp e020 <_init+0x20>
    ee7f:	nop
    ee80:	endbr64 
    ee84:	push   0xe5
    ee89:	bnd jmp e020 <_init+0x20>
    ee8f:	nop
    ee90:	endbr64 
    ee94:	push   0xe6
    ee99:	bnd jmp e020 <_init+0x20>
    ee9f:	nop
    eea0:	endbr64 
    eea4:	push   0xe7
    eea9:	bnd jmp e020 <_init+0x20>
    eeaf:	nop
    eeb0:	endbr64 
    eeb4:	push   0xe8
    eeb9:	bnd jmp e020 <_init+0x20>
    eebf:	nop
    eec0:	endbr64 
    eec4:	push   0xe9
    eec9:	bnd jmp e020 <_init+0x20>
    eecf:	nop
    eed0:	endbr64 
    eed4:	push   0xea
    eed9:	bnd jmp e020 <_init+0x20>
    eedf:	nop
    eee0:	endbr64 
    eee4:	push   0xeb
    eee9:	bnd jmp e020 <_init+0x20>
    eeef:	nop
    eef0:	endbr64 
    eef4:	push   0xec
    eef9:	bnd jmp e020 <_init+0x20>
    eeff:	nop
    ef00:	endbr64 
    ef04:	push   0xed
    ef09:	bnd jmp e020 <_init+0x20>
    ef0f:	nop
    ef10:	endbr64 
    ef14:	push   0xee
    ef19:	bnd jmp e020 <_init+0x20>
    ef1f:	nop
    ef20:	endbr64 
    ef24:	push   0xef
    ef29:	bnd jmp e020 <_init+0x20>
    ef2f:	nop
    ef30:	endbr64 
    ef34:	push   0xf0
    ef39:	bnd jmp e020 <_init+0x20>
    ef3f:	nop
    ef40:	endbr64 
    ef44:	push   0xf1
    ef49:	bnd jmp e020 <_init+0x20>
    ef4f:	nop
    ef50:	endbr64 
    ef54:	push   0xf2
    ef59:	bnd jmp e020 <_init+0x20>
    ef5f:	nop
    ef60:	endbr64 
    ef64:	push   0xf3
    ef69:	bnd jmp e020 <_init+0x20>
    ef6f:	nop
    ef70:	endbr64 
    ef74:	push   0xf4
    ef79:	bnd jmp e020 <_init+0x20>
    ef7f:	nop
    ef80:	endbr64 
    ef84:	push   0xf5
    ef89:	bnd jmp e020 <_init+0x20>
    ef8f:	nop
    ef90:	endbr64 
    ef94:	push   0xf6
    ef99:	bnd jmp e020 <_init+0x20>
    ef9f:	nop
    efa0:	endbr64 
    efa4:	push   0xf7
    efa9:	bnd jmp e020 <_init+0x20>
    efaf:	nop
    efb0:	endbr64 
    efb4:	push   0xf8
    efb9:	bnd jmp e020 <_init+0x20>
    efbf:	nop
    efc0:	endbr64 
    efc4:	push   0xf9
    efc9:	bnd jmp e020 <_init+0x20>
    efcf:	nop
    efd0:	endbr64 
    efd4:	push   0xfa
    efd9:	bnd jmp e020 <_init+0x20>
    efdf:	nop
    efe0:	endbr64 
    efe4:	push   0xfb
    efe9:	bnd jmp e020 <_init+0x20>
    efef:	nop
    eff0:	endbr64 
    eff4:	push   0xfc
    eff9:	bnd jmp e020 <_init+0x20>
    efff:	nop
    f000:	endbr64 
    f004:	push   0xfd
    f009:	bnd jmp e020 <_init+0x20>
    f00f:	nop
    f010:	endbr64 
    f014:	push   0xfe
    f019:	bnd jmp e020 <_init+0x20>
    f01f:	nop
    f020:	endbr64 
    f024:	push   0xff
    f029:	bnd jmp e020 <_init+0x20>
    f02f:	nop
    f030:	endbr64 
    f034:	push   0x100
    f039:	bnd jmp e020 <_init+0x20>
    f03f:	nop
    f040:	endbr64 
    f044:	push   0x101
    f049:	bnd jmp e020 <_init+0x20>
    f04f:	nop
    f050:	endbr64 
    f054:	push   0x102
    f059:	bnd jmp e020 <_init+0x20>
    f05f:	nop
    f060:	endbr64 
    f064:	push   0x103
    f069:	bnd jmp e020 <_init+0x20>
    f06f:	nop
    f070:	endbr64 
    f074:	push   0x104
    f079:	bnd jmp e020 <_init+0x20>
    f07f:	nop
    f080:	endbr64 
    f084:	push   0x105
    f089:	bnd jmp e020 <_init+0x20>
    f08f:	nop
    f090:	endbr64 
    f094:	push   0x106
    f099:	bnd jmp e020 <_init+0x20>
    f09f:	nop
    f0a0:	endbr64 
    f0a4:	push   0x107
    f0a9:	bnd jmp e020 <_init+0x20>
    f0af:	nop
    f0b0:	endbr64 
    f0b4:	push   0x108
    f0b9:	bnd jmp e020 <_init+0x20>
    f0bf:	nop
    f0c0:	endbr64 
    f0c4:	push   0x109
    f0c9:	bnd jmp e020 <_init+0x20>
    f0cf:	nop
    f0d0:	endbr64 
    f0d4:	push   0x10a
    f0d9:	bnd jmp e020 <_init+0x20>
    f0df:	nop
    f0e0:	endbr64 
    f0e4:	push   0x10b
    f0e9:	bnd jmp e020 <_init+0x20>
    f0ef:	nop
    f0f0:	endbr64 
    f0f4:	push   0x10c
    f0f9:	bnd jmp e020 <_init+0x20>
    f0ff:	nop
    f100:	endbr64 
    f104:	push   0x10d
    f109:	bnd jmp e020 <_init+0x20>
    f10f:	nop
    f110:	endbr64 
    f114:	push   0x10e
    f119:	bnd jmp e020 <_init+0x20>
    f11f:	nop
    f120:	endbr64 
    f124:	push   0x10f
    f129:	bnd jmp e020 <_init+0x20>
    f12f:	nop
    f130:	endbr64 
    f134:	push   0x110
    f139:	bnd jmp e020 <_init+0x20>
    f13f:	nop
    f140:	endbr64 
    f144:	push   0x111
    f149:	bnd jmp e020 <_init+0x20>
    f14f:	nop
    f150:	endbr64 
    f154:	push   0x112
    f159:	bnd jmp e020 <_init+0x20>
    f15f:	nop
    f160:	endbr64 
    f164:	push   0x113
    f169:	bnd jmp e020 <_init+0x20>
    f16f:	nop
    f170:	endbr64 
    f174:	push   0x114
    f179:	bnd jmp e020 <_init+0x20>
    f17f:	nop
    f180:	endbr64 
    f184:	push   0x115
    f189:	bnd jmp e020 <_init+0x20>
    f18f:	nop
    f190:	endbr64 
    f194:	push   0x116
    f199:	bnd jmp e020 <_init+0x20>
    f19f:	nop
    f1a0:	endbr64 
    f1a4:	push   0x117
    f1a9:	bnd jmp e020 <_init+0x20>
    f1af:	nop
    f1b0:	endbr64 
    f1b4:	push   0x118
    f1b9:	bnd jmp e020 <_init+0x20>
    f1bf:	nop
    f1c0:	endbr64 
    f1c4:	push   0x119
    f1c9:	bnd jmp e020 <_init+0x20>
    f1cf:	nop
    f1d0:	endbr64 
    f1d4:	push   0x11a
    f1d9:	bnd jmp e020 <_init+0x20>
    f1df:	nop
    f1e0:	endbr64 
    f1e4:	push   0x11b
    f1e9:	bnd jmp e020 <_init+0x20>
    f1ef:	nop
    f1f0:	endbr64 
    f1f4:	push   0x11c
    f1f9:	bnd jmp e020 <_init+0x20>
    f1ff:	nop
    f200:	endbr64 
    f204:	push   0x11d
    f209:	bnd jmp e020 <_init+0x20>
    f20f:	nop
    f210:	endbr64 
    f214:	push   0x11e
    f219:	bnd jmp e020 <_init+0x20>
    f21f:	nop
    f220:	endbr64 
    f224:	push   0x11f
    f229:	bnd jmp e020 <_init+0x20>
    f22f:	nop
    f230:	endbr64 
    f234:	push   0x120
    f239:	bnd jmp e020 <_init+0x20>
    f23f:	nop
    f240:	endbr64 
    f244:	push   0x121
    f249:	bnd jmp e020 <_init+0x20>
    f24f:	nop
    f250:	endbr64 
    f254:	push   0x122
    f259:	bnd jmp e020 <_init+0x20>
    f25f:	nop
    f260:	endbr64 
    f264:	push   0x123
    f269:	bnd jmp e020 <_init+0x20>
    f26f:	nop
    f270:	endbr64 
    f274:	push   0x124
    f279:	bnd jmp e020 <_init+0x20>
    f27f:	nop
    f280:	endbr64 
    f284:	push   0x125
    f289:	bnd jmp e020 <_init+0x20>
    f28f:	nop
    f290:	endbr64 
    f294:	push   0x126
    f299:	bnd jmp e020 <_init+0x20>
    f29f:	nop
    f2a0:	endbr64 
    f2a4:	push   0x127
    f2a9:	bnd jmp e020 <_init+0x20>
    f2af:	nop
    f2b0:	endbr64 
    f2b4:	push   0x128
    f2b9:	bnd jmp e020 <_init+0x20>
    f2bf:	nop
    f2c0:	endbr64 
    f2c4:	push   0x129
    f2c9:	bnd jmp e020 <_init+0x20>
    f2cf:	nop
    f2d0:	endbr64 
    f2d4:	push   0x12a
    f2d9:	bnd jmp e020 <_init+0x20>
    f2df:	nop
    f2e0:	endbr64 
    f2e4:	push   0x12b
    f2e9:	bnd jmp e020 <_init+0x20>
    f2ef:	nop
    f2f0:	endbr64 
    f2f4:	push   0x12c
    f2f9:	bnd jmp e020 <_init+0x20>
    f2ff:	nop
    f300:	endbr64 
    f304:	push   0x12d
    f309:	bnd jmp e020 <_init+0x20>
    f30f:	nop
    f310:	endbr64 
    f314:	push   0x12e
    f319:	bnd jmp e020 <_init+0x20>
    f31f:	nop
    f320:	endbr64 
    f324:	push   0x12f
    f329:	bnd jmp e020 <_init+0x20>
    f32f:	nop
    f330:	endbr64 
    f334:	push   0x130
    f339:	bnd jmp e020 <_init+0x20>
    f33f:	nop
    f340:	endbr64 
    f344:	push   0x131
    f349:	bnd jmp e020 <_init+0x20>
    f34f:	nop
    f350:	endbr64 
    f354:	push   0x132
    f359:	bnd jmp e020 <_init+0x20>
    f35f:	nop
    f360:	endbr64 
    f364:	push   0x133
    f369:	bnd jmp e020 <_init+0x20>
    f36f:	nop
    f370:	endbr64 
    f374:	push   0x134
    f379:	bnd jmp e020 <_init+0x20>
    f37f:	nop
    f380:	endbr64 
    f384:	push   0x135
    f389:	bnd jmp e020 <_init+0x20>
    f38f:	nop
    f390:	endbr64 
    f394:	push   0x136
    f399:	bnd jmp e020 <_init+0x20>
    f39f:	nop
    f3a0:	endbr64 
    f3a4:	push   0x137
    f3a9:	bnd jmp e020 <_init+0x20>
    f3af:	nop
    f3b0:	endbr64 
    f3b4:	push   0x138
    f3b9:	bnd jmp e020 <_init+0x20>
    f3bf:	nop
    f3c0:	endbr64 
    f3c4:	push   0x139
    f3c9:	bnd jmp e020 <_init+0x20>
    f3cf:	nop
    f3d0:	endbr64 
    f3d4:	push   0x13a
    f3d9:	bnd jmp e020 <_init+0x20>
    f3df:	nop
    f3e0:	endbr64 
    f3e4:	push   0x13b
    f3e9:	bnd jmp e020 <_init+0x20>
    f3ef:	nop
    f3f0:	endbr64 
    f3f4:	push   0x13c
    f3f9:	bnd jmp e020 <_init+0x20>
    f3ff:	nop
    f400:	endbr64 
    f404:	push   0x13d
    f409:	bnd jmp e020 <_init+0x20>
    f40f:	nop
    f410:	endbr64 
    f414:	push   0x13e
    f419:	bnd jmp e020 <_init+0x20>
    f41f:	nop
    f420:	endbr64 
    f424:	push   0x13f
    f429:	bnd jmp e020 <_init+0x20>
    f42f:	nop
    f430:	endbr64 
    f434:	push   0x140
    f439:	bnd jmp e020 <_init+0x20>
    f43f:	nop
    f440:	endbr64 
    f444:	push   0x141
    f449:	bnd jmp e020 <_init+0x20>
    f44f:	nop
    f450:	endbr64 
    f454:	push   0x142
    f459:	bnd jmp e020 <_init+0x20>
    f45f:	nop
    f460:	endbr64 
    f464:	push   0x143
    f469:	bnd jmp e020 <_init+0x20>
    f46f:	nop
    f470:	endbr64 
    f474:	push   0x144
    f479:	bnd jmp e020 <_init+0x20>
    f47f:	nop
    f480:	endbr64 
    f484:	push   0x145
    f489:	bnd jmp e020 <_init+0x20>
    f48f:	nop
    f490:	endbr64 
    f494:	push   0x146
    f499:	bnd jmp e020 <_init+0x20>
    f49f:	nop
    f4a0:	endbr64 
    f4a4:	push   0x147
    f4a9:	bnd jmp e020 <_init+0x20>
    f4af:	nop
    f4b0:	endbr64 
    f4b4:	push   0x148
    f4b9:	bnd jmp e020 <_init+0x20>
    f4bf:	nop
    f4c0:	endbr64 
    f4c4:	push   0x149
    f4c9:	bnd jmp e020 <_init+0x20>
    f4cf:	nop
    f4d0:	endbr64 
    f4d4:	push   0x14a
    f4d9:	bnd jmp e020 <_init+0x20>
    f4df:	nop
    f4e0:	endbr64 
    f4e4:	push   0x14b
    f4e9:	bnd jmp e020 <_init+0x20>
    f4ef:	nop
    f4f0:	endbr64 
    f4f4:	push   0x14c
    f4f9:	bnd jmp e020 <_init+0x20>
    f4ff:	nop
    f500:	endbr64 
    f504:	push   0x14d
    f509:	bnd jmp e020 <_init+0x20>
    f50f:	nop
    f510:	endbr64 
    f514:	push   0x14e
    f519:	bnd jmp e020 <_init+0x20>
    f51f:	nop
    f520:	endbr64 
    f524:	push   0x14f
    f529:	bnd jmp e020 <_init+0x20>
    f52f:	nop
    f530:	endbr64 
    f534:	push   0x150
    f539:	bnd jmp e020 <_init+0x20>
    f53f:	nop
    f540:	endbr64 
    f544:	push   0x151
    f549:	bnd jmp e020 <_init+0x20>
    f54f:	nop
    f550:	endbr64 
    f554:	push   0x152
    f559:	bnd jmp e020 <_init+0x20>
    f55f:	nop
    f560:	endbr64 
    f564:	push   0x153
    f569:	bnd jmp e020 <_init+0x20>
    f56f:	nop
    f570:	endbr64 
    f574:	push   0x154
    f579:	bnd jmp e020 <_init+0x20>
    f57f:	nop
    f580:	endbr64 
    f584:	push   0x155
    f589:	bnd jmp e020 <_init+0x20>
    f58f:	nop
    f590:	endbr64 
    f594:	push   0x156
    f599:	bnd jmp e020 <_init+0x20>
    f59f:	nop
    f5a0:	endbr64 
    f5a4:	push   0x157
    f5a9:	bnd jmp e020 <_init+0x20>
    f5af:	nop
    f5b0:	endbr64 
    f5b4:	push   0x158
    f5b9:	bnd jmp e020 <_init+0x20>
    f5bf:	nop
    f5c0:	endbr64 
    f5c4:	push   0x159
    f5c9:	bnd jmp e020 <_init+0x20>
    f5cf:	nop
    f5d0:	endbr64 
    f5d4:	push   0x15a
    f5d9:	bnd jmp e020 <_init+0x20>
    f5df:	nop
    f5e0:	endbr64 
    f5e4:	push   0x15b
    f5e9:	bnd jmp e020 <_init+0x20>
    f5ef:	nop
    f5f0:	endbr64 
    f5f4:	push   0x15c
    f5f9:	bnd jmp e020 <_init+0x20>
    f5ff:	nop
    f600:	endbr64 
    f604:	push   0x15d
    f609:	bnd jmp e020 <_init+0x20>
    f60f:	nop
    f610:	endbr64 
    f614:	push   0x15e
    f619:	bnd jmp e020 <_init+0x20>
    f61f:	nop
    f620:	endbr64 
    f624:	push   0x15f
    f629:	bnd jmp e020 <_init+0x20>
    f62f:	nop
    f630:	endbr64 
    f634:	push   0x160
    f639:	bnd jmp e020 <_init+0x20>
    f63f:	nop
    f640:	endbr64 
    f644:	push   0x161
    f649:	bnd jmp e020 <_init+0x20>
    f64f:	nop
    f650:	endbr64 
    f654:	push   0x162
    f659:	bnd jmp e020 <_init+0x20>
    f65f:	nop
    f660:	endbr64 
    f664:	push   0x163
    f669:	bnd jmp e020 <_init+0x20>
    f66f:	nop
    f670:	endbr64 
    f674:	push   0x164
    f679:	bnd jmp e020 <_init+0x20>
    f67f:	nop
    f680:	endbr64 
    f684:	push   0x165
    f689:	bnd jmp e020 <_init+0x20>
    f68f:	nop
    f690:	endbr64 
    f694:	push   0x166
    f699:	bnd jmp e020 <_init+0x20>
    f69f:	nop
    f6a0:	endbr64 
    f6a4:	push   0x167
    f6a9:	bnd jmp e020 <_init+0x20>
    f6af:	nop
    f6b0:	endbr64 
    f6b4:	push   0x168
    f6b9:	bnd jmp e020 <_init+0x20>
    f6bf:	nop
    f6c0:	endbr64 
    f6c4:	push   0x169
    f6c9:	bnd jmp e020 <_init+0x20>
    f6cf:	nop
    f6d0:	endbr64 
    f6d4:	push   0x16a
    f6d9:	bnd jmp e020 <_init+0x20>
    f6df:	nop
    f6e0:	endbr64 
    f6e4:	push   0x16b
    f6e9:	bnd jmp e020 <_init+0x20>
    f6ef:	nop
    f6f0:	endbr64 
    f6f4:	push   0x16c
    f6f9:	bnd jmp e020 <_init+0x20>
    f6ff:	nop
    f700:	endbr64 
    f704:	push   0x16d
    f709:	bnd jmp e020 <_init+0x20>
    f70f:	nop
    f710:	endbr64 
    f714:	push   0x16e
    f719:	bnd jmp e020 <_init+0x20>
    f71f:	nop
    f720:	endbr64 
    f724:	push   0x16f
    f729:	bnd jmp e020 <_init+0x20>
    f72f:	nop
    f730:	endbr64 
    f734:	push   0x170
    f739:	bnd jmp e020 <_init+0x20>
    f73f:	nop
    f740:	endbr64 
    f744:	push   0x171
    f749:	bnd jmp e020 <_init+0x20>
    f74f:	nop
    f750:	endbr64 
    f754:	push   0x172
    f759:	bnd jmp e020 <_init+0x20>
    f75f:	nop
    f760:	endbr64 
    f764:	push   0x173
    f769:	bnd jmp e020 <_init+0x20>
    f76f:	nop
    f770:	endbr64 
    f774:	push   0x174
    f779:	bnd jmp e020 <_init+0x20>
    f77f:	nop
    f780:	endbr64 
    f784:	push   0x175
    f789:	bnd jmp e020 <_init+0x20>
    f78f:	nop
    f790:	endbr64 
    f794:	push   0x176
    f799:	bnd jmp e020 <_init+0x20>
    f79f:	nop
    f7a0:	endbr64 
    f7a4:	push   0x177
    f7a9:	bnd jmp e020 <_init+0x20>
    f7af:	nop
    f7b0:	endbr64 
    f7b4:	push   0x178
    f7b9:	bnd jmp e020 <_init+0x20>
    f7bf:	nop
    f7c0:	endbr64 
    f7c4:	push   0x179
    f7c9:	bnd jmp e020 <_init+0x20>
    f7cf:	nop
    f7d0:	endbr64 
    f7d4:	push   0x17a
    f7d9:	bnd jmp e020 <_init+0x20>
    f7df:	nop
    f7e0:	endbr64 
    f7e4:	push   0x17b
    f7e9:	bnd jmp e020 <_init+0x20>
    f7ef:	nop
    f7f0:	endbr64 
    f7f4:	push   0x17c
    f7f9:	bnd jmp e020 <_init+0x20>
    f7ff:	nop
    f800:	endbr64 
    f804:	push   0x17d
    f809:	bnd jmp e020 <_init+0x20>
    f80f:	nop
    f810:	endbr64 
    f814:	push   0x17e
    f819:	bnd jmp e020 <_init+0x20>
    f81f:	nop
    f820:	endbr64 
    f824:	push   0x17f
    f829:	bnd jmp e020 <_init+0x20>
    f82f:	nop
    f830:	endbr64 
    f834:	push   0x180
    f839:	bnd jmp e020 <_init+0x20>
    f83f:	nop
    f840:	endbr64 
    f844:	push   0x181
    f849:	bnd jmp e020 <_init+0x20>
    f84f:	nop
    f850:	endbr64 
    f854:	push   0x182
    f859:	bnd jmp e020 <_init+0x20>
    f85f:	nop
    f860:	endbr64 
    f864:	push   0x183
    f869:	bnd jmp e020 <_init+0x20>
    f86f:	nop
    f870:	endbr64 
    f874:	push   0x184
    f879:	bnd jmp e020 <_init+0x20>
    f87f:	nop
    f880:	endbr64 
    f884:	push   0x185
    f889:	bnd jmp e020 <_init+0x20>
    f88f:	nop
    f890:	endbr64 
    f894:	push   0x186
    f899:	bnd jmp e020 <_init+0x20>
    f89f:	nop
    f8a0:	endbr64 
    f8a4:	push   0x187
    f8a9:	bnd jmp e020 <_init+0x20>
    f8af:	nop
    f8b0:	endbr64 
    f8b4:	push   0x188
    f8b9:	bnd jmp e020 <_init+0x20>
    f8bf:	nop
    f8c0:	endbr64 
    f8c4:	push   0x189
    f8c9:	bnd jmp e020 <_init+0x20>
    f8cf:	nop
    f8d0:	endbr64 
    f8d4:	push   0x18a
    f8d9:	bnd jmp e020 <_init+0x20>
    f8df:	nop
    f8e0:	endbr64 
    f8e4:	push   0x18b
    f8e9:	bnd jmp e020 <_init+0x20>
    f8ef:	nop
    f8f0:	endbr64 
    f8f4:	push   0x18c
    f8f9:	bnd jmp e020 <_init+0x20>
    f8ff:	nop
    f900:	endbr64 
    f904:	push   0x18d
    f909:	bnd jmp e020 <_init+0x20>
    f90f:	nop
    f910:	endbr64 
    f914:	push   0x18e
    f919:	bnd jmp e020 <_init+0x20>
    f91f:	nop
    f920:	endbr64 
    f924:	push   0x18f
    f929:	bnd jmp e020 <_init+0x20>
    f92f:	nop
    f930:	endbr64 
    f934:	push   0x190
    f939:	bnd jmp e020 <_init+0x20>
    f93f:	nop
    f940:	endbr64 
    f944:	push   0x191
    f949:	bnd jmp e020 <_init+0x20>
    f94f:	nop
    f950:	endbr64 
    f954:	push   0x192
    f959:	bnd jmp e020 <_init+0x20>
    f95f:	nop
    f960:	endbr64 
    f964:	push   0x193
    f969:	bnd jmp e020 <_init+0x20>
    f96f:	nop
    f970:	endbr64 
    f974:	push   0x194
    f979:	bnd jmp e020 <_init+0x20>
    f97f:	nop
    f980:	endbr64 
    f984:	push   0x195
    f989:	bnd jmp e020 <_init+0x20>
    f98f:	nop
    f990:	endbr64 
    f994:	push   0x196
    f999:	bnd jmp e020 <_init+0x20>
    f99f:	nop
    f9a0:	endbr64 
    f9a4:	push   0x197
    f9a9:	bnd jmp e020 <_init+0x20>
    f9af:	nop
    f9b0:	endbr64 
    f9b4:	push   0x198
    f9b9:	bnd jmp e020 <_init+0x20>
    f9bf:	nop
    f9c0:	endbr64 
    f9c4:	push   0x199
    f9c9:	bnd jmp e020 <_init+0x20>
    f9cf:	nop
    f9d0:	endbr64 
    f9d4:	push   0x19a
    f9d9:	bnd jmp e020 <_init+0x20>
    f9df:	nop
    f9e0:	endbr64 
    f9e4:	push   0x19b
    f9e9:	bnd jmp e020 <_init+0x20>
    f9ef:	nop
    f9f0:	endbr64 
    f9f4:	push   0x19c
    f9f9:	bnd jmp e020 <_init+0x20>
    f9ff:	nop
    fa00:	endbr64 
    fa04:	push   0x19d
    fa09:	bnd jmp e020 <_init+0x20>
    fa0f:	nop
    fa10:	endbr64 
    fa14:	push   0x19e
    fa19:	bnd jmp e020 <_init+0x20>
    fa1f:	nop
    fa20:	endbr64 
    fa24:	push   0x19f
    fa29:	bnd jmp e020 <_init+0x20>
    fa2f:	nop
    fa30:	endbr64 
    fa34:	push   0x1a0
    fa39:	bnd jmp e020 <_init+0x20>
    fa3f:	nop
    fa40:	endbr64 
    fa44:	push   0x1a1
    fa49:	bnd jmp e020 <_init+0x20>
    fa4f:	nop
    fa50:	endbr64 
    fa54:	push   0x1a2
    fa59:	bnd jmp e020 <_init+0x20>
    fa5f:	nop
    fa60:	endbr64 
    fa64:	push   0x1a3
    fa69:	bnd jmp e020 <_init+0x20>
    fa6f:	nop
    fa70:	endbr64 
    fa74:	push   0x1a4
    fa79:	bnd jmp e020 <_init+0x20>
    fa7f:	nop
    fa80:	endbr64 
    fa84:	push   0x1a5
    fa89:	bnd jmp e020 <_init+0x20>
    fa8f:	nop
    fa90:	endbr64 
    fa94:	push   0x1a6
    fa99:	bnd jmp e020 <_init+0x20>
    fa9f:	nop
    faa0:	endbr64 
    faa4:	push   0x1a7
    faa9:	bnd jmp e020 <_init+0x20>
    faaf:	nop
    fab0:	endbr64 
    fab4:	push   0x1a8
    fab9:	bnd jmp e020 <_init+0x20>
    fabf:	nop
    fac0:	endbr64 
    fac4:	push   0x1a9
    fac9:	bnd jmp e020 <_init+0x20>
    facf:	nop
    fad0:	endbr64 
    fad4:	push   0x1aa
    fad9:	bnd jmp e020 <_init+0x20>
    fadf:	nop
    fae0:	endbr64 
    fae4:	push   0x1ab
    fae9:	bnd jmp e020 <_init+0x20>
    faef:	nop
    faf0:	endbr64 
    faf4:	push   0x1ac
    faf9:	bnd jmp e020 <_init+0x20>
    faff:	nop
    fb00:	endbr64 
    fb04:	push   0x1ad
    fb09:	bnd jmp e020 <_init+0x20>
    fb0f:	nop
    fb10:	endbr64 
    fb14:	push   0x1ae
    fb19:	bnd jmp e020 <_init+0x20>
    fb1f:	nop
    fb20:	endbr64 
    fb24:	push   0x1af
    fb29:	bnd jmp e020 <_init+0x20>
    fb2f:	nop
    fb30:	endbr64 
    fb34:	push   0x1b0
    fb39:	bnd jmp e020 <_init+0x20>
    fb3f:	nop
    fb40:	endbr64 
    fb44:	push   0x1b1
    fb49:	bnd jmp e020 <_init+0x20>
    fb4f:	nop
    fb50:	endbr64 
    fb54:	push   0x1b2
    fb59:	bnd jmp e020 <_init+0x20>
    fb5f:	nop
    fb60:	endbr64 
    fb64:	push   0x1b3
    fb69:	bnd jmp e020 <_init+0x20>
    fb6f:	nop
    fb70:	endbr64 
    fb74:	push   0x1b4
    fb79:	bnd jmp e020 <_init+0x20>
    fb7f:	nop
    fb80:	endbr64 
    fb84:	push   0x1b5
    fb89:	bnd jmp e020 <_init+0x20>
    fb8f:	nop
    fb90:	endbr64 
    fb94:	push   0x1b6
    fb99:	bnd jmp e020 <_init+0x20>
    fb9f:	nop
    fba0:	endbr64 
    fba4:	push   0x1b7
    fba9:	bnd jmp e020 <_init+0x20>
    fbaf:	nop
    fbb0:	endbr64 
    fbb4:	push   0x1b8
    fbb9:	bnd jmp e020 <_init+0x20>
    fbbf:	nop
    fbc0:	endbr64 
    fbc4:	push   0x1b9
    fbc9:	bnd jmp e020 <_init+0x20>
    fbcf:	nop
    fbd0:	endbr64 
    fbd4:	push   0x1ba
    fbd9:	bnd jmp e020 <_init+0x20>
    fbdf:	nop
    fbe0:	endbr64 
    fbe4:	push   0x1bb
    fbe9:	bnd jmp e020 <_init+0x20>
    fbef:	nop
    fbf0:	endbr64 
    fbf4:	push   0x1bc
    fbf9:	bnd jmp e020 <_init+0x20>
    fbff:	nop
    fc00:	endbr64 
    fc04:	push   0x1bd
    fc09:	bnd jmp e020 <_init+0x20>
    fc0f:	nop
    fc10:	endbr64 
    fc14:	push   0x1be
    fc19:	bnd jmp e020 <_init+0x20>
    fc1f:	nop
    fc20:	endbr64 
    fc24:	push   0x1bf
    fc29:	bnd jmp e020 <_init+0x20>
    fc2f:	nop
    fc30:	endbr64 
    fc34:	push   0x1c0
    fc39:	bnd jmp e020 <_init+0x20>
    fc3f:	nop
    fc40:	endbr64 
    fc44:	push   0x1c1
    fc49:	bnd jmp e020 <_init+0x20>
    fc4f:	nop
    fc50:	endbr64 
    fc54:	push   0x1c2
    fc59:	bnd jmp e020 <_init+0x20>
    fc5f:	nop
    fc60:	endbr64 
    fc64:	push   0x1c3
    fc69:	bnd jmp e020 <_init+0x20>
    fc6f:	nop
    fc70:	endbr64 
    fc74:	push   0x1c4
    fc79:	bnd jmp e020 <_init+0x20>
    fc7f:	nop
    fc80:	endbr64 
    fc84:	push   0x1c5
    fc89:	bnd jmp e020 <_init+0x20>
    fc8f:	nop
    fc90:	endbr64 
    fc94:	push   0x1c6
    fc99:	bnd jmp e020 <_init+0x20>
    fc9f:	nop
    fca0:	endbr64 
    fca4:	push   0x1c7
    fca9:	bnd jmp e020 <_init+0x20>
    fcaf:	nop
    fcb0:	endbr64 
    fcb4:	push   0x1c8
    fcb9:	bnd jmp e020 <_init+0x20>
    fcbf:	nop
    fcc0:	endbr64 
    fcc4:	push   0x1c9
    fcc9:	bnd jmp e020 <_init+0x20>
    fccf:	nop
    fcd0:	endbr64 
    fcd4:	push   0x1ca
    fcd9:	bnd jmp e020 <_init+0x20>
    fcdf:	nop
    fce0:	endbr64 
    fce4:	push   0x1cb
    fce9:	bnd jmp e020 <_init+0x20>
    fcef:	nop
    fcf0:	endbr64 
    fcf4:	push   0x1cc
    fcf9:	bnd jmp e020 <_init+0x20>
    fcff:	nop
    fd00:	endbr64 
    fd04:	push   0x1cd
    fd09:	bnd jmp e020 <_init+0x20>
    fd0f:	nop
    fd10:	endbr64 
    fd14:	push   0x1ce
    fd19:	bnd jmp e020 <_init+0x20>
    fd1f:	nop
    fd20:	endbr64 
    fd24:	push   0x1cf
    fd29:	bnd jmp e020 <_init+0x20>
    fd2f:	nop
    fd30:	endbr64 
    fd34:	push   0x1d0
    fd39:	bnd jmp e020 <_init+0x20>
    fd3f:	nop
    fd40:	endbr64 
    fd44:	push   0x1d1
    fd49:	bnd jmp e020 <_init+0x20>
    fd4f:	nop
    fd50:	endbr64 
    fd54:	push   0x1d2
    fd59:	bnd jmp e020 <_init+0x20>
    fd5f:	nop
    fd60:	endbr64 
    fd64:	push   0x1d3
    fd69:	bnd jmp e020 <_init+0x20>
    fd6f:	nop
    fd70:	endbr64 
    fd74:	push   0x1d4
    fd79:	bnd jmp e020 <_init+0x20>
    fd7f:	nop
    fd80:	endbr64 
    fd84:	push   0x1d5
    fd89:	bnd jmp e020 <_init+0x20>
    fd8f:	nop
    fd90:	endbr64 
    fd94:	push   0x1d6
    fd99:	bnd jmp e020 <_init+0x20>
    fd9f:	nop
    fda0:	endbr64 
    fda4:	push   0x1d7
    fda9:	bnd jmp e020 <_init+0x20>
    fdaf:	nop
    fdb0:	endbr64 
    fdb4:	push   0x1d8
    fdb9:	bnd jmp e020 <_init+0x20>
    fdbf:	nop
    fdc0:	endbr64 
    fdc4:	push   0x1d9
    fdc9:	bnd jmp e020 <_init+0x20>
    fdcf:	nop
    fdd0:	endbr64 
    fdd4:	push   0x1da
    fdd9:	bnd jmp e020 <_init+0x20>
    fddf:	nop
    fde0:	endbr64 
    fde4:	push   0x1db
    fde9:	bnd jmp e020 <_init+0x20>
    fdef:	nop
    fdf0:	endbr64 
    fdf4:	push   0x1dc
    fdf9:	bnd jmp e020 <_init+0x20>
    fdff:	nop
    fe00:	endbr64 
    fe04:	push   0x1dd
    fe09:	bnd jmp e020 <_init+0x20>
    fe0f:	nop
    fe10:	endbr64 
    fe14:	push   0x1de
    fe19:	bnd jmp e020 <_init+0x20>
    fe1f:	nop
    fe20:	endbr64 
    fe24:	push   0x1df
    fe29:	bnd jmp e020 <_init+0x20>
    fe2f:	nop
    fe30:	endbr64 
    fe34:	push   0x1e0
    fe39:	bnd jmp e020 <_init+0x20>
    fe3f:	nop
    fe40:	endbr64 
    fe44:	push   0x1e1
    fe49:	bnd jmp e020 <_init+0x20>
    fe4f:	nop
    fe50:	endbr64 
    fe54:	push   0x1e2
    fe59:	bnd jmp e020 <_init+0x20>
    fe5f:	nop
    fe60:	endbr64 
    fe64:	push   0x1e3
    fe69:	bnd jmp e020 <_init+0x20>
    fe6f:	nop
    fe70:	endbr64 
    fe74:	push   0x1e4
    fe79:	bnd jmp e020 <_init+0x20>
    fe7f:	nop
    fe80:	endbr64 
    fe84:	push   0x1e5
    fe89:	bnd jmp e020 <_init+0x20>
    fe8f:	nop
    fe90:	endbr64 
    fe94:	push   0x1e6
    fe99:	bnd jmp e020 <_init+0x20>
    fe9f:	nop
    fea0:	endbr64 
    fea4:	push   0x1e7
    fea9:	bnd jmp e020 <_init+0x20>
    feaf:	nop
    feb0:	endbr64 
    feb4:	push   0x1e8
    feb9:	bnd jmp e020 <_init+0x20>
    febf:	nop
    fec0:	endbr64 
    fec4:	push   0x1e9
    fec9:	bnd jmp e020 <_init+0x20>
    fecf:	nop
    fed0:	endbr64 
    fed4:	push   0x1ea
    fed9:	bnd jmp e020 <_init+0x20>
    fedf:	nop
    fee0:	endbr64 
    fee4:	push   0x1eb
    fee9:	bnd jmp e020 <_init+0x20>
    feef:	nop
    fef0:	endbr64 
    fef4:	push   0x1ec
    fef9:	bnd jmp e020 <_init+0x20>
    feff:	nop
    ff00:	endbr64 
    ff04:	push   0x1ed
    ff09:	bnd jmp e020 <_init+0x20>
    ff0f:	nop
    ff10:	endbr64 
    ff14:	push   0x1ee
    ff19:	bnd jmp e020 <_init+0x20>
    ff1f:	nop
    ff20:	endbr64 
    ff24:	push   0x1ef
    ff29:	bnd jmp e020 <_init+0x20>
    ff2f:	nop
    ff30:	endbr64 
    ff34:	push   0x1f0
    ff39:	bnd jmp e020 <_init+0x20>
    ff3f:	nop
    ff40:	endbr64 
    ff44:	push   0x1f1
    ff49:	bnd jmp e020 <_init+0x20>
    ff4f:	nop
    ff50:	endbr64 
    ff54:	push   0x1f2
    ff59:	bnd jmp e020 <_init+0x20>
    ff5f:	nop
    ff60:	endbr64 
    ff64:	push   0x1f3
    ff69:	bnd jmp e020 <_init+0x20>
    ff6f:	nop
    ff70:	endbr64 
    ff74:	push   0x1f4
    ff79:	bnd jmp e020 <_init+0x20>
    ff7f:	nop
    ff80:	endbr64 
    ff84:	push   0x1f5
    ff89:	bnd jmp e020 <_init+0x20>
    ff8f:	nop
    ff90:	endbr64 
    ff94:	push   0x1f6
    ff99:	bnd jmp e020 <_init+0x20>
    ff9f:	nop
    ffa0:	endbr64 
    ffa4:	push   0x1f7
    ffa9:	bnd jmp e020 <_init+0x20>
    ffaf:	nop
    ffb0:	endbr64 
    ffb4:	push   0x1f8
    ffb9:	bnd jmp e020 <_init+0x20>
    ffbf:	nop
    ffc0:	endbr64 
    ffc4:	push   0x1f9
    ffc9:	bnd jmp e020 <_init+0x20>
    ffcf:	nop
    ffd0:	endbr64 
    ffd4:	push   0x1fa
    ffd9:	bnd jmp e020 <_init+0x20>
    ffdf:	nop
    ffe0:	endbr64 
    ffe4:	push   0x1fb
    ffe9:	bnd jmp e020 <_init+0x20>
    ffef:	nop
    fff0:	endbr64 
    fff4:	push   0x1fc
    fff9:	bnd jmp e020 <_init+0x20>
    ffff:	nop
   10000:	endbr64 
   10004:	push   0x1fd
   10009:	bnd jmp e020 <_init+0x20>
   1000f:	nop
   10010:	endbr64 
   10014:	push   0x1fe
   10019:	bnd jmp e020 <_init+0x20>
   1001f:	nop
   10020:	endbr64 
   10024:	push   0x1ff
   10029:	bnd jmp e020 <_init+0x20>
   1002f:	nop
   10030:	endbr64 
   10034:	push   0x200
   10039:	bnd jmp e020 <_init+0x20>
   1003f:	nop
   10040:	endbr64 
   10044:	push   0x201
   10049:	bnd jmp e020 <_init+0x20>
   1004f:	nop
   10050:	endbr64 
   10054:	push   0x202
   10059:	bnd jmp e020 <_init+0x20>
   1005f:	nop
   10060:	endbr64 
   10064:	push   0x203
   10069:	bnd jmp e020 <_init+0x20>
   1006f:	nop
   10070:	endbr64 
   10074:	push   0x204
   10079:	bnd jmp e020 <_init+0x20>
   1007f:	nop
   10080:	endbr64 
   10084:	push   0x205
   10089:	bnd jmp e020 <_init+0x20>
   1008f:	nop
   10090:	endbr64 
   10094:	push   0x206
   10099:	bnd jmp e020 <_init+0x20>
   1009f:	nop
   100a0:	endbr64 
   100a4:	push   0x207
   100a9:	bnd jmp e020 <_init+0x20>
   100af:	nop
   100b0:	endbr64 
   100b4:	push   0x208
   100b9:	bnd jmp e020 <_init+0x20>
   100bf:	nop
   100c0:	endbr64 
   100c4:	push   0x209
   100c9:	bnd jmp e020 <_init+0x20>
   100cf:	nop
   100d0:	endbr64 
   100d4:	push   0x20a
   100d9:	bnd jmp e020 <_init+0x20>
   100df:	nop
   100e0:	endbr64 
   100e4:	push   0x20b
   100e9:	bnd jmp e020 <_init+0x20>
   100ef:	nop
   100f0:	endbr64 
   100f4:	push   0x20c
   100f9:	bnd jmp e020 <_init+0x20>
   100ff:	nop
   10100:	endbr64 
   10104:	push   0x20d
   10109:	bnd jmp e020 <_init+0x20>
   1010f:	nop
   10110:	endbr64 
   10114:	push   0x20e
   10119:	bnd jmp e020 <_init+0x20>
   1011f:	nop
   10120:	endbr64 
   10124:	push   0x20f
   10129:	bnd jmp e020 <_init+0x20>
   1012f:	nop
   10130:	endbr64 
   10134:	push   0x210
   10139:	bnd jmp e020 <_init+0x20>
   1013f:	nop
   10140:	endbr64 
   10144:	push   0x211
   10149:	bnd jmp e020 <_init+0x20>
   1014f:	nop
   10150:	endbr64 
   10154:	push   0x212
   10159:	bnd jmp e020 <_init+0x20>
   1015f:	nop
   10160:	endbr64 
   10164:	push   0x213
   10169:	bnd jmp e020 <_init+0x20>
   1016f:	nop
   10170:	endbr64 
   10174:	push   0x214
   10179:	bnd jmp e020 <_init+0x20>
   1017f:	nop
   10180:	endbr64 
   10184:	push   0x215
   10189:	bnd jmp e020 <_init+0x20>
   1018f:	nop
   10190:	endbr64 
   10194:	push   0x216
   10199:	bnd jmp e020 <_init+0x20>
   1019f:	nop
   101a0:	endbr64 
   101a4:	push   0x217
   101a9:	bnd jmp e020 <_init+0x20>
   101af:	nop
   101b0:	endbr64 
   101b4:	push   0x218
   101b9:	bnd jmp e020 <_init+0x20>
   101bf:	nop
   101c0:	endbr64 
   101c4:	push   0x219
   101c9:	bnd jmp e020 <_init+0x20>
   101cf:	nop
   101d0:	endbr64 
   101d4:	push   0x21a
   101d9:	bnd jmp e020 <_init+0x20>
   101df:	nop
   101e0:	endbr64 
   101e4:	push   0x21b
   101e9:	bnd jmp e020 <_init+0x20>
   101ef:	nop
   101f0:	endbr64 
   101f4:	push   0x21c
   101f9:	bnd jmp e020 <_init+0x20>
   101ff:	nop
   10200:	endbr64 
   10204:	push   0x21d
   10209:	bnd jmp e020 <_init+0x20>
   1020f:	nop
   10210:	endbr64 
   10214:	push   0x21e
   10219:	bnd jmp e020 <_init+0x20>
   1021f:	nop
   10220:	endbr64 
   10224:	push   0x21f
   10229:	bnd jmp e020 <_init+0x20>
   1022f:	nop
   10230:	endbr64 
   10234:	push   0x220
   10239:	bnd jmp e020 <_init+0x20>
   1023f:	nop
   10240:	endbr64 
   10244:	push   0x221
   10249:	bnd jmp e020 <_init+0x20>
   1024f:	nop
   10250:	endbr64 
   10254:	push   0x222
   10259:	bnd jmp e020 <_init+0x20>
   1025f:	nop
   10260:	endbr64 
   10264:	push   0x223
   10269:	bnd jmp e020 <_init+0x20>
   1026f:	nop
   10270:	endbr64 
   10274:	push   0x224
   10279:	bnd jmp e020 <_init+0x20>
   1027f:	nop
   10280:	endbr64 
   10284:	push   0x225
   10289:	bnd jmp e020 <_init+0x20>
   1028f:	nop
   10290:	endbr64 
   10294:	push   0x226
   10299:	bnd jmp e020 <_init+0x20>
   1029f:	nop
   102a0:	endbr64 
   102a4:	push   0x227
   102a9:	bnd jmp e020 <_init+0x20>
   102af:	nop
   102b0:	endbr64 
   102b4:	push   0x228
   102b9:	bnd jmp e020 <_init+0x20>
   102bf:	nop
   102c0:	endbr64 
   102c4:	push   0x229
   102c9:	bnd jmp e020 <_init+0x20>
   102cf:	nop
   102d0:	endbr64 
   102d4:	push   0x22a
   102d9:	bnd jmp e020 <_init+0x20>
   102df:	nop
   102e0:	endbr64 
   102e4:	push   0x22b
   102e9:	bnd jmp e020 <_init+0x20>
   102ef:	nop
   102f0:	endbr64 
   102f4:	push   0x22c
   102f9:	bnd jmp e020 <_init+0x20>
   102ff:	nop
   10300:	endbr64 
   10304:	push   0x22d
   10309:	bnd jmp e020 <_init+0x20>
   1030f:	nop
   10310:	endbr64 
   10314:	push   0x22e
   10319:	bnd jmp e020 <_init+0x20>
   1031f:	nop
   10320:	endbr64 
   10324:	push   0x22f
   10329:	bnd jmp e020 <_init+0x20>
   1032f:	nop
   10330:	endbr64 
   10334:	push   0x230
   10339:	bnd jmp e020 <_init+0x20>
   1033f:	nop
   10340:	endbr64 
   10344:	push   0x231
   10349:	bnd jmp e020 <_init+0x20>
   1034f:	nop
   10350:	endbr64 
   10354:	push   0x232
   10359:	bnd jmp e020 <_init+0x20>
   1035f:	nop
   10360:	endbr64 
   10364:	push   0x233
   10369:	bnd jmp e020 <_init+0x20>
   1036f:	nop
   10370:	endbr64 
   10374:	push   0x234
   10379:	bnd jmp e020 <_init+0x20>
   1037f:	nop
   10380:	endbr64 
   10384:	push   0x235
   10389:	bnd jmp e020 <_init+0x20>
   1038f:	nop
   10390:	endbr64 
   10394:	push   0x236
   10399:	bnd jmp e020 <_init+0x20>
   1039f:	nop
   103a0:	endbr64 
   103a4:	push   0x237
   103a9:	bnd jmp e020 <_init+0x20>
   103af:	nop
   103b0:	endbr64 
   103b4:	push   0x238
   103b9:	bnd jmp e020 <_init+0x20>
   103bf:	nop
   103c0:	endbr64 
   103c4:	push   0x239
   103c9:	bnd jmp e020 <_init+0x20>
   103cf:	nop
   103d0:	endbr64 
   103d4:	push   0x23a
   103d9:	bnd jmp e020 <_init+0x20>
   103df:	nop
   103e0:	endbr64 
   103e4:	push   0x23b
   103e9:	bnd jmp e020 <_init+0x20>
   103ef:	nop

Disassembly of section .plt.got:

00000000000103f0 <wget_strcmp@plt>:
   103f0:	endbr64 
   103f4:	bnd jmp QWORD PTR [rip+0x65b55]        # 75f50 <wget_strcmp@@Base+0x4a3d0>
   103fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010400 <__cxa_finalize@plt>:
   10400:	endbr64 
   10404:	bnd jmp QWORD PTR [rip+0x65b55]        # 75f60 <__cxa_finalize@GLIBC_2.2.5>
   1040b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010410 <wget_strcasecmp@plt>:
   10410:	endbr64 
   10414:	bnd jmp QWORD PTR [rip+0x65b5d]        # 75f78 <wget_strcasecmp@@Base+0x4a3c8>
   1041b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010420 <wget_netrc_free@plt>:
   10420:	endbr64 
   10424:	bnd jmp QWORD PTR [rip+0x65b6d]        # 75f98 <wget_netrc_free@@Base+0x4ea08>
   1042b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010430 <free@plt>:
   10430:	endbr64 
   10434:	bnd jmp QWORD PTR [rip+0x65b65]        # 75fa0 <free@GLIBC_2.2.5>
   1043b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010440 <wget_tls_session_free@plt>:
   10440:	endbr64 
   10444:	bnd jmp QWORD PTR [rip+0x65b75]        # 75fc0 <wget_tls_session_free@@Base+0x4ae30>
   1044b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010450 <wget_hpkp_free@plt>:
   10450:	endbr64 
   10454:	bnd jmp QWORD PTR [rip+0x65b85]        # 75fe0 <wget_hpkp_free@@Base+0x5a800>
   1045b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000010460 <posix_spawnattr_destroy@plt>:
   10460:	endbr64 
   10464:	bnd jmp QWORD PTR [rip+0x65bad]        # 76018 <posix_spawnattr_destroy@GLIBC_2.2.5>
   1046b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010470 <SSL_get_error@plt>:
   10470:	endbr64 
   10474:	bnd jmp QWORD PTR [rip+0x65ba5]        # 76020 <SSL_get_error@OPENSSL_3.0.0>
   1047b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010480 <wget_http_request_set_header_cb@plt>:
   10480:	endbr64 
   10484:	bnd jmp QWORD PTR [rip+0x65b9d]        # 76028 <wget_http_request_set_header_cb@@Base+0x586f8>
   1048b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010490 <ERR_peek_last_error@plt>:
   10490:	endbr64 
   10494:	bnd jmp QWORD PTR [rip+0x65b95]        # 76030 <ERR_peek_last_error@OPENSSL_3.0.0>
   1049b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000104a0 <wget_stringmap_create_nocase@plt>:
   104a0:	endbr64 
   104a4:	bnd jmp QWORD PTR [rip+0x65b8d]        # 76038 <wget_stringmap_create_nocase@@Base+0x4b5c8>
   104ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000104b0 <__errno_location@plt>:
   104b0:	endbr64 
   104b4:	bnd jmp QWORD PTR [rip+0x65b85]        # 76040 <__errno_location@GLIBC_2.2.5>
   104bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000104c0 <wget_hashmap_create@plt>:
   104c0:	endbr64 
   104c4:	bnd jmp QWORD PTR [rip+0x65b7d]        # 76048 <wget_hashmap_create@@Base+0x5c9c8>
   104cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000104d0 <wget_tcp_set_family@plt>:
   104d0:	endbr64 
   104d4:	bnd jmp QWORD PTR [rip+0x65b75]        # 76050 <wget_tcp_set_family@@Base+0x4fab0>
   104db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000104e0 <pthread_mutexattr_init@plt>:
   104e0:	endbr64 
   104e4:	bnd jmp QWORD PTR [rip+0x65b6d]        # 76058 <pthread_mutexattr_init@GLIBC_2.34>
   104eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000104f0 <wget_hpkp_db_add@plt>:
   104f0:	endbr64 
   104f4:	bnd jmp QWORD PTR [rip+0x65b65]        # 76060 <wget_hpkp_db_add@@Base+0x5a140>
   104fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010500 <SSL_read@plt>:
   10500:	endbr64 
   10504:	bnd jmp QWORD PTR [rip+0x65b5d]        # 76068 <SSL_read@OPENSSL_3.0.0>
   1050b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010510 <wget_strncmp@plt>:
   10510:	endbr64 
   10514:	bnd jmp QWORD PTR [rip+0x65b55]        # 76070 <wget_strncmp@@Base+0x4a3f0>
   1051b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010520 <wget_hashmap_get@plt>:
   10520:	endbr64 
   10524:	bnd jmp QWORD PTR [rip+0x65b4d]        # 76078 <wget_hashmap_get@@Base+0x5c788>
   1052b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010530 <wget_thread_mutex_init@plt>:
   10530:	endbr64 
   10534:	bnd jmp QWORD PTR [rip+0x65b45]        # 76080 <wget_thread_mutex_init@@Base+0x4b4f0>
   1053b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010540 <wget_base64_encode@plt>:
   10540:	endbr64 
   10544:	bnd jmp QWORD PTR [rip+0x65b3d]        # 76088 <wget_base64_encode@@Base+0x60a18>
   1054b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010550 <X509_get1_ocsp@plt>:
   10550:	endbr64 
   10554:	bnd jmp QWORD PTR [rip+0x65b35]        # 76090 <X509_get1_ocsp@OPENSSL_3.0.0>
   1055b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010560 <SSL_CTX_free@plt>:
   10560:	endbr64 
   10564:	bnd jmp QWORD PTR [rip+0x65b2d]        # 76098 <SSL_CTX_free@OPENSSL_3.0.0>
   1056b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010570 <wget_hsts_db_deinit@plt>:
   10570:	endbr64 
   10574:	bnd jmp QWORD PTR [rip+0x65b25]        # 760a0 <wget_hsts_db_deinit@@Base+0x5afd0>
   1057b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010580 <wget_error_printf_exit@plt>:
   10580:	endbr64 
   10584:	bnd jmp QWORD PTR [rip+0x65b1d]        # 760a8 <wget_error_printf_exit@@Base+0x50e68>
   1058b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010590 <wget_strtolower@plt>:
   10590:	endbr64 
   10594:	bnd jmp QWORD PTR [rip+0x65b15]        # 760b0 <wget_strtolower@@Base+0x4a470>
   1059b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000105a0 <wget_decompress_get_context@plt>:
   105a0:	endbr64 
   105a4:	bnd jmp QWORD PTR [rip+0x65b0d]        # 760b8 <wget_decompress_get_context@@Base+0x5e1a8>
   105ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000105b0 <wget_net_init@plt>:
   105b0:	endbr64 
   105b4:	bnd jmp QWORD PTR [rip+0x65b05]        # 760c0 <wget_net_init@@Base+0x4fcc0>
   105bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000105c0 <wget_cookie_store_cookie@plt>:
   105c0:	endbr64 
   105c4:	bnd jmp QWORD PTR [rip+0x65afd]        # 760c8 <wget_cookie_store_cookie@@Base+0x60508>
   105cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000105d0 <wget_hashmap_set_value_destructor@plt>:
   105d0:	endbr64 
   105d4:	bnd jmp QWORD PTR [rip+0x65af5]        # 760d0 <wget_hashmap_set_value_destructor@@Base+0x5c460>
   105db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000105e0 <__ctype_toupper_loc@plt>:
   105e0:	endbr64 
   105e4:	bnd jmp QWORD PTR [rip+0x65aed]        # 760d8 <__ctype_toupper_loc@GLIBC_2.3>
   105eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000105f0 <wget_tcp_write@plt>:
   105f0:	endbr64 
   105f4:	bnd jmp QWORD PTR [rip+0x65ae5]        # 760e0 <wget_tcp_write@@Base+0x4f570>
   105fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010600 <strtoll@plt>:
   10600:	endbr64 
   10604:	bnd jmp QWORD PTR [rip+0x65add]        # 760e8 <strtoll@GLIBC_2.2.5>
   1060b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010610 <i2d_SSL_SESSION@plt>:
   10610:	endbr64 
   10614:	bnd jmp QWORD PTR [rip+0x65ad5]        # 760f0 <i2d_SSL_SESSION@OPENSSL_3.0.0>
   1061b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010620 <posix_spawnattr_setsigmask@plt>:
   10620:	endbr64 
   10624:	bnd jmp QWORD PTR [rip+0x65acd]        # 760f8 <posix_spawnattr_setsigmask@GLIBC_2.2.5>
   1062b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010630 <bind@plt>:
   10630:	endbr64 
   10634:	bnd jmp QWORD PTR [rip+0x65ac5]        # 76100 <bind@GLIBC_2.2.5>
   1063b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010640 <SSL_get_peer_cert_chain@plt>:
   10640:	endbr64 
   10644:	bnd jmp QWORD PTR [rip+0x65abd]        # 76108 <SSL_get_peer_cert_chain@OPENSSL_3.0.0>
   1064b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010650 <wget_cookie_db_save@plt>:
   10650:	endbr64 
   10654:	bnd jmp QWORD PTR [rip+0x65ab5]        # 76110 <wget_cookie_db_save@@Base+0x5fa00>
   1065b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010660 <wget_netrc_db_deinit@plt>:
   10660:	endbr64 
   10664:	bnd jmp QWORD PTR [rip+0x65aad]        # 76118 <wget_netrc_db_deinit@@Base+0x4e9b8>
   1066b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010670 <__ctype_tolower_loc@plt>:
   10670:	endbr64 
   10674:	bnd jmp QWORD PTR [rip+0x65aa5]        # 76120 <__ctype_tolower_loc@GLIBC_2.3>
   1067b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010680 <clearerr@plt>:
   10680:	endbr64 
   10684:	bnd jmp QWORD PTR [rip+0x65a9d]        # 76128 <clearerr@GLIBC_2.2.5>
   1068b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010690 <wget_cookie_db_deinit@plt>:
   10690:	endbr64 
   10694:	bnd jmp QWORD PTR [rip+0x65a95]        # 76130 <wget_cookie_db_deinit@@Base+0x5fb50>
   1069b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000106a0 <wget_dns_cache_free@plt>:
   106a0:	endbr64 
   106a4:	bnd jmp QWORD PTR [rip+0x65a8d]        # 76138 <wget_dns_cache_free@@Base+0x5e0d8>
   106ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000106b0 <wget_http_open@plt>:
   106b0:	endbr64 
   106b4:	bnd jmp QWORD PTR [rip+0x65a85]        # 76140 <wget_http_open@@Base+0x566f0>
   106bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000106c0 <OCSP_REQUEST_new@plt>:
   106c0:	endbr64 
   106c4:	bnd jmp QWORD PTR [rip+0x65a7d]        # 76148 <OCSP_REQUEST_new@OPENSSL_3.0.0>
   106cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000106d0 <wget_hash_file_offset@plt>:
   106d0:	endbr64 
   106d4:	bnd jmp QWORD PTR [rip+0x65a75]        # 76150 <wget_hash_file_offset@@Base+0x5cf20>
   106db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000106e0 <wget_base64_get_encoded_length@plt>:
   106e0:	endbr64 
   106e4:	bnd jmp QWORD PTR [rip+0x65a6d]        # 76158 <wget_base64_get_encoded_length@@Base+0x60a48>
   106eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000106f0 <wget_buffer_reset@plt>:
   106f0:	endbr64 
   106f4:	bnd jmp QWORD PTR [rip+0x65a65]        # 76160 <wget_buffer_reset@@Base+0x62070>
   106fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010700 <SSL_set1_host@plt>:
   10700:	endbr64 
   10704:	bnd jmp QWORD PTR [rip+0x65a5d]        # 76168 <SSL_set1_host@OPENSSL_3.0.0>
   1070b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010710 <wget_cookie_db_free@plt>:
   10710:	endbr64 
   10714:	bnd jmp QWORD PTR [rip+0x65a55]        # 76170 <wget_cookie_db_free@@Base+0x5fb50>
   1071b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010720 <wget_buffer_memcpy@plt>:
   10720:	endbr64 
   10724:	bnd jmp QWORD PTR [rip+0x65a4d]        # 76178 <wget_buffer_memcpy@@Base+0x61fc8>
   1072b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010730 <posix_spawn_file_actions_addchdir_np@plt>:
   10730:	endbr64 
   10734:	bnd jmp QWORD PTR [rip+0x65a45]        # 76180 <posix_spawn_file_actions_addchdir_np@GLIBC_2.29>
   1073b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010740 <wget_hash_fast@plt>:
   10740:	endbr64 
   10744:	bnd jmp QWORD PTR [rip+0x65a3d]        # 76188 <wget_hash_fast@@Base+0x5d4e8>
   1074b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010750 <strstr@plt>:
   10750:	endbr64 
   10754:	bnd jmp QWORD PTR [rip+0x65a35]        # 76190 <strstr@GLIBC_2.2.5>
   1075b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010760 <wget_tls_session_db_add@plt>:
   10760:	endbr64 
   10764:	bnd jmp QWORD PTR [rip+0x65a2d]        # 76198 <wget_tls_session_db_add@@Base+0x4ace8>
   1076b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010770 <OCSP_BASICRESP_free@plt>:
   10770:	endbr64 
   10774:	bnd jmp QWORD PTR [rip+0x65a25]        # 761a0 <OCSP_BASICRESP_free@OPENSSL_3.0.0>
   1077b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010780 <iswgraph@plt>:
   10780:	endbr64 
   10784:	bnd jmp QWORD PTR [rip+0x65a1d]        # 761a8 <iswgraph@GLIBC_2.2.5>
   1078b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010790 <SSL_CTX_set_verify@plt>:
   10790:	endbr64 
   10794:	bnd jmp QWORD PTR [rip+0x65a15]        # 761b0 <SSL_CTX_set_verify@OPENSSL_3.0.0>
   1079b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000107a0 <socket@plt>:
   107a0:	endbr64 
   107a4:	bnd jmp QWORD PTR [rip+0x65a0d]        # 761b8 <socket@GLIBC_2.2.5>
   107ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000107b0 <wget_iri_relative_to_abs@plt>:
   107b0:	endbr64 
   107b4:	bnd jmp QWORD PTR [rip+0x65a05]        # 761c0 <wget_iri_relative_to_abs@@Base+0x52090>
   107bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000107c0 <strcoll@plt>:
   107c0:	endbr64 
   107c4:	bnd jmp QWORD PTR [rip+0x659fd]        # 761c8 <strcoll@GLIBC_2.2.5>
   107cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000107d0 <wget_robots_free@plt>:
   107d0:	endbr64 
   107d4:	bnd jmp QWORD PTR [rip+0x659f5]        # 761d0 <wget_robots_free@@Base+0x4c1a0>
   107db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000107e0 <SSL_set_ex_data@plt>:
   107e0:	endbr64 
   107e4:	bnd jmp QWORD PTR [rip+0x659ed]        # 761d8 <SSL_set_ex_data@OPENSSL_3.0.0>
   107eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000107f0 <SSL_session_reused@plt>:
   107f0:	endbr64 
   107f4:	bnd jmp QWORD PTR [rip+0x659e5]        # 761e0 <SSL_session_reused@OPENSSL_3.0.0>
   107fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010800 <fork@plt>:
   10800:	endbr64 
   10804:	bnd jmp QWORD PTR [rip+0x659dd]        # 761e8 <fork@GLIBC_2.2.5>
   1080b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010810 <getc@plt>:
   10810:	endbr64 
   10814:	bnd jmp QWORD PTR [rip+0x659d5]        # 761f0 <getc@GLIBC_2.2.5>
   1081b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010820 <wget_iri_get_connection_part@plt>:
   10820:	endbr64 
   10824:	bnd jmp QWORD PTR [rip+0x659cd]        # 761f8 <wget_iri_get_connection_part@@Base+0x52128>
   1082b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010830 <fstatat@plt>:
   10830:	endbr64 
   10834:	bnd jmp QWORD PTR [rip+0x659c5]        # 76200 <fstatat@GLIBC_2.33>
   1083b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010840 <posix_spawn@plt>:
   10840:	endbr64 
   10844:	bnd jmp QWORD PTR [rip+0x659bd]        # 76208 <posix_spawn@GLIBC_2.15>
   1084b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010850 <wget_vaprintf@plt>:
   10850:	endbr64 
   10854:	bnd jmp QWORD PTR [rip+0x659b5]        # 76210 <wget_vaprintf@@Base+0x4c8c0>
   1085b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010860 <uselocale@plt>:
   10860:	endbr64 
   10864:	bnd jmp QWORD PTR [rip+0x659ad]        # 76218 <uselocale@GLIBC_2.3>
   1086b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010870 <OCSP_REQUEST_free@plt>:
   10870:	endbr64 
   10874:	bnd jmp QWORD PTR [rip+0x659a5]        # 76220 <OCSP_REQUEST_free@OPENSSL_3.0.0>
   1087b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010880 <wget_hash_get_len@plt>:
   10880:	endbr64 
   10884:	bnd jmp QWORD PTR [rip+0x6599d]        # 76228 <wget_hash_get_len@@Base+0x5d528>
   1088b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010890 <wget_http_print_date@plt>:
   10890:	endbr64 
   10894:	bnd jmp QWORD PTR [rip+0x65995]        # 76230 <wget_http_print_date@@Base+0x54b50>
   1089b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000108a0 <wget_vector_sort@plt>:
   108a0:	endbr64 
   108a4:	bnd jmp QWORD PTR [rip+0x6598d]        # 76238 <wget_vector_sort@@Base+0x495e8>
   108ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000108b0 <OCSP_CERTID_dup@plt>:
   108b0:	endbr64 
   108b4:	bnd jmp QWORD PTR [rip+0x65985]        # 76240 <OCSP_CERTID_dup@OPENSSL_3.0.0>
   108bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000108c0 <wget_buffer_printf@plt>:
   108c0:	endbr64 
   108c4:	bnd jmp QWORD PTR [rip+0x6597d]        # 76248 <wget_buffer_printf@@Base+0x61028>
   108cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000108d0 <wget_buffer_init@plt>:
   108d0:	endbr64 
   108d4:	bnd jmp QWORD PTR [rip+0x65975]        # 76250 <wget_buffer_init@@Base+0x62360>
   108db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000108e0 <wget_fprintf@plt>:
   108e0:	endbr64 
   108e4:	bnd jmp QWORD PTR [rip+0x6596d]        # 76258 <wget_fprintf@@Base+0x4c708>
   108eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000108f0 <nanosleep@plt>:
   108f0:	endbr64 
   108f4:	bnd jmp QWORD PTR [rip+0x65965]        # 76260 <nanosleep@GLIBC_2.2.5>
   108fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010900 <wget_bar_set_slots@plt>:
   10900:	endbr64 
   10904:	bnd jmp QWORD PTR [rip+0x6595d]        # 76268 <wget_bar_set_slots@@Base+0x62d38>
   1090b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010910 <wget_vector_clear_nofree@plt>:
   10910:	endbr64 
   10914:	bnd jmp QWORD PTR [rip+0x65955]        # 76270 <wget_vector_clear_nofree@@Base+0x49760>
   1091b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010920 <popen@plt>:
   10920:	endbr64 
   10924:	bnd jmp QWORD PTR [rip+0x6594d]        # 76278 <popen@GLIBC_2.2.5>
   1092b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010930 <getrandom@plt>:
   10930:	endbr64 
   10934:	bnd jmp QWORD PTR [rip+0x65945]        # 76280 <getrandom@GLIBC_2.25>
   1093b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010940 <SSL_get_ex_data@plt>:
   10940:	endbr64 
   10944:	bnd jmp QWORD PTR [rip+0x6593d]        # 76288 <SSL_get_ex_data@OPENSSL_3.0.0>
   1094b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010950 <wget_hashmap_free@plt>:
   10950:	endbr64 
   10954:	bnd jmp QWORD PTR [rip+0x65935]        # 76290 <wget_hashmap_free@@Base+0x5c7d0>
   1095b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010960 <mkstemp@plt>:
   10960:	endbr64 
   10964:	bnd jmp QWORD PTR [rip+0x6592d]        # 76298 <mkstemp@GLIBC_2.2.5>
   1096b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010970 <wget_strlcpy@plt>:
   10970:	endbr64 
   10974:	bnd jmp QWORD PTR [rip+0x65925]        # 762a0 <wget_strlcpy@@Base+0x4b810>
   1097b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010980 <wget_update_file@plt>:
   10980:	endbr64 
   10984:	bnd jmp QWORD PTR [rip+0x6591d]        # 762a8 <wget_update_file@@Base+0x5bf28>
   1098b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010990 <OCSP_response_get1_basic@plt>:
   10990:	endbr64 
   10994:	bnd jmp QWORD PTR [rip+0x65915]        # 762b0 <OCSP_response_get1_basic@OPENSSL_3.0.0>
   1099b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000109a0 <pthread_cond_broadcast@plt>:
   109a0:	endbr64 
   109a4:	bnd jmp QWORD PTR [rip+0x6590d]        # 762b8 <pthread_cond_broadcast@GLIBC_2.3.2>
   109ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000109b0 <write@plt>:
   109b0:	endbr64 
   109b4:	bnd jmp QWORD PTR [rip+0x65905]        # 762c0 <write@GLIBC_2.2.5>
   109bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000109c0 <wget_hpkp_new@plt>:
   109c0:	endbr64 
   109c4:	bnd jmp QWORD PTR [rip+0x658fd]        # 762c8 <wget_hpkp_new@@Base+0x5aa98>
   109cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000109d0 <wget_hash_file_fd@plt>:
   109d0:	endbr64 
   109d4:	bnd jmp QWORD PTR [rip+0x658f5]        # 762d0 <wget_hash_file_fd@@Base+0x5d470>
   109db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000109e0 <strchr@plt>:
   109e0:	endbr64 
   109e4:	bnd jmp QWORD PTR [rip+0x658ed]        # 762d8 <strchr@GLIBC_2.2.5>
   109eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000109f0 <wget_http_parse_content_encoding@plt>:
   109f0:	endbr64 
   109f4:	bnd jmp QWORD PTR [rip+0x658e5]        # 762e0 <wget_http_parse_content_encoding@@Base+0x551c0>
   109fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010a00 <wget_tls_session_new@plt>:
   10a00:	endbr64 
   10a04:	bnd jmp QWORD PTR [rip+0x658dd]        # 762e8 <wget_tls_session_new@@Base+0x4b128>
   10a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010a10 <wget_http_parse_challenge@plt>:
   10a10:	endbr64 
   10a14:	bnd jmp QWORD PTR [rip+0x658d5]        # 762f0 <wget_http_parse_challenge@@Base+0x55c30>
   10a1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010a20 <EVP_MD_get_size@plt>:
   10a20:	endbr64 
   10a24:	bnd jmp QWORD PTR [rip+0x658cd]        # 762f8 <EVP_MD_get_size@OPENSSL_3.0.0>
   10a2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010a30 <wget_buffer_bufcat@plt>:
   10a30:	endbr64 
   10a34:	bnd jmp QWORD PTR [rip+0x658c5]        # 76300 <wget_buffer_bufcat@@Base+0x62060>
   10a3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010a40 <SSL_ctrl@plt>:
   10a40:	endbr64 
   10a44:	bnd jmp QWORD PTR [rip+0x658bd]        # 76308 <SSL_ctrl@OPENSSL_3.0.0>
   10a4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010a50 <BIO_free_all@plt>:
   10a50:	endbr64 
   10a54:	bnd jmp QWORD PTR [rip+0x658b5]        # 76310 <BIO_free_all@OPENSSL_3.0.0>
   10a5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010a60 <wget_http_add_header_vprintf@plt>:
   10a60:	endbr64 
   10a64:	bnd jmp QWORD PTR [rip+0x658ad]        # 76318 <wget_http_add_header_vprintf@@Base+0x58838>
   10a6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010a70 <strspn@plt>:
   10a70:	endbr64 
   10a74:	bnd jmp QWORD PTR [rip+0x658a5]        # 76320 <strspn@GLIBC_2.2.5>
   10a7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010a80 <wget_decompress_set_error_handler@plt>:
   10a80:	endbr64 
   10a84:	bnd jmp QWORD PTR [rip+0x6589d]        # 76328 <wget_decompress_set_error_handler@@Base+0x5e428>
   10a8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010a90 <OCSP_single_get0_status@plt>:
   10a90:	endbr64 
   10a94:	bnd jmp QWORD PTR [rip+0x65895]        # 76330 <OCSP_single_get0_status@OPENSSL_3.0.0>
   10a9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010aa0 <wget_vector_insert_sorted@plt>:
   10aa0:	endbr64 
   10aa4:	bnd jmp QWORD PTR [rip+0x6588d]        # 76338 <wget_vector_insert_sorted@@Base+0x496a8>
   10aab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010ab0 <strlen@plt>:
   10ab0:	endbr64 
   10ab4:	bnd jmp QWORD PTR [rip+0x65885]        # 76340 <strlen@GLIBC_2.2.5>
   10abb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010ac0 <memcmp@plt>:
   10ac0:	endbr64 
   10ac4:	bnd jmp QWORD PTR [rip+0x6587d]        # 76348 <memcmp@GLIBC_2.2.5>
   10acb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010ad0 <ASN1_TIME_adj@plt>:
   10ad0:	endbr64 
   10ad4:	bnd jmp QWORD PTR [rip+0x65875]        # 76350 <ASN1_TIME_adj@OPENSSL_3.0.0>
   10adb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010ae0 <mkdir@plt>:
   10ae0:	endbr64 
   10ae4:	bnd jmp QWORD PTR [rip+0x6586d]        # 76358 <mkdir@GLIBC_2.2.5>
   10aeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010af0 <wget_list_append@plt>:
   10af0:	endbr64 
   10af4:	bnd jmp QWORD PTR [rip+0x65865]        # 76360 <wget_list_append@@Base+0x51570>
   10afb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010b00 <unlink@plt>:
   10b00:	endbr64 
   10b04:	bnd jmp QWORD PTR [rip+0x6585d]        # 76368 <unlink@GLIBC_2.2.5>
   10b0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010b10 <strncmp@plt>:
   10b10:	endbr64 
   10b14:	bnd jmp QWORD PTR [rip+0x65855]        # 76370 <strncmp@GLIBC_2.2.5>
   10b1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010b20 <wget_hashmap_set_key_destructor@plt>:
   10b20:	endbr64 
   10b24:	bnd jmp QWORD PTR [rip+0x6584d]        # 76378 <wget_hashmap_set_key_destructor@@Base+0x5c718>
   10b2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010b30 <wget_utf8_to_str@plt>:
   10b30:	endbr64 
   10b34:	bnd jmp QWORD PTR [rip+0x65845]        # 76380 <wget_utf8_to_str@@Base+0x5db00>
   10b3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010b40 <OCSP_CERTID_free@plt>:
   10b40:	endbr64 
   10b44:	bnd jmp QWORD PTR [rip+0x6583d]        # 76388 <OCSP_CERTID_free@OPENSSL_3.0.0>
   10b4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010b50 <sigprocmask@plt>:
   10b50:	endbr64 
   10b54:	bnd jmp QWORD PTR [rip+0x65835]        # 76390 <sigprocmask@GLIBC_2.2.5>
   10b5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010b60 <wget_logger_set_func@plt>:
   10b60:	endbr64 
   10b64:	bnd jmp QWORD PTR [rip+0x6582d]        # 76398 <wget_logger_set_func@@Base+0x50ce8>
   10b6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010b70 <wget_hashmap_remove@plt>:
   10b70:	endbr64 
   10b74:	bnd jmp QWORD PTR [rip+0x65825]        # 763a0 <wget_hashmap_remove@@Base+0x5ca30>
   10b7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010b80 <getuid@plt>:
   10b80:	endbr64 
   10b84:	bnd jmp QWORD PTR [rip+0x6581d]        # 763a8 <getuid@GLIBC_2.2.5>
   10b8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010b90 <wget_http_parse_strict_transport_security@plt>:
   10b90:	endbr64 
   10b94:	bnd jmp QWORD PTR [rip+0x65815]        # 763b0 <wget_http_parse_strict_transport_security@@Base+0x553e0>
   10b9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010ba0 <send@plt>:
   10ba0:	endbr64 
   10ba4:	bnd jmp QWORD PTR [rip+0x6580d]        # 763b8 <send@GLIBC_2.2.5>
   10bab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010bb0 <wget_cookie_normalize_cookies@plt>:
   10bb0:	endbr64 
   10bb4:	bnd jmp QWORD PTR [rip+0x65805]        # 763c0 <wget_cookie_normalize_cookies@@Base+0x5eeb0>
   10bbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010bc0 <wget_decompress_open@plt>:
   10bc0:	endbr64 
   10bc4:	bnd jmp QWORD PTR [rip+0x657fd]        # 763c8 <wget_decompress_open@@Base+0x5e5c8>
   10bcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010bd0 <OPENSSL_sk_num@plt>:
   10bd0:	endbr64 
   10bd4:	bnd jmp QWORD PTR [rip+0x657f5]        # 763d0 <OPENSSL_sk_num@OPENSSL_3.0.0>
   10bdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010be0 <TLS_client_method@plt>:
   10be0:	endbr64 
   10be4:	bnd jmp QWORD PTR [rip+0x657ed]        # 763d8 <TLS_client_method@OPENSSL_3.0.0>
   10beb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010bf0 <SSL_version@plt>:
   10bf0:	endbr64 
   10bf4:	bnd jmp QWORD PTR [rip+0x657e5]        # 763e0 <SSL_version@OPENSSL_3.0.0>
   10bfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010c00 <wget_vector_get@plt>:
   10c00:	endbr64 
   10c04:	bnd jmp QWORD PTR [rip+0x657dd]        # 763e8 <wget_vector_get@@Base+0x49888>
   10c0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010c10 <getcwd@plt>:
   10c10:	endbr64 
   10c14:	bnd jmp QWORD PTR [rip+0x657d5]        # 763f0 <getcwd@GLIBC_2.2.5>
   10c1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010c20 <wget_http_parse_token@plt>:
   10c20:	endbr64 
   10c24:	bnd jmp QWORD PTR [rip+0x657cd]        # 763f8 <wget_http_parse_token@@Base+0x564e8>
   10c2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010c30 <wget_metalink_free@plt>:
   10c30:	endbr64 
   10c34:	bnd jmp QWORD PTR [rip+0x657c5]        # 76400 <wget_metalink_free@@Base+0x50270>
   10c3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010c40 <iswctype@plt>:
   10c40:	endbr64 
   10c44:	bnd jmp QWORD PTR [rip+0x657bd]        # 76408 <iswctype@GLIBC_2.2.5>
   10c4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010c50 <wget_cookie_db_init@plt>:
   10c50:	endbr64 
   10c54:	bnd jmp QWORD PTR [rip+0x657b5]        # 76410 <wget_cookie_db_init@@Base+0x5feb0>
   10c5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010c60 <wget_decompress_close@plt>:
   10c60:	endbr64 
   10c64:	bnd jmp QWORD PTR [rip+0x657ad]        # 76418 <wget_decompress_close@@Base+0x5e598>
   10c6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010c70 <iswpunct@plt>:
   10c70:	endbr64 
   10c74:	bnd jmp QWORD PTR [rip+0x657a5]        # 76420 <iswpunct@GLIBC_2.2.5>
   10c7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010c80 <dirfd@plt>:
   10c80:	endbr64 
   10c84:	bnd jmp QWORD PTR [rip+0x6579d]        # 76428 <dirfd@GLIBC_2.2.5>
   10c8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010c90 <wget_hashmap_put@plt>:
   10c90:	endbr64 
   10c94:	bnd jmp QWORD PTR [rip+0x65795]        # 76430 <wget_hashmap_put@@Base+0x5ccf0>
   10c9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010ca0 <memset@plt>:
   10ca0:	endbr64 
   10ca4:	bnd jmp QWORD PTR [rip+0x6578d]        # 76438 <memset@GLIBC_2.2.5>
   10cab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010cb0 <abort@plt>:
   10cb0:	endbr64 
   10cb4:	bnd jmp QWORD PTR [rip+0x65785]        # 76440 <abort@GLIBC_2.2.5>
   10cbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010cc0 <wctype@plt>:
   10cc0:	endbr64 
   10cc4:	bnd jmp QWORD PTR [rip+0x6577d]        # 76448 <wctype@GLIBC_2.2.5>
   10ccb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010cd0 <wget_dns_resolve@plt>:
   10cd0:	endbr64 
   10cd4:	bnd jmp QWORD PTR [rip+0x65775]        # 76450 <wget_dns_resolve@@Base+0x46c60>
   10cdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010ce0 <SSL_get0_alpn_selected@plt>:
   10ce0:	endbr64 
   10ce4:	bnd jmp QWORD PTR [rip+0x6576d]        # 76458 <SSL_get0_alpn_selected@OPENSSL_3.0.0>
   10ceb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010cf0 <wget_bar_deinit@plt>:
   10cf0:	endbr64 
   10cf4:	bnd jmp QWORD PTR [rip+0x65765]        # 76460 <wget_bar_deinit@@Base+0x62b70>
   10cfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010d00 <SSL_free@plt>:
   10d00:	endbr64 
   10d04:	bnd jmp QWORD PTR [rip+0x6575d]        # 76468 <SSL_free@OPENSSL_3.0.0>
   10d0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010d10 <munmap@plt>:
   10d10:	endbr64 
   10d14:	bnd jmp QWORD PTR [rip+0x65755]        # 76470 <munmap@GLIBC_2.2.5>
   10d1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010d20 <wget_ocsp_db_deinit@plt>:
   10d20:	endbr64 
   10d24:	bnd jmp QWORD PTR [rip+0x6574d]        # 76478 <wget_ocsp_db_deinit@@Base+0x4db38>
   10d2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010d30 <wget_ocsp_fingerprint_in_cache@plt>:
   10d30:	endbr64 
   10d34:	bnd jmp QWORD PTR [rip+0x65745]        # 76480 <wget_ocsp_fingerprint_in_cache@@Base+0x4dcb0>
   10d3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010d40 <fcntl@plt>:
   10d40:	endbr64 
   10d44:	bnd jmp QWORD PTR [rip+0x6573d]        # 76488 <fcntl@GLIBC_2.2.5>
   10d4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010d50 <wget_vector_setcmpfunc@plt>:
   10d50:	endbr64 
   10d54:	bnd jmp QWORD PTR [rip+0x65735]        # 76490 <wget_vector_setcmpfunc@@Base+0x49880>
   10d5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010d60 <futimesat@plt>:
   10d60:	endbr64 
   10d64:	bnd jmp QWORD PTR [rip+0x6572d]        # 76498 <futimesat@GLIBC_2.4>
   10d6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010d70 <wget_console_init@plt>:
   10d70:	endbr64 
   10d74:	bnd jmp QWORD PTR [rip+0x65725]        # 764a0 <wget_console_init@@Base+0x60b50>
   10d7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010d80 <utimensat@plt>:
   10d80:	endbr64 
   10d84:	bnd jmp QWORD PTR [rip+0x6571d]        # 764a8 <utimensat@GLIBC_2.6>
   10d8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010d90 <OCSP_SINGLERESP_get0_id@plt>:
   10d90:	endbr64 
   10d94:	bnd jmp QWORD PTR [rip+0x65715]        # 764b0 <OCSP_SINGLERESP_get0_id@OPENSSL_3.0.0>
   10d9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010da0 <fseeko@plt>:
   10da0:	endbr64 
   10da4:	bnd jmp QWORD PTR [rip+0x6570d]        # 764b8 <fseeko@GLIBC_2.2.5>
   10dab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010db0 <wget_getline@plt>:
   10db0:	endbr64 
   10db4:	bnd jmp QWORD PTR [rip+0x65705]        # 764c0 <wget_getline@@Base+0x5c480>
   10dbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010dc0 <wget_memdup@plt>:
   10dc0:	endbr64 
   10dc4:	bnd jmp QWORD PTR [rip+0x656fd]        # 764c8 <wget_memdup@@Base+0x50d08>
   10dcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010dd0 <__sprintf_chk@plt>:
   10dd0:	endbr64 
   10dd4:	bnd jmp QWORD PTR [rip+0x656f5]        # 764d0 <__sprintf_chk@GLIBC_2.3.4>
   10ddb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010de0 <wget_millisleep@plt>:
   10de0:	endbr64 
   10de4:	bnd jmp QWORD PTR [rip+0x656ed]        # 764d8 <wget_millisleep@@Base+0x4a708>
   10deb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010df0 <SSL_set_fd@plt>:
   10df0:	endbr64 
   10df4:	bnd jmp QWORD PTR [rip+0x656e5]        # 764e0 <SSL_set_fd@OPENSSL_3.0.0>
   10dfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010e00 <mbtowc@plt>:
   10e00:	endbr64 
   10e04:	bnd jmp QWORD PTR [rip+0x656dd]        # 764e8 <mbtowc@GLIBC_2.2.5>
   10e0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010e10 <wget_http_request_set_body_cb@plt>:
   10e10:	endbr64 
   10e14:	bnd jmp QWORD PTR [rip+0x656d5]        # 764f0 <wget_http_request_set_body_cb@@Base+0x58bb0>
   10e1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010e20 <mbrtoc32@plt>:
   10e20:	endbr64 
   10e24:	bnd jmp QWORD PTR [rip+0x656cd]        # 764f8 <mbrtoc32@GLIBC_2.16>
   10e2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010e30 <__snprintf_chk@plt>:
   10e30:	endbr64 
   10e34:	bnd jmp QWORD PTR [rip+0x656c5]        # 76500 <__snprintf_chk@GLIBC_2.3.4>
   10e3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010e40 <wget_buffer_strcat@plt>:
   10e40:	endbr64 
   10e44:	bnd jmp QWORD PTR [rip+0x656bd]        # 76508 <wget_buffer_strcat@@Base+0x622d8>
   10e4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010e50 <wget_get_screen_size@plt>:
   10e50:	endbr64 
   10e54:	bnd jmp QWORD PTR [rip+0x656b5]        # 76510 <wget_get_screen_size@@Base+0x4a2c0>
   10e5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010e60 <wget_logger_get_file@plt>:
   10e60:	endbr64 
   10e64:	bnd jmp QWORD PTR [rip+0x656ad]        # 76518 <wget_logger_get_file@@Base+0x50d88>
   10e6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010e70 <EVP_Digest@plt>:
   10e70:	endbr64 
   10e74:	bnd jmp QWORD PTR [rip+0x656a5]        # 76520 <EVP_Digest@OPENSSL_3.0.0>
   10e7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010e80 <rename@plt>:
   10e80:	endbr64 
   10e84:	bnd jmp QWORD PTR [rip+0x6569d]        # 76528 <rename@GLIBC_2.2.5>
   10e8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010e90 <wget_vector_size@plt>:
   10e90:	endbr64 
   10e94:	bnd jmp QWORD PTR [rip+0x65695]        # 76530 <wget_vector_size@@Base+0x499e0>
   10e9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010ea0 <wget_buffer_memcat@plt>:
   10ea0:	endbr64 
   10ea4:	bnd jmp QWORD PTR [rip+0x6568d]        # 76538 <wget_buffer_memcat@@Base+0x62428>
   10eab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010eb0 <getnameinfo@plt>:
   10eb0:	endbr64 
   10eb4:	bnd jmp QWORD PTR [rip+0x65685]        # 76540 <getnameinfo@GLIBC_2.2.5>
   10ebb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010ec0 <pthread_rwlockattr_init@plt>:
   10ec0:	endbr64 
   10ec4:	bnd jmp QWORD PTR [rip+0x6567d]        # 76548 <pthread_rwlockattr_init@GLIBC_2.34>
   10ecb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010ed0 <EVP_DigestFinal_ex@plt>:
   10ed0:	endbr64 
   10ed4:	bnd jmp QWORD PTR [rip+0x65675]        # 76550 <EVP_DigestFinal_ex@OPENSSL_3.0.0>
   10edb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010ee0 <wget_base64_encode_printf_alloc@plt>:
   10ee0:	endbr64 
   10ee4:	bnd jmp QWORD PTR [rip+0x6566d]        # 76558 <wget_base64_encode_printf_alloc@@Base+0x60d48>
   10eeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010ef0 <wget_vector_browse@plt>:
   10ef0:	endbr64 
   10ef4:	bnd jmp QWORD PTR [rip+0x65665]        # 76560 <wget_vector_browse@@Base+0x499d0>
   10efb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010f00 <pipe2@plt>:
   10f00:	endbr64 
   10f04:	bnd jmp QWORD PTR [rip+0x6565d]        # 76568 <pipe2@GLIBC_2.9>
   10f0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010f10 <CRYPTO_free@plt>:
   10f10:	endbr64 
   10f14:	bnd jmp QWORD PTR [rip+0x65655]        # 76570 <CRYPTO_free@OPENSSL_3.0.0>
   10f1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010f20 <pthread_rwlockattr_destroy@plt>:
   10f20:	endbr64 
   10f24:	bnd jmp QWORD PTR [rip+0x6564d]        # 76578 <pthread_rwlockattr_destroy@GLIBC_2.34>
   10f2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010f30 <initstate_r@plt>:
   10f30:	endbr64 
   10f34:	bnd jmp QWORD PTR [rip+0x65645]        # 76580 <initstate_r@GLIBC_2.2.5>
   10f3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010f40 <wget_tcp_vprintf@plt>:
   10f40:	endbr64 
   10f44:	bnd jmp QWORD PTR [rip+0x6563d]        # 76588 <wget_tcp_vprintf@@Base+0x4f908>
   10f4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010f50 <calloc@plt>:
   10f50:	endbr64 
   10f54:	bnd jmp QWORD PTR [rip+0x65635]        # 76590 <calloc@GLIBC_2.2.5>
   10f5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010f60 <clock@plt>:
   10f60:	endbr64 
   10f64:	bnd jmp QWORD PTR [rip+0x6562d]        # 76598 <clock@GLIBC_2.2.5>
   10f6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010f70 <wget_logger_get_func@plt>:
   10f70:	endbr64 
   10f74:	bnd jmp QWORD PTR [rip+0x65625]        # 765a0 <wget_logger_get_func@@Base+0x50ec0>
   10f7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010f80 <OCSP_response_status@plt>:
   10f80:	endbr64 
   10f84:	bnd jmp QWORD PTR [rip+0x6561d]        # 765a8 <OCSP_response_status@OPENSSL_3.0.0>
   10f8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010f90 <dcgettext@plt>:
   10f90:	endbr64 
   10f94:	bnd jmp QWORD PTR [rip+0x65615]        # 765b0 <dcgettext@GLIBC_2.2.5>
   10f9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010fa0 <wget_http_parse_content_type@plt>:
   10fa0:	endbr64 
   10fa4:	bnd jmp QWORD PTR [rip+0x6560d]        # 765b8 <wget_http_parse_content_type@@Base+0x55bb8>
   10fab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010fb0 <wget_tls_session_db_deinit@plt>:
   10fb0:	endbr64 
   10fb4:	bnd jmp QWORD PTR [rip+0x65605]        # 765c0 <wget_tls_session_db_deinit@@Base+0x4b190>
   10fbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010fc0 <wget_tcp_connect@plt>:
   10fc0:	endbr64 
   10fc4:	bnd jmp QWORD PTR [rip+0x655fd]        # 765c8 <wget_tcp_connect@@Base+0x4f688>
   10fcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010fd0 <wget_cookie_parse_setcookie@plt>:
   10fd0:	endbr64 
   10fd4:	bnd jmp QWORD PTR [rip+0x655f5]        # 765d0 <wget_cookie_parse_setcookie@@Base+0x5f710>
   10fdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010fe0 <wget_iri_issubdelim@plt>:
   10fe0:	endbr64 
   10fe4:	bnd jmp QWORD PTR [rip+0x655ed]        # 765d8 <wget_iri_issubdelim@@Base+0x53078>
   10feb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000010ff0 <wget_vfprintf@plt>:
   10ff0:	endbr64 
   10ff4:	bnd jmp QWORD PTR [rip+0x655e5]        # 765e0 <wget_vfprintf@@Base+0x4cb60>
   10ffb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011000 <wget_iri_parse@plt>:
   11000:	endbr64 
   11004:	bnd jmp QWORD PTR [rip+0x655dd]        # 765e8 <wget_iri_parse@@Base+0x52ed8>
   1100b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011010 <utimes@plt>:
   11010:	endbr64 
   11014:	bnd jmp QWORD PTR [rip+0x655d5]        # 765f0 <utimes@GLIBC_2.2.5>
   1101b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011020 <wget_get_timemillis@plt>:
   11020:	endbr64 
   11024:	bnd jmp QWORD PTR [rip+0x655cd]        # 765f8 <wget_get_timemillis@@Base+0x4a7a8>
   1102b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011030 <strchrnul@plt>:
   11030:	endbr64 
   11034:	bnd jmp QWORD PTR [rip+0x655c5]        # 76600 <strchrnul@GLIBC_2.2.5>
   1103b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011040 <wget_cookie_check_psl@plt>:
   11040:	endbr64 
   11044:	bnd jmp QWORD PTR [rip+0x655bd]        # 76608 <wget_cookie_check_psl@@Base+0x60a58>
   1104b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011050 <wget_cookie_store_cookies@plt>:
   11050:	endbr64 
   11054:	bnd jmp QWORD PTR [rip+0x655b5]        # 76610 <wget_cookie_store_cookies@@Base+0x60410>
   1105b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011060 <ASN1_GENERALIZEDTIME_print@plt>:
   11060:	endbr64 
   11064:	bnd jmp QWORD PTR [rip+0x655ad]        # 76618 <ASN1_GENERALIZEDTIME_print@OPENSSL_3.0.0>
   1106b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011070 <open@plt>:
   11070:	endbr64 
   11074:	bnd jmp QWORD PTR [rip+0x655a5]        # 76620 <open@GLIBC_2.2.5>
   1107b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011080 <wget_buffer_vprintf@plt>:
   11080:	endbr64 
   11084:	bnd jmp QWORD PTR [rip+0x6559d]        # 76628 <wget_buffer_vprintf@@Base+0x614f8>
   1108b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011090 <wget_xml_parse_buffer@plt>:
   11090:	endbr64 
   11094:	bnd jmp QWORD PTR [rip+0x65595]        # 76630 <wget_xml_parse_buffer@@Base+0x48770>
   1109b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000110a0 <X509_STORE_set_flags@plt>:
   110a0:	endbr64 
   110a4:	bnd jmp QWORD PTR [rip+0x6558d]        # 76638 <X509_STORE_set_flags@OPENSSL_3.0.0>
   110ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000110b0 <wget_base64_encode_vprintf_alloc@plt>:
   110b0:	endbr64 
   110b4:	bnd jmp QWORD PTR [rip+0x65585]        # 76640 <wget_base64_encode_vprintf_alloc@@Base+0x60eb0>
   110bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000110c0 <i2d_X509@plt>:
   110c0:	endbr64 
   110c4:	bnd jmp QWORD PTR [rip+0x6557d]        # 76648 <i2d_X509@OPENSSL_3.0.0>
   110cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000110d0 <pthread_mutex_unlock@plt>:
   110d0:	endbr64 
   110d4:	bnd jmp QWORD PTR [rip+0x65575]        # 76650 <pthread_mutex_unlock@GLIBC_2.2.5>
   110db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000110e0 <pthread_rwlock_init@plt>:
   110e0:	endbr64 
   110e4:	bnd jmp QWORD PTR [rip+0x6556d]        # 76658 <pthread_rwlock_init@GLIBC_2.34>
   110eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000110f0 <recvfrom@plt>:
   110f0:	endbr64 
   110f4:	bnd jmp QWORD PTR [rip+0x65565]        # 76660 <recvfrom@GLIBC_2.2.5>
   110fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011100 <wget_fd_popen3@plt>:
   11100:	endbr64 
   11104:	bnd jmp QWORD PTR [rip+0x6555d]        # 76668 <wget_fd_popen3@@Base+0x4d4a8>
   1110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011110 <wget_http_free_cookies@plt>:
   11110:	endbr64 
   11114:	bnd jmp QWORD PTR [rip+0x65555]        # 76670 <wget_http_free_cookies@@Base+0x544c0>
   1111b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011120 <iswspace@plt>:
   11120:	endbr64 
   11124:	bnd jmp QWORD PTR [rip+0x6554d]        # 76678 <iswspace@GLIBC_2.2.5>
   1112b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011130 <iconv_open@plt>:
   11130:	endbr64 
   11134:	bnd jmp QWORD PTR [rip+0x65545]        # 76680 <iconv_open@GLIBC_2.2.5>
   1113b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011140 <EVP_DigestInit_ex@plt>:
   11140:	endbr64 
   11144:	bnd jmp QWORD PTR [rip+0x6553d]        # 76688 <EVP_DigestInit_ex@OPENSSL_3.0.0>
   1114b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011150 <wget_tcp_get_tcp_fastopen@plt>:
   11150:	endbr64 
   11154:	bnd jmp QWORD PTR [rip+0x65535]        # 76690 <wget_tcp_get_tcp_fastopen@@Base+0x50200>
   1115b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011160 <execvp@plt>:
   11160:	endbr64 
   11164:	bnd jmp QWORD PTR [rip+0x6552d]        # 76698 <execvp@GLIBC_2.2.5>
   1116b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011170 <wget_bar_vprintf@plt>:
   11170:	endbr64 
   11174:	bnd jmp QWORD PTR [rip+0x65525]        # 766a0 <wget_bar_vprintf@@Base+0x62bf0>
   1117b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011180 <waitpid@plt>:
   11180:	endbr64 
   11184:	bnd jmp QWORD PTR [rip+0x6551d]        # 766a8 <waitpid@GLIBC_2.2.5>
   1118b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011190 <wget_ssl_init@plt>:
   11190:	endbr64 
   11194:	bnd jmp QWORD PTR [rip+0x65515]        # 766b0 <wget_ssl_init@@Base+0x45bf0>
   1119b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000111a0 <wget_base64_decode@plt>:
   111a0:	endbr64 
   111a4:	bnd jmp QWORD PTR [rip+0x6550d]        # 766b8 <wget_base64_decode@@Base+0x611e8>
   111ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000111b0 <wget_iri_get_escaped_host@plt>:
   111b0:	endbr64 
   111b4:	bnd jmp QWORD PTR [rip+0x65505]        # 766c0 <wget_iri_get_escaped_host@@Base+0x51e80>
   111bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000111c0 <wget_tcp_set_bind_interface@plt>:
   111c0:	endbr64 
   111c4:	bnd jmp QWORD PTR [rip+0x654fd]        # 766c8 <wget_tcp_set_bind_interface@@Base+0x4fe38>
   111cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000111d0 <iconv_close@plt>:
   111d0:	endbr64 
   111d4:	bnd jmp QWORD PTR [rip+0x654f5]        # 766d0 <iconv_close@GLIBC_2.2.5>
   111db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000111e0 <random_r@plt>:
   111e0:	endbr64 
   111e4:	bnd jmp QWORD PTR [rip+0x654ed]        # 766d8 <random_r@GLIBC_2.2.5>
   111eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000111f0 <wget_buffer_free@plt>:
   111f0:	endbr64 
   111f4:	bnd jmp QWORD PTR [rip+0x654e5]        # 766e0 <wget_buffer_free@@Base+0x62670>
   111fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011200 <wget_base64_encode_alloc@plt>:
   11200:	endbr64 
   11204:	bnd jmp QWORD PTR [rip+0x654dd]        # 766e8 <wget_base64_encode_alloc@@Base+0x60fa8>
   1120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011210 <SSL_get0_verified_chain@plt>:
   11210:	endbr64 
   11214:	bnd jmp QWORD PTR [rip+0x654d5]        # 766f0 <SSL_get0_verified_chain@OPENSSL_3.0.0>
   1121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011220 <memcpy@plt>:
   11220:	endbr64 
   11224:	bnd jmp QWORD PTR [rip+0x654cd]        # 766f8 <memcpy@GLIBC_2.14>
   1122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011230 <__freading@plt>:
   11230:	endbr64 
   11234:	bnd jmp QWORD PTR [rip+0x654c5]        # 76700 <__freading@GLIBC_2.2.5>
   1123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011240 <connect@plt>:
   11240:	endbr64 
   11244:	bnd jmp QWORD PTR [rip+0x654bd]        # 76708 <connect@GLIBC_2.2.5>
   1124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011250 <SSL_set_session@plt>:
   11250:	endbr64 
   11254:	bnd jmp QWORD PTR [rip+0x654b5]        # 76710 <SSL_set_session@OPENSSL_3.0.0>
   1125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011260 <wget_hpkp_set_maxage@plt>:
   11260:	endbr64 
   11264:	bnd jmp QWORD PTR [rip+0x654ad]        # 76718 <wget_hpkp_set_maxage@@Base+0x5ae78>
   1126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011270 <CRYPTO_get_ex_new_index@plt>:
   11270:	endbr64 
   11274:	bnd jmp QWORD PTR [rip+0x654a5]        # 76720 <CRYPTO_get_ex_new_index@OPENSSL_3.0.0>
   1127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011280 <wget_iri_free_content@plt>:
   11280:	endbr64 
   11284:	bnd jmp QWORD PTR [rip+0x6549d]        # 76728 <wget_iri_free_content@@Base+0x53138>
   1128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011290 <wget_vector_add@plt>:
   11290:	endbr64 
   11294:	bnd jmp QWORD PTR [rip+0x65495]        # 76730 <wget_vector_add@@Base+0x4a190>
   1129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000112a0 <wget_info_printf@plt>:
   112a0:	endbr64 
   112a4:	bnd jmp QWORD PTR [rip+0x6548d]        # 76738 <wget_info_printf@@Base+0x516c8>
   112ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000112b0 <wget_tcp_close@plt>:
   112b0:	endbr64 
   112b4:	bnd jmp QWORD PTR [rip+0x65485]        # 76740 <wget_tcp_close@@Base+0x4f910>
   112bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000112c0 <wget_percent_unescape@plt>:
   112c0:	endbr64 
   112c4:	bnd jmp QWORD PTR [rip+0x6547d]        # 76748 <wget_percent_unescape@@Base+0x4a888>
   112cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000112d0 <wget_http_parse_etag@plt>:
   112d0:	endbr64 
   112d4:	bnd jmp QWORD PTR [rip+0x65475]        # 76750 <wget_http_parse_etag@@Base+0x55430>
   112db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000112e0 <wget_css_parse_buffer@plt>:
   112e0:	endbr64 
   112e4:	bnd jmp QWORD PTR [rip+0x6546d]        # 76758 <wget_css_parse_buffer@@Base+0x5f1d8>
   112eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000112f0 <CRYPTO_free_ex_index@plt>:
   112f0:	endbr64 
   112f4:	bnd jmp QWORD PTR [rip+0x65465]        # 76760 <CRYPTO_free_ex_index@OPENSSL_3.0.0>
   112fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011300 <wget_buffer_deinit@plt>:
   11300:	endbr64 
   11304:	bnd jmp QWORD PTR [rip+0x6545d]        # 76768 <wget_buffer_deinit@@Base+0x62758>
   1130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011310 <wget_http_free_response@plt>:
   11310:	endbr64 
   11314:	bnd jmp QWORD PTR [rip+0x65455]        # 76770 <wget_http_free_response@@Base+0x54580>
   1131b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011320 <wget_hash@plt>:
   11320:	endbr64 
   11324:	bnd jmp QWORD PTR [rip+0x6544d]        # 76778 <wget_hash@@Base+0x5d978>
   1132b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011330 <wget_http_set_no_proxy@plt>:
   11330:	endbr64 
   11334:	bnd jmp QWORD PTR [rip+0x65445]        # 76780 <wget_http_set_no_proxy@@Base+0x57230>
   1133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011340 <wget_decompress@plt>:
   11340:	endbr64 
   11344:	bnd jmp QWORD PTR [rip+0x6543d]        # 76788 <wget_decompress@@Base+0x5e8c8>
   1134b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011350 <wget_hpkp_db_check_pubkey@plt>:
   11350:	endbr64 
   11354:	bnd jmp QWORD PTR [rip+0x65435]        # 76790 <wget_hpkp_db_check_pubkey@@Base+0x5aa90>
   1135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011360 <OCSP_basic_verify@plt>:
   11360:	endbr64 
   11364:	bnd jmp QWORD PTR [rip+0x6542d]        # 76798 <OCSP_basic_verify@OPENSSL_3.0.0>
   1136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011370 <OCSP_cert_to_id@plt>:
   11370:	endbr64 
   11374:	bnd jmp QWORD PTR [rip+0x65425]        # 767a0 <OCSP_cert_to_id@OPENSSL_3.0.0>
   1137b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011380 <BIO_s_mem@plt>:
   11380:	endbr64 
   11384:	bnd jmp QWORD PTR [rip+0x6541d]        # 767a8 <BIO_s_mem@OPENSSL_3.0.0>
   1138b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011390 <X509_check_issued@plt>:
   11390:	endbr64 
   11394:	bnd jmp QWORD PTR [rip+0x65415]        # 767b0 <X509_check_issued@OPENSSL_3.0.0>
   1139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000113a0 <wget_http_parse_digest@plt>:
   113a0:	endbr64 
   113a4:	bnd jmp QWORD PTR [rip+0x6540d]        # 767b8 <wget_http_parse_digest@@Base+0x56218>
   113ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000113b0 <__cxa_atexit@plt>:
   113b0:	endbr64 
   113b4:	bnd jmp QWORD PTR [rip+0x65405]        # 767c0 <__cxa_atexit@GLIBC_2.2.5>
   113bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000113c0 <pthread_self@plt>:
   113c0:	endbr64 
   113c4:	bnd jmp QWORD PTR [rip+0x653fd]        # 767c8 <pthread_self@GLIBC_2.2.5>
   113cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000113d0 <X509_STORE_add_lookup@plt>:
   113d0:	endbr64 
   113d4:	bnd jmp QWORD PTR [rip+0x653f5]        # 767d0 <X509_STORE_add_lookup@OPENSSL_3.0.0>
   113db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000113e0 <pthread_join@plt>:
   113e0:	endbr64 
   113e4:	bnd jmp QWORD PTR [rip+0x653ed]        # 767d8 <pthread_join@GLIBC_2.34>
   113eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000113f0 <wget_console_set_fg_color@plt>:
   113f0:	endbr64 
   113f4:	bnd jmp QWORD PTR [rip+0x653e5]        # 767e0 <wget_console_set_fg_color@@Base+0x60eb0>
   113fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011400 <setlocale@plt>:
   11400:	endbr64 
   11404:	bnd jmp QWORD PTR [rip+0x653dd]        # 767e8 <setlocale@GLIBC_2.2.5>
   1140b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011410 <SSL_CTX_ctrl@plt>:
   11410:	endbr64 
   11414:	bnd jmp QWORD PTR [rip+0x653d5]        # 767f0 <SSL_CTX_ctrl@OPENSSL_3.0.0>
   1141b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011420 <stat@plt>:
   11420:	endbr64 
   11424:	bnd jmp QWORD PTR [rip+0x653cd]        # 767f8 <stat@GLIBC_2.33>
   1142b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011430 <towlower@plt>:
   11430:	endbr64 
   11434:	bnd jmp QWORD PTR [rip+0x653c5]        # 76800 <towlower@GLIBC_2.2.5>
   1143b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011440 <posix_spawn_file_actions_adddup2@plt>:
   11440:	endbr64 
   11444:	bnd jmp QWORD PTR [rip+0x653bd]        # 76808 <posix_spawn_file_actions_adddup2@GLIBC_2.2.5>
   1144b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011450 <i2d_PUBKEY@plt>:
   11450:	endbr64 
   11454:	bnd jmp QWORD PTR [rip+0x653b5]        # 76810 <i2d_PUBKEY@OPENSSL_3.0.0>
   1145b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011460 <clock_gettime@plt>:
   11460:	endbr64 
   11464:	bnd jmp QWORD PTR [rip+0x653ad]        # 76818 <clock_gettime@GLIBC_2.17>
   1146b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011470 <wget_ready_2_transfer@plt>:
   11470:	endbr64 
   11474:	bnd jmp QWORD PTR [rip+0x653a5]        # 76820 <wget_ready_2_transfer@@Base+0x5c7d0>
   1147b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011480 <time@plt>:
   11480:	endbr64 
   11484:	bnd jmp QWORD PTR [rip+0x6539d]        # 76828 <time@GLIBC_2.2.5>
   1148b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011490 <getsockname@plt>:
   11490:	endbr64 
   11494:	bnd jmp QWORD PTR [rip+0x65395]        # 76830 <getsockname@GLIBC_2.2.5>
   1149b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000114a0 <dup2@plt>:
   114a0:	endbr64 
   114a4:	bnd jmp QWORD PTR [rip+0x6538d]        # 76838 <dup2@GLIBC_2.2.5>
   114ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000114b0 <wget_debug_printf@plt>:
   114b0:	endbr64 
   114b4:	bnd jmp QWORD PTR [rip+0x65385]        # 76840 <wget_debug_printf@@Base+0x51510>
   114bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000114c0 <wget_str_to_ascii@plt>:
   114c0:	endbr64 
   114c4:	bnd jmp QWORD PTR [rip+0x6537d]        # 76848 <wget_str_to_ascii@@Base+0x5dfa8>
   114cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000114d0 <wget_tcp_read@plt>:
   114d0:	endbr64 
   114d4:	bnd jmp QWORD PTR [rip+0x65375]        # 76850 <wget_tcp_read@@Base+0x4fdd0>
   114db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000114e0 <strcpy@plt>:
   114e0:	endbr64 
   114e4:	bnd jmp QWORD PTR [rip+0x6536d]        # 76858 <strcpy@GLIBC_2.2.5>
   114eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000114f0 <wget_hpkp_set_include_subdomains@plt>:
   114f0:	endbr64 
   114f4:	bnd jmp QWORD PTR [rip+0x65365]        # 76860 <wget_hpkp_set_include_subdomains@@Base+0x5af60>
   114fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011500 <pthread_once@plt>:
   11500:	endbr64 
   11504:	bnd jmp QWORD PTR [rip+0x6535d]        # 76868 <pthread_once@GLIBC_2.34>
   1150b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011510 <futimens@plt>:
   11510:	endbr64 
   11514:	bnd jmp QWORD PTR [rip+0x65355]        # 76870 <futimens@GLIBC_2.6>
   1151b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011520 <wget_hash_get_algorithm@plt>:
   11520:	endbr64 
   11524:	bnd jmp QWORD PTR [rip+0x6534d]        # 76878 <wget_hash_get_algorithm@@Base+0x5dd78>
   1152b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011530 <wget_strmemcpy@plt>:
   11530:	endbr64 
   11534:	bnd jmp QWORD PTR [rip+0x65345]        # 76880 <wget_strmemcpy@@Base+0x50fd0>
   1153b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011540 <SSL_CTX_set_cipher_list@plt>:
   11540:	endbr64 
   11544:	bnd jmp QWORD PTR [rip+0x6533d]        # 76888 <SSL_CTX_set_cipher_list@OPENSSL_3.0.0>
   1154b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011550 <wget_hash_init@plt>:
   11550:	endbr64 
   11554:	bnd jmp QWORD PTR [rip+0x65335]        # 76890 <wget_hash_init@@Base+0x5db50>
   1155b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011560 <nl_langinfo@plt>:
   11560:	endbr64 
   11564:	bnd jmp QWORD PTR [rip+0x6532d]        # 76898 <nl_langinfo@GLIBC_2.2.5>
   1156b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011570 <wget_http_free_digests@plt>:
   11570:	endbr64 
   11574:	bnd jmp QWORD PTR [rip+0x65325]        # 768a0 <wget_http_free_digests@@Base+0x54710>
   1157b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011580 <__isoc99_sscanf@plt>:
   11580:	endbr64 
   11584:	bnd jmp QWORD PTR [rip+0x6531d]        # 768a8 <__isoc99_sscanf@GLIBC_2.7>
   1158b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011590 <fclose@plt>:
   11590:	endbr64 
   11594:	bnd jmp QWORD PTR [rip+0x65315]        # 768b0 <fclose@GLIBC_2.2.5>
   1159b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000115a0 <wget_ssl_close@plt>:
   115a0:	endbr64 
   115a4:	bnd jmp QWORD PTR [rip+0x6530d]        # 768b8 <wget_ssl_close@@Base+0x44768>
   115ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000115b0 <wget_http_init@plt>:
   115b0:	endbr64 
   115b4:	bnd jmp QWORD PTR [rip+0x65305]        # 768c0 <wget_http_init@@Base+0x58fe0>
   115bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000115c0 <raise@plt>:
   115c0:	endbr64 
   115c4:	bnd jmp QWORD PTR [rip+0x652fd]        # 768c8 <raise@GLIBC_2.2.5>
   115cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000115d0 <SSL_new@plt>:
   115d0:	endbr64 
   115d4:	bnd jmp QWORD PTR [rip+0x652f5]        # 768d0 <SSL_new@OPENSSL_3.0.0>
   115db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000115e0 <wget_cookie_set_keep_session_cookies@plt>:
   115e0:	endbr64 
   115e4:	bnd jmp QWORD PTR [rip+0x652ed]        # 768d8 <wget_cookie_set_keep_session_cookies@@Base+0x60278>
   115eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000115f0 <X509_get0_pubkey@plt>:
   115f0:	endbr64 
   115f4:	bnd jmp QWORD PTR [rip+0x652e5]        # 768e0 <X509_get0_pubkey@OPENSSL_3.0.0>
   115fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011600 <wcwidth@plt>:
   11600:	endbr64 
   11604:	bnd jmp QWORD PTR [rip+0x652dd]        # 768e8 <wcwidth@GLIBC_2.2.5>
   1160b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011610 <stpcpy@plt>:
   11610:	endbr64 
   11614:	bnd jmp QWORD PTR [rip+0x652d5]        # 768f0 <stpcpy@GLIBC_2.2.5>
   1161b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011620 <wget_get_logger@plt>:
   11620:	endbr64 
   11624:	bnd jmp QWORD PTR [rip+0x652cd]        # 768f8 <wget_get_logger@@Base+0x514c8>
   1162b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011630 <wget_cookie_db_load_psl@plt>:
   11630:	endbr64 
   11634:	bnd jmp QWORD PTR [rip+0x652c5]        # 76900 <wget_cookie_db_load_psl@@Base+0x60d60>
   1163b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011640 <wget_dns_set_cache@plt>:
   11640:	endbr64 
   11644:	bnd jmp QWORD PTR [rip+0x652bd]        # 76908 <wget_dns_set_cache@@Base+0x47298>
   1164b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011650 <fileno@plt>:
   11650:	endbr64 
   11654:	bnd jmp QWORD PTR [rip+0x652b5]        # 76910 <fileno@GLIBC_2.2.5>
   1165b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011660 <fdopen@plt>:
   11660:	endbr64 
   11664:	bnd jmp QWORD PTR [rip+0x652ad]        # 76918 <fdopen@GLIBC_2.2.5>
   1166b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011670 <wget_human_readable@plt>:
   11670:	endbr64 
   11674:	bnd jmp QWORD PTR [rip+0x652a5]        # 76920 <wget_human_readable@@Base+0x4a7f0>
   1167b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011680 <wget_http_parse_location@plt>:
   11680:	endbr64 
   11684:	bnd jmp QWORD PTR [rip+0x6529d]        # 76928 <wget_http_parse_location@@Base+0x56058>
   1168b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011690 <readlink@plt>:
   11690:	endbr64 
   11694:	bnd jmp QWORD PTR [rip+0x65295]        # 76930 <readlink@GLIBC_2.2.5>
   1169b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000116a0 <X509_email_free@plt>:
   116a0:	endbr64 
   116a4:	bnd jmp QWORD PTR [rip+0x6528d]        # 76938 <X509_email_free@OPENSSL_3.0.0>
   116ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000116b0 <wget_vector_remove_nofree@plt>:
   116b0:	endbr64 
   116b4:	bnd jmp QWORD PTR [rip+0x65285]        # 76940 <wget_vector_remove_nofree@@Base+0x4a140>
   116bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000116c0 <__ctype_b_loc@plt>:
   116c0:	endbr64 
   116c4:	bnd jmp QWORD PTR [rip+0x6527d]        # 76948 <__ctype_b_loc@GLIBC_2.3>
   116cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000116d0 <wget_netrc_init@plt>:
   116d0:	endbr64 
   116d4:	bnd jmp QWORD PTR [rip+0x65275]        # 76950 <wget_netrc_init@@Base+0x4f470>
   116db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000116e0 <strcasecmp@plt>:
   116e0:	endbr64 
   116e4:	bnd jmp QWORD PTR [rip+0x6526d]        # 76958 <strcasecmp@GLIBC_2.2.5>
   116eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000116f0 <EVP_sha1@plt>:
   116f0:	endbr64 
   116f4:	bnd jmp QWORD PTR [rip+0x65265]        # 76960 <EVP_sha1@OPENSSL_3.0.0>
   116fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011700 <wget_iri_escape@plt>:
   11700:	endbr64 
   11704:	bnd jmp QWORD PTR [rip+0x6525d]        # 76968 <wget_iri_escape@@Base+0x52358>
   1170b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011710 <wget_cookie_init@plt>:
   11710:	endbr64 
   11714:	bnd jmp QWORD PTR [rip+0x65255]        # 76970 <wget_cookie_init@@Base+0x5fd40>
   1171b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011720 <wget_http_istoken@plt>:
   11720:	endbr64 
   11724:	bnd jmp QWORD PTR [rip+0x6524d]        # 76978 <wget_http_istoken@@Base+0x56a98>
   1172b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011730 <SSL_CTX_set_default_verify_paths@plt>:
   11730:	endbr64 
   11734:	bnd jmp QWORD PTR [rip+0x65245]        # 76980 <SSL_CTX_set_default_verify_paths@OPENSSL_3.0.0>
   1173b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011740 <strrchr@plt>:
   11740:	endbr64 
   11744:	bnd jmp QWORD PTR [rip+0x6523d]        # 76988 <strrchr@GLIBC_2.2.5>
   1174b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011750 <memchr@plt>:
   11750:	endbr64 
   11754:	bnd jmp QWORD PTR [rip+0x65235]        # 76990 <memchr@GLIBC_2.2.5>
   1175b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011760 <__stack_chk_fail@plt>:
   11760:	endbr64 
   11764:	bnd jmp QWORD PTR [rip+0x6522d]        # 76998 <__stack_chk_fail@GLIBC_2.4>
   1176b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011770 <wget_random_init@plt>:
   11770:	endbr64 
   11774:	bnd jmp QWORD PTR [rip+0x65225]        # 769a0 <wget_random_init@@Base+0x4cb00>
   1177b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011780 <SSL_shutdown@plt>:
   11780:	endbr64 
   11784:	bnd jmp QWORD PTR [rip+0x6521d]        # 769a8 <SSL_shutdown@OPENSSL_3.0.0>
   1178b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011790 <OCSP_id_cmp@plt>:
   11790:	endbr64 
   11794:	bnd jmp QWORD PTR [rip+0x65215]        # 769b0 <OCSP_id_cmp@OPENSSL_3.0.0>
   1179b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000117a0 <d2i_OCSP_RESPONSE@plt>:
   117a0:	endbr64 
   117a4:	bnd jmp QWORD PTR [rip+0x6520d]        # 769b8 <d2i_OCSP_RESPONSE@OPENSSL_3.0.0>
   117ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000117b0 <wget_html_parse_buffer@plt>:
   117b0:	endbr64 
   117b4:	bnd jmp QWORD PTR [rip+0x65205]        # 769c0 <wget_html_parse_buffer@@Base+0x48a80>
   117bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000117c0 <wget_thread_mutex_unlock@plt>:
   117c0:	endbr64 
   117c4:	bnd jmp QWORD PTR [rip+0x651fd]        # 769c8 <wget_thread_mutex_unlock@@Base+0x4bdb8>
   117cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000117d0 <pthread_rwlockattr_setkind_np@plt>:
   117d0:	endbr64 
   117d4:	bnd jmp QWORD PTR [rip+0x651f5]        # 769d0 <pthread_rwlockattr_setkind_np@GLIBC_2.34>
   117db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000117e0 <EVP_MD_CTX_new@plt>:
   117e0:	endbr64 
   117e4:	bnd jmp QWORD PTR [rip+0x651ed]        # 769d8 <EVP_MD_CTX_new@OPENSSL_3.0.0>
   117eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000117f0 <wget_vsnprintf@plt>:
   117f0:	endbr64 
   117f4:	bnd jmp QWORD PTR [rip+0x651e5]        # 769e0 <wget_vsnprintf@@Base+0x4cd00>
   117fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011800 <wget_http_free_request@plt>:
   11800:	endbr64 
   11804:	bnd jmp QWORD PTR [rip+0x651dd]        # 769e8 <wget_http_free_request@@Base+0x546b8>
   1180b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011810 <wget_strerror@plt>:
   11810:	endbr64 
   11814:	bnd jmp QWORD PTR [rip+0x651d5]        # 769f0 <wget_strerror@@Base+0x476c0>
   1181b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011820 <wget_iri_scheme_get_name@plt>:
   11820:	endbr64 
   11824:	bnd jmp QWORD PTR [rip+0x651cd]        # 769f8 <wget_iri_scheme_get_name@@Base+0x534e8>
   1182b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011830 <wget_http_close@plt>:
   11830:	endbr64 
   11834:	bnd jmp QWORD PTR [rip+0x651c5]        # 76a00 <wget_http_close@@Base+0x586a0>
   1183b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011840 <wget_http_request_to_buffer@plt>:
   11840:	endbr64 
   11844:	bnd jmp QWORD PTR [rip+0x651bd]        # 76a08 <wget_http_request_to_buffer@@Base+0x58618>
   1184b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011850 <wget_logger_set_file@plt>:
   11850:	endbr64 
   11854:	bnd jmp QWORD PTR [rip+0x651b5]        # 76a10 <wget_logger_set_file@@Base+0x512c0>
   1185b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011860 <wget_strscpy@plt>:
   11860:	endbr64 
   11864:	bnd jmp QWORD PTR [rip+0x651ad]        # 76a18 <wget_strscpy@@Base+0x4bef8>
   1186b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011870 <BIO_read@plt>:
   11870:	endbr64 
   11874:	bnd jmp QWORD PTR [rip+0x651a5]        # 76a20 <BIO_read@OPENSSL_3.0.0>
   1187b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011880 <wget_buffer_printf_append@plt>:
   11880:	endbr64 
   11884:	bnd jmp QWORD PTR [rip+0x6519d]        # 76a28 <wget_buffer_printf_append@@Base+0x618d8>
   1188b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011890 <pthread_mutex_destroy@plt>:
   11890:	endbr64 
   11894:	bnd jmp QWORD PTR [rip+0x65195]        # 76a30 <pthread_mutex_destroy@GLIBC_2.2.5>
   1189b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000118a0 <fflush@plt>:
   118a0:	endbr64 
   118a4:	bnd jmp QWORD PTR [rip+0x6518d]        # 76a38 <fflush@GLIBC_2.2.5>
   118ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000118b0 <wget_buffer_ensure_capacity@plt>:
   118b0:	endbr64 
   118b4:	bnd jmp QWORD PTR [rip+0x65185]        # 76a40 <wget_buffer_ensure_capacity@@Base+0x62a50>
   118bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000118c0 <fopen@plt>:
   118c0:	endbr64 
   118c4:	bnd jmp QWORD PTR [rip+0x6517d]        # 76a48 <fopen@GLIBC_2.2.5>
   118cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000118d0 <wget_dns_cache_add@plt>:
   118d0:	endbr64 
   118d4:	bnd jmp QWORD PTR [rip+0x65175]        # 76a50 <wget_dns_cache_add@@Base+0x5e7d0>
   118db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000118e0 <wget_iri_get_query_as_filename@plt>:
   118e0:	endbr64 
   118e4:	bnd jmp QWORD PTR [rip+0x6516d]        # 76a58 <wget_iri_get_query_as_filename@@Base+0x52078>
   118eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000118f0 <SSL_set_hostflags@plt>:
   118f0:	endbr64 
   118f4:	bnd jmp QWORD PTR [rip+0x65165]        # 76a60 <SSL_set_hostflags@OPENSSL_3.0.0>
   118fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011900 <pthread_cond_init@plt>:
   11900:	endbr64 
   11904:	bnd jmp QWORD PTR [rip+0x6515d]        # 76a68 <pthread_cond_init@GLIBC_2.3.2>
   1190b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011910 <exit@plt>:
   11910:	endbr64 
   11914:	bnd jmp QWORD PTR [rip+0x65155]        # 76a70 <exit@GLIBC_2.2.5>
   1191b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011920 <getenv@plt>:
   11920:	endbr64 
   11924:	bnd jmp QWORD PTR [rip+0x6514d]        # 76a78 <getenv@GLIBC_2.2.5>
   1192b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011930 <X509_LOOKUP_file@plt>:
   11930:	endbr64 
   11934:	bnd jmp QWORD PTR [rip+0x65145]        # 76a80 <X509_LOOKUP_file@OPENSSL_3.0.0>
   1193b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011940 <mempcpy@plt>:
   11940:	endbr64 
   11944:	bnd jmp QWORD PTR [rip+0x6513d]        # 76a88 <mempcpy@GLIBC_2.2.5>
   1194b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011950 <wget_http_free_links@plt>:
   11950:	endbr64 
   11954:	bnd jmp QWORD PTR [rip+0x65135]        # 76a90 <wget_http_free_links@@Base+0x54910>
   1195b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011960 <wget_list_remove@plt>:
   11960:	endbr64 
   11964:	bnd jmp QWORD PTR [rip+0x6512d]        # 76a98 <wget_list_remove@@Base+0x51bc8>
   1196b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011970 <wget_logger_get_stream@plt>:
   11970:	endbr64 
   11974:	bnd jmp QWORD PTR [rip+0x65125]        # 76aa0 <wget_logger_get_stream@@Base+0x51370>
   1197b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011980 <wget_http_set_http_proxy@plt>:
   11980:	endbr64 
   11984:	bnd jmp QWORD PTR [rip+0x6511d]        # 76aa8 <wget_http_set_http_proxy@@Base+0x575f8>
   1198b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011990 <posix_spawn_file_actions_init@plt>:
   11990:	endbr64 
   11994:	bnd jmp QWORD PTR [rip+0x65115]        # 76ab0 <posix_spawn_file_actions_init@GLIBC_2.2.5>
   1199b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000119a0 <fputc@plt>:
   119a0:	endbr64 
   119a4:	bnd jmp QWORD PTR [rip+0x6510d]        # 76ab8 <fputc@GLIBC_2.2.5>
   119ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000119b0 <sigemptyset@plt>:
   119b0:	endbr64 
   119b4:	bnd jmp QWORD PTR [rip+0x65105]        # 76ac0 <sigemptyset@GLIBC_2.2.5>
   119bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000119c0 <SSL_CTX_load_verify_locations@plt>:
   119c0:	endbr64 
   119c4:	bnd jmp QWORD PTR [rip+0x650fd]        # 76ac8 <SSL_CTX_load_verify_locations@OPENSSL_3.0.0>
   119cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000119d0 <sigaction@plt>:
   119d0:	endbr64 
   119d4:	bnd jmp QWORD PTR [rip+0x650f5]        # 76ad0 <sigaction@GLIBC_2.2.5>
   119db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000119e0 <getaddrinfo@plt>:
   119e0:	endbr64 
   119e4:	bnd jmp QWORD PTR [rip+0x650ed]        # 76ad8 <getaddrinfo@GLIBC_2.2.5>
   119eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000119f0 <wget_snprintf@plt>:
   119f0:	endbr64 
   119f4:	bnd jmp QWORD PTR [rip+0x650e5]        # 76ae0 <wget_snprintf@@Base+0x4cd20>
   119fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011a00 <strncasecmp@plt>:
   11a00:	endbr64 
   11a04:	bnd jmp QWORD PTR [rip+0x650dd]        # 76ae8 <strncasecmp@GLIBC_2.2.5>
   11a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011a10 <rawmemchr@plt>:
   11a10:	endbr64 
   11a14:	bnd jmp QWORD PTR [rip+0x650d5]        # 76af0 <rawmemchr@GLIBC_2.2.5>
   11a1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011a20 <wget_vector_add_memdup@plt>:
   11a20:	endbr64 
   11a24:	bnd jmp QWORD PTR [rip+0x650cd]        # 76af8 <wget_vector_add_memdup@@Base+0x4a5c8>
   11a2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011a30 <wget_vector_clear@plt>:
   11a30:	endbr64 
   11a34:	bnd jmp QWORD PTR [rip+0x650c5]        # 76b00 <wget_vector_clear@@Base+0x4a0d0>
   11a3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011a40 <i2d_OCSP_REQUEST@plt>:
   11a40:	endbr64 
   11a44:	bnd jmp QWORD PTR [rip+0x650bd]        # 76b08 <i2d_OCSP_REQUEST@OPENSSL_3.0.0>
   11a4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011a50 <wget_cookie_create_request_header@plt>:
   11a50:	endbr64 
   11a54:	bnd jmp QWORD PTR [rip+0x650b5]        # 76b10 <wget_cookie_create_request_header@@Base+0x608b0>
   11a5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011a60 <OPENSSL_sk_value@plt>:
   11a60:	endbr64 
   11a64:	bnd jmp QWORD PTR [rip+0x650ad]        # 76b18 <OPENSSL_sk_value@OPENSSL_3.0.0>
   11a6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011a70 <freeaddrinfo@plt>:
   11a70:	endbr64 
   11a74:	bnd jmp QWORD PTR [rip+0x650a5]        # 76b20 <freeaddrinfo@GLIBC_2.2.5>
   11a7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011a80 <wget_memtohex@plt>:
   11a80:	endbr64 
   11a84:	bnd jmp QWORD PTR [rip+0x6509d]        # 76b28 <wget_memtohex@@Base+0x4ae48>
   11a8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011a90 <d2i_SSL_SESSION@plt>:
   11a90:	endbr64 
   11a94:	bnd jmp QWORD PTR [rip+0x65095]        # 76b30 <d2i_SSL_SESSION@OPENSSL_3.0.0>
   11a9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011aa0 <wget_vasprintf@plt>:
   11aa0:	endbr64 
   11aa4:	bnd jmp QWORD PTR [rip+0x6508d]        # 76b38 <wget_vasprintf@@Base+0x4d368>
   11aab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011ab0 <wget_global_get_int@plt>:
   11ab0:	endbr64 
   11ab4:	bnd jmp QWORD PTR [rip+0x65085]        # 76b40 <wget_global_get_int@@Base+0x53e40>
   11abb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011ac0 <wget_tcp_set_bind_address@plt>:
   11ac0:	endbr64 
   11ac4:	bnd jmp QWORD PTR [rip+0x6507d]        # 76b48 <wget_tcp_set_bind_address@@Base+0x50428>
   11acb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011ad0 <ASN1_TIME_diff@plt>:
   11ad0:	endbr64 
   11ad4:	bnd jmp QWORD PTR [rip+0x65075]        # 76b50 <ASN1_TIME_diff@OPENSSL_3.0.0>
   11adb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011ae0 <OCSP_resp_get0@plt>:
   11ae0:	endbr64 
   11ae4:	bnd jmp QWORD PTR [rip+0x6506d]        # 76b58 <OCSP_resp_get0@OPENSSL_3.0.0>
   11aeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011af0 <malloc@plt>:
   11af0:	endbr64 
   11af4:	bnd jmp QWORD PTR [rip+0x65065]        # 76b60 <malloc@GLIBC_2.2.5>
   11afb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011b00 <iswprint@plt>:
   11b00:	endbr64 
   11b04:	bnd jmp QWORD PTR [rip+0x6505d]        # 76b68 <iswprint@GLIBC_2.2.5>
   11b0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011b10 <wget_http_free_challenges@plt>:
   11b10:	endbr64 
   11b14:	bnd jmp QWORD PTR [rip+0x65055]        # 76b70 <wget_http_free_challenges@@Base+0x549d0>
   11b1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011b20 <wget_thread_support@plt>:
   11b20:	endbr64 
   11b24:	bnd jmp QWORD PTR [rip+0x6504d]        # 76b78 <wget_thread_support@@Base+0x4bda8>
   11b2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011b30 <wget_hash_printf_hex@plt>:
   11b30:	endbr64 
   11b34:	bnd jmp QWORD PTR [rip+0x65045]        # 76b80 <wget_hash_printf_hex@@Base+0x5e290>
   11b3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011b40 <reallocarray@plt>:
   11b40:	endbr64 
   11b44:	bnd jmp QWORD PTR [rip+0x6503d]        # 76b88 <reallocarray@GLIBC_2.26>
   11b4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011b50 <pipe@plt>:
   11b50:	endbr64 
   11b54:	bnd jmp QWORD PTR [rip+0x65035]        # 76b90 <pipe@GLIBC_2.2.5>
   11b5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011b60 <fchdir@plt>:
   11b60:	endbr64 
   11b64:	bnd jmp QWORD PTR [rip+0x6502d]        # 76b98 <fchdir@GLIBC_2.2.5>
   11b6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011b70 <wget_cookie_normalize@plt>:
   11b70:	endbr64 
   11b74:	bnd jmp QWORD PTR [rip+0x65025]        # 76ba0 <wget_cookie_normalize@@Base+0x5f6a0>
   11b7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011b80 <wget_str_to_utf8@plt>:
   11b80:	endbr64 
   11b84:	bnd jmp QWORD PTR [rip+0x6501d]        # 76ba8 <wget_str_to_utf8@@Base+0x5e338>
   11b8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011b90 <wget_buffer_vprintf_append@plt>:
   11b90:	endbr64 
   11b94:	bnd jmp QWORD PTR [rip+0x65015]        # 76bb0 <wget_buffer_vprintf_append@@Base+0x621f0>
   11b9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011ba0 <wget_http_parse_quoted_string@plt>:
   11ba0:	endbr64 
   11ba4:	bnd jmp QWORD PTR [rip+0x6500d]        # 76bb8 <wget_http_parse_quoted_string@@Base+0x56c58>
   11bab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011bb0 <wget_dns_cache_get@plt>:
   11bb0:	endbr64 
   11bb4:	bnd jmp QWORD PTR [rip+0x65005]        # 76bc0 <wget_dns_cache_get@@Base+0x5e9f0>
   11bbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011bc0 <wget_iri_free@plt>:
   11bc0:	endbr64 
   11bc4:	bnd jmp QWORD PTR [rip+0x64ffd]        # 76bc8 <wget_iri_free@@Base+0x534f8>
   11bcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011bd0 <wget_iri_supported@plt>:
   11bd0:	endbr64 
   11bd4:	bnd jmp QWORD PTR [rip+0x64ff5]        # 76bd0 <wget_iri_supported@@Base+0x536a0>
   11bdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011be0 <OCSP_request_add1_nonce@plt>:
   11be0:	endbr64 
   11be4:	bnd jmp QWORD PTR [rip+0x64fed]        # 76bd8 <OCSP_request_add1_nonce@OPENSSL_3.0.0>
   11beb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011bf0 <wget_buffer_strcpy@plt>:
   11bf0:	endbr64 
   11bf4:	bnd jmp QWORD PTR [rip+0x64fe5]        # 76be0 <wget_buffer_strcpy@@Base+0x62a00>
   11bfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011c00 <ftruncate@plt>:
   11c00:	endbr64 
   11c04:	bnd jmp QWORD PTR [rip+0x64fdd]        # 76be8 <ftruncate@GLIBC_2.2.5>
   11c0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011c10 <SSL_get_session@plt>:
   11c10:	endbr64 
   11c14:	bnd jmp QWORD PTR [rip+0x64fd5]        # 76bf0 <SSL_get_session@OPENSSL_3.0.0>
   11c1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011c20 <gai_strerror@plt>:
   11c20:	endbr64 
   11c24:	bnd jmp QWORD PTR [rip+0x64fcd]        # 76bf8 <gai_strerror@GLIBC_2.2.5>
   11c2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011c30 <wget_parse_name_fixed@plt>:
   11c30:	endbr64 
   11c34:	bnd jmp QWORD PTR [rip+0x64fc5]        # 76c00 <wget_parse_name_fixed@@Base+0x56a10>
   11c3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011c40 <wget_strncasecmp_ascii@plt>:
   11c40:	endbr64 
   11c44:	bnd jmp QWORD PTR [rip+0x64fbd]        # 76c08 <wget_strncasecmp_ascii@@Base+0x4aff8>
   11c4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011c50 <posix_spawn_file_actions_destroy@plt>:
   11c50:	endbr64 
   11c54:	bnd jmp QWORD PTR [rip+0x64fb5]        # 76c10 <posix_spawn_file_actions_destroy@GLIBC_2.2.5>
   11c5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011c60 <strcmp@plt>:
   11c60:	endbr64 
   11c64:	bnd jmp QWORD PTR [rip+0x64fad]        # 76c18 <strcmp@GLIBC_2.2.5>
   11c6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011c70 <wget_net_deinit@plt>:
   11c70:	endbr64 
   11c74:	bnd jmp QWORD PTR [rip+0x64fa5]        # 76c20 <wget_net_deinit@@Base+0x50800>
   11c7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011c80 <OCSP_check_nonce@plt>:
   11c80:	endbr64 
   11c84:	bnd jmp QWORD PTR [rip+0x64f9d]        # 76c28 <OCSP_check_nonce@OPENSSL_3.0.0>
   11c8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011c90 <strtol@plt>:
   11c90:	endbr64 
   11c94:	bnd jmp QWORD PTR [rip+0x64f95]        # 76c30 <strtol@GLIBC_2.2.5>
   11c9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011ca0 <wget_netrc_deinit@plt>:
   11ca0:	endbr64 
   11ca4:	bnd jmp QWORD PTR [rip+0x64f8d]        # 76c38 <wget_netrc_deinit@@Base+0x4f718>
   11cab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011cb0 <SSL_connect@plt>:
   11cb0:	endbr64 
   11cb4:	bnd jmp QWORD PTR [rip+0x64f85]        # 76c40 <SSL_connect@OPENSSL_3.0.0>
   11cbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011cc0 <ioctl@plt>:
   11cc0:	endbr64 
   11cc4:	bnd jmp QWORD PTR [rip+0x64f7d]        # 76c48 <ioctl@GLIBC_2.2.5>
   11ccb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011cd0 <SSL_SESSION_is_resumable@plt>:
   11cd0:	endbr64 
   11cd4:	bnd jmp QWORD PTR [rip+0x64f75]        # 76c50 <SSL_SESSION_is_resumable@OPENSSL_3.0.0>
   11cdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011ce0 <posix_spawnattr_setflags@plt>:
   11ce0:	endbr64 
   11ce4:	bnd jmp QWORD PTR [rip+0x64f6d]        # 76c58 <posix_spawnattr_setflags@GLIBC_2.2.5>
   11ceb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011cf0 <OCSP_RESPONSE_free@plt>:
   11cf0:	endbr64 
   11cf4:	bnd jmp QWORD PTR [rip+0x64f65]        # 76c60 <OCSP_RESPONSE_free@OPENSSL_3.0.0>
   11cfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011d00 <kill@plt>:
   11d00:	endbr64 
   11d04:	bnd jmp QWORD PTR [rip+0x64f5d]        # 76c68 <kill@GLIBC_2.2.5>
   11d0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011d10 <wget_http_free_hpkp_entries@plt>:
   11d10:	endbr64 
   11d14:	bnd jmp QWORD PTR [rip+0x64f55]        # 76c70 <wget_http_free_hpkp_entries@@Base+0x54ab0>
   11d1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011d20 <wget_ssl_read_timeout@plt>:
   11d20:	endbr64 
   11d24:	bnd jmp QWORD PTR [rip+0x64f4d]        # 76c78 <wget_ssl_read_timeout@@Base+0x44ad8>
   11d2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011d30 <wget_hashmap_clear@plt>:
   11d30:	endbr64 
   11d34:	bnd jmp QWORD PTR [rip+0x64f45]        # 76c80 <wget_hashmap_clear@@Base+0x5d2c0>
   11d3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011d40 <SSL_CTX_new@plt>:
   11d40:	endbr64 
   11d44:	bnd jmp QWORD PTR [rip+0x64f3d]        # 76c88 <SSL_CTX_new@OPENSSL_3.0.0>
   11d4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011d50 <OCSP_request_add0_id@plt>:
   11d50:	endbr64 
   11d54:	bnd jmp QWORD PTR [rip+0x64f35]        # 76c90 <OCSP_request_add0_id@OPENSSL_3.0.0>
   11d5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011d60 <read@plt>:
   11d60:	endbr64 
   11d64:	bnd jmp QWORD PTR [rip+0x64f2d]        # 76c98 <read@GLIBC_2.2.5>
   11d6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011d70 <wget_ssl_default_cert_dir@plt>:
   11d70:	endbr64 
   11d74:	bnd jmp QWORD PTR [rip+0x64f25]        # 76ca0 <wget_ssl_default_cert_dir@@Base+0x449b0>
   11d7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011d80 <wget_hash_deinit@plt>:
   11d80:	endbr64 
   11d84:	bnd jmp QWORD PTR [rip+0x64f1d]        # 76ca8 <wget_hash_deinit@@Base+0x5de88>
   11d8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011d90 <getpid@plt>:
   11d90:	endbr64 
   11d94:	bnd jmp QWORD PTR [rip+0x64f15]        # 76cb0 <getpid@GLIBC_2.2.5>
   11d9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011da0 <wget_tcp_set_preferred_family@plt>:
   11da0:	endbr64 
   11da4:	bnd jmp QWORD PTR [rip+0x64f0d]        # 76cb8 <wget_tcp_set_preferred_family@@Base+0x50778>
   11dab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011db0 <pthread_mutex_lock@plt>:
   11db0:	endbr64 
   11db4:	bnd jmp QWORD PTR [rip+0x64f05]        # 76cc0 <pthread_mutex_lock@GLIBC_2.2.5>
   11dbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011dc0 <chdir@plt>:
   11dc0:	endbr64 
   11dc4:	bnd jmp QWORD PTR [rip+0x64efd]        # 76cc8 <chdir@GLIBC_2.2.5>
   11dcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011dd0 <wget_http_parse_response_header@plt>:
   11dd0:	endbr64 
   11dd4:	bnd jmp QWORD PTR [rip+0x64ef5]        # 76cd0 <wget_http_parse_response_header@@Base+0x54e00>
   11ddb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011de0 <pthread_mutexattr_settype@plt>:
   11de0:	endbr64 
   11de4:	bnd jmp QWORD PTR [rip+0x64eed]        # 76cd8 <pthread_mutexattr_settype@GLIBC_2.34>
   11deb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011df0 <pthread_mutexattr_destroy@plt>:
   11df0:	endbr64 
   11df4:	bnd jmp QWORD PTR [rip+0x64ee5]        # 76ce0 <pthread_mutexattr_destroy@GLIBC_2.34>
   11dfb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011e00 <__fpurge@plt>:
   11e00:	endbr64 
   11e04:	bnd jmp QWORD PTR [rip+0x64edd]        # 76ce8 <__fpurge@GLIBC_2.2.5>
   11e0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011e10 <pthread_mutex_init@plt>:
   11e10:	endbr64 
   11e14:	bnd jmp QWORD PTR [rip+0x64ed5]        # 76cf0 <pthread_mutex_init@GLIBC_2.2.5>
   11e1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011e20 <fread@plt>:
   11e20:	endbr64 
   11e24:	bnd jmp QWORD PTR [rip+0x64ecd]        # 76cf8 <fread@GLIBC_2.2.5>
   11e2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011e30 <wget_ssl_write_timeout@plt>:
   11e30:	endbr64 
   11e34:	bnd jmp QWORD PTR [rip+0x64ec5]        # 76d00 <wget_ssl_write_timeout@@Base+0x44ad0>
   11e3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011e40 <gethostname@plt>:
   11e40:	endbr64 
   11e44:	bnd jmp QWORD PTR [rip+0x64ebd]        # 76d08 <gethostname@GLIBC_2.2.5>
   11e4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011e50 <wget_http_parse_setcookie@plt>:
   11e50:	endbr64 
   11e54:	bnd jmp QWORD PTR [rip+0x64eb5]        # 76d10 <wget_http_parse_setcookie@@Base+0x55560>
   11e5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011e60 <opendir@plt>:
   11e60:	endbr64 
   11e64:	bnd jmp QWORD PTR [rip+0x64ead]        # 76d18 <opendir@GLIBC_2.2.5>
   11e6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011e70 <wget_thread_mutex_destroy@plt>:
   11e70:	endbr64 
   11e74:	bnd jmp QWORD PTR [rip+0x64ea5]        # 76d20 <wget_thread_mutex_destroy@@Base+0x4c160>
   11e7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011e80 <wget_http_send_request@plt>:
   11e80:	endbr64 
   11e84:	bnd jmp QWORD PTR [rip+0x64e9d]        # 76d28 <wget_http_send_request@@Base+0x586f8>
   11e8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011e90 <poll@plt>:
   11e90:	endbr64 
   11e94:	bnd jmp QWORD PTR [rip+0x64e95]        # 76d30 <poll@GLIBC_2.2.5>
   11e9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011ea0 <wget_error_printf@plt>:
   11ea0:	endbr64 
   11ea4:	bnd jmp QWORD PTR [rip+0x64e8d]        # 76d38 <wget_error_printf@@Base+0x51bc8>
   11eab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011eb0 <pthread_cond_timedwait@plt>:
   11eb0:	endbr64 
   11eb4:	bnd jmp QWORD PTR [rip+0x64e85]        # 76d40 <pthread_cond_timedwait@GLIBC_2.3.2>
   11ebb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011ec0 <SSL_CTX_callback_ctrl@plt>:
   11ec0:	endbr64 
   11ec4:	bnd jmp QWORD PTR [rip+0x64e7d]        # 76d48 <SSL_CTX_callback_ctrl@OPENSSL_3.0.0>
   11ecb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011ed0 <wget_vpopenf@plt>:
   11ed0:	endbr64 
   11ed4:	bnd jmp QWORD PTR [rip+0x64e75]        # 76d50 <wget_vpopenf@@Base+0x4dd00>
   11edb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011ee0 <wget_iri_get_escaped_resource@plt>:
   11ee0:	endbr64 
   11ee4:	bnd jmp QWORD PTR [rip+0x64e6d]        # 76d58 <wget_iri_get_escaped_resource@@Base+0x52508>
   11eeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011ef0 <wget_buffer_memset_append@plt>:
   11ef0:	endbr64 
   11ef4:	bnd jmp QWORD PTR [rip+0x64e65]        # 76d60 <wget_buffer_memset_append@@Base+0x62a90>
   11efb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011f00 <wget_vector_create@plt>:
   11f00:	endbr64 
   11f04:	bnd jmp QWORD PTR [rip+0x64e5d]        # 76d68 <wget_vector_create@@Base+0x4a8e8>
   11f0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011f10 <wget_http_set_https_proxy@plt>:
   11f10:	endbr64 
   11f14:	bnd jmp QWORD PTR [rip+0x64e55]        # 76d70 <wget_http_set_https_proxy@@Base+0x57870>
   11f1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011f20 <wget_http_add_header@plt>:
   11f20:	endbr64 
   11f24:	bnd jmp QWORD PTR [rip+0x64e4d]        # 76d78 <wget_http_add_header@@Base+0x591a8>
   11f2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011f30 <wget_ready_2_read@plt>:
   11f30:	endbr64 
   11f34:	bnd jmp QWORD PTR [rip+0x64e45]        # 76d80 <wget_ready_2_read@@Base+0x5ccb0>
   11f3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011f40 <pthread_cond_wait@plt>:
   11f40:	endbr64 
   11f44:	bnd jmp QWORD PTR [rip+0x64e3d]        # 76d88 <pthread_cond_wait@GLIBC_2.3.2>
   11f4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011f50 <sigaddset@plt>:
   11f50:	endbr64 
   11f54:	bnd jmp QWORD PTR [rip+0x64e35]        # 76d90 <sigaddset@GLIBC_2.2.5>
   11f5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011f60 <eaccess@plt>:
   11f60:	endbr64 
   11f64:	bnd jmp QWORD PTR [rip+0x64e2d]        # 76d98 <eaccess@GLIBC_2.4>
   11f6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011f70 <readdir@plt>:
   11f70:	endbr64 
   11f74:	bnd jmp QWORD PTR [rip+0x64e25]        # 76da0 <readdir@GLIBC_2.2.5>
   11f7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011f80 <wget_tcp_set_ssl_hostname@plt>:
   11f80:	endbr64 
   11f84:	bnd jmp QWORD PTR [rip+0x64e1d]        # 76da8 <wget_tcp_set_ssl_hostname@@Base+0x50488>
   11f8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011f90 <wget_match_tail_nocase@plt>:
   11f90:	endbr64 
   11f94:	bnd jmp QWORD PTR [rip+0x64e15]        # 76db0 <wget_match_tail_nocase@@Base+0x4ada0>
   11f9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011fa0 <iswblank@plt>:
   11fa0:	endbr64 
   11fa4:	bnd jmp QWORD PTR [rip+0x64e0d]        # 76db8 <iswblank@GLIBC_2.2.5>
   11fab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011fb0 <wget_http_create_request@plt>:
   11fb0:	endbr64 
   11fb4:	bnd jmp QWORD PTR [rip+0x64e05]        # 76dc0 <wget_http_create_request@@Base+0x591b0>
   11fbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011fc0 <feof@plt>:
   11fc0:	endbr64 
   11fc4:	bnd jmp QWORD PTR [rip+0x64dfd]        # 76dc8 <feof@GLIBC_2.2.5>
   11fcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011fd0 <fnmatch@plt>:
   11fd0:	endbr64 
   11fd4:	bnd jmp QWORD PTR [rip+0x64df5]        # 76dd0 <fnmatch@GLIBC_2.2.5>
   11fdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011fe0 <SSL_set_alpn_protos@plt>:
   11fe0:	endbr64 
   11fe4:	bnd jmp QWORD PTR [rip+0x64ded]        # 76dd8 <SSL_set_alpn_protos@OPENSSL_3.0.0>
   11feb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000011ff0 <strnlen@plt>:
   11ff0:	endbr64 
   11ff4:	bnd jmp QWORD PTR [rip+0x64de5]        # 76de0 <strnlen@GLIBC_2.2.5>
   11ffb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012000 <wget_vector_find@plt>:
   12000:	endbr64 
   12004:	bnd jmp QWORD PTR [rip+0x64ddd]        # 76de8 <wget_vector_find@@Base+0x4a0a8>
   1200b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012010 <wget_tcp_set_tcp_fastopen@plt>:
   12010:	endbr64 
   12014:	bnd jmp QWORD PTR [rip+0x64dd5]        # 76df0 <wget_tcp_set_tcp_fastopen@@Base+0x50990>
   1201b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012020 <wget_http_parse_link@plt>:
   12020:	endbr64 
   12024:	bnd jmp QWORD PTR [rip+0x64dcd]        # 76df8 <wget_http_parse_link@@Base+0x56b18>
   1202b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012030 <wget_http_parse_content_disposition@plt>:
   12030:	endbr64 
   12034:	bnd jmp QWORD PTR [rip+0x64dc5]        # 76e00 <wget_http_parse_content_disposition@@Base+0x562a0>
   1203b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012040 <wget_thread_mutex_lock@plt>:
   12040:	endbr64 
   12044:	bnd jmp QWORD PTR [rip+0x64dbd]        # 76e08 <wget_thread_mutex_lock@@Base+0x4c208>
   1204b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012050 <wget_http_add_header_printf@plt>:
   12050:	endbr64 
   12054:	bnd jmp QWORD PTR [rip+0x64db5]        # 76e10 <wget_http_add_header_printf@@Base+0x592f0>
   1205b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012060 <wget_http_add_credentials@plt>:
   12060:	endbr64 
   12064:	bnd jmp QWORD PTR [rip+0x64dad]        # 76e18 <wget_http_add_credentials@@Base+0x59098>
   1206b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012070 <mbrtowc@plt>:
   12070:	endbr64 
   12074:	bnd jmp QWORD PTR [rip+0x64da5]        # 76e20 <mbrtowc@GLIBC_2.2.5>
   1207b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012080 <wget_strmemcpy_a@plt>:
   12080:	endbr64 
   12084:	bnd jmp QWORD PTR [rip+0x64d9d]        # 76e28 <wget_strmemcpy_a@@Base+0x51518>
   1208b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012090 <wget_memiconv@plt>:
   12090:	endbr64 
   12094:	bnd jmp QWORD PTR [rip+0x64d95]        # 76e30 <wget_memiconv@@Base+0x5ea00>
   1209b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000120a0 <wget_console_deinit@plt>:
   120a0:	endbr64 
   120a4:	bnd jmp QWORD PTR [rip+0x64d8d]        # 76e38 <wget_console_deinit@@Base+0x614c8>
   120ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000120b0 <closedir@plt>:
   120b0:	endbr64 
   120b4:	bnd jmp QWORD PTR [rip+0x64d85]        # 76e40 <closedir@GLIBC_2.2.5>
   120bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000120c0 <wget_bar_print@plt>:
   120c0:	endbr64 
   120c4:	bnd jmp QWORD PTR [rip+0x64d7d]        # 76e48 <wget_bar_print@@Base+0x63428>
   120cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000120d0 <faccessat@plt>:
   120d0:	endbr64 
   120d4:	bnd jmp QWORD PTR [rip+0x64d75]        # 76e50 <faccessat@GLIBC_2.4>
   120db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000120e0 <wget_vector_set_destructor@plt>:
   120e0:	endbr64 
   120e4:	bnd jmp QWORD PTR [rip+0x64d6d]        # 76e58 <wget_vector_set_destructor@@Base+0x4a218>
   120eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000120f0 <wget_tls_session_deinit@plt>:
   120f0:	endbr64 
   120f4:	bnd jmp QWORD PTR [rip+0x64d65]        # 76e60 <wget_tls_session_deinit@@Base+0x4bd20>
   120fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012100 <memrchr@plt>:
   12100:	endbr64 
   12104:	bnd jmp QWORD PTR [rip+0x64d5d]        # 76e68 <memrchr@GLIBC_2.2.5>
   1210b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012110 <memmove@plt>:
   12110:	endbr64 
   12114:	bnd jmp QWORD PTR [rip+0x64d55]        # 76e70 <memmove@GLIBC_2.2.5>
   1211b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012120 <realloc@plt>:
   12120:	endbr64 
   12124:	bnd jmp QWORD PTR [rip+0x64d4d]        # 76e78 <realloc@GLIBC_2.2.5>
   1212b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012130 <wget_logger_set_stream@plt>:
   12130:	endbr64 
   12134:	bnd jmp QWORD PTR [rip+0x64d45]        # 76e80 <wget_logger_set_stream@@Base+0x51780>
   1213b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012140 <wget_ssl_default_ca_bundle_path@plt>:
   12140:	endbr64 
   12144:	bnd jmp QWORD PTR [rip+0x64d3d]        # 76e88 <wget_ssl_default_ca_bundle_path@@Base+0x44b88>
   1214b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012150 <__fprintf_chk@plt>:
   12150:	endbr64 
   12154:	bnd jmp QWORD PTR [rip+0x64d35]        # 76e90 <__fprintf_chk@GLIBC_2.3.4>
   1215b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012160 <wget_http_parse_full_date@plt>:
   12160:	endbr64 
   12164:	bnd jmp QWORD PTR [rip+0x64d2d]        # 76e98 <wget_http_parse_full_date@@Base+0x55af8>
   1216b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012170 <wget_tcp_tls_start@plt>:
   12170:	endbr64 
   12174:	bnd jmp QWORD PTR [rip+0x64d25]        # 76ea0 <wget_tcp_tls_start@@Base+0x50450>
   1217b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012180 <wget_cookie_deinit@plt>:
   12180:	endbr64 
   12184:	bnd jmp QWORD PTR [rip+0x64d1d]        # 76ea8 <wget_cookie_deinit@@Base+0x60218>
   1218b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012190 <iswalnum@plt>:
   12190:	endbr64 
   12194:	bnd jmp QWORD PTR [rip+0x64d15]        # 76eb0 <iswalnum@GLIBC_2.2.5>
   1219b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000121a0 <posix_spawnattr_init@plt>:
   121a0:	endbr64 
   121a4:	bnd jmp QWORD PTR [rip+0x64d0d]        # 76eb8 <posix_spawnattr_init@GLIBC_2.2.5>
   121ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000121b0 <posix_spawn_file_actions_addopen@plt>:
   121b0:	endbr64 
   121b4:	bnd jmp QWORD PTR [rip+0x64d05]        # 76ec0 <posix_spawn_file_actions_addopen@GLIBC_2.2.5>
   121bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000121c0 <wget_css_parse_file@plt>:
   121c0:	endbr64 
   121c4:	bnd jmp QWORD PTR [rip+0x64cfd]        # 76ec8 <wget_css_parse_file@@Base+0x5f648>
   121cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000121d0 <wget_tcp_tls_stop@plt>:
   121d0:	endbr64 
   121d4:	bnd jmp QWORD PTR [rip+0x64cf5]        # 76ed0 <wget_tcp_tls_stop@@Base+0x50470>
   121db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000121e0 <error@plt>:
   121e0:	endbr64 
   121e4:	bnd jmp QWORD PTR [rip+0x64ced]        # 76ed8 <error@GLIBC_2.2.5>
   121eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000121f0 <qsort_r@plt>:
   121f0:	endbr64 
   121f4:	bnd jmp QWORD PTR [rip+0x64ce5]        # 76ee0 <qsort_r@GLIBC_2.8>
   121fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012200 <access@plt>:
   12200:	endbr64 
   12204:	bnd jmp QWORD PTR [rip+0x64cdd]        # 76ee8 <access@GLIBC_2.2.5>
   1220b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012210 <fstat@plt>:
   12210:	endbr64 
   12214:	bnd jmp QWORD PTR [rip+0x64cd5]        # 76ef0 <fstat@GLIBC_2.33>
   1221b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012220 <iswupper@plt>:
   12220:	endbr64 
   12224:	bnd jmp QWORD PTR [rip+0x64ccd]        # 76ef8 <iswupper@GLIBC_2.2.5>
   1222b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012230 <wget_cookie_db_load@plt>:
   12230:	endbr64 
   12234:	bnd jmp QWORD PTR [rip+0x64cc5]        # 76f00 <wget_cookie_db_load@@Base+0x60880>
   1223b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012240 <wget_ssl_deinit@plt>:
   12240:	endbr64 
   12244:	bnd jmp QWORD PTR [rip+0x64cbd]        # 76f08 <wget_ssl_deinit@@Base+0x45f68>
   1224b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012250 <BIO_new@plt>:
   12250:	endbr64 
   12254:	bnd jmp QWORD PTR [rip+0x64cb5]        # 76f10 <BIO_new@OPENSSL_3.0.0>
   1225b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012260 <wget_http_request_set_int@plt>:
   12260:	endbr64 
   12264:	bnd jmp QWORD PTR [rip+0x64cad]        # 76f18 <wget_http_request_set_int@@Base+0x595c8>
   1226b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012270 <wget_dns_cache_init@plt>:
   12270:	endbr64 
   12274:	bnd jmp QWORD PTR [rip+0x64ca5]        # 76f20 <wget_dns_cache_init@@Base+0x5ee50>
   1227b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012280 <wget_iri_unescape_inline@plt>:
   12280:	endbr64 
   12284:	bnd jmp QWORD PTR [rip+0x64c9d]        # 76f28 <wget_iri_unescape_inline@@Base+0x53958>
   1228b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012290 <wget_base64_get_decoded_length@plt>:
   12290:	endbr64 
   12294:	bnd jmp QWORD PTR [rip+0x64c95]        # 76f30 <wget_base64_get_decoded_length@@Base+0x618a0>
   1229b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000122a0 <__memcpy_chk@plt>:
   122a0:	endbr64 
   122a4:	bnd jmp QWORD PTR [rip+0x64c8d]        # 76f38 <__memcpy_chk@GLIBC_2.3.4>
   122ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000122b0 <wget_http_get_response_cb@plt>:
   122b0:	endbr64 
   122b4:	bnd jmp QWORD PTR [rip+0x64c85]        # 76f40 <wget_http_get_response_cb@@Base+0x58810>
   122bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000122c0 <wget_base64_decode_alloc@plt>:
   122c0:	endbr64 
   122c4:	bnd jmp QWORD PTR [rip+0x64c7d]        # 76f48 <wget_base64_decode_alloc@@Base+0x61898>
   122cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000122d0 <wget_http_parse_transfer_encoding@plt>:
   122d0:	endbr64 
   122d4:	bnd jmp QWORD PTR [rip+0x64c75]        # 76f50 <wget_http_parse_transfer_encoding@@Base+0x565c0>
   122db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000122e0 <wget_tcp_get_family@plt>:
   122e0:	endbr64 
   122e4:	bnd jmp QWORD PTR [rip+0x64c6d]        # 76f58 <wget_tcp_get_family@@Base+0x50988>
   122eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000122f0 <EVP_sha256@plt>:
   122f0:	endbr64 
   122f4:	bnd jmp QWORD PTR [rip+0x64c65]        # 76f60 <EVP_sha256@OPENSSL_3.0.0>
   122fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012300 <wget_striconv@plt>:
   12300:	endbr64 
   12304:	bnd jmp QWORD PTR [rip+0x64c5d]        # 76f68 <wget_striconv@@Base+0x5e868>
   1230b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012310 <wget_netrc_db_add@plt>:
   12310:	endbr64 
   12314:	bnd jmp QWORD PTR [rip+0x64c55]        # 76f70 <wget_netrc_db_add@@Base+0x4f7b0>
   1231b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012320 <wget_iri_escape_path@plt>:
   12320:	endbr64 
   12324:	bnd jmp QWORD PTR [rip+0x64c4d]        # 76f78 <wget_iri_escape_path@@Base+0x528c8>
   1232b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012330 <iswalpha@plt>:
   12330:	endbr64 
   12334:	bnd jmp QWORD PTR [rip+0x64c45]        # 76f80 <iswalpha@GLIBC_2.2.5>
   1233b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012340 <getpwnam_r@plt>:
   12340:	endbr64 
   12344:	bnd jmp QWORD PTR [rip+0x64c3d]        # 76f88 <getpwnam_r@GLIBC_2.2.5>
   1234b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012350 <isatty@plt>:
   12350:	endbr64 
   12354:	bnd jmp QWORD PTR [rip+0x64c35]        # 76f90 <isatty@GLIBC_2.2.5>
   1235b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012360 <wget_tls_session_init@plt>:
   12360:	endbr64 
   12364:	bnd jmp QWORD PTR [rip+0x64c2d]        # 76f98 <wget_tls_session_init@@Base+0x4bea8>
   1236b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012370 <getlogin_r@plt>:
   12370:	endbr64 
   12374:	bnd jmp QWORD PTR [rip+0x64c25]        # 76fa0 <getlogin_r@GLIBC_2.2.5>
   1237b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012380 <ASN1_STRING_free@plt>:
   12380:	endbr64 
   12384:	bnd jmp QWORD PTR [rip+0x64c1d]        # 76fa8 <ASN1_STRING_free@OPENSSL_3.0.0>
   1238b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012390 <strpbrk@plt>:
   12390:	endbr64 
   12394:	bnd jmp QWORD PTR [rip+0x64c15]        # 76fb0 <strpbrk@GLIBC_2.2.5>
   1239b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000123a0 <wget_cookie_free@plt>:
   123a0:	endbr64 
   123a4:	bnd jmp QWORD PTR [rip+0x64c0d]        # 76fb8 <wget_cookie_free@@Base+0x602a8>
   123ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000123b0 <wget_xml_parse_file@plt>:
   123b0:	endbr64 
   123b4:	bnd jmp QWORD PTR [rip+0x64c05]        # 76fc0 <wget_xml_parse_file@@Base+0x49070>
   123bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000123c0 <iconv@plt>:
   123c0:	endbr64 
   123c4:	bnd jmp QWORD PTR [rip+0x64bfd]        # 76fc8 <iconv@GLIBC_2.2.5>
   123cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000123d0 <mmap@plt>:
   123d0:	endbr64 
   123d4:	bnd jmp QWORD PTR [rip+0x64bf5]        # 76fd0 <mmap@GLIBC_2.2.5>
   123db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000123e0 <setsockopt@plt>:
   123e0:	endbr64 
   123e4:	bnd jmp QWORD PTR [rip+0x64bed]        # 76fd8 <setsockopt@GLIBC_2.2.5>
   123eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000123f0 <wget_ready_2_write@plt>:
   123f0:	endbr64 
   123f4:	bnd jmp QWORD PTR [rip+0x64be5]        # 76fe0 <wget_ready_2_write@@Base+0x5cef0>
   123fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012400 <wget_http_parse_header_line@plt>:
   12400:	endbr64 
   12404:	bnd jmp QWORD PTR [rip+0x64bdd]        # 76fe8 <wget_http_parse_header_line@@Base+0x55828>
   1240b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012410 <wget_random@plt>:
   12410:	endbr64 
   12414:	bnd jmp QWORD PTR [rip+0x64bd5]        # 76ff0 <wget_random@@Base+0x4d110>
   1241b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012420 <EVP_MD_CTX_free@plt>:
   12420:	endbr64 
   12424:	bnd jmp QWORD PTR [rip+0x64bcd]        # 76ff8 <EVP_MD_CTX_free@OPENSSL_3.0.0>
   1242b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012430 <wget_vector_insert@plt>:
   12430:	endbr64 
   12434:	bnd jmp QWORD PTR [rip+0x64bc5]        # 77000 <wget_vector_insert@@Base+0x4aae0>
   1243b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012440 <wget_ocsp_db_add_fingerprint@plt>:
   12440:	endbr64 
   12444:	bnd jmp QWORD PTR [rip+0x64bbd]        # 77008 <wget_ocsp_db_add_fingerprint@@Base+0x4e5f8>
   1244b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012450 <wget_hpkp_db_deinit@plt>:
   12450:	endbr64 
   12454:	bnd jmp QWORD PTR [rip+0x64bb5]        # 77010 <wget_hpkp_db_deinit@@Base+0x5b3d0>
   1245b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012460 <pthread_create@plt>:
   12460:	endbr64 
   12464:	bnd jmp QWORD PTR [rip+0x64bad]        # 77018 <pthread_create@GLIBC_2.34>
   1246b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012470 <wget_http_get@plt>:
   12470:	endbr64 
   12474:	bnd jmp QWORD PTR [rip+0x64ba5]        # 77020 <wget_http_get@@Base+0x48bf0>
   1247b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012480 <wget_ip_is_family@plt>:
   12480:	endbr64 
   12484:	bnd jmp QWORD PTR [rip+0x64b9d]        # 77028 <wget_ip_is_family@@Base+0x540e8>
   1248b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012490 <posix_spawnp@plt>:
   12490:	endbr64 
   12494:	bnd jmp QWORD PTR [rip+0x64b95]        # 77030 <posix_spawnp@GLIBC_2.15>
   1249b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000124a0 <strdup@plt>:
   124a0:	endbr64 
   124a4:	bnd jmp QWORD PTR [rip+0x64b8d]        # 77038 <strdup@GLIBC_2.2.5>
   124ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000124b0 <wget_match_tail@plt>:
   124b0:	endbr64 
   124b4:	bnd jmp QWORD PTR [rip+0x64b85]        # 77040 <wget_match_tail@@Base+0x4b080>
   124bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000124c0 <wget_str_is_valid_utf8@plt>:
   124c0:	endbr64 
   124c4:	bnd jmp QWORD PTR [rip+0x64b7d]        # 77048 <wget_str_is_valid_utf8@@Base+0x5e898>
   124cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000124d0 <wget_ssl_open@plt>:
   124d0:	endbr64 
   124d4:	bnd jmp QWORD PTR [rip+0x64b75]        # 77050 <wget_ssl_open@@Base+0x46050>
   124db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000124e0 <SSL_get_fd@plt>:
   124e0:	endbr64 
   124e4:	bnd jmp QWORD PTR [rip+0x64b6d]        # 77058 <SSL_get_fd@OPENSSL_3.0.0>
   124eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000124f0 <SSL_SESSION_free@plt>:
   124f0:	endbr64 
   124f4:	bnd jmp QWORD PTR [rip+0x64b65]        # 77060 <SSL_SESSION_free@OPENSSL_3.0.0>
   124fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012500 <wget_http_add_header_param@plt>:
   12500:	endbr64 
   12504:	bnd jmp QWORD PTR [rip+0x64b5d]        # 77068 <wget_http_add_header_param@@Base+0x59328>
   1250b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012510 <wget_tcp_get_preferred_family@plt>:
   12510:	endbr64 
   12514:	bnd jmp QWORD PTR [rip+0x64b55]        # 77070 <wget_tcp_get_preferred_family@@Base+0x50b00>
   1251b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012520 <wget_iri_isgendelim@plt>:
   12520:	endbr64 
   12524:	bnd jmp QWORD PTR [rip+0x64b4d]        # 77078 <wget_iri_isgendelim@@Base+0x53b38>
   1252b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012530 <SSL_CTX_get_cert_store@plt>:
   12530:	endbr64 
   12534:	bnd jmp QWORD PTR [rip+0x64b45]        # 77080 <SSL_CTX_get_cert_store@OPENSSL_3.0.0>
   1253b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012540 <lseek@plt>:
   12540:	endbr64 
   12544:	bnd jmp QWORD PTR [rip+0x64b3d]        # 77088 <lseek@GLIBC_2.2.5>
   1254b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012550 <wget_tls_session_get@plt>:
   12550:	endbr64 
   12554:	bnd jmp QWORD PTR [rip+0x64b35]        # 77090 <wget_tls_session_get@@Base+0x4be20>
   1255b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012560 <iswlower@plt>:
   12560:	endbr64 
   12564:	bnd jmp QWORD PTR [rip+0x64b2d]        # 77098 <iswlower@GLIBC_2.2.5>
   1256b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012570 <wget_hashmap_browse@plt>:
   12570:	endbr64 
   12574:	bnd jmp QWORD PTR [rip+0x64b25]        # 770a0 <wget_hashmap_browse@@Base+0x5d570>
   1257b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012580 <ferror@plt>:
   12580:	endbr64 
   12584:	bnd jmp QWORD PTR [rip+0x64b1d]        # 770a8 <ferror@GLIBC_2.2.5>
   1258b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012590 <wget_strcasecmp_ascii@plt>:
   12590:	endbr64 
   12594:	bnd jmp QWORD PTR [rip+0x64b15]        # 770b0 <wget_strcasecmp_ascii@@Base+0x4b4d0>
   1259b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000125a0 <ERR_reason_error_string@plt>:
   125a0:	endbr64 
   125a4:	bnd jmp QWORD PTR [rip+0x64b0d]        # 770b8 <ERR_reason_error_string@OPENSSL_3.0.0>
   125ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000125b0 <flock@plt>:
   125b0:	endbr64 
   125b4:	bnd jmp QWORD PTR [rip+0x64b05]        # 770c0 <flock@GLIBC_2.2.5>
   125bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000125c0 <wget_hashmap_size@plt>:
   125c0:	endbr64 
   125c4:	bnd jmp QWORD PTR [rip+0x64afd]        # 770c8 <wget_hashmap_size@@Base+0x5d5a8>
   125cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000125d0 <wget_global_get_ptr@plt>:
   125d0:	endbr64 
   125d4:	bnd jmp QWORD PTR [rip+0x64af5]        # 770d0 <wget_global_get_ptr@@Base+0x54340>
   125db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000125e0 <wget_vector_free@plt>:
   125e0:	endbr64 
   125e4:	bnd jmp QWORD PTR [rip+0x64aed]        # 770d8 <wget_vector_free@@Base+0x4a638>
   125eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000125f0 <wget_vector_set_resize_factor@plt>:
   125f0:	endbr64 
   125f4:	bnd jmp QWORD PTR [rip+0x64ae5]        # 770e0 <wget_vector_set_resize_factor@@Base+0x4abd0>
   125fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012600 <iswxdigit@plt>:
   12600:	endbr64 
   12604:	bnd jmp QWORD PTR [rip+0x64add]        # 770e8 <iswxdigit@GLIBC_2.2.5>
   1260b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012610 <iswcntrl@plt>:
   12610:	endbr64 
   12614:	bnd jmp QWORD PTR [rip+0x64ad5]        # 770f0 <iswcntrl@GLIBC_2.2.5>
   1261b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012620 <inet_pton@plt>:
   12620:	endbr64 
   12624:	bnd jmp QWORD PTR [rip+0x64acd]        # 770f8 <inet_pton@GLIBC_2.2.5>
   1262b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012630 <wget_tcp_init@plt>:
   12630:	endbr64 
   12634:	bnd jmp QWORD PTR [rip+0x64ac5]        # 77100 <wget_tcp_init@@Base+0x50770>
   1263b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012640 <openat@plt>:
   12640:	endbr64 
   12644:	bnd jmp QWORD PTR [rip+0x64abd]        # 77108 <openat@GLIBC_2.4>
   1264b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012650 <qsort@plt>:
   12650:	endbr64 
   12654:	bnd jmp QWORD PTR [rip+0x64ab5]        # 77110 <qsort@GLIBC_2.2.5>
   1265b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012660 <wget_tcp_set_ssl@plt>:
   12660:	endbr64 
   12664:	bnd jmp QWORD PTR [rip+0x64aad]        # 77118 <wget_tcp_set_ssl@@Base+0x50868>
   1266b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012670 <EVP_DigestUpdate@plt>:
   12670:	endbr64 
   12674:	bnd jmp QWORD PTR [rip+0x64aa5]        # 77120 <EVP_DigestUpdate@OPENSSL_3.0.0>
   1267b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012680 <X509_load_crl_file@plt>:
   12680:	endbr64 
   12684:	bnd jmp QWORD PTR [rip+0x64a9d]        # 77128 <X509_load_crl_file@OPENSSL_3.0.0>
   1268b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012690 <wget_http_parse_public_key_pins@plt>:
   12690:	endbr64 
   12694:	bnd jmp QWORD PTR [rip+0x64a95]        # 77130 <wget_http_parse_public_key_pins@@Base+0x56300>
   1269b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000126a0 <SSL_write@plt>:
   126a0:	endbr64 
   126a4:	bnd jmp QWORD PTR [rip+0x64a8d]        # 77138 <SSL_write@OPENSSL_3.0.0>
   126ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000126b0 <wget_strmemdup@plt>:
   126b0:	endbr64 
   126b4:	bnd jmp QWORD PTR [rip+0x64a85]        # 77140 <wget_strmemdup@@Base+0x518f0>
   126bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000126c0 <posix_spawn_file_actions_addclose@plt>:
   126c0:	endbr64 
   126c4:	bnd jmp QWORD PTR [rip+0x64a7d]        # 77148 <posix_spawn_file_actions_addclose@GLIBC_2.2.5>
   126cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000126d0 <wget_dns_freeaddrinfo@plt>:
   126d0:	endbr64 
   126d4:	bnd jmp QWORD PTR [rip+0x64a75]        # 77150 <wget_dns_freeaddrinfo@@Base+0x47510>
   126db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000126e0 <pthread_cond_destroy@plt>:
   126e0:	endbr64 
   126e4:	bnd jmp QWORD PTR [rip+0x64a6d]        # 77158 <pthread_cond_destroy@GLIBC_2.3.2>
   126eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000126f0 <wget_hpkp_pin_add@plt>:
   126f0:	endbr64 
   126f4:	bnd jmp QWORD PTR [rip+0x64a65]        # 77160 <wget_hpkp_pin_add@@Base+0x5ba40>
   126fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012700 <wget_str_needs_encoding@plt>:
   12700:	endbr64 
   12704:	bnd jmp QWORD PTR [rip+0x64a5d]        # 77168 <wget_str_needs_encoding@@Base+0x5e9e8>
   1270b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012710 <wget_logger_is_active@plt>:
   12710:	endbr64 
   12714:	bnd jmp QWORD PTR [rip+0x64a55]        # 77170 <wget_logger_is_active@@Base+0x519c0>
   1271b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012720 <lstat@plt>:
   12720:	endbr64 
   12724:	bnd jmp QWORD PTR [rip+0x64a4d]        # 77178 <lstat@GLIBC_2.33>
   1272b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012730 <fwrite@plt>:
   12730:	endbr64 
   12734:	bnd jmp QWORD PTR [rip+0x64a45]        # 77180 <fwrite@GLIBC_2.2.5>
   1273b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012740 <close@plt>:
   12740:	endbr64 
   12744:	bnd jmp QWORD PTR [rip+0x64a3d]        # 77188 <close@GLIBC_2.2.5>
   1274b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012750 <wget_http_parse_connection@plt>:
   12750:	endbr64 
   12754:	bnd jmp QWORD PTR [rip+0x64a35]        # 77190 <wget_http_parse_connection@@Base+0x55f10>
   1275b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012760 <wget_debug_write@plt>:
   12760:	endbr64 
   12764:	bnd jmp QWORD PTR [rip+0x64a2d]        # 77198 <wget_debug_write@@Base+0x51d98>
   1276b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012770 <wget_http_parse_param@plt>:
   12770:	endbr64 
   12774:	bnd jmp QWORD PTR [rip+0x64a25]        # 771a0 <wget_http_parse_param@@Base+0x57180>
   1277b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012780 <wget_buffer_alloc@plt>:
   12780:	endbr64 
   12784:	bnd jmp QWORD PTR [rip+0x64a1d]        # 771a8 <wget_buffer_alloc@@Base+0x63228>
   1278b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012790 <wget_http_match_no_proxy@plt>:
   12790:	endbr64 
   12794:	bnd jmp QWORD PTR [rip+0x64a15]        # 771b0 <wget_http_match_no_proxy@@Base+0x57ab0>
   1279b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000127a0 <gmtime_r@plt>:
   127a0:	endbr64 
   127a4:	bnd jmp QWORD PTR [rip+0x64a0d]        # 771b8 <gmtime_r@GLIBC_2.2.5>
   127ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000127b0 <wget_strdup@plt>:
   127b0:	endbr64 
   127b4:	bnd jmp QWORD PTR [rip+0x64a05]        # 771c0 <wget_strdup@@Base+0x519a0>
   127bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000127c0 <wget_http_request_set_body@plt>:
   127c0:	endbr64 
   127c4:	bnd jmp QWORD PTR [rip+0x649fd]        # 771c8 <wget_http_request_set_body@@Base+0x594c8>
   127cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000127d0 <iswdigit@plt>:
   127d0:	endbr64 
   127d4:	bnd jmp QWORD PTR [rip+0x649f5]        # 771d0 <iswdigit@GLIBC_2.2.5>
   127db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000127e0 <wget_tcp_deinit@plt>:
   127e0:	endbr64 
   127e4:	bnd jmp QWORD PTR [rip+0x649ed]        # 771d8 <wget_tcp_deinit@@Base+0x50338>
   127eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000127f0 <wget_http_get_response@plt>:
   127f0:	endbr64 
   127f4:	bnd jmp QWORD PTR [rip+0x649e5]        # 771e0 <wget_http_get_response@@Base+0x57d80>
   127fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012800 <wget_vector_replace@plt>:
   12800:	endbr64 
   12804:	bnd jmp QWORD PTR [rip+0x649dd]        # 771e8 <wget_vector_replace@@Base+0x4aad8>
   1280b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012810 <wget_aprintf@plt>:
   12810:	endbr64 
   12814:	bnd jmp QWORD PTR [rip+0x649d5]        # 771f0 <wget_aprintf@@Base+0x4d850>
   1281b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000012820 <wget_ssl_open.cold>:
   12820:	mov    rax,QWORD PTR ds:0x8
   12828:	ud2    

000000000001282a <yyrestart.cold>:
   1282a:	mov    rsi,rbp
   1282d:	xor    edi,edi
   1282f:	call   325e0 <yy_flush_buffer>
   12834:	mov    QWORD PTR ds:0x0,r12
   1283c:	ud2    

000000000001283e <gl_cond_timedwait_func.cold>:
   1283e:	call   10cb0 <abort@plt>

0000000000012843 <at_fatal_signal.cold>:
   12843:	call   10cb0 <abort@plt>

0000000000012848 <block_fatal_signals.cold>:
   12848:	call   10cb0 <abort@plt>

000000000001284d <unblock_fatal_signals.cold>:
   1284d:	call   10cb0 <abort@plt>

0000000000012852 <get_fatal_signals.cold>:
   12852:	call   10cb0 <abort@plt>

0000000000012857 <get_fatal_signal_set.cold>:
   12857:	call   10cb0 <abort@plt>

000000000001285c <gl_dynarray_at_failure>:
   1285c:	endbr64 
   12860:	push   rax
   12861:	pop    rax
   12862:	push   rax
   12863:	call   10cb0 <abort@plt>

0000000000012868 <hash_find_entry.cold>:
   12868:	call   10cb0 <abort@plt>

000000000001286d <transfer_entries.cold>:
   1286d:	call   10cb0 <abort@plt>

0000000000012872 <hash_lookup.cold>:
   12872:	call   10cb0 <abort@plt>

0000000000012877 <hash_get_first.cold>:
   12877:	push   rax
   12878:	call   10cb0 <abort@plt>

000000000001287d <hash_get_next.cold>:
   1287d:	call   10cb0 <abort@plt>

0000000000012882 <hash_rehash.cold>:
   12882:	call   10cb0 <abort@plt>

0000000000012887 <hash_insert_if_absent.cold>:
   12887:	call   10cb0 <abort@plt>

000000000001288c <_gl_alloc_nomem>:
   1288c:	endbr64 
   12890:	push   rax
   12891:	call   104b0 <__errno_location@plt>
   12896:	mov    DWORD PTR [rax],0xc
   1289c:	xor    eax,eax
   1289e:	pop    rdx
   1289f:	ret    

00000000000128a0 <gl_locale_name_thread.cold>:
   128a0:	call   10cb0 <abort@plt>

00000000000128a5 <freea.cold>:
   128a5:	push   rax
   128a6:	call   10cb0 <abort@plt>

00000000000128ab <rpl_mbsrtowcs.cold>:
   128ab:	call   10cb0 <abort@plt>

00000000000128b0 <create_pipe.cold>:
   128b0:	call   10cb0 <abort@plt>

00000000000128b5 <gl_thread_create.cold>:
   128b5:	call   10cb0 <abort@plt>

00000000000128ba <wait_subprocess.cold>:
   128ba:	mov    edx,0x5
   128bf:	lea    rsi,[rip+0x555ea]        # 67eb0 <nonspacing_table_data+0xc10>
   128c6:	xor    edi,edi
   128c8:	call   10f90 <dcgettext@plt>
   128cd:	mov    r8d,ebx
   128d0:	mov    rcx,r13
   128d3:	xor    esi,esi
   128d5:	mov    rdx,rax
   128d8:	mov    edi,0x1
   128dd:	xor    eax,eax
   128df:	call   121e0 <error@plt>
   128e4:	call   10cb0 <abort@plt>

00000000000128e9 <vasnprintf.cold>:
   128e9:	call   10cb0 <abort@plt>
   128ee:	call   10cb0 <abort@plt>
   128f3:	cs nop WORD PTR [rax+rax*1+0x0]
   128fd:	nop    DWORD PTR [rax]

0000000000012900 <http_init>:
   12900:	endbr64 
   12904:	cmp    BYTE PTR [rip+0x64b75],0x0        # 77480 <initialized>
   1290b:	je     1290e <http_init+0xe>
   1290d:	ret    
   1290e:	push   rax
   1290f:	lea    rdi,[rip+0x64b7a]        # 77490 <proxy_mutex>
   12916:	call   10530 <wget_thread_mutex_init@plt>
   1291b:	lea    rdi,[rip+0x64b66]        # 77488 <hosts_mutex>
   12922:	call   10530 <wget_thread_mutex_init@plt>
   12927:	mov    BYTE PTR [rip+0x64b52],0x1        # 77480 <initialized>
   1292e:	pop    rdx
   1292f:	lea    rdi,[rip+0xae5a]        # 1d790 <http_exit>
   12936:	jmp    4a9e0 <atexit>
   1293b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000012940 <global_init>:
   12940:	endbr64 
   12944:	cmp    BYTE PTR [rip+0x64b75],0x0        # 774c0 <initialized>
   1294b:	je     1294e <global_init+0xe>
   1294d:	ret    
   1294e:	push   rax
   1294f:	lea    rdi,[rip+0x64b72]        # 774c8 <_mutex>
   12956:	call   10530 <wget_thread_mutex_init@plt>
   1295b:	mov    BYTE PTR [rip+0x64b5e],0x1        # 774c0 <initialized>
   12962:	pop    rdx
   12963:	lea    rdi,[rip+0xfa46]        # 223b0 <global_exit>
   1296a:	jmp    4a9e0 <atexit>
   1296f:	nop

0000000000012970 <random_init>:
   12970:	endbr64 
   12974:	cmp    BYTE PTR [rip+0x64c45],0x0        # 775c0 <initialized>
   1297b:	je     1297e <random_init+0xe>
   1297d:	ret    
   1297e:	push   rax
   1297f:	lea    rdi,[rip+0x64c42]        # 775c8 <mutex>
   12986:	call   10530 <wget_thread_mutex_init@plt>
   1298b:	mov    BYTE PTR [rip+0x64c2e],0x1        # 775c0 <initialized>
   12992:	pop    rdx
   12993:	lea    rdi,[rip+0x174d6]        # 29e70 <random_exit>
   1299a:	jmp    4a9e0 <atexit>
   1299f:	nop

00000000000129a0 <dns_init>:
   129a0:	endbr64 
   129a4:	cmp    BYTE PTR [rip+0x64cb9],0x0        # 77664 <initialized>
   129ab:	je     129ae <dns_init+0xe>
   129ad:	ret    
   129ae:	push   rax
   129af:	lea    rdi,[rip+0x64992]        # 77348 <default_dns+0x8>
   129b6:	call   10530 <wget_thread_mutex_init@plt>
   129bb:	mov    BYTE PTR [rip+0x64ca2],0x1        # 77664 <initialized>
   129c2:	pop    rdx
   129c3:	lea    rdi,[rip+0x1cb76]        # 2f540 <dns_exit>
   129ca:	jmp    4a9e0 <atexit>
   129cf:	nop

00000000000129d0 <tls_init>:
   129d0:	endbr64 
   129d4:	cmp    QWORD PTR [rip+0x64c9c],0x0        # 77678 <mutex>
   129dc:	je     129df <tls_init+0xf>
   129de:	ret    
   129df:	push   rax
   129e0:	lea    rdi,[rip+0x64c91]        # 77678 <mutex>
   129e7:	call   10530 <wget_thread_mutex_init@plt>
   129ec:	call   11d70 <wget_ssl_default_cert_dir@plt>
   129f1:	call   12140 <wget_ssl_default_ca_bundle_path@plt>
   129f6:	xor    edx,edx
   129f8:	mov    edi,0xd
   129fd:	xor    r9d,r9d
   12a00:	xor    r8d,r8d
   12a03:	xor    ecx,ecx
   12a05:	xor    esi,esi
   12a07:	call   11270 <CRYPTO_get_ex_new_index@plt>
   12a0c:	lea    rdi,[rip+0x1dcdd]        # 306f0 <tls_exit>
   12a13:	mov    DWORD PTR [rip+0x64c4f],eax        # 77668 <ssl_userdata_idx>
   12a19:	pop    rdx
   12a1a:	jmp    4a9e0 <atexit>
   12a1f:	nop

0000000000012a20 <deregister_tm_clones>:
   12a20:	lea    rdi,[rip+0x64a31]        # 77458 <__TMC_END__>
   12a27:	lea    rax,[rip+0x64a2a]        # 77458 <__TMC_END__>
   12a2e:	cmp    rax,rdi
   12a31:	je     12a48 <deregister_tm_clones+0x28>
   12a33:	mov    rax,QWORD PTR [rip+0x6359e]        # 75fd8 <_ITM_deregisterTMCloneTable@Base>
   12a3a:	test   rax,rax
   12a3d:	je     12a48 <deregister_tm_clones+0x28>
   12a3f:	jmp    rax
   12a41:	nop    DWORD PTR [rax+0x0]
   12a48:	ret    
   12a49:	nop    DWORD PTR [rax+0x0]

0000000000012a50 <register_tm_clones>:
   12a50:	lea    rdi,[rip+0x64a01]        # 77458 <__TMC_END__>
   12a57:	lea    rsi,[rip+0x649fa]        # 77458 <__TMC_END__>
   12a5e:	sub    rsi,rdi
   12a61:	mov    rax,rsi
   12a64:	shr    rsi,0x3f
   12a68:	sar    rax,0x3
   12a6c:	add    rsi,rax
   12a6f:	sar    rsi,1
   12a72:	je     12a88 <register_tm_clones+0x38>
   12a74:	mov    rax,QWORD PTR [rip+0x6357d]        # 75ff8 <_ITM_registerTMCloneTable@Base>
   12a7b:	test   rax,rax
   12a7e:	je     12a88 <register_tm_clones+0x38>
   12a80:	jmp    rax
   12a82:	nop    WORD PTR [rax+rax*1+0x0]
   12a88:	ret    
   12a89:	nop    DWORD PTR [rax+0x0]

0000000000012a90 <__do_global_dtors_aux>:
   12a90:	endbr64 
   12a94:	cmp    BYTE PTR [rip+0x649c5],0x0        # 77460 <completed.0>
   12a9b:	jne    12ac8 <__do_global_dtors_aux+0x38>
   12a9d:	push   rbp
   12a9e:	cmp    QWORD PTR [rip+0x634ba],0x0        # 75f60 <__cxa_finalize@GLIBC_2.2.5>
   12aa6:	mov    rbp,rsp
   12aa9:	je     12ab7 <__do_global_dtors_aux+0x27>
   12aab:	mov    rdi,QWORD PTR [rip+0x6474e]        # 77200 <__dso_handle>
   12ab2:	call   10400 <__cxa_finalize@plt>
   12ab7:	call   12a20 <deregister_tm_clones>
   12abc:	mov    BYTE PTR [rip+0x6499d],0x1        # 77460 <completed.0>
   12ac3:	pop    rbp
   12ac4:	ret    
   12ac5:	nop    DWORD PTR [rax]
   12ac8:	ret    
   12ac9:	nop    DWORD PTR [rax+0x0]

0000000000012ad0 <frame_dummy>:
   12ad0:	endbr64 
   12ad4:	jmp    12a50 <register_tm_clones>
   12ad9:	nop    DWORD PTR [rax+0x0]

0000000000012ae0 <atom_get_url>:
   12ae0:	endbr64 
   12ae4:	test   r8,r8
   12ae7:	je     12cf8 <atom_get_url+0x218>
   12aed:	push   r13
   12aef:	push   r12
   12af1:	push   rbp
   12af2:	push   rbx
   12af3:	mov    rbx,r9
   12af6:	sub    rsp,0x8
   12afa:	test   r9,r9
   12afd:	je     12b99 <atom_get_url+0xb9>
   12b03:	mov    rbp,rdi
   12b06:	mov    r13,r8
   12b09:	test   sil,0x8
   12b0d:	je     12b90 <atom_get_url+0xb0>
   12b13:	lea    rsi,[rip+0x384e6]        # 4b000 <_fini+0x60c>
   12b1a:	mov    rdi,rcx
   12b1d:	mov    r12,rcx
   12b20:	call   12590 <wget_strcasecmp_ascii@plt>
   12b25:	test   eax,eax
   12b27:	jne    12bd0 <atom_get_url+0xf0>
   12b2d:	movzx  eax,BYTE PTR [r13+0x0]
   12b32:	cmp    al,0xd
   12b34:	jg     12ba8 <atom_get_url+0xc8>
   12b36:	cmp    al,0x8
   12b38:	jg     12bac <atom_get_url+0xcc>
   12b3a:	test   rbx,rbx
   12b3d:	je     12b51 <atom_get_url+0x71>
   12b3f:	movzx  eax,BYTE PTR [r13+rbx*1-0x1]
   12b45:	lea    rdx,[rbx-0x1]
   12b49:	cmp    al,0xd
   12b4b:	jg     12bc0 <atom_get_url+0xe0>
   12b4d:	cmp    al,0x8
   12b4f:	jg     12bc4 <atom_get_url+0xe4>
   12b51:	mov    rax,QWORD PTR [rip+0x63478]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   12b58:	mov    edi,0x10
   12b5d:	call   QWORD PTR [rax]
   12b5f:	mov    r12,rax
   12b62:	test   rax,rax
   12b65:	je     12b99 <atom_get_url+0xb9>
   12b67:	mov    rdi,QWORD PTR [rbp+0x0]
   12b6b:	mov    QWORD PTR [rax],r13
   12b6e:	mov    QWORD PTR [rax+0x8],rbx
   12b72:	test   rdi,rdi
   12b75:	je     12d00 <atom_get_url+0x220>
   12b7b:	add    rsp,0x8
   12b7f:	mov    rsi,r12
   12b82:	pop    rbx
   12b83:	pop    rbp
   12b84:	pop    r12
   12b86:	pop    r13
   12b88:	jmp    11290 <wget_vector_add@plt>
   12b8d:	nop    DWORD PTR [rax]
   12b90:	and    esi,0x10
   12b93:	jne    12c50 <atom_get_url+0x170>
   12b99:	add    rsp,0x8
   12b9d:	pop    rbx
   12b9e:	pop    rbp
   12b9f:	pop    r12
   12ba1:	pop    r13
   12ba3:	ret    
   12ba4:	nop    DWORD PTR [rax+0x0]
   12ba8:	cmp    al,0x20
   12baa:	jne    12b3a <atom_get_url+0x5a>
   12bac:	add    r13,0x1
   12bb0:	sub    rbx,0x1
   12bb4:	jne    12b2d <atom_get_url+0x4d>
   12bba:	jmp    12b51 <atom_get_url+0x71>
   12bbc:	nop    DWORD PTR [rax+0x0]
   12bc0:	cmp    al,0x20
   12bc2:	jne    12b51 <atom_get_url+0x71>
   12bc4:	mov    rbx,rdx
   12bc7:	jmp    12b3a <atom_get_url+0x5a>
   12bcc:	nop    DWORD PTR [rax+0x0]
   12bd0:	lea    rsi,[rip+0x3842e]        # 4b005 <_fini+0x611>
   12bd7:	mov    rdi,r12
   12bda:	call   12590 <wget_strcasecmp_ascii@plt>
   12bdf:	test   eax,eax
   12be1:	je     12b2d <atom_get_url+0x4d>
   12be7:	lea    rsi,[rip+0x3841b]        # 4b009 <_fini+0x615>
   12bee:	mov    rdi,r12
   12bf1:	call   12590 <wget_strcasecmp_ascii@plt>
   12bf6:	test   eax,eax
   12bf8:	je     12b2d <atom_get_url+0x4d>
   12bfe:	lea    rsi,[rip+0x38408]        # 4b00d <_fini+0x619>
   12c05:	mov    rdi,r12
   12c08:	call   12590 <wget_strcasecmp_ascii@plt>
   12c0d:	test   eax,eax
   12c0f:	je     12b2d <atom_get_url+0x4d>
   12c15:	lea    rsi,[rip+0x383f8]        # 4b014 <_fini+0x620>
   12c1c:	mov    rdi,r12
   12c1f:	call   12590 <wget_strcasecmp_ascii@plt>
   12c24:	test   eax,eax
   12c26:	je     12b2d <atom_get_url+0x4d>
   12c2c:	mov    edx,0x6
   12c31:	lea    rsi,[rip+0x383e2]        # 4b01a <_fini+0x626>
   12c38:	mov    rdi,r12
   12c3b:	call   11c40 <wget_strncasecmp_ascii@plt>
   12c40:	test   eax,eax
   12c42:	jne    12b99 <atom_get_url+0xb9>
   12c48:	jmp    12b2d <atom_get_url+0x4d>
   12c4d:	nop    DWORD PTR [rax]
   12c50:	mov    esi,0x2f
   12c55:	mov    rdi,rdx
   12c58:	call   11740 <strrchr@plt>
   12c5d:	test   rax,rax
   12c60:	je     12b99 <atom_get_url+0xb9>
   12c66:	lea    r12,[rax+0x1]
   12c6a:	lea    rsi,[rip+0x383b0]        # 4b021 <_fini+0x62d>
   12c71:	mov    rdi,r12
   12c74:	call   12590 <wget_strcasecmp_ascii@plt>
   12c79:	test   eax,eax
   12c7b:	je     12c98 <atom_get_url+0x1b8>
   12c7d:	lea    rsi,[rip+0x3ae36]        # 4daba <__func__.0+0x48a>
   12c84:	mov    rdi,r12
   12c87:	call   12590 <wget_strcasecmp_ascii@plt>
   12c8c:	test   eax,eax
   12c8e:	jne    12d20 <atom_get_url+0x240>
   12c94:	nop    DWORD PTR [rax+0x0]
   12c98:	movzx  eax,BYTE PTR [r13+0x0]
   12c9d:	cmp    al,0xd
   12c9f:	jg     12ce0 <atom_get_url+0x200>
   12ca1:	cmp    al,0x8
   12ca3:	jle    12cbb <atom_get_url+0x1db>
   12ca5:	jmp    12ce4 <atom_get_url+0x204>
   12ca7:	nop    WORD PTR [rax+rax*1+0x0]
   12cb0:	cmp    al,0x8
   12cb2:	jle    12b51 <atom_get_url+0x71>
   12cb8:	mov    rbx,rdx
   12cbb:	test   rbx,rbx
   12cbe:	je     12b51 <atom_get_url+0x71>
   12cc4:	movzx  eax,BYTE PTR [r13+rbx*1-0x1]
   12cca:	lea    rdx,[rbx-0x1]
   12cce:	cmp    al,0xd
   12cd0:	jle    12cb0 <atom_get_url+0x1d0>
   12cd2:	cmp    al,0x20
   12cd4:	je     12cb8 <atom_get_url+0x1d8>
   12cd6:	jmp    12b51 <atom_get_url+0x71>
   12cdb:	nop    DWORD PTR [rax+rax*1+0x0]
   12ce0:	cmp    al,0x20
   12ce2:	jne    12cbb <atom_get_url+0x1db>
   12ce4:	add    r13,0x1
   12ce8:	sub    rbx,0x1
   12cec:	jne    12c98 <atom_get_url+0x1b8>
   12cee:	jmp    12b51 <atom_get_url+0x71>
   12cf3:	nop    DWORD PTR [rax+rax*1+0x0]
   12cf8:	ret    
   12cf9:	nop    DWORD PTR [rax+0x0]
   12d00:	mov    edi,0x20
   12d05:	xor    esi,esi
   12d07:	call   11f00 <wget_vector_create@plt>
   12d0c:	mov    QWORD PTR [rbp+0x0],rax
   12d10:	mov    rdi,rax
   12d13:	jmp    12b7b <atom_get_url+0x9b>
   12d18:	nop    DWORD PTR [rax+rax*1+0x0]
   12d20:	lea    rsi,[rip+0x382ff]        # 4b026 <_fini+0x632>
   12d27:	mov    rdi,r12
   12d2a:	call   12590 <wget_strcasecmp_ascii@plt>
   12d2f:	test   eax,eax
   12d31:	jne    12b99 <atom_get_url+0xb9>
   12d37:	jmp    12c98 <atom_get_url+0x1b8>
   12d3c:	nop    DWORD PTR [rax+0x0]

0000000000012d40 <wget_atom_get_urls_inline>:
   12d40:	endbr64 
   12d44:	push   rbx
   12d45:	mov    ecx,0x1
   12d4a:	mov    rbx,rsi
   12d4d:	lea    rsi,[rip+0xfffffffffffffd8c]        # 12ae0 <atom_get_url>
   12d54:	sub    rsp,0x10
   12d58:	mov    rax,QWORD PTR fs:0x28
   12d61:	mov    QWORD PTR [rsp+0x8],rax
   12d66:	xor    eax,eax
   12d68:	mov    rdx,rsp
   12d6b:	mov    QWORD PTR [rsp],0x0
   12d73:	call   11090 <wget_xml_parse_buffer@plt>
   12d78:	mov    rax,QWORD PTR [rsp]
   12d7c:	mov    QWORD PTR [rbx],rax
   12d7f:	mov    rax,QWORD PTR [rsp+0x8]
   12d84:	sub    rax,QWORD PTR fs:0x28
   12d8d:	jne    12d95 <wget_atom_get_urls_inline+0x55>
   12d8f:	add    rsp,0x10
   12d93:	pop    rbx
   12d94:	ret    
   12d95:	call   11760 <__stack_chk_fail@plt>
   12d9a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000012da0 <bar_update_winsize>:
   12da0:	push   r15
   12da2:	push   r14
   12da4:	push   r13
   12da6:	push   r12
   12da8:	push   rbp
   12da9:	push   rbx
   12daa:	mov    rbx,rdi
   12dad:	sub    rsp,0x28
   12db1:	mov    rax,QWORD PTR fs:0x28
   12dba:	mov    QWORD PTR [rsp+0x18],rax
   12dbf:	mov    eax,DWORD PTR [rip+0x6469f]        # 77464 <winsize_changed>
   12dc5:	test   eax,eax
   12dc7:	jne    12e00 <bar_update_winsize+0x60>
   12dc9:	test   sil,sil
   12dcc:	jne    12e00 <bar_update_winsize+0x60>
   12dce:	mov    DWORD PTR [rip+0x6468c],0x0        # 77464 <winsize_changed>
   12dd8:	mov    rax,QWORD PTR [rsp+0x18]
   12ddd:	sub    rax,QWORD PTR fs:0x28
   12de6:	jne    13003 <bar_update_winsize+0x263>
   12dec:	add    rsp,0x28
   12df0:	pop    rbx
   12df1:	pop    rbp
   12df2:	pop    r12
   12df4:	pop    r13
   12df6:	pop    r14
   12df8:	pop    r15
   12dfa:	ret    
   12dfb:	nop    DWORD PTR [rax+rax*1+0x0]
   12e00:	lea    rdi,[rsp+0x14]
   12e05:	xor    esi,esi
   12e07:	mov    DWORD PTR [rsp+0x14],0x46
   12e0f:	call   10e50 <wget_get_screen_size@plt>
   12e14:	mov    r12d,eax
   12e17:	test   eax,eax
   12e19:	je     12f70 <bar_update_winsize+0x1d0>
   12e1f:	mov    r12d,DWORD PTR [rsp+0x14]
   12e24:	lea    esi,[r12-0x30]
   12e29:	sub    r12d,0x31
   12e2d:	movsxd rsi,esi
   12e30:	mov    rax,QWORD PTR [rip+0x63109]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   12e37:	movsxd rdi,DWORD PTR [rbx+0x28]
   12e3b:	call   QWORD PTR [rax]
   12e3d:	mov    rbp,rax
   12e40:	test   rax,rax
   12e43:	je     12dd8 <bar_update_winsize+0x38>
   12e45:	cmp    DWORD PTR [rbx+0x2c],r12d
   12e49:	jge    12f12 <bar_update_winsize+0x172>
   12e4f:	mov    r15,QWORD PTR [rip+0x6317a]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   12e56:	movsxd r13,r12d
   12e59:	mov    rdi,r13
   12e5c:	call   QWORD PTR [r15]
   12e5f:	mov    rdi,r13
   12e62:	mov    QWORD PTR [rsp+0x8],rax
   12e67:	call   QWORD PTR [r15]
   12e6a:	mov    rdi,r13
   12e6d:	mov    r14,rax
   12e70:	call   QWORD PTR [r15]
   12e73:	mov    r8,QWORD PTR [rsp+0x8]
   12e78:	mov    r15,rax
   12e7b:	test   r8,r8
   12e7e:	je     12f98 <bar_update_winsize+0x1f8>
   12e84:	test   r14,r14
   12e87:	je     12f98 <bar_update_winsize+0x1f8>
   12e8d:	test   rax,rax
   12e90:	je     12ffa <bar_update_winsize+0x25a>
   12e96:	mov    rdi,QWORD PTR [rbx+0x18]
   12e9a:	test   rdi,rdi
   12e9d:	je     12eb2 <bar_update_winsize+0x112>
   12e9f:	mov    rax,QWORD PTR [rip+0x63142]        # 75fe8 <wget_free@@Base-0x1328>
   12ea6:	mov    QWORD PTR [rsp+0x8],r8
   12eab:	call   QWORD PTR [rax]
   12ead:	mov    r8,QWORD PTR [rsp+0x8]
   12eb2:	mov    QWORD PTR [rbx+0x18],r8
   12eb6:	mov    rdi,r8
   12eb9:	mov    rdx,r13
   12ebc:	mov    esi,0x3d
   12ec1:	call   10ca0 <memset@plt>
   12ec6:	mov    rdi,QWORD PTR [rbx+0x10]
   12eca:	test   rdi,rdi
   12ecd:	je     12ed8 <bar_update_winsize+0x138>
   12ecf:	mov    rax,QWORD PTR [rip+0x63112]        # 75fe8 <wget_free@@Base-0x1328>
   12ed6:	call   QWORD PTR [rax]
   12ed8:	mov    QWORD PTR [rbx+0x10],r14
   12edc:	mov    rdi,r14
   12edf:	mov    rdx,r13
   12ee2:	mov    esi,0x2a
   12ee7:	call   10ca0 <memset@plt>
   12eec:	mov    rdi,QWORD PTR [rbx+0x20]
   12ef0:	test   rdi,rdi
   12ef3:	je     12efe <bar_update_winsize+0x15e>
   12ef5:	mov    rax,QWORD PTR [rip+0x630ec]        # 75fe8 <wget_free@@Base-0x1328>
   12efc:	call   QWORD PTR [rax]
   12efe:	mov    QWORD PTR [rbx+0x20],r15
   12f02:	mov    rdx,r13
   12f05:	mov    esi,0x20
   12f0a:	mov    rdi,r15
   12f0d:	call   10ca0 <memset@plt>
   12f12:	mov    rdi,QWORD PTR [rbx+0x8]
   12f16:	test   rdi,rdi
   12f19:	je     12f24 <bar_update_winsize+0x184>
   12f1b:	mov    rax,QWORD PTR [rip+0x630c6]        # 75fe8 <wget_free@@Base-0x1328>
   12f22:	call   QWORD PTR [rax]
   12f24:	mov    eax,DWORD PTR [rbx+0x28]
   12f27:	mov    QWORD PTR [rbx+0x8],rbp
   12f2b:	test   eax,eax
   12f2d:	jle    12f64 <bar_update_winsize+0x1c4>
   12f2f:	lea    esi,[rax-0x1]
   12f32:	mov    rcx,QWORD PTR [rbx]
   12f35:	movsxd rdi,r12d
   12f38:	mov    rdx,rbp
   12f3b:	imul   rsi,rsi,0x1c8
   12f42:	lea    rax,[rcx+0x1c8]
   12f49:	add    rsi,rax
   12f4c:	jmp    12f56 <bar_update_winsize+0x1b6>
   12f4e:	xchg   ax,ax
   12f50:	add    rax,0x1c8
   12f56:	mov    QWORD PTR [rcx],rdx
   12f59:	add    rdx,rdi
   12f5c:	mov    rcx,rax
   12f5f:	cmp    rsi,rax
   12f62:	jne    12f50 <bar_update_winsize+0x1b0>
   12f64:	mov    DWORD PTR [rbx+0x2c],r12d
   12f68:	jmp    12dce <bar_update_winsize+0x2e>
   12f6d:	nop    DWORD PTR [rax]
   12f70:	mov    eax,DWORD PTR [rsp+0x14]
   12f74:	mov    esi,0x1
   12f79:	cmp    eax,0x30
   12f7c:	jle    12e30 <bar_update_winsize+0x90>
   12f82:	lea    esi,[rax-0x31]
   12f85:	lea    r12d,[rax-0x32]
   12f89:	movsxd rsi,esi
   12f8c:	jmp    12e30 <bar_update_winsize+0x90>
   12f91:	nop    DWORD PTR [rax+0x0]
   12f98:	mov    rbx,QWORD PTR [rip+0x63049]        # 75fe8 <wget_free@@Base-0x1328>
   12f9f:	mov    rax,QWORD PTR [rbx]
   12fa2:	test   r15,r15
   12fa5:	je     12fb6 <bar_update_winsize+0x216>
   12fa7:	mov    QWORD PTR [rsp+0x8],r8
   12fac:	mov    rdi,r15
   12faf:	call   rax
   12fb1:	mov    r8,QWORD PTR [rsp+0x8]
   12fb6:	test   r14,r14
   12fb9:	je     12fca <bar_update_winsize+0x22a>
   12fbb:	mov    QWORD PTR [rsp+0x8],r8
   12fc0:	mov    rdi,r14
   12fc3:	call   QWORD PTR [rbx]
   12fc5:	mov    r8,QWORD PTR [rsp+0x8]
   12fca:	test   r8,r8
   12fcd:	je     12fd4 <bar_update_winsize+0x234>
   12fcf:	mov    rdi,r8
   12fd2:	call   QWORD PTR [rbx]
   12fd4:	mov    rax,QWORD PTR [rsp+0x18]
   12fd9:	sub    rax,QWORD PTR fs:0x28
   12fe2:	jne    13003 <bar_update_winsize+0x263>
   12fe4:	mov    rax,QWORD PTR [rbx]
   12fe7:	add    rsp,0x28
   12feb:	mov    rdi,rbp
   12fee:	pop    rbx
   12fef:	pop    rbp
   12ff0:	pop    r12
   12ff2:	pop    r13
   12ff4:	pop    r14
   12ff6:	pop    r15
   12ff8:	jmp    rax
   12ffa:	mov    rbx,QWORD PTR [rip+0x62fe7]        # 75fe8 <wget_free@@Base-0x1328>
   13001:	jmp    12fbb <bar_update_winsize+0x21b>
   13003:	call   11760 <__stack_chk_fail@plt>
   13008:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000013010 <bar_update_slot>:
   13010:	push   r15
   13012:	push   r14
   13014:	push   r13
   13016:	push   r12
   13018:	movsxd r12,esi
   1301b:	push   rbp
   1301c:	push   rbx
   1301d:	mov    rbx,r12
   13020:	imul   r12,r12,0x1c8
   13027:	sub    rsp,0x48
   1302b:	mov    r13,QWORD PTR [rdi]
   1302e:	mov    rax,QWORD PTR fs:0x28
   13037:	mov    QWORD PTR [rsp+0x38],rax
   1303c:	xor    eax,eax
   1303e:	add    r13,r12
   13041:	mov    eax,DWORD PTR [r13+0x1c0]
   13048:	lea    edx,[rax-0x1]
   1304b:	cmp    edx,0x1
   1304e:	jbe    13078 <bar_update_slot+0x68>
   13050:	mov    rax,QWORD PTR [rsp+0x38]
   13055:	sub    rax,QWORD PTR fs:0x28
   1305e:	jne    134a7 <bar_update_slot+0x497>
   13064:	add    rsp,0x48
   13068:	pop    rbx
   13069:	pop    rbp
   1306a:	pop    r12
   1306c:	pop    r13
   1306e:	pop    r14
   13070:	pop    r15
   13072:	ret    
   13073:	nop    DWORD PTR [rax+rax*1+0x0]
   13078:	mov    rcx,QWORD PTR [r13+0x20]
   1307c:	mov    r8,QWORD PTR [r13+0x1a8]
   13083:	mov    r14,rdi
   13086:	cmp    eax,0x2
   13089:	jne    13094 <bar_update_slot+0x84>
   1308b:	test   rcx,rcx
   1308e:	je     13460 <bar_update_slot+0x450>
   13094:	mov    DWORD PTR [rsp+0x20],0x0
   1309c:	test   rcx,rcx
   1309f:	je     130b7 <bar_update_slot+0xa7>
   130a1:	lea    rax,[r8+r8*4]
   130a5:	xor    edx,edx
   130a7:	lea    rax,[rax+rax*4]
   130ab:	shl    rax,0x2
   130af:	div    rcx
   130b2:	mov    QWORD PTR [rsp+0x20],rax
   130b7:	lea    rax,[r13+0x18]
   130bb:	mov    rdx,r8
   130be:	mov    esi,0x8
   130c3:	mov    rdi,rax
   130c6:	mov    QWORD PTR [rsp+0x28],rax
   130cb:	call   11670 <wget_human_readable@plt>
   130d0:	movsxd rax,DWORD PTR [r13+0x1b0]
   130d7:	lea    rdx,[r13+rax*8+0x0]
   130dc:	mov    rbp,rax
   130df:	lea    rax,[r13+0x10]
   130e3:	mov    QWORD PTR [rsp+0x18],rax
   130e8:	mov    rax,QWORD PTR [rdx+0xe8]
   130ef:	mov    QWORD PTR [rsp+0x8],rdx
   130f4:	cmp    QWORD PTR [r13+0x1a8],rax
   130fb:	je     1319d <bar_update_slot+0x18d>
   13101:	mov    r15d,DWORD PTR [r13+0x1b4]
   13108:	call   11020 <wget_get_timemillis@plt>
   1310d:	cmp    ebp,0x17
   13110:	mov    rdx,QWORD PTR [rsp+0x8]
   13115:	lea    r8d,[rbp+0x1]
   13119:	mov    rsi,rax
   1311c:	mov    rax,QWORD PTR [r13+0x1a8]
   13123:	je     133f0 <bar_update_slot+0x3e0>
   13129:	mov    QWORD PTR [rdx+0xf0],rax
   13130:	mov    QWORD PTR [rdx+0x30],rsi
   13134:	cmp    r15d,0x17
   13138:	jle    13404 <bar_update_slot+0x3f4>
   1313e:	xor    edx,edx
   13140:	lea    ecx,[rbp+0x2]
   13143:	cmp    r8d,0x17
   13147:	cmove  ecx,edx
   1314a:	movzx  edx,WORD PTR [rip+0x640b7]        # 77208 <speed_modifier>
   13151:	movsxd rcx,ecx
   13154:	mov    rdi,QWORD PTR [rsp+0x18]
   13159:	mov    DWORD PTR [rsp+0x8],r8d
   1315e:	sub    rax,QWORD PTR [r13+rcx*8+0xe8]
   13166:	imul   rax,rdx
   1316a:	sub    rsi,QWORD PTR [r13+rcx*8+0x28]
   1316f:	mov    edx,0x1
   13174:	cmove  rsi,rdx
   13178:	xor    edx,edx
   1317a:	div    rsi
   1317d:	mov    esi,0x8
   13182:	mov    rdx,rax
   13185:	call   11670 <wget_human_readable@plt>
   1318a:	mov    r8d,DWORD PTR [rsp+0x8]
   1318f:	mov    DWORD PTR [r13+0x1b0],r8d
   13196:	mov    DWORD PTR [r13+0x1b4],r15d
   1319d:	add    r12,QWORD PTR [r14]
   131a0:	mov    ebp,DWORD PTR [r14+0x2c]
   131a4:	mov    rax,QWORD PTR [r12+0x20]
   131a9:	test   rax,rax
   131ac:	je     13248 <bar_update_slot+0x238>
   131b2:	mov    rdx,QWORD PTR [r12+0x1a8]
   131ba:	test   rdx,rdx
   131bd:	js     13438 <bar_update_slot+0x428>
   131c3:	pxor   xmm0,xmm0
   131c7:	cvtsi2sd xmm0,rdx
   131cc:	test   rax,rax
   131cf:	js     13480 <bar_update_slot+0x470>
   131d5:	pxor   xmm1,xmm1
   131d9:	cvtsi2sd xmm1,rax
   131de:	divsd  xmm0,xmm1
   131e2:	pxor   xmm1,xmm1
   131e6:	mov    rdi,QWORD PTR [r12]
   131ea:	mov    rsi,QWORD PTR [r14+0x18]
   131ee:	cvtsi2sd xmm1,ebp
   131f2:	mov    eax,0x1
   131f7:	mulsd  xmm0,xmm1
   131fb:	cvttsd2si edx,xmm0
   131ff:	test   edx,edx
   13201:	cmovg  eax,edx
   13204:	cmp    edx,ebp
   13206:	cmovle ebp,eax
   13209:	lea    edx,[rbp-0x1]
   1320c:	movsxd rdx,edx
   1320f:	call   11220 <memcpy@plt>
   13214:	mov    rax,QWORD PTR [r12]
   13218:	movsxd rdi,ebp
   1321b:	mov    BYTE PTR [rax+rdi*1-0x1],0x3e
   13220:	movsxd rdx,DWORD PTR [r14+0x2c]
   13224:	cmp    ebp,edx
   13226:	jge    13291 <bar_update_slot+0x281>
   13228:	sub    edx,ebp
   1322a:	add    rdi,QWORD PTR [r12]
   1322e:	mov    esi,0x20
   13233:	movsxd rdx,edx
   13236:	call   10ca0 <memset@plt>
   1323b:	movsxd rdx,DWORD PTR [r14+0x2c]
   1323f:	jmp    13291 <bar_update_slot+0x281>
   13241:	nop    DWORD PTR [rax+0x0]
   13248:	mov    eax,DWORD PTR [r12+0x1b8]
   13250:	lea    edx,[rbp+rbp*1-0x6]
   13254:	mov    ecx,edx
   13256:	cdq    
   13257:	idiv   ecx
   13259:	lea    eax,[rbp-0x2]
   1325c:	mov    r15d,edx
   1325f:	cmp    edx,eax
   13261:	jge    133d8 <bar_update_slot+0x3c8>
   13267:	mov    rdi,QWORD PTR [r12]
   1326b:	movsxd rdx,ebp
   1326e:	mov    esi,0x20
   13273:	movsxd r15,r15d
   13276:	call   10ca0 <memset@plt>
   1327b:	add    r15,QWORD PTR [r12]
   1327f:	mov    eax,0x3d3c
   13284:	mov    WORD PTR [r15],ax
   13288:	mov    BYTE PTR [r15+0x2],0x3e
   1328d:	movsxd rdx,DWORD PTR [r14+0x2c]
   13291:	mov    rax,QWORD PTR [r12]
   13295:	lea    rsi,[rip+0x37d96]        # 4b032 <_fini+0x63e>
   1329c:	mov    BYTE PTR [rax+rdx*1],0x0
   132a0:	mov    rax,QWORD PTR [rip+0x62c91]        # 75f38 <stdout@GLIBC_2.2.5>
   132a7:	mov    edx,DWORD PTR [r14+0x28]
   132ab:	mov    rdi,QWORD PTR [rax]
   132ae:	xor    eax,eax
   132b0:	sub    edx,ebx
   132b2:	call   108e0 <wget_fprintf@plt>
   132b7:	mov    rax,QWORD PTR [r13+0x8]
   132bb:	mov    edx,0x14
   132c0:	mov    QWORD PTR [rsp+0x8],rax
   132c5:	test   rax,rax
   132c8:	je     1334b <bar_update_slot+0x33b>
   132ce:	mov    rdi,QWORD PTR [rsp+0x8]
   132d3:	xor    r12d,r12d
   132d6:	xor    ebp,ebp
   132d8:	call   10ab0 <strlen@plt>
   132dd:	mov    rbx,rax
   132e0:	lea    rax,[rsp+0x34]
   132e5:	mov    QWORD PTR [rsp+0x10],rax
   132ea:	jmp    13318 <bar_update_slot+0x308>
   132ec:	nop    DWORD PTR [rax+0x0]
   132f0:	mov    edi,DWORD PTR [rsp+0x34]
   132f4:	call   11600 <wcwidth@plt>
   132f9:	cmp    ebp,0x14
   132fc:	jne    13306 <bar_update_slot+0x2f6>
   132fe:	test   eax,eax
   13300:	je     134a0 <bar_update_slot+0x490>
   13306:	add    eax,ebp
   13308:	cmp    eax,0x14
   1330b:	ja     13338 <bar_update_slot+0x328>
   1330d:	movsxd rdx,r15d
   13310:	add    r12d,r15d
   13313:	mov    ebp,eax
   13315:	sub    rbx,rdx
   13318:	mov    rax,QWORD PTR [rsp+0x8]
   1331d:	mov    rdi,QWORD PTR [rsp+0x10]
   13322:	movsxd r14,r12d
   13325:	mov    rdx,rbx
   13328:	lea    rsi,[rax+r14*1]
   1332c:	call   10e00 <mbtowc@plt>
   13331:	mov    r15d,eax
   13334:	test   eax,eax
   13336:	jg     132f0 <bar_update_slot+0x2e0>
   13338:	mov    edx,0x14
   1333d:	sub    edx,ebp
   1333f:	mov    rax,QWORD PTR [r13+0x8]
   13343:	add    edx,r14d
   13346:	mov    QWORD PTR [rsp+0x8],rax
   1334b:	movsx  eax,BYTE PTR [rip+0x63eb8]        # 7720a <report_speed_type_char>
   13352:	sub    rsp,0x8
   13356:	mov    r9d,0x3
   1335c:	mov    ecx,edx
   1335e:	lea    rsi,[rip+0x37cd9]        # 4b03e <_fini+0x64a>
   13365:	push   rax
   13366:	push   QWORD PTR [rsp+0x28]
   1336a:	push   0x8
   1336c:	push   QWORD PTR [rsp+0x48]
   13370:	push   0x8
   13372:	push   QWORD PTR [r13+0x0]
   13376:	mov    eax,DWORD PTR [rsp+0x58]
   1337a:	push   rax
   1337b:	mov    rax,QWORD PTR [rip+0x62bb6]        # 75f38 <stdout@GLIBC_2.2.5>
   13382:	mov    r8,QWORD PTR [rsp+0x48]
   13387:	mov    rdi,QWORD PTR [rax]
   1338a:	xor    eax,eax
   1338c:	call   108e0 <wget_fprintf@plt>
   13391:	mov    rax,QWORD PTR [rip+0x62ba0]        # 75f38 <stdout@GLIBC_2.2.5>
   13398:	add    rsp,0x40
   1339c:	mov    edx,0x2
   133a1:	mov    esi,0x1
   133a6:	lea    rdi,[rip+0x37caf]        # 4b05c <_fini+0x668>
   133ad:	mov    rcx,QWORD PTR [rax]
   133b0:	call   12730 <fwrite@plt>
   133b5:	mov    rax,QWORD PTR [rip+0x62b7c]        # 75f38 <stdout@GLIBC_2.2.5>
   133bc:	mov    rdi,QWORD PTR [rax]
   133bf:	call   40840 <rpl_fflush>
   133c4:	add    DWORD PTR [r13+0x1b8],0x1
   133cc:	jmp    13050 <bar_update_slot+0x40>
   133d1:	nop    DWORD PTR [rax+0x0]
   133d8:	mov    eax,edx
   133da:	mov    r15d,ebp
   133dd:	sub    eax,ebp
   133df:	add    eax,0x5
   133e2:	sub    r15d,eax
   133e5:	jmp    13267 <bar_update_slot+0x257>
   133ea:	nop    WORD PTR [rax+rax*1+0x0]
   133f0:	mov    QWORD PTR [r13+0xe8],rax
   133f7:	xor    r8d,r8d
   133fa:	mov    QWORD PTR [r13+0x28],rsi
   133fe:	cmp    r15d,0x17
   13402:	jg     13470 <bar_update_slot+0x460>
   13404:	add    r15d,0x1
   13408:	cmp    r15d,0x1
   1340c:	jg     13470 <bar_update_slot+0x460>
   1340e:	mov    rdi,QWORD PTR [rsp+0x18]
   13413:	mov    edx,0x8
   13418:	mov    DWORD PTR [rsp+0x8],r8d
   1341d:	lea    rsi,[rip+0x37c07]        # 4b02b <_fini+0x637>
   13424:	call   10970 <wget_strlcpy@plt>
   13429:	mov    r8d,DWORD PTR [rsp+0x8]
   1342e:	jmp    1318f <bar_update_slot+0x17f>
   13433:	nop    DWORD PTR [rax+rax*1+0x0]
   13438:	mov    rcx,rdx
   1343b:	and    edx,0x1
   1343e:	pxor   xmm0,xmm0
   13442:	shr    rcx,1
   13445:	or     rcx,rdx
   13448:	cvtsi2sd xmm0,rcx
   1344d:	addsd  xmm0,xmm0
   13451:	jmp    131cc <bar_update_slot+0x1bc>
   13456:	cs nop WORD PTR [rax+rax*1+0x0]
   13460:	mov    QWORD PTR [r13+0x20],r8
   13464:	mov    rcx,r8
   13467:	jmp    13094 <bar_update_slot+0x84>
   1346c:	nop    DWORD PTR [rax+0x0]
   13470:	mov    ecx,0x1
   13475:	jmp    1314a <bar_update_slot+0x13a>
   1347a:	nop    WORD PTR [rax+rax*1+0x0]
   13480:	mov    rdx,rax
   13483:	and    eax,0x1
   13486:	pxor   xmm1,xmm1
   1348a:	shr    rdx,1
   1348d:	or     rdx,rax
   13490:	cvtsi2sd xmm1,rdx
   13495:	addsd  xmm1,xmm1
   13499:	jmp    131de <bar_update_slot+0x1ce>
   1349e:	xchg   ax,ax
   134a0:	xor    edx,edx
   134a2:	jmp    1333f <bar_update_slot+0x32f>
   134a7:	call   11760 <__stack_chk_fail@plt>
   134ac:	nop    DWORD PTR [rax+0x0]

00000000000134b0 <bar_update>:
   134b0:	push   r13
   134b2:	xor    esi,esi
   134b4:	push   r12
   134b6:	mov    r12,rdi
   134b9:	push   rbp
   134ba:	push   rbx
   134bb:	sub    rsp,0x8
   134bf:	mov    ebx,DWORD PTR [rip+0x63f9f]        # 77464 <winsize_changed>
   134c5:	call   12da0 <bar_update_winsize>
   134ca:	mov    eax,DWORD PTR [r12+0x28]
   134cf:	test   eax,eax
   134d1:	jle    1351e <bar_update+0x6e>
   134d3:	test   ebx,ebx
   134d5:	mov    rax,QWORD PTR [r12]
   134d9:	setne  r13b
   134dd:	xor    ebx,ebx
   134df:	xor    ebp,ebp
   134e1:	nop    DWORD PTR [rax+0x0]
   134e8:	test   BYTE PTR [rax+rbx*1+0x1c4],0x1
   134f0:	jne    134f7 <bar_update+0x47>
   134f2:	test   r13b,r13b
   134f5:	je     1350d <bar_update+0x5d>
   134f7:	mov    esi,ebp
   134f9:	mov    rdi,r12
   134fc:	call   13010 <bar_update_slot>
   13501:	mov    rax,QWORD PTR [r12]
   13505:	and    BYTE PTR [rax+rbx*1+0x1c4],0xfe
   1350d:	add    ebp,0x1
   13510:	add    rbx,0x1c8
   13517:	cmp    DWORD PTR [r12+0x28],ebp
   1351c:	jg     134e8 <bar_update+0x38>
   1351e:	add    rsp,0x8
   13522:	pop    rbx
   13523:	pop    rbp
   13524:	pop    r12
   13526:	pop    r13
   13528:	ret    
   13529:	nop    DWORD PTR [rax+0x0]

0000000000013530 <wget_bar_set_slots>:
   13530:	endbr64 
   13534:	push   r13
   13536:	push   r12
   13538:	push   rbp
   13539:	mov    rbp,rdi
   1353c:	push   rbx
   1353d:	mov    ebx,esi
   1353f:	mov    r12d,ebx
   13542:	sub    rsp,0x8
   13546:	mov    rdi,QWORD PTR [rdi+0x30]
   1354a:	call   12040 <wget_thread_mutex_lock@plt>
   1354f:	sub    r12d,DWORD PTR [rbp+0x28]
   13553:	test   r12d,r12d
   13556:	jle    135d3 <wget_bar_set_slots+0xa3>
   13558:	mov    rax,QWORD PTR [rip+0x62a21]        # 75f80 <wget_realloc_fn@@Base-0x1398>
   1355f:	movsxd rsi,ebx
   13562:	mov    rdi,QWORD PTR [rbp+0x0]
   13566:	imul   rsi,rsi,0x1c8
   1356d:	call   QWORD PTR [rax]
   1356f:	test   rax,rax
   13572:	je     135d3 <wget_bar_set_slots+0xa3>
   13574:	movsxd rcx,DWORD PTR [rbp+0x28]
   13578:	movsxd rdx,r12d
   1357b:	mov    QWORD PTR [rbp+0x0],rax
   1357f:	xor    esi,esi
   13581:	imul   rdx,rdx,0x1c8
   13588:	imul   rcx,rcx,0x1c8
   1358f:	lea    rdi,[rax+rcx*1]
   13593:	call   10ca0 <memset@plt>
   13598:	mov    r13,QWORD PTR [rip+0x62999]        # 75f38 <stdout@GLIBC_2.2.5>
   1359f:	mov    DWORD PTR [rbp+0x28],ebx
   135a2:	xor    ebx,ebx
   135a4:	nop    DWORD PTR [rax+0x0]
   135a8:	mov    rsi,QWORD PTR [r13+0x0]
   135ac:	mov    edi,0xa
   135b1:	add    ebx,0x1
   135b4:	call   119a0 <fputc@plt>
   135b9:	cmp    r12d,ebx
   135bc:	jne    135a8 <wget_bar_set_slots+0x78>
   135be:	mov    rdi,rbp
   135c1:	mov    esi,0x1
   135c6:	call   12da0 <bar_update_winsize>
   135cb:	mov    rdi,rbp
   135ce:	call   134b0 <bar_update>
   135d3:	mov    rdi,QWORD PTR [rbp+0x30]
   135d7:	add    rsp,0x8
   135db:	pop    rbx
   135dc:	pop    rbp
   135dd:	pop    r12
   135df:	pop    r13
   135e1:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   135e6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000135f0 <wget_bar_init>:
   135f0:	endbr64 
   135f4:	push   r12
   135f6:	mov    r12,rdi
   135f9:	push   rbp
   135fa:	mov    ebp,esi
   135fc:	xor    esi,esi
   135fe:	sub    rsp,0x18
   13602:	mov    rax,QWORD PTR fs:0x28
   1360b:	mov    QWORD PTR [rsp+0x8],rax
   13610:	xor    eax,eax
   13612:	lea    rdi,[rsp+0x4]
   13617:	mov    DWORD PTR [rsp+0x4],0x46
   1361f:	call   10e50 <wget_get_screen_size@plt>
   13624:	test   eax,eax
   13626:	mov    eax,DWORD PTR [rsp+0x4]
   1362a:	jne    13643 <wget_bar_init+0x53>
   1362c:	cmp    eax,0x30
   1362f:	jg     13640 <wget_bar_init+0x50>
   13631:	xor    r12d,r12d
   13634:	jmp    13683 <wget_bar_init+0x93>
   13636:	cs nop WORD PTR [rax+rax*1+0x0]
   13640:	sub    eax,0x1
   13643:	test   ebp,ebp
   13645:	jle    13631 <wget_bar_init+0x41>
   13647:	cmp    eax,0x31
   1364a:	jle    13631 <wget_bar_init+0x41>
   1364c:	test   r12,r12
   1364f:	je     136a0 <wget_bar_init+0xb0>
   13651:	mov    QWORD PTR [r12+0x30],0x0
   1365a:	pxor   xmm0,xmm0
   1365e:	movups XMMWORD PTR [r12],xmm0
   13663:	movups XMMWORD PTR [r12+0x10],xmm0
   13669:	movups XMMWORD PTR [r12+0x20],xmm0
   1366f:	lea    rdi,[r12+0x30]
   13674:	call   10530 <wget_thread_mutex_init@plt>
   13679:	mov    esi,ebp
   1367b:	mov    rdi,r12
   1367e:	call   10900 <wget_bar_set_slots@plt>
   13683:	mov    rax,QWORD PTR [rsp+0x8]
   13688:	sub    rax,QWORD PTR fs:0x28
   13691:	jne    136c0 <wget_bar_init+0xd0>
   13693:	add    rsp,0x18
   13697:	mov    rax,r12
   1369a:	pop    rbp
   1369b:	pop    r12
   1369d:	ret    
   1369e:	xchg   ax,ax
   136a0:	mov    rax,QWORD PTR [rip+0x62899]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   136a7:	mov    esi,0x38
   136ac:	mov    edi,0x1
   136b1:	call   QWORD PTR [rax]
   136b3:	mov    r12,rax
   136b6:	test   rax,rax
   136b9:	jne    1366f <wget_bar_init+0x7f>
   136bb:	jmp    13631 <wget_bar_init+0x41>
   136c0:	call   11760 <__stack_chk_fail@plt>
   136c5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

00000000000136d0 <wget_bar_slot_begin>:
   136d0:	endbr64 
   136d4:	push   r14
   136d6:	mov    r14,rdx
   136d9:	push   r13
   136db:	mov    r13d,ecx
   136de:	push   r12
   136e0:	mov    r12,r8
   136e3:	push   rbp
   136e4:	mov    rbp,rdi
   136e7:	push   rbx
   136e8:	mov    rdi,QWORD PTR [rdi+0x30]
   136ec:	movsxd rbx,esi
   136ef:	imul   rbx,rbx,0x1c8
   136f6:	call   12040 <wget_thread_mutex_lock@plt>
   136fb:	add    rbx,QWORD PTR [rbp+0x0]
   136ff:	mov    rdi,QWORD PTR [rbx+0x8]
   13703:	test   rdi,rdi
   13706:	je     13719 <wget_bar_slot_begin+0x49>
   13708:	mov    rax,QWORD PTR [rip+0x628d9]        # 75fe8 <wget_free@@Base-0x1328>
   1370f:	call   QWORD PTR [rax]
   13711:	mov    QWORD PTR [rbx+0x8],0x0
   13719:	mov    esi,DWORD PTR [rbx+0x1bc]
   1371f:	test   r13d,r13d
   13722:	je     1372d <wget_bar_slot_begin+0x5d>
   13724:	add    esi,0x1
   13727:	mov    DWORD PTR [rbx+0x1bc],esi
   1372d:	cmp    esi,0x1
   13730:	je     137f0 <wget_bar_slot_begin+0x120>
   13736:	lea    rdi,[rip+0x37922]        # 4b05f <_fini+0x66b>
   1373d:	xor    eax,eax
   1373f:	call   12810 <wget_aprintf@plt>
   13744:	mov    QWORD PTR [rbx+0x8],rax
   13748:	mov    rax,QWORD PTR [rbx+0x20]
   1374c:	lea    rdi,[rbx+0x30]
   13750:	mov    ecx,ebx
   13752:	lea    rdx,[rbx+0xf0]
   13759:	add    r12,rax
   1375c:	and    rdi,0xfffffffffffffff8
   13760:	xor    eax,eax
   13762:	and    rdx,0xfffffffffffffff8
   13766:	mov    QWORD PTR [rbx+0x20],r12
   1376a:	sub    ecx,edi
   1376c:	mov    QWORD PTR [rbx+0x28],0x0
   13774:	add    ecx,0xe8
   1377a:	mov    QWORD PTR [rbx+0xe0],0x0
   13785:	shr    ecx,0x3
   13788:	or     BYTE PTR [rbx+0x1c4],0x1
   1378f:	mov    DWORD PTR [rbx+0x1c0],0x1
   13799:	mov    QWORD PTR [rbx+0x1b0],0x0
   137a4:	mov    DWORD PTR [rbx+0x1b8],0x0
   137ae:	rep stos QWORD PTR es:[rdi],rax
   137b1:	mov    rdi,rdx
   137b4:	mov    QWORD PTR [rbx+0xe8],0x0
   137bf:	mov    QWORD PTR [rbx+0x1a0],0x0
   137ca:	sub    ebx,edx
   137cc:	lea    ecx,[rbx+0x1a8]
   137d2:	shr    ecx,0x3
   137d5:	rep stos QWORD PTR es:[rdi],rax
   137d8:	mov    rdi,QWORD PTR [rbp+0x30]
   137dc:	pop    rbx
   137dd:	pop    rbp
   137de:	pop    r12
   137e0:	pop    r13
   137e2:	pop    r14
   137e4:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   137e9:	nop    DWORD PTR [rax+0x0]
   137f0:	mov    rdi,r14
   137f3:	call   127b0 <wget_strdup@plt>
   137f8:	mov    QWORD PTR [rbx+0x1a8],0x0
   13803:	mov    QWORD PTR [rbx+0x8],rax
   13807:	xor    eax,eax
   13809:	jmp    1374c <wget_bar_slot_begin+0x7c>
   1380e:	xchg   ax,ax

0000000000013810 <wget_bar_slot_downloaded>:
   13810:	endbr64 
   13814:	push   r12
   13816:	mov    r12,rdx
   13819:	push   rbp
   1381a:	mov    rbp,rdi
   1381d:	push   rbx
   1381e:	mov    rdi,QWORD PTR [rdi+0x30]
   13822:	mov    ebx,esi
   13824:	call   12040 <wget_thread_mutex_lock@plt>
   13829:	movsxd rsi,ebx
   1382c:	mov    rdi,QWORD PTR [rbp+0x30]
   13830:	imul   rsi,rsi,0x1c8
   13837:	add    rsi,QWORD PTR [rbp+0x0]
   1383b:	add    QWORD PTR [rsi+0x1a8],r12
   13842:	or     BYTE PTR [rsi+0x1c4],0x1
   13849:	pop    rbx
   1384a:	pop    rbp
   1384b:	pop    r12
   1384d:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   13852:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1385d:	nop    DWORD PTR [rax]

0000000000013860 <wget_bar_slot_deregister>:
   13860:	endbr64 
   13864:	push   rbp
   13865:	mov    ebp,esi
   13867:	push   rbx
   13868:	mov    rbx,rdi
   1386b:	sub    rsp,0x8
   1386f:	mov    rdi,QWORD PTR [rdi+0x30]
   13873:	call   12040 <wget_thread_mutex_lock@plt>
   13878:	test   ebp,ebp
   1387a:	js     13881 <wget_bar_slot_deregister+0x21>
   1387c:	cmp    DWORD PTR [rbx+0x28],ebp
   1387f:	jg     13890 <wget_bar_slot_deregister+0x30>
   13881:	mov    rdi,QWORD PTR [rbx+0x30]
   13885:	add    rsp,0x8
   13889:	pop    rbx
   1388a:	pop    rbp
   1388b:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   13890:	movsxd rax,ebp
   13893:	mov    rdi,rbx
   13896:	mov    esi,ebp
   13898:	imul   rax,rax,0x1c8
   1389f:	add    rax,QWORD PTR [rbx]
   138a2:	mov    DWORD PTR [rax+0x1c0],0x2
   138ac:	call   13010 <bar_update_slot>
   138b1:	mov    rdi,QWORD PTR [rbx+0x30]
   138b5:	add    rsp,0x8
   138b9:	pop    rbx
   138ba:	pop    rbp
   138bb:	jmp    117c0 <wget_thread_mutex_unlock@plt>

00000000000138c0 <wget_bar_update>:
   138c0:	endbr64 
   138c4:	push   rbx
   138c5:	mov    rbx,rdi
   138c8:	mov    rdi,QWORD PTR [rdi+0x30]
   138cc:	call   12040 <wget_thread_mutex_lock@plt>
   138d1:	mov    rdi,rbx
   138d4:	call   134b0 <bar_update>
   138d9:	mov    rdi,QWORD PTR [rbx+0x30]
   138dd:	pop    rbx
   138de:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   138e3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   138ee:	xchg   ax,ax

00000000000138f0 <wget_bar_deinit>:
   138f0:	endbr64 
   138f4:	test   rdi,rdi
   138f7:	je     139d0 <wget_bar_deinit+0xe0>
   138fd:	push   r12
   138ff:	push   rbp
   13900:	mov    rbp,rdi
   13903:	push   rbx
   13904:	mov    eax,DWORD PTR [rdi+0x28]
   13907:	test   eax,eax
   13909:	jle    13940 <wget_bar_deinit+0x50>
   1390b:	mov    rax,QWORD PTR [rdi]
   1390e:	xor    ebx,ebx
   13910:	imul   r12,rbx,0x1c8
   13917:	mov    rdi,QWORD PTR [rax+r12*1+0x8]
   1391c:	test   rdi,rdi
   1391f:	je     13937 <wget_bar_deinit+0x47>
   13921:	mov    rax,QWORD PTR [rip+0x626c0]        # 75fe8 <wget_free@@Base-0x1328>
   13928:	call   QWORD PTR [rax]
   1392a:	mov    rax,QWORD PTR [rbp+0x0]
   1392e:	mov    QWORD PTR [rax+r12*1+0x8],0x0
   13937:	add    rbx,0x1
   1393b:	cmp    DWORD PTR [rbp+0x28],ebx
   1393e:	jg     13910 <wget_bar_deinit+0x20>
   13940:	mov    rdi,QWORD PTR [rbp+0x8]
   13944:	test   rdi,rdi
   13947:	je     1395a <wget_bar_deinit+0x6a>
   13949:	mov    rax,QWORD PTR [rip+0x62698]        # 75fe8 <wget_free@@Base-0x1328>
   13950:	call   QWORD PTR [rax]
   13952:	mov    QWORD PTR [rbp+0x8],0x0
   1395a:	mov    rdi,QWORD PTR [rbp+0x20]
   1395e:	test   rdi,rdi
   13961:	je     13974 <wget_bar_deinit+0x84>
   13963:	mov    rax,QWORD PTR [rip+0x6267e]        # 75fe8 <wget_free@@Base-0x1328>
   1396a:	call   QWORD PTR [rax]
   1396c:	mov    QWORD PTR [rbp+0x20],0x0
   13974:	mov    rdi,QWORD PTR [rbp+0x18]
   13978:	test   rdi,rdi
   1397b:	je     1398e <wget_bar_deinit+0x9e>
   1397d:	mov    rax,QWORD PTR [rip+0x62664]        # 75fe8 <wget_free@@Base-0x1328>
   13984:	call   QWORD PTR [rax]
   13986:	mov    QWORD PTR [rbp+0x18],0x0
   1398e:	mov    rdi,QWORD PTR [rbp+0x10]
   13992:	test   rdi,rdi
   13995:	je     139a8 <wget_bar_deinit+0xb8>
   13997:	mov    rax,QWORD PTR [rip+0x6264a]        # 75fe8 <wget_free@@Base-0x1328>
   1399e:	call   QWORD PTR [rax]
   139a0:	mov    QWORD PTR [rbp+0x10],0x0
   139a8:	mov    rdi,QWORD PTR [rbp+0x0]
   139ac:	test   rdi,rdi
   139af:	je     139c2 <wget_bar_deinit+0xd2>
   139b1:	mov    rax,QWORD PTR [rip+0x62630]        # 75fe8 <wget_free@@Base-0x1328>
   139b8:	call   QWORD PTR [rax]
   139ba:	mov    QWORD PTR [rbp+0x0],0x0
   139c2:	pop    rbx
   139c3:	lea    rdi,[rbp+0x30]
   139c7:	pop    rbp
   139c8:	pop    r12
   139ca:	jmp    11e70 <wget_thread_mutex_destroy@plt>
   139cf:	nop
   139d0:	ret    
   139d1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   139dc:	nop    DWORD PTR [rax+0x0]

00000000000139e0 <wget_bar_free>:
   139e0:	endbr64 
   139e4:	test   rdi,rdi
   139e7:	je     13a10 <wget_bar_free+0x30>
   139e9:	push   rbx
   139ea:	mov    rbx,rdi
   139ed:	mov    rdi,QWORD PTR [rdi]
   139f0:	call   10cf0 <wget_bar_deinit@plt>
   139f5:	mov    rdi,QWORD PTR [rbx]
   139f8:	test   rdi,rdi
   139fb:	je     13a0d <wget_bar_free+0x2d>
   139fd:	mov    rax,QWORD PTR [rip+0x625e4]        # 75fe8 <wget_free@@Base-0x1328>
   13a04:	call   QWORD PTR [rax]
   13a06:	mov    QWORD PTR [rbx],0x0
   13a0d:	pop    rbx
   13a0e:	ret    
   13a0f:	nop
   13a10:	ret    
   13a11:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   13a1c:	nop    DWORD PTR [rax+0x0]

0000000000013a20 <wget_bar_print>:
   13a20:	endbr64 
   13a24:	push   r12
   13a26:	mov    r12,rdx
   13a29:	push   rbp
   13a2a:	mov    ebp,esi
   13a2c:	push   rbx
   13a2d:	mov    rbx,rdi
   13a30:	mov    rdi,QWORD PTR [rdi+0x30]
   13a34:	call   12040 <wget_thread_mutex_lock@plt>
   13a39:	mov    edx,DWORD PTR [rbx+0x28]
   13a3c:	lea    rsi,[rip+0x375ef]        # 4b032 <_fini+0x63e>
   13a43:	xor    eax,eax
   13a45:	sub    edx,ebp
   13a47:	mov    rbp,QWORD PTR [rip+0x624ea]        # 75f38 <stdout@GLIBC_2.2.5>
   13a4e:	mov    rdi,QWORD PTR [rbp+0x0]
   13a52:	call   108e0 <wget_fprintf@plt>
   13a57:	mov    edx,DWORD PTR [rbx+0x2c]
   13a5a:	mov    rdi,QWORD PTR [rbp+0x0]
   13a5e:	mov    r8,r12
   13a61:	lea    rsi,[rip+0x37600]        # 4b068 <_fini+0x674>
   13a68:	xor    eax,eax
   13a6a:	mov    ecx,edx
   13a6c:	call   108e0 <wget_fprintf@plt>
   13a71:	mov    rcx,QWORD PTR [rbp+0x0]
   13a75:	mov    edx,0x2
   13a7a:	mov    esi,0x1
   13a7f:	lea    rdi,[rip+0x375d6]        # 4b05c <_fini+0x668>
   13a86:	call   12730 <fwrite@plt>
   13a8b:	mov    rdi,QWORD PTR [rbp+0x0]
   13a8f:	call   40840 <rpl_fflush>
   13a94:	mov    rdi,QWORD PTR [rbx+0x30]
   13a98:	pop    rbx
   13a99:	pop    rbp
   13a9a:	pop    r12
   13a9c:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   13aa1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   13aac:	nop    DWORD PTR [rax+0x0]

0000000000013ab0 <wget_bar_vprintf>:
   13ab0:	endbr64 
   13ab4:	push   r15
   13ab6:	mov    r15,rdx
   13ab9:	push   r14
   13abb:	mov    r14d,esi
   13abe:	push   r13
   13ac0:	push   r12
   13ac2:	mov    r12,rdi
   13ac5:	push   rbp
   13ac6:	sub    rsp,0x120
   13acd:	mov    rax,QWORD PTR fs:0x28
   13ad6:	mov    QWORD PTR [rsp+0x118],rax
   13ade:	mov    eax,DWORD PTR [rdi+0x2c]
   13ae1:	lea    ebp,[rax+0x1]
   13ae4:	movsxd rbp,ebp
   13ae7:	cmp    rbp,0x100
   13aee:	ja     13b38 <wget_bar_vprintf+0x88>
   13af0:	lea    r13,[rsp+0x10]
   13af5:	mov    rdx,r15
   13af8:	mov    rsi,rbp
   13afb:	mov    rdi,r13
   13afe:	call   117f0 <wget_vsnprintf@plt>
   13b03:	mov    rdx,r13
   13b06:	mov    esi,r14d
   13b09:	mov    rdi,r12
   13b0c:	call   120c0 <wget_bar_print@plt>
   13b11:	mov    rax,QWORD PTR [rsp+0x118]
   13b19:	sub    rax,QWORD PTR fs:0x28
   13b22:	jne    13b9a <wget_bar_vprintf+0xea>
   13b24:	add    rsp,0x120
   13b2b:	pop    rbp
   13b2c:	pop    r12
   13b2e:	pop    r13
   13b30:	pop    r14
   13b32:	pop    r15
   13b34:	ret    
   13b35:	nop    DWORD PTR [rax]
   13b38:	mov    rax,QWORD PTR [rip+0x62491]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   13b3f:	mov    QWORD PTR [rsp+0x8],rcx
   13b44:	mov    rdi,rbp
   13b47:	call   QWORD PTR [rax]
   13b49:	mov    rcx,QWORD PTR [rsp+0x8]
   13b4e:	test   rax,rax
   13b51:	mov    r13,rax
   13b54:	je     13b90 <wget_bar_vprintf+0xe0>
   13b56:	mov    rdx,r15
   13b59:	mov    rsi,rbp
   13b5c:	mov    rdi,rax
   13b5f:	call   117f0 <wget_vsnprintf@plt>
   13b64:	mov    rdx,r13
   13b67:	mov    esi,r14d
   13b6a:	mov    rdi,r12
   13b6d:	call   120c0 <wget_bar_print@plt>
   13b72:	lea    rax,[rsp+0x10]
   13b77:	cmp    r13,rax
   13b7a:	je     13b11 <wget_bar_vprintf+0x61>
   13b7c:	mov    rax,QWORD PTR [rip+0x62465]        # 75fe8 <wget_free@@Base-0x1328>
   13b83:	mov    rdi,r13
   13b86:	call   QWORD PTR [rax]
   13b88:	jmp    13b11 <wget_bar_vprintf+0x61>
   13b8a:	nop    WORD PTR [rax+rax*1+0x0]
   13b90:	mov    ebp,0x100
   13b95:	jmp    13af0 <wget_bar_vprintf+0x40>
   13b9a:	call   11760 <__stack_chk_fail@plt>
   13b9f:	nop

0000000000013ba0 <wget_bar_printf>:
   13ba0:	endbr64 
   13ba4:	sub    rsp,0xd8
   13bab:	mov    QWORD PTR [rsp+0x38],rcx
   13bb0:	mov    QWORD PTR [rsp+0x40],r8
   13bb5:	mov    QWORD PTR [rsp+0x48],r9
   13bba:	test   al,al
   13bbc:	je     13bf5 <wget_bar_printf+0x55>
   13bbe:	movaps XMMWORD PTR [rsp+0x50],xmm0
   13bc3:	movaps XMMWORD PTR [rsp+0x60],xmm1
   13bc8:	movaps XMMWORD PTR [rsp+0x70],xmm2
   13bcd:	movaps XMMWORD PTR [rsp+0x80],xmm3
   13bd5:	movaps XMMWORD PTR [rsp+0x90],xmm4
   13bdd:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   13be5:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   13bed:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   13bf5:	mov    rax,QWORD PTR fs:0x28
   13bfe:	mov    QWORD PTR [rsp+0x18],rax
   13c03:	xor    eax,eax
   13c05:	lea    rax,[rsp+0xe0]
   13c0d:	mov    rcx,rsp
   13c10:	mov    DWORD PTR [rsp],0x18
   13c17:	mov    QWORD PTR [rsp+0x8],rax
   13c1c:	lea    rax,[rsp+0x20]
   13c21:	mov    QWORD PTR [rsp+0x10],rax
   13c26:	mov    DWORD PTR [rsp+0x4],0x30
   13c2e:	call   11170 <wget_bar_vprintf@plt>
   13c33:	mov    rax,QWORD PTR [rsp+0x18]
   13c38:	sub    rax,QWORD PTR fs:0x28
   13c41:	jne    13c4b <wget_bar_printf+0xab>
   13c43:	add    rsp,0xd8
   13c4a:	ret    
   13c4b:	call   11760 <__stack_chk_fail@plt>

0000000000013c50 <wget_bar_screen_resized>:
   13c50:	endbr64 
   13c54:	mov    DWORD PTR [rip+0x63806],0x1        # 77464 <winsize_changed>
   13c5e:	ret    
   13c5f:	nop

0000000000013c60 <wget_bar_write_line>:
   13c60:	endbr64 
   13c64:	push   r13
   13c66:	mov    r13,rdx
   13c69:	push   r12
   13c6b:	mov    r12,rsi
   13c6e:	push   rbp
   13c6f:	push   rbx
   13c70:	mov    rbx,rdi
   13c73:	sub    rsp,0x8
   13c77:	mov    rdi,QWORD PTR [rdi+0x30]
   13c7b:	call   12040 <wget_thread_mutex_lock@plt>
   13c80:	mov    rbp,QWORD PTR [rip+0x622b1]        # 75f38 <stdout@GLIBC_2.2.5>
   13c87:	mov    eax,DWORD PTR [rbx+0x28]
   13c8a:	lea    rsi,[rip+0x373e5]        # 4b076 <_fini+0x682>
   13c91:	mov    rdi,QWORD PTR [rbp+0x0]
   13c95:	lea    edx,[rax+0x1]
   13c98:	xor    eax,eax
   13c9a:	call   108e0 <wget_fprintf@plt>
   13c9f:	mov    rcx,QWORD PTR [rbp+0x0]
   13ca3:	mov    rdx,r13
   13ca6:	mov    rdi,r12
   13ca9:	mov    esi,0x1
   13cae:	call   12730 <fwrite@plt>
   13cb3:	mov    rcx,QWORD PTR [rbp+0x0]
   13cb7:	mov    edx,0x3
   13cbc:	mov    esi,0x1
   13cc1:	lea    rdi,[rip+0x373c7]        # 4b08f <_fini+0x69b>
   13cc8:	call   12730 <fwrite@plt>
   13ccd:	mov    rcx,QWORD PTR [rbp+0x0]
   13cd1:	mov    edx,0x2
   13cd6:	mov    esi,0x1
   13cdb:	lea    rdi,[rip+0x3737a]        # 4b05c <_fini+0x668>
   13ce2:	call   12730 <fwrite@plt>
   13ce7:	mov    rdi,rbx
   13cea:	call   134b0 <bar_update>
   13cef:	mov    rdi,QWORD PTR [rbx+0x30]
   13cf3:	add    rsp,0x8
   13cf7:	pop    rbx
   13cf8:	pop    rbp
   13cf9:	pop    r12
   13cfb:	pop    r13
   13cfd:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   13d02:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   13d0d:	nop    DWORD PTR [rax]

0000000000013d10 <wget_bar_set_speed_type>:
   13d10:	endbr64 
   13d14:	cmp    edi,0x1
   13d17:	je     13d20 <wget_bar_set_speed_type+0x10>
   13d19:	ret    
   13d1a:	nop    WORD PTR [rax+rax*1+0x0]
   13d20:	mov    eax,0x8
   13d25:	mov    BYTE PTR [rip+0x634de],0x62        # 7720a <report_speed_type_char>
   13d2c:	mov    WORD PTR [rip+0x634d5],ax        # 77208 <speed_modifier>
   13d33:	ret    
   13d34:	cs nop WORD PTR [rax+rax*1+0x0]
   13d3e:	xchg   ax,ax

0000000000013d40 <wget_bitmap_set>:
   13d40:	endbr64 
   13d44:	test   rdi,rdi
   13d47:	je     13d64 <wget_bitmap_set+0x24>
   13d49:	mov    eax,esi
   13d4b:	cmp    rax,QWORD PTR [rdi]
   13d4e:	jae    13d64 <wget_bitmap_set+0x24>
   13d50:	mov    eax,esi
   13d52:	mov    edx,0x1
   13d57:	mov    ecx,esi
   13d59:	shr    eax,0x6
   13d5c:	shl    rdx,cl
   13d5f:	or     QWORD PTR [rdi+rax*8+0x8],rdx
   13d64:	ret    
   13d65:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000013d70 <wget_bitmap_clear>:
   13d70:	endbr64 
   13d74:	test   rdi,rdi
   13d77:	je     13d96 <wget_bitmap_clear+0x26>
   13d79:	mov    eax,esi
   13d7b:	cmp    rax,QWORD PTR [rdi]
   13d7e:	jae    13d96 <wget_bitmap_clear+0x26>
   13d80:	mov    eax,esi
   13d82:	mov    rdx,0xfffffffffffffffe
   13d89:	mov    ecx,esi
   13d8b:	shr    eax,0x6
   13d8e:	rol    rdx,cl
   13d91:	and    QWORD PTR [rdi+rax*8+0x8],rdx
   13d96:	ret    
   13d97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000013da0 <wget_bitmap_get>:
   13da0:	endbr64 
   13da4:	xor    eax,eax
   13da6:	test   rdi,rdi
   13da9:	je     13db2 <wget_bitmap_get+0x12>
   13dab:	mov    edx,esi
   13dad:	cmp    rdx,QWORD PTR [rdi]
   13db0:	jb     13db8 <wget_bitmap_get+0x18>
   13db2:	ret    
   13db3:	nop    DWORD PTR [rax+rax*1+0x0]
   13db8:	mov    eax,esi
   13dba:	mov    ecx,esi
   13dbc:	shr    eax,0x6
   13dbf:	mov    rax,QWORD PTR [rdi+rax*8+0x8]
   13dc4:	shr    rax,cl
   13dc7:	and    eax,0x1
   13dca:	ret    
   13dcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000013dd0 <wget_bitmap_init>:
   13dd0:	endbr64 
   13dd4:	test   rdi,rdi
   13dd7:	je     13e13 <wget_bitmap_init+0x43>
   13dd9:	push   rbp
   13dda:	mov    rbp,rdi
   13ddd:	push   rbx
   13dde:	mov    ebx,esi
   13de0:	mov    esi,0x8
   13de5:	lea    rdi,[rbx+0x7]
   13de9:	shr    rdi,0x3
   13ded:	sub    rsp,0x8
   13df1:	mov    rax,QWORD PTR [rip+0x62148]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   13df8:	add    rdi,0x1
   13dfc:	call   QWORD PTR [rax]
   13dfe:	test   rax,rax
   13e01:	je     13e19 <wget_bitmap_init+0x49>
   13e03:	mov    QWORD PTR [rax],rbx
   13e06:	mov    QWORD PTR [rbp+0x0],rax
   13e0a:	xor    eax,eax
   13e0c:	add    rsp,0x8
   13e10:	pop    rbx
   13e11:	pop    rbp
   13e12:	ret    
   13e13:	mov    eax,0xfffffffd
   13e18:	ret    
   13e19:	mov    eax,0xfffffffe
   13e1e:	jmp    13e0c <wget_bitmap_init+0x3c>

0000000000013e20 <wget_bitmap_free>:
   13e20:	endbr64 
   13e24:	test   rdi,rdi
   13e27:	je     13e50 <wget_bitmap_free+0x30>
   13e29:	push   rbx
   13e2a:	mov    rbx,rdi
   13e2d:	mov    rdi,QWORD PTR [rdi]
   13e30:	test   rdi,rdi
   13e33:	je     13e45 <wget_bitmap_free+0x25>
   13e35:	mov    rax,QWORD PTR [rip+0x621ac]        # 75fe8 <wget_free@@Base-0x1328>
   13e3c:	call   QWORD PTR [rax]
   13e3e:	mov    QWORD PTR [rbx],0x0
   13e45:	pop    rbx
   13e46:	ret    
   13e47:	nop    WORD PTR [rax+rax*1+0x0]
   13e50:	ret    
   13e51:	cs nop WORD PTR [rax+rax*1+0x0]
   13e5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000013e60 <buffer_realloc>:
   13e60:	push   r12
   13e62:	push   rbp
   13e63:	mov    rbp,rsi
   13e66:	add    rsi,0x1
   13e6a:	push   rbx
   13e6b:	mov    rbx,rdi
   13e6e:	mov    r12,QWORD PTR [rdi]
   13e71:	test   BYTE PTR [rdi+0x18],0x1
   13e75:	je     13eb8 <buffer_realloc+0x58>
   13e77:	mov    rax,QWORD PTR [rip+0x62102]        # 75f80 <wget_realloc_fn@@Base-0x1398>
   13e7e:	mov    rdi,r12
   13e81:	call   QWORD PTR [rax]
   13e83:	mov    QWORD PTR [rbx],rax
   13e86:	test   rax,rax
   13e89:	je     13ee1 <buffer_realloc+0x81>
   13e8b:	test   BYTE PTR [rbx+0x18],0x1
   13e8f:	jne    13ea6 <buffer_realloc+0x46>
   13e91:	test   r12,r12
   13e94:	je     13e9f <buffer_realloc+0x3f>
   13e96:	mov    rdx,QWORD PTR [rbx+0x8]
   13e9a:	test   rdx,rdx
   13e9d:	jne    13ed0 <buffer_realloc+0x70>
   13e9f:	mov    BYTE PTR [rax],0x0
   13ea2:	or     BYTE PTR [rbx+0x18],0x1
   13ea6:	mov    QWORD PTR [rbx+0x10],rbp
   13eaa:	xor    eax,eax
   13eac:	pop    rbx
   13ead:	pop    rbp
   13eae:	pop    r12
   13eb0:	ret    
   13eb1:	nop    DWORD PTR [rax+0x0]
   13eb8:	mov    rax,QWORD PTR [rip+0x62111]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   13ebf:	mov    rdi,rsi
   13ec2:	call   QWORD PTR [rax]
   13ec4:	jmp    13e83 <buffer_realloc+0x23>
   13ec6:	cs nop WORD PTR [rax+rax*1+0x0]
   13ed0:	add    rdx,0x1
   13ed4:	mov    rsi,r12
   13ed7:	mov    rdi,rax
   13eda:	call   11220 <memcpy@plt>
   13edf:	jmp    13ea2 <buffer_realloc+0x42>
   13ee1:	or     BYTE PTR [rbx+0x18],0x4
   13ee5:	mov    eax,0xfffffffe
   13eea:	mov    QWORD PTR [rbx],r12
   13eed:	jmp    13eac <buffer_realloc+0x4c>
   13eef:	nop

0000000000013ef0 <wget_buffer_init>:
   13ef0:	endbr64 
   13ef4:	push   rbx
   13ef5:	mov    rbx,rdi
   13ef8:	test   rsi,rsi
   13efb:	je     13f30 <wget_buffer_init+0x40>
   13efd:	test   rdx,rdx
   13f00:	je     13f60 <wget_buffer_init+0x70>
   13f02:	sub    rdx,0x1
   13f06:	mov    QWORD PTR [rdi],rsi
   13f09:	mov    QWORD PTR [rdi+0x10],rdx
   13f0d:	xor    edx,edx
   13f0f:	mov    BYTE PTR [rsi],0x0
   13f12:	movzx  eax,BYTE PTR [rbx+0x18]
   13f16:	mov    QWORD PTR [rbx+0x8],0x0
   13f1e:	and    eax,0xfffffff8
   13f21:	or     eax,edx
   13f23:	mov    BYTE PTR [rbx+0x18],al
   13f26:	xor    eax,eax
   13f28:	pop    rbx
   13f29:	ret    
   13f2a:	nop    WORD PTR [rax+rax*1+0x0]
   13f30:	lea    rdi,[rdx+0x1]
   13f34:	test   rdx,rdx
   13f37:	je     13f60 <wget_buffer_init+0x70>
   13f39:	mov    rax,QWORD PTR [rip+0x62090]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   13f40:	mov    QWORD PTR [rbx+0x10],rdx
   13f44:	call   QWORD PTR [rax]
   13f46:	mov    QWORD PTR [rbx],rax
   13f49:	test   rax,rax
   13f4c:	je     13f6c <wget_buffer_init+0x7c>
   13f4e:	mov    BYTE PTR [rax],0x0
   13f51:	mov    edx,0x1
   13f56:	jmp    13f12 <wget_buffer_init+0x22>
   13f58:	nop    DWORD PTR [rax+rax*1+0x0]
   13f60:	mov    edi,0x80
   13f65:	mov    edx,0x7f
   13f6a:	jmp    13f39 <wget_buffer_init+0x49>
   13f6c:	or     BYTE PTR [rbx+0x18],0x4
   13f70:	mov    eax,0xfffffffe
   13f75:	pop    rbx
   13f76:	ret    
   13f77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000013f80 <wget_buffer_alloc>:
   13f80:	endbr64 
   13f84:	push   r13
   13f86:	mov    r13,rdi
   13f89:	mov    edi,0x20
   13f8e:	push   r12
   13f90:	sub    rsp,0x8
   13f94:	mov    rax,QWORD PTR [rip+0x62035]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   13f9b:	call   QWORD PTR [rax]
   13f9d:	mov    r12,rax
   13fa0:	test   rax,rax
   13fa3:	je     13fbc <wget_buffer_alloc+0x3c>
   13fa5:	xor    esi,esi
   13fa7:	mov    rdx,r13
   13faa:	mov    rdi,rax
   13fad:	call   108d0 <wget_buffer_init@plt>
   13fb2:	test   eax,eax
   13fb4:	js     13fd0 <wget_buffer_alloc+0x50>
   13fb6:	or     BYTE PTR [r12+0x18],0x2
   13fbc:	add    rsp,0x8
   13fc0:	mov    rax,r12
   13fc3:	pop    r12
   13fc5:	pop    r13
   13fc7:	ret    
   13fc8:	nop    DWORD PTR [rax+rax*1+0x0]
   13fd0:	mov    rax,QWORD PTR [rip+0x62011]        # 75fe8 <wget_free@@Base-0x1328>
   13fd7:	mov    rdi,r12
   13fda:	xor    r12d,r12d
   13fdd:	call   QWORD PTR [rax]
   13fdf:	add    rsp,0x8
   13fe3:	mov    rax,r12
   13fe6:	pop    r12
   13fe8:	pop    r13
   13fea:	ret    
   13feb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000013ff0 <wget_buffer_ensure_capacity>:
   13ff0:	endbr64 
   13ff4:	test   rdi,rdi
   13ff7:	je     13fff <wget_buffer_ensure_capacity+0xf>
   13ff9:	cmp    QWORD PTR [rdi+0x10],rsi
   13ffd:	jb     14008 <wget_buffer_ensure_capacity+0x18>
   13fff:	xor    eax,eax
   14001:	ret    
   14002:	nop    WORD PTR [rax+rax*1+0x0]
   14008:	jmp    13e60 <buffer_realloc>
   1400d:	nop    DWORD PTR [rax]

0000000000014010 <wget_buffer_deinit>:
   14010:	endbr64 
   14014:	push   rbp
   14015:	movzx  eax,BYTE PTR [rdi+0x18]
   14019:	mov    rbp,rdi
   1401c:	test   al,0x1
   1401e:	je     14043 <wget_buffer_deinit+0x33>
   14020:	mov    rdi,QWORD PTR [rdi]
   14023:	test   rdi,rdi
   14026:	je     14039 <wget_buffer_deinit+0x29>
   14028:	mov    rax,QWORD PTR [rip+0x61fb9]        # 75fe8 <wget_free@@Base-0x1328>
   1402f:	call   QWORD PTR [rax]
   14031:	mov    QWORD PTR [rbp+0x0],0x0
   14039:	movzx  eax,BYTE PTR [rbp+0x18]
   1403d:	and    eax,0xfffffffe
   14040:	mov    BYTE PTR [rbp+0x18],al
   14043:	test   al,0x2
   14045:	je     14060 <wget_buffer_deinit+0x50>
   14047:	mov    rax,QWORD PTR [rip+0x61f9a]        # 75fe8 <wget_free@@Base-0x1328>
   1404e:	mov    rdi,rbp
   14051:	pop    rbp
   14052:	mov    rax,QWORD PTR [rax]
   14055:	jmp    rax
   14057:	nop    WORD PTR [rax+rax*1+0x0]
   14060:	pop    rbp
   14061:	ret    
   14062:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1406d:	nop    DWORD PTR [rax]

0000000000014070 <wget_buffer_free>:
   14070:	endbr64 
   14074:	test   rdi,rdi
   14077:	je     14098 <wget_buffer_free+0x28>
   14079:	push   rbx
   1407a:	mov    rbx,rdi
   1407d:	mov    rdi,QWORD PTR [rdi]
   14080:	test   rdi,rdi
   14083:	je     14091 <wget_buffer_free+0x21>
   14085:	call   11300 <wget_buffer_deinit@plt>
   1408a:	mov    QWORD PTR [rbx],0x0
   14091:	pop    rbx
   14092:	ret    
   14093:	nop    DWORD PTR [rax+rax*1+0x0]
   14098:	ret    
   14099:	nop    DWORD PTR [rax+0x0]

00000000000140a0 <wget_buffer_free_data>:
   140a0:	endbr64 
   140a4:	test   rdi,rdi
   140a7:	je     140e0 <wget_buffer_free_data+0x40>
   140a9:	push   rbx
   140aa:	mov    rbx,rdi
   140ad:	test   BYTE PTR [rdi+0x18],0x1
   140b1:	je     140d7 <wget_buffer_free_data+0x37>
   140b3:	mov    rdi,QWORD PTR [rdi]
   140b6:	test   rdi,rdi
   140b9:	je     140cb <wget_buffer_free_data+0x2b>
   140bb:	mov    rax,QWORD PTR [rip+0x61f26]        # 75fe8 <wget_free@@Base-0x1328>
   140c2:	call   QWORD PTR [rax]
   140c4:	mov    QWORD PTR [rbx],0x0
   140cb:	and    BYTE PTR [rbx+0x18],0xfe
   140cf:	mov    QWORD PTR [rbx+0x10],0x0
   140d7:	pop    rbx
   140d8:	ret    
   140d9:	nop    DWORD PTR [rax+0x0]
   140e0:	ret    
   140e1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140ec:	nop    DWORD PTR [rax+0x0]

00000000000140f0 <wget_buffer_reset>:
   140f0:	endbr64 
   140f4:	test   rdi,rdi
   140f7:	je     14107 <wget_buffer_reset+0x17>
   140f9:	mov    rax,QWORD PTR [rdi]
   140fc:	mov    QWORD PTR [rdi+0x8],0x0
   14104:	mov    BYTE PTR [rax],0x0
   14107:	ret    
   14108:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000014110 <wget_buffer_memcat>:
   14110:	endbr64 
   14114:	test   rdi,rdi
   14117:	je     14190 <wget_buffer_memcat+0x80>
   14119:	push   r12
   1411b:	push   rbp
   1411c:	mov    rbp,rdx
   1411f:	push   rbx
   14120:	mov    rbx,rdi
   14123:	mov    rdi,QWORD PTR [rdi+0x8]
   14127:	test   rdx,rdx
   1412a:	je     1415a <wget_buffer_memcat+0x4a>
   1412c:	mov    rax,QWORD PTR [rbx+0x10]
   14130:	lea    rdx,[rdx+rdi*1]
   14134:	mov    r12,rsi
   14137:	cmp    rax,rdx
   1413a:	jb     14170 <wget_buffer_memcat+0x60>
   1413c:	add    rdi,QWORD PTR [rbx]
   1413f:	mov    rdx,rbp
   14142:	test   r12,r12
   14145:	je     14198 <wget_buffer_memcat+0x88>
   14147:	mov    rsi,r12
   1414a:	call   11220 <memcpy@plt>
   1414f:	mov    rdi,QWORD PTR [rbx+0x8]
   14153:	add    rdi,rbp
   14156:	mov    QWORD PTR [rbx+0x8],rdi
   1415a:	mov    rax,QWORD PTR [rbx]
   1415d:	mov    BYTE PTR [rax+rdi*1],0x0
   14161:	mov    rax,QWORD PTR [rbx+0x8]
   14165:	pop    rbx
   14166:	pop    rbp
   14167:	pop    r12
   14169:	ret    
   1416a:	nop    WORD PTR [rax+rax*1+0x0]
   14170:	lea    rsi,[rbp+rax*2+0x0]
   14175:	mov    rdi,rbx
   14178:	call   13e60 <buffer_realloc>
   1417d:	test   eax,eax
   1417f:	jne    14161 <wget_buffer_memcat+0x51>
   14181:	mov    rdi,QWORD PTR [rbx+0x8]
   14185:	jmp    1413c <wget_buffer_memcat+0x2c>
   14187:	nop    WORD PTR [rax+rax*1+0x0]
   14190:	xor    eax,eax
   14192:	ret    
   14193:	nop    DWORD PTR [rax+rax*1+0x0]
   14198:	xor    esi,esi
   1419a:	call   10ca0 <memset@plt>
   1419f:	jmp    1414f <wget_buffer_memcat+0x3f>
   141a1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   141ac:	nop    DWORD PTR [rax+0x0]

00000000000141b0 <wget_buffer_memcpy>:
   141b0:	endbr64 
   141b4:	test   rdi,rdi
   141b7:	je     141d0 <wget_buffer_memcpy+0x20>
   141b9:	mov    QWORD PTR [rdi+0x8],0x0
   141c1:	jmp    10ea0 <wget_buffer_memcat@plt>
   141c6:	cs nop WORD PTR [rax+rax*1+0x0]
   141d0:	xor    eax,eax
   141d2:	ret    
   141d3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   141de:	xchg   ax,ax

00000000000141e0 <wget_buffer_strcpy>:
   141e0:	endbr64 
   141e4:	push   r12
   141e6:	mov    r12,rsi
   141e9:	push   rbp
   141ea:	mov    rbp,rdi
   141ed:	sub    rsp,0x8
   141f1:	test   rdi,rdi
   141f4:	je     141fe <wget_buffer_strcpy+0x1e>
   141f6:	mov    QWORD PTR [rdi+0x8],0x0
   141fe:	test   r12,r12
   14201:	je     14220 <wget_buffer_strcpy+0x40>
   14203:	mov    rdi,r12
   14206:	call   10ab0 <strlen@plt>
   1420b:	mov    rdx,rax
   1420e:	add    rsp,0x8
   14212:	mov    rsi,r12
   14215:	mov    rdi,rbp
   14218:	pop    rbp
   14219:	pop    r12
   1421b:	jmp    10ea0 <wget_buffer_memcat@plt>
   14220:	xor    edx,edx
   14222:	jmp    1420e <wget_buffer_strcpy+0x2e>
   14224:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1422f:	nop

0000000000014230 <wget_buffer_strcat>:
   14230:	endbr64 
   14234:	push   r12
   14236:	mov    r12,rdi
   14239:	push   rbp
   1423a:	mov    rbp,rsi
   1423d:	sub    rsp,0x8
   14241:	test   rsi,rsi
   14244:	je     14268 <wget_buffer_strcat+0x38>
   14246:	mov    rdi,rsi
   14249:	call   10ab0 <strlen@plt>
   1424e:	mov    rdx,rax
   14251:	add    rsp,0x8
   14255:	mov    rsi,rbp
   14258:	mov    rdi,r12
   1425b:	pop    rbp
   1425c:	pop    r12
   1425e:	jmp    10ea0 <wget_buffer_memcat@plt>
   14263:	nop    DWORD PTR [rax+rax*1+0x0]
   14268:	xor    edx,edx
   1426a:	jmp    14251 <wget_buffer_strcat+0x21>
   1426c:	nop    DWORD PTR [rax+0x0]

0000000000014270 <wget_buffer_bufcpy>:
   14270:	endbr64 
   14274:	test   rsi,rsi
   14277:	je     14288 <wget_buffer_bufcpy+0x18>
   14279:	mov    rdx,QWORD PTR [rsi+0x8]
   1427d:	mov    rsi,QWORD PTR [rsi]
   14280:	jmp    10720 <wget_buffer_memcpy@plt>
   14285:	nop    DWORD PTR [rax]
   14288:	xor    edx,edx
   1428a:	xor    esi,esi
   1428c:	jmp    10720 <wget_buffer_memcpy@plt>
   14291:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1429c:	nop    DWORD PTR [rax+0x0]

00000000000142a0 <wget_buffer_bufcat>:
   142a0:	endbr64 
   142a4:	test   rsi,rsi
   142a7:	je     142b8 <wget_buffer_bufcat+0x18>
   142a9:	mov    rdx,QWORD PTR [rsi+0x8]
   142ad:	mov    rsi,QWORD PTR [rsi]
   142b0:	jmp    10ea0 <wget_buffer_memcat@plt>
   142b5:	nop    DWORD PTR [rax]
   142b8:	xor    edx,edx
   142ba:	xor    esi,esi
   142bc:	jmp    10ea0 <wget_buffer_memcat@plt>
   142c1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   142cc:	nop    DWORD PTR [rax+0x0]

00000000000142d0 <wget_buffer_memset_append>:
   142d0:	endbr64 
   142d4:	test   rdi,rdi
   142d7:	je     14330 <wget_buffer_memset_append+0x60>
   142d9:	push   r12
   142db:	push   rbp
   142dc:	mov    rbp,rdx
   142df:	push   rbx
   142e0:	mov    rbx,rdi
   142e3:	mov    rdi,QWORD PTR [rdi+0x8]
   142e7:	test   rdx,rdx
   142ea:	je     14316 <wget_buffer_memset_append+0x46>
   142ec:	mov    rax,QWORD PTR [rbx+0x10]
   142f0:	lea    rdx,[rdx+rdi*1]
   142f4:	mov    r12d,esi
   142f7:	cmp    rax,rdx
   142fa:	jb     14338 <wget_buffer_memset_append+0x68>
   142fc:	add    rdi,QWORD PTR [rbx]
   142ff:	movsx  esi,r12b
   14303:	mov    rdx,rbp
   14306:	call   10ca0 <memset@plt>
   1430b:	mov    rdi,QWORD PTR [rbx+0x8]
   1430f:	add    rdi,rbp
   14312:	mov    QWORD PTR [rbx+0x8],rdi
   14316:	mov    rax,QWORD PTR [rbx]
   14319:	mov    BYTE PTR [rax+rdi*1],0x0
   1431d:	mov    rax,QWORD PTR [rbx+0x8]
   14321:	pop    rbx
   14322:	pop    rbp
   14323:	pop    r12
   14325:	ret    
   14326:	cs nop WORD PTR [rax+rax*1+0x0]
   14330:	xor    eax,eax
   14332:	ret    
   14333:	nop    DWORD PTR [rax+rax*1+0x0]
   14338:	lea    rsi,[rbp+rax*2+0x0]
   1433d:	mov    rdi,rbx
   14340:	call   13e60 <buffer_realloc>
   14345:	test   eax,eax
   14347:	jne    1431d <wget_buffer_memset_append+0x4d>
   14349:	mov    rdi,QWORD PTR [rbx+0x8]
   1434d:	jmp    142fc <wget_buffer_memset_append+0x2c>
   1434f:	nop

0000000000014350 <wget_buffer_memset>:
   14350:	endbr64 
   14354:	test   rdi,rdi
   14357:	je     14361 <wget_buffer_memset+0x11>
   14359:	mov    QWORD PTR [rdi+0x8],0x0
   14361:	movsx  esi,sil
   14365:	jmp    11ef0 <wget_buffer_memset_append@plt>
   1436a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000014370 <wget_buffer_trim>:
   14370:	endbr64 
   14374:	test   rdi,rdi
   14377:	je     14430 <wget_buffer_trim+0xc0>
   1437d:	push   r12
   1437f:	push   rbp
   14380:	mov    rbp,rdi
   14383:	push   rbx
   14384:	mov    rbx,QWORD PTR [rdi+0x8]
   14388:	mov    r12,QWORD PTR [rdi]
   1438b:	test   rbx,rbx
   1438e:	je     143bf <wget_buffer_trim+0x4f>
   14390:	call   116c0 <__ctype_b_loc@plt>
   14395:	mov    rdx,QWORD PTR [rax]
   14398:	jmp    143a9 <wget_buffer_trim+0x39>
   1439a:	nop    WORD PTR [rax+rax*1+0x0]
   143a0:	mov    QWORD PTR [rbp+0x8],rbx
   143a4:	test   rbx,rbx
   143a7:	je     143bf <wget_buffer_trim+0x4f>
   143a9:	mov    rcx,rbx
   143ac:	sub    rbx,0x1
   143b0:	movsx  rax,BYTE PTR [r12+rbx*1]
   143b5:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   143ba:	jne    143a0 <wget_buffer_trim+0x30>
   143bc:	add    r12,rcx
   143bf:	mov    BYTE PTR [r12],0x0
   143c4:	mov    rbx,QWORD PTR [rbp+0x8]
   143c8:	test   rbx,rbx
   143cb:	je     1441e <wget_buffer_trim+0xae>
   143cd:	call   116c0 <__ctype_b_loc@plt>
   143d2:	mov    r8,QWORD PTR [rbp+0x0]
   143d6:	mov    rsi,QWORD PTR [rax]
   143d9:	xor    eax,eax
   143db:	jmp    143e4 <wget_buffer_trim+0x74>
   143dd:	nop    DWORD PTR [rax]
   143e0:	add    rax,0x1
   143e4:	movsx  rcx,BYTE PTR [r8+rax*1]
   143e9:	lea    r9,[r8+rax*1]
   143ed:	test   BYTE PTR [rsi+rcx*2+0x1],0x20
   143f2:	jne    143e0 <wget_buffer_trim+0x70>
   143f4:	test   rax,rax
   143f7:	jne    14408 <wget_buffer_trim+0x98>
   143f9:	pop    rbx
   143fa:	mov    rax,r8
   143fd:	pop    rbp
   143fe:	pop    r12
   14400:	ret    
   14401:	nop    DWORD PTR [rax+0x0]
   14408:	sub    rbx,rax
   1440b:	mov    rsi,r9
   1440e:	mov    rdi,r8
   14411:	mov    QWORD PTR [rbp+0x8],rbx
   14415:	lea    rdx,[rbx+0x1]
   14419:	call   12110 <memmove@plt>
   1441e:	mov    r8,QWORD PTR [rbp+0x0]
   14422:	pop    rbx
   14423:	pop    rbp
   14424:	pop    r12
   14426:	mov    rax,r8
   14429:	ret    
   1442a:	nop    WORD PTR [rax+rax*1+0x0]
   14430:	xor    eax,eax
   14432:	ret    
   14433:	cs nop WORD PTR [rax+rax*1+0x0]
   1443d:	nop    DWORD PTR [rax]

0000000000014440 <convert_dec>:
   14440:	push   r15
   14442:	push   r14
   14444:	push   r13
   14446:	mov    r13,rdi
   14449:	mov    edi,esi
   1444b:	push   r12
   1444d:	mov    r12d,ecx
   14450:	mov    rcx,r8
   14453:	push   rbp
   14454:	push   rbx
   14455:	movsxd rbx,edx
   14458:	sub    rsp,0x58
   1445c:	mov    rax,QWORD PTR fs:0x28
   14465:	mov    QWORD PTR [rsp+0x48],rax
   1446a:	xor    eax,eax
   1446c:	and    esi,0x10
   1446f:	je     144d8 <convert_dec+0x98>
   14471:	test   dil,0x8
   14475:	je     14480 <convert_dec+0x40>
   14477:	test   r8,r8
   1447a:	js     14750 <convert_dec+0x310>
   14480:	xor    r14d,r14d
   14483:	lea    rbp,[rsp+0x40]
   14488:	test   r8,r8
   1448b:	je     1451c <convert_dec+0xdc>
   14491:	movabs r8,0xcccccccccccccccd
   1449b:	lea    rsi,[rsp+0x3f]
   144a0:	mov    rax,rcx
   144a3:	mov    rbp,rsi
   144a6:	sub    rsi,0x1
   144aa:	mul    r8
   144ad:	mov    rax,rcx
   144b0:	shr    rdx,0x3
   144b4:	lea    r9,[rdx+rdx*4]
   144b8:	add    r9,r9
   144bb:	sub    rax,r9
   144be:	add    eax,0x30
   144c1:	mov    BYTE PTR [rsi+0x1],al
   144c4:	mov    rax,rcx
   144c7:	mov    rcx,rdx
   144ca:	cmp    rax,0x9
   144ce:	ja     144a0 <convert_dec+0x60>
   144d0:	jmp    1451c <convert_dec+0xdc>
   144d2:	nop    WORD PTR [rax+rax*1+0x0]
   144d8:	test   dil,0x40
   144dc:	je     145c0 <convert_dec+0x180>
   144e2:	test   r8,r8
   144e5:	je     14760 <convert_dec+0x320>
   144eb:	lea    rbp,[rsp+0x3f]
   144f0:	jmp    144fb <convert_dec+0xbb>
   144f2:	nop    WORD PTR [rax+rax*1+0x0]
   144f8:	mov    rbp,rdx
   144fb:	mov    edx,ecx
   144fd:	and    edx,0xf
   14500:	cmp    dl,0xa
   14503:	lea    esi,[rdx+0x57]
   14506:	lea    eax,[rdx+0x30]
   14509:	cmovae eax,esi
   1450c:	shr    rcx,0x4
   14510:	lea    rdx,[rbp-0x1]
   14514:	mov    BYTE PTR [rdx+0x1],al
   14517:	jne    144f8 <convert_dec+0xb8>
   14519:	xor    r14d,r14d
   1451c:	lea    rax,[rsp+0x20]
   14521:	mov    rcx,rbp
   14524:	mov    r15d,0x20
   1452a:	sub    rcx,rax
   1452d:	sub    r15,rcx
   14530:	test   r12d,r12d
   14533:	js     14658 <convert_dec+0x218>
   14539:	and    edi,0xfffffffe
   1453c:	movsxd r8,r12d
   1453f:	test   ebx,ebx
   14541:	je     14610 <convert_dec+0x1d0>
   14547:	movsx  r9,r14b
   1454b:	mov    eax,ebx
   1454d:	lea    rdx,[r9+r15*1]
   14551:	cmp    rax,rdx
   14554:	jbe    14610 <convert_dec+0x1d0>
   1455a:	test   dil,0x2
   1455e:	je     14670 <convert_dec+0x230>
   14564:	test   r14b,r14b
   14567:	jne    14840 <convert_dec+0x400>
   1456d:	cmp    r15,r8
   14570:	jae    147a0 <convert_dec+0x360>
   14576:	lea    rdx,[rcx+r8*1-0x20]
   1457b:	mov    esi,0x30
   14580:	mov    rdi,r13
   14583:	call   11ef0 <wget_buffer_memset_append@plt>
   14588:	mov    rdx,r15
   1458b:	mov    rsi,rbp
   1458e:	mov    rdi,r13
   14591:	call   10ea0 <wget_buffer_memcat@plt>
   14596:	lea    eax,[r14+r12*1]
   1459a:	cmp    eax,ebx
   1459c:	jge    14630 <convert_dec+0x1f0>
   145a2:	sub    ebx,r12d
   145a5:	mov    esi,0x20
   145aa:	mov    rdi,r13
   145ad:	sub    ebx,r14d
   145b0:	movsxd rdx,ebx
   145b3:	call   11ef0 <wget_buffer_memset_append@plt>
   145b8:	jmp    14630 <convert_dec+0x1f0>
   145ba:	nop    WORD PTR [rax+rax*1+0x0]
   145c0:	test   dil,0x80
   145c4:	je     14720 <convert_dec+0x2e0>
   145ca:	test   r8,r8
   145cd:	je     14760 <convert_dec+0x320>
   145d3:	lea    rbp,[rsp+0x3f]
   145d8:	jmp    145e3 <convert_dec+0x1a3>
   145da:	nop    WORD PTR [rax+rax*1+0x0]
   145e0:	mov    rbp,rdx
   145e3:	mov    edx,ecx
   145e5:	and    edx,0xf
   145e8:	cmp    dl,0xa
   145eb:	lea    esi,[rdx+0x37]
   145ee:	lea    eax,[rdx+0x30]
   145f1:	cmovae eax,esi
   145f4:	shr    rcx,0x4
   145f8:	lea    rdx,[rbp-0x1]
   145fc:	mov    BYTE PTR [rdx+0x1],al
   145ff:	jne    145e0 <convert_dec+0x1a0>
   14601:	jmp    14519 <convert_dec+0xd9>
   14606:	cs nop WORD PTR [rax+rax*1+0x0]
   14610:	test   r14b,r14b
   14613:	jne    146f0 <convert_dec+0x2b0>
   14619:	cmp    r15,r8
   1461c:	jb     146d0 <convert_dec+0x290>
   14622:	mov    rdx,r15
   14625:	mov    rsi,rbp
   14628:	mov    rdi,r13
   1462b:	call   10ea0 <wget_buffer_memcat@plt>
   14630:	mov    rax,QWORD PTR [rsp+0x48]
   14635:	sub    rax,QWORD PTR fs:0x28
   1463e:	jne    148e9 <convert_dec+0x4a9>
   14644:	add    rsp,0x58
   14648:	pop    rbx
   14649:	pop    rbp
   1464a:	pop    r12
   1464c:	pop    r13
   1464e:	pop    r14
   14650:	pop    r15
   14652:	ret    
   14653:	nop    DWORD PTR [rax+rax*1+0x0]
   14658:	mov    r8d,0x1
   1465e:	mov    r12d,0x1
   14664:	jmp    1453f <convert_dec+0xff>
   14669:	nop    DWORD PTR [rax+0x0]
   14670:	cmp    r15,r8
   14673:	jae    14770 <convert_dec+0x330>
   14679:	movsx  eax,r14b
   1467d:	lea    edx,[rax+r12*1]
   14681:	cmp    edx,ebx
   14683:	jge    147dc <convert_dec+0x39c>
   14689:	sub    ebx,r12d
   1468c:	sub    ebx,eax
   1468e:	and    edi,0x1
   14691:	movsxd r12,ebx
   14694:	je     1488c <convert_dec+0x44c>
   1469a:	test   r14b,r14b
   1469d:	jne    148be <convert_dec+0x47e>
   146a3:	mov    rdx,r12
   146a6:	mov    esi,0x30
   146ab:	mov    rdi,r13
   146ae:	mov    QWORD PTR [rsp+0x10],r8
   146b3:	mov    QWORD PTR [rsp+0x8],rcx
   146b8:	call   11ef0 <wget_buffer_memset_append@plt>
   146bd:	mov    rcx,QWORD PTR [rsp+0x8]
   146c2:	mov    r8,QWORD PTR [rsp+0x10]
   146c7:	nop    WORD PTR [rax+rax*1+0x0]
   146d0:	lea    rdx,[rcx+r8*1-0x20]
   146d5:	mov    esi,0x30
   146da:	mov    rdi,r13
   146dd:	call   11ef0 <wget_buffer_memset_append@plt>
   146e2:	jmp    14622 <convert_dec+0x1e2>
   146e7:	nop    WORD PTR [rax+rax*1+0x0]
   146f0:	mov    edx,0x1
   146f5:	mov    esi,0x2d
   146fa:	mov    rdi,r13
   146fd:	mov    QWORD PTR [rsp+0x10],r8
   14702:	mov    QWORD PTR [rsp+0x8],rcx
   14707:	call   11ef0 <wget_buffer_memset_append@plt>
   1470c:	mov    r8,QWORD PTR [rsp+0x10]
   14711:	mov    rcx,QWORD PTR [rsp+0x8]
   14716:	jmp    14619 <convert_dec+0x1d9>
   1471b:	nop    DWORD PTR [rax+rax*1+0x0]
   14720:	test   dil,0x20
   14724:	je     14760 <convert_dec+0x320>
   14726:	test   r8,r8
   14729:	je     14760 <convert_dec+0x320>
   1472b:	lea    rdx,[rsp+0x3f]
   14730:	mov    eax,ecx
   14732:	mov    rbp,rdx
   14735:	lea    rdx,[rdx-0x1]
   14739:	and    eax,0x7
   1473c:	add    eax,0x30
   1473f:	shr    rcx,0x3
   14743:	mov    BYTE PTR [rdx+0x1],al
   14746:	jne    14730 <convert_dec+0x2f0>
   14748:	jmp    14519 <convert_dec+0xd9>
   1474d:	nop    DWORD PTR [rax]
   14750:	neg    rcx
   14753:	mov    r14d,0x1
   14759:	jmp    14491 <convert_dec+0x51>
   1475e:	xchg   ax,ax
   14760:	lea    rbp,[rsp+0x40]
   14765:	jmp    14519 <convert_dec+0xd9>
   1476a:	nop    WORD PTR [rax+rax*1+0x0]
   14770:	lea    r12,[rcx+rbx*1-0x20]
   14775:	sub    r12,r9
   14778:	and    edi,0x1
   1477b:	je     14810 <convert_dec+0x3d0>
   14781:	test   r14b,r14b
   14784:	jne    14875 <convert_dec+0x435>
   1478a:	mov    rdx,r12
   1478d:	mov    esi,0x30
   14792:	mov    rdi,r13
   14795:	call   11ef0 <wget_buffer_memset_append@plt>
   1479a:	jmp    14622 <convert_dec+0x1e2>
   1479f:	nop
   147a0:	mov    rdx,r15
   147a3:	mov    rsi,rbp
   147a6:	mov    rdi,r13
   147a9:	mov    QWORD PTR [rsp+0x10],r9
   147ae:	mov    QWORD PTR [rsp+0x8],rcx
   147b3:	call   10ea0 <wget_buffer_memcat@plt>
   147b8:	mov    rcx,QWORD PTR [rsp+0x8]
   147bd:	mov    r9,QWORD PTR [rsp+0x10]
   147c2:	mov    rdi,r13
   147c5:	mov    esi,0x20
   147ca:	lea    rdx,[rcx+rbx*1-0x20]
   147cf:	sub    rdx,r9
   147d2:	call   11ef0 <wget_buffer_memset_append@plt>
   147d7:	jmp    14630 <convert_dec+0x1f0>
   147dc:	test   r14b,r14b
   147df:	je     146d0 <convert_dec+0x290>
   147e5:	mov    edx,0x1
   147ea:	mov    esi,0x2d
   147ef:	mov    rdi,r13
   147f2:	mov    QWORD PTR [rsp+0x10],r8
   147f7:	mov    QWORD PTR [rsp+0x8],rcx
   147fc:	call   11ef0 <wget_buffer_memset_append@plt>
   14801:	mov    rcx,QWORD PTR [rsp+0x8]
   14806:	mov    r8,QWORD PTR [rsp+0x10]
   1480b:	jmp    146d0 <convert_dec+0x290>
   14810:	mov    rdx,r12
   14813:	mov    esi,0x20
   14818:	mov    rdi,r13
   1481b:	call   11ef0 <wget_buffer_memset_append@plt>
   14820:	test   r14b,r14b
   14823:	je     14622 <convert_dec+0x1e2>
   14829:	mov    edx,0x1
   1482e:	mov    esi,0x2d
   14833:	mov    rdi,r13
   14836:	call   11ef0 <wget_buffer_memset_append@plt>
   1483b:	jmp    14622 <convert_dec+0x1e2>
   14840:	mov    edx,0x1
   14845:	mov    esi,0x2d
   1484a:	mov    rdi,r13
   1484d:	mov    QWORD PTR [rsp+0x18],r8
   14852:	mov    QWORD PTR [rsp+0x10],r9
   14857:	mov    QWORD PTR [rsp+0x8],rcx
   1485c:	call   11ef0 <wget_buffer_memset_append@plt>
   14861:	mov    r8,QWORD PTR [rsp+0x18]
   14866:	mov    r9,QWORD PTR [rsp+0x10]
   1486b:	mov    rcx,QWORD PTR [rsp+0x8]
   14870:	jmp    1456d <convert_dec+0x12d>
   14875:	mov    edx,0x1
   1487a:	mov    esi,0x2d
   1487f:	mov    rdi,r13
   14882:	call   11ef0 <wget_buffer_memset_append@plt>
   14887:	jmp    1478a <convert_dec+0x34a>
   1488c:	mov    rdx,r12
   1488f:	mov    esi,0x20
   14894:	mov    rdi,r13
   14897:	mov    QWORD PTR [rsp+0x10],r8
   1489c:	mov    QWORD PTR [rsp+0x8],rcx
   148a1:	call   11ef0 <wget_buffer_memset_append@plt>
   148a6:	test   r14b,r14b
   148a9:	mov    rcx,QWORD PTR [rsp+0x8]
   148ae:	mov    r8,QWORD PTR [rsp+0x10]
   148b3:	je     146d0 <convert_dec+0x290>
   148b9:	jmp    147e5 <convert_dec+0x3a5>
   148be:	mov    edx,0x1
   148c3:	mov    esi,0x2d
   148c8:	mov    rdi,r13
   148cb:	mov    QWORD PTR [rsp+0x10],r8
   148d0:	mov    QWORD PTR [rsp+0x8],rcx
   148d5:	call   11ef0 <wget_buffer_memset_append@plt>
   148da:	mov    r8,QWORD PTR [rsp+0x10]
   148df:	mov    rcx,QWORD PTR [rsp+0x8]
   148e4:	jmp    146a3 <convert_dec+0x263>
   148e9:	call   11760 <__stack_chk_fail@plt>
   148ee:	xchg   ax,ax

00000000000148f0 <copy_string>:
   148f0:	push   r15
   148f2:	push   r14
   148f4:	mov    r14,rdi
   148f7:	push   r13
   148f9:	push   r12
   148fb:	push   rbp
   148fc:	test   r8,r8
   148ff:	je     149a0 <copy_string+0xb0>
   14905:	mov    r12d,esi
   14908:	mov    r15d,edx
   1490b:	mov    rbp,r8
   1490e:	test   ecx,ecx
   14910:	js     14990 <copy_string+0xa0>
   14912:	movsxd rsi,ecx
   14915:	mov    rdi,r8
   14918:	call   11ff0 <strnlen@plt>
   1491d:	mov    r13,rax
   14920:	test   r15d,r15d
   14923:	je     14970 <copy_string+0x80>
   14925:	mov    eax,r15d
   14928:	cmp    rax,r13
   1492b:	jbe    14970 <copy_string+0x80>
   1492d:	movsxd r15,r15d
   14930:	sub    r15,r13
   14933:	and    r12d,0x2
   14937:	je     14960 <copy_string+0x70>
   14939:	mov    rdx,r13
   1493c:	mov    rsi,rbp
   1493f:	mov    rdi,r14
   14942:	call   10ea0 <wget_buffer_memcat@plt>
   14947:	pop    rbp
   14948:	mov    rdx,r15
   1494b:	pop    r12
   1494d:	mov    rdi,r14
   14950:	pop    r13
   14952:	mov    esi,0x20
   14957:	pop    r14
   14959:	pop    r15
   1495b:	jmp    11ef0 <wget_buffer_memset_append@plt>
   14960:	mov    rdx,r15
   14963:	mov    esi,0x20
   14968:	mov    rdi,r14
   1496b:	call   11ef0 <wget_buffer_memset_append@plt>
   14970:	mov    rdx,r13
   14973:	mov    rsi,rbp
   14976:	mov    rdi,r14
   14979:	pop    rbp
   1497a:	pop    r12
   1497c:	pop    r13
   1497e:	pop    r14
   14980:	pop    r15
   14982:	jmp    10ea0 <wget_buffer_memcat@plt>
   14987:	nop    WORD PTR [rax+rax*1+0x0]
   14990:	mov    rdi,r8
   14993:	call   10ab0 <strlen@plt>
   14998:	mov    r13,rax
   1499b:	jmp    14920 <copy_string+0x30>
   149a0:	pop    rbp
   149a1:	lea    rsi,[rip+0x366eb]        # 4b093 <_fini+0x69f>
   149a8:	pop    r12
   149aa:	pop    r13
   149ac:	pop    r14
   149ae:	pop    r15
   149b0:	jmp    10e40 <wget_buffer_strcat@plt>
   149b5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

00000000000149c0 <wget_buffer_vprintf_append>:
   149c0:	endbr64 
   149c4:	push   r15
   149c6:	push   r14
   149c8:	push   r13
   149ca:	push   r12
   149cc:	push   rbp
   149cd:	push   rbx
   149ce:	sub    rsp,0x48
   149d2:	mov    rax,QWORD PTR fs:0x28
   149db:	mov    QWORD PTR [rsp+0x38],rax
   149e0:	xor    eax,eax
   149e2:	test   rsi,rsi
   149e5:	je     150a8 <wget_buffer_vprintf_append+0x6e8>
   149eb:	movzx  eax,BYTE PTR [rsi]
   149ee:	mov    rbp,rdi
   149f1:	mov    r15,rsi
   149f4:	mov    rbx,rdx
   149f7:	lea    r12,[rip+0x36772]        # 4b170 <HEX.0>
   149fe:	test   al,al
   14a00:	je     14b57 <wget_buffer_vprintf_append+0x197>
   14a06:	cs nop WORD PTR [rax+rax*1+0x0]
   14a10:	mov    r14,r15
   14a13:	cmp    al,0x25
   14a15:	je     14a57 <wget_buffer_vprintf_append+0x97>
   14a17:	nop    WORD PTR [rax+rax*1+0x0]
   14a20:	mov    r13,r14
   14a23:	movzx  eax,BYTE PTR [r14+0x1]
   14a28:	add    r14,0x1
   14a2c:	test   al,al
   14a2e:	je     14a34 <wget_buffer_vprintf_append+0x74>
   14a30:	cmp    al,0x25
   14a32:	jne    14a20 <wget_buffer_vprintf_append+0x60>
   14a34:	cmp    r14,r15
   14a37:	je     14a4f <wget_buffer_vprintf_append+0x8f>
   14a39:	mov    rdx,r14
   14a3c:	mov    rsi,r15
   14a3f:	mov    rdi,rbp
   14a42:	sub    rdx,r15
   14a45:	call   10ea0 <wget_buffer_memcat@plt>
   14a4a:	movzx  eax,BYTE PTR [r13+0x1]
   14a4f:	test   al,al
   14a51:	je     14b57 <wget_buffer_vprintf_append+0x197>
   14a57:	movzx  eax,BYTE PTR [r14+0x1]
   14a5c:	cmp    al,0x73
   14a5e:	je     14b18 <wget_buffer_vprintf_append+0x158>
   14a64:	cmp    al,0x64
   14a66:	je     14cd9 <wget_buffer_vprintf_append+0x319>
   14a6c:	cmp    al,0x63
   14a6e:	je     14d6a <wget_buffer_vprintf_append+0x3aa>
   14a74:	cmp    al,0x70
   14a76:	je     14f1d <wget_buffer_vprintf_append+0x55d>
   14a7c:	cmp    al,0x25
   14a7e:	je     14ca8 <wget_buffer_vprintf_append+0x2e8>
   14a84:	add    r14,0x1
   14a88:	xor    esi,esi
   14a8a:	test   al,al
   14a8c:	jne    14aac <wget_buffer_vprintf_append+0xec>
   14a8e:	jmp    14ac0 <wget_buffer_vprintf_append+0x100>
   14a90:	cmp    al,0x2d
   14a92:	je     14b10 <wget_buffer_vprintf_append+0x150>
   14a94:	cmp    al,0x23
   14a96:	jne    14b80 <wget_buffer_vprintf_append+0x1c0>
   14a9c:	or     esi,0x4
   14a9f:	movzx  eax,BYTE PTR [r14+0x1]
   14aa4:	add    r14,0x1
   14aa8:	test   al,al
   14aaa:	je     14ac0 <wget_buffer_vprintf_append+0x100>
   14aac:	cmp    al,0x30
   14aae:	jne    14a90 <wget_buffer_vprintf_append+0xd0>
   14ab0:	movzx  eax,BYTE PTR [r14+0x1]
   14ab5:	add    r14,0x1
   14ab9:	or     esi,0x1
   14abc:	test   al,al
   14abe:	jne    14aac <wget_buffer_vprintf_append+0xec>
   14ac0:	mov    ecx,DWORD PTR [rbx]
   14ac2:	xor    edx,edx
   14ac4:	mov    r11d,0xffffffff
   14aca:	cmp    ecx,0x2f
   14acd:	ja     15075 <wget_buffer_vprintf_append+0x6b5>
   14ad3:	mov    eax,ecx
   14ad5:	add    ecx,0x8
   14ad8:	add    rax,QWORD PTR [rbx+0x10]
   14adc:	mov    DWORD PTR [rbx],ecx
   14ade:	movsxd rcx,DWORD PTR [rax]
   14ae1:	movzx  eax,BYTE PTR [r14]
   14ae5:	mov    r8d,ecx
   14ae8:	cmp    al,0x64
   14aea:	jne    14c34 <wget_buffer_vprintf_append+0x274>
   14af0:	mov    r8,rcx
   14af3:	or     esi,0x18
   14af6:	mov    ecx,r11d
   14af9:	mov    rdi,rbp
   14afc:	call   14440 <convert_dec>
   14b01:	jmp    14c6a <wget_buffer_vprintf_append+0x2aa>
   14b06:	cs nop WORD PTR [rax+rax*1+0x0]
   14b10:	or     esi,0x2
   14b13:	jmp    14a9f <wget_buffer_vprintf_append+0xdf>
   14b15:	nop    DWORD PTR [rax]
   14b18:	mov    eax,DWORD PTR [rbx]
   14b1a:	cmp    eax,0x2f
   14b1d:	ja     14cc8 <wget_buffer_vprintf_append+0x308>
   14b23:	mov    edx,eax
   14b25:	add    eax,0x8
   14b28:	add    rdx,QWORD PTR [rbx+0x10]
   14b2c:	mov    DWORD PTR [rbx],eax
   14b2e:	mov    rsi,QWORD PTR [rdx]
   14b31:	lea    rax,[rip+0x3655b]        # 4b093 <_fini+0x69f>
   14b38:	mov    rdi,rbp
   14b3b:	lea    r15,[r14+0x2]
   14b3f:	test   rsi,rsi
   14b42:	cmove  rsi,rax
   14b46:	call   10e40 <wget_buffer_strcat@plt>
   14b4b:	movzx  eax,BYTE PTR [r15]
   14b4f:	test   al,al
   14b51:	jne    14a10 <wget_buffer_vprintf_append+0x50>
   14b57:	mov    rax,QWORD PTR [rbp+0x8]
   14b5b:	mov    rdx,QWORD PTR [rsp+0x38]
   14b60:	sub    rdx,QWORD PTR fs:0x28
   14b69:	jne    1511f <wget_buffer_vprintf_append+0x75f>
   14b6f:	add    rsp,0x48
   14b73:	pop    rbx
   14b74:	pop    rbp
   14b75:	pop    r12
   14b77:	pop    r13
   14b79:	pop    r14
   14b7b:	pop    r15
   14b7d:	ret    
   14b7e:	xchg   ax,ax
   14b80:	mov    ecx,DWORD PTR [rbx]
   14b82:	cmp    al,0x2a
   14b84:	jne    14c73 <wget_buffer_vprintf_append+0x2b3>
   14b8a:	cmp    ecx,0x2f
   14b8d:	ja     14da1 <wget_buffer_vprintf_append+0x3e1>
   14b93:	mov    eax,ecx
   14b95:	add    ecx,0x8
   14b98:	add    rax,QWORD PTR [rbx+0x10]
   14b9c:	mov    DWORD PTR [rbx],ecx
   14b9e:	mov    edx,DWORD PTR [rax]
   14ba0:	test   edx,edx
   14ba2:	jns    14ba9 <wget_buffer_vprintf_append+0x1e9>
   14ba4:	or     esi,0x2
   14ba7:	neg    edx
   14ba9:	movzx  eax,BYTE PTR [r14+0x1]
   14bae:	add    r14,0x1
   14bb2:	mov    r11d,0xffffffff
   14bb8:	cmp    al,0x2e
   14bba:	jne    14be0 <wget_buffer_vprintf_append+0x220>
   14bbc:	movzx  eax,BYTE PTR [r14+0x1]
   14bc1:	cmp    al,0x2a
   14bc3:	je     14f93 <wget_buffer_vprintf_append+0x5d3>
   14bc9:	movsx  edi,al
   14bcc:	add    r14,0x1
   14bd0:	lea    r8d,[rdi-0x30]
   14bd4:	cmp    r8d,0x9
   14bd8:	jbe    14db2 <wget_buffer_vprintf_append+0x3f2>
   14bde:	xchg   ax,ax
   14be0:	sub    eax,0x4c
   14be3:	cmp    al,0x2e
   14be5:	ja     14aca <wget_buffer_vprintf_append+0x10a>
   14beb:	lea    rdi,[rip+0x364be]        # 4b0b0 <_fini+0x6bc>
   14bf2:	movzx  eax,al
   14bf5:	movsxd rax,DWORD PTR [rdi+rax*4]
   14bf9:	add    rax,rdi
   14bfc:	notrack jmp rax
   14bff:	cmp    BYTE PTR [r14+0x1],0x6c
   14c04:	je     14dd7 <wget_buffer_vprintf_append+0x417>
   14c0a:	add    r14,0x1
   14c0e:	cmp    ecx,0x2f
   14c11:	ja     14de4 <wget_buffer_vprintf_append+0x424>
   14c17:	mov    eax,ecx
   14c19:	add    ecx,0x8
   14c1c:	add    rax,QWORD PTR [rbx+0x10]
   14c20:	mov    DWORD PTR [rbx],ecx
   14c22:	mov    rcx,QWORD PTR [rax]
   14c25:	mov    r8,rcx
   14c28:	movzx  eax,BYTE PTR [r14]
   14c2c:	cmp    al,0x64
   14c2e:	je     14af0 <wget_buffer_vprintf_append+0x130>
   14c34:	cmp    al,0x69
   14c36:	je     14af0 <wget_buffer_vprintf_append+0x130>
   14c3c:	cmp    al,0x75
   14c3e:	je     14ffa <wget_buffer_vprintf_append+0x63a>
   14c44:	cmp    al,0x78
   14c46:	je     1501e <wget_buffer_vprintf_append+0x65e>
   14c4c:	cmp    al,0x58
   14c4e:	je     150af <wget_buffer_vprintf_append+0x6ef>
   14c54:	cmp    al,0x6f
   14c56:	jne    14fc1 <wget_buffer_vprintf_append+0x601>
   14c5c:	or     esi,0x20
   14c5f:	mov    ecx,r11d
   14c62:	mov    rdi,rbp
   14c65:	call   14440 <convert_dec>
   14c6a:	lea    r15,[r14+0x1]
   14c6e:	jmp    14b4b <wget_buffer_vprintf_append+0x18b>
   14c73:	movsx  edi,BYTE PTR [r14]
   14c77:	xor    edx,edx
   14c79:	mov    eax,edi
   14c7b:	sub    edi,0x30
   14c7e:	cmp    edi,0x9
   14c81:	ja     14bb2 <wget_buffer_vprintf_append+0x1f2>
   14c87:	lea    eax,[rdx+rdx*4]
   14c8a:	add    r14,0x1
   14c8e:	lea    edx,[rdi+rax*2]
   14c91:	movsx  edi,BYTE PTR [r14]
   14c95:	mov    eax,edi
   14c97:	sub    edi,0x30
   14c9a:	cmp    edi,0x9
   14c9d:	jbe    14c87 <wget_buffer_vprintf_append+0x2c7>
   14c9f:	jmp    14bb2 <wget_buffer_vprintf_append+0x1f2>
   14ca4:	nop    DWORD PTR [rax+0x0]
   14ca8:	mov    edx,0x1
   14cad:	mov    esi,0x25
   14cb2:	mov    rdi,rbp
   14cb5:	call   11ef0 <wget_buffer_memset_append@plt>
   14cba:	lea    r15,[r14+0x2]
   14cbe:	jmp    14b4b <wget_buffer_vprintf_append+0x18b>
   14cc3:	nop    DWORD PTR [rax+rax*1+0x0]
   14cc8:	mov    rdx,QWORD PTR [rbx+0x8]
   14ccc:	lea    rax,[rdx+0x8]
   14cd0:	mov    QWORD PTR [rbx+0x8],rax
   14cd4:	jmp    14b2e <wget_buffer_vprintf_append+0x16e>
   14cd9:	mov    eax,DWORD PTR [rbx]
   14cdb:	cmp    eax,0x2f
   14cde:	ja     14df5 <wget_buffer_vprintf_append+0x435>
   14ce4:	mov    edx,eax
   14ce6:	add    eax,0x8
   14ce9:	add    rdx,QWORD PTR [rbx+0x10]
   14ced:	mov    DWORD PTR [rbx],eax
   14cef:	mov    edx,DWORD PTR [rdx]
   14cf1:	test   edx,edx
   14cf3:	js     14e0b <wget_buffer_vprintf_append+0x44b>
   14cf9:	xor    r9d,r9d
   14cfc:	cmp    edx,0x9
   14cff:	jle    1510e <wget_buffer_vprintf_append+0x74e>
   14d05:	lea    r8,[rsp+0x2f]
   14d0a:	mov    r10d,0xcccccccd
   14d10:	mov    eax,edx
   14d12:	mov    esi,edx
   14d14:	sub    r8,0x1
   14d18:	imul   rax,r10
   14d1c:	shr    rax,0x23
   14d20:	lea    edi,[rax+rax*4]
   14d23:	add    edi,edi
   14d25:	sub    esi,edi
   14d27:	add    esi,0x30
   14d2a:	mov    BYTE PTR [r8+0x1],sil
   14d2e:	mov    esi,edx
   14d30:	mov    edx,eax
   14d32:	cmp    esi,0x63
   14d35:	jg     14d10 <wget_buffer_vprintf_append+0x350>
   14d37:	add    edx,0x30
   14d3a:	mov    BYTE PTR [r8],dl
   14d3d:	test   r9d,r9d
   14d40:	jne    14fe8 <wget_buffer_vprintf_append+0x628>
   14d46:	lea    rdx,[r8-0x1]
   14d4a:	lea    rax,[rsp+0x10]
   14d4f:	mov    rsi,r8
   14d52:	lea    r15,[r14+0x2]
   14d56:	mov    rdi,rbp
   14d59:	sub    rax,rdx
   14d5c:	lea    rdx,[rax+0x1f]
   14d60:	call   10ea0 <wget_buffer_memcat@plt>
   14d65:	jmp    14b4b <wget_buffer_vprintf_append+0x18b>
   14d6a:	mov    eax,DWORD PTR [rbx]
   14d6c:	cmp    eax,0x2f
   14d6f:	ja     14e25 <wget_buffer_vprintf_append+0x465>
   14d75:	mov    edx,eax
   14d77:	add    eax,0x8
   14d7a:	add    rdx,QWORD PTR [rbx+0x10]
   14d7e:	mov    DWORD PTR [rbx],eax
   14d80:	mov    eax,DWORD PTR [rdx]
   14d82:	lea    rsi,[rsp+0xf]
   14d87:	mov    edx,0x1
   14d8c:	mov    rdi,rbp
   14d8f:	lea    r15,[r14+0x2]
   14d93:	mov    BYTE PTR [rsp+0xf],al
   14d97:	call   10ea0 <wget_buffer_memcat@plt>
   14d9c:	jmp    14b4b <wget_buffer_vprintf_append+0x18b>
   14da1:	mov    rax,QWORD PTR [rbx+0x8]
   14da5:	lea    rdx,[rax+0x8]
   14da9:	mov    QWORD PTR [rbx+0x8],rdx
   14dad:	jmp    14b9e <wget_buffer_vprintf_append+0x1de>
   14db2:	xor    r11d,r11d
   14db5:	lea    eax,[r11+r11*4]
   14db9:	add    r14,0x1
   14dbd:	lea    r11d,[rdi+rax*2-0x30]
   14dc2:	movsx  edi,BYTE PTR [r14]
   14dc6:	lea    r8d,[rdi-0x30]
   14dca:	mov    eax,edi
   14dcc:	cmp    r8d,0x9
   14dd0:	jbe    14db5 <wget_buffer_vprintf_append+0x3f5>
   14dd2:	jmp    14be0 <wget_buffer_vprintf_append+0x220>
   14dd7:	add    r14,0x2
   14ddb:	cmp    ecx,0x2f
   14dde:	jbe    14c17 <wget_buffer_vprintf_append+0x257>
   14de4:	mov    rax,QWORD PTR [rbx+0x8]
   14de8:	lea    rcx,[rax+0x8]
   14dec:	mov    QWORD PTR [rbx+0x8],rcx
   14df0:	jmp    14c22 <wget_buffer_vprintf_append+0x262>
   14df5:	mov    rdx,QWORD PTR [rbx+0x8]
   14df9:	lea    rax,[rdx+0x8]
   14dfd:	mov    QWORD PTR [rbx+0x8],rax
   14e01:	mov    edx,DWORD PTR [rdx]
   14e03:	test   edx,edx
   14e05:	jns    14cf9 <wget_buffer_vprintf_append+0x339>
   14e0b:	mov    eax,edx
   14e0d:	neg    eax
   14e0f:	cmp    edx,0xfffffff7
   14e12:	jge    14fdc <wget_buffer_vprintf_append+0x61c>
   14e18:	mov    edx,eax
   14e1a:	mov    r9d,0x1
   14e20:	jmp    14d05 <wget_buffer_vprintf_append+0x345>
   14e25:	mov    rdx,QWORD PTR [rbx+0x8]
   14e29:	lea    rax,[rdx+0x8]
   14e2d:	mov    QWORD PTR [rbx+0x8],rax
   14e31:	jmp    14d80 <wget_buffer_vprintf_append+0x3c0>
   14e36:	cmp    ecx,0x2f
   14e39:	ja     15064 <wget_buffer_vprintf_append+0x6a4>
   14e3f:	mov    eax,ecx
   14e41:	add    ecx,0x8
   14e44:	add    rax,QWORD PTR [rbx+0x10]
   14e48:	mov    DWORD PTR [rbx],ecx
   14e4a:	mov    rcx,QWORD PTR [rax]
   14e4d:	add    r14,0x1
   14e51:	mov    r8,rcx
   14e54:	jmp    14c28 <wget_buffer_vprintf_append+0x268>
   14e59:	lea    r15,[r14+0x1]
   14e5d:	cmp    ecx,0x2f
   14e60:	ja     15053 <wget_buffer_vprintf_append+0x693>
   14e66:	mov    eax,ecx
   14e68:	add    ecx,0x8
   14e6b:	add    rax,QWORD PTR [rbx+0x10]
   14e6f:	mov    DWORD PTR [rbx],ecx
   14e71:	mov    r8,QWORD PTR [rax]
   14e74:	mov    ecx,r11d
   14e77:	mov    rdi,rbp
   14e7a:	call   148f0 <copy_string>
   14e7f:	jmp    14b4b <wget_buffer_vprintf_append+0x18b>
   14e84:	lea    r15,[r14+0x1]
   14e88:	cmp    ecx,0x2f
   14e8b:	ja     15042 <wget_buffer_vprintf_append+0x682>
   14e91:	mov    eax,ecx
   14e93:	add    ecx,0x8
   14e96:	add    rax,QWORD PTR [rbx+0x10]
   14e9a:	mov    DWORD PTR [rbx],ecx
   14e9c:	mov    r8,QWORD PTR [rax]
   14e9f:	or     esi,0x44
   14ea2:	mov    ecx,r11d
   14ea5:	mov    rdi,rbp
   14ea8:	call   14440 <convert_dec>
   14ead:	jmp    14b4b <wget_buffer_vprintf_append+0x18b>
   14eb2:	cmp    BYTE PTR [r14+0x1],0x68
   14eb7:	je     150c3 <wget_buffer_vprintf_append+0x703>
   14ebd:	add    r14,0x1
   14ec1:	cmp    ecx,0x2f
   14ec4:	ja     15097 <wget_buffer_vprintf_append+0x6d7>
   14eca:	mov    eax,ecx
   14ecc:	add    ecx,0x8
   14ecf:	add    rax,QWORD PTR [rbx+0x10]
   14ed3:	mov    DWORD PTR [rbx],ecx
   14ed5:	mov    r8d,DWORD PTR [rax]
   14ed8:	movsx  rcx,r8w
   14edc:	movzx  r8d,r8w
   14ee0:	jmp    14c28 <wget_buffer_vprintf_append+0x268>
   14ee5:	cmp    ecx,0x2f
   14ee8:	ja     15031 <wget_buffer_vprintf_append+0x671>
   14eee:	mov    eax,ecx
   14ef0:	add    ecx,0x8
   14ef3:	add    rax,QWORD PTR [rbx+0x10]
   14ef7:	mov    DWORD PTR [rbx],ecx
   14ef9:	mov    eax,DWORD PTR [rax]
   14efb:	lea    r8,[rsp+0x10]
   14f00:	mov    ecx,r11d
   14f03:	mov    rdi,rbp
   14f06:	mov    BYTE PTR [rsp+0x11],0x0
   14f0b:	lea    r15,[r14+0x1]
   14f0f:	mov    BYTE PTR [rsp+0x10],al
   14f13:	call   148f0 <copy_string>
   14f18:	jmp    14b4b <wget_buffer_vprintf_append+0x18b>
   14f1d:	mov    eax,DWORD PTR [rbx]
   14f1f:	cmp    eax,0x2f
   14f22:	ja     1500d <wget_buffer_vprintf_append+0x64d>
   14f28:	mov    edx,eax
   14f2a:	add    eax,0x8
   14f2d:	add    rdx,QWORD PTR [rbx+0x10]
   14f31:	mov    DWORD PTR [rbx],eax
   14f33:	mov    r15,QWORD PTR [rdx]
   14f36:	test   r15,r15
   14f39:	je     150e7 <wget_buffer_vprintf_append+0x727>
   14f3f:	mov    edx,0x2
   14f44:	lea    rsi,[rip+0x36153]        # 4b09e <_fini+0x6aa>
   14f4b:	mov    rdi,rbp
   14f4e:	call   10ea0 <wget_buffer_memcat@plt>
   14f53:	mov    BYTE PTR [rsp+0x2f],0x0
   14f58:	mov    rax,r15
   14f5b:	xor    edx,edx
   14f5d:	lea    rsi,[rsp+0x2f]
   14f62:	nop    WORD PTR [rax+rax*1+0x0]
   14f68:	mov    rdi,rax
   14f6b:	sub    rsi,0x1
   14f6f:	add    edx,0x1
   14f72:	and    edi,0xf
   14f75:	shr    rax,0x4
   14f79:	movzx  edi,BYTE PTR [r12+rdi*1]
   14f7e:	mov    BYTE PTR [rsi],dil
   14f81:	jne    14f68 <wget_buffer_vprintf_append+0x5a8>
   14f83:	movsxd rdx,edx
   14f86:	mov    rdi,rbp
   14f89:	call   10ea0 <wget_buffer_memcat@plt>
   14f8e:	jmp    14cba <wget_buffer_vprintf_append+0x2fa>
   14f93:	cmp    ecx,0x2f
   14f96:	ja     15086 <wget_buffer_vprintf_append+0x6c6>
   14f9c:	mov    eax,ecx
   14f9e:	add    ecx,0x8
   14fa1:	add    rax,QWORD PTR [rbx+0x10]
   14fa5:	mov    DWORD PTR [rbx],ecx
   14fa7:	mov    r11d,DWORD PTR [rax]
   14faa:	xor    eax,eax
   14fac:	test   r11d,r11d
   14faf:	cmovs  r11d,eax
   14fb3:	movzx  eax,BYTE PTR [r14+0x2]
   14fb8:	add    r14,0x2
   14fbc:	jmp    14be0 <wget_buffer_vprintf_append+0x220>
   14fc1:	mov    edx,0x1
   14fc6:	mov    esi,0x25
   14fcb:	mov    rdi,rbp
   14fce:	add    r15,0x1
   14fd2:	call   11ef0 <wget_buffer_memset_append@plt>
   14fd7:	jmp    14b4b <wget_buffer_vprintf_append+0x18b>
   14fdc:	add    eax,0x30
   14fdf:	lea    r8,[rsp+0x2f]
   14fe4:	mov    BYTE PTR [rsp+0x2f],al
   14fe8:	mov    BYTE PTR [r8-0x1],0x2d
   14fed:	lea    rdx,[r8-0x2]
   14ff1:	sub    r8,0x1
   14ff5:	jmp    14d4a <wget_buffer_vprintf_append+0x38a>
   14ffa:	or     esi,0x10
   14ffd:	mov    ecx,r11d
   15000:	mov    rdi,rbp
   15003:	call   14440 <convert_dec>
   15008:	jmp    14c6a <wget_buffer_vprintf_append+0x2aa>
   1500d:	mov    rdx,QWORD PTR [rbx+0x8]
   15011:	lea    rax,[rdx+0x8]
   15015:	mov    QWORD PTR [rbx+0x8],rax
   15019:	jmp    14f33 <wget_buffer_vprintf_append+0x573>
   1501e:	or     esi,0x40
   15021:	mov    ecx,r11d
   15024:	mov    rdi,rbp
   15027:	call   14440 <convert_dec>
   1502c:	jmp    14c6a <wget_buffer_vprintf_append+0x2aa>
   15031:	mov    rax,QWORD PTR [rbx+0x8]
   15035:	lea    rcx,[rax+0x8]
   15039:	mov    QWORD PTR [rbx+0x8],rcx
   1503d:	jmp    14ef9 <wget_buffer_vprintf_append+0x539>
   15042:	mov    rax,QWORD PTR [rbx+0x8]
   15046:	lea    rcx,[rax+0x8]
   1504a:	mov    QWORD PTR [rbx+0x8],rcx
   1504e:	jmp    14e9c <wget_buffer_vprintf_append+0x4dc>
   15053:	mov    rax,QWORD PTR [rbx+0x8]
   15057:	lea    rcx,[rax+0x8]
   1505b:	mov    QWORD PTR [rbx+0x8],rcx
   1505f:	jmp    14e71 <wget_buffer_vprintf_append+0x4b1>
   15064:	mov    rax,QWORD PTR [rbx+0x8]
   15068:	lea    rcx,[rax+0x8]
   1506c:	mov    QWORD PTR [rbx+0x8],rcx
   15070:	jmp    14e4a <wget_buffer_vprintf_append+0x48a>
   15075:	mov    rax,QWORD PTR [rbx+0x8]
   15079:	lea    rcx,[rax+0x8]
   1507d:	mov    QWORD PTR [rbx+0x8],rcx
   15081:	jmp    14ade <wget_buffer_vprintf_append+0x11e>
   15086:	mov    rax,QWORD PTR [rbx+0x8]
   1508a:	lea    rdi,[rax+0x8]
   1508e:	mov    QWORD PTR [rbx+0x8],rdi
   15092:	jmp    14fa7 <wget_buffer_vprintf_append+0x5e7>
   15097:	mov    rax,QWORD PTR [rbx+0x8]
   1509b:	lea    rcx,[rax+0x8]
   1509f:	mov    QWORD PTR [rbx+0x8],rcx
   150a3:	jmp    14ed5 <wget_buffer_vprintf_append+0x515>
   150a8:	xor    eax,eax
   150aa:	jmp    14b5b <wget_buffer_vprintf_append+0x19b>
   150af:	or     sil,0x80
   150b3:	mov    ecx,r11d
   150b6:	mov    rdi,rbp
   150b9:	call   14440 <convert_dec>
   150be:	jmp    14c6a <wget_buffer_vprintf_append+0x2aa>
   150c3:	add    r14,0x2
   150c7:	cmp    ecx,0x2f
   150ca:	ja     15100 <wget_buffer_vprintf_append+0x740>
   150cc:	mov    eax,ecx
   150ce:	add    ecx,0x8
   150d1:	add    rax,QWORD PTR [rbx+0x10]
   150d5:	mov    DWORD PTR [rbx],ecx
   150d7:	mov    r8d,DWORD PTR [rax]
   150da:	movsx  rcx,r8b
   150de:	movzx  r8d,r8b
   150e2:	jmp    14c28 <wget_buffer_vprintf_append+0x268>
   150e7:	mov    edx,0x3
   150ec:	lea    rsi,[rip+0x35fa7]        # 4b09a <_fini+0x6a6>
   150f3:	mov    rdi,rbp
   150f6:	call   10ea0 <wget_buffer_memcat@plt>
   150fb:	jmp    14cba <wget_buffer_vprintf_append+0x2fa>
   15100:	mov    rax,QWORD PTR [rbx+0x8]
   15104:	lea    rcx,[rax+0x8]
   15108:	mov    QWORD PTR [rbx+0x8],rcx
   1510c:	jmp    150d7 <wget_buffer_vprintf_append+0x717>
   1510e:	add    edx,0x30
   15111:	lea    r8,[rsp+0x2f]
   15116:	mov    BYTE PTR [rsp+0x2f],dl
   1511a:	jmp    14d46 <wget_buffer_vprintf_append+0x386>
   1511f:	call   11760 <__stack_chk_fail@plt>
   15124:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1512f:	nop

0000000000015130 <wget_buffer_vprintf>:
   15130:	endbr64 
   15134:	mov    QWORD PTR [rdi+0x8],0x0
   1513c:	jmp    11b90 <wget_buffer_vprintf_append@plt>
   15141:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1514c:	nop    DWORD PTR [rax+0x0]

0000000000015150 <wget_buffer_printf_append>:
   15150:	endbr64 
   15154:	push   rbx
   15155:	mov    rbx,rdi
   15158:	sub    rsp,0xd0
   1515f:	mov    QWORD PTR [rsp+0x30],rdx
   15164:	mov    QWORD PTR [rsp+0x38],rcx
   15169:	mov    QWORD PTR [rsp+0x40],r8
   1516e:	mov    QWORD PTR [rsp+0x48],r9
   15173:	test   al,al
   15175:	je     151ae <wget_buffer_printf_append+0x5e>
   15177:	movaps XMMWORD PTR [rsp+0x50],xmm0
   1517c:	movaps XMMWORD PTR [rsp+0x60],xmm1
   15181:	movaps XMMWORD PTR [rsp+0x70],xmm2
   15186:	movaps XMMWORD PTR [rsp+0x80],xmm3
   1518e:	movaps XMMWORD PTR [rsp+0x90],xmm4
   15196:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   1519e:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   151a6:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   151ae:	mov    rax,QWORD PTR fs:0x28
   151b7:	mov    QWORD PTR [rsp+0x18],rax
   151bc:	xor    eax,eax
   151be:	lea    rax,[rsp+0xe0]
   151c6:	mov    rdx,rsp
   151c9:	mov    rdi,rbx
   151cc:	mov    QWORD PTR [rsp+0x8],rax
   151d1:	lea    rax,[rsp+0x20]
   151d6:	mov    DWORD PTR [rsp],0x10
   151dd:	mov    DWORD PTR [rsp+0x4],0x30
   151e5:	mov    QWORD PTR [rsp+0x10],rax
   151ea:	call   11b90 <wget_buffer_vprintf_append@plt>
   151ef:	mov    rax,QWORD PTR [rbx+0x8]
   151f3:	mov    rdx,QWORD PTR [rsp+0x18]
   151f8:	sub    rdx,QWORD PTR fs:0x28
   15201:	jne    1520c <wget_buffer_printf_append+0xbc>
   15203:	add    rsp,0xd0
   1520a:	pop    rbx
   1520b:	ret    
   1520c:	call   11760 <__stack_chk_fail@plt>
   15211:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1521c:	nop    DWORD PTR [rax+0x0]

0000000000015220 <wget_buffer_printf>:
   15220:	endbr64 
   15224:	sub    rsp,0xd8
   1522b:	mov    QWORD PTR [rsp+0x30],rdx
   15230:	mov    QWORD PTR [rsp+0x38],rcx
   15235:	mov    QWORD PTR [rsp+0x40],r8
   1523a:	mov    QWORD PTR [rsp+0x48],r9
   1523f:	test   al,al
   15241:	je     1527a <wget_buffer_printf+0x5a>
   15243:	movaps XMMWORD PTR [rsp+0x50],xmm0
   15248:	movaps XMMWORD PTR [rsp+0x60],xmm1
   1524d:	movaps XMMWORD PTR [rsp+0x70],xmm2
   15252:	movaps XMMWORD PTR [rsp+0x80],xmm3
   1525a:	movaps XMMWORD PTR [rsp+0x90],xmm4
   15262:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   1526a:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   15272:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   1527a:	mov    rax,QWORD PTR fs:0x28
   15283:	mov    QWORD PTR [rsp+0x18],rax
   15288:	xor    eax,eax
   1528a:	lea    rax,[rsp+0xe0]
   15292:	mov    rdx,rsp
   15295:	mov    DWORD PTR [rsp],0x10
   1529c:	mov    QWORD PTR [rsp+0x8],rax
   152a1:	lea    rax,[rsp+0x20]
   152a6:	mov    DWORD PTR [rsp+0x4],0x30
   152ae:	mov    QWORD PTR [rsp+0x10],rax
   152b3:	call   11080 <wget_buffer_vprintf@plt>
   152b8:	mov    rdx,QWORD PTR [rsp+0x18]
   152bd:	sub    rdx,QWORD PTR fs:0x28
   152c6:	jne    152d0 <wget_buffer_printf+0xb0>
   152c8:	add    rsp,0xd8
   152cf:	ret    
   152d0:	call   11760 <__stack_chk_fail@plt>
   152d5:	cs nop WORD PTR [rax+rax*1+0x0]
   152df:	nop

00000000000152e0 <base64_encode>:
   152e0:	test   ecx,ecx
   152e2:	mov    r9,rdx
   152e5:	lea    rax,[rip+0x35e94]        # 4b180 <base64unsafe.0>
   152ec:	movabs rdx,0xaaaaaaaaaaaaaaab
   152f6:	lea    r8,[rip+0x35ec3]        # 4b1c0 <base64urlsafe.1>
   152fd:	cmove  r8,rax
   15301:	mov    rax,r9
   15304:	mul    rdx
   15307:	shr    rdx,1
   1530a:	lea    rax,[rdx+rdx*2]
   1530e:	mov    r10,rdx
   15311:	mov    rdx,r9
   15314:	sub    rdx,rax
   15317:	cmp    r9,0x2
   1531b:	jbe    15460 <base64_encode+0x180>
   15321:	mov    r9,rax
   15324:	mov    rcx,rdi
   15327:	add    r9,rsi
   1532a:	nop    WORD PTR [rax+rax*1+0x0]
   15330:	movzx  eax,BYTE PTR [rsi]
   15333:	add    rcx,0x4
   15337:	add    rsi,0x3
   1533b:	shr    al,0x2
   1533e:	movzx  eax,al
   15341:	movzx  eax,BYTE PTR [r8+rax*1]
   15346:	mov    BYTE PTR [rcx-0x4],al
   15349:	movzx  eax,BYTE PTR [rsi-0x3]
   1534d:	movzx  r11d,BYTE PTR [rsi-0x2]
   15352:	shl    eax,0x4
   15355:	shr    r11b,0x4
   15359:	and    eax,0x30
   1535c:	movzx  r11d,r11b
   15360:	or     eax,r11d
   15363:	cdqe   
   15365:	movzx  eax,BYTE PTR [r8+rax*1]
   1536a:	mov    BYTE PTR [rcx-0x3],al
   1536d:	movzx  eax,BYTE PTR [rsi-0x2]
   15371:	movzx  r11d,BYTE PTR [rsi-0x1]
   15376:	shl    eax,0x2
   15379:	shr    r11b,0x6
   1537d:	and    eax,0x3c
   15380:	movzx  r11d,r11b
   15384:	or     eax,r11d
   15387:	cdqe   
   15389:	movzx  eax,BYTE PTR [r8+rax*1]
   1538e:	mov    BYTE PTR [rcx-0x2],al
   15391:	movzx  eax,BYTE PTR [rsi-0x1]
   15395:	and    eax,0x3f
   15398:	movzx  eax,BYTE PTR [r8+rax*1]
   1539d:	mov    BYTE PTR [rcx-0x1],al
   153a0:	cmp    r9,rsi
   153a3:	jne    15330 <base64_encode+0x50>
   153a5:	lea    rax,[rdi+r10*4]
   153a9:	cmp    rdx,0x1
   153ad:	je     15420 <base64_encode+0x140>
   153af:	cmp    rdx,0x2
   153b3:	je     153c0 <base64_encode+0xe0>
   153b5:	mov    BYTE PTR [rax],0x0
   153b8:	sub    rax,rdi
   153bb:	ret    
   153bc:	nop    DWORD PTR [rax+0x0]
   153c0:	movzx  edx,BYTE PTR [r9]
   153c4:	add    rax,0x4
   153c8:	shr    dl,0x2
   153cb:	movzx  edx,dl
   153ce:	movzx  edx,BYTE PTR [r8+rdx*1]
   153d3:	mov    BYTE PTR [rax-0x4],dl
   153d6:	movzx  edx,BYTE PTR [r9]
   153da:	movzx  ecx,BYTE PTR [r9+0x1]
   153df:	shl    edx,0x4
   153e2:	shr    cl,0x4
   153e5:	and    edx,0x30
   153e8:	movzx  ecx,cl
   153eb:	or     edx,ecx
   153ed:	movsxd rdx,edx
   153f0:	movzx  edx,BYTE PTR [r8+rdx*1]
   153f5:	mov    BYTE PTR [rax-0x3],dl
   153f8:	movzx  edx,BYTE PTR [r9+0x1]
   153fd:	shl    edx,0x2
   15400:	and    edx,0x3c
   15403:	movzx  edx,BYTE PTR [r8+rdx*1]
   15408:	mov    BYTE PTR [rax-0x1],0x3d
   1540c:	mov    BYTE PTR [rax-0x2],dl
   1540f:	mov    BYTE PTR [rax],0x0
   15412:	sub    rax,rdi
   15415:	ret    
   15416:	cs nop WORD PTR [rax+rax*1+0x0]
   15420:	movzx  edx,BYTE PTR [r9]
   15424:	add    rax,0x4
   15428:	shr    dl,0x2
   1542b:	movzx  edx,dl
   1542e:	movzx  edx,BYTE PTR [r8+rdx*1]
   15433:	mov    BYTE PTR [rax-0x4],dl
   15436:	movzx  edx,BYTE PTR [r9]
   1543a:	shl    edx,0x4
   1543d:	and    edx,0x30
   15440:	movzx  edx,BYTE PTR [r8+rdx*1]
   15445:	mov    BYTE PTR [rax-0x3],dl
   15448:	mov    edx,0x3d3d
   1544d:	mov    WORD PTR [rax-0x2],dx
   15451:	mov    BYTE PTR [rax],0x0
   15454:	sub    rax,rdi
   15457:	ret    
   15458:	nop    DWORD PTR [rax+rax*1+0x0]
   15460:	mov    r9,rsi
   15463:	mov    rax,rdi
   15466:	jmp    153a9 <base64_encode+0xc9>
   1546b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000015470 <wget_base64_is_string>:
   15470:	endbr64 
   15474:	xor    r8d,r8d
   15477:	test   rdi,rdi
   1547a:	je     154b2 <wget_base64_is_string+0x42>
   1547c:	movzx  edx,BYTE PTR [rdi]
   1547f:	lea    rcx,[rip+0x35d7a]        # 4b200 <base64_2_bin>
   15486:	cmp    BYTE PTR [rcx+rdx*1],0x0
   1548a:	mov    rax,rdx
   1548d:	je     154a1 <wget_base64_is_string+0x31>
   1548f:	nop
   15490:	movzx  edx,BYTE PTR [rdi+0x1]
   15494:	add    rdi,0x1
   15498:	cmp    BYTE PTR [rcx+rdx*1],0x0
   1549c:	mov    rax,rdx
   1549f:	jne    15490 <wget_base64_is_string+0x20>
   154a1:	mov    r8d,0x1
   154a7:	test   al,al
   154a9:	je     154b2 <wget_base64_is_string+0x42>
   154ab:	xor    r8d,r8d
   154ae:	cmp    al,0x3d
   154b0:	je     154c0 <wget_base64_is_string+0x50>
   154b2:	mov    eax,r8d
   154b5:	ret    
   154b6:	cs nop WORD PTR [rax+rax*1+0x0]
   154c0:	cmp    BYTE PTR [rdi+0x1],0x0
   154c4:	setne  r8b
   154c8:	mov    eax,r8d
   154cb:	ret    
   154cc:	nop    DWORD PTR [rax+0x0]

00000000000154d0 <wget_base64_decode>:
   154d0:	endbr64 
   154d4:	mov    r9,rdi
   154d7:	mov    r10,rsi
   154da:	lea    rcx,[rip+0x35d1f]        # 4b200 <base64_2_bin>
   154e1:	mov    r8,rdx
   154e4:	jmp    15503 <wget_base64_decode+0x33>
   154e6:	cs nop WORD PTR [rax+rax*1+0x0]
   154f0:	movzx  eax,BYTE PTR [r10+r8*1-0x1]
   154f6:	lea    rdx,[r8-0x1]
   154fa:	cmp    BYTE PTR [rcx+rax*1],0x0
   154fe:	jne    15518 <wget_base64_decode+0x48>
   15500:	mov    r8,rdx
   15503:	test   r8,r8
   15506:	jne    154f0 <wget_base64_decode+0x20>
   15508:	mov    rax,r9
   1550b:	mov    BYTE PTR [r9],0x0
   1550f:	sub    rax,r9
   15512:	ret    
   15513:	nop    DWORD PTR [rax+rax*1+0x0]
   15518:	mov    r11d,r8d
   1551b:	push   rbx
   1551c:	and    r11d,0x3
   15520:	shr    r8,0x2
   15524:	je     1565d <wget_base64_decode+0x18d>
   1552a:	lea    rax,[r8+r8*2]
   1552e:	mov    rdx,r10
   15531:	mov    rsi,r9
   15534:	add    rax,r9
   15537:	nop    WORD PTR [rax+rax*1+0x0]
   15540:	movzx  edi,BYTE PTR [rdx]
   15543:	add    rsi,0x3
   15547:	add    rdx,0x4
   1554b:	movzx  ebx,BYTE PTR [rcx+rdi*1]
   1554f:	movzx  edi,BYTE PTR [rdx-0x3]
   15553:	movzx  edi,BYTE PTR [rcx+rdi*1]
   15557:	shl    ebx,0x2
   1555a:	shr    dil,0x4
   1555e:	or     edi,ebx
   15560:	mov    BYTE PTR [rsi-0x3],dil
   15564:	movzx  edi,BYTE PTR [rdx-0x3]
   15568:	movzx  ebx,BYTE PTR [rcx+rdi*1]
   1556c:	movzx  edi,BYTE PTR [rdx-0x2]
   15570:	movzx  edi,BYTE PTR [rcx+rdi*1]
   15574:	shl    ebx,0x4
   15577:	shr    dil,0x2
   1557b:	or     edi,ebx
   1557d:	mov    BYTE PTR [rsi-0x2],dil
   15581:	movzx  edi,BYTE PTR [rdx-0x2]
   15585:	movzx  ebx,BYTE PTR [rdx-0x1]
   15589:	movzx  edi,BYTE PTR [rcx+rdi*1]
   1558d:	shl    edi,0x6
   15590:	or     dil,BYTE PTR [rcx+rbx*1]
   15594:	mov    BYTE PTR [rsi-0x1],dil
   15598:	cmp    rsi,rax
   1559b:	jne    15540 <wget_base64_decode+0x70>
   1559d:	lea    r10,[r10+r8*4]
   155a1:	cmp    r11d,0x2
   155a5:	jne    155e0 <wget_base64_decode+0x110>
   155a7:	movzx  edx,BYTE PTR [r10]
   155ab:	movzx  esi,BYTE PTR [rcx+rdx*1]
   155af:	movzx  edx,BYTE PTR [r10+0x1]
   155b4:	movzx  edx,BYTE PTR [rcx+rdx*1]
   155b8:	shl    esi,0x2
   155bb:	shr    dl,0x4
   155be:	or     edx,esi
   155c0:	mov    BYTE PTR [rax],dl
   155c2:	movzx  edx,BYTE PTR [r10+0x1]
   155c7:	movzx  edx,BYTE PTR [rcx+rdx*1]
   155cb:	shl    edx,0x4
   155ce:	cmp    dl,0x1
   155d1:	mov    BYTE PTR [rax+0x1],dl
   155d4:	sbb    rax,0xfffffffffffffffe
   155d8:	mov    BYTE PTR [rax],0x0
   155db:	sub    rax,r9
   155de:	pop    rbx
   155df:	ret    
   155e0:	cmp    r11d,0x3
   155e4:	jne    15640 <wget_base64_decode+0x170>
   155e6:	movzx  edx,BYTE PTR [r10]
   155ea:	movzx  esi,BYTE PTR [rcx+rdx*1]
   155ee:	movzx  edx,BYTE PTR [r10+0x1]
   155f3:	movzx  edx,BYTE PTR [rcx+rdx*1]
   155f7:	shl    esi,0x2
   155fa:	shr    dl,0x4
   155fd:	or     edx,esi
   155ff:	mov    BYTE PTR [rax],dl
   15601:	movzx  edx,BYTE PTR [r10+0x1]
   15606:	movzx  esi,BYTE PTR [rcx+rdx*1]
   1560a:	movzx  edx,BYTE PTR [r10+0x2]
   1560f:	movzx  edx,BYTE PTR [rcx+rdx*1]
   15613:	shl    esi,0x4
   15616:	shr    dl,0x2
   15619:	or     edx,esi
   1561b:	mov    BYTE PTR [rax+0x1],dl
   1561e:	movzx  edx,BYTE PTR [r10+0x2]
   15623:	movzx  edx,BYTE PTR [rcx+rdx*1]
   15627:	shl    edx,0x6
   1562a:	cmp    dl,0x1
   1562d:	mov    BYTE PTR [rax+0x2],dl
   15630:	sbb    rax,0xfffffffffffffffd
   15634:	mov    BYTE PTR [rax],0x0
   15637:	sub    rax,r9
   1563a:	pop    rbx
   1563b:	ret    
   1563c:	nop    DWORD PTR [rax+0x0]
   15640:	cmp    r11d,0x1
   15644:	jne    155d8 <wget_base64_decode+0x108>
   15646:	movzx  edx,BYTE PTR [r10]
   1564a:	add    rax,0x1
   1564e:	movzx  edx,BYTE PTR [rcx+rdx*1]
   15652:	shl    edx,0x2
   15655:	mov    BYTE PTR [rax-0x1],dl
   15658:	jmp    155d8 <wget_base64_decode+0x108>
   1565d:	mov    rax,r9
   15660:	jmp    155a1 <wget_base64_decode+0xd1>
   15665:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000015670 <wget_base64_encode>:
   15670:	endbr64 
   15674:	xor    ecx,ecx
   15676:	jmp    152e0 <base64_encode>
   1567b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000015680 <wget_base64_urlencode>:
   15680:	endbr64 
   15684:	mov    ecx,0x1
   15689:	jmp    152e0 <base64_encode>
   1568e:	xchg   ax,ax

0000000000015690 <wget_base64_get_decoded_length>:
   15690:	endbr64 
   15694:	add    rdi,0x3
   15698:	shr    rdi,0x2
   1569c:	lea    rax,[rdi+rdi*2+0x1]
   156a1:	ret    
   156a2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   156ad:	nop    DWORD PTR [rax]

00000000000156b0 <wget_base64_decode_alloc>:
   156b0:	endbr64 
   156b4:	push   r13
   156b6:	mov    r13,rsi
   156b9:	push   r12
   156bb:	push   rbp
   156bc:	mov    rbp,rdi
   156bf:	mov    rdi,rsi
   156c2:	push   rbx
   156c3:	mov    rbx,rdx
   156c6:	sub    rsp,0x8
   156ca:	call   12290 <wget_base64_get_decoded_length@plt>
   156cf:	mov    rdi,rax
   156d2:	mov    rax,QWORD PTR [rip+0x608f7]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   156d9:	call   QWORD PTR [rax]
   156db:	mov    r12,rax
   156de:	test   rax,rax
   156e1:	je     156f9 <wget_base64_decode_alloc+0x49>
   156e3:	mov    rdx,r13
   156e6:	mov    rsi,rbp
   156e9:	mov    rdi,rax
   156ec:	call   111a0 <wget_base64_decode@plt>
   156f1:	test   rbx,rbx
   156f4:	je     156f9 <wget_base64_decode_alloc+0x49>
   156f6:	mov    QWORD PTR [rbx],rax
   156f9:	add    rsp,0x8
   156fd:	mov    rax,r12
   15700:	pop    rbx
   15701:	pop    rbp
   15702:	pop    r12
   15704:	pop    r13
   15706:	ret    
   15707:	nop    WORD PTR [rax+rax*1+0x0]

0000000000015710 <wget_base64_get_encoded_length>:
   15710:	endbr64 
   15714:	movabs rcx,0xaaaaaaaaaaaaaaab
   1571e:	lea    rdx,[rdi+0x2]
   15722:	mov    rax,rdx
   15725:	mul    rcx
   15728:	shr    rdx,1
   1572b:	lea    rax,[rdx*4+0x1]
   15733:	ret    
   15734:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1573f:	nop

0000000000015740 <wget_base64_encode_alloc>:
   15740:	endbr64 
   15744:	push   r13
   15746:	mov    r13,rsi
   15749:	push   r12
   1574b:	push   rbp
   1574c:	mov    rbp,rdi
   1574f:	mov    rdi,rsi
   15752:	call   106e0 <wget_base64_get_encoded_length@plt>
   15757:	mov    rdi,rax
   1575a:	mov    rax,QWORD PTR [rip+0x6086f]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   15761:	call   QWORD PTR [rax]
   15763:	mov    r12,rax
   15766:	test   rax,rax
   15769:	je     15779 <wget_base64_encode_alloc+0x39>
   1576b:	mov    rdx,r13
   1576e:	mov    rsi,rbp
   15771:	mov    rdi,rax
   15774:	call   10540 <wget_base64_encode@plt>
   15779:	mov    rax,r12
   1577c:	pop    rbp
   1577d:	pop    r12
   1577f:	pop    r13
   15781:	ret    
   15782:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1578d:	nop    DWORD PTR [rax]

0000000000015790 <wget_base64_encode_vprintf_alloc>:
   15790:	endbr64 
   15794:	push   r12
   15796:	mov    r8,rdi
   15799:	mov    rdx,rsi
   1579c:	mov    rsi,r8
   1579f:	sub    rsp,0x10
   157a3:	mov    rax,QWORD PTR fs:0x28
   157ac:	mov    QWORD PTR [rsp+0x8],rax
   157b1:	xor    eax,eax
   157b3:	mov    rdi,rsp
   157b6:	mov    QWORD PTR [rsp],0x0
   157be:	call   11aa0 <wget_vasprintf@plt>
   157c3:	mov    r12,QWORD PTR [rsp]
   157c7:	test   r12,r12
   157ca:	je     157ec <wget_base64_encode_vprintf_alloc+0x5c>
   157cc:	mov    rdi,r12
   157cf:	mov    rsi,rax
   157d2:	call   11200 <wget_base64_encode_alloc@plt>
   157d7:	mov    rdi,QWORD PTR [rsp]
   157db:	mov    r12,rax
   157de:	test   rdi,rdi
   157e1:	je     157ec <wget_base64_encode_vprintf_alloc+0x5c>
   157e3:	mov    rax,QWORD PTR [rip+0x607fe]        # 75fe8 <wget_free@@Base-0x1328>
   157ea:	call   QWORD PTR [rax]
   157ec:	mov    rax,QWORD PTR [rsp+0x8]
   157f1:	sub    rax,QWORD PTR fs:0x28
   157fa:	jne    15806 <wget_base64_encode_vprintf_alloc+0x76>
   157fc:	add    rsp,0x10
   15800:	mov    rax,r12
   15803:	pop    r12
   15805:	ret    
   15806:	call   11760 <__stack_chk_fail@plt>
   1580b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000015810 <wget_base64_encode_printf_alloc>:
   15810:	endbr64 
   15814:	sub    rsp,0xd8
   1581b:	mov    QWORD PTR [rsp+0x28],rsi
   15820:	mov    QWORD PTR [rsp+0x30],rdx
   15825:	mov    QWORD PTR [rsp+0x38],rcx
   1582a:	mov    QWORD PTR [rsp+0x40],r8
   1582f:	mov    QWORD PTR [rsp+0x48],r9
   15834:	test   al,al
   15836:	je     1586f <wget_base64_encode_printf_alloc+0x5f>
   15838:	movaps XMMWORD PTR [rsp+0x50],xmm0
   1583d:	movaps XMMWORD PTR [rsp+0x60],xmm1
   15842:	movaps XMMWORD PTR [rsp+0x70],xmm2
   15847:	movaps XMMWORD PTR [rsp+0x80],xmm3
   1584f:	movaps XMMWORD PTR [rsp+0x90],xmm4
   15857:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   1585f:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   15867:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   1586f:	mov    rax,QWORD PTR fs:0x28
   15878:	mov    QWORD PTR [rsp+0x18],rax
   1587d:	xor    eax,eax
   1587f:	lea    rax,[rsp+0xe0]
   15887:	mov    rsi,rsp
   1588a:	mov    DWORD PTR [rsp],0x8
   15891:	mov    QWORD PTR [rsp+0x8],rax
   15896:	lea    rax,[rsp+0x20]
   1589b:	mov    DWORD PTR [rsp+0x4],0x30
   158a3:	mov    QWORD PTR [rsp+0x10],rax
   158a8:	call   110b0 <wget_base64_encode_vprintf_alloc@plt>
   158ad:	mov    rdx,QWORD PTR [rsp+0x18]
   158b2:	sub    rdx,QWORD PTR fs:0x28
   158bb:	jne    158c5 <wget_base64_encode_printf_alloc+0xb5>
   158bd:	add    rsp,0xd8
   158c4:	ret    
   158c5:	call   11760 <__stack_chk_fail@plt>
   158ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000000158d0 <reset_color>:
   158d0:	endbr64 
   158d4:	push   rbx
   158d5:	mov    rbx,QWORD PTR [rip+0x6065c]        # 75f38 <stdout@GLIBC_2.2.5>
   158dc:	mov    rdi,QWORD PTR [rbx]
   158df:	call   11650 <fileno@plt>
   158e4:	mov    edi,eax
   158e6:	call   12350 <isatty@plt>
   158eb:	test   eax,eax
   158ed:	jne    15900 <reset_color+0x30>
   158ef:	mov    rdi,QWORD PTR [rbx]
   158f2:	pop    rbx
   158f3:	jmp    40840 <rpl_fflush>
   158f8:	nop    DWORD PTR [rax+rax*1+0x0]
   15900:	mov    rcx,QWORD PTR [rbx]
   15903:	mov    edx,0x3
   15908:	mov    esi,0x1
   1590d:	lea    rdi,[rip+0x3577b]        # 4b08f <_fini+0x69b>
   15914:	call   12730 <fwrite@plt>
   15919:	mov    rdi,QWORD PTR [rbx]
   1591c:	pop    rbx
   1591d:	jmp    40840 <rpl_fflush>
   15922:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1592d:	nop    DWORD PTR [rax]

0000000000015930 <wget_console_set_fg_color>:
   15930:	endbr64 
   15934:	ret    
   15935:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000015940 <wget_console_reset_fg_color>:
   15940:	endbr64 
   15944:	xor    edi,edi
   15946:	jmp    113f0 <wget_console_set_fg_color@plt>
   1594b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000015950 <wget_console_init>:
   15950:	endbr64 
   15954:	sub    rsp,0x8
   15958:	lea    rdi,[rip+0xffffffffffffff71]        # 158d0 <reset_color>
   1595f:	call   4a9e0 <atexit>
   15964:	xor    eax,eax
   15966:	add    rsp,0x8
   1596a:	ret    
   1596b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000015970 <wget_console_deinit>:
   15970:	endbr64 
   15974:	sub    rsp,0x8
   15978:	call   158d0 <reset_color>
   1597d:	xor    eax,eax
   1597f:	add    rsp,0x8
   15983:	ret    
   15984:	cs nop WORD PTR [rax+rax*1+0x0]
   1598e:	xchg   ax,ax

0000000000015990 <compare_cookie2>:
   15990:	endbr64 
   15994:	push   r12
   15996:	push   rbp
   15997:	mov    rbp,rdi
   1599a:	push   rbx
   1599b:	mov    rdi,QWORD PTR [rdi+0x18]
   1599f:	mov    rbx,rsi
   159a2:	call   10ab0 <strlen@plt>
   159a7:	mov    rdi,QWORD PTR [rbx+0x18]
   159ab:	mov    r12,rax
   159ae:	call   10ab0 <strlen@plt>
   159b3:	mov    r8,rax
   159b6:	mov    eax,0x1
   159bb:	cmp    r12,r8
   159be:	jb     159d5 <compare_cookie2+0x45>
   159c0:	mov    eax,0xffffffff
   159c5:	ja     159d5 <compare_cookie2+0x45>
   159c7:	xor    edx,edx
   159c9:	mov    ecx,DWORD PTR [rbx+0x40]
   159cc:	cmp    DWORD PTR [rbp+0x40],ecx
   159cf:	seta   dl
   159d2:	cmovae eax,edx
   159d5:	pop    rbx
   159d6:	pop    rbp
   159d7:	pop    r12
   159d9:	ret    
   159da:	nop    WORD PTR [rax+rax*1+0x0]

00000000000159e0 <compare_cookie>:
   159e0:	endbr64 
   159e4:	push   rbp
   159e5:	mov    rbp,rsi
   159e8:	push   rbx
   159e9:	mov    rbx,rdi
   159ec:	sub    rsp,0x8
   159f0:	mov    rsi,QWORD PTR [rsi+0x10]
   159f4:	mov    rdi,QWORD PTR [rdi+0x10]
   159f8:	call   103f0 <wget_strcmp@plt>
   159fd:	test   eax,eax
   159ff:	jne    15a28 <compare_cookie+0x48>
   15a01:	mov    rsi,QWORD PTR [rbp+0x0]
   15a05:	mov    rdi,QWORD PTR [rbx]
   15a08:	call   103f0 <wget_strcmp@plt>
   15a0d:	test   eax,eax
   15a0f:	jne    15a28 <compare_cookie+0x48>
   15a11:	mov    rsi,QWORD PTR [rbp+0x18]
   15a15:	mov    rdi,QWORD PTR [rbx+0x18]
   15a19:	add    rsp,0x8
   15a1d:	pop    rbx
   15a1e:	pop    rbp
   15a1f:	jmp    103f0 <wget_strcmp@plt>
   15a24:	nop    DWORD PTR [rax+0x0]
   15a28:	add    rsp,0x8
   15a2c:	pop    rbx
   15a2d:	pop    rbp
   15a2e:	ret    
   15a2f:	nop

0000000000015a30 <cookie_db_save>:
   15a30:	endbr64 
   15a34:	push   r15
   15a36:	push   r14
   15a38:	push   r13
   15a3a:	push   r12
   15a3c:	mov    r12,rdi
   15a3f:	push   rbp
   15a40:	mov    rbp,rsi
   15a43:	push   rbx
   15a44:	sub    rsp,0x18
   15a48:	mov    rdi,QWORD PTR [rdi]
   15a4b:	call   10e90 <wget_vector_size@plt>
   15a50:	test   eax,eax
   15a52:	jg     15a68 <cookie_db_save+0x38>
   15a54:	add    rsp,0x18
   15a58:	xor    eax,eax
   15a5a:	pop    rbx
   15a5b:	pop    rbp
   15a5c:	pop    r12
   15a5e:	pop    r13
   15a60:	pop    r14
   15a62:	pop    r15
   15a64:	ret    
   15a65:	nop    DWORD PTR [rax]
   15a68:	xor    edi,edi
   15a6a:	xor    ebx,ebx
   15a6c:	lea    r15,[rip+0x3588d]        # 4b300 <base64_2_bin+0x100>
   15a73:	call   11480 <time@plt>
   15a78:	mov    rcx,rbp
   15a7b:	mov    edx,0x13
   15a80:	mov    esi,0x1
   15a85:	lea    rdi,[rip+0x3588a]        # 4b316 <base64_2_bin+0x116>
   15a8c:	mov    QWORD PTR [rsp+0x8],rax
   15a91:	lea    r14,[rip+0x3586d]        # 4b305 <base64_2_bin+0x105>
   15a98:	call   12730 <fwrite@plt>
   15a9d:	mov    rcx,rbp
   15aa0:	mov    edx,0x35
   15aa5:	mov    esi,0x1
   15aaa:	lea    rdi,[rip+0x35977]        # 4b428 <base64_2_bin+0x228>
   15ab1:	call   12730 <fwrite@plt>
   15ab6:	mov    r13,QWORD PTR [r12]
   15aba:	jmp    15b4b <cookie_db_save+0x11b>
   15abf:	nop
   15ac0:	mov    rcx,QWORD PTR [rax+0x20]
   15ac4:	cmp    QWORD PTR [rsp+0x8],rcx
   15ac9:	jge    15b48 <cookie_db_save+0x118>
   15acb:	test   dl,0x10
   15ace:	mov    rdi,r14
   15ad1:	mov    r9,r15
   15ad4:	mov    rsi,QWORD PTR [rax+0x18]
   15ad8:	cmovne rdi,r15
   15adc:	test   dl,0x8
   15adf:	lea    r13,[rip+0x3765e]        # 4d144 <__func__.4+0x24>
   15ae6:	mov    r11,QWORD PTR [rax]
   15ae9:	cmovne r9,r14
   15aed:	lea    r10,[rip+0x36d76]        # 4c86a <maybe+0x5ca>
   15af4:	test   dl,0x1
   15af7:	mov    r8,QWORD PTR [rax+0x10]
   15afb:	cmovne r10,r13
   15aff:	lea    r13,[rip+0x36d64]        # 4c86a <maybe+0x5ca>
   15b06:	and    edx,0x20
   15b09:	lea    rdx,[rip+0x357fb]        # 4b30b <base64_2_bin+0x10b>
   15b10:	cmove  rdx,r13
   15b14:	sub    rsp,0x8
   15b18:	push   QWORD PTR [rax+0x8]
   15b1b:	xor    eax,eax
   15b1d:	push   r11
   15b1f:	push   rcx
   15b20:	mov    rcx,r10
   15b23:	push   rdi
   15b24:	mov    rdi,rbp
   15b27:	push   rsi
   15b28:	lea    rsi,[rip+0x357fb]        # 4b32a <base64_2_bin+0x12a>
   15b2f:	call   108e0 <wget_fprintf@plt>
   15b34:	add    rsp,0x30
   15b38:	mov    rdi,rbp
   15b3b:	call   12580 <ferror@plt>
   15b40:	test   eax,eax
   15b42:	jne    15b88 <cookie_db_save+0x158>
   15b44:	mov    r13,QWORD PTR [r12]
   15b48:	add    ebx,0x1
   15b4b:	mov    rdi,r13
   15b4e:	call   10e90 <wget_vector_size@plt>
   15b53:	cmp    ebx,eax
   15b55:	jge    15a54 <cookie_db_save+0x24>
   15b5b:	mov    esi,ebx
   15b5d:	mov    rdi,r13
   15b60:	call   10c00 <wget_vector_get@plt>
   15b65:	movzx  edx,BYTE PTR [rax+0x44]
   15b69:	test   dl,0x4
   15b6c:	jne    15ac0 <cookie_db_save+0x90>
   15b72:	test   BYTE PTR [r12+0x14],0x1
   15b78:	je     15b48 <cookie_db_save+0x118>
   15b7a:	mov    rcx,QWORD PTR [rax+0x20]
   15b7e:	jmp    15acb <cookie_db_save+0x9b>
   15b83:	nop    DWORD PTR [rax+rax*1+0x0]
   15b88:	add    rsp,0x18
   15b8c:	mov    eax,0xffffffff
   15b91:	pop    rbx
   15b92:	pop    rbp
   15b93:	pop    r12
   15b95:	pop    r13
   15b97:	pop    r14
   15b99:	pop    r15
   15b9b:	ret    
   15b9c:	nop    DWORD PTR [rax+0x0]

0000000000015ba0 <wget_cookie_db_load_psl>:
   15ba0:	endbr64 
   15ba4:	mov    eax,0xffffffff
   15ba9:	ret    
   15baa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000015bb0 <wget_cookie_check_psl>:
   15bb0:	endbr64 
   15bb4:	xor    eax,eax
   15bb6:	ret    
   15bb7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000015bc0 <wget_cookie_store_cookie>:
   15bc0:	endbr64 
   15bc4:	push   r13
   15bc6:	push   r12
   15bc8:	push   rbp
   15bc9:	push   rbx
   15bca:	sub    rsp,0x18
   15bce:	mov    QWORD PTR [rsp+0x8],rsi
   15bd3:	test   rsi,rsi
   15bd6:	je     15d26 <wget_cookie_store_cookie+0x166>
   15bdc:	mov    rbx,rdi
   15bdf:	test   rdi,rdi
   15be2:	je     15cea <wget_cookie_store_cookie+0x12a>
   15be8:	mov    rdx,QWORD PTR [rsi+0x8]
   15bec:	mov    rsi,QWORD PTR [rsi]
   15bef:	lea    rdi,[rip+0x35750]        # 4b346 <base64_2_bin+0x146>
   15bf6:	xor    eax,eax
   15bf8:	call   114b0 <wget_debug_printf@plt>
   15bfd:	mov    rsi,QWORD PTR [rsp+0x8]
   15c02:	test   BYTE PTR [rsi+0x44],0x2
   15c06:	je     15d00 <wget_cookie_store_cookie+0x140>
   15c0c:	mov    rdi,rbx
   15c0f:	call   11040 <wget_cookie_check_psl@plt>
   15c14:	mov    r12d,eax
   15c17:	test   eax,eax
   15c19:	jne    15cd0 <wget_cookie_store_cookie+0x110>
   15c1f:	mov    rdi,QWORD PTR [rbx+0x8]
   15c23:	call   12040 <wget_thread_mutex_lock@plt>
   15c28:	mov    rsi,QWORD PTR [rsp+0x8]
   15c2d:	mov    rdi,QWORD PTR [rbx]
   15c30:	call   12000 <wget_vector_find@plt>
   15c35:	mov    rdi,QWORD PTR [rbx]
   15c38:	mov    esi,eax
   15c3a:	mov    r13d,eax
   15c3d:	call   10c00 <wget_vector_get@plt>
   15c42:	mov    rbp,rax
   15c45:	mov    rax,QWORD PTR [rsp+0x8]
   15c4a:	mov    rdx,QWORD PTR [rax+0x8]
   15c4e:	mov    rsi,QWORD PTR [rax]
   15c51:	test   rbp,rbp
   15c54:	je     15ca0 <wget_cookie_store_cookie+0xe0>
   15c56:	lea    rdi,[rip+0x356fb]        # 4b358 <base64_2_bin+0x158>
   15c5d:	xor    eax,eax
   15c5f:	call   114b0 <wget_debug_printf@plt>
   15c64:	mov    rax,QWORD PTR [rbp+0x38]
   15c68:	mov    rdi,QWORD PTR [rbx]
   15c6b:	mov    edx,r13d
   15c6e:	mov    rsi,QWORD PTR [rsp+0x8]
   15c73:	mov    QWORD PTR [rsi+0x38],rax
   15c77:	mov    eax,DWORD PTR [rbp+0x40]
   15c7a:	mov    DWORD PTR [rsi+0x40],eax
   15c7d:	call   12800 <wget_vector_replace@plt>
   15c82:	mov    rdi,QWORD PTR [rbx+0x8]
   15c86:	call   117c0 <wget_thread_mutex_unlock@plt>
   15c8b:	add    rsp,0x18
   15c8f:	mov    eax,r12d
   15c92:	pop    rbx
   15c93:	pop    rbp
   15c94:	pop    r12
   15c96:	pop    r13
   15c98:	ret    
   15c99:	nop    DWORD PTR [rax+0x0]
   15ca0:	xor    eax,eax
   15ca2:	lea    rdi,[rip+0x356c9]        # 4b372 <base64_2_bin+0x172>
   15ca9:	call   114b0 <wget_debug_printf@plt>
   15cae:	mov    eax,DWORD PTR [rbx+0x10]
   15cb1:	mov    rsi,QWORD PTR [rsp+0x8]
   15cb6:	mov    rdi,QWORD PTR [rbx]
   15cb9:	add    eax,0x1
   15cbc:	mov    DWORD PTR [rbx+0x10],eax
   15cbf:	mov    DWORD PTR [rsi+0x40],eax
   15cc2:	call   10aa0 <wget_vector_insert_sorted@plt>
   15cc7:	jmp    15c82 <wget_cookie_store_cookie+0xc2>
   15cc9:	nop    DWORD PTR [rax+0x0]
   15cd0:	mov    rax,QWORD PTR [rsp+0x8]
   15cd5:	lea    rdi,[rip+0x357b4]        # 4b490 <base64_2_bin+0x290>
   15cdc:	mov    rdx,QWORD PTR [rax+0x10]
   15ce0:	mov    rsi,QWORD PTR [rax]
   15ce3:	xor    eax,eax
   15ce5:	call   114b0 <wget_debug_printf@plt>
   15cea:	lea    rdi,[rsp+0x8]
   15cef:	mov    r12d,0xfffffffd
   15cf5:	call   123a0 <wget_cookie_free@plt>
   15cfa:	jmp    15c8b <wget_cookie_store_cookie+0xcb>
   15cfc:	nop    DWORD PTR [rax+0x0]
   15d00:	mov    rsi,QWORD PTR [rsi]
   15d03:	lea    rdi,[rip+0x35756]        # 4b460 <base64_2_bin+0x260>
   15d0a:	xor    eax,eax
   15d0c:	mov    r12d,0xfffffffd
   15d12:	call   114b0 <wget_debug_printf@plt>
   15d17:	lea    rdi,[rsp+0x8]
   15d1c:	call   123a0 <wget_cookie_free@plt>
   15d21:	jmp    15c8b <wget_cookie_store_cookie+0xcb>
   15d26:	mov    r12d,0xfffffffd
   15d2c:	jmp    15c8b <wget_cookie_store_cookie+0xcb>
   15d31:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   15d3c:	nop    DWORD PTR [rax+0x0]

0000000000015d40 <cookie_db_load>:
   15d40:	endbr64 
   15d44:	push   r15
   15d46:	push   r14
   15d48:	push   r13
   15d4a:	push   r12
   15d4c:	push   rbp
   15d4d:	mov    rbp,rsi
   15d50:	push   rbx
   15d51:	sub    rsp,0x88
   15d58:	mov    QWORD PTR [rsp+0x8],rdi
   15d5d:	xor    edi,edi
   15d5f:	lea    r12,[rsp+0x28]
   15d64:	lea    rbx,[rsp+0x20]
   15d69:	mov    rax,QWORD PTR fs:0x28
   15d72:	mov    QWORD PTR [rsp+0x78],rax
   15d77:	xor    eax,eax
   15d79:	mov    QWORD PTR [rsp+0x20],0x0
   15d82:	mov    QWORD PTR [rsp+0x28],0x0
   15d8b:	call   11480 <time@plt>
   15d90:	mov    QWORD PTR [rsp+0x18],rax
   15d95:	lea    rax,[rsp+0x30]
   15d9a:	mov    rdi,rax
   15d9d:	mov    QWORD PTR [rsp],rax
   15da1:	call   11710 <wget_cookie_init@plt>
   15da6:	mov    DWORD PTR [rsp+0x14],0x0
   15dae:	xchg   ax,ax
   15db0:	mov    rdx,rbp
   15db3:	mov    rsi,r12
   15db6:	mov    rdi,rbx
   15db9:	call   10db0 <wget_getline@plt>
   15dbe:	mov    r15,rax
   15dc1:	test   rax,rax
   15dc4:	js     16180 <cookie_db_load+0x440>
   15dca:	call   116c0 <__ctype_b_loc@plt>
   15dcf:	mov    r14,QWORD PTR [rsp+0x20]
   15dd4:	mov    rsi,QWORD PTR [rax]
   15dd7:	mov    r13,r14
   15dda:	jmp    15de4 <cookie_db_load+0xa4>
   15ddc:	nop    DWORD PTR [rax+0x0]
   15de0:	add    r13,0x1
   15de4:	movsx  rdx,BYTE PTR [r13+0x0]
   15de9:	test   BYTE PTR [rsi+rdx*2+0x1],0x20
   15dee:	jne    15de0 <cookie_db_load+0xa0>
   15df0:	test   dl,dl
   15df2:	je     15db0 <cookie_db_load+0x70>
   15df4:	cmp    dl,0x23
   15df7:	jne    16090 <cookie_db_load+0x350>
   15dfd:	mov    edx,0xa
   15e02:	mov    rdi,r13
   15e05:	lea    rsi,[rip+0x354ff]        # 4b30b <base64_2_bin+0x10b>
   15e0c:	add    r13,0xa
   15e10:	call   10b10 <strncmp@plt>
   15e15:	mov    edx,0x1
   15e1a:	test   eax,eax
   15e1c:	jne    15db0 <cookie_db_load+0x70>
   15e1e:	movzx  eax,BYTE PTR [rsp+0x74]
   15e23:	shl    edx,0x5
   15e26:	and    eax,0xffffffdf
   15e29:	or     eax,edx
   15e2b:	mov    BYTE PTR [rsp+0x74],al
   15e2f:	test   r15,r15
   15e32:	jne    15e50 <cookie_db_load+0x110>
   15e34:	jmp    15e5d <cookie_db_load+0x11d>
   15e36:	cs nop WORD PTR [rax+rax*1+0x0]
   15e40:	sub    r15,0x1
   15e44:	mov    BYTE PTR [r14+r15*1],0x0
   15e49:	je     15e5d <cookie_db_load+0x11d>
   15e4b:	mov    r14,QWORD PTR [rsp+0x20]
   15e50:	movzx  eax,BYTE PTR [r14+r15*1]
   15e55:	cmp    al,0xa
   15e57:	je     15e40 <cookie_db_load+0x100>
   15e59:	cmp    al,0xd
   15e5b:	je     15e40 <cookie_db_load+0x100>
   15e5d:	movzx  edx,BYTE PTR [r13+0x0]
   15e62:	test   dl,dl
   15e64:	je     161da <cookie_db_load+0x49a>
   15e6a:	mov    r15,r13
   15e6d:	cmp    dl,0x9
   15e70:	je     161da <cookie_db_load+0x49a>
   15e76:	cs nop WORD PTR [rax+rax*1+0x0]
   15e80:	movzx  eax,BYTE PTR [r15+0x1]
   15e85:	add    r15,0x1
   15e89:	test   al,al
   15e8b:	je     15e91 <cookie_db_load+0x151>
   15e8d:	cmp    al,0x9
   15e8f:	jne    15e80 <cookie_db_load+0x140>
   15e91:	cmp    dl,0x2e
   15e94:	jne    15e9f <cookie_db_load+0x15f>
   15e96:	or     BYTE PTR [rsp+0x74],0x1
   15e9b:	add    r13,0x1
   15e9f:	mov    rsi,r15
   15ea2:	mov    rdi,r13
   15ea5:	sub    rsi,r13
   15ea8:	call   126b0 <wget_strmemdup@plt>
   15ead:	mov    rdi,r15
   15eb0:	mov    QWORD PTR [rsp+0x40],rax
   15eb5:	cmp    BYTE PTR [r15],0x0
   15eb9:	je     15ee1 <cookie_db_load+0x1a1>
   15ebb:	movzx  eax,BYTE PTR [r15+0x1]
   15ec0:	lea    rdi,[r15+0x1]
   15ec4:	mov    r15,rdi
   15ec7:	cmp    al,0x9
   15ec9:	je     15ee1 <cookie_db_load+0x1a1>
   15ecb:	test   al,al
   15ecd:	je     15ee1 <cookie_db_load+0x1a1>
   15ecf:	nop
   15ed0:	movzx  eax,BYTE PTR [r15+0x1]
   15ed5:	add    r15,0x1
   15ed9:	test   al,al
   15edb:	je     15ee1 <cookie_db_load+0x1a1>
   15edd:	cmp    al,0x9
   15edf:	jne    15ed0 <cookie_db_load+0x190>
   15ee1:	mov    edx,0x4
   15ee6:	lea    rsi,[rip+0x35413]        # 4b300 <base64_2_bin+0x100>
   15eed:	call   11c40 <wget_strncasecmp_ascii@plt>
   15ef2:	test   eax,eax
   15ef4:	movzx  eax,BYTE PTR [rsp+0x74]
   15ef9:	setne  dl
   15efc:	shl    edx,0x3
   15eff:	and    eax,0xfffffff7
   15f02:	or     eax,edx
   15f04:	mov    BYTE PTR [rsp+0x74],al
   15f08:	cmp    BYTE PTR [r15],0x0
   15f0c:	jne    16020 <cookie_db_load+0x2e0>
   15f12:	mov    r13,r15
   15f15:	mov    esi,0x1
   15f1a:	lea    rdi,[rip+0x3721f]        # 4d140 <__func__.4+0x20>
   15f21:	call   126b0 <wget_strmemdup@plt>
   15f26:	mov    QWORD PTR [rsp+0x48],rax
   15f2b:	cmp    BYTE PTR [r13+0x0],0x0
   15f30:	mov    rdi,r13
   15f33:	je     15f61 <cookie_db_load+0x221>
   15f35:	movzx  eax,BYTE PTR [r13+0x1]
   15f3a:	lea    rdi,[r13+0x1]
   15f3e:	mov    r13,rdi
   15f41:	cmp    al,0x9
   15f43:	je     15f61 <cookie_db_load+0x221>
   15f45:	test   al,al
   15f47:	je     15f61 <cookie_db_load+0x221>
   15f49:	nop    DWORD PTR [rax+0x0]
   15f50:	movzx  eax,BYTE PTR [r13+0x1]
   15f55:	add    r13,0x1
   15f59:	test   al,al
   15f5b:	je     15f61 <cookie_db_load+0x221>
   15f5d:	cmp    al,0x9
   15f5f:	jne    15f50 <cookie_db_load+0x210>
   15f61:	mov    edx,0x4
   15f66:	lea    rsi,[rip+0x35393]        # 4b300 <base64_2_bin+0x100>
   15f6d:	call   11c40 <wget_strncasecmp_ascii@plt>
   15f72:	mov    rdi,r13
   15f75:	test   eax,eax
   15f77:	movzx  eax,BYTE PTR [rsp+0x74]
   15f7c:	sete   dl
   15f7f:	shl    edx,0x4
   15f82:	and    eax,0xffffffef
   15f85:	or     eax,edx
   15f87:	mov    BYTE PTR [rsp+0x74],al
   15f8b:	cmp    BYTE PTR [r13+0x0],0x0
   15f90:	je     15fb9 <cookie_db_load+0x279>
   15f92:	movzx  eax,BYTE PTR [r13+0x1]
   15f97:	lea    rdi,[r13+0x1]
   15f9b:	mov    r13,rdi
   15f9e:	test   al,al
   15fa0:	jne    15fb5 <cookie_db_load+0x275>
   15fa2:	jmp    15fb9 <cookie_db_load+0x279>
   15fa4:	nop    DWORD PTR [rax+0x0]
   15fa8:	movzx  eax,BYTE PTR [r13+0x1]
   15fad:	add    r13,0x1
   15fb1:	test   al,al
   15fb3:	je     15fb9 <cookie_db_load+0x279>
   15fb5:	cmp    al,0x9
   15fb7:	jne    15fa8 <cookie_db_load+0x268>
   15fb9:	mov    edx,0xa
   15fbe:	xor    esi,esi
   15fc0:	call   10600 <strtoll@plt>
   15fc5:	mov    QWORD PTR [rsp+0x50],rax
   15fca:	test   rax,rax
   15fcd:	je     16070 <cookie_db_load+0x330>
   15fd3:	cmp    QWORD PTR [rsp+0x18],rax
   15fd8:	jge    1607f <cookie_db_load+0x33f>
   15fde:	cmp    BYTE PTR [r13+0x0],0x0
   15fe3:	jne    160a0 <cookie_db_load+0x360>
   15fe9:	mov    r13,QWORD PTR [rsp+0x20]
   15fee:	mov    edx,0x5
   15ff3:	xor    edi,edi
   15ff5:	lea    rsi,[rip+0x3538e]        # 4b38a <base64_2_bin+0x18a>
   15ffc:	call   10f90 <dcgettext@plt>
   16001:	mov    rdi,rax
   16004:	mov    rsi,r13
   16007:	xor    eax,eax
   16009:	call   11ea0 <wget_error_printf@plt>
   1600e:	mov    rdi,QWORD PTR [rsp]
   16012:	call   12180 <wget_cookie_deinit@plt>
   16017:	jmp    15db0 <cookie_db_load+0x70>
   1601c:	nop    DWORD PTR [rax+0x0]
   16020:	movzx  eax,BYTE PTR [r15+0x1]
   16025:	lea    rdi,[r15+0x1]
   16029:	cmp    al,0x9
   1602b:	je     161ef <cookie_db_load+0x4af>
   16031:	test   al,al
   16033:	je     161ef <cookie_db_load+0x4af>
   16039:	mov    r13,rdi
   1603c:	nop    DWORD PTR [rax+0x0]
   16040:	mov    rsi,r13
   16043:	movzx  eax,BYTE PTR [r13+0x1]
   16048:	add    r13,0x1
   1604c:	test   al,al
   1604e:	je     16054 <cookie_db_load+0x314>
   16050:	cmp    al,0x9
   16052:	jne    16040 <cookie_db_load+0x300>
   16054:	cmp    rdi,r13
   16057:	je     15f15 <cookie_db_load+0x1d5>
   1605d:	sub    rsi,r15
   16060:	call   126b0 <wget_strmemdup@plt>
   16065:	jmp    15f26 <cookie_db_load+0x1e6>
   1606a:	nop    WORD PTR [rax+rax*1+0x0]
   16070:	mov    rax,QWORD PTR [rsp+0x8]
   16075:	test   BYTE PTR [rax+0x14],0x1
   16079:	jne    15fde <cookie_db_load+0x29e>
   1607f:	mov    rdi,QWORD PTR [rsp]
   16083:	call   12180 <wget_cookie_deinit@plt>
   16088:	jmp    15db0 <cookie_db_load+0x70>
   1608d:	nop    DWORD PTR [rax]
   16090:	xor    edx,edx
   16092:	jmp    15e1e <cookie_db_load+0xde>
   16097:	nop    WORD PTR [rax+rax*1+0x0]
   160a0:	movzx  eax,BYTE PTR [r13+0x1]
   160a5:	lea    rdi,[r13+0x1]
   160a9:	test   al,al
   160ab:	je     15fe9 <cookie_db_load+0x2a9>
   160b1:	cmp    al,0x9
   160b3:	je     15fe9 <cookie_db_load+0x2a9>
   160b9:	mov    r15,rdi
   160bc:	jmp    160c4 <cookie_db_load+0x384>
   160be:	xchg   ax,ax
   160c0:	cmp    al,0x9
   160c2:	je     160d4 <cookie_db_load+0x394>
   160c4:	mov    r14,r15
   160c7:	movzx  eax,BYTE PTR [r15+0x1]
   160cc:	add    r15,0x1
   160d0:	test   al,al
   160d2:	jne    160c0 <cookie_db_load+0x380>
   160d4:	cmp    rdi,r15
   160d7:	je     15fe9 <cookie_db_load+0x2a9>
   160dd:	mov    rsi,r14
   160e0:	sub    rsi,r13
   160e3:	call   126b0 <wget_strmemdup@plt>
   160e8:	xor    esi,esi
   160ea:	mov    QWORD PTR [rsp+0x30],rax
   160ef:	cmp    BYTE PTR [r15],0x0
   160f3:	je     1611f <cookie_db_load+0x3df>
   160f5:	cmp    BYTE PTR [r15+0x1],0x0
   160fa:	lea    rdx,[r14+0x2]
   160fe:	je     161e7 <cookie_db_load+0x4a7>
   16104:	mov    rsi,rdx
   16107:	nop    WORD PTR [rax+rax*1+0x0]
   16110:	add    rsi,0x1
   16114:	cmp    BYTE PTR [rsi],0x0
   16117:	jne    16110 <cookie_db_load+0x3d0>
   16119:	sub    rsi,rdx
   1611c:	mov    r15,rdx
   1611f:	mov    rdi,r15
   16122:	call   126b0 <wget_strmemdup@plt>
   16127:	mov    r14,QWORD PTR [rsp]
   1612b:	xor    edi,edi
   1612d:	mov    QWORD PTR [rsp+0x38],rax
   16132:	mov    rsi,r14
   16135:	call   11b70 <wget_cookie_normalize@plt>
   1613a:	test   eax,eax
   1613c:	jne    1607f <cookie_db_load+0x33f>
   16142:	mov    rdi,QWORD PTR [rsp+0x8]
   16147:	mov    rsi,r14
   1614a:	call   11040 <wget_cookie_check_psl@plt>
   1614f:	test   eax,eax
   16151:	jne    1607f <cookie_db_load+0x33f>
   16157:	mov    rdi,QWORD PTR [rsp]
   1615b:	mov    esi,0x48
   16160:	add    DWORD PTR [rsp+0x14],0x1
   16165:	call   10dc0 <wget_memdup@plt>
   1616a:	mov    rdi,QWORD PTR [rsp+0x8]
   1616f:	mov    rsi,rax
   16172:	call   105c0 <wget_cookie_store_cookie@plt>
   16177:	jmp    15db0 <cookie_db_load+0x70>
   1617c:	nop    DWORD PTR [rax+0x0]
   16180:	mov    rdi,QWORD PTR [rsp+0x20]
   16185:	test   rdi,rdi
   16188:	je     1619c <cookie_db_load+0x45c>
   1618a:	mov    rax,QWORD PTR [rip+0x5fe57]        # 75fe8 <wget_free@@Base-0x1328>
   16191:	call   QWORD PTR [rax]
   16193:	mov    QWORD PTR [rsp+0x20],0x0
   1619c:	mov    rdi,rbp
   1619f:	call   12580 <ferror@plt>
   161a4:	test   eax,eax
   161a6:	mov    eax,0xffffffff
   161ab:	cmove  eax,DWORD PTR [rsp+0x14]
   161b0:	mov    DWORD PTR [rsp+0x14],eax
   161b4:	mov    rax,QWORD PTR [rsp+0x78]
   161b9:	sub    rax,QWORD PTR fs:0x28
   161c2:	jne    161e2 <cookie_db_load+0x4a2>
   161c4:	mov    eax,DWORD PTR [rsp+0x14]
   161c8:	add    rsp,0x88
   161cf:	pop    rbx
   161d0:	pop    rbp
   161d1:	pop    r12
   161d3:	pop    r13
   161d5:	pop    r14
   161d7:	pop    r15
   161d9:	ret    
   161da:	mov    r15,r13
   161dd:	jmp    15e91 <cookie_db_load+0x151>
   161e2:	call   11760 <__stack_chk_fail@plt>
   161e7:	mov    r15,rdx
   161ea:	jmp    1611f <cookie_db_load+0x3df>
   161ef:	mov    r15,rdi
   161f2:	jmp    15f12 <cookie_db_load+0x1d2>
   161f7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000016200 <wget_cookie_store_cookies>:
   16200:	endbr64 
   16204:	test   rdi,rdi
   16207:	je     16250 <wget_cookie_store_cookies+0x50>
   16209:	push   r12
   1620b:	mov    r12,rdi
   1620e:	push   rbp
   1620f:	mov    rbp,rsi
   16212:	push   rbx
   16213:	xor    ebx,ebx
   16215:	jmp    16238 <wget_cookie_store_cookies+0x38>
   16217:	nop    WORD PTR [rax+rax*1+0x0]
   16220:	mov    esi,ebx
   16222:	mov    rdi,rbp
   16225:	add    ebx,0x1
   16228:	call   10c00 <wget_vector_get@plt>
   1622d:	mov    rdi,r12
   16230:	mov    rsi,rax
   16233:	call   105c0 <wget_cookie_store_cookie@plt>
   16238:	mov    rdi,rbp
   1623b:	call   10e90 <wget_vector_size@plt>
   16240:	cmp    eax,ebx
   16242:	jg     16220 <wget_cookie_store_cookies+0x20>
   16244:	pop    rbx
   16245:	mov    rdi,rbp
   16248:	pop    rbp
   16249:	pop    r12
   1624b:	jmp    10910 <wget_vector_clear_nofree@plt>
   16250:	ret    
   16251:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1625c:	nop    DWORD PTR [rax+0x0]

0000000000016260 <wget_cookie_create_request_header>:
   16260:	endbr64 
   16264:	push   r15
   16266:	push   r14
   16268:	push   r13
   1626a:	push   r12
   1626c:	mov    r12,rdi
   1626f:	xor    edi,edi
   16271:	push   rbp
   16272:	mov    rbp,rsi
   16275:	push   rbx
   16276:	sub    rsp,0x58
   1627a:	mov    rax,QWORD PTR fs:0x28
   16283:	mov    QWORD PTR [rsp+0x48],rax
   16288:	xor    eax,eax
   1628a:	call   11480 <time@plt>
   1628f:	mov    QWORD PTR [rsp+0x18],0x0
   16298:	test   r12,r12
   1629b:	je     164c0 <wget_cookie_create_request_header+0x260>
   162a1:	test   rbp,rbp
   162a4:	je     164c0 <wget_cookie_create_request_header+0x260>
   162aa:	mov    rdx,QWORD PTR [rbp+0x28]
   162ae:	mov    rsi,QWORD PTR [rbp+0x20]
   162b2:	mov    r13,rax
   162b5:	xor    eax,eax
   162b7:	lea    rdi,[rip+0x3520a]        # 4b4c8 <base64_2_bin+0x2c8>
   162be:	xor    ebx,ebx
   162c0:	call   114b0 <wget_debug_printf@plt>
   162c5:	mov    rdi,QWORD PTR [r12+0x8]
   162ca:	call   12040 <wget_thread_mutex_lock@plt>
   162cf:	jmp    16353 <wget_cookie_create_request_header+0xf3>
   162d4:	nop    DWORD PTR [rax+0x0]
   162d8:	mov    rsi,QWORD PTR [rbp+0x20]
   162dc:	mov    rdi,QWORD PTR [r15+0x10]
   162e0:	call   167e0 <cookie_domain_match>
   162e5:	test   al,al
   162e7:	je     16540 <wget_cookie_create_request_header+0x2e0>
   162ed:	mov    rsi,QWORD PTR [r15+0x20]
   162f1:	cmp    rsi,r13
   162f4:	jg     162ff <wget_cookie_create_request_header+0x9f>
   162f6:	test   rsi,rsi
   162f9:	jne    16500 <wget_cookie_create_request_header+0x2a0>
   162ff:	test   BYTE PTR [r15+0x44],0x10
   16304:	je     16310 <wget_cookie_create_request_header+0xb0>
   16306:	cmp    DWORD PTR [rbp+0x5c],0x1
   1630a:	jne    163e0 <wget_cookie_create_request_header+0x180>
   16310:	mov    rsi,QWORD PTR [rbp+0x28]
   16314:	mov    rdi,QWORD PTR [r15+0x18]
   16318:	call   16b30 <cookie_path_match>
   1631d:	test   al,al
   1631f:	je     163c0 <wget_cookie_create_request_header+0x160>
   16325:	mov    rdx,QWORD PTR [r15+0x8]
   16329:	mov    rsi,QWORD PTR [r15]
   1632c:	lea    rdi,[rip+0x35090]        # 4b3c3 <base64_2_bin+0x1c3>
   16333:	xor    eax,eax
   16335:	call   114b0 <wget_debug_printf@plt>
   1633a:	mov    rdi,QWORD PTR [rsp+0x18]
   1633f:	test   rdi,rdi
   16342:	je     16520 <wget_cookie_create_request_header+0x2c0>
   16348:	mov    rsi,r15
   1634b:	call   11290 <wget_vector_add@plt>
   16350:	add    ebx,0x1
   16353:	mov    r15,QWORD PTR [r12]
   16357:	mov    rdi,r15
   1635a:	call   10e90 <wget_vector_size@plt>
   1635f:	cmp    eax,ebx
   16361:	jle    163f8 <wget_cookie_create_request_header+0x198>
   16367:	mov    rdi,r15
   1636a:	mov    esi,ebx
   1636c:	call   10c00 <wget_vector_get@plt>
   16371:	movzx  r14d,BYTE PTR [rax+0x44]
   16376:	mov    r15,rax
   16379:	test   r14b,0x8
   1637d:	je     162d8 <wget_cookie_create_request_header+0x78>
   16383:	mov    rdx,QWORD PTR [rbp+0x20]
   16387:	mov    r9,QWORD PTR [rax+0x10]
   1638b:	mov    rsi,rdx
   1638e:	mov    rdi,r9
   16391:	mov    QWORD PTR [rsp+0x8],rdx
   16396:	mov    QWORD PTR [rsp],r9
   1639a:	call   11c60 <strcmp@plt>
   1639f:	mov    r9,QWORD PTR [rsp]
   163a3:	mov    rdx,QWORD PTR [rsp+0x8]
   163a8:	test   eax,eax
   163aa:	jne    164e8 <wget_cookie_create_request_header+0x288>
   163b0:	and    r14d,0x8
   163b4:	jne    162ed <wget_cookie_create_request_header+0x8d>
   163ba:	jmp    162d8 <wget_cookie_create_request_header+0x78>
   163bf:	nop
   163c0:	mov    rdx,QWORD PTR [rbp+0x28]
   163c4:	mov    rsi,QWORD PTR [r15+0x18]
   163c8:	lea    rdi,[rip+0x351a1]        # 4b570 <base64_2_bin+0x370>
   163cf:	call   114b0 <wget_debug_printf@plt>
   163d4:	jmp    16350 <wget_cookie_create_request_header+0xf0>
   163d9:	nop    DWORD PTR [rax+0x0]
   163e0:	lea    rdi,[rip+0x34fc0]        # 4b3a7 <base64_2_bin+0x1a7>
   163e7:	xor    eax,eax
   163e9:	call   114b0 <wget_debug_printf@plt>
   163ee:	jmp    16350 <wget_cookie_create_request_header+0xf0>
   163f3:	nop    DWORD PTR [rax+rax*1+0x0]
   163f8:	mov    rdi,QWORD PTR [rsp+0x18]
   163fd:	xor    ebp,ebp
   163ff:	xor    ebx,ebx
   16401:	lea    r13,[rsp+0x20]
   16406:	lea    r15,[rip+0x34fc5]        # 4b3d2 <base64_2_bin+0x1d2>
   1640d:	call   108a0 <wget_vector_sort@plt>
   16412:	jmp    16431 <wget_cookie_create_request_header+0x1d1>
   16414:	nop    DWORD PTR [rax+0x0]
   16418:	lea    rsi,[rip+0x34fb1]        # 4b3d0 <base64_2_bin+0x1d0>
   1641f:	mov    rdi,r13
   16422:	xor    eax,eax
   16424:	call   11880 <wget_buffer_printf_append@plt>
   16429:	add    ebx,0x1
   1642c:	mov    ebp,0x1
   16431:	mov    r14,QWORD PTR [rsp+0x18]
   16436:	mov    rdi,r14
   16439:	call   10e90 <wget_vector_size@plt>
   1643e:	cmp    eax,ebx
   16440:	jle    16490 <wget_cookie_create_request_header+0x230>
   16442:	mov    rdi,r14
   16445:	mov    esi,ebx
   16447:	call   10c00 <wget_vector_get@plt>
   1644c:	mov    r14,rax
   1644f:	test   ebp,ebp
   16451:	je     16478 <wget_cookie_create_request_header+0x218>
   16453:	mov    r8,QWORD PTR [r14+0x8]
   16457:	cmp    QWORD PTR [rsp+0x28],0x0
   1645d:	mov    rdx,QWORD PTR [r14]
   16460:	mov    rcx,r8
   16463:	jne    16418 <wget_cookie_create_request_header+0x1b8>
   16465:	mov    rsi,r15
   16468:	mov    rdi,r13
   1646b:	xor    eax,eax
   1646d:	call   11880 <wget_buffer_printf_append@plt>
   16472:	jmp    16429 <wget_cookie_create_request_header+0x1c9>
   16474:	nop    DWORD PTR [rax+0x0]
   16478:	mov    edx,0x80
   1647d:	xor    esi,esi
   1647f:	mov    rdi,r13
   16482:	call   108d0 <wget_buffer_init@plt>
   16487:	jmp    16453 <wget_cookie_create_request_header+0x1f3>
   16489:	nop    DWORD PTR [rax+0x0]
   16490:	mov    rdi,r14
   16493:	call   10910 <wget_vector_clear_nofree@plt>
   16498:	lea    rdi,[rsp+0x18]
   1649d:	call   125e0 <wget_vector_free@plt>
   164a2:	mov    rdi,QWORD PTR [r12+0x8]
   164a7:	call   117c0 <wget_thread_mutex_unlock@plt>
   164ac:	test   ebp,ebp
   164ae:	je     164c0 <wget_cookie_create_request_header+0x260>
   164b0:	mov    rax,QWORD PTR [rsp+0x20]
   164b5:	jmp    164c2 <wget_cookie_create_request_header+0x262>
   164b7:	nop    WORD PTR [rax+rax*1+0x0]
   164c0:	xor    eax,eax
   164c2:	mov    rdx,QWORD PTR [rsp+0x48]
   164c7:	sub    rdx,QWORD PTR fs:0x28
   164d0:	jne    16559 <wget_cookie_create_request_header+0x2f9>
   164d6:	add    rsp,0x58
   164da:	pop    rbx
   164db:	pop    rbp
   164dc:	pop    r12
   164de:	pop    r13
   164e0:	pop    r14
   164e2:	pop    r15
   164e4:	ret    
   164e5:	nop    DWORD PTR [rax]
   164e8:	mov    rsi,r9
   164eb:	lea    rdi,[rip+0x3500e]        # 4b500 <base64_2_bin+0x300>
   164f2:	xor    eax,eax
   164f4:	call   114b0 <wget_debug_printf@plt>
   164f9:	jmp    16350 <wget_cookie_create_request_header+0xf0>
   164fe:	xchg   ax,ax
   16500:	mov    rdx,r13
   16503:	lea    rdi,[rip+0x35046]        # 4b550 <base64_2_bin+0x350>
   1650a:	xor    eax,eax
   1650c:	call   114b0 <wget_debug_printf@plt>
   16511:	jmp    16350 <wget_cookie_create_request_header+0xf0>
   16516:	cs nop WORD PTR [rax+rax*1+0x0]
   16520:	mov    edi,0x10
   16525:	lea    rsi,[rip+0xfffffffffffff464]        # 15990 <compare_cookie2>
   1652c:	call   11f00 <wget_vector_create@plt>
   16531:	mov    QWORD PTR [rsp+0x18],rax
   16536:	mov    rdi,rax
   16539:	jmp    16348 <wget_cookie_create_request_header+0xe8>
   1653e:	xchg   ax,ax
   16540:	mov    rdx,QWORD PTR [rbp+0x20]
   16544:	mov    rsi,QWORD PTR [r15+0x10]
   16548:	lea    rdi,[rip+0x34fd9]        # 4b528 <base64_2_bin+0x328>
   1654f:	call   114b0 <wget_debug_printf@plt>
   16554:	jmp    16350 <wget_cookie_create_request_header+0xf0>
   16559:	call   11760 <__stack_chk_fail@plt>
   1655e:	xchg   ax,ax

0000000000016560 <wget_cookie_db_init>:
   16560:	endbr64 
   16564:	push   r12
   16566:	test   rdi,rdi
   16569:	je     165b8 <wget_cookie_db_init+0x58>
   1656b:	mov    QWORD PTR [rdi+0x10],0x0
   16573:	pxor   xmm0,xmm0
   16577:	mov    r12,rdi
   1657a:	movups XMMWORD PTR [rdi],xmm0
   1657d:	lea    rsi,[rip+0xfffffffffffff45c]        # 159e0 <compare_cookie>
   16584:	mov    edi,0x20
   16589:	call   11f00 <wget_vector_create@plt>
   1658e:	lea    rsi,[rip+0x7bb]        # 16d50 <cookie_free>
   16595:	mov    QWORD PTR [r12],rax
   16599:	mov    rdi,rax
   1659c:	call   120e0 <wget_vector_set_destructor@plt>
   165a1:	lea    rdi,[r12+0x8]
   165a6:	call   10530 <wget_thread_mutex_init@plt>
   165ab:	mov    rax,r12
   165ae:	pop    r12
   165b0:	ret    
   165b1:	nop    DWORD PTR [rax+0x0]
   165b8:	mov    rax,QWORD PTR [rip+0x5f981]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   165bf:	mov    esi,0x18
   165c4:	mov    edi,0x1
   165c9:	call   QWORD PTR [rax]
   165cb:	mov    r12,rax
   165ce:	test   rax,rax
   165d1:	jne    1657d <wget_cookie_db_init+0x1d>
   165d3:	jmp    165ab <wget_cookie_db_init+0x4b>
   165d5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

00000000000165e0 <wget_cookie_db_deinit>:
   165e0:	endbr64 
   165e4:	test   rdi,rdi
   165e7:	je     16618 <wget_cookie_db_deinit+0x38>
   165e9:	push   rbx
   165ea:	mov    rbx,rdi
   165ed:	mov    rdi,QWORD PTR [rdi+0x8]
   165f1:	call   12040 <wget_thread_mutex_lock@plt>
   165f6:	mov    rdi,rbx
   165f9:	call   125e0 <wget_vector_free@plt>
   165fe:	mov    rdi,QWORD PTR [rbx+0x8]
   16602:	call   117c0 <wget_thread_mutex_unlock@plt>
   16607:	lea    rdi,[rbx+0x8]
   1660b:	pop    rbx
   1660c:	jmp    11e70 <wget_thread_mutex_destroy@plt>
   16611:	nop    DWORD PTR [rax+0x0]
   16618:	ret    
   16619:	nop    DWORD PTR [rax+0x0]

0000000000016620 <wget_cookie_db_free>:
   16620:	endbr64 
   16624:	test   rdi,rdi
   16627:	je     16650 <wget_cookie_db_free+0x30>
   16629:	push   rbx
   1662a:	mov    rbx,rdi
   1662d:	mov    rdi,QWORD PTR [rdi]
   16630:	call   10690 <wget_cookie_db_deinit@plt>
   16635:	mov    rdi,QWORD PTR [rbx]
   16638:	test   rdi,rdi
   1663b:	je     1664d <wget_cookie_db_free+0x2d>
   1663d:	mov    rax,QWORD PTR [rip+0x5f9a4]        # 75fe8 <wget_free@@Base-0x1328>
   16644:	call   QWORD PTR [rax]
   16646:	mov    QWORD PTR [rbx],0x0
   1664d:	pop    rbx
   1664e:	ret    
   1664f:	nop
   16650:	ret    
   16651:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1665c:	nop    DWORD PTR [rax+0x0]

0000000000016660 <wget_cookie_set_keep_session_cookies>:
   16660:	endbr64 
   16664:	test   rdi,rdi
   16667:	je     16678 <wget_cookie_set_keep_session_cookies+0x18>
   16669:	movzx  eax,BYTE PTR [rdi+0x14]
   1666d:	and    esi,0x1
   16670:	and    eax,0xfffffffe
   16673:	or     eax,esi
   16675:	mov    BYTE PTR [rdi+0x14],al
   16678:	ret    
   16679:	nop    DWORD PTR [rax+0x0]

0000000000016680 <wget_cookie_db_load>:
   16680:	endbr64 
   16684:	push   r12
   16686:	xor    r12d,r12d
   16689:	push   rbp
   1668a:	sub    rsp,0x8
   1668e:	test   rdi,rdi
   16691:	je     166a0 <wget_cookie_db_load+0x20>
   16693:	mov    rbp,rsi
   16696:	test   rsi,rsi
   16699:	je     166a0 <wget_cookie_db_load+0x20>
   1669b:	cmp    BYTE PTR [rsi],0x0
   1669e:	jne    166b0 <wget_cookie_db_load+0x30>
   166a0:	add    rsp,0x8
   166a4:	mov    eax,r12d
   166a7:	pop    rbp
   166a8:	pop    r12
   166aa:	ret    
   166ab:	nop    DWORD PTR [rax+rax*1+0x0]
   166b0:	mov    rcx,rdi
   166b3:	xor    edx,edx
   166b5:	lea    rsi,[rip+0xfffffffffffff684]        # 15d40 <cookie_db_load>
   166bc:	mov    rdi,rbp
   166bf:	call   10980 <wget_update_file@plt>
   166c4:	mov    r12d,eax
   166c7:	test   eax,eax
   166c9:	jne    166e7 <wget_cookie_db_load+0x67>
   166cb:	mov    rsi,rbp
   166ce:	xor    eax,eax
   166d0:	lea    rdi,[rip+0x34d19]        # 4b3f0 <base64_2_bin+0x1f0>
   166d7:	call   114b0 <wget_debug_printf@plt>
   166dc:	add    rsp,0x8
   166e0:	mov    eax,r12d
   166e3:	pop    rbp
   166e4:	pop    r12
   166e6:	ret    
   166e7:	mov    edx,0x5
   166ec:	lea    rsi,[rip+0x34ce5]        # 4b3d8 <base64_2_bin+0x1d8>
   166f3:	xor    edi,edi
   166f5:	mov    r12d,0xffffffff
   166fb:	call   10f90 <dcgettext@plt>
   16700:	mov    rdi,rax
   16703:	xor    eax,eax
   16705:	call   11ea0 <wget_error_printf@plt>
   1670a:	jmp    166a0 <wget_cookie_db_load+0x20>
   1670c:	nop    DWORD PTR [rax+0x0]

0000000000016710 <wget_cookie_db_save>:
   16710:	endbr64 
   16714:	push   r13
   16716:	push   r12
   16718:	push   rbx
   16719:	test   rdi,rdi
   1671c:	je     167b0 <wget_cookie_db_save+0xa0>
   16722:	mov    r12,rsi
   16725:	test   rsi,rsi
   16728:	je     167b0 <wget_cookie_db_save+0xa0>
   1672e:	cmp    BYTE PTR [rsi],0x0
   16731:	je     167b0 <wget_cookie_db_save+0xa0>
   16733:	mov    rcx,rdi
   16736:	mov    rbx,rdi
   16739:	lea    rdx,[rip+0xfffffffffffff2f0]        # 15a30 <cookie_db_save>
   16740:	mov    rdi,r12
   16743:	lea    rsi,[rip+0xfffffffffffff5f6]        # 15d40 <cookie_db_load>
   1674a:	call   10980 <wget_update_file@plt>
   1674f:	mov    r13d,eax
   16752:	test   eax,eax
   16754:	jne    167b8 <wget_cookie_db_save+0xa8>
   16756:	mov    rdi,QWORD PTR [rbx]
   16759:	call   10e90 <wget_vector_size@plt>
   1675e:	mov    esi,eax
   16760:	test   eax,eax
   16762:	je     16798 <wget_cookie_db_save+0x88>
   16764:	cmp    eax,0x1
   16767:	lea    rdx,[rip+0x35fab]        # 4c719 <maybe+0x479>
   1676e:	lea    rax,[rip+0x360f5]        # 4c86a <maybe+0x5ca>
   16775:	mov    rcx,r12
   16778:	cmove  rdx,rax
   1677c:	lea    rdi,[rip+0x34c88]        # 4b40b <base64_2_bin+0x20b>
   16783:	xor    eax,eax
   16785:	call   114b0 <wget_debug_printf@plt>
   1678a:	mov    eax,r13d
   1678d:	pop    rbx
   1678e:	pop    r12
   16790:	pop    r13
   16792:	ret    
   16793:	nop    DWORD PTR [rax+rax*1+0x0]
   16798:	xor    eax,eax
   1679a:	lea    rdi,[rip+0x34e1f]        # 4b5c0 <base64_2_bin+0x3c0>
   167a1:	call   114b0 <wget_debug_printf@plt>
   167a6:	mov    eax,r13d
   167a9:	pop    rbx
   167aa:	pop    r12
   167ac:	pop    r13
   167ae:	ret    
   167af:	nop
   167b0:	mov    r13d,0xffffffff
   167b6:	jmp    1678a <wget_cookie_db_save+0x7a>
   167b8:	mov    edx,0x5
   167bd:	lea    rsi,[rip+0x34dd4]        # 4b598 <base64_2_bin+0x398>
   167c4:	xor    edi,edi
   167c6:	mov    r13d,0xffffffff
   167cc:	call   10f90 <dcgettext@plt>
   167d1:	mov    rsi,r12
   167d4:	mov    rdi,rax
   167d7:	xor    eax,eax
   167d9:	call   11ea0 <wget_error_printf@plt>
   167de:	jmp    1678a <wget_cookie_db_save+0x7a>

00000000000167e0 <cookie_domain_match>:
   167e0:	endbr64 
   167e4:	push   r13
   167e6:	mov    rdx,rsi
   167e9:	xor    eax,eax
   167eb:	mov    r13d,0x1
   167f1:	push   r12
   167f3:	push   rbp
   167f4:	mov    rbp,rdi
   167f7:	push   rbx
   167f8:	mov    rbx,rsi
   167fb:	mov    rsi,rdi
   167fe:	lea    rdi,[rip+0x34de0]        # 4b5e5 <base64_2_bin+0x3e5>
   16805:	sub    rsp,0x8
   16809:	call   114b0 <wget_debug_printf@plt>
   1680e:	mov    rsi,rbx
   16811:	mov    rdi,rbp
   16814:	call   11c60 <strcmp@plt>
   16819:	test   eax,eax
   1681b:	je     16855 <cookie_domain_match+0x75>
   1681d:	mov    rdi,rbp
   16820:	xor    r13d,r13d
   16823:	call   10ab0 <strlen@plt>
   16828:	mov    rdi,rbx
   1682b:	mov    r12,rax
   1682e:	call   10ab0 <strlen@plt>
   16833:	cmp    r12,rax
   16836:	jae    16855 <cookie_domain_match+0x75>
   16838:	sub    rax,r12
   1683b:	mov    rsi,rbp
   1683e:	add    rbx,rax
   16841:	mov    rdi,rbx
   16844:	call   11c60 <strcmp@plt>
   16849:	test   eax,eax
   1684b:	jne    16855 <cookie_domain_match+0x75>
   1684d:	cmp    BYTE PTR [rbx-0x1],0x2e
   16851:	sete   r13b
   16855:	add    rsp,0x8
   16859:	mov    eax,r13d
   1685c:	pop    rbx
   1685d:	pop    rbp
   1685e:	pop    r12
   16860:	pop    r13
   16862:	ret    
   16863:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1686e:	xchg   ax,ax

0000000000016870 <cookie_normalize_cookie>:
   16870:	push   r13
   16872:	push   r12
   16874:	push   rbp
   16875:	mov    rbp,rdi
   16878:	push   rbx
   16879:	mov    rbx,rsi
   1687c:	sub    rsp,0x8
   16880:	mov    rax,QWORD PTR [rsi+0x28]
   16884:	and    BYTE PTR [rsi+0x44],0xfd
   16888:	test   rax,rax
   1688b:	jne    16a28 <cookie_normalize_cookie+0x1b8>
   16891:	mov    rax,QWORD PTR [rsi+0x20]
   16895:	test   rax,rax
   16898:	movzx  eax,BYTE PTR [rbx+0x44]
   1689c:	mov    rdi,QWORD PTR [rbx+0x10]
   168a0:	setne  dl
   168a3:	shl    edx,0x2
   168a6:	and    eax,0xfffffffb
   168a9:	or     eax,edx
   168ab:	mov    BYTE PTR [rbx+0x44],al
   168ae:	call   10590 <wget_strtolower@plt>
   168b3:	test   rbp,rbp
   168b6:	je     169a1 <cookie_normalize_cookie+0x131>
   168bc:	mov    r12,QWORD PTR [rbx]
   168bf:	mov    edx,0x9
   168c4:	lea    rsi,[rip+0x34d2e]        # 4b5f9 <base64_2_bin+0x3f9>
   168cb:	mov    rdi,r12
   168ce:	call   10510 <wget_strncmp@plt>
   168d3:	test   eax,eax
   168d5:	jne    169b8 <cookie_normalize_cookie+0x148>
   168db:	test   BYTE PTR [rbx+0x44],0x10
   168df:	je     16ad0 <cookie_normalize_cookie+0x260>
   168e5:	cmp    DWORD PTR [rbp+0x5c],0x1
   168e9:	jne    16ad0 <cookie_normalize_cookie+0x260>
   168ef:	mov    r12,QWORD PTR [rbx+0x10]
   168f3:	test   r12,r12
   168f6:	je     16a4c <cookie_normalize_cookie+0x1dc>
   168fc:	cmp    BYTE PTR [r12],0x0
   16901:	je     16a38 <cookie_normalize_cookie+0x1c8>
   16907:	mov    r13,QWORD PTR [rbp+0x20]
   1690b:	mov    rdi,r12
   1690e:	mov    rsi,r13
   16911:	call   11c60 <strcmp@plt>
   16916:	mov    r8d,eax
   16919:	mov    eax,0x1
   1691e:	test   r8d,r8d
   16921:	jne    16ab8 <cookie_normalize_cookie+0x248>
   16927:	lea    edx,[rax*8+0x0]
   1692e:	movzx  eax,BYTE PTR [rbx+0x44]
   16932:	mov    r13,QWORD PTR [rbx+0x18]
   16936:	and    eax,0xfffffff7
   16939:	or     eax,edx
   1693b:	mov    BYTE PTR [rbx+0x44],al
   1693e:	test   r13,r13
   16941:	je     16a98 <cookie_normalize_cookie+0x228>
   16947:	cmp    BYTE PTR [r13+0x0],0x2f
   1694c:	je     169a1 <cookie_normalize_cookie+0x131>
   1694e:	mov    rdi,QWORD PTR [rbp+0x28]
   16952:	test   rdi,rdi
   16955:	je     16a68 <cookie_normalize_cookie+0x1f8>
   1695b:	mov    esi,0x2f
   16960:	call   11740 <strrchr@plt>
   16965:	mov    rdi,r13
   16968:	mov    r12,rax
   1696b:	mov    rax,QWORD PTR [rip+0x5f676]        # 75fe8 <wget_free@@Base-0x1328>
   16972:	call   QWORD PTR [rax]
   16974:	mov    QWORD PTR [rbx+0x18],0x0
   1697c:	test   r12,r12
   1697f:	je     16a7c <cookie_normalize_cookie+0x20c>
   16985:	mov    rdi,QWORD PTR [rbp+0x28]
   16989:	cmp    rdi,r12
   1698c:	je     16a7c <cookie_normalize_cookie+0x20c>
   16992:	mov    rsi,r12
   16995:	sub    rsi,rdi
   16998:	call   126b0 <wget_strmemdup@plt>
   1699d:	mov    QWORD PTR [rbx+0x18],rax
   169a1:	or     BYTE PTR [rbx+0x44],0x2
   169a5:	xor    eax,eax
   169a7:	add    rsp,0x8
   169ab:	pop    rbx
   169ac:	pop    rbp
   169ad:	pop    r12
   169af:	pop    r13
   169b1:	ret    
   169b2:	nop    WORD PTR [rax+rax*1+0x0]
   169b8:	mov    edx,0x7
   169bd:	lea    rsi,[rip+0x34c3f]        # 4b603 <base64_2_bin+0x403>
   169c4:	mov    rdi,r12
   169c7:	call   10510 <wget_strncmp@plt>
   169cc:	test   eax,eax
   169ce:	jne    168ef <cookie_normalize_cookie+0x7f>
   169d4:	movzx  eax,BYTE PTR [rbx+0x44]
   169d8:	test   al,0x10
   169da:	je     16ad0 <cookie_normalize_cookie+0x260>
   169e0:	cmp    DWORD PTR [rbp+0x5c],0x1
   169e4:	jne    16ad0 <cookie_normalize_cookie+0x260>
   169ea:	test   al,0x8
   169ec:	je     16aef <cookie_normalize_cookie+0x27f>
   169f2:	mov    rdi,QWORD PTR [rbx+0x18]
   169f6:	lea    rsi,[rip+0x36743]        # 4d140 <__func__.4+0x20>
   169fd:	call   103f0 <wget_strcmp@plt>
   16a02:	test   eax,eax
   16a04:	je     168ef <cookie_normalize_cookie+0x7f>
   16a0a:	mov    rdx,QWORD PTR [rbp+0x20]
   16a0e:	xor    eax,eax
   16a10:	mov    rsi,r12
   16a13:	lea    rdi,[rip+0x34cee]        # 4b708 <base64_2_bin+0x508>
   16a1a:	call   114b0 <wget_debug_printf@plt>
   16a1f:	or     eax,0xffffffff
   16a22:	jmp    169a7 <cookie_normalize_cookie+0x137>
   16a24:	nop    DWORD PTR [rax+0x0]
   16a28:	mov    QWORD PTR [rsi+0x20],rax
   16a2c:	jmp    16895 <cookie_normalize_cookie+0x25>
   16a31:	nop    DWORD PTR [rax+0x0]
   16a38:	mov    rax,QWORD PTR [rip+0x5f5a9]        # 75fe8 <wget_free@@Base-0x1328>
   16a3f:	mov    rdi,r12
   16a42:	call   QWORD PTR [rax]
   16a44:	mov    QWORD PTR [rbx+0x10],0x0
   16a4c:	mov    rdi,QWORD PTR [rbp+0x20]
   16a50:	call   127b0 <wget_strdup@plt>
   16a55:	mov    QWORD PTR [rbx+0x10],rax
   16a59:	mov    eax,0x1
   16a5e:	jmp    16927 <cookie_normalize_cookie+0xb7>
   16a63:	nop    DWORD PTR [rax+rax*1+0x0]
   16a68:	mov    rax,QWORD PTR [rip+0x5f579]        # 75fe8 <wget_free@@Base-0x1328>
   16a6f:	mov    rdi,r13
   16a72:	call   QWORD PTR [rax]
   16a74:	mov    QWORD PTR [rbx+0x18],0x0
   16a7c:	lea    rdi,[rip+0x366bd]        # 4d140 <__func__.4+0x20>
   16a83:	call   127b0 <wget_strdup@plt>
   16a88:	mov    QWORD PTR [rbx+0x18],rax
   16a8c:	jmp    169a1 <cookie_normalize_cookie+0x131>
   16a91:	nop    DWORD PTR [rax+0x0]
   16a98:	mov    rdi,QWORD PTR [rbp+0x28]
   16a9c:	test   rdi,rdi
   16a9f:	je     16a7c <cookie_normalize_cookie+0x20c>
   16aa1:	mov    esi,0x2f
   16aa6:	call   11740 <strrchr@plt>
   16aab:	mov    r12,rax
   16aae:	jmp    1697c <cookie_normalize_cookie+0x10c>
   16ab3:	nop    DWORD PTR [rax+rax*1+0x0]
   16ab8:	mov    rsi,r13
   16abb:	mov    rdi,r12
   16abe:	call   167e0 <cookie_domain_match>
   16ac3:	test   al,al
   16ac5:	je     16b0c <cookie_normalize_cookie+0x29c>
   16ac7:	xor    eax,eax
   16ac9:	jmp    16927 <cookie_normalize_cookie+0xb7>
   16ace:	xchg   ax,ax
   16ad0:	mov    rdx,QWORD PTR [rbp+0x20]
   16ad4:	xor    eax,eax
   16ad6:	mov    rsi,r12
   16ad9:	lea    rdi,[rip+0x34bc8]        # 4b6a8 <base64_2_bin+0x4a8>
   16ae0:	call   114b0 <wget_debug_printf@plt>
   16ae5:	mov    eax,0xffffffff
   16aea:	jmp    169a7 <cookie_normalize_cookie+0x137>
   16aef:	mov    rdx,QWORD PTR [rbp+0x20]
   16af3:	xor    eax,eax
   16af5:	mov    rsi,r12
   16af8:	lea    rdi,[rip+0x34bd9]        # 4b6d8 <base64_2_bin+0x4d8>
   16aff:	call   114b0 <wget_debug_printf@plt>
   16b04:	or     eax,0xffffffff
   16b07:	jmp    169a7 <cookie_normalize_cookie+0x137>
   16b0c:	mov    rdx,QWORD PTR [rbp+0x20]
   16b10:	mov    rsi,QWORD PTR [rbx+0x10]
   16b14:	lea    rdi,[rip+0x34af0]        # 4b60b <base64_2_bin+0x40b>
   16b1b:	call   114b0 <wget_debug_printf@plt>
   16b20:	or     eax,0xffffffff
   16b23:	jmp    169a7 <cookie_normalize_cookie+0x137>
   16b28:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000016b30 <cookie_path_match>:
   16b30:	endbr64 
   16b34:	push   r14
   16b36:	mov    r14,rdi
   16b39:	push   r13
   16b3b:	push   r12
   16b3d:	xor    r12d,r12d
   16b40:	push   rbp
   16b41:	push   rbx
   16b42:	cmp    BYTE PTR [rdi],0x2f
   16b45:	mov    rbx,rsi
   16b48:	jne    16b54 <cookie_path_match+0x24>
   16b4a:	add    r14,0x1
   16b4e:	mov    r12d,0x1
   16b54:	test   rbx,rbx
   16b57:	je     16c08 <cookie_path_match+0xd8>
   16b5d:	xor    eax,eax
   16b5f:	cmp    BYTE PTR [rbx],0x2f
   16b62:	lea    rdi,[rip+0x34aba]        # 4b623 <base64_2_bin+0x423>
   16b69:	mov    rsi,r14
   16b6c:	sete   al
   16b6f:	add    rbx,rax
   16b72:	xor    eax,eax
   16b74:	mov    rdx,rbx
   16b77:	call   114b0 <wget_debug_printf@plt>
   16b7c:	mov    esi,0x2f
   16b81:	mov    rdi,rbx
   16b84:	call   11740 <strrchr@plt>
   16b89:	mov    rbp,rax
   16b8c:	test   rax,rax
   16b8f:	je     16bf8 <cookie_path_match+0xc8>
   16b91:	sub    rbp,rbx
   16b94:	mov    rdi,r14
   16b97:	call   10ab0 <strlen@plt>
   16b9c:	mov    r13,rax
   16b9f:	xor    eax,eax
   16ba1:	cmp    rbp,r13
   16ba4:	jb     16bec <cookie_path_match+0xbc>
   16ba6:	or     rbp,r13
   16ba9:	mov    eax,0x1
   16bae:	je     16bec <cookie_path_match+0xbc>
   16bb0:	mov    rdx,r13
   16bb3:	mov    rsi,rbx
   16bb6:	mov    rdi,r14
   16bb9:	call   10b10 <strncmp@plt>
   16bbe:	mov    r8d,eax
   16bc1:	xor    eax,eax
   16bc3:	test   r8d,r8d
   16bc6:	jne    16bec <cookie_path_match+0xbc>
   16bc8:	movzx  edx,BYTE PTR [rbx+r13*1]
   16bcd:	mov    eax,0x1
   16bd2:	test   dl,dl
   16bd4:	je     16bec <cookie_path_match+0xbc>
   16bd6:	test   r13,r13
   16bd9:	je     16be3 <cookie_path_match+0xb3>
   16bdb:	cmp    BYTE PTR [r14+r13*1-0x1],0x2f
   16be1:	je     16bec <cookie_path_match+0xbc>
   16be3:	cmp    dl,0x2f
   16be6:	sete   al
   16be9:	or     eax,r12d
   16bec:	pop    rbx
   16bed:	pop    rbp
   16bee:	pop    r12
   16bf0:	pop    r13
   16bf2:	pop    r14
   16bf4:	ret    
   16bf5:	nop    DWORD PTR [rax]
   16bf8:	xor    ebp,ebp
   16bfa:	lea    rbx,[rip+0x35c69]        # 4c86a <maybe+0x5ca>
   16c01:	jmp    16b94 <cookie_path_match+0x64>
   16c03:	nop    DWORD PTR [rax+rax*1+0x0]
   16c08:	lea    rbx,[rip+0x35c5b]        # 4c86a <maybe+0x5ca>
   16c0f:	mov    rsi,r14
   16c12:	xor    eax,eax
   16c14:	xor    ebp,ebp
   16c16:	mov    rdx,rbx
   16c19:	lea    rdi,[rip+0x34a03]        # 4b623 <base64_2_bin+0x423>
   16c20:	call   114b0 <wget_debug_printf@plt>
   16c25:	jmp    16b94 <cookie_path_match+0x64>
   16c2a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000016c30 <wget_cookie_init>:
   16c30:	endbr64 
   16c34:	push   r12
   16c36:	test   rdi,rdi
   16c39:	je     16c70 <wget_cookie_init+0x40>
   16c3b:	mov    QWORD PTR [rdi+0x40],0x0
   16c43:	pxor   xmm0,xmm0
   16c47:	mov    r12,rdi
   16c4a:	movups XMMWORD PTR [rdi],xmm0
   16c4d:	movups XMMWORD PTR [rdi+0x10],xmm0
   16c51:	movups XMMWORD PTR [rdi+0x20],xmm0
   16c55:	movups XMMWORD PTR [rdi+0x30],xmm0
   16c59:	xor    edi,edi
   16c5b:	call   11480 <time@plt>
   16c60:	mov    QWORD PTR [r12+0x38],rax
   16c65:	mov    QWORD PTR [r12+0x30],rax
   16c6a:	mov    rax,r12
   16c6d:	pop    r12
   16c6f:	ret    
   16c70:	mov    rax,QWORD PTR [rip+0x5f2c9]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   16c77:	mov    esi,0x48
   16c7c:	mov    edi,0x1
   16c81:	call   QWORD PTR [rax]
   16c83:	mov    r12,rax
   16c86:	jmp    16c59 <wget_cookie_init+0x29>
   16c88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000016c90 <wget_cookie_deinit>:
   16c90:	endbr64 
   16c94:	test   rdi,rdi
   16c97:	je     16d08 <wget_cookie_deinit+0x78>
   16c99:	push   rbx
   16c9a:	mov    rbx,rdi
   16c9d:	mov    rdi,QWORD PTR [rdi]
   16ca0:	test   rdi,rdi
   16ca3:	je     16cb5 <wget_cookie_deinit+0x25>
   16ca5:	mov    rax,QWORD PTR [rip+0x5f33c]        # 75fe8 <wget_free@@Base-0x1328>
   16cac:	call   QWORD PTR [rax]
   16cae:	mov    QWORD PTR [rbx],0x0
   16cb5:	mov    rdi,QWORD PTR [rbx+0x8]
   16cb9:	test   rdi,rdi
   16cbc:	je     16ccf <wget_cookie_deinit+0x3f>
   16cbe:	mov    rax,QWORD PTR [rip+0x5f323]        # 75fe8 <wget_free@@Base-0x1328>
   16cc5:	call   QWORD PTR [rax]
   16cc7:	mov    QWORD PTR [rbx+0x8],0x0
   16ccf:	mov    rdi,QWORD PTR [rbx+0x10]
   16cd3:	test   rdi,rdi
   16cd6:	je     16ce9 <wget_cookie_deinit+0x59>
   16cd8:	mov    rax,QWORD PTR [rip+0x5f309]        # 75fe8 <wget_free@@Base-0x1328>
   16cdf:	call   QWORD PTR [rax]
   16ce1:	mov    QWORD PTR [rbx+0x10],0x0
   16ce9:	mov    rdi,QWORD PTR [rbx+0x18]
   16ced:	test   rdi,rdi
   16cf0:	je     16d03 <wget_cookie_deinit+0x73>
   16cf2:	mov    rax,QWORD PTR [rip+0x5f2ef]        # 75fe8 <wget_free@@Base-0x1328>
   16cf9:	call   QWORD PTR [rax]
   16cfb:	mov    QWORD PTR [rbx+0x18],0x0
   16d03:	pop    rbx
   16d04:	ret    
   16d05:	nop    DWORD PTR [rax]
   16d08:	ret    
   16d09:	nop    DWORD PTR [rax+0x0]

0000000000016d10 <wget_cookie_free>:
   16d10:	endbr64 
   16d14:	test   rdi,rdi
   16d17:	je     16d40 <wget_cookie_free+0x30>
   16d19:	push   rbx
   16d1a:	mov    rbx,rdi
   16d1d:	mov    rdi,QWORD PTR [rdi]
   16d20:	call   12180 <wget_cookie_deinit@plt>
   16d25:	mov    rdi,QWORD PTR [rbx]
   16d28:	test   rdi,rdi
   16d2b:	je     16d3d <wget_cookie_free+0x2d>
   16d2d:	mov    rax,QWORD PTR [rip+0x5f2b4]        # 75fe8 <wget_free@@Base-0x1328>
   16d34:	call   QWORD PTR [rax]
   16d36:	mov    QWORD PTR [rbx],0x0
   16d3d:	pop    rbx
   16d3e:	ret    
   16d3f:	nop
   16d40:	ret    
   16d41:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   16d4c:	nop    DWORD PTR [rax+0x0]

0000000000016d50 <cookie_free>:
   16d50:	endbr64 
   16d54:	test   rdi,rdi
   16d57:	je     16d78 <cookie_free+0x28>
   16d59:	push   rbp
   16d5a:	mov    rbp,rdi
   16d5d:	call   12180 <wget_cookie_deinit@plt>
   16d62:	mov    rax,QWORD PTR [rip+0x5f27f]        # 75fe8 <wget_free@@Base-0x1328>
   16d69:	mov    rdi,rbp
   16d6c:	pop    rbp
   16d6d:	mov    rax,QWORD PTR [rax]
   16d70:	jmp    rax
   16d72:	nop    WORD PTR [rax+rax*1+0x0]
   16d78:	ret    
   16d79:	nop    DWORD PTR [rax+0x0]

0000000000016d80 <wget_cookie_to_setcookie>:
   16d80:	endbr64 
   16d84:	push   rbp
   16d85:	pxor   xmm0,xmm0
   16d89:	push   rbx
   16d8a:	sub    rsp,0x38
   16d8e:	mov    rax,QWORD PTR fs:0x28
   16d97:	mov    QWORD PTR [rsp+0x28],rax
   16d9c:	xor    eax,eax
   16d9e:	movaps XMMWORD PTR [rsp],xmm0
   16da2:	movaps XMMWORD PTR [rsp+0x10],xmm0
   16da7:	test   rdi,rdi
   16daa:	je     16ea0 <wget_cookie_to_setcookie+0x120>
   16db0:	mov    rbx,rdi
   16db3:	mov    rdi,QWORD PTR [rdi+0x20]
   16db7:	xor    r11d,r11d
   16dba:	test   rdi,rdi
   16dbd:	jne    16e70 <wget_cookie_to_setcookie+0xf0>
   16dc3:	movzx  edx,BYTE PTR [rbx+0x44]
   16dc7:	lea    rax,[rip+0x35a9c]        # 4c86a <maybe+0x5ca>
   16dce:	mov    rdi,QWORD PTR [rbx+0x18]
   16dd2:	lea    rsi,[rip+0x3485f]        # 4b638 <base64_2_bin+0x438>
   16dd9:	lea    rcx,[rip+0x34861]        # 4b641 <base64_2_bin+0x441>
   16de0:	mov    rbp,QWORD PTR [rbx+0x10]
   16de4:	lea    r9,[rip+0x34861]        # 4b64c <base64_2_bin+0x44c>
   16deb:	test   dl,0x10
   16dee:	cmove  rsi,rax
   16df2:	test   dl,0x20
   16df5:	cmove  rcx,rax
   16df9:	and    edx,0x8
   16dfc:	lea    rdx,[rip+0x36341]        # 4d144 <__func__.4+0x24>
   16e03:	cmovne rdx,rax
   16e07:	test   rdi,rdi
   16e0a:	je     16e90 <wget_cookie_to_setcookie+0x110>
   16e10:	lea    r8,[rip+0x35a53]        # 4c86a <maybe+0x5ca>
   16e17:	mov    r10,r8
   16e1a:	test   r11b,r11b
   16e1d:	jne    16e60 <wget_cookie_to_setcookie+0xe0>
   16e1f:	sub    rsp,0x8
   16e23:	mov    r11,QWORD PTR [rbx+0x8]
   16e27:	xor    eax,eax
   16e29:	push   rsi
   16e2a:	push   rcx
   16e2b:	mov    rcx,r10
   16e2e:	push   rbp
   16e2f:	push   rdx
   16e30:	mov    rdx,r11
   16e33:	push   rdi
   16e34:	mov    rsi,QWORD PTR [rbx]
   16e37:	lea    rdi,[rip+0x348f2]        # 4b730 <base64_2_bin+0x530>
   16e3e:	call   12810 <wget_aprintf@plt>
   16e43:	add    rsp,0x30
   16e47:	mov    rdx,QWORD PTR [rsp+0x28]
   16e4c:	sub    rdx,QWORD PTR fs:0x28
   16e55:	jne    16eae <wget_cookie_to_setcookie+0x12e>
   16e57:	add    rsp,0x38
   16e5b:	pop    rbx
   16e5c:	pop    rbp
   16e5d:	ret    
   16e5e:	xchg   ax,ax
   16e60:	mov    r8,rsp
   16e63:	lea    r10,[rip+0x347ea]        # 4b654 <base64_2_bin+0x454>
   16e6a:	jmp    16e1f <wget_cookie_to_setcookie+0x9f>
   16e6c:	nop    DWORD PTR [rax+0x0]
   16e70:	mov    rsi,rsp
   16e73:	mov    edx,0x20
   16e78:	call   10890 <wget_http_print_date@plt>
   16e7d:	movzx  r11d,BYTE PTR [rsp]
   16e82:	jmp    16dc3 <wget_cookie_to_setcookie+0x43>
   16e87:	nop    WORD PTR [rax+rax*1+0x0]
   16e90:	mov    rdi,rax
   16e93:	mov    r9,rax
   16e96:	jmp    16e10 <wget_cookie_to_setcookie+0x90>
   16e9b:	nop    DWORD PTR [rax+rax*1+0x0]
   16ea0:	lea    rdi,[rip+0x341ec]        # 4b093 <_fini+0x69f>
   16ea7:	call   127b0 <wget_strdup@plt>
   16eac:	jmp    16e47 <wget_cookie_to_setcookie+0xc7>
   16eae:	call   11760 <__stack_chk_fail@plt>
   16eb3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   16ebe:	xchg   ax,ax

0000000000016ec0 <wget_cookie_parse_setcookie>:
   16ec0:	endbr64 
   16ec4:	push   r15
   16ec6:	push   r14
   16ec8:	push   r13
   16eca:	push   r12
   16ecc:	mov    r12,rdi
   16ecf:	xor    edi,edi
   16ed1:	push   rbp
   16ed2:	mov    rbp,rsi
   16ed5:	push   rbx
   16ed6:	sub    rsp,0x48
   16eda:	mov    rax,QWORD PTR fs:0x28
   16ee3:	mov    QWORD PTR [rsp+0x38],rax
   16ee8:	xor    eax,eax
   16eea:	call   11710 <wget_cookie_init@plt>
   16eef:	mov    QWORD PTR [rsp+0x30],rax
   16ef4:	mov    rbx,rax
   16ef7:	movzx  eax,BYTE PTR [r12]
   16efc:	cmp    al,0xd
   16efe:	jg     16fe0 <wget_cookie_parse_setcookie+0x120>
   16f04:	cmp    al,0x8
   16f06:	jg     16fe8 <wget_cookie_parse_setcookie+0x128>
   16f0c:	mov    r14,r12
   16f0f:	jmp    16f25 <wget_cookie_parse_setcookie+0x65>
   16f11:	nop    DWORD PTR [rax+0x0]
   16f18:	cmp    al,0x3b
   16f1a:	je     16f38 <wget_cookie_parse_setcookie+0x78>
   16f1c:	movzx  eax,BYTE PTR [r14+0x1]
   16f21:	add    r14,0x1
   16f25:	lea    edx,[rax-0x20]
   16f28:	cmp    dl,0x5e
   16f2b:	ja     16f31 <wget_cookie_parse_setcookie+0x71>
   16f2d:	cmp    al,0x3d
   16f2f:	jne    16f18 <wget_cookie_parse_setcookie+0x58>
   16f31:	test   al,al
   16f33:	js     16f1c <wget_cookie_parse_setcookie+0x5c>
   16f35:	nop    DWORD PTR [rax]
   16f38:	cmp    r12,r14
   16f3b:	jae    16f52 <wget_cookie_parse_setcookie+0x92>
   16f3d:	movzx  eax,BYTE PTR [r14-0x1]
   16f42:	cmp    al,0xd
   16f44:	jg     170f8 <wget_cookie_parse_setcookie+0x238>
   16f4a:	cmp    al,0x8
   16f4c:	jg     17100 <wget_cookie_parse_setcookie+0x240>
   16f52:	mov    rsi,r14
   16f55:	mov    rdi,r12
   16f58:	sub    rsi,r12
   16f5b:	call   126b0 <wget_strmemdup@plt>
   16f60:	mov    QWORD PTR [rbx],rax
   16f63:	movzx  eax,BYTE PTR [r14]
   16f67:	cmp    al,0xd
   16f69:	jg     16ff8 <wget_cookie_parse_setcookie+0x138>
   16f6f:	cmp    al,0x8
   16f71:	jg     17118 <wget_cookie_parse_setcookie+0x258>
   16f77:	lea    rdi,[rsp+0x30]
   16f7c:	call   123a0 <wget_cookie_free@plt>
   16f81:	xor    edi,edi
   16f83:	mov    edx,0x5
   16f88:	lea    rsi,[rip+0x347c1]        # 4b750 <base64_2_bin+0x550>
   16f8f:	call   10f90 <dcgettext@plt>
   16f94:	mov    rdi,rax
   16f97:	xor    eax,eax
   16f99:	call   11ea0 <wget_error_printf@plt>
   16f9e:	test   rbp,rbp
   16fa1:	je     17128 <wget_cookie_parse_setcookie+0x268>
   16fa7:	mov    rax,QWORD PTR [rsp+0x30]
   16fac:	mov    QWORD PTR [rbp+0x0],rax
   16fb0:	mov    rax,QWORD PTR [rsp+0x38]
   16fb5:	sub    rax,QWORD PTR fs:0x28
   16fbe:	jne    174f7 <wget_cookie_parse_setcookie+0x637>
   16fc4:	add    rsp,0x48
   16fc8:	mov    rax,r14
   16fcb:	pop    rbx
   16fcc:	pop    rbp
   16fcd:	pop    r12
   16fcf:	pop    r13
   16fd1:	pop    r14
   16fd3:	pop    r15
   16fd5:	ret    
   16fd6:	cs nop WORD PTR [rax+rax*1+0x0]
   16fe0:	cmp    al,0x20
   16fe2:	jne    16f0c <wget_cookie_parse_setcookie+0x4c>
   16fe8:	add    r12,0x1
   16fec:	jmp    16ef7 <wget_cookie_parse_setcookie+0x37>
   16ff1:	nop    DWORD PTR [rax+0x0]
   16ff8:	cmp    al,0x20
   16ffa:	je     17118 <wget_cookie_parse_setcookie+0x258>
   17000:	mov    rbx,QWORD PTR [rsp+0x30]
   17005:	mov    rdx,QWORD PTR [rbx]
   17008:	test   rdx,rdx
   1700b:	je     16f77 <wget_cookie_parse_setcookie+0xb7>
   17011:	cmp    BYTE PTR [rdx],0x0
   17014:	setne  dl
   17017:	cmp    al,0x3d
   17019:	sete   al
   1701c:	and    dl,al
   1701e:	mov    BYTE PTR [rsp+0x1f],dl
   17022:	je     16f77 <wget_cookie_parse_setcookie+0xb7>
   17028:	lea    rdi,[r14+0x1]
   1702c:	movzx  eax,BYTE PTR [rdi]
   1702f:	cmp    al,0xd
   17031:	jg     171e0 <wget_cookie_parse_setcookie+0x320>
   17037:	cmp    al,0x8
   17039:	jg     171e8 <wget_cookie_parse_setcookie+0x328>
   1703f:	lea    edx,[rax-0x20]
   17042:	mov    r14,rdi
   17045:	cmp    dl,0x5e
   17048:	setbe  cl
   1704b:	cmp    al,0x3b
   1704d:	setne  dl
   17050:	test   cl,dl
   17052:	jne    17060 <wget_cookie_parse_setcookie+0x1a0>
   17054:	test   al,al
   17056:	jns    17206 <wget_cookie_parse_setcookie+0x346>
   1705c:	nop    DWORD PTR [rax+0x0]
   17060:	movzx  eax,BYTE PTR [r14+0x1]
   17065:	add    r14,0x1
   17069:	lea    edx,[rax-0x20]
   1706c:	cmp    dl,0x5e
   1706f:	setbe  cl
   17072:	cmp    al,0x3b
   17074:	setne  dl
   17077:	test   cl,dl
   17079:	jne    17060 <wget_cookie_parse_setcookie+0x1a0>
   1707b:	test   al,al
   1707d:	js     17060 <wget_cookie_parse_setcookie+0x1a0>
   1707f:	cmp    rdi,r14
   17082:	jae    17099 <wget_cookie_parse_setcookie+0x1d9>
   17084:	movzx  eax,BYTE PTR [r14-0x1]
   17089:	cmp    al,0xd
   1708b:	jg     171f1 <wget_cookie_parse_setcookie+0x331>
   17091:	cmp    al,0x8
   17093:	jg     171f9 <wget_cookie_parse_setcookie+0x339>
   17099:	mov    rsi,r14
   1709c:	sub    rsi,rdi
   1709f:	call   126b0 <wget_strmemdup@plt>
   170a4:	lea    r12,[rip+0x345d0]        # 4b67b <base64_2_bin+0x47b>
   170ab:	lea    r13,[rip+0x345d0]        # 4b682 <base64_2_bin+0x482>
   170b2:	mov    QWORD PTR [rbx+0x8],rax
   170b6:	movzx  eax,BYTE PTR [r14]
   170ba:	nop    WORD PTR [rax+rax*1+0x0]
   170c0:	test   al,al
   170c2:	setne  bl
   170c5:	cmp    al,0x3b
   170c7:	setne  dl
   170ca:	and    bl,dl
   170cc:	jne    1717c <wget_cookie_parse_setcookie+0x2bc>
   170d2:	test   al,al
   170d4:	je     16f9e <wget_cookie_parse_setcookie+0xde>
   170da:	movzx  eax,BYTE PTR [r14+0x1]
   170df:	add    r14,0x1
   170e3:	cmp    al,0xd
   170e5:	jg     17140 <wget_cookie_parse_setcookie+0x280>
   170e7:	cmp    al,0x8
   170e9:	jg     170da <wget_cookie_parse_setcookie+0x21a>
   170eb:	test   al,al
   170ed:	je     16f9e <wget_cookie_parse_setcookie+0xde>
   170f3:	jmp    17144 <wget_cookie_parse_setcookie+0x284>
   170f5:	nop    DWORD PTR [rax]
   170f8:	cmp    al,0x20
   170fa:	jne    16f52 <wget_cookie_parse_setcookie+0x92>
   17100:	sub    r14,0x1
   17104:	cmp    r12,r14
   17107:	jne    16f3d <wget_cookie_parse_setcookie+0x7d>
   1710d:	jmp    16f52 <wget_cookie_parse_setcookie+0x92>
   17112:	nop    WORD PTR [rax+rax*1+0x0]
   17118:	add    r14,0x1
   1711c:	jmp    16f63 <wget_cookie_parse_setcookie+0xa3>
   17121:	nop    DWORD PTR [rax+0x0]
   17128:	lea    rdi,[rsp+0x30]
   1712d:	call   123a0 <wget_cookie_free@plt>
   17132:	jmp    16fb0 <wget_cookie_parse_setcookie+0xf0>
   17137:	nop    WORD PTR [rax+rax*1+0x0]
   17140:	cmp    al,0x20
   17142:	je     170da <wget_cookie_parse_setcookie+0x21a>
   17144:	mov    rdi,r14
   17147:	lea    rsi,[rsp+0x28]
   1714c:	call   10c20 <wget_http_parse_token@plt>
   17151:	mov    r15,QWORD PTR [rsp+0x28]
   17156:	mov    r14,rax
   17159:	test   r15,r15
   1715c:	jne    17194 <wget_cookie_parse_setcookie+0x2d4>
   1715e:	movzx  eax,BYTE PTR [r14]
   17162:	test   al,al
   17164:	je     16f9e <wget_cookie_parse_setcookie+0xde>
   1716a:	test   al,al
   1716c:	setne  bl
   1716f:	cmp    al,0x3b
   17171:	setne  dl
   17174:	and    bl,dl
   17176:	je     170d2 <wget_cookie_parse_setcookie+0x212>
   1717c:	movzx  eax,BYTE PTR [r14+0x1]
   17181:	add    r14,0x1
   17185:	jmp    170c0 <wget_cookie_parse_setcookie+0x200>
   1718a:	nop    WORD PTR [rax+rax*1+0x0]
   17190:	add    r14,0x1
   17194:	movzx  eax,BYTE PTR [r14]
   17198:	test   al,al
   1719a:	je     17230 <wget_cookie_parse_setcookie+0x370>
   171a0:	cmp    al,0x3d
   171a2:	je     17240 <wget_cookie_parse_setcookie+0x380>
   171a8:	cmp    al,0x3b
   171aa:	jne    17190 <wget_cookie_parse_setcookie+0x2d0>
   171ac:	mov    rsi,r12
   171af:	mov    rdi,r15
   171b2:	call   12590 <wget_strcasecmp_ascii@plt>
   171b7:	test   eax,eax
   171b9:	jne    17210 <wget_cookie_parse_setcookie+0x350>
   171bb:	mov    rax,QWORD PTR [rsp+0x30]
   171c0:	or     BYTE PTR [rax+0x44],0x10
   171c4:	mov    rax,QWORD PTR [rip+0x5ee1d]        # 75fe8 <wget_free@@Base-0x1328>
   171cb:	mov    rdi,r15
   171ce:	call   QWORD PTR [rax]
   171d0:	mov    QWORD PTR [rsp+0x28],0x0
   171d9:	jmp    1715e <wget_cookie_parse_setcookie+0x29e>
   171db:	nop    DWORD PTR [rax+rax*1+0x0]
   171e0:	cmp    al,0x20
   171e2:	jne    1703f <wget_cookie_parse_setcookie+0x17f>
   171e8:	add    rdi,0x1
   171ec:	jmp    1702c <wget_cookie_parse_setcookie+0x16c>
   171f1:	cmp    al,0x20
   171f3:	jne    17099 <wget_cookie_parse_setcookie+0x1d9>
   171f9:	sub    r14,0x1
   171fd:	cmp    rdi,r14
   17200:	jne    17084 <wget_cookie_parse_setcookie+0x1c4>
   17206:	xor    esi,esi
   17208:	jmp    1709f <wget_cookie_parse_setcookie+0x1df>
   1720d:	nop    DWORD PTR [rax]
   17210:	mov    rsi,r13
   17213:	mov    rdi,r15
   17216:	call   12590 <wget_strcasecmp_ascii@plt>
   1721b:	test   eax,eax
   1721d:	jne    173aa <wget_cookie_parse_setcookie+0x4ea>
   17223:	mov    rax,QWORD PTR [rsp+0x30]
   17228:	or     BYTE PTR [rax+0x44],0x20
   1722c:	jmp    171c4 <wget_cookie_parse_setcookie+0x304>
   1722e:	xchg   ax,ax
   17230:	cmp    al,0x3d
   17232:	jne    171ac <wget_cookie_parse_setcookie+0x2ec>
   17238:	nop    DWORD PTR [rax+rax*1+0x0]
   17240:	lea    r9,[r14+0x1]
   17244:	movzx  ecx,BYTE PTR [r9]
   17248:	cmp    cl,0xd
   1724b:	jg     17398 <wget_cookie_parse_setcookie+0x4d8>
   17251:	cmp    cl,0x8
   17254:	jg     173a1 <wget_cookie_parse_setcookie+0x4e1>
   1725a:	lea    eax,[rcx-0x20]
   1725d:	mov    r14,r9
   17260:	cmp    al,0x5e
   17262:	setbe  dl
   17265:	cmp    cl,0x3b
   17268:	setne  al
   1726b:	test   dl,al
   1726d:	jne    17278 <wget_cookie_parse_setcookie+0x3b8>
   1726f:	test   cl,cl
   17271:	jns    17299 <wget_cookie_parse_setcookie+0x3d9>
   17273:	nop    DWORD PTR [rax+rax*1+0x0]
   17278:	movzx  eax,BYTE PTR [r14+0x1]
   1727d:	add    r14,0x1
   17281:	lea    edx,[rax-0x20]
   17284:	cmp    dl,0x5e
   17287:	setbe  sil
   1728b:	cmp    al,0x3b
   1728d:	setne  dl
   17290:	test   sil,dl
   17293:	jne    17278 <wget_cookie_parse_setcookie+0x3b8>
   17295:	test   al,al
   17297:	js     17278 <wget_cookie_parse_setcookie+0x3b8>
   17299:	lea    rsi,[rip+0x343bf]        # 4b65f <base64_2_bin+0x45f>
   172a0:	mov    rdi,r15
   172a3:	mov    QWORD PTR [rsp+0x10],r9
   172a8:	mov    BYTE PTR [rsp+0x8],cl
   172ac:	call   12590 <wget_strcasecmp_ascii@plt>
   172b1:	movzx  ecx,BYTE PTR [rsp+0x8]
   172b6:	mov    r9,QWORD PTR [rsp+0x10]
   172bb:	test   eax,eax
   172bd:	je     17410 <wget_cookie_parse_setcookie+0x550>
   172c3:	lea    rsi,[rip+0x3439d]        # 4b667 <base64_2_bin+0x467>
   172ca:	mov    rdi,r15
   172cd:	mov    QWORD PTR [rsp+0x10],r9
   172d2:	mov    BYTE PTR [rsp+0x8],cl
   172d6:	call   12590 <wget_strcasecmp_ascii@plt>
   172db:	movzx  ecx,BYTE PTR [rsp+0x8]
   172e0:	mov    r9,QWORD PTR [rsp+0x10]
   172e5:	test   eax,eax
   172e7:	je     173d0 <wget_cookie_parse_setcookie+0x510>
   172ed:	lea    rsi,[rip+0x3437b]        # 4b66f <base64_2_bin+0x46f>
   172f4:	mov    rdi,r15
   172f7:	mov    QWORD PTR [rsp+0x8],r9
   172fc:	mov    BYTE PTR [rsp+0x10],cl
   17300:	call   12590 <wget_strcasecmp_ascii@plt>
   17305:	mov    r9,QWORD PTR [rsp+0x8]
   1730a:	test   eax,eax
   1730c:	jne    17423 <wget_cookie_parse_setcookie+0x563>
   17312:	cmp    r9,r14
   17315:	je     171c4 <wget_cookie_parse_setcookie+0x304>
   1731b:	movzx  ecx,BYTE PTR [rsp+0x10]
   17320:	mov    r15,QWORD PTR [rsp+0x30]
   17325:	cmp    cl,0x2e
   17328:	je     173fa <wget_cookie_parse_setcookie+0x53a>
   1732e:	movzx  eax,BYTE PTR [r15+0x44]
   17333:	and    eax,0xfffffffe
   17336:	or     eax,ebx
   17338:	mov    BYTE PTR [r15+0x44],al
   1733c:	cmp    r9,r14
   1733f:	jae    17356 <wget_cookie_parse_setcookie+0x496>
   17341:	movzx  eax,BYTE PTR [r14-0x1]
   17346:	cmp    al,0xd
   17348:	jg     1749b <wget_cookie_parse_setcookie+0x5db>
   1734e:	cmp    al,0x8
   17350:	jg     174a3 <wget_cookie_parse_setcookie+0x5e3>
   17356:	mov    rdi,QWORD PTR [r15+0x10]
   1735a:	test   rdi,rdi
   1735d:	je     1737f <wget_cookie_parse_setcookie+0x4bf>
   1735f:	mov    rax,QWORD PTR [rip+0x5ec82]        # 75fe8 <wget_free@@Base-0x1328>
   17366:	mov    QWORD PTR [rsp+0x8],r9
   1736b:	call   QWORD PTR [rax]
   1736d:	mov    r15,QWORD PTR [rsp+0x30]
   17372:	mov    r9,QWORD PTR [rsp+0x8]
   17377:	mov    QWORD PTR [r15+0x10],0x0
   1737f:	mov    rsi,r14
   17382:	mov    rdi,r9
   17385:	sub    rsi,r9
   17388:	call   126b0 <wget_strmemdup@plt>
   1738d:	mov    QWORD PTR [r15+0x10],rax
   17391:	jmp    173bb <wget_cookie_parse_setcookie+0x4fb>
   17393:	nop    DWORD PTR [rax+rax*1+0x0]
   17398:	cmp    cl,0x20
   1739b:	jne    1725a <wget_cookie_parse_setcookie+0x39a>
   173a1:	add    r9,0x1
   173a5:	jmp    17244 <wget_cookie_parse_setcookie+0x384>
   173aa:	mov    rsi,r15
   173ad:	lea    rdi,[rip+0x342d7]        # 4b68b <base64_2_bin+0x48b>
   173b4:	xor    eax,eax
   173b6:	call   114b0 <wget_debug_printf@plt>
   173bb:	mov    r15,QWORD PTR [rsp+0x28]
   173c0:	test   r15,r15
   173c3:	je     1715e <wget_cookie_parse_setcookie+0x29e>
   173c9:	jmp    171c4 <wget_cookie_parse_setcookie+0x304>
   173ce:	xchg   ax,ax
   173d0:	mov    edx,0xa
   173d5:	xor    esi,esi
   173d7:	mov    rdi,r9
   173da:	call   11c90 <strtol@plt>
   173df:	mov    rbx,rax
   173e2:	test   rax,rax
   173e5:	jg     174d0 <wget_cookie_parse_setcookie+0x610>
   173eb:	mov    rax,QWORD PTR [rsp+0x30]
   173f0:	mov    QWORD PTR [rax+0x28],0x0
   173f8:	jmp    173bb <wget_cookie_parse_setcookie+0x4fb>
   173fa:	add    r9,0x1
   173fe:	cmp    BYTE PTR [r9],0x2e
   17402:	je     173fa <wget_cookie_parse_setcookie+0x53a>
   17404:	movzx  ebx,BYTE PTR [rsp+0x1f]
   17409:	jmp    1732e <wget_cookie_parse_setcookie+0x46e>
   1740e:	xchg   ax,ax
   17410:	mov    rbx,QWORD PTR [rsp+0x30]
   17415:	mov    rdi,r9
   17418:	call   12160 <wget_http_parse_full_date@plt>
   1741d:	mov    QWORD PTR [rbx+0x20],rax
   17421:	jmp    173bb <wget_cookie_parse_setcookie+0x4fb>
   17423:	lea    rsi,[rip+0x3424c]        # 4b676 <base64_2_bin+0x476>
   1742a:	mov    rdi,r15
   1742d:	mov    QWORD PTR [rsp+0x8],r9
   17432:	call   12590 <wget_strcasecmp_ascii@plt>
   17437:	mov    r9,QWORD PTR [rsp+0x8]
   1743c:	test   eax,eax
   1743e:	jne    171ac <wget_cookie_parse_setcookie+0x2ec>
   17444:	cmp    r9,r14
   17447:	jae    17456 <wget_cookie_parse_setcookie+0x596>
   17449:	movzx  eax,BYTE PTR [r14-0x1]
   1744e:	cmp    al,0xd
   17450:	jg     174b8 <wget_cookie_parse_setcookie+0x5f8>
   17452:	cmp    al,0x8
   17454:	jg     174bc <wget_cookie_parse_setcookie+0x5fc>
   17456:	mov    rbx,QWORD PTR [rsp+0x30]
   1745b:	mov    rdi,QWORD PTR [rbx+0x18]
   1745f:	test   rdi,rdi
   17462:	je     17484 <wget_cookie_parse_setcookie+0x5c4>
   17464:	mov    rax,QWORD PTR [rip+0x5eb7d]        # 75fe8 <wget_free@@Base-0x1328>
   1746b:	mov    QWORD PTR [rsp+0x8],r9
   17470:	call   QWORD PTR [rax]
   17472:	mov    rbx,QWORD PTR [rsp+0x30]
   17477:	mov    r9,QWORD PTR [rsp+0x8]
   1747c:	mov    QWORD PTR [rbx+0x18],0x0
   17484:	mov    rsi,r14
   17487:	mov    rdi,r9
   1748a:	sub    rsi,r9
   1748d:	call   126b0 <wget_strmemdup@plt>
   17492:	mov    QWORD PTR [rbx+0x18],rax
   17496:	jmp    173bb <wget_cookie_parse_setcookie+0x4fb>
   1749b:	cmp    al,0x20
   1749d:	jne    17356 <wget_cookie_parse_setcookie+0x496>
   174a3:	sub    r14,0x1
   174a7:	cmp    r14,r9
   174aa:	jne    17341 <wget_cookie_parse_setcookie+0x481>
   174b0:	jmp    17356 <wget_cookie_parse_setcookie+0x496>
   174b5:	nop    DWORD PTR [rax]
   174b8:	cmp    al,0x20
   174ba:	jne    17456 <wget_cookie_parse_setcookie+0x596>
   174bc:	sub    r14,0x1
   174c0:	cmp    r9,r14
   174c3:	jne    17449 <wget_cookie_parse_setcookie+0x589>
   174c5:	jmp    17456 <wget_cookie_parse_setcookie+0x596>
   174c7:	nop    WORD PTR [rax+rax*1+0x0]
   174d0:	xor    edi,edi
   174d2:	call   11480 <time@plt>
   174d7:	mov    r9,rax
   174da:	mov    eax,0x7fffffff
   174df:	cmp    rbx,rax
   174e2:	cmovg  rbx,rax
   174e6:	mov    rax,QWORD PTR [rsp+0x30]
   174eb:	add    rbx,r9
   174ee:	mov    QWORD PTR [rax+0x28],rbx
   174f2:	jmp    173bb <wget_cookie_parse_setcookie+0x4fb>
   174f7:	call   11760 <__stack_chk_fail@plt>
   174fc:	nop    DWORD PTR [rax+0x0]

0000000000017500 <wget_cookie_normalize>:
   17500:	endbr64 
   17504:	jmp    16870 <cookie_normalize_cookie>
   17509:	nop    DWORD PTR [rax+0x0]

0000000000017510 <wget_cookie_normalize_cookies>:
   17510:	endbr64 
   17514:	push   r12
   17516:	mov    r12,rdi
   17519:	push   rbp
   1751a:	mov    rbp,rsi
   1751d:	push   rbx
   1751e:	xor    ebx,ebx
   17520:	jmp    17540 <wget_cookie_normalize_cookies+0x30>
   17522:	nop    WORD PTR [rax+rax*1+0x0]
   17528:	mov    esi,ebx
   1752a:	mov    rdi,rbp
   1752d:	add    ebx,0x1
   17530:	call   10c00 <wget_vector_get@plt>
   17535:	mov    rdi,r12
   17538:	mov    rsi,rax
   1753b:	call   16870 <cookie_normalize_cookie>
   17540:	mov    rdi,rbp
   17543:	call   10e90 <wget_vector_size@plt>
   17548:	cmp    eax,ebx
   1754a:	jg     17528 <wget_cookie_normalize_cookies+0x18>
   1754c:	pop    rbx
   1754d:	pop    rbp
   1754e:	pop    r12
   17550:	ret    
   17551:	cs nop WORD PTR [rax+rax*1+0x0]
   1755b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000017560 <yyalloc>:
   17560:	endbr64 
   17564:	mov    rax,QWORD PTR [rip+0x5ea65]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   1756b:	jmp    QWORD PTR [rax]
   1756d:	nop    DWORD PTR [rax]

0000000000017570 <yyrealloc>:
   17570:	endbr64 
   17574:	mov    rax,QWORD PTR [rip+0x5ea05]        # 75f80 <wget_realloc_fn@@Base-0x1398>
   1757b:	jmp    QWORD PTR [rax]
   1757d:	nop    DWORD PTR [rax]

0000000000017580 <wget_css_parse_buffer>:
   17580:	endbr64 
   17584:	push   r15
   17586:	push   r14
   17588:	mov    r14,rdi
   1758b:	push   r13
   1758d:	mov    r13,r8
   17590:	push   r12
   17592:	mov    r12,rcx
   17595:	push   rbp
   17596:	mov    rbp,rdx
   17599:	push   rbx
   1759a:	mov    rbx,rsi
   1759d:	sub    rsp,0x28
   175a1:	mov    rax,QWORD PTR fs:0x28
   175aa:	mov    QWORD PTR [rsp+0x18],rax
   175af:	xor    eax,eax
   175b1:	lea    rdi,[rsp+0x10]
   175b6:	call   33630 <yylex_init>
   175bb:	mov    rdx,QWORD PTR [rsp+0x10]
   175c0:	mov    esi,ebx
   175c2:	mov    rdi,r14
   175c5:	xor    ebx,ebx
   175c7:	lea    r14,[rip+0x341ad]        # 4b77b <base64_2_bin+0x57b>
   175ce:	call   33400 <yy_scan_bytes>
   175d3:	jmp    1763a <wget_css_parse_buffer+0xba>
   175d5:	nop    DWORD PTR [rax]
   175d8:	test   dl,dl
   175da:	je     17665 <wget_css_parse_buffer+0xe5>
   175e0:	call   33570 <yyget_text>
   175e5:	mov    rdi,QWORD PTR [rsp+0x10]
   175ea:	mov    r15,rax
   175ed:	call   33560 <yyget_leng>
   175f2:	movsxd rcx,eax
   175f5:	movzx  eax,BYTE PTR [r15]
   175f9:	cmp    al,0x27
   175fb:	je     17710 <wget_css_parse_buffer+0x190>
   17601:	cmp    al,0x22
   17603:	je     17710 <wget_css_parse_buffer+0x190>
   17609:	mov    rdi,r15
   1760c:	mov    edx,0x4
   17611:	mov    rsi,r14
   17614:	mov    QWORD PTR [rsp+0x8],rcx
   17619:	call   11c40 <wget_strncasecmp_ascii@plt>
   1761e:	mov    rdi,QWORD PTR [rsp+0x10]
   17623:	mov    rcx,QWORD PTR [rsp+0x8]
   17628:	test   eax,eax
   1762a:	je     17760 <wget_css_parse_buffer+0x1e0>
   17630:	call   33560 <yyget_leng>
   17635:	cdqe   
   17637:	add    rbx,rax
   1763a:	mov    rdi,QWORD PTR [rsp+0x10]
   1763f:	call   32810 <yylex>
   17644:	test   eax,eax
   17646:	je     17730 <wget_css_parse_buffer+0x1b0>
   1764c:	cmp    eax,0xa
   1764f:	je     17678 <wget_css_parse_buffer+0xf8>
   17651:	cmp    eax,0x18
   17654:	sete   dl
   17657:	mov    rdi,QWORD PTR [rsp+0x10]
   1765c:	test   rbp,rbp
   1765f:	jne    175d8 <wget_css_parse_buffer+0x58>
   17665:	cmp    eax,0xd
   17668:	jne    17630 <wget_css_parse_buffer+0xb0>
   1766a:	test   r12,r12
   1766d:	je     17630 <wget_css_parse_buffer+0xb0>
   1766f:	jmp    176b5 <wget_css_parse_buffer+0x135>
   17671:	nop    DWORD PTR [rax+0x0]
   17678:	mov    rdi,QWORD PTR [rsp+0x10]
   1767d:	call   33560 <yyget_leng>
   17682:	mov    rdi,QWORD PTR [rsp+0x10]
   17687:	cdqe   
   17689:	add    rbx,rax
   1768c:	call   32810 <yylex>
   17691:	cmp    eax,0x1
   17694:	je     17678 <wget_css_parse_buffer+0xf8>
   17696:	cmp    eax,0x6
   17699:	jne    17651 <wget_css_parse_buffer+0xd1>
   1769b:	mov    edx,0x1
   176a0:	mov    eax,0x18
   176a5:	jmp    17657 <wget_css_parse_buffer+0xd7>
   176a7:	nop    WORD PTR [rax+rax*1+0x0]
   176b0:	mov    rdi,QWORD PTR [rsp+0x10]
   176b5:	call   33560 <yyget_leng>
   176ba:	mov    rdi,QWORD PTR [rsp+0x10]
   176bf:	cdqe   
   176c1:	add    rbx,rax
   176c4:	call   32810 <yylex>
   176c9:	cmp    eax,0x1
   176cc:	je     176b0 <wget_css_parse_buffer+0x130>
   176ce:	cmp    eax,0x6
   176d1:	je     17800 <wget_css_parse_buffer+0x280>
   176d7:	mov    edx,0x5
   176dc:	lea    rsi,[rip+0x340b5]        # 4b798 <base64_2_bin+0x598>
   176e3:	xor    edi,edi
   176e5:	mov    DWORD PTR [rsp+0x8],eax
   176e9:	call   10f90 <dcgettext@plt>
   176ee:	mov    esi,DWORD PTR [rsp+0x8]
   176f2:	mov    rdi,rax
   176f5:	xor    eax,eax
   176f7:	call   11ea0 <wget_error_printf@plt>
   176fc:	mov    rdi,QWORD PTR [rsp+0x10]
   17701:	jmp    17630 <wget_css_parse_buffer+0xb0>
   17706:	cs nop WORD PTR [rax+rax*1+0x0]
   17710:	lea    r9,[rbx+0x1]
   17714:	lea    rdx,[rcx-0x2]
   17718:	mov    rdi,r13
   1771b:	lea    rsi,[r15+0x1]
   1771f:	mov    rcx,r9
   17722:	call   rbp
   17724:	mov    rdi,QWORD PTR [rsp+0x10]
   17729:	jmp    17630 <wget_css_parse_buffer+0xb0>
   1772e:	xchg   ax,ax
   17730:	mov    rdi,QWORD PTR [rsp+0x10]
   17735:	call   33820 <yylex_destroy>
   1773a:	mov    rax,QWORD PTR [rsp+0x18]
   1773f:	sub    rax,QWORD PTR fs:0x28
   17748:	jne    1787a <wget_css_parse_buffer+0x2fa>
   1774e:	add    rsp,0x28
   17752:	pop    rbx
   17753:	pop    rbp
   17754:	pop    r12
   17756:	pop    r13
   17758:	pop    r14
   1775a:	pop    r15
   1775c:	ret    
   1775d:	nop    DWORD PTR [rax]
   17760:	lea    rax,[rcx-0x1]
   17764:	mov    rdx,rax
   17767:	sub    rax,0x1
   1776b:	movzx  ecx,BYTE PTR [r15+rax*1]
   17770:	cmp    cl,0xd
   17773:	jg     177c8 <wget_css_parse_buffer+0x248>
   17775:	cmp    cl,0x8
   17778:	jg     17764 <wget_css_parse_buffer+0x1e4>
   1777a:	lea    rsi,[r15+0x4]
   1777e:	sub    rdx,0x4
   17782:	je     17870 <wget_css_parse_buffer+0x2f0>
   17788:	movzx  eax,BYTE PTR [rsi]
   1778b:	cmp    al,0xd
   1778d:	jg     177d0 <wget_css_parse_buffer+0x250>
   1778f:	cmp    al,0x8
   17791:	jg     177f0 <wget_css_parse_buffer+0x270>
   17793:	movzx  eax,BYTE PTR [rsi+rdx*1-0x1]
   17798:	mov    rcx,rsi
   1779b:	lea    rdi,[rdx-0x1]
   1779f:	sub    rcx,r15
   177a2:	cmp    al,0x27
   177a4:	je     17858 <wget_css_parse_buffer+0x2d8>
   177aa:	cmp    al,0x22
   177ac:	je     17858 <wget_css_parse_buffer+0x2d8>
   177b2:	mov    rdi,r13
   177b5:	add    rcx,rbx
   177b8:	call   rbp
   177ba:	mov    rdi,QWORD PTR [rsp+0x10]
   177bf:	jmp    17630 <wget_css_parse_buffer+0xb0>
   177c4:	nop    DWORD PTR [rax+0x0]
   177c8:	cmp    cl,0x20
   177cb:	je     17764 <wget_css_parse_buffer+0x1e4>
   177cd:	jmp    1777a <wget_css_parse_buffer+0x1fa>
   177cf:	nop
   177d0:	cmp    al,0x20
   177d2:	je     177f0 <wget_css_parse_buffer+0x270>
   177d4:	cmp    al,0x27
   177d6:	jne    17860 <wget_css_parse_buffer+0x2e0>
   177dc:	add    rsi,0x1
   177e0:	sub    rdx,0x1
   177e4:	jne    17793 <wget_css_parse_buffer+0x213>
   177e6:	mov    rcx,rsi
   177e9:	sub    rcx,r15
   177ec:	jmp    177b2 <wget_css_parse_buffer+0x232>
   177ee:	xchg   ax,ax
   177f0:	add    rsi,0x1
   177f4:	sub    rdx,0x1
   177f8:	jne    17788 <wget_css_parse_buffer+0x208>
   177fa:	jmp    177e6 <wget_css_parse_buffer+0x266>
   177fc:	nop    DWORD PTR [rax+0x0]
   17800:	mov    rdi,QWORD PTR [rsp+0x10]
   17805:	call   33570 <yyget_text>
   1780a:	mov    rdi,QWORD PTR [rsp+0x10]
   1780f:	mov    QWORD PTR [rsp+0x8],rax
   17814:	call   33560 <yyget_leng>
   17819:	mov    rsi,QWORD PTR [rsp+0x8]
   1781e:	movsxd rdx,eax
   17821:	movzx  eax,BYTE PTR [rsi]
   17824:	cmp    al,0x27
   17826:	je     17840 <wget_css_parse_buffer+0x2c0>
   17828:	cmp    al,0x22
   1782a:	je     17840 <wget_css_parse_buffer+0x2c0>
   1782c:	mov    rdi,r13
   1782f:	call   r12
   17832:	mov    rdi,QWORD PTR [rsp+0x10]
   17837:	jmp    17630 <wget_css_parse_buffer+0xb0>
   1783c:	nop    DWORD PTR [rax+0x0]
   17840:	mov    rdi,r13
   17843:	sub    rdx,0x2
   17847:	add    rsi,0x1
   1784b:	call   r12
   1784e:	mov    rdi,QWORD PTR [rsp+0x10]
   17853:	jmp    17630 <wget_css_parse_buffer+0xb0>
   17858:	mov    rdx,rdi
   1785b:	jmp    177b2 <wget_css_parse_buffer+0x232>
   17860:	cmp    al,0x22
   17862:	je     177dc <wget_css_parse_buffer+0x25c>
   17868:	jmp    17793 <wget_css_parse_buffer+0x213>
   1786d:	nop    DWORD PTR [rax]
   17870:	mov    ecx,0x4
   17875:	jmp    177b2 <wget_css_parse_buffer+0x232>
   1787a:	call   11760 <__stack_chk_fail@plt>
   1787f:	nop

0000000000017880 <wget_css_parse_file>:
   17880:	endbr64 
   17884:	push   r15
   17886:	push   r14
   17888:	push   r13
   1788a:	push   r12
   1788c:	push   rbp
   1788d:	push   rbx
   1788e:	sub    rsp,0x1000
   17895:	or     QWORD PTR [rsp],0x0
   1789a:	sub    rsp,0xc8
   178a1:	mov    rax,QWORD PTR fs:0x28
   178aa:	mov    QWORD PTR [rsp+0x10b8],rax
   178b2:	xor    eax,eax
   178b4:	cmp    BYTE PTR [rdi],0x2d
   178b7:	mov    rbp,rdi
   178ba:	mov    r12,rsi
   178bd:	mov    r13,rdx
   178c0:	mov    r14,rcx
   178c3:	jne    17958 <wget_css_parse_file+0xd8>
   178c9:	cmp    BYTE PTR [rdi+0x1],0x0
   178cd:	jne    17958 <wget_css_parse_file+0xd8>
   178d3:	mov    rbp,rsp
   178d6:	mov    edx,0x1000
   178db:	xor    esi,esi
   178dd:	mov    rdi,rbp
   178e0:	lea    rbx,[rsp+0xb0]
   178e8:	call   108d0 <wget_buffer_init@plt>
   178ed:	jmp    178fb <wget_css_parse_file+0x7b>
   178ef:	nop
   178f0:	mov    rsi,rbx
   178f3:	mov    rdi,rbp
   178f6:	call   10ea0 <wget_buffer_memcat@plt>
   178fb:	mov    edx,0x1000
   17900:	mov    rsi,rbx
   17903:	xor    edi,edi
   17905:	call   11d60 <read@plt>
   1790a:	mov    rdx,rax
   1790d:	test   rax,rax
   17910:	jg     178f0 <wget_css_parse_file+0x70>
   17912:	mov    rsi,QWORD PTR [rsp+0x8]
   17917:	test   rsi,rsi
   1791a:	jne    179e0 <wget_css_parse_file+0x160>
   17920:	mov    rdi,rbp
   17923:	call   11300 <wget_buffer_deinit@plt>
   17928:	mov    rax,QWORD PTR [rsp+0x10b8]
   17930:	sub    rax,QWORD PTR fs:0x28
   17939:	jne    17a54 <wget_css_parse_file+0x1d4>
   1793f:	add    rsp,0x10c8
   17946:	pop    rbx
   17947:	pop    rbp
   17948:	pop    r12
   1794a:	pop    r13
   1794c:	pop    r14
   1794e:	pop    r15
   17950:	ret    
   17951:	nop    DWORD PTR [rax+0x0]
   17958:	xor    esi,esi
   1795a:	mov    rdi,rbp
   1795d:	xor    eax,eax
   1795f:	call   11070 <open@plt>
   17964:	mov    r15d,eax
   17967:	cmp    eax,0xffffffff
   1796a:	je     17990 <wget_css_parse_file+0x110>
   1796c:	lea    rsi,[rsp+0x20]
   17971:	mov    edi,eax
   17973:	call   12210 <fstat@plt>
   17978:	test   eax,eax
   1797a:	je     17a00 <wget_css_parse_file+0x180>
   17980:	mov    edi,r15d
   17983:	call   12740 <close@plt>
   17988:	jmp    17928 <wget_css_parse_file+0xa8>
   1798a:	nop    WORD PTR [rax+rax*1+0x0]
   17990:	xor    edi,edi
   17992:	mov    edx,0x5
   17997:	lea    rsi,[rip+0x33de2]        # 4b780 <base64_2_bin+0x580>
   1799e:	call   10f90 <dcgettext@plt>
   179a3:	mov    rdi,rax
   179a6:	mov    rax,QWORD PTR [rsp+0x10b8]
   179ae:	sub    rax,QWORD PTR fs:0x28
   179b7:	jne    17a54 <wget_css_parse_file+0x1d4>
   179bd:	add    rsp,0x10c8
   179c4:	mov    rsi,rbp
   179c7:	xor    eax,eax
   179c9:	pop    rbx
   179ca:	pop    rbp
   179cb:	pop    r12
   179cd:	pop    r13
   179cf:	pop    r14
   179d1:	pop    r15
   179d3:	jmp    11ea0 <wget_error_printf@plt>
   179d8:	nop    DWORD PTR [rax+rax*1+0x0]
   179e0:	mov    rdi,QWORD PTR [rsp]
   179e4:	mov    r8,r14
   179e7:	mov    rcx,r13
   179ea:	mov    rdx,r12
   179ed:	call   112e0 <wget_css_parse_buffer@plt>
   179f2:	jmp    17920 <wget_css_parse_file+0xa0>
   179f7:	nop    WORD PTR [rax+rax*1+0x0]
   17a00:	mov    rbx,QWORD PTR [rsp+0x50]
   17a05:	xor    r9d,r9d
   17a08:	mov    r8d,r15d
   17a0b:	mov    ecx,0x2
   17a10:	mov    edx,0x3
   17a15:	xor    edi,edi
   17a17:	lea    rsi,[rbx+0x1]
   17a1b:	call   123d0 <mmap@plt>
   17a20:	mov    rbp,rax
   17a23:	test   rbx,rbx
   17a26:	jne    17a38 <wget_css_parse_file+0x1b8>
   17a28:	mov    rsi,rbx
   17a2b:	mov    rdi,rbp
   17a2e:	call   10d10 <munmap@plt>
   17a33:	jmp    17980 <wget_css_parse_file+0x100>
   17a38:	mov    BYTE PTR [rax+rbx*1],0x0
   17a3c:	mov    rsi,QWORD PTR [rsp+0x50]
   17a41:	mov    r8,r14
   17a44:	mov    rcx,r13
   17a47:	mov    rdx,r12
   17a4a:	mov    rdi,rax
   17a4d:	call   112e0 <wget_css_parse_buffer@plt>
   17a52:	jmp    17a28 <wget_css_parse_file+0x1a8>
   17a54:	call   11760 <__stack_chk_fail@plt>
   17a59:	nop    DWORD PTR [rax+0x0]

0000000000017a60 <url_free>:
   17a60:	endbr64 
   17a64:	push   rbp
   17a65:	mov    rbp,rdi
   17a68:	push   rbx
   17a69:	sub    rsp,0x8
   17a6d:	mov    rdi,QWORD PTR [rdi+0x10]
   17a71:	mov    rbx,QWORD PTR [rip+0x5e570]        # 75fe8 <wget_free@@Base-0x1328>
   17a78:	test   rdi,rdi
   17a7b:	je     17a87 <url_free+0x27>
   17a7d:	call   QWORD PTR [rbx]
   17a7f:	mov    QWORD PTR [rbp+0x10],0x0
   17a87:	mov    rdi,QWORD PTR [rbp+0x18]
   17a8b:	test   rdi,rdi
   17a8e:	je     17a9a <url_free+0x3a>
   17a90:	call   QWORD PTR [rbx]
   17a92:	mov    QWORD PTR [rbp+0x18],0x0
   17a9a:	mov    rax,QWORD PTR [rbx]
   17a9d:	add    rsp,0x8
   17aa1:	mov    rdi,rbp
   17aa4:	pop    rbx
   17aa5:	pop    rbp
   17aa6:	jmp    rax
   17aa8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000017ab0 <get_url>:
   17ab0:	endbr64 
   17ab4:	mov    rax,QWORD PTR [rip+0x5e485]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   17abb:	push   r14
   17abd:	mov    r14,rcx
   17ac0:	push   r13
   17ac2:	mov    r13,rsi
   17ac5:	mov    esi,0x20
   17aca:	push   r12
   17acc:	mov    r12,rdi
   17acf:	mov    edi,0x1
   17ad4:	push   rbp
   17ad5:	push   rbx
   17ad6:	mov    rbx,rdx
   17ad9:	call   QWORD PTR [rax]
   17adb:	test   rax,rax
   17ade:	je     17b20 <get_url+0x70>
   17ae0:	mov    rsi,rbx
   17ae3:	mov    rdi,r13
   17ae6:	mov    rbp,rax
   17ae9:	call   126b0 <wget_strmemdup@plt>
   17aee:	mov    QWORD PTR [rbp+0x10],rax
   17af2:	test   rax,rax
   17af5:	je     17b60 <get_url+0xb0>
   17af7:	mov    rdi,QWORD PTR [r12+0x8]
   17afc:	mov    QWORD PTR [rbp+0x0],rbx
   17b00:	mov    QWORD PTR [rbp+0x8],r14
   17b04:	test   rdi,rdi
   17b07:	je     17b30 <get_url+0x80>
   17b09:	pop    rbx
   17b0a:	mov    rsi,rbp
   17b0d:	pop    rbp
   17b0e:	pop    r12
   17b10:	pop    r13
   17b12:	pop    r14
   17b14:	jmp    11290 <wget_vector_add@plt>
   17b19:	nop    DWORD PTR [rax+0x0]
   17b20:	pop    rbx
   17b21:	pop    rbp
   17b22:	pop    r12
   17b24:	pop    r13
   17b26:	pop    r14
   17b28:	ret    
   17b29:	nop    DWORD PTR [rax+0x0]
   17b30:	xor    esi,esi
   17b32:	mov    edi,0x10
   17b37:	call   11f00 <wget_vector_create@plt>
   17b3c:	lea    rsi,[rip+0xffffffffffffff1d]        # 17a60 <url_free>
   17b43:	mov    QWORD PTR [r12+0x8],rax
   17b48:	mov    rdi,rax
   17b4b:	call   120e0 <wget_vector_set_destructor@plt>
   17b50:	mov    rdi,QWORD PTR [r12+0x8]
   17b55:	jmp    17b09 <get_url+0x59>
   17b57:	nop    WORD PTR [rax+rax*1+0x0]
   17b60:	mov    rax,QWORD PTR [rip+0x5e481]        # 75fe8 <wget_free@@Base-0x1328>
   17b67:	pop    rbx
   17b68:	mov    rdi,rbp
   17b6b:	pop    rbp
   17b6c:	pop    r12
   17b6e:	mov    rax,QWORD PTR [rax]
   17b71:	pop    r13
   17b73:	pop    r14
   17b75:	jmp    rax
   17b77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000017b80 <get_encoding>:
   17b80:	endbr64 
   17b84:	push   rbp
   17b85:	push   rbx
   17b86:	mov    rbx,rdi
   17b89:	sub    rsp,0x8
   17b8d:	mov    rbp,QWORD PTR [rdi]
   17b90:	cmp    QWORD PTR [rbp+0x0],0x0
   17b95:	je     17ba0 <get_encoding+0x20>
   17b97:	add    rsp,0x8
   17b9b:	pop    rbx
   17b9c:	pop    rbp
   17b9d:	ret    
   17b9e:	xchg   ax,ax
   17ba0:	mov    rdi,rsi
   17ba3:	mov    rsi,rdx
   17ba6:	call   126b0 <wget_strmemdup@plt>
   17bab:	lea    rdi,[rip+0x33c08]        # 4b7ba <base64_2_bin+0x5ba>
   17bb2:	mov    QWORD PTR [rbp+0x0],rax
   17bb6:	mov    rax,QWORD PTR [rbx]
   17bb9:	mov    rsi,QWORD PTR [rax]
   17bbc:	add    rsp,0x8
   17bc0:	xor    eax,eax
   17bc2:	pop    rbx
   17bc3:	pop    rbp
   17bc4:	jmp    114b0 <wget_debug_printf@plt>
   17bc9:	nop    DWORD PTR [rax+0x0]

0000000000017bd0 <urls_to_absolute.part.0>:
   17bd0:	push   r15
   17bd2:	mov    edx,0x400
   17bd7:	lea    r15,[rip+0x33bfa]        # 4b7d8 <base64_2_bin+0x5d8>
   17bde:	push   r14
   17be0:	mov    r14,rsi
   17be3:	xor    esi,esi
   17be5:	push   r13
   17be7:	push   r12
   17be9:	mov    r12,rdi
   17bec:	push   rbp
   17bed:	xor    ebp,ebp
   17bef:	push   rbx
   17bf0:	sub    rsp,0x38
   17bf4:	mov    rax,QWORD PTR fs:0x28
   17bfd:	mov    QWORD PTR [rsp+0x28],rax
   17c02:	xor    eax,eax
   17c04:	mov    r13,rsp
   17c07:	mov    rdi,r13
   17c0a:	call   108d0 <wget_buffer_init@plt>
   17c0f:	jmp    17c2d <urls_to_absolute.part.0+0x5d>
   17c11:	nop    DWORD PTR [rax+0x0]
   17c18:	mov    rsi,QWORD PTR [rsp+0x8]
   17c1d:	mov    rdi,QWORD PTR [rsp]
   17c21:	call   126b0 <wget_strmemdup@plt>
   17c26:	mov    QWORD PTR [rbx+0x18],rax
   17c2a:	add    ebp,0x1
   17c2d:	mov    rdi,r12
   17c30:	call   10e90 <wget_vector_size@plt>
   17c35:	cmp    ebp,eax
   17c37:	jge    17c80 <urls_to_absolute.part.0+0xb0>
   17c39:	mov    esi,ebp
   17c3b:	mov    rdi,r12
   17c3e:	call   10c00 <wget_vector_get@plt>
   17c43:	mov    rcx,r13
   17c46:	mov    rdi,r14
   17c49:	mov    rsi,QWORD PTR [rax+0x10]
   17c4d:	mov    rdx,QWORD PTR [rax]
   17c50:	mov    rbx,rax
   17c53:	call   107b0 <wget_iri_relative_to_abs@plt>
   17c58:	test   rax,rax
   17c5b:	jne    17c18 <urls_to_absolute.part.0+0x48>
   17c5d:	mov    rbx,QWORD PTR [rbx+0x10]
   17c61:	mov    rsi,r15
   17c64:	xor    edi,edi
   17c66:	mov    edx,0x5
   17c6b:	call   10f90 <dcgettext@plt>
   17c70:	mov    rdi,rax
   17c73:	mov    rsi,rbx
   17c76:	xor    eax,eax
   17c78:	call   11ea0 <wget_error_printf@plt>
   17c7d:	jmp    17c2a <urls_to_absolute.part.0+0x5a>
   17c7f:	nop
   17c80:	mov    rdi,r13
   17c83:	call   11300 <wget_buffer_deinit@plt>
   17c88:	mov    rax,QWORD PTR [rsp+0x28]
   17c8d:	sub    rax,QWORD PTR fs:0x28
   17c96:	jne    17ca7 <urls_to_absolute.part.0+0xd7>
   17c98:	add    rsp,0x38
   17c9c:	pop    rbx
   17c9d:	pop    rbp
   17c9e:	pop    r12
   17ca0:	pop    r13
   17ca2:	pop    r14
   17ca4:	pop    r15
   17ca6:	ret    
   17ca7:	call   11760 <__stack_chk_fail@plt>
   17cac:	nop    DWORD PTR [rax+0x0]

0000000000017cb0 <wget_css_get_urls>:
   17cb0:	endbr64 
   17cb4:	push   rbp
   17cb5:	mov    rbp,rdx
   17cb8:	lea    rdx,[rip+0xfffffffffffffdf1]        # 17ab0 <get_url>
   17cbf:	sub    rsp,0x20
   17cc3:	mov    rax,QWORD PTR fs:0x28
   17ccc:	mov    QWORD PTR [rsp+0x18],rax
   17cd1:	xor    eax,eax
   17cd3:	test   rcx,rcx
   17cd6:	mov    QWORD PTR [rsp],rcx
   17cda:	lea    rcx,[rip+0xfffffffffffffe9f]        # 17b80 <get_encoding>
   17ce1:	mov    QWORD PTR [rsp+0x8],0x0
   17cea:	mov    r8,rsp
   17ced:	cmove  rcx,rax
   17cf1:	call   112e0 <wget_css_parse_buffer@plt>
   17cf6:	mov    rax,QWORD PTR [rsp+0x8]
   17cfb:	test   rbp,rbp
   17cfe:	je     17d05 <wget_css_get_urls+0x55>
   17d00:	test   rax,rax
   17d03:	jne    17d20 <wget_css_get_urls+0x70>
   17d05:	mov    rdx,QWORD PTR [rsp+0x18]
   17d0a:	sub    rdx,QWORD PTR fs:0x28
   17d13:	jne    17d32 <wget_css_get_urls+0x82>
   17d15:	add    rsp,0x20
   17d19:	pop    rbp
   17d1a:	ret    
   17d1b:	nop    DWORD PTR [rax+rax*1+0x0]
   17d20:	mov    rdi,rax
   17d23:	mov    rsi,rbp
   17d26:	call   17bd0 <urls_to_absolute.part.0>
   17d2b:	mov    rax,QWORD PTR [rsp+0x8]
   17d30:	jmp    17d05 <wget_css_get_urls+0x55>
   17d32:	call   11760 <__stack_chk_fail@plt>
   17d37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000017d40 <wget_css_get_urls_from_localfile>:
   17d40:	endbr64 
   17d44:	push   rbp
   17d45:	mov    rbp,rsi
   17d48:	lea    rsi,[rip+0xfffffffffffffd61]        # 17ab0 <get_url>
   17d4f:	sub    rsp,0x20
   17d53:	mov    rax,QWORD PTR fs:0x28
   17d5c:	mov    QWORD PTR [rsp+0x18],rax
   17d61:	xor    eax,eax
   17d63:	test   rdx,rdx
   17d66:	mov    QWORD PTR [rsp],rdx
   17d6a:	lea    rdx,[rip+0xfffffffffffffe0f]        # 17b80 <get_encoding>
   17d71:	mov    QWORD PTR [rsp+0x8],0x0
   17d7a:	mov    rcx,rsp
   17d7d:	cmove  rdx,rax
   17d81:	call   121c0 <wget_css_parse_file@plt>
   17d86:	mov    rax,QWORD PTR [rsp+0x8]
   17d8b:	test   rbp,rbp
   17d8e:	je     17d95 <wget_css_get_urls_from_localfile+0x55>
   17d90:	test   rax,rax
   17d93:	jne    17db0 <wget_css_get_urls_from_localfile+0x70>
   17d95:	mov    rdx,QWORD PTR [rsp+0x18]
   17d9a:	sub    rdx,QWORD PTR fs:0x28
   17da3:	jne    17dc2 <wget_css_get_urls_from_localfile+0x82>
   17da5:	add    rsp,0x20
   17da9:	pop    rbp
   17daa:	ret    
   17dab:	nop    DWORD PTR [rax+rax*1+0x0]
   17db0:	mov    rdi,rax
   17db3:	mov    rsi,rbp
   17db6:	call   17bd0 <urls_to_absolute.part.0>
   17dbb:	mov    rax,QWORD PTR [rsp+0x8]
   17dc0:	jmp    17d95 <wget_css_get_urls_from_localfile+0x55>
   17dc2:	call   11760 <__stack_chk_fail@plt>
   17dc7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000017dd0 <identity>:
   17dd0:	endbr64 
   17dd4:	mov    rax,QWORD PTR [rdi]
   17dd7:	test   rax,rax
   17dda:	je     17df0 <identity+0x20>
   17ddc:	sub    rsp,0x8
   17de0:	mov    rdi,QWORD PTR [rdi+0x20]
   17de4:	call   rax
   17de6:	xor    eax,eax
   17de8:	add    rsp,0x8
   17dec:	ret    
   17ded:	nop    DWORD PTR [rax]
   17df0:	xor    eax,eax
   17df2:	ret    
   17df3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   17dfe:	xchg   ax,ax

0000000000017e00 <wget_decompress_open>:
   17e00:	endbr64 
   17e04:	push   r13
   17e06:	mov    r13,rdx
   17e09:	push   r12
   17e0b:	push   rbp
   17e0c:	mov    rbp,rsi
   17e0f:	mov    esi,0x30
   17e14:	push   rbx
   17e15:	mov    ebx,edi
   17e17:	mov    edi,0x1
   17e1c:	sub    rsp,0x8
   17e20:	mov    rax,QWORD PTR [rip+0x5e119]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   17e27:	call   QWORD PTR [rax]
   17e29:	mov    r12,rax
   17e2c:	test   rax,rax
   17e2f:	je     17e46 <wget_decompress_open+0x46>
   17e31:	cmp    QWORD PTR [rax+0x10],0x0
   17e36:	je     17e58 <wget_decompress_open+0x58>
   17e38:	mov    DWORD PTR [r12+0x28],ebx
   17e3d:	mov    QWORD PTR [r12],rbp
   17e41:	mov    QWORD PTR [r12+0x20],r13
   17e46:	add    rsp,0x8
   17e4a:	mov    rax,r12
   17e4d:	pop    rbx
   17e4e:	pop    rbp
   17e4f:	pop    r12
   17e51:	pop    r13
   17e53:	ret    
   17e54:	nop    DWORD PTR [rax+0x0]
   17e58:	test   ebx,ebx
   17e5a:	jne    17e70 <wget_decompress_open+0x70>
   17e5c:	lea    rax,[rip+0xffffffffffffff6d]        # 17dd0 <identity>
   17e63:	mov    QWORD PTR [r12+0x10],rax
   17e68:	jmp    17e38 <wget_decompress_open+0x38>
   17e6a:	nop    WORD PTR [rax+rax*1+0x0]
   17e70:	lea    rdi,[rip+0x33989]        # 4b800 <base64_2_bin+0x600>
   17e77:	xor    eax,eax
   17e79:	call   114b0 <wget_debug_printf@plt>
   17e7e:	jmp    17e5c <wget_decompress_open+0x5c>

0000000000017e80 <wget_decompress_close>:
   17e80:	endbr64 
   17e84:	test   rdi,rdi
   17e87:	je     17eb0 <wget_decompress_close+0x30>
   17e89:	push   rbp
   17e8a:	mov    rax,QWORD PTR [rdi+0x18]
   17e8e:	mov    rbp,rdi
   17e91:	test   rax,rax
   17e94:	je     17e98 <wget_decompress_close+0x18>
   17e96:	call   rax
   17e98:	mov    rax,QWORD PTR [rip+0x5e149]        # 75fe8 <wget_free@@Base-0x1328>
   17e9f:	mov    rdi,rbp
   17ea2:	pop    rbp
   17ea3:	mov    rax,QWORD PTR [rax]
   17ea6:	jmp    rax
   17ea8:	nop    DWORD PTR [rax+rax*1+0x0]
   17eb0:	ret    
   17eb1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   17ebc:	nop    DWORD PTR [rax+0x0]

0000000000017ec0 <wget_decompress>:
   17ec0:	endbr64 
   17ec4:	test   rdi,rdi
   17ec7:	je     17ef0 <wget_decompress+0x30>
   17ec9:	push   rbp
   17eca:	mov    rbp,rdi
   17ecd:	call   QWORD PTR [rdi+0x10]
   17ed0:	mov    esi,eax
   17ed2:	test   eax,eax
   17ed4:	je     17ee4 <wget_decompress+0x24>
   17ed6:	mov    rax,QWORD PTR [rbp+0x8]
   17eda:	test   rax,rax
   17edd:	je     17ee4 <wget_decompress+0x24>
   17edf:	mov    rdi,rbp
   17ee2:	call   rax
   17ee4:	xor    eax,eax
   17ee6:	pop    rbp
   17ee7:	ret    
   17ee8:	nop    DWORD PTR [rax+rax*1+0x0]
   17ef0:	xor    eax,eax
   17ef2:	ret    
   17ef3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   17efe:	xchg   ax,ax

0000000000017f00 <wget_decompress_set_error_handler>:
   17f00:	endbr64 
   17f04:	test   rdi,rdi
   17f07:	je     17f0d <wget_decompress_set_error_handler+0xd>
   17f09:	mov    QWORD PTR [rdi+0x8],rsi
   17f0d:	ret    
   17f0e:	xchg   ax,ax

0000000000017f10 <wget_decompress_get_context>:
   17f10:	endbr64 
   17f14:	test   rdi,rdi
   17f17:	je     17f20 <wget_decompress_get_context+0x10>
   17f19:	mov    rax,QWORD PTR [rdi+0x20]
   17f1d:	ret    
   17f1e:	xchg   ax,ax
   17f20:	xor    eax,eax
   17f22:	ret    
   17f23:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   17f2e:	xchg   ax,ax

0000000000017f30 <wget_content_encoding_by_name>:
   17f30:	endbr64 
   17f34:	push   r13
   17f36:	push   r12
   17f38:	push   rbp
   17f39:	push   rbx
   17f3a:	sub    rsp,0x8
   17f3e:	test   rdi,rdi
   17f41:	je     17f92 <wget_content_encoding_by_name+0x62>
   17f43:	mov    r13,rdi
   17f46:	xor    ebx,ebx
   17f48:	lea    rbp,[rip+0x5f2d1]        # 77220 <_encoding_names>
   17f4f:	nop
   17f50:	lea    rdi,[rbx+rbx*8]
   17f54:	mov    rsi,r13
   17f57:	mov    r12d,ebx
   17f5a:	add    rdi,rbp
   17f5d:	call   11c60 <strcmp@plt>
   17f62:	test   eax,eax
   17f64:	je     17f84 <wget_content_encoding_by_name+0x54>
   17f66:	add    rbx,0x1
   17f6a:	cmp    rbx,0x9
   17f6e:	jne    17f50 <wget_content_encoding_by_name+0x20>
   17f70:	mov    rsi,r13
   17f73:	lea    rdi,[rip+0x338b3]        # 4b82d <base64_2_bin+0x62d>
   17f7a:	call   11c60 <strcmp@plt>
   17f7f:	neg    eax
   17f81:	sbb    r12d,r12d
   17f84:	add    rsp,0x8
   17f88:	mov    eax,r12d
   17f8b:	pop    rbx
   17f8c:	pop    rbp
   17f8d:	pop    r12
   17f8f:	pop    r13
   17f91:	ret    
   17f92:	mov    r12d,0xffffffff
   17f98:	jmp    17f84 <wget_content_encoding_by_name+0x54>
   17f9a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000017fa0 <wget_content_encoding_to_name>:
   17fa0:	endbr64 
   17fa4:	xor    eax,eax
   17fa6:	cmp    edi,0x8
   17fa9:	ja     17fbc <wget_content_encoding_to_name+0x1c>
   17fab:	movsxd rdi,edi
   17fae:	lea    rdx,[rip+0x5f26b]        # 77220 <_encoding_names>
   17fb5:	lea    rax,[rdi+rdi*8]
   17fb9:	add    rax,rdx
   17fbc:	ret    
   17fbd:	nop    DWORD PTR [rax]

0000000000017fc0 <hash_dns>:
   17fc0:	endbr64 
   17fc4:	mov    rcx,QWORD PTR [rdi]
   17fc7:	movzx  eax,WORD PTR [rdi+0x10]
   17fcb:	movzx  edx,BYTE PTR [rcx]
   17fce:	test   dl,dl
   17fd0:	je     17fe8 <hash_dns+0x28>
   17fd2:	nop    WORD PTR [rax+rax*1+0x0]
   17fd8:	imul   eax,eax,0x65
   17fdb:	add    rcx,0x1
   17fdf:	add    eax,edx
   17fe1:	movzx  edx,BYTE PTR [rcx]
   17fe4:	test   dl,dl
   17fe6:	jne    17fd8 <hash_dns+0x18>
   17fe8:	ret    
   17fe9:	nop    DWORD PTR [rax+0x0]

0000000000017ff0 <free_dns>:
   17ff0:	endbr64 
   17ff4:	push   rbp
   17ff5:	mov    rbp,rdi
   17ff8:	mov    rdi,QWORD PTR [rdi+0x8]
   17ffc:	call   11a70 <freeaddrinfo@plt>
   18001:	mov    rax,QWORD PTR [rip+0x5dfe0]        # 75fe8 <wget_free@@Base-0x1328>
   18008:	mov    rdi,rbp
   1800b:	pop    rbp
   1800c:	mov    rax,QWORD PTR [rax]
   1800f:	jmp    rax
   18011:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1801c:	nop    DWORD PTR [rax+0x0]

0000000000018020 <compare_dns>:
   18020:	endbr64 
   18024:	movzx  eax,WORD PTR [rsi+0x10]
   18028:	cmp    WORD PTR [rdi+0x10],ax
   1802c:	jb     18050 <compare_dns+0x30>
   1802e:	ja     18040 <compare_dns+0x20>
   18030:	mov    rsi,QWORD PTR [rsi]
   18033:	mov    rdi,QWORD PTR [rdi]
   18036:	jmp    10410 <wget_strcasecmp@plt>
   1803b:	nop    DWORD PTR [rax+rax*1+0x0]
   18040:	mov    eax,0x1
   18045:	ret    
   18046:	cs nop WORD PTR [rax+rax*1+0x0]
   18050:	mov    eax,0xffffffff
   18055:	ret    
   18056:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000018060 <wget_dns_cache_free>:
   18060:	endbr64 
   18064:	test   rdi,rdi
   18067:	je     180c0 <wget_dns_cache_free+0x60>
   18069:	push   rbx
   1806a:	mov    rax,QWORD PTR [rdi]
   1806d:	mov    rbx,rdi
   18070:	test   rax,rax
   18073:	je     180b6 <wget_dns_cache_free+0x56>
   18075:	mov    rdi,QWORD PTR [rax+0x8]
   18079:	call   12040 <wget_thread_mutex_lock@plt>
   1807e:	mov    rdi,QWORD PTR [rbx]
   18081:	call   10950 <wget_hashmap_free@plt>
   18086:	mov    rax,QWORD PTR [rbx]
   18089:	mov    rdi,QWORD PTR [rax+0x8]
   1808d:	call   117c0 <wget_thread_mutex_unlock@plt>
   18092:	mov    rax,QWORD PTR [rbx]
   18095:	lea    rdi,[rax+0x8]
   18099:	call   11e70 <wget_thread_mutex_destroy@plt>
   1809e:	mov    rdi,QWORD PTR [rbx]
   180a1:	test   rdi,rdi
   180a4:	je     180b6 <wget_dns_cache_free+0x56>
   180a6:	mov    rax,QWORD PTR [rip+0x5df3b]        # 75fe8 <wget_free@@Base-0x1328>
   180ad:	call   QWORD PTR [rax]
   180af:	mov    QWORD PTR [rbx],0x0
   180b6:	pop    rbx
   180b7:	ret    
   180b8:	nop    DWORD PTR [rax+rax*1+0x0]
   180c0:	ret    
   180c1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   180cc:	nop    DWORD PTR [rax+0x0]

00000000000180d0 <wget_dns_cache_init>:
   180d0:	endbr64 
   180d4:	push   r12
   180d6:	mov    esi,0x10
   180db:	push   rbp
   180dc:	push   rbx
   180dd:	mov    rbx,rdi
   180e0:	mov    edi,0x1
   180e5:	sub    rsp,0x10
   180e9:	mov    rax,QWORD PTR fs:0x28
   180f2:	mov    QWORD PTR [rsp+0x8],rax
   180f7:	xor    eax,eax
   180f9:	mov    rax,QWORD PTR [rip+0x5de40]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   18100:	call   QWORD PTR [rax]
   18102:	mov    QWORD PTR [rsp],rax
   18106:	test   rax,rax
   18109:	je     181aa <wget_dns_cache_init+0xda>
   1810f:	lea    rdi,[rax+0x8]
   18113:	call   10530 <wget_thread_mutex_init@plt>
   18118:	mov    r12d,eax
   1811b:	test   eax,eax
   1811d:	jne    18190 <wget_dns_cache_init+0xc0>
   1811f:	mov    rbp,QWORD PTR [rsp]
   18123:	lea    rdx,[rip+0xfffffffffffffef6]        # 18020 <compare_dns>
   1812a:	mov    edi,0x10
   1812f:	lea    rsi,[rip+0xfffffffffffffe8a]        # 17fc0 <hash_dns>
   18136:	call   104c0 <wget_hashmap_create@plt>
   1813b:	mov    QWORD PTR [rbp+0x0],rax
   1813f:	test   rax,rax
   18142:	je     181b7 <wget_dns_cache_init+0xe7>
   18144:	mov    rax,QWORD PTR [rsp]
   18148:	lea    rbp,[rip+0xfffffffffffffea1]        # 17ff0 <free_dns>
   1814f:	mov    rsi,rbp
   18152:	mov    rdi,QWORD PTR [rax]
   18155:	call   10b20 <wget_hashmap_set_key_destructor@plt>
   1815a:	mov    rax,QWORD PTR [rsp]
   1815e:	mov    rsi,rbp
   18161:	mov    rdi,QWORD PTR [rax]
   18164:	call   105d0 <wget_hashmap_set_value_destructor@plt>
   18169:	mov    rax,QWORD PTR [rsp]
   1816d:	mov    QWORD PTR [rbx],rax
   18170:	mov    rax,QWORD PTR [rsp+0x8]
   18175:	sub    rax,QWORD PTR fs:0x28
   1817e:	jne    181b2 <wget_dns_cache_init+0xe2>
   18180:	add    rsp,0x10
   18184:	mov    eax,r12d
   18187:	pop    rbx
   18188:	pop    rbp
   18189:	pop    r12
   1818b:	ret    
   1818c:	nop    DWORD PTR [rax+0x0]
   18190:	mov    rdi,QWORD PTR [rsp]
   18194:	mov    r12d,0xfffffffd
   1819a:	test   rdi,rdi
   1819d:	je     18170 <wget_dns_cache_init+0xa0>
   1819f:	mov    rax,QWORD PTR [rip+0x5de42]        # 75fe8 <wget_free@@Base-0x1328>
   181a6:	call   QWORD PTR [rax]
   181a8:	jmp    18170 <wget_dns_cache_init+0xa0>
   181aa:	mov    r12d,0xfffffffe
   181b0:	jmp    18170 <wget_dns_cache_init+0xa0>
   181b2:	call   11760 <__stack_chk_fail@plt>
   181b7:	mov    rdi,rsp
   181ba:	mov    r12d,0xfffffffe
   181c0:	call   106a0 <wget_dns_cache_free@plt>
   181c5:	jmp    18170 <wget_dns_cache_init+0xa0>
   181c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000181d0 <wget_dns_cache_get>:
   181d0:	endbr64 
   181d4:	push   rbx
   181d5:	sub    rsp,0x30
   181d9:	mov    rax,QWORD PTR fs:0x28
   181e2:	mov    QWORD PTR [rsp+0x28],rax
   181e7:	xor    eax,eax
   181e9:	test   rdi,rdi
   181ec:	je     1825d <wget_dns_cache_get+0x8d>
   181ee:	mov    rbx,rdi
   181f1:	mov    rdi,QWORD PTR [rdi+0x8]
   181f5:	pxor   xmm0,xmm0
   181f9:	mov    QWORD PTR [rsp+0x10],rsi
   181fe:	movups XMMWORD PTR [rsp+0x18],xmm0
   18203:	mov    WORD PTR [rsp+0x20],dx
   18208:	call   12040 <wget_thread_mutex_lock@plt>
   1820d:	mov    rdi,QWORD PTR [rbx]
   18210:	lea    rdx,[rsp+0x8]
   18215:	lea    rsi,[rsp+0x10]
   1821a:	call   10520 <wget_hashmap_get@plt>
   1821f:	test   eax,eax
   18221:	jne    1822c <wget_dns_cache_get+0x5c>
   18223:	mov    QWORD PTR [rsp+0x8],0x0
   1822c:	mov    rdi,QWORD PTR [rbx+0x8]
   18230:	call   117c0 <wget_thread_mutex_unlock@plt>
   18235:	mov    rax,QWORD PTR [rsp+0x8]
   1823a:	test   rax,rax
   1823d:	je     1825d <wget_dns_cache_get+0x8d>
   1823f:	movzx  edx,WORD PTR [rax+0x10]
   18243:	mov    rsi,QWORD PTR [rax]
   18246:	lea    rdi,[rip+0x335e5]        # 4b832 <base64_2_bin+0x632>
   1824d:	xor    eax,eax
   1824f:	call   114b0 <wget_debug_printf@plt>
   18254:	mov    rax,QWORD PTR [rsp+0x8]
   18259:	mov    rax,QWORD PTR [rax+0x8]
   1825d:	mov    rdx,QWORD PTR [rsp+0x28]
   18262:	sub    rdx,QWORD PTR fs:0x28
   1826b:	jne    18273 <wget_dns_cache_get+0xa3>
   1826d:	add    rsp,0x30
   18271:	pop    rbx
   18272:	ret    
   18273:	call   11760 <__stack_chk_fail@plt>
   18278:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000018280 <wget_dns_cache_add>:
   18280:	endbr64 
   18284:	push   r15
   18286:	push   r14
   18288:	mov    r14d,edx
   1828b:	push   r13
   1828d:	push   r12
   1828f:	push   rbp
   18290:	push   rbx
   18291:	sub    rsp,0x48
   18295:	mov    rax,QWORD PTR fs:0x28
   1829e:	mov    QWORD PTR [rsp+0x38],rax
   182a3:	xor    eax,eax
   182a5:	test   rsi,rsi
   182a8:	sete   al
   182ab:	test   rcx,rcx
   182ae:	sete   dl
   182b1:	or     al,dl
   182b3:	jne    183c8 <wget_dns_cache_add+0x148>
   182b9:	mov    rbx,rdi
   182bc:	test   rdi,rdi
   182bf:	je     183c8 <wget_dns_cache_add+0x148>
   182c5:	mov    rdi,QWORD PTR [rdi+0x8]
   182c9:	pxor   xmm0,xmm0
   182cd:	mov    QWORD PTR [rsp+0x20],rsi
   182d2:	mov    r12,rsi
   182d5:	movups XMMWORD PTR [rsp+0x28],xmm0
   182da:	mov    r13,rcx
   182dd:	mov    WORD PTR [rsp+0x30],r14w
   182e3:	call   12040 <wget_thread_mutex_lock@plt>
   182e8:	mov    rdi,QWORD PTR [rbx]
   182eb:	lea    rdx,[rsp+0x18]
   182f0:	lea    rsi,[rsp+0x20]
   182f5:	call   10520 <wget_hashmap_get@plt>
   182fa:	mov    r15d,eax
   182fd:	test   eax,eax
   182ff:	jne    18390 <wget_dns_cache_add+0x110>
   18305:	mov    rdi,r12
   18308:	call   10ab0 <strlen@plt>
   1830d:	lea    rdx,[rax+0x1]
   18311:	lea    rdi,[rax+0x19]
   18315:	mov    rax,QWORD PTR [rip+0x5dcb4]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   1831c:	mov    QWORD PTR [rsp+0x8],rdx
   18321:	call   QWORD PTR [rax]
   18323:	mov    rdx,QWORD PTR [rsp+0x8]
   18328:	test   rax,rax
   1832b:	mov    QWORD PTR [rsp+0x18],rax
   18330:	mov    rbp,rax
   18333:	je     183d0 <wget_dns_cache_add+0x150>
   18339:	lea    rdi,[rax+0x18]
   1833d:	mov    WORD PTR [rax+0x10],r14w
   18342:	mov    rsi,r12
   18345:	mov    QWORD PTR [rax],rdi
   18348:	call   11220 <memcpy@plt>
   1834d:	mov    rax,QWORD PTR [r13+0x0]
   18351:	mov    rdi,QWORD PTR [rbx]
   18354:	mov    rdx,rbp
   18357:	mov    rsi,rbp
   1835a:	mov    QWORD PTR [rbp+0x8],rax
   1835e:	call   10c90 <wget_hashmap_put@plt>
   18363:	mov    rdi,QWORD PTR [rbx+0x8]
   18367:	call   117c0 <wget_thread_mutex_unlock@plt>
   1836c:	mov    rax,QWORD PTR [rsp+0x38]
   18371:	sub    rax,QWORD PTR fs:0x28
   1837a:	jne    183e1 <wget_dns_cache_add+0x161>
   1837c:	add    rsp,0x48
   18380:	mov    eax,r15d
   18383:	pop    rbx
   18384:	pop    rbp
   18385:	pop    r12
   18387:	pop    r13
   18389:	pop    r14
   1838b:	pop    r15
   1838d:	ret    
   1838e:	xchg   ax,ax
   18390:	mov    rdi,QWORD PTR [rbx+0x8]
   18394:	call   117c0 <wget_thread_mutex_unlock@plt>
   18399:	mov    rax,QWORD PTR [rsp+0x18]
   1839e:	mov    rdi,QWORD PTR [r13+0x0]
   183a2:	mov    rax,QWORD PTR [rax+0x8]
   183a6:	cmp    rdi,rax
   183a9:	je     183b9 <wget_dns_cache_add+0x139>
   183ab:	call   11a70 <freeaddrinfo@plt>
   183b0:	mov    rax,QWORD PTR [rsp+0x18]
   183b5:	mov    rax,QWORD PTR [rax+0x8]
   183b9:	mov    QWORD PTR [r13+0x0],rax
   183bd:	xor    r15d,r15d
   183c0:	jmp    1836c <wget_dns_cache_add+0xec>
   183c2:	nop    WORD PTR [rax+rax*1+0x0]
   183c8:	mov    r15d,0xfffffffd
   183ce:	jmp    1836c <wget_dns_cache_add+0xec>
   183d0:	mov    rdi,QWORD PTR [rbx+0x8]
   183d4:	mov    r15d,0xfffffffe
   183da:	call   117c0 <wget_thread_mutex_unlock@plt>
   183df:	jmp    1836c <wget_dns_cache_add+0xec>
   183e1:	call   11760 <__stack_chk_fail@plt>
   183e6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000183f0 <wget_local_charset_encoding>:
   183f0:	endbr64 
   183f4:	sub    rsp,0x8
   183f8:	mov    edi,0xe
   183fd:	call   11560 <nl_langinfo@plt>
   18402:	test   rax,rax
   18405:	je     1840c <wget_local_charset_encoding+0x1c>
   18407:	cmp    BYTE PTR [rax],0x0
   1840a:	jne    18420 <wget_local_charset_encoding+0x30>
   1840c:	lea    rdi,[rip+0x3343c]        # 4b84f <base64_2_bin+0x64f>
   18413:	add    rsp,0x8
   18417:	jmp    127b0 <wget_strdup@plt>
   1841c:	nop    DWORD PTR [rax+0x0]
   18420:	mov    rdi,rax
   18423:	add    rsp,0x8
   18427:	jmp    127b0 <wget_strdup@plt>
   1842c:	nop    DWORD PTR [rax+0x0]

0000000000018430 <wget_memiconv>:
   18430:	endbr64 
   18434:	push   r15
   18436:	push   r14
   18438:	push   r13
   1843a:	push   r12
   1843c:	push   rbp
   1843d:	push   rbx
   1843e:	sub    rsp,0x68
   18442:	mov    QWORD PTR [rsp+0x8],r8
   18447:	mov    rax,QWORD PTR fs:0x28
   18450:	mov    QWORD PTR [rsp+0x58],rax
   18455:	xor    eax,eax
   18457:	test   rsi,rsi
   1845a:	je     186cd <wget_memiconv+0x29d>
   18460:	lea    rax,[rip+0x333ee]        # 4b855 <base64_2_bin+0x655>
   18467:	test   rdi,rdi
   1846a:	mov    r13,rdi
   1846d:	mov    r12,rcx
   18470:	cmove  r13,rax
   18474:	test   rcx,rcx
   18477:	mov    r15,rsi
   1847a:	mov    rbp,rdx
   1847d:	cmove  r12,rax
   18481:	mov    rbx,r9
   18484:	mov    rdi,r13
   18487:	mov    rsi,r12
   1848a:	call   12590 <wget_strcasecmp_ascii@plt>
   1848f:	mov    r14d,eax
   18492:	test   eax,eax
   18494:	jne    184e0 <wget_memiconv+0xb0>
   18496:	mov    r12,QWORD PTR [rsp+0x8]
   1849b:	test   r12,r12
   1849e:	je     184af <wget_memiconv+0x7f>
   184a0:	mov    rsi,rbp
   184a3:	mov    rdi,r15
   184a6:	call   126b0 <wget_strmemdup@plt>
   184ab:	mov    QWORD PTR [r12],rax
   184af:	test   rbx,rbx
   184b2:	je     184b7 <wget_memiconv+0x87>
   184b4:	mov    QWORD PTR [rbx],rbp
   184b7:	mov    rax,QWORD PTR [rsp+0x58]
   184bc:	sub    rax,QWORD PTR fs:0x28
   184c5:	jne    186ed <wget_memiconv+0x2bd>
   184cb:	add    rsp,0x68
   184cf:	mov    eax,r14d
   184d2:	pop    rbx
   184d3:	pop    rbp
   184d4:	pop    r12
   184d6:	pop    r13
   184d8:	pop    r14
   184da:	pop    r15
   184dc:	ret    
   184dd:	nop    DWORD PTR [rax]
   184e0:	mov    rsi,r13
   184e3:	mov    rdi,r12
   184e6:	call   11130 <iconv_open@plt>
   184eb:	mov    QWORD PTR [rsp+0x10],rax
   184f0:	cmp    rax,0xffffffffffffffff
   184f4:	je     18670 <wget_memiconv+0x240>
   184fa:	mov    QWORD PTR [rsp+0x38],r15
   184ff:	mov    rax,QWORD PTR [rip+0x5daca]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   18506:	lea    r15,[rbp+rbp*2+0x0]
   1850b:	add    r15,r15
   1850e:	mov    QWORD PTR [rsp+0x40],rbp
   18513:	mov    QWORD PTR [rsp+0x48],r15
   18518:	lea    rdi,[r15+0x1]
   1851c:	call   QWORD PTR [rax]
   1851e:	mov    QWORD PTR [rsp+0x50],rax
   18523:	mov    r14,rax
   18526:	test   rax,rax
   18529:	je     186d8 <wget_memiconv+0x2a8>
   1852f:	call   104b0 <__errno_location@plt>
   18534:	mov    rdi,QWORD PTR [rsp+0x10]
   18539:	lea    r8,[rsp+0x48]
   1853e:	lea    rcx,[rsp+0x50]
   18543:	mov    DWORD PTR [rax],0x0
   18549:	lea    rdx,[rsp+0x40]
   1854e:	lea    rsi,[rsp+0x38]
   18553:	mov    QWORD PTR [rsp+0x18],rax
   18558:	mov    QWORD PTR [rsp+0x28],r8
   1855d:	mov    QWORD PTR [rsp+0x20],rcx
   18562:	call   123c0 <iconv@plt>
   18567:	test   rax,rax
   1856a:	jne    18589 <wget_memiconv+0x159>
   1856c:	mov    r8,QWORD PTR [rsp+0x28]
   18571:	mov    rcx,QWORD PTR [rsp+0x20]
   18576:	xor    edx,edx
   18578:	xor    esi,esi
   1857a:	mov    rdi,QWORD PTR [rsp+0x10]
   1857f:	call   123c0 <iconv@plt>
   18584:	test   rax,rax
   18587:	je     185f8 <wget_memiconv+0x1c8>
   18589:	mov    rax,QWORD PTR [rsp+0x18]
   1858e:	mov    edx,0x5
   18593:	lea    rsi,[rip+0x33316]        # 4b8b0 <base64_2_bin+0x6b0>
   1859a:	xor    edi,edi
   1859c:	mov    r15d,DWORD PTR [rax]
   1859f:	call   10f90 <dcgettext@plt>
   185a4:	mov    rdx,r12
   185a7:	mov    rsi,r13
   185aa:	mov    rdi,rax
   185ad:	mov    ecx,r15d
   185b0:	xor    eax,eax
   185b2:	call   11ea0 <wget_error_printf@plt>
   185b7:	mov    rax,QWORD PTR [rip+0x5da2a]        # 75fe8 <wget_free@@Base-0x1328>
   185be:	mov    rdi,r14
   185c1:	call   QWORD PTR [rax]
   185c3:	mov    rax,QWORD PTR [rsp+0x8]
   185c8:	test   rax,rax
   185cb:	je     185d4 <wget_memiconv+0x1a4>
   185cd:	mov    QWORD PTR [rax],0x0
   185d4:	mov    r14d,0xffffffff
   185da:	test   rbx,rbx
   185dd:	je     185e6 <wget_memiconv+0x1b6>
   185df:	mov    QWORD PTR [rbx],0x0
   185e6:	mov    rdi,QWORD PTR [rsp+0x10]
   185eb:	call   111d0 <iconv_close@plt>
   185f0:	jmp    184b7 <wget_memiconv+0x87>
   185f5:	nop    DWORD PTR [rax]
   185f8:	mov    rcx,r12
   185fb:	mov    rdx,r13
   185fe:	lea    rdi,[rip+0x33283]        # 4b888 <base64_2_bin+0x688>
   18605:	mov    rsi,rbp
   18608:	call   114b0 <wget_debug_printf@plt>
   1860d:	cmp    QWORD PTR [rsp+0x8],0x0
   18613:	je     186b0 <wget_memiconv+0x280>
   18619:	mov    rax,r15
   1861c:	sub    rax,QWORD PTR [rsp+0x48]
   18621:	mov    rdi,r14
   18624:	lea    rsi,[rax+0x1]
   18628:	mov    rax,QWORD PTR [rip+0x5d951]        # 75f80 <wget_realloc_fn@@Base-0x1398>
   1862f:	call   QWORD PTR [rax]
   18631:	test   rax,rax
   18634:	je     186c0 <wget_memiconv+0x290>
   1863a:	mov    QWORD PTR [rsp+0x38],rax
   1863f:	mov    rdx,r15
   18642:	sub    rdx,QWORD PTR [rsp+0x48]
   18647:	mov    BYTE PTR [rax+rdx*1],0x0
   1864b:	mov    rdx,QWORD PTR [rsp+0x8]
   18650:	mov    rax,QWORD PTR [rsp+0x38]
   18655:	mov    QWORD PTR [rdx],rax
   18658:	xor    r14d,r14d
   1865b:	test   rbx,rbx
   1865e:	je     185e6 <wget_memiconv+0x1b6>
   18660:	sub    r15,QWORD PTR [rsp+0x48]
   18665:	mov    QWORD PTR [rbx],r15
   18668:	jmp    185e6 <wget_memiconv+0x1b6>
   1866d:	nop    DWORD PTR [rax]
   18670:	call   104b0 <__errno_location@plt>
   18675:	mov    edx,0x5
   1867a:	lea    rsi,[rip+0x3325f]        # 4b8e0 <base64_2_bin+0x6e0>
   18681:	xor    edi,edi
   18683:	mov    r14d,DWORD PTR [rax]
   18686:	call   10f90 <dcgettext@plt>
   1868b:	mov    rdx,r12
   1868e:	mov    rsi,r13
   18691:	mov    rdi,rax
   18694:	mov    ecx,r14d
   18697:	xor    eax,eax
   18699:	mov    r14d,0xffffffff
   1869f:	call   11ea0 <wget_error_printf@plt>
   186a4:	jmp    184b7 <wget_memiconv+0x87>
   186a9:	nop    DWORD PTR [rax+0x0]
   186b0:	mov    rax,QWORD PTR [rip+0x5d931]        # 75fe8 <wget_free@@Base-0x1328>
   186b7:	mov    rdi,r14
   186ba:	call   QWORD PTR [rax]
   186bc:	jmp    18658 <wget_memiconv+0x228>
   186be:	xchg   ax,ax
   186c0:	mov    QWORD PTR [rsp+0x38],r14
   186c5:	mov    rax,r14
   186c8:	jmp    1863f <wget_memiconv+0x20f>
   186cd:	mov    r14d,0xfffffffd
   186d3:	jmp    184b7 <wget_memiconv+0x87>
   186d8:	mov    rdi,QWORD PTR [rsp+0x10]
   186dd:	mov    r14d,0xfffffffe
   186e3:	call   111d0 <iconv_close@plt>
   186e8:	jmp    184b7 <wget_memiconv+0x87>
   186ed:	call   11760 <__stack_chk_fail@plt>
   186f2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   186fd:	nop    DWORD PTR [rax]

0000000000018700 <wget_striconv>:
   18700:	endbr64 
   18704:	push   r13
   18706:	push   r12
   18708:	push   rbp
   18709:	sub    rsp,0x10
   1870d:	mov    rax,QWORD PTR fs:0x28
   18716:	mov    QWORD PTR [rsp+0x8],rax
   1871b:	xor    eax,eax
   1871d:	test   rdi,rdi
   18720:	je     18770 <wget_striconv+0x70>
   18722:	mov    rbp,rdi
   18725:	mov    r12,rsi
   18728:	mov    r13,rdx
   1872b:	call   10ab0 <strlen@plt>
   18730:	xor    r9d,r9d
   18733:	mov    r8,rsp
   18736:	mov    rcx,r13
   18739:	mov    rdx,rax
   1873c:	mov    rsi,rbp
   1873f:	mov    rdi,r12
   18742:	call   12090 <wget_memiconv@plt>
   18747:	test   eax,eax
   18749:	jne    18770 <wget_striconv+0x70>
   1874b:	mov    rax,QWORD PTR [rsp]
   1874f:	mov    rdx,QWORD PTR [rsp+0x8]
   18754:	sub    rdx,QWORD PTR fs:0x28
   1875d:	jne    18774 <wget_striconv+0x74>
   1875f:	add    rsp,0x10
   18763:	pop    rbp
   18764:	pop    r12
   18766:	pop    r13
   18768:	ret    
   18769:	nop    DWORD PTR [rax+0x0]
   18770:	xor    eax,eax
   18772:	jmp    1874f <wget_striconv+0x4f>
   18774:	call   11760 <__stack_chk_fail@plt>
   18779:	nop    DWORD PTR [rax+0x0]

0000000000018780 <wget_str_needs_encoding>:
   18780:	endbr64 
   18784:	test   rdi,rdi
   18787:	jne    18794 <wget_str_needs_encoding+0x14>
   18789:	jmp    187a8 <wget_str_needs_encoding+0x28>
   1878b:	nop    DWORD PTR [rax+rax*1+0x0]
   18790:	add    rdi,0x1
   18794:	movzx  eax,BYTE PTR [rdi]
   18797:	test   al,al
   18799:	jg     18790 <wget_str_needs_encoding+0x10>
   1879b:	test   al,al
   1879d:	setne  al
   187a0:	ret    
   187a1:	nop    DWORD PTR [rax+0x0]
   187a8:	xor    eax,eax
   187aa:	ret    
   187ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000187b0 <wget_str_is_valid_utf8>:
   187b0:	endbr64 
   187b4:	test   rdi,rdi
   187b7:	je     18860 <wget_str_is_valid_utf8+0xb0>
   187bd:	nop    DWORD PTR [rax]
   187c0:	movzx  eax,BYTE PTR [rdi]
   187c3:	test   al,al
   187c5:	je     187d7 <wget_str_is_valid_utf8+0x27>
   187c7:	test   al,al
   187c9:	js     187e0 <wget_str_is_valid_utf8+0x30>
   187cb:	movzx  eax,BYTE PTR [rdi+0x1]
   187cf:	add    rdi,0x1
   187d3:	test   al,al
   187d5:	jne    187c7 <wget_str_is_valid_utf8+0x17>
   187d7:	mov    eax,0x1
   187dc:	ret    
   187dd:	nop    DWORD PTR [rax]
   187e0:	mov    edx,eax
   187e2:	and    edx,0xffffffe0
   187e5:	cmp    dl,0xc0
   187e8:	je     18828 <wget_str_is_valid_utf8+0x78>
   187ea:	mov    edx,eax
   187ec:	and    edx,0xfffffff0
   187ef:	cmp    dl,0xe0
   187f2:	je     18840 <wget_str_is_valid_utf8+0x90>
   187f4:	and    eax,0xfffffff8
   187f7:	cmp    al,0xf0
   187f9:	jne    18860 <wget_str_is_valid_utf8+0xb0>
   187fb:	movzx  eax,BYTE PTR [rdi+0x1]
   187ff:	and    eax,0xffffffc0
   18802:	cmp    al,0x80
   18804:	jne    18860 <wget_str_is_valid_utf8+0xb0>
   18806:	movzx  eax,BYTE PTR [rdi+0x2]
   1880a:	and    eax,0xffffffc0
   1880d:	cmp    al,0x80
   1880f:	jne    18860 <wget_str_is_valid_utf8+0xb0>
   18811:	movzx  eax,BYTE PTR [rdi+0x3]
   18815:	and    eax,0xffffffc0
   18818:	cmp    al,0x80
   1881a:	jne    18860 <wget_str_is_valid_utf8+0xb0>
   1881c:	add    rdi,0x4
   18820:	jmp    187c0 <wget_str_is_valid_utf8+0x10>
   18822:	nop    WORD PTR [rax+rax*1+0x0]
   18828:	movzx  eax,BYTE PTR [rdi+0x1]
   1882c:	and    eax,0xffffffc0
   1882f:	cmp    al,0x80
   18831:	jne    18860 <wget_str_is_valid_utf8+0xb0>
   18833:	add    rdi,0x2
   18837:	jmp    187c0 <wget_str_is_valid_utf8+0x10>
   18839:	nop    DWORD PTR [rax+0x0]
   18840:	movzx  eax,BYTE PTR [rdi+0x1]
   18844:	and    eax,0xffffffc0
   18847:	cmp    al,0x80
   18849:	jne    18860 <wget_str_is_valid_utf8+0xb0>
   1884b:	movzx  eax,BYTE PTR [rdi+0x2]
   1884f:	and    eax,0xffffffc0
   18852:	cmp    al,0x80
   18854:	jne    18860 <wget_str_is_valid_utf8+0xb0>
   18856:	add    rdi,0x3
   1885a:	jmp    187c0 <wget_str_is_valid_utf8+0x10>
   1885f:	nop
   18860:	xor    eax,eax
   18862:	ret    
   18863:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1886e:	xchg   ax,ax

0000000000018870 <wget_str_to_utf8>:
   18870:	endbr64 
   18874:	lea    rdx,[rip+0x32fe5]        # 4b860 <base64_2_bin+0x660>
   1887b:	jmp    12300 <wget_striconv@plt>

0000000000018880 <wget_utf8_to_str>:
   18880:	endbr64 
   18884:	mov    rdx,rsi
   18887:	lea    rsi,[rip+0x32fd2]        # 4b860 <base64_2_bin+0x660>
   1888e:	jmp    12300 <wget_striconv@plt>
   18893:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1889e:	xchg   ax,ax

00000000000188a0 <wget_str_to_ascii>:
   188a0:	endbr64 
   188a4:	push   r12
   188a6:	mov    r12,rdi
   188a9:	call   12700 <wget_str_needs_encoding@plt>
   188ae:	test   al,al
   188b0:	jne    188c0 <wget_str_to_ascii+0x20>
   188b2:	mov    rax,r12
   188b5:	pop    r12
   188b7:	ret    
   188b8:	nop    DWORD PTR [rax+rax*1+0x0]
   188c0:	mov    edx,0x5
   188c5:	lea    rsi,[rip+0x32f9a]        # 4b866 <base64_2_bin+0x666>
   188cc:	xor    edi,edi
   188ce:	call   10f90 <dcgettext@plt>
   188d3:	mov    rsi,r12
   188d6:	mov    rdi,rax
   188d9:	xor    eax,eax
   188db:	call   11ea0 <wget_error_printf@plt>
   188e0:	mov    rax,r12
   188e3:	pop    r12
   188e5:	ret    
   188e6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000188f0 <wget_hash_printf_hex>:
   188f0:	endbr64 
   188f4:	push   r15
   188f6:	push   r14
   188f8:	push   r13
   188fa:	mov    r13,rsi
   188fd:	mov    rsi,rcx
   18900:	push   r12
   18902:	push   rbp
   18903:	mov    ebp,edi
   18905:	push   rbx
   18906:	sub    rsp,0x1f8
   1890d:	mov    QWORD PTR [rsp+0x8],rdx
   18912:	mov    QWORD PTR [rsp+0x160],r8
   1891a:	mov    QWORD PTR [rsp+0x168],r9
   18922:	test   al,al
   18924:	je     18966 <wget_hash_printf_hex+0x76>
   18926:	movaps XMMWORD PTR [rsp+0x170],xmm0
   1892e:	movaps XMMWORD PTR [rsp+0x180],xmm1
   18936:	movaps XMMWORD PTR [rsp+0x190],xmm2
   1893e:	movaps XMMWORD PTR [rsp+0x1a0],xmm3
   18946:	movaps XMMWORD PTR [rsp+0x1b0],xmm4
   1894e:	movaps XMMWORD PTR [rsp+0x1c0],xmm5
   18956:	movaps XMMWORD PTR [rsp+0x1d0],xmm6
   1895e:	movaps XMMWORD PTR [rsp+0x1e0],xmm7
   18966:	mov    rax,QWORD PTR fs:0x28
   1896f:	mov    QWORD PTR [rsp+0x138],rax
   18977:	xor    eax,eax
   18979:	lea    rax,[rsp+0x230]
   18981:	lea    rdx,[rsp+0x18]
   18986:	mov    QWORD PTR [rsp+0x10],0x0
   1898f:	mov    QWORD PTR [rsp+0x20],rax
   18994:	lea    rdi,[rsp+0x10]
   18999:	lea    rax,[rsp+0x140]
   189a1:	mov    DWORD PTR [rsp+0x18],0x20
   189a9:	mov    DWORD PTR [rsp+0x1c],0x30
   189b1:	mov    QWORD PTR [rsp+0x28],rax
   189b6:	call   11aa0 <wget_vasprintf@plt>
   189bb:	mov    rsi,QWORD PTR [rsp+0x10]
   189c0:	mov    r15,rax
   189c3:	test   rsi,rsi
   189c6:	mov    QWORD PTR [rsp],rsi
   189ca:	je     18a3d <wget_hash_printf_hex+0x14d>
   189cc:	mov    edi,ebp
   189ce:	call   10880 <wget_hash_get_len@plt>
   189d3:	mov    rsi,QWORD PTR [rsp]
   189d7:	movsxd r12,eax
   189da:	cmp    r12,0x100
   189e1:	ja     18a70 <wget_hash_printf_hex+0x180>
   189e7:	lea    rbx,[rsp+0x30]
   189ec:	mov    r14,rbx
   189ef:	mov    edi,ebp
   189f1:	mov    rcx,r14
   189f4:	mov    rdx,r15
   189f7:	call   10740 <wget_hash_fast@plt>
   189fc:	mov    ebp,eax
   189fe:	test   eax,eax
   18a00:	jne    18ab0 <wget_hash_printf_hex+0x1c0>
   18a06:	mov    rcx,QWORD PTR [rsp+0x8]
   18a0b:	mov    rdx,r13
   18a0e:	mov    rsi,r12
   18a11:	mov    rdi,r14
   18a14:	call   11a80 <wget_memtohex@plt>
   18a19:	cmp    r14,rbx
   18a1c:	je     18a2a <wget_hash_printf_hex+0x13a>
   18a1e:	mov    rax,QWORD PTR [rip+0x5d5c3]        # 75fe8 <wget_free@@Base-0x1328>
   18a25:	mov    rdi,r14
   18a28:	call   QWORD PTR [rax]
   18a2a:	mov    rdi,QWORD PTR [rsp+0x10]
   18a2f:	test   rdi,rdi
   18a32:	je     18a3d <wget_hash_printf_hex+0x14d>
   18a34:	mov    rax,QWORD PTR [rip+0x5d5ad]        # 75fe8 <wget_free@@Base-0x1328>
   18a3b:	call   QWORD PTR [rax]
   18a3d:	mov    rax,QWORD PTR [rsp+0x138]
   18a45:	sub    rax,QWORD PTR fs:0x28
   18a4e:	jne    18aef <wget_hash_printf_hex+0x1ff>
   18a54:	add    rsp,0x1f8
   18a5b:	pop    rbx
   18a5c:	pop    rbp
   18a5d:	pop    r12
   18a5f:	pop    r13
   18a61:	pop    r14
   18a63:	pop    r15
   18a65:	ret    
   18a66:	cs nop WORD PTR [rax+rax*1+0x0]
   18a70:	mov    rax,QWORD PTR [rip+0x5d559]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   18a77:	mov    rdi,r12
   18a7a:	call   QWORD PTR [rax]
   18a7c:	mov    r14,rax
   18a7f:	test   rax,rax
   18a82:	jne    18ae0 <wget_hash_printf_hex+0x1f0>
   18a84:	xor    edi,edi
   18a86:	mov    edx,0x5
   18a8b:	lea    rsi,[rip+0x32e96]        # 4b928 <base64_2_bin+0x728>
   18a92:	call   10f90 <dcgettext@plt>
   18a97:	mov    rdx,r12
   18a9a:	lea    rsi,[rip+0x32eaf]        # 4b950 <__func__.0>
   18aa1:	mov    rdi,rax
   18aa4:	xor    eax,eax
   18aa6:	call   11ea0 <wget_error_printf@plt>
   18aab:	jmp    18a2a <wget_hash_printf_hex+0x13a>
   18ab0:	mov    BYTE PTR [r13+0x0],0x0
   18ab5:	xor    edi,edi
   18ab7:	mov    edx,0x5
   18abc:	lea    rsi,[rip+0x32e50]        # 4b913 <base64_2_bin+0x713>
   18ac3:	call   10f90 <dcgettext@plt>
   18ac8:	mov    esi,ebp
   18aca:	mov    rdi,rax
   18acd:	xor    eax,eax
   18acf:	call   11ea0 <wget_error_printf@plt>
   18ad4:	jmp    18a19 <wget_hash_printf_hex+0x129>
   18ad9:	nop    DWORD PTR [rax+0x0]
   18ae0:	mov    rsi,QWORD PTR [rsp+0x10]
   18ae5:	lea    rbx,[rsp+0x30]
   18aea:	jmp    189ef <wget_hash_printf_hex+0xff>
   18aef:	call   11760 <__stack_chk_fail@plt>
   18af4:	cs nop WORD PTR [rax+rax*1+0x0]
   18afe:	xchg   ax,ax

0000000000018b00 <wget_hash_get_algorithm>:
   18b00:	endbr64 
   18b04:	push   r12
   18b06:	push   rbp
   18b07:	mov    rbp,rdi
   18b0a:	sub    rsp,0x8
   18b0e:	test   rdi,rdi
   18b11:	je     18c20 <wget_hash_get_algorithm+0x120>
   18b17:	movzx  eax,BYTE PTR [rdi]
   18b1a:	and    eax,0xffffffdf
   18b1d:	cmp    al,0x53
   18b1f:	jne    18c50 <wget_hash_get_algorithm+0x150>
   18b25:	lea    rsi,[rip+0x32e39]        # 4b965 <__func__.0+0x15>
   18b2c:	mov    r12d,0x2
   18b32:	call   12590 <wget_strcasecmp_ascii@plt>
   18b37:	test   eax,eax
   18b39:	je     18c43 <wget_hash_get_algorithm+0x143>
   18b3f:	lea    rsi,[rip+0x32e25]        # 4b96b <__func__.0+0x1b>
   18b46:	mov    rdi,rbp
   18b49:	call   12590 <wget_strcasecmp_ascii@plt>
   18b4e:	test   eax,eax
   18b50:	je     18c43 <wget_hash_get_algorithm+0x143>
   18b56:	lea    rsi,[rip+0x32e13]        # 4b970 <__func__.0+0x20>
   18b5d:	mov    rdi,rbp
   18b60:	mov    r12d,0x5
   18b66:	call   12590 <wget_strcasecmp_ascii@plt>
   18b6b:	test   eax,eax
   18b6d:	je     18c43 <wget_hash_get_algorithm+0x143>
   18b73:	lea    rsi,[rip+0x32dfe]        # 4b978 <__func__.0+0x28>
   18b7a:	mov    rdi,rbp
   18b7d:	call   12590 <wget_strcasecmp_ascii@plt>
   18b82:	test   eax,eax
   18b84:	je     18c43 <wget_hash_get_algorithm+0x143>
   18b8a:	lea    rsi,[rip+0x32dee]        # 4b97f <__func__.0+0x2f>
   18b91:	mov    rdi,rbp
   18b94:	mov    r12d,0x7
   18b9a:	call   12590 <wget_strcasecmp_ascii@plt>
   18b9f:	test   eax,eax
   18ba1:	je     18c43 <wget_hash_get_algorithm+0x143>
   18ba7:	lea    rsi,[rip+0x32dd9]        # 4b987 <__func__.0+0x37>
   18bae:	mov    rdi,rbp
   18bb1:	call   12590 <wget_strcasecmp_ascii@plt>
   18bb6:	test   eax,eax
   18bb8:	je     18c43 <wget_hash_get_algorithm+0x143>
   18bbe:	lea    rsi,[rip+0x32dc9]        # 4b98e <__func__.0+0x3e>
   18bc5:	mov    rdi,rbp
   18bc8:	mov    r12d,0x8
   18bce:	call   12590 <wget_strcasecmp_ascii@plt>
   18bd3:	test   eax,eax
   18bd5:	je     18c43 <wget_hash_get_algorithm+0x143>
   18bd7:	lea    rsi,[rip+0x32db8]        # 4b996 <__func__.0+0x46>
   18bde:	mov    rdi,rbp
   18be1:	call   12590 <wget_strcasecmp_ascii@plt>
   18be6:	test   eax,eax
   18be8:	je     18c43 <wget_hash_get_algorithm+0x143>
   18bea:	lea    rsi,[rip+0x32dac]        # 4b99d <__func__.0+0x4d>
   18bf1:	mov    rdi,rbp
   18bf4:	mov    r12d,0x6
   18bfa:	call   12590 <wget_strcasecmp_ascii@plt>
   18bff:	test   eax,eax
   18c01:	je     18c43 <wget_hash_get_algorithm+0x143>
   18c03:	lea    rsi,[rip+0x32d9b]        # 4b9a5 <__func__.0+0x55>
   18c0a:	mov    rdi,rbp
   18c0d:	call   12590 <wget_strcasecmp_ascii@plt>
   18c12:	test   eax,eax
   18c14:	je     18c43 <wget_hash_get_algorithm+0x143>
   18c16:	cs nop WORD PTR [rax+rax*1+0x0]
   18c20:	mov    edx,0x5
   18c25:	lea    rsi,[rip+0x32d8f]        # 4b9bb <__func__.0+0x6b>
   18c2c:	xor    edi,edi
   18c2e:	xor    r12d,r12d
   18c31:	call   10f90 <dcgettext@plt>
   18c36:	mov    rsi,rbp
   18c39:	mov    rdi,rax
   18c3c:	xor    eax,eax
   18c3e:	call   11ea0 <wget_error_printf@plt>
   18c43:	add    rsp,0x8
   18c47:	mov    eax,r12d
   18c4a:	pop    rbp
   18c4b:	pop    r12
   18c4d:	ret    
   18c4e:	xchg   ax,ax
   18c50:	lea    rsi,[rip+0x32d55]        # 4b9ac <__func__.0+0x5c>
   18c57:	mov    r12d,0x1
   18c5d:	call   12590 <wget_strcasecmp_ascii@plt>
   18c62:	test   eax,eax
   18c64:	je     18c43 <wget_hash_get_algorithm+0x143>
   18c66:	lea    rsi,[rip+0x32d43]        # 4b9b0 <__func__.0+0x60>
   18c6d:	mov    rdi,rbp
   18c70:	mov    r12d,0x4
   18c76:	call   12590 <wget_strcasecmp_ascii@plt>
   18c7b:	test   eax,eax
   18c7d:	je     18c43 <wget_hash_get_algorithm+0x143>
   18c7f:	lea    rsi,[rip+0x32d2e]        # 4b9b4 <__func__.0+0x64>
   18c86:	mov    rdi,rbp
   18c89:	mov    r12d,0x3
   18c8f:	call   12590 <wget_strcasecmp_ascii@plt>
   18c94:	test   eax,eax
   18c96:	jne    18c20 <wget_hash_get_algorithm+0x120>
   18c98:	jmp    18c43 <wget_hash_get_algorithm+0x143>
   18c9a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000018ca0 <wget_hash_fast>:
   18ca0:	endbr64 
   18ca4:	cmp    edi,0x8
   18ca7:	ja     18cf0 <wget_hash_fast+0x50>
   18ca9:	mov    edi,edi
   18cab:	lea    rax,[rip+0x5d04e]        # 75d00 <algorithms>
   18cb2:	mov    rax,QWORD PTR [rax+rdi*8]
   18cb6:	test   rax,rax
   18cb9:	je     18cf6 <wget_hash_fast+0x56>
   18cbb:	push   r13
   18cbd:	mov    r13,rsi
   18cc0:	push   r12
   18cc2:	mov    r12,rcx
   18cc5:	push   rbp
   18cc6:	mov    rbp,rdx
   18cc9:	call   rax
   18ccb:	xor    r9d,r9d
   18cce:	xor    ecx,ecx
   18cd0:	mov    rdx,r12
   18cd3:	mov    rsi,rbp
   18cd6:	mov    rdi,r13
   18cd9:	mov    r8,rax
   18cdc:	call   10e70 <EVP_Digest@plt>
   18ce1:	pop    rbp
   18ce2:	pop    r12
   18ce4:	cmp    eax,0x1
   18ce7:	pop    r13
   18ce9:	sbb    eax,eax
   18ceb:	ret    
   18cec:	nop    DWORD PTR [rax+0x0]
   18cf0:	mov    eax,0xfffffffd
   18cf5:	ret    
   18cf6:	mov    eax,0xfffffff4
   18cfb:	ret    
   18cfc:	nop    DWORD PTR [rax+0x0]

0000000000018d00 <wget_hash_get_len>:
   18d00:	endbr64 
   18d04:	cmp    edi,0x8
   18d07:	ja     18d30 <wget_hash_get_len+0x30>
   18d09:	mov    edi,edi
   18d0b:	lea    rax,[rip+0x5cfee]        # 75d00 <algorithms>
   18d12:	mov    rax,QWORD PTR [rax+rdi*8]
   18d16:	test   rax,rax
   18d19:	je     18d30 <wget_hash_get_len+0x30>
   18d1b:	sub    rsp,0x8
   18d1f:	call   rax
   18d21:	add    rsp,0x8
   18d25:	mov    rdi,rax
   18d28:	jmp    10a20 <EVP_MD_get_size@plt>
   18d2d:	nop    DWORD PTR [rax]
   18d30:	xor    eax,eax
   18d32:	ret    
   18d33:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   18d3e:	xchg   ax,ax

0000000000018d40 <wget_hash_init>:
   18d40:	endbr64 
   18d44:	cmp    esi,0x8
   18d47:	ja     18de8 <wget_hash_init+0xa8>
   18d4d:	mov    esi,esi
   18d4f:	lea    rax,[rip+0x5cfaa]        # 75d00 <algorithms>
   18d56:	push   r12
   18d58:	mov    r12,QWORD PTR [rax+rsi*8]
   18d5c:	push   rbp
   18d5d:	push   rbx
   18d5e:	test   r12,r12
   18d61:	je     18df5 <wget_hash_init+0xb5>
   18d67:	mov    rax,QWORD PTR [rip+0x5d262]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   18d6e:	mov    rbx,rdi
   18d71:	mov    edi,0x8
   18d76:	call   QWORD PTR [rax]
   18d78:	mov    QWORD PTR [rbx],rax
   18d7b:	mov    rbp,rax
   18d7e:	test   rax,rax
   18d81:	je     18dee <wget_hash_init+0xae>
   18d83:	call   117e0 <EVP_MD_CTX_new@plt>
   18d88:	mov    QWORD PTR [rbp+0x0],rax
   18d8c:	test   rax,rax
   18d8f:	je     18dc3 <wget_hash_init+0x83>
   18d91:	call   r12
   18d94:	xor    edx,edx
   18d96:	mov    rsi,rax
   18d99:	mov    rax,QWORD PTR [rbx]
   18d9c:	mov    rdi,QWORD PTR [rax]
   18d9f:	call   11140 <EVP_DigestInit_ex@plt>
   18da4:	mov    r8d,eax
   18da7:	xor    eax,eax
   18da9:	test   r8d,r8d
   18dac:	je     18db8 <wget_hash_init+0x78>
   18dae:	pop    rbx
   18daf:	pop    rbp
   18db0:	pop    r12
   18db2:	ret    
   18db3:	nop    DWORD PTR [rax+rax*1+0x0]
   18db8:	mov    rax,QWORD PTR [rbx]
   18dbb:	mov    rdi,QWORD PTR [rax]
   18dbe:	call   12420 <EVP_MD_CTX_free@plt>
   18dc3:	mov    rdi,QWORD PTR [rbx]
   18dc6:	test   rdi,rdi
   18dc9:	je     18ddb <wget_hash_init+0x9b>
   18dcb:	mov    rax,QWORD PTR [rip+0x5d216]        # 75fe8 <wget_free@@Base-0x1328>
   18dd2:	call   QWORD PTR [rax]
   18dd4:	mov    QWORD PTR [rbx],0x0
   18ddb:	pop    rbx
   18ddc:	mov    eax,0xffffffff
   18de1:	pop    rbp
   18de2:	pop    r12
   18de4:	ret    
   18de5:	nop    DWORD PTR [rax]
   18de8:	mov    eax,0xfffffff4
   18ded:	ret    
   18dee:	mov    eax,0xfffffffe
   18df3:	jmp    18dae <wget_hash_init+0x6e>
   18df5:	mov    eax,0xfffffff4
   18dfa:	jmp    18dae <wget_hash_init+0x6e>
   18dfc:	nop    DWORD PTR [rax+0x0]

0000000000018e00 <wget_hash>:
   18e00:	endbr64 
   18e04:	sub    rsp,0x8
   18e08:	mov    rdi,QWORD PTR [rdi]
   18e0b:	call   12670 <EVP_DigestUpdate@plt>
   18e10:	cmp    eax,0x1
   18e13:	sbb    eax,eax
   18e15:	add    rsp,0x8
   18e19:	and    eax,0xfffffffd
   18e1c:	ret    
   18e1d:	nop    DWORD PTR [rax]

0000000000018e20 <wget_hash_deinit>:
   18e20:	endbr64 
   18e24:	push   rbx
   18e25:	mov    rax,QWORD PTR [rdi]
   18e28:	mov    rbx,rdi
   18e2b:	xor    edx,edx
   18e2d:	mov    rdi,QWORD PTR [rax]
   18e30:	call   10ed0 <EVP_DigestFinal_ex@plt>
   18e35:	mov    rax,QWORD PTR [rbx]
   18e38:	mov    rdi,QWORD PTR [rax]
   18e3b:	call   12420 <EVP_MD_CTX_free@plt>
   18e40:	mov    rdi,QWORD PTR [rbx]
   18e43:	test   rdi,rdi
   18e46:	je     18e58 <wget_hash_deinit+0x38>
   18e48:	mov    rax,QWORD PTR [rip+0x5d199]        # 75fe8 <wget_free@@Base-0x1328>
   18e4f:	call   QWORD PTR [rax]
   18e51:	mov    QWORD PTR [rbx],0x0
   18e58:	xor    eax,eax
   18e5a:	pop    rbx
   18e5b:	ret    
   18e5c:	nop    DWORD PTR [rax+0x0]

0000000000018e60 <wget_hash_file_fd>:
   18e60:	endbr64 
   18e64:	push   r15
   18e66:	push   r14
   18e68:	push   r13
   18e6a:	push   r12
   18e6c:	push   rbp
   18e6d:	push   rbx
   18e6e:	lea    r11,[rsp-0x10000]
   18e76:	sub    rsp,0x1000
   18e7d:	or     QWORD PTR [rsp],0x0
   18e82:	cmp    rsp,r11
   18e85:	jne    18e76 <wget_hash_file_fd+0x16>
   18e87:	sub    rsp,0x1d8
   18e8e:	mov    QWORD PTR [rsp+0x8],rdx
   18e93:	mov    r13,rdi
   18e96:	mov    ebx,esi
   18e98:	mov    r12,r8
   18e9b:	mov    QWORD PTR [rsp+0x10],rcx
   18ea0:	mov    rbp,r9
   18ea3:	mov    rax,QWORD PTR fs:0x28
   18eac:	mov    QWORD PTR [rsp+0x101c8],rax
   18eb4:	xor    eax,eax
   18eb6:	test   rcx,rcx
   18eb9:	je     18ebe <wget_hash_file_fd+0x5e>
   18ebb:	mov    BYTE PTR [rdx],0x0
   18ebe:	cmp    ebx,0xffffffff
   18ec1:	je     190c9 <wget_hash_file_fd+0x269>
   18ec7:	lea    rsi,[rsp+0x30]
   18ecc:	mov    edi,ebx
   18ece:	call   12210 <fstat@plt>
   18ed3:	test   eax,eax
   18ed5:	jne    190c9 <wget_hash_file_fd+0x269>
   18edb:	mov    rax,QWORD PTR [rsp+0x60]
   18ee0:	test   rbp,rbp
   18ee3:	cmove  rbp,rax
   18ee7:	lea    rdx,[rbp+r12*1+0x0]
   18eec:	cmp    rdx,rax
   18eef:	jg     19210 <wget_hash_file_fd+0x3b0>
   18ef5:	mov    rcx,rbp
   18ef8:	mov    rdx,r12
   18efb:	mov    rsi,r13
   18efe:	xor    eax,eax
   18f00:	lea    rdi,[rip+0x32af9]        # 4ba00 <__func__.0+0xb0>
   18f07:	call   114b0 <wget_debug_printf@plt>
   18f0c:	mov    rdi,r13
   18f0f:	call   11520 <wget_hash_get_algorithm@plt>
   18f14:	mov    r15d,eax
   18f17:	test   eax,eax
   18f19:	je     19220 <wget_hash_file_fd+0x3c0>
   18f1f:	mov    edi,eax
   18f21:	call   10880 <wget_hash_get_len@plt>
   18f26:	movsxd r14,eax
   18f29:	cmp    r14,0x100
   18f30:	ja     18fc8 <wget_hash_file_fd+0x168>
   18f36:	xor    edi,edi
   18f38:	mov    r9,r12
   18f3b:	mov    r8d,ebx
   18f3e:	mov    ecx,0x2
   18f43:	mov    edx,0x1
   18f48:	mov    rsi,rbp
   18f4b:	call   123d0 <mmap@plt>
   18f50:	cmp    rax,0xffffffffffffffff
   18f54:	je     19000 <wget_hash_file_fd+0x1a0>
   18f5a:	mov    rdx,rbp
   18f5d:	mov    rsi,rax
   18f60:	mov    edi,r15d
   18f63:	mov    QWORD PTR [rsp+0x18],rax
   18f68:	lea    r13,[rsp+0xc0]
   18f70:	mov    rcx,r13
   18f73:	call   10740 <wget_hash_fast@plt>
   18f78:	mov    r8,QWORD PTR [rsp+0x18]
   18f7d:	test   eax,eax
   18f7f:	mov    r12d,eax
   18f82:	je     190d8 <wget_hash_file_fd+0x278>
   18f88:	mov    r12d,0xffffffff
   18f8e:	mov    rsi,rbp
   18f91:	mov    rdi,r8
   18f94:	call   10d10 <munmap@plt>
   18f99:	mov    rax,QWORD PTR [rsp+0x101c8]
   18fa1:	sub    rax,QWORD PTR fs:0x28
   18faa:	jne    1922b <wget_hash_file_fd+0x3cb>
   18fb0:	add    rsp,0x101d8
   18fb7:	mov    eax,r12d
   18fba:	pop    rbx
   18fbb:	pop    rbp
   18fbc:	pop    r12
   18fbe:	pop    r13
   18fc0:	pop    r14
   18fc2:	pop    r15
   18fc4:	ret    
   18fc5:	nop    DWORD PTR [rax]
   18fc8:	mov    edx,0x5
   18fcd:	lea    rsi,[rip+0x32a54]        # 4ba28 <__func__.0+0xd8>
   18fd4:	xor    edi,edi
   18fd6:	mov    r12d,0xffffffff
   18fdc:	call   10f90 <dcgettext@plt>
   18fe1:	mov    ecx,0x100
   18fe6:	mov    rdx,r14
   18fe9:	lea    rsi,[rip+0x32ad0]        # 4bac0 <__func__.0>
   18ff0:	mov    rdi,rax
   18ff3:	xor    eax,eax
   18ff5:	call   11ea0 <wget_error_printf@plt>
   18ffa:	jmp    18f99 <wget_hash_file_fd+0x139>
   18ffc:	nop    DWORD PTR [rax+0x0]
   19000:	lea    rax,[rsp+0x28]
   19005:	mov    esi,r15d
   19008:	mov    rdi,rax
   1900b:	mov    QWORD PTR [rsp+0x18],rax
   19010:	call   11550 <wget_hash_init@plt>
   19015:	mov    r12d,eax
   19018:	test   eax,eax
   1901a:	jne    19150 <wget_hash_file_fd+0x2f0>
   19020:	lea    r13,[rsp+0x1c0]
   19028:	test   rbp,rbp
   1902b:	jg     19065 <wget_hash_file_fd+0x205>
   1902d:	jmp    19110 <wget_hash_file_fd+0x2b0>
   19032:	nop    WORD PTR [rax+rax*1+0x0]
   19038:	mov    rdi,QWORD PTR [rsp+0x28]
   1903d:	mov    rdx,r15
   19040:	mov    rsi,r13
   19043:	call   11320 <wget_hash@plt>
   19048:	test   eax,eax
   1904a:	jne    19190 <wget_hash_file_fd+0x330>
   19050:	cmp    rbp,r15
   19053:	jl     19110 <wget_hash_file_fd+0x2b0>
   19059:	sub    rbp,r15
   1905c:	test   rbp,rbp
   1905f:	jle    19110 <wget_hash_file_fd+0x2b0>
   19065:	mov    edx,0x10000
   1906a:	mov    rsi,r13
   1906d:	mov    edi,ebx
   1906f:	call   11d60 <read@plt>
   19074:	mov    r15,rax
   19077:	test   rax,rax
   1907a:	jg     19038 <wget_hash_file_fd+0x1d8>
   1907c:	lea    r13,[rsp+0xc0]
   19084:	mov    rdi,QWORD PTR [rsp+0x18]
   19089:	mov    rsi,r13
   1908c:	call   11d80 <wget_hash_deinit@plt>
   19091:	test   eax,eax
   19093:	jne    191d0 <wget_hash_file_fd+0x370>
   19099:	test   r15,r15
   1909c:	je     1912d <wget_hash_file_fd+0x2cd>
   190a2:	mov    edx,0x5
   190a7:	lea    rsi,[rip+0x329f2]        # 4baa0 <__func__.0+0x150>
   190ae:	xor    edi,edi
   190b0:	call   10f90 <dcgettext@plt>
   190b5:	mov    rdx,rbp
   190b8:	lea    rsi,[rip+0x32a01]        # 4bac0 <__func__.0>
   190bf:	mov    rdi,rax
   190c2:	xor    eax,eax
   190c4:	call   11ea0 <wget_error_printf@plt>
   190c9:	mov    r12d,0xfffffff5
   190cf:	jmp    18f99 <wget_hash_file_fd+0x139>
   190d4:	nop    DWORD PTR [rax+0x0]
   190d8:	mov    rbx,QWORD PTR [rsp+0x8]
   190dd:	mov    rcx,QWORD PTR [rsp+0x10]
   190e2:	mov    rsi,r14
   190e5:	mov    rdi,r13
   190e8:	mov    rdx,rbx
   190eb:	call   11a80 <wget_memtohex@plt>
   190f0:	mov    rsi,rbx
   190f3:	lea    rdi,[rip+0x328d9]        # 4b9d3 <__func__.0+0x83>
   190fa:	xor    eax,eax
   190fc:	call   114b0 <wget_debug_printf@plt>
   19101:	mov    r8,QWORD PTR [rsp+0x18]
   19106:	jmp    18f8e <wget_hash_file_fd+0x12e>
   1910b:	nop    DWORD PTR [rax+rax*1+0x0]
   19110:	lea    r13,[rsp+0xc0]
   19118:	mov    rdi,QWORD PTR [rsp+0x18]
   1911d:	mov    rsi,r13
   19120:	call   11d80 <wget_hash_deinit@plt>
   19125:	test   eax,eax
   19127:	jne    191d0 <wget_hash_file_fd+0x370>
   1912d:	mov    rcx,QWORD PTR [rsp+0x10]
   19132:	mov    rdx,QWORD PTR [rsp+0x8]
   19137:	mov    rsi,r14
   1913a:	mov    rdi,r13
   1913d:	call   11a80 <wget_memtohex@plt>
   19142:	jmp    18f99 <wget_hash_file_fd+0x139>
   19147:	nop    WORD PTR [rax+rax*1+0x0]
   19150:	mov    edi,eax
   19152:	call   11810 <wget_strerror@plt>
   19157:	xor    edi,edi
   19159:	mov    edx,0x5
   1915e:	lea    rsi,[rip+0x328eb]        # 4ba50 <__func__.0+0x100>
   19165:	mov    r14,rax
   19168:	call   10f90 <dcgettext@plt>
   1916d:	mov    rcx,r14
   19170:	mov    rdx,r13
   19173:	lea    rsi,[rip+0x32946]        # 4bac0 <__func__.0>
   1917a:	mov    rdi,rax
   1917d:	xor    eax,eax
   1917f:	call   11ea0 <wget_error_printf@plt>
   19184:	jmp    18f99 <wget_hash_file_fd+0x139>
   19189:	nop    DWORD PTR [rax+0x0]
   19190:	mov    edi,eax
   19192:	mov    DWORD PTR [rsp+0x8],eax
   19196:	call   11810 <wget_strerror@plt>
   1919b:	mov    edx,0x5
   191a0:	lea    rsi,[rip+0x32836]        # 4b9dd <__func__.0+0x8d>
   191a7:	xor    edi,edi
   191a9:	mov    r12,rax
   191ac:	call   10f90 <dcgettext@plt>
   191b1:	mov    rdx,r12
   191b4:	lea    rsi,[rip+0x32905]        # 4bac0 <__func__.0>
   191bb:	mov    rdi,rax
   191be:	xor    eax,eax
   191c0:	call   11ea0 <wget_error_printf@plt>
   191c5:	mov    r12d,DWORD PTR [rsp+0x8]
   191ca:	jmp    18f99 <wget_hash_file_fd+0x139>
   191cf:	nop
   191d0:	mov    edi,eax
   191d2:	mov    r12d,eax
   191d5:	call   11810 <wget_strerror@plt>
   191da:	xor    edi,edi
   191dc:	mov    edx,0x5
   191e1:	lea    rsi,[rip+0x32890]        # 4ba78 <__func__.0+0x128>
   191e8:	mov    r13,rax
   191eb:	call   10f90 <dcgettext@plt>
   191f0:	mov    rdx,r13
   191f3:	lea    rsi,[rip+0x328c6]        # 4bac0 <__func__.0>
   191fa:	mov    rdi,rax
   191fd:	xor    eax,eax
   191ff:	call   11ea0 <wget_error_printf@plt>
   19204:	jmp    18f99 <wget_hash_file_fd+0x139>
   19209:	nop    DWORD PTR [rax+0x0]
   19210:	mov    r12d,0xfffffffd
   19216:	jmp    18f99 <wget_hash_file_fd+0x139>
   1921b:	nop    DWORD PTR [rax+rax*1+0x0]
   19220:	mov    r12d,0xffffffff
   19226:	jmp    18f99 <wget_hash_file_fd+0x139>
   1922b:	call   11760 <__stack_chk_fail@plt>

0000000000019230 <wget_hash_file_offset>:
   19230:	endbr64 
   19234:	push   r15
   19236:	xor    eax,eax
   19238:	mov    r15,r9
   1923b:	push   r14
   1923d:	mov    r14,rdi
   19240:	mov    rdi,rsi
   19243:	xor    esi,esi
   19245:	push   r13
   19247:	mov    r13,rdx
   1924a:	push   r12
   1924c:	mov    r12,rcx
   1924f:	push   rbp
   19250:	push   rbx
   19251:	mov    rbx,r8
   19254:	sub    rsp,0x8
   19258:	call   11070 <open@plt>
   1925d:	cmp    eax,0xffffffff
   19260:	je     192a0 <wget_hash_file_offset+0x70>
   19262:	mov    rdi,r14
   19265:	mov    ebp,eax
   19267:	mov    r9,r15
   1926a:	mov    r8,rbx
   1926d:	mov    rcx,r12
   19270:	mov    rdx,r13
   19273:	mov    esi,eax
   19275:	call   109d0 <wget_hash_file_fd@plt>
   1927a:	mov    edi,ebp
   1927c:	mov    r14d,eax
   1927f:	call   12740 <close@plt>
   19284:	add    rsp,0x8
   19288:	mov    eax,r14d
   1928b:	pop    rbx
   1928c:	pop    rbp
   1928d:	pop    r12
   1928f:	pop    r13
   19291:	pop    r14
   19293:	pop    r15
   19295:	ret    
   19296:	cs nop WORD PTR [rax+rax*1+0x0]
   192a0:	xor    r14d,r14d
   192a3:	test   r12,r12
   192a6:	je     19284 <wget_hash_file_offset+0x54>
   192a8:	mov    BYTE PTR [r13+0x0],0x0
   192ad:	jmp    19284 <wget_hash_file_offset+0x54>
   192af:	nop

00000000000192b0 <wget_hash_file>:
   192b0:	endbr64 
   192b4:	xor    r9d,r9d
   192b7:	xor    r8d,r8d
   192ba:	jmp    106d0 <wget_hash_file_offset@plt>
   192bf:	nop

00000000000192c0 <hashmap_find_entry>:
   192c0:	push   r13
   192c2:	mov    eax,edx
   192c4:	push   r12
   192c6:	push   rbp
   192c7:	push   rbx
   192c8:	mov    ebx,edx
   192ca:	xor    edx,edx
   192cc:	sub    rsp,0x8
   192d0:	div    DWORD PTR [rdi+0x28]
   192d3:	mov    rax,QWORD PTR [rdi+0x20]
   192d7:	mov    r12,QWORD PTR [rax+rdx*8]
   192db:	test   r12,r12
   192de:	je     19328 <hashmap_find_entry+0x68>
   192e0:	mov    r13,rdi
   192e3:	mov    rbp,rsi
   192e6:	jmp    192fa <hashmap_find_entry+0x3a>
   192e8:	nop    DWORD PTR [rax+rax*1+0x0]
   192f0:	mov    r12,QWORD PTR [r12+0x10]
   192f5:	test   r12,r12
   192f8:	je     19328 <hashmap_find_entry+0x68>
   192fa:	cmp    DWORD PTR [r12+0x18],ebx
   192ff:	jne    192f0 <hashmap_find_entry+0x30>
   19301:	mov    rsi,QWORD PTR [r12]
   19305:	cmp    rsi,rbp
   19308:	je     19315 <hashmap_find_entry+0x55>
   1930a:	mov    rdi,rbp
   1930d:	call   QWORD PTR [r13+0x8]
   19311:	test   eax,eax
   19313:	jne    192f0 <hashmap_find_entry+0x30>
   19315:	add    rsp,0x8
   19319:	mov    rax,r12
   1931c:	pop    rbx
   1931d:	pop    rbp
   1931e:	pop    r12
   19320:	pop    r13
   19322:	ret    
   19323:	nop    DWORD PTR [rax+rax*1+0x0]
   19328:	add    rsp,0x8
   1932c:	xor    r12d,r12d
   1932f:	pop    rbx
   19330:	mov    rax,r12
   19333:	pop    rbp
   19334:	pop    r12
   19336:	pop    r13
   19338:	ret    
   19339:	nop    DWORD PTR [rax+0x0]

0000000000019340 <hashmap_rehash>:
   19340:	push   r15
   19342:	mov    rax,rdi
   19345:	push   r14
   19347:	push   r13
   19349:	push   r12
   1934b:	mov    r12,rsi
   1934e:	push   rbp
   1934f:	push   rbx
   19350:	mov    ebx,edx
   19352:	sub    rsp,0x18
   19356:	mov    eax,DWORD PTR [rax+0x28]
   19359:	mov    r15d,DWORD PTR [rdi+0x2c]
   1935d:	mov    QWORD PTR [rsp],rdi
   19361:	mov    rdi,QWORD PTR [rdi+0x20]
   19365:	test   eax,eax
   19367:	jle    19413 <hashmap_rehash+0xd3>
   1936d:	test   r15d,r15d
   19370:	je     19413 <hashmap_rehash+0xd3>
   19376:	mov    QWORD PTR [rsp+0x8],0x0
   1937f:	mov    ebp,ecx
   19381:	nop    DWORD PTR [rax+0x0]
   19388:	mov    rax,QWORD PTR [rsp+0x8]
   1938d:	mov    r14,QWORD PTR [rdi+rax*8]
   19391:	test   r14,r14
   19394:	jne    193c2 <hashmap_rehash+0x82>
   19396:	jmp    193e8 <hashmap_rehash+0xa8>
   19398:	nop    DWORD PTR [rax+rax*1+0x0]
   193a0:	mov    eax,DWORD PTR [r13+0x18]
   193a4:	xor    edx,edx
   193a6:	sub    r15d,0x1
   193aa:	div    ebx
   193ac:	movsxd rdx,edx
   193af:	lea    rax,[r12+rdx*8]
   193b3:	mov    rdx,QWORD PTR [rax]
   193b6:	mov    QWORD PTR [r13+0x10],rdx
   193ba:	mov    QWORD PTR [rax],r13
   193bd:	test   r14,r14
   193c0:	je     193e0 <hashmap_rehash+0xa0>
   193c2:	mov    r13,r14
   193c5:	mov    r14,QWORD PTR [r14+0x10]
   193c9:	test   ebp,ebp
   193cb:	je     193a0 <hashmap_rehash+0x60>
   193cd:	mov    rax,QWORD PTR [rsp]
   193d1:	mov    rdi,QWORD PTR [r13+0x0]
   193d5:	call   QWORD PTR [rax]
   193d7:	mov    DWORD PTR [r13+0x18],eax
   193db:	jmp    193a4 <hashmap_rehash+0x64>
   193dd:	nop    DWORD PTR [rax]
   193e0:	mov    rax,QWORD PTR [rsp]
   193e4:	mov    rdi,QWORD PTR [rax+0x20]
   193e8:	mov    rcx,QWORD PTR [rsp+0x8]
   193ed:	mov    rsi,QWORD PTR [rsp]
   193f1:	mov    eax,ecx
   193f3:	add    eax,0x1
   193f6:	cmp    DWORD PTR [rsi+0x28],eax
   193f9:	setg   dl
   193fc:	test   r15d,r15d
   193ff:	setne  al
   19402:	add    rcx,0x1
   19406:	mov    QWORD PTR [rsp+0x8],rcx
   1940b:	test   dl,al
   1940d:	jne    19388 <hashmap_rehash+0x48>
   19413:	test   rdi,rdi
   19416:	je     19421 <hashmap_rehash+0xe1>
   19418:	mov    rax,QWORD PTR [rip+0x5cbc9]        # 75fe8 <wget_free@@Base-0x1328>
   1941f:	call   QWORD PTR [rax]
   19421:	mov    rsi,QWORD PTR [rsp]
   19425:	pxor   xmm0,xmm0
   19429:	cvtsi2ss xmm0,ebx
   1942d:	mulss  xmm0,DWORD PTR [rsi+0x38]
   19432:	mov    QWORD PTR [rsi+0x20],r12
   19436:	mov    DWORD PTR [rsi+0x28],ebx
   19439:	cvttss2si eax,xmm0
   1943d:	mov    DWORD PTR [rsi+0x30],eax
   19440:	add    rsp,0x18
   19444:	pop    rbx
   19445:	pop    rbp
   19446:	pop    r12
   19448:	pop    r13
   1944a:	pop    r14
   1944c:	pop    r15
   1944e:	ret    
   1944f:	nop

0000000000019450 <hashmap_remove_entry>:
   19450:	push   r15
   19452:	xor    r15d,r15d
   19455:	push   r14
   19457:	mov    r14,rsi
   1945a:	push   r13
   1945c:	mov    r13,rdi
   1945f:	mov    rdi,rsi
   19462:	push   r12
   19464:	push   rbp
   19465:	push   rbx
   19466:	sub    rsp,0x18
   1946a:	mov    DWORD PTR [rsp+0x4],edx
   1946e:	call   QWORD PTR [r13+0x0]
   19472:	xor    edx,edx
   19474:	mov    r12d,eax
   19477:	div    DWORD PTR [r13+0x28]
   1947b:	movsxd rax,edx
   1947e:	mov    rcx,rax
   19481:	mov    QWORD PTR [rsp+0x8],rax
   19486:	mov    rax,QWORD PTR [r13+0x20]
   1948a:	mov    rbp,QWORD PTR [rax+rcx*8]
   1948e:	test   rbp,rbp
   19491:	jne    194af <hashmap_remove_entry+0x5f>
   19493:	jmp    19540 <hashmap_remove_entry+0xf0>
   19498:	nop    DWORD PTR [rax+rax*1+0x0]
   194a0:	mov    r15,rbp
   194a3:	test   rbx,rbx
   194a6:	je     19540 <hashmap_remove_entry+0xf0>
   194ac:	mov    rbp,rbx
   194af:	mov    rbx,QWORD PTR [rbp+0x10]
   194b3:	cmp    DWORD PTR [rbp+0x18],r12d
   194b7:	jne    194a0 <hashmap_remove_entry+0x50>
   194b9:	mov    rsi,QWORD PTR [rbp+0x0]
   194bd:	cmp    rsi,r14
   194c0:	je     194cd <hashmap_remove_entry+0x7d>
   194c2:	mov    rdi,r14
   194c5:	call   QWORD PTR [r13+0x8]
   194c9:	test   eax,eax
   194cb:	jne    194a0 <hashmap_remove_entry+0x50>
   194cd:	test   r15,r15
   194d0:	je     19551 <hashmap_remove_entry+0x101>
   194d2:	mov    QWORD PTR [r15+0x10],rbx
   194d6:	mov    eax,DWORD PTR [rsp+0x4]
   194da:	test   eax,eax
   194dc:	je     19512 <hashmap_remove_entry+0xc2>
   194de:	mov    rax,QWORD PTR [r13+0x10]
   194e2:	test   rax,rax
   194e5:	je     194ed <hashmap_remove_entry+0x9d>
   194e7:	mov    rdi,QWORD PTR [rbp+0x0]
   194eb:	call   rax
   194ed:	mov    rdi,QWORD PTR [rbp+0x8]
   194f1:	cmp    rdi,QWORD PTR [rbp+0x0]
   194f5:	je     19502 <hashmap_remove_entry+0xb2>
   194f7:	mov    rax,QWORD PTR [r13+0x18]
   194fb:	test   rax,rax
   194fe:	je     19502 <hashmap_remove_entry+0xb2>
   19500:	call   rax
   19502:	mov    QWORD PTR [rbp+0x0],0x0
   1950a:	mov    QWORD PTR [rbp+0x8],0x0
   19512:	mov    rax,QWORD PTR [rip+0x5cacf]        # 75fe8 <wget_free@@Base-0x1328>
   19519:	mov    rdi,rbp
   1951c:	call   QWORD PTR [rax]
   1951e:	sub    DWORD PTR [r13+0x2c],0x1
   19523:	add    rsp,0x18
   19527:	mov    eax,0x1
   1952c:	pop    rbx
   1952d:	pop    rbp
   1952e:	pop    r12
   19530:	pop    r13
   19532:	pop    r14
   19534:	pop    r15
   19536:	ret    
   19537:	nop    WORD PTR [rax+rax*1+0x0]
   19540:	add    rsp,0x18
   19544:	xor    eax,eax
   19546:	pop    rbx
   19547:	pop    rbp
   19548:	pop    r12
   1954a:	pop    r13
   1954c:	pop    r14
   1954e:	pop    r15
   19550:	ret    
   19551:	mov    rax,QWORD PTR [r13+0x20]
   19555:	mov    rdx,QWORD PTR [rsp+0x8]
   1955a:	mov    QWORD PTR [rax+rdx*8],rbx
   1955e:	jmp    194d6 <hashmap_remove_entry+0x86>
   19563:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1956e:	xchg   ax,ax

0000000000019570 <wget_hashmap_iterator_alloc>:
   19570:	endbr64 
   19574:	mov    rax,QWORD PTR [rip+0x5c9c5]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   1957b:	push   rbx
   1957c:	mov    esi,0x18
   19581:	mov    rbx,rdi
   19584:	mov    edi,0x1
   19589:	call   QWORD PTR [rax]
   1958b:	test   rax,rax
   1958e:	je     19593 <wget_hashmap_iterator_alloc+0x23>
   19590:	mov    QWORD PTR [rax],rbx
   19593:	pop    rbx
   19594:	ret    
   19595:	data16 cs nop WORD PTR [rax+rax*1+0x0]

00000000000195a0 <wget_hashmap_iterator_free>:
   195a0:	endbr64 
   195a4:	test   rdi,rdi
   195a7:	je     195d0 <wget_hashmap_iterator_free+0x30>
   195a9:	push   rbx
   195aa:	mov    rbx,rdi
   195ad:	mov    rdi,QWORD PTR [rdi]
   195b0:	test   rdi,rdi
   195b3:	je     195c5 <wget_hashmap_iterator_free+0x25>
   195b5:	mov    rax,QWORD PTR [rip+0x5ca2c]        # 75fe8 <wget_free@@Base-0x1328>
   195bc:	call   QWORD PTR [rax]
   195be:	mov    QWORD PTR [rbx],0x0
   195c5:	pop    rbx
   195c6:	ret    
   195c7:	nop    WORD PTR [rax+rax*1+0x0]
   195d0:	ret    
   195d1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   195dc:	nop    DWORD PTR [rax+0x0]

00000000000195e0 <wget_hashmap_iterator_next>:
   195e0:	endbr64 
   195e4:	mov    rdx,rdi
   195e7:	mov    rdi,QWORD PTR [rdi]
   195ea:	mov    rax,QWORD PTR [rdx+0x8]
   195ee:	test   rax,rax
   195f1:	je     1961c <wget_hashmap_iterator_next+0x3c>
   195f3:	mov    rcx,QWORD PTR [rax+0x10]
   195f7:	mov    QWORD PTR [rdx+0x8],rcx
   195fb:	test   rcx,rcx
   195fe:	je     19618 <wget_hashmap_iterator_next+0x38>
   19600:	test   rsi,rsi
   19603:	je     19610 <wget_hashmap_iterator_next+0x30>
   19605:	mov    rax,QWORD PTR [rcx+0x8]
   19609:	mov    QWORD PTR [rsi],rax
   1960c:	mov    rcx,QWORD PTR [rdx+0x8]
   19610:	mov    rax,QWORD PTR [rcx]
   19613:	ret    
   19614:	nop    DWORD PTR [rax+0x0]
   19618:	add    DWORD PTR [rdx+0x10],0x1
   1961c:	test   rdi,rdi
   1961f:	jne    19628 <wget_hashmap_iterator_next+0x48>
   19621:	xor    eax,eax
   19623:	ret    
   19624:	nop    DWORD PTR [rax+0x0]
   19628:	movsxd rcx,DWORD PTR [rdx+0x10]
   1962c:	mov    r8d,DWORD PTR [rdi+0x28]
   19630:	cmp    ecx,r8d
   19633:	jge    19621 <wget_hashmap_iterator_next+0x41>
   19635:	sub    r8d,ecx
   19638:	lea    eax,[rcx+0x1]
   1963b:	mov    rdi,QWORD PTR [rdi+0x20]
   1963f:	sub    r8d,0x1
   19643:	cdqe   
   19645:	lea    r8,[r8+rcx*1+0x2]
   1964a:	jmp    1965c <wget_hashmap_iterator_next+0x7c>
   1964c:	nop    DWORD PTR [rax+0x0]
   19650:	mov    DWORD PTR [rdx+0x10],eax
   19653:	add    rax,0x1
   19657:	cmp    rax,r8
   1965a:	je     19621 <wget_hashmap_iterator_next+0x41>
   1965c:	mov    rcx,QWORD PTR [rdi+rax*8-0x8]
   19661:	test   rcx,rcx
   19664:	je     19650 <wget_hashmap_iterator_next+0x70>
   19666:	mov    QWORD PTR [rdx+0x8],rcx
   1966a:	test   rsi,rsi
   1966d:	jne    19605 <wget_hashmap_iterator_next+0x25>
   1966f:	jmp    19610 <wget_hashmap_iterator_next+0x30>
   19671:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1967c:	nop    DWORD PTR [rax+0x0]

0000000000019680 <wget_hashmap_create>:
   19680:	endbr64 
   19684:	push   r13
   19686:	mov    r13,rsi
   19689:	push   r12
   1968b:	push   rbp
   1968c:	mov    rbp,rdx
   1968f:	push   rbx
   19690:	mov    ebx,edi
   19692:	mov    edi,0x40
   19697:	sub    rsp,0x8
   1969b:	mov    rax,QWORD PTR [rip+0x5c92e]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   196a2:	call   QWORD PTR [rax]
   196a4:	mov    r12,rax
   196a7:	test   rax,rax
   196aa:	je     19717 <wget_hashmap_create+0x97>
   196ac:	mov    rax,QWORD PTR [rip+0x5c88d]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   196b3:	movsxd rdi,ebx
   196b6:	mov    esi,0x8
   196bb:	call   QWORD PTR [rax]
   196bd:	mov    QWORD PTR [r12+0x20],rax
   196c2:	test   rax,rax
   196c5:	je     19728 <wget_hashmap_create+0xa8>
   196c7:	pxor   xmm0,xmm0
   196cb:	mov    rax,QWORD PTR [rip+0x5c8ce]        # 75fa0 <free@GLIBC_2.2.5>
   196d2:	mov    DWORD PTR [r12+0x28],ebx
   196d7:	cvtsi2ss xmm0,ebx
   196db:	mulss  xmm0,DWORD PTR [rip+0x323f1]        # 4bad4 <__func__.0+0x14>
   196e3:	mov    QWORD PTR [r12],r13
   196e7:	mov    QWORD PTR [r12+0x10],rax
   196ec:	mov    QWORD PTR [r12+0x18],rax
   196f1:	movabs rax,0x3f40000040000000
   196fb:	mov    QWORD PTR [r12+0x34],rax
   19700:	mov    DWORD PTR [r12+0x2c],0x0
   19709:	cvttss2si eax,xmm0
   1970d:	mov    QWORD PTR [r12+0x8],rbp
   19712:	mov    DWORD PTR [r12+0x30],eax
   19717:	add    rsp,0x8
   1971b:	mov    rax,r12
   1971e:	pop    rbx
   1971f:	pop    rbp
   19720:	pop    r12
   19722:	pop    r13
   19724:	ret    
   19725:	nop    DWORD PTR [rax]
   19728:	mov    rax,QWORD PTR [rip+0x5c8b9]        # 75fe8 <wget_free@@Base-0x1328>
   1972f:	mov    rdi,r12
   19732:	xor    r12d,r12d
   19735:	call   QWORD PTR [rax]
   19737:	jmp    19717 <wget_hashmap_create+0x97>
   19739:	nop    DWORD PTR [rax+0x0]

0000000000019740 <wget_hashmap_put>:
   19740:	endbr64 
   19744:	test   rdi,rdi
   19747:	je     198a8 <wget_hashmap_put+0x168>
   1974d:	push   r14
   1974f:	push   r13
   19751:	push   r12
   19753:	push   rbp
   19754:	push   rbx
   19755:	mov    rbx,rsi
   19758:	test   rsi,rsi
   1975b:	je     19870 <wget_hashmap_put+0x130>
   19761:	mov    rbp,rdi
   19764:	mov    r12,rdx
   19767:	mov    rdi,rsi
   1976a:	call   QWORD PTR [rbp+0x0]
   1976d:	mov    rsi,rbx
   19770:	mov    rdi,rbp
   19773:	mov    edx,eax
   19775:	mov    r14d,eax
   19778:	call   192c0 <hashmap_find_entry>
   1977d:	mov    r13,rax
   19780:	test   rax,rax
   19783:	je     197e0 <wget_hashmap_put+0xa0>
   19785:	mov    rdi,QWORD PTR [rax]
   19788:	cmp    rdi,r12
   1978b:	setne  al
   1978e:	cmp    rdi,rbx
   19791:	setne  dl
   19794:	and    al,dl
   19796:	mov    r14d,eax
   19799:	jne    19880 <wget_hashmap_put+0x140>
   1979f:	mov    r8,QWORD PTR [r13+0x8]
   197a3:	cmp    rbx,r8
   197a6:	setne  r14b
   197aa:	cmp    r12,r8
   197ad:	je     197c2 <wget_hashmap_put+0x82>
   197af:	test   r14b,r14b
   197b2:	je     197c2 <wget_hashmap_put+0x82>
   197b4:	mov    rax,QWORD PTR [rbp+0x18]
   197b8:	test   rax,rax
   197bb:	je     197c2 <wget_hashmap_put+0x82>
   197bd:	mov    rdi,r8
   197c0:	call   rax
   197c2:	mov    QWORD PTR [r13+0x0],rbx
   197c6:	mov    eax,0x1
   197cb:	mov    QWORD PTR [r13+0x8],r12
   197cf:	pop    rbx
   197d0:	pop    rbp
   197d1:	pop    r12
   197d3:	pop    r13
   197d5:	pop    r14
   197d7:	ret    
   197d8:	nop    DWORD PTR [rax+rax*1+0x0]
   197e0:	mov    rax,QWORD PTR [rip+0x5c7e9]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   197e7:	mov    edi,0x20
   197ec:	call   QWORD PTR [rax]
   197ee:	mov    rcx,rax
   197f1:	test   rax,rax
   197f4:	je     198e6 <wget_hashmap_put+0x1a6>
   197fa:	mov    esi,DWORD PTR [rbp+0x28]
   197fd:	xor    edx,edx
   197ff:	mov    QWORD PTR [rax],rbx
   19802:	mov    QWORD PTR [rax+0x8],r12
   19806:	mov    DWORD PTR [rax+0x18],r14d
   1980a:	mov    eax,r14d
   1980d:	div    esi
   1980f:	mov    rax,QWORD PTR [rbp+0x20]
   19813:	movsxd rbx,edx
   19816:	lea    rax,[rax+rbx*8]
   1981a:	mov    rdx,QWORD PTR [rax]
   1981d:	mov    QWORD PTR [rcx+0x10],rdx
   19821:	mov    QWORD PTR [rax],rcx
   19824:	mov    eax,DWORD PTR [rbp+0x2c]
   19827:	add    eax,0x1
   1982a:	mov    DWORD PTR [rbp+0x2c],eax
   1982d:	cmp    eax,DWORD PTR [rbp+0x30]
   19830:	jl     19870 <wget_hashmap_put+0x130>
   19832:	pxor   xmm0,xmm0
   19836:	cvtsi2ss xmm0,esi
   1983a:	mulss  xmm0,DWORD PTR [rbp+0x34]
   1983f:	cvttss2si r12d,xmm0
   19844:	test   r12d,r12d
   19847:	jle    19870 <wget_hashmap_put+0x130>
   19849:	mov    rax,QWORD PTR [rip+0x5c6f0]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   19850:	mov    esi,0x8
   19855:	movsxd rdi,r12d
   19858:	call   QWORD PTR [rax]
   1985a:	mov    rsi,rax
   1985d:	test   rax,rax
   19860:	je     198c0 <wget_hashmap_put+0x180>
   19862:	xor    ecx,ecx
   19864:	mov    edx,r12d
   19867:	mov    rdi,rbp
   1986a:	call   19340 <hashmap_rehash>
   1986f:	nop
   19870:	xor    eax,eax
   19872:	pop    rbx
   19873:	pop    rbp
   19874:	pop    r12
   19876:	pop    r13
   19878:	pop    r14
   1987a:	ret    
   1987b:	nop    DWORD PTR [rax+rax*1+0x0]
   19880:	mov    rax,QWORD PTR [rbp+0x10]
   19884:	test   rax,rax
   19887:	je     1988f <wget_hashmap_put+0x14f>
   19889:	call   rax
   1988b:	mov    rdi,QWORD PTR [r13+0x0]
   1988f:	mov    r8,QWORD PTR [r13+0x8]
   19893:	cmp    r8,rdi
   19896:	je     198b0 <wget_hashmap_put+0x170>
   19898:	cmp    r8,rbx
   1989b:	setne  r14b
   1989f:	jmp    197aa <wget_hashmap_put+0x6a>
   198a4:	nop    DWORD PTR [rax+0x0]
   198a8:	xor    eax,eax
   198aa:	ret    
   198ab:	nop    DWORD PTR [rax+rax*1+0x0]
   198b0:	mov    QWORD PTR [r13+0x8],0x0
   198b8:	xor    r8d,r8d
   198bb:	jmp    197aa <wget_hashmap_put+0x6a>
   198c0:	mov    rax,QWORD PTR [rbp+0x20]
   198c4:	sub    DWORD PTR [rbp+0x2c],0x1
   198c8:	mov    rdi,QWORD PTR [rax+rbx*8]
   198cc:	test   rdi,rdi
   198cf:	je     198e6 <wget_hashmap_put+0x1a6>
   198d1:	mov    rax,QWORD PTR [rip+0x5c710]        # 75fe8 <wget_free@@Base-0x1328>
   198d8:	call   QWORD PTR [rax]
   198da:	mov    rax,QWORD PTR [rbp+0x20]
   198de:	mov    QWORD PTR [rax+rbx*8],0x0
   198e6:	mov    eax,0xfffffffe
   198eb:	jmp    19872 <wget_hashmap_put+0x132>
   198ed:	nop    DWORD PTR [rax]

00000000000198f0 <wget_hashmap_get>:
   198f0:	endbr64 
   198f4:	test   rdi,rdi
   198f7:	je     19950 <wget_hashmap_get+0x60>
   198f9:	push   r12
   198fb:	mov    r12,rsi
   198fe:	push   rbp
   198ff:	push   rbx
   19900:	test   rsi,rsi
   19903:	je     19940 <wget_hashmap_get+0x50>
   19905:	mov    rbp,rdi
   19908:	mov    rbx,rdx
   1990b:	mov    rdi,rsi
   1990e:	call   QWORD PTR [rbp+0x0]
   19911:	mov    rsi,r12
   19914:	mov    rdi,rbp
   19917:	mov    edx,eax
   19919:	call   192c0 <hashmap_find_entry>
   1991e:	test   rax,rax
   19921:	je     19940 <wget_hashmap_get+0x50>
   19923:	mov    r8d,0x1
   19929:	test   rbx,rbx
   1992c:	je     19943 <wget_hashmap_get+0x53>
   1992e:	mov    rax,QWORD PTR [rax+0x8]
   19932:	mov    QWORD PTR [rbx],rax
   19935:	mov    eax,r8d
   19938:	pop    rbx
   19939:	pop    rbp
   1993a:	pop    r12
   1993c:	ret    
   1993d:	nop    DWORD PTR [rax]
   19940:	xor    r8d,r8d
   19943:	pop    rbx
   19944:	mov    eax,r8d
   19947:	pop    rbp
   19948:	pop    r12
   1994a:	ret    
   1994b:	nop    DWORD PTR [rax+rax*1+0x0]
   19950:	xor    eax,eax
   19952:	ret    
   19953:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1995e:	xchg   ax,ax

0000000000019960 <wget_hashmap_contains>:
   19960:	endbr64 
   19964:	xor    edx,edx
   19966:	jmp    10520 <wget_hashmap_get@plt>
   1996b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000019970 <wget_hashmap_remove>:
   19970:	endbr64 
   19974:	test   rdi,rdi
   19977:	je     1997e <wget_hashmap_remove+0xe>
   19979:	test   rsi,rsi
   1997c:	jne    19988 <wget_hashmap_remove+0x18>
   1997e:	xor    eax,eax
   19980:	ret    
   19981:	nop    DWORD PTR [rax+0x0]
   19988:	mov    edx,0x1
   1998d:	jmp    19450 <hashmap_remove_entry>
   19992:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1999d:	nop    DWORD PTR [rax]

00000000000199a0 <wget_hashmap_remove_nofree>:
   199a0:	endbr64 
   199a4:	test   rdi,rdi
   199a7:	je     199ae <wget_hashmap_remove_nofree+0xe>
   199a9:	test   rsi,rsi
   199ac:	jne    199b8 <wget_hashmap_remove_nofree+0x18>
   199ae:	xor    eax,eax
   199b0:	ret    
   199b1:	nop    DWORD PTR [rax+0x0]
   199b8:	xor    edx,edx
   199ba:	jmp    19450 <hashmap_remove_entry>
   199bf:	nop

00000000000199c0 <wget_hashmap_clear>:
   199c0:	endbr64 
   199c4:	test   rdi,rdi
   199c7:	je     19ab9 <wget_hashmap_clear+0xf9>
   199cd:	push   r15
   199cf:	push   r14
   199d1:	push   r13
   199d3:	push   r12
   199d5:	push   rbp
   199d6:	mov    rbp,rdi
   199d9:	push   rbx
   199da:	sub    rsp,0x18
   199de:	mov    eax,DWORD PTR [rdi+0x28]
   199e1:	mov    r12d,DWORD PTR [rdi+0x2c]
   199e5:	test   eax,eax
   199e7:	jle    19a97 <wget_hashmap_clear+0xd7>
   199ed:	test   r12d,r12d
   199f0:	je     19a97 <wget_hashmap_clear+0xd7>
   199f6:	mov    rdx,QWORD PTR [rdi+0x20]
   199fa:	xor    r14d,r14d
   199fd:	nop    DWORD PTR [rax]
   19a00:	lea    rax,[r14*8+0x0]
   19a08:	mov    QWORD PTR [rsp+0x8],rax
   19a0d:	add    rax,rdx
   19a10:	mov    rbx,QWORD PTR [rax]
   19a13:	test   rbx,rbx
   19a16:	je     19a74 <wget_hashmap_clear+0xb4>
   19a18:	mov    r13,QWORD PTR [rip+0x5c5c9]        # 75fe8 <wget_free@@Base-0x1328>
   19a1f:	nop
   19a20:	mov    rax,QWORD PTR [rbp+0x10]
   19a24:	mov    r15,rbx
   19a27:	mov    rbx,QWORD PTR [rbx+0x10]
   19a2b:	test   rax,rax
   19a2e:	je     19a35 <wget_hashmap_clear+0x75>
   19a30:	mov    rdi,QWORD PTR [r15]
   19a33:	call   rax
   19a35:	mov    rax,QWORD PTR [rbp+0x18]
   19a39:	test   rax,rax
   19a3c:	je     19a49 <wget_hashmap_clear+0x89>
   19a3e:	mov    rdi,QWORD PTR [r15+0x8]
   19a42:	cmp    rdi,QWORD PTR [r15]
   19a45:	je     19ab0 <wget_hashmap_clear+0xf0>
   19a47:	call   rax
   19a49:	mov    QWORD PTR [r15],0x0
   19a50:	mov    rdi,r15
   19a53:	sub    r12d,0x1
   19a57:	mov    QWORD PTR [r15+0x8],0x0
   19a5f:	call   QWORD PTR [r13+0x0]
   19a63:	test   rbx,rbx
   19a66:	jne    19a20 <wget_hashmap_clear+0x60>
   19a68:	mov    rdx,QWORD PTR [rbp+0x20]
   19a6c:	mov    rax,QWORD PTR [rsp+0x8]
   19a71:	add    rax,rdx
   19a74:	mov    QWORD PTR [rax],0x0
   19a7b:	lea    eax,[r14+0x1]
   19a7f:	cmp    DWORD PTR [rbp+0x28],eax
   19a82:	setg   cl
   19a85:	test   r12d,r12d
   19a88:	setne  al
   19a8b:	add    r14,0x1
   19a8f:	test   cl,al
   19a91:	jne    19a00 <wget_hashmap_clear+0x40>
   19a97:	mov    DWORD PTR [rbp+0x2c],0x0
   19a9e:	add    rsp,0x18
   19aa2:	pop    rbx
   19aa3:	pop    rbp
   19aa4:	pop    r12
   19aa6:	pop    r13
   19aa8:	pop    r14
   19aaa:	pop    r15
   19aac:	ret    
   19aad:	nop    DWORD PTR [rax]
   19ab0:	cmp    QWORD PTR [rbp+0x10],0x0
   19ab5:	jne    19a49 <wget_hashmap_clear+0x89>
   19ab7:	jmp    19a47 <wget_hashmap_clear+0x87>
   19ab9:	ret    
   19aba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000019ac0 <wget_hashmap_free>:
   19ac0:	endbr64 
   19ac4:	test   rdi,rdi
   19ac7:	je     19b18 <wget_hashmap_free+0x58>
   19ac9:	push   rbp
   19aca:	push   rbx
   19acb:	mov    rbx,rdi
   19ace:	sub    rsp,0x8
   19ad2:	mov    rdi,QWORD PTR [rdi]
   19ad5:	test   rdi,rdi
   19ad8:	je     19b0d <wget_hashmap_free+0x4d>
   19ada:	call   11d30 <wget_hashmap_clear@plt>
   19adf:	mov    rdi,QWORD PTR [rbx]
   19ae2:	mov    rbp,QWORD PTR [rip+0x5c4ff]        # 75fe8 <wget_free@@Base-0x1328>
   19ae9:	mov    r8,QWORD PTR [rdi+0x20]
   19aed:	test   r8,r8
   19af0:	je     19b03 <wget_hashmap_free+0x43>
   19af2:	mov    rdi,r8
   19af5:	call   QWORD PTR [rbp+0x0]
   19af8:	mov    rdi,QWORD PTR [rbx]
   19afb:	mov    QWORD PTR [rdi+0x20],0x0
   19b03:	call   QWORD PTR [rbp+0x0]
   19b06:	mov    QWORD PTR [rbx],0x0
   19b0d:	add    rsp,0x8
   19b11:	pop    rbx
   19b12:	pop    rbp
   19b13:	ret    
   19b14:	nop    DWORD PTR [rax+0x0]
   19b18:	ret    
   19b19:	nop    DWORD PTR [rax+0x0]

0000000000019b20 <wget_hashmap_size>:
   19b20:	endbr64 
   19b24:	xor    eax,eax
   19b26:	test   rdi,rdi
   19b29:	je     19b2e <wget_hashmap_size+0xe>
   19b2b:	mov    eax,DWORD PTR [rdi+0x2c]
   19b2e:	ret    
   19b2f:	nop

0000000000019b30 <wget_hashmap_browse>:
   19b30:	endbr64 
   19b34:	test   rdi,rdi
   19b37:	je     19be0 <wget_hashmap_browse+0xb0>
   19b3d:	push   r15
   19b3f:	push   r14
   19b41:	push   r13
   19b43:	push   r12
   19b45:	mov    r12,rsi
   19b48:	push   rbp
   19b49:	push   rbx
   19b4a:	sub    rsp,0x8
   19b4e:	test   rsi,rsi
   19b51:	je     19bc8 <wget_hashmap_browse+0x98>
   19b53:	mov    eax,DWORD PTR [rdi+0x28]
   19b56:	mov    ebp,DWORD PTR [rdi+0x2c]
   19b59:	mov    r14,rdi
   19b5c:	test   eax,eax
   19b5e:	jle    19bc8 <wget_hashmap_browse+0x98>
   19b60:	test   ebp,ebp
   19b62:	je     19bc8 <wget_hashmap_browse+0x98>
   19b64:	mov    r13,rdx
   19b67:	xor    r15d,r15d
   19b6a:	mov    rax,QWORD PTR [r14+0x20]
   19b6e:	mov    rbx,QWORD PTR [rax+r15*8]
   19b72:	test   rbx,rbx
   19b75:	jne    19b8c <wget_hashmap_browse+0x5c>
   19b77:	jmp    19bb0 <wget_hashmap_browse+0x80>
   19b79:	nop    DWORD PTR [rax+0x0]
   19b80:	mov    rbx,QWORD PTR [rbx+0x10]
   19b84:	sub    ebp,0x1
   19b87:	test   rbx,rbx
   19b8a:	je     19bb0 <wget_hashmap_browse+0x80>
   19b8c:	mov    rdx,QWORD PTR [rbx+0x8]
   19b90:	mov    rsi,QWORD PTR [rbx]
   19b93:	mov    rdi,r13
   19b96:	call   r12
   19b99:	test   eax,eax
   19b9b:	je     19b80 <wget_hashmap_browse+0x50>
   19b9d:	add    rsp,0x8
   19ba1:	pop    rbx
   19ba2:	pop    rbp
   19ba3:	pop    r12
   19ba5:	pop    r13
   19ba7:	pop    r14
   19ba9:	pop    r15
   19bab:	ret    
   19bac:	nop    DWORD PTR [rax+0x0]
   19bb0:	lea    eax,[r15+0x1]
   19bb4:	cmp    DWORD PTR [r14+0x28],eax
   19bb8:	setg   dl
   19bbb:	test   ebp,ebp
   19bbd:	setne  al
   19bc0:	add    r15,0x1
   19bc4:	test   dl,al
   19bc6:	jne    19b6a <wget_hashmap_browse+0x3a>
   19bc8:	add    rsp,0x8
   19bcc:	xor    eax,eax
   19bce:	pop    rbx
   19bcf:	pop    rbp
   19bd0:	pop    r12
   19bd2:	pop    r13
   19bd4:	pop    r14
   19bd6:	pop    r15
   19bd8:	ret    
   19bd9:	nop    DWORD PTR [rax+0x0]
   19be0:	xor    eax,eax
   19be2:	ret    
   19be3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   19bee:	xchg   ax,ax

0000000000019bf0 <wget_hashmap_setcmpfunc>:
   19bf0:	endbr64 
   19bf4:	test   rdi,rdi
   19bf7:	je     19bfd <wget_hashmap_setcmpfunc+0xd>
   19bf9:	mov    QWORD PTR [rdi+0x8],rsi
   19bfd:	ret    
   19bfe:	xchg   ax,ax

0000000000019c00 <wget_hashmap_sethashfunc>:
   19c00:	endbr64 
   19c04:	test   rdi,rdi
   19c07:	je     19c5a <wget_hashmap_sethashfunc+0x5a>
   19c09:	push   rbp
   19c0a:	mov    rbp,rdi
   19c0d:	push   rbx
   19c0e:	sub    rsp,0x8
   19c12:	mov    eax,DWORD PTR [rdi+0x2c]
   19c15:	test   eax,eax
   19c17:	je     19c4c <wget_hashmap_sethashfunc+0x4c>
   19c19:	mov    rax,QWORD PTR [rip+0x5c320]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   19c20:	movsxd rdi,DWORD PTR [rdi+0x28]
   19c24:	mov    rbx,rsi
   19c27:	mov    esi,0x8
   19c2c:	call   QWORD PTR [rax]
   19c2e:	mov    rsi,rax
   19c31:	test   rax,rax
   19c34:	je     19c53 <wget_hashmap_sethashfunc+0x53>
   19c36:	mov    QWORD PTR [rbp+0x0],rbx
   19c3a:	mov    edx,DWORD PTR [rbp+0x28]
   19c3d:	mov    ecx,0x1
   19c42:	mov    rdi,rbp
   19c45:	call   19340 <hashmap_rehash>
   19c4a:	xor    eax,eax
   19c4c:	add    rsp,0x8
   19c50:	pop    rbx
   19c51:	pop    rbp
   19c52:	ret    
   19c53:	mov    eax,0xfffffffe
   19c58:	jmp    19c4c <wget_hashmap_sethashfunc+0x4c>
   19c5a:	mov    eax,0xfffffffd
   19c5f:	ret    

0000000000019c60 <wget_hashmap_set_key_destructor>:
   19c60:	endbr64 
   19c64:	test   rdi,rdi
   19c67:	je     19c6d <wget_hashmap_set_key_destructor+0xd>
   19c69:	mov    QWORD PTR [rdi+0x10],rsi
   19c6d:	ret    
   19c6e:	xchg   ax,ax

0000000000019c70 <wget_hashmap_set_value_destructor>:
   19c70:	endbr64 
   19c74:	test   rdi,rdi
   19c77:	je     19c7d <wget_hashmap_set_value_destructor+0xd>
   19c79:	mov    QWORD PTR [rdi+0x18],rsi
   19c7d:	ret    
   19c7e:	xchg   ax,ax

0000000000019c80 <wget_hashmap_set_load_factor>:
   19c80:	endbr64 
   19c84:	test   rdi,rdi
   19c87:	je     19ca2 <wget_hashmap_set_load_factor+0x22>
   19c89:	pxor   xmm1,xmm1
   19c8d:	movss  DWORD PTR [rdi+0x38],xmm0
   19c92:	cvtsi2ss xmm1,DWORD PTR [rdi+0x28]
   19c97:	mulss  xmm1,xmm0
   19c9b:	cvttss2si eax,xmm1
   19c9f:	mov    DWORD PTR [rdi+0x30],eax
   19ca2:	ret    
   19ca3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   19cae:	xchg   ax,ax

0000000000019cb0 <wget_hashmap_set_resize_factor>:
   19cb0:	endbr64 
   19cb4:	test   rdi,rdi
   19cb7:	je     19cbe <wget_hashmap_set_resize_factor+0xe>
   19cb9:	movss  DWORD PTR [rdi+0x34],xmm0
   19cbe:	ret    
   19cbf:	nop

0000000000019cc0 <read_fd>:
   19cc0:	endbr64 
   19cc4:	mov    edi,DWORD PTR [rdi]
   19cc6:	jmp    11d60 <read@plt>
   19ccb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000019cd0 <getline_internal>:
   19cd0:	push   r15
   19cd2:	push   r14
   19cd4:	push   r13
   19cd6:	push   r12
   19cd8:	push   rbp
   19cd9:	push   rbx
   19cda:	sub    rsp,0x18
   19cde:	mov    QWORD PTR [rsp],rdx
   19ce2:	mov    QWORD PTR [rsp+0x8],rcx
   19ce7:	test   rdi,rdi
   19cea:	je     19fa8 <getline_internal+0x2d8>
   19cf0:	mov    rbx,rsi
   19cf3:	test   rsi,rsi
   19cf6:	je     19fa8 <getline_internal+0x2d8>
   19cfc:	mov    rbp,QWORD PTR [rdi]
   19cff:	mov    r12,rdi
   19d02:	test   rbp,rbp
   19d05:	je     19d13 <getline_internal+0x43>
   19d07:	mov    rax,QWORD PTR [rsi]
   19d0a:	test   rax,rax
   19d0d:	jne    19e38 <getline_internal+0x168>
   19d13:	mov    rax,QWORD PTR [rip+0x5c2b6]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   19d1a:	mov    edi,0x2800
   19d1f:	call   QWORD PTR [rax]
   19d21:	mov    r14,rax
   19d24:	test   rax,rax
   19d27:	je     19ef0 <getline_internal+0x220>
   19d2d:	mov    QWORD PTR [r12],rax
   19d31:	lea    r13,[rax+0x27f0]
   19d38:	xor    r15d,r15d
   19d3b:	mov    QWORD PTR [rbx],0x2800
   19d42:	mov    QWORD PTR [rax+0x27f8],0x0
   19d4d:	mov    QWORD PTR [rax+0x27f0],0x0
   19d58:	mov    rsi,QWORD PTR [rbx]
   19d5b:	jmp    19dd1 <getline_internal+0x101>
   19d5d:	nop    DWORD PTR [rax]
   19d60:	mov    r14,QWORD PTR [r12]
   19d64:	mov    esi,0xa
   19d69:	lea    rbp,[rdx+r15*1]
   19d6d:	lea    rdi,[r14+r15*1]
   19d71:	call   11750 <memchr@plt>
   19d76:	test   rax,rax
   19d79:	jne    19eb0 <getline_internal+0x1e0>
   19d7f:	mov    rsi,QWORD PTR [rbx]
   19d82:	lea    rax,[rsi-0x11]
   19d86:	cmp    rax,rbp
   19d89:	ja     19dce <getline_internal+0xfe>
   19d8b:	mov    rax,QWORD PTR [rip+0x5c1ee]        # 75f80 <wget_realloc_fn@@Base-0x1398>
   19d92:	add    rsi,rsi
   19d95:	mov    rdi,r14
   19d98:	sub    r13,r14
   19d9b:	mov    QWORD PTR [rbx],rsi
   19d9e:	call   QWORD PTR [rax]
   19da0:	mov    r14,rax
   19da3:	test   rax,rax
   19da6:	je     19ef0 <getline_internal+0x220>
   19dac:	mov    rdx,QWORD PTR [rbx]
   19daf:	mov    QWORD PTR [r12],rax
   19db3:	lea    rax,[rax+r13*1]
   19db7:	lea    r13,[r14+rdx*1-0x10]
   19dbc:	mov    rdx,QWORD PTR [rax]
   19dbf:	mov    QWORD PTR [r13+0x0],rdx
   19dc3:	mov    rax,QWORD PTR [rax+0x8]
   19dc7:	mov    QWORD PTR [r13+0x8],rax
   19dcb:	mov    rsi,QWORD PTR [rbx]
   19dce:	mov    r15,rbp
   19dd1:	mov    rdx,0xffffffffffffffef
   19dd8:	mov    rdi,QWORD PTR [rsp]
   19ddc:	mov    rax,QWORD PTR [rsp+0x8]
   19de1:	sub    rdx,r15
   19de4:	add    rdx,rsi
   19de7:	lea    rsi,[r14+r15*1]
   19deb:	call   rax
   19ded:	mov    rdx,rax
   19df0:	test   rax,rax
   19df3:	jg     19d60 <getline_internal+0x90>
   19df9:	cmp    rax,0xffffffffffffffff
   19dfd:	je     19f10 <getline_internal+0x240>
   19e03:	mov    rax,QWORD PTR [r12]
   19e07:	test   r15,r15
   19e0a:	je     19f99 <getline_internal+0x2c9>
   19e10:	lea    rdx,[rax+r15*1-0x1]
   19e15:	cmp    BYTE PTR [rdx],0xa
   19e18:	je     19f58 <getline_internal+0x288>
   19e1e:	mov    BYTE PTR [rax+r15*1],0x0
   19e23:	mov    rax,r15
   19e26:	add    rsp,0x18
   19e2a:	pop    rbx
   19e2b:	pop    rbp
   19e2c:	pop    r12
   19e2e:	pop    r13
   19e30:	pop    r14
   19e32:	pop    r15
   19e34:	ret    
   19e35:	nop    DWORD PTR [rax]
   19e38:	lea    r13,[rbp+rax*1-0x10]
   19e3d:	mov    r15,QWORD PTR [r13+0x8]
   19e41:	test   r15,r15
   19e44:	je     19ee0 <getline_internal+0x210>
   19e4a:	mov    r14,QWORD PTR [r13+0x0]
   19e4e:	mov    rdx,r15
   19e51:	mov    esi,0xa
   19e56:	add    r14,rbp
   19e59:	mov    rdi,r14
   19e5c:	call   11750 <memchr@plt>
   19e61:	test   rax,rax
   19e64:	je     19f60 <getline_internal+0x290>
   19e6a:	mov    BYTE PTR [rax],0x0
   19e6d:	mov    rdi,QWORD PTR [r12]
   19e71:	add    rax,0x1
   19e75:	mov    rdx,QWORD PTR [r13+0x0]
   19e79:	lea    rsi,[rdi+rdx*1]
   19e7d:	sub    rax,rsi
   19e80:	mov    rbx,rax
   19e83:	test   rdx,rdx
   19e86:	jne    19f88 <getline_internal+0x2b8>
   19e8c:	add    rdx,rbx
   19e8f:	sub    QWORD PTR [r13+0x8],rbx
   19e93:	lea    rax,[rbx-0x1]
   19e97:	mov    QWORD PTR [r13+0x0],rdx
   19e9b:	add    rsp,0x18
   19e9f:	pop    rbx
   19ea0:	pop    rbp
   19ea1:	pop    r12
   19ea3:	pop    r13
   19ea5:	pop    r14
   19ea7:	pop    r15
   19ea9:	ret    
   19eaa:	nop    WORD PTR [rax+rax*1+0x0]
   19eb0:	mov    BYTE PTR [rax],0x0
   19eb3:	add    rax,0x1
   19eb7:	sub    rax,QWORD PTR [r12]
   19ebb:	sub    rbp,rax
   19ebe:	mov    QWORD PTR [r13+0x0],rax
   19ec2:	sub    rax,0x1
   19ec6:	mov    QWORD PTR [r13+0x8],rbp
   19eca:	add    rsp,0x18
   19ece:	pop    rbx
   19ecf:	pop    rbp
   19ed0:	pop    r12
   19ed2:	pop    r13
   19ed4:	pop    r14
   19ed6:	pop    r15
   19ed8:	ret    
   19ed9:	nop    DWORD PTR [rax+0x0]
   19ee0:	mov    BYTE PTR [rbp+0x0],0x0
   19ee4:	mov    r14,QWORD PTR [rdi]
   19ee7:	jmp    19d58 <getline_internal+0x88>
   19eec:	nop    DWORD PTR [rax+0x0]
   19ef0:	add    rsp,0x18
   19ef4:	mov    rax,0xfffffffffffffffe
   19efb:	pop    rbx
   19efc:	pop    rbp
   19efd:	pop    r12
   19eff:	pop    r13
   19f01:	pop    r14
   19f03:	pop    r15
   19f05:	ret    
   19f06:	cs nop WORD PTR [rax+rax*1+0x0]
   19f10:	call   104b0 <__errno_location@plt>
   19f15:	mov    r13d,DWORD PTR [rax]
   19f18:	mov    eax,r13d
   19f1b:	and    eax,0xfffffffd
   19f1e:	cmp    eax,0x9
   19f21:	je     19e03 <getline_internal+0x133>
   19f27:	xor    edi,edi
   19f29:	mov    edx,0x5
   19f2e:	lea    rsi,[rip+0x31ba3]        # 4bad8 <__func__.0+0x18>
   19f35:	call   10f90 <dcgettext@plt>
   19f3a:	mov    edx,r13d
   19f3d:	lea    rsi,[rip+0x31d8c]        # 4bcd0 <__func__.0>
   19f44:	mov    rdi,rax
   19f47:	xor    eax,eax
   19f49:	call   11ea0 <wget_error_printf@plt>
   19f4e:	jmp    19e03 <getline_internal+0x133>
   19f53:	nop    DWORD PTR [rax+rax*1+0x0]
   19f58:	mov    BYTE PTR [rdx],0x0
   19f5b:	jmp    19e23 <getline_internal+0x153>
   19f60:	mov    rsi,r14
   19f63:	lea    rdx,[r15+0x1]
   19f67:	mov    rdi,rbp
   19f6a:	call   12110 <memmove@plt>
   19f6f:	mov    QWORD PTR [r13+0x8],0x0
   19f77:	mov    r14,QWORD PTR [r12]
   19f7b:	mov    QWORD PTR [r13+0x0],0x0
   19f83:	jmp    19d58 <getline_internal+0x88>
   19f88:	mov    rdx,rax
   19f8b:	call   12110 <memmove@plt>
   19f90:	mov    rdx,QWORD PTR [r13+0x0]
   19f94:	jmp    19e8c <getline_internal+0x1bc>
   19f99:	mov    BYTE PTR [rax],0x0
   19f9c:	mov    rax,0xffffffffffffffff
   19fa3:	jmp    19e26 <getline_internal+0x156>
   19fa8:	mov    rax,0xfffffffffffffffd
   19faf:	jmp    19e26 <getline_internal+0x156>
   19fb4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   19fbf:	nop

0000000000019fc0 <read_fp>:
   19fc0:	endbr64 
   19fc4:	push   r12
   19fc6:	push   rbp
   19fc7:	mov    rbp,rdi
   19fca:	mov    rdi,rsi
   19fcd:	mov    esi,0x1
   19fd2:	mov    rcx,rbp
   19fd5:	sub    rsp,0x8
   19fd9:	call   11e20 <fread@plt>
   19fde:	mov    rdi,rbp
   19fe1:	mov    r12,rax
   19fe4:	call   12580 <ferror@plt>
   19fe9:	test   eax,eax
   19feb:	mov    rax,0xffffffffffffffff
   19ff2:	cmovne r12,rax
   19ff6:	add    rsp,0x8
   19ffa:	pop    rbp
   19ffb:	mov    rax,r12
   19ffe:	pop    r12
   1a000:	ret    
   1a001:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1a00c:	nop    DWORD PTR [rax+0x0]

000000000001a010 <wget_fdgetline>:
   1a010:	endbr64 
   1a014:	sub    rsp,0x18
   1a018:	lea    rcx,[rip+0xfffffffffffffca1]        # 19cc0 <read_fd>
   1a01f:	mov    DWORD PTR [rsp+0xc],edx
   1a023:	lea    rdx,[rsp+0xc]
   1a028:	call   19cd0 <getline_internal>
   1a02d:	add    rsp,0x18
   1a031:	ret    
   1a032:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1a03d:	nop    DWORD PTR [rax]

000000000001a040 <wget_getline>:
   1a040:	endbr64 
   1a044:	lea    rcx,[rip+0xffffffffffffff75]        # 19fc0 <read_fp>
   1a04b:	jmp    19cd0 <getline_internal>

000000000001a050 <wget_ready_2_transfer>:
   1a050:	endbr64 
   1a054:	sub    rsp,0x18
   1a058:	mov    r8d,esi
   1a05b:	mov    rax,QWORD PTR fs:0x28
   1a064:	mov    QWORD PTR [rsp+0x8],rax
   1a069:	xor    eax,eax
   1a06b:	xor    eax,eax
   1a06d:	mov    DWORD PTR [rsp],edi
   1a070:	mov    WORD PTR [rsp+0x6],ax
   1a075:	mov    eax,edx
   1a077:	and    eax,0x1
   1a07a:	and    edx,0x2
   1a07d:	je     1a082 <wget_ready_2_transfer+0x32>
   1a07f:	or     eax,0x4
   1a082:	mov    rdi,rsp
   1a085:	mov    edx,r8d
   1a088:	mov    esi,0x1
   1a08d:	mov    WORD PTR [rsp+0x4],ax
   1a092:	call   11e90 <poll@plt>
   1a097:	test   eax,eax
   1a099:	jle    1a0b0 <wget_ready_2_transfer+0x60>
   1a09b:	movzx  edx,WORD PTR [rsp+0x6]
   1a0a0:	mov    ecx,edx
   1a0a2:	and    ecx,0x1
   1a0a5:	mov    eax,ecx
   1a0a7:	or     eax,0x2
   1a0aa:	and    edx,0x4
   1a0ad:	cmove  eax,ecx
   1a0b0:	mov    rdx,QWORD PTR [rsp+0x8]
   1a0b5:	sub    rdx,QWORD PTR fs:0x28
   1a0be:	jne    1a0c5 <wget_ready_2_transfer+0x75>
   1a0c0:	add    rsp,0x18
   1a0c4:	ret    
   1a0c5:	call   11760 <__stack_chk_fail@plt>
   1a0ca:	nop    WORD PTR [rax+rax*1+0x0]

000000000001a0d0 <wget_ready_2_read>:
   1a0d0:	endbr64 
   1a0d4:	sub    rsp,0x8
   1a0d8:	mov    edx,0x1
   1a0dd:	call   11470 <wget_ready_2_transfer@plt>
   1a0e2:	test   eax,eax
   1a0e4:	setg   al
   1a0e7:	add    rsp,0x8
   1a0eb:	movzx  eax,al
   1a0ee:	ret    
   1a0ef:	nop

000000000001a0f0 <wget_ready_2_write>:
   1a0f0:	endbr64 
   1a0f4:	sub    rsp,0x8
   1a0f8:	mov    edx,0x2
   1a0fd:	call   11470 <wget_ready_2_transfer@plt>
   1a102:	test   eax,eax
   1a104:	setg   al
   1a107:	add    rsp,0x8
   1a10b:	movzx  eax,al
   1a10e:	ret    
   1a10f:	nop

000000000001a110 <wget_read_file>:
   1a110:	endbr64 
   1a114:	push   r15
   1a116:	push   r14
   1a118:	push   r13
   1a11a:	push   r12
   1a11c:	push   rbp
   1a11d:	push   rbx
   1a11e:	sub    rsp,0x1000
   1a125:	or     QWORD PTR [rsp],0x0
   1a12a:	sub    rsp,0xd8
   1a131:	mov    QWORD PTR [rsp+0x8],rsi
   1a136:	mov    rax,QWORD PTR fs:0x28
   1a13f:	mov    QWORD PTR [rsp+0x10c8],rax
   1a147:	xor    eax,eax
   1a149:	test   rdi,rdi
   1a14c:	je     1a340 <wget_read_file+0x230>
   1a152:	cmp    BYTE PTR [rdi],0x2d
   1a155:	mov    rbp,rdi
   1a158:	je     1a218 <wget_read_file+0x108>
   1a15e:	xor    esi,esi
   1a160:	mov    rdi,rbp
   1a163:	xor    eax,eax
   1a165:	call   11070 <open@plt>
   1a16a:	mov    r15d,eax
   1a16d:	cmp    eax,0xffffffff
   1a170:	je     1a350 <wget_read_file+0x240>
   1a176:	lea    rsi,[rsp+0x30]
   1a17b:	mov    edi,eax
   1a17d:	call   12210 <fstat@plt>
   1a182:	test   eax,eax
   1a184:	jne    1a2f0 <wget_read_file+0x1e0>
   1a18a:	mov    rax,QWORD PTR [rsp+0x60]
   1a18f:	lea    rdi,[rax+0x1]
   1a193:	mov    rax,QWORD PTR [rip+0x5be36]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   1a19a:	call   QWORD PTR [rax]
   1a19c:	mov    r13,rax
   1a19f:	test   rax,rax
   1a1a2:	je     1a20a <wget_read_file+0xfa>
   1a1a4:	mov    rdx,QWORD PTR [rsp+0x60]
   1a1a9:	xor    r12d,r12d
   1a1ac:	mov    rbx,rax
   1a1af:	xor    r14d,r14d
   1a1b2:	test   rdx,rdx
   1a1b5:	jg     1a1d1 <wget_read_file+0xc1>
   1a1b7:	jmp    1a1ec <wget_read_file+0xdc>
   1a1b9:	nop    DWORD PTR [rax+0x0]
   1a1c0:	mov    rdx,QWORD PTR [rsp+0x60]
   1a1c5:	add    r12,rax
   1a1c8:	cmp    rdx,r12
   1a1cb:	jle    1a320 <wget_read_file+0x210>
   1a1d1:	lea    rbx,[r13+r12*1+0x0]
   1a1d6:	sub    rdx,r12
   1a1d9:	mov    edi,r15d
   1a1dc:	mov    r14,r12
   1a1df:	mov    rsi,rbx
   1a1e2:	call   11d60 <read@plt>
   1a1e7:	test   rax,rax
   1a1ea:	jg     1a1c0 <wget_read_file+0xb0>
   1a1ec:	mov    rax,QWORD PTR [rsp+0x8]
   1a1f1:	mov    BYTE PTR [rbx],0x0
   1a1f4:	test   rax,rax
   1a1f7:	je     1a1fc <wget_read_file+0xec>
   1a1f9:	mov    QWORD PTR [rax],r14
   1a1fc:	mov    r14,QWORD PTR [rsp+0x60]
   1a201:	cmp    r14,r12
   1a204:	jne    1a2c0 <wget_read_file+0x1b0>
   1a20a:	mov    edi,r15d
   1a20d:	call   12740 <close@plt>
   1a212:	jmp    1a28a <wget_read_file+0x17a>
   1a214:	nop    DWORD PTR [rax+0x0]
   1a218:	cmp    BYTE PTR [rdi+0x1],0x0
   1a21c:	jne    1a15e <wget_read_file+0x4e>
   1a222:	lea    r12,[rsp+0x10]
   1a227:	mov    edx,0x1000
   1a22c:	xor    esi,esi
   1a22e:	mov    rdi,r12
   1a231:	lea    rbp,[rsp+0xc0]
   1a239:	call   108d0 <wget_buffer_init@plt>
   1a23e:	jmp    1a24b <wget_read_file+0x13b>
   1a240:	mov    rsi,rbp
   1a243:	mov    rdi,r12
   1a246:	call   10ea0 <wget_buffer_memcat@plt>
   1a24b:	mov    edx,0x1000
   1a250:	mov    rsi,rbp
   1a253:	xor    edi,edi
   1a255:	call   11d60 <read@plt>
   1a25a:	mov    rdx,rax
   1a25d:	test   rax,rax
   1a260:	jg     1a240 <wget_read_file+0x130>
   1a262:	mov    rcx,QWORD PTR [rsp+0x8]
   1a267:	test   rcx,rcx
   1a26a:	je     1a274 <wget_read_file+0x164>
   1a26c:	mov    rax,QWORD PTR [rsp+0x18]
   1a271:	mov    QWORD PTR [rcx],rax
   1a274:	mov    rdi,r12
   1a277:	mov    r13,QWORD PTR [rsp+0x10]
   1a27c:	mov    QWORD PTR [rsp+0x10],0x0
   1a285:	call   11300 <wget_buffer_deinit@plt>
   1a28a:	mov    rax,QWORD PTR [rsp+0x10c8]
   1a292:	sub    rax,QWORD PTR fs:0x28
   1a29b:	jne    1a378 <wget_read_file+0x268>
   1a2a1:	add    rsp,0x10d8
   1a2a8:	mov    rax,r13
   1a2ab:	pop    rbx
   1a2ac:	pop    rbp
   1a2ad:	pop    r12
   1a2af:	pop    r13
   1a2b1:	pop    r14
   1a2b3:	pop    r15
   1a2b5:	ret    
   1a2b6:	cs nop WORD PTR [rax+rax*1+0x0]
   1a2c0:	xor    edi,edi
   1a2c2:	mov    edx,0x5
   1a2c7:	lea    rsi,[rip+0x318e2]        # 4bbb0 <__func__.0+0xf0>
   1a2ce:	call   10f90 <dcgettext@plt>
   1a2d3:	mov    rcx,r12
   1a2d6:	mov    rdx,r14
   1a2d9:	mov    rsi,rbp
   1a2dc:	mov    rdi,rax
   1a2df:	xor    eax,eax
   1a2e1:	call   11ea0 <wget_error_printf@plt>
   1a2e6:	mov    edi,r15d
   1a2e9:	call   12740 <close@plt>
   1a2ee:	jmp    1a28a <wget_read_file+0x17a>
   1a2f0:	mov    edx,0x5
   1a2f5:	xor    edi,edi
   1a2f7:	lea    rsi,[rip+0x317f8]        # 4baf6 <__func__.0+0x36>
   1a2fe:	xor    r13d,r13d
   1a301:	call   10f90 <dcgettext@plt>
   1a306:	mov    rsi,rbp
   1a309:	mov    rdi,rax
   1a30c:	xor    eax,eax
   1a30e:	call   11ea0 <wget_error_printf@plt>
   1a313:	mov    edi,r15d
   1a316:	call   12740 <close@plt>
   1a31b:	jmp    1a28a <wget_read_file+0x17a>
   1a320:	mov    rax,QWORD PTR [rsp+0x8]
   1a325:	lea    rbx,[r13+r12*1+0x0]
   1a32a:	mov    r14,r12
   1a32d:	mov    BYTE PTR [rbx],0x0
   1a330:	test   rax,rax
   1a333:	jne    1a1f9 <wget_read_file+0xe9>
   1a339:	jmp    1a1fc <wget_read_file+0xec>
   1a33e:	xchg   ax,ax
   1a340:	xor    r13d,r13d
   1a343:	jmp    1a28a <wget_read_file+0x17a>
   1a348:	nop    DWORD PTR [rax+rax*1+0x0]
   1a350:	mov    edx,0x5
   1a355:	lea    rsi,[rip+0x31424]        # 4b780 <base64_2_bin+0x580>
   1a35c:	xor    edi,edi
   1a35e:	xor    r13d,r13d
   1a361:	call   10f90 <dcgettext@plt>
   1a366:	mov    rsi,rbp
   1a369:	mov    rdi,rax
   1a36c:	xor    eax,eax
   1a36e:	call   11ea0 <wget_error_printf@plt>
   1a373:	jmp    1a28a <wget_read_file+0x17a>
   1a378:	call   11760 <__stack_chk_fail@plt>
   1a37d:	nop    DWORD PTR [rax]

000000000001a380 <wget_update_file>:
   1a380:	endbr64 
   1a384:	push   r15
   1a386:	xor    eax,eax
   1a388:	push   r14
   1a38a:	push   r13
   1a38c:	push   r12
   1a38e:	push   rbp
   1a38f:	mov    rbp,rdi
   1a392:	push   rbx
   1a393:	mov    rbx,rsi
   1a396:	mov    rsi,rdi
   1a399:	lea    rdi,[rip+0x3176f]        # 4bb0f <__func__.0+0x4f>
   1a3a0:	sub    rsp,0x28
   1a3a4:	mov    QWORD PTR [rsp],rdx
   1a3a8:	mov    QWORD PTR [rsp+0x8],rcx
   1a3ad:	call   12810 <wget_aprintf@plt>
   1a3b2:	test   rax,rax
   1a3b5:	je     1a5e5 <wget_update_file+0x265>
   1a3bb:	mov    rdi,rbp
   1a3be:	mov    r13,rax
   1a3c1:	call   3fd80 <base_name>
   1a3c6:	lea    rdi,[rip+0x3174b]        # 4bb18 <__func__.0+0x58>
   1a3cd:	mov    r15,rax
   1a3d0:	call   11920 <getenv@plt>
   1a3d5:	mov    r12,rax
   1a3d8:	test   rax,rax
   1a3db:	je     1a550 <wget_update_file+0x1d0>
   1a3e1:	cmp    BYTE PTR [r12],0x0
   1a3e6:	jne    1a5a0 <wget_update_file+0x220>
   1a3ec:	call   10b80 <getuid@plt>
   1a3f1:	mov    rsi,r15
   1a3f4:	lea    rdi,[rip+0x31738]        # 4bb33 <__func__.0+0x73>
   1a3fb:	mov    edx,eax
   1a3fd:	xor    eax,eax
   1a3ff:	call   12810 <wget_aprintf@plt>
   1a404:	mov    r12,rax
   1a407:	test   r12,r12
   1a40a:	je     1a5ef <wget_update_file+0x26f>
   1a410:	mov    edx,0x1a4
   1a415:	mov    esi,0x41
   1a41a:	mov    rdi,r12
   1a41d:	xor    eax,eax
   1a41f:	call   11070 <open@plt>
   1a424:	mov    r14d,eax
   1a427:	cmp    eax,0xffffffff
   1a42a:	je     1a600 <wget_update_file+0x280>
   1a430:	mov    esi,0x2
   1a435:	mov    edi,eax
   1a437:	call   125b0 <flock@plt>
   1a43c:	cmp    eax,0xffffffff
   1a43f:	je     1a6f9 <wget_update_file+0x379>
   1a445:	test   rbx,rbx
   1a448:	je     1a48d <wget_update_file+0x10d>
   1a44a:	lea    rsi,[rip+0x32774]        # 4cbc5 <__func__.5+0x215>
   1a451:	mov    rdi,rbp
   1a454:	call   486d0 <rpl_fopen>
   1a459:	test   rax,rax
   1a45c:	je     1a72c <wget_update_file+0x3ac>
   1a462:	mov    QWORD PTR [rsp+0x10],rax
   1a467:	mov    rdi,QWORD PTR [rsp+0x8]
   1a46c:	mov    rsi,rax
   1a46f:	mov    QWORD PTR [rsp+0x18],rax
   1a474:	call   rbx
   1a476:	mov    r8,QWORD PTR [rsp+0x10]
   1a47b:	test   eax,eax
   1a47d:	jne    1a5d3 <wget_update_file+0x253>
   1a483:	mov    rdi,QWORD PTR [rsp+0x18]
   1a488:	call   404c0 <rpl_fclose>
   1a48d:	xor    ebx,ebx
   1a48f:	cmp    QWORD PTR [rsp],0x0
   1a494:	je     1a51b <wget_update_file+0x19b>
   1a49a:	mov    rdi,r13
   1a49d:	call   10960 <mkstemp@plt>
   1a4a2:	mov    ebx,eax
   1a4a4:	cmp    eax,0xffffffff
   1a4a7:	je     1a670 <wget_update_file+0x2f0>
   1a4ad:	lea    rsi,[rip+0x31c6f]        # 4c123 <__func__.0+0x43>
   1a4b4:	mov    edi,eax
   1a4b6:	call   11660 <fdopen@plt>
   1a4bb:	test   rax,rax
   1a4be:	je     1a768 <wget_update_file+0x3e8>
   1a4c4:	mov    QWORD PTR [rsp+0x10],rax
   1a4c9:	mov    rsi,rax
   1a4cc:	mov    rdi,QWORD PTR [rsp+0x8]
   1a4d1:	mov    rax,QWORD PTR [rsp]
   1a4d5:	call   rax
   1a4d7:	mov    r8,QWORD PTR [rsp+0x10]
   1a4dc:	test   eax,eax
   1a4de:	jne    1a5c3 <wget_update_file+0x243>
   1a4e4:	mov    rdi,r8
   1a4e7:	call   404c0 <rpl_fclose>
   1a4ec:	mov    ebx,eax
   1a4ee:	test   eax,eax
   1a4f0:	jne    1a635 <wget_update_file+0x2b5>
   1a4f6:	mov    rsi,rbp
   1a4f9:	mov    rdi,r13
   1a4fc:	call   10e80 <rename@plt>
   1a501:	cmp    eax,0xffffffff
   1a504:	je     1a6a3 <wget_update_file+0x323>
   1a50a:	mov    rsi,rbp
   1a50d:	lea    rdi,[rip+0x3167c]        # 4bb90 <__func__.0+0xd0>
   1a514:	xor    eax,eax
   1a516:	call   114b0 <wget_debug_printf@plt>
   1a51b:	mov    edi,r14d
   1a51e:	call   12740 <close@plt>
   1a523:	mov    rbp,QWORD PTR [rip+0x5babe]        # 75fe8 <wget_free@@Base-0x1328>
   1a52a:	mov    rdi,r12
   1a52d:	call   QWORD PTR [rbp+0x0]
   1a530:	mov    rdi,r15
   1a533:	call   QWORD PTR [rbp+0x0]
   1a536:	mov    rdi,r13
   1a539:	call   QWORD PTR [rbp+0x0]
   1a53c:	add    rsp,0x28
   1a540:	mov    eax,ebx
   1a542:	pop    rbx
   1a543:	pop    rbp
   1a544:	pop    r12
   1a546:	pop    r13
   1a548:	pop    r14
   1a54a:	pop    r15
   1a54c:	ret    
   1a54d:	nop    DWORD PTR [rax]
   1a550:	lea    rdi,[rip+0x315c8]        # 4bb1f <__func__.0+0x5f>
   1a557:	call   11920 <getenv@plt>
   1a55c:	mov    r12,rax
   1a55f:	test   rax,rax
   1a562:	jne    1a3e1 <wget_update_file+0x61>
   1a568:	lea    rdi,[rip+0x315b4]        # 4bb23 <__func__.0+0x63>
   1a56f:	call   11920 <getenv@plt>
   1a574:	mov    r12,rax
   1a577:	test   rax,rax
   1a57a:	jne    1a3e1 <wget_update_file+0x61>
   1a580:	lea    rdi,[rip+0x315a1]        # 4bb28 <__func__.0+0x68>
   1a587:	call   11920 <getenv@plt>
   1a58c:	mov    r12,rax
   1a58f:	test   rax,rax
   1a592:	jne    1a3e1 <wget_update_file+0x61>
   1a598:	lea    r12,[rip+0x3156b]        # 4bb0a <__func__.0+0x4a>
   1a59f:	nop
   1a5a0:	call   10b80 <getuid@plt>
   1a5a5:	mov    rsi,r12
   1a5a8:	mov    rdx,r15
   1a5ab:	lea    rdi,[rip+0x3157e]        # 4bb30 <__func__.0+0x70>
   1a5b2:	mov    ecx,eax
   1a5b4:	xor    eax,eax
   1a5b6:	call   12810 <wget_aprintf@plt>
   1a5bb:	mov    r12,rax
   1a5be:	jmp    1a407 <wget_update_file+0x87>
   1a5c3:	mov    rdi,r13
   1a5c6:	mov    QWORD PTR [rsp],r8
   1a5ca:	call   10b00 <unlink@plt>
   1a5cf:	mov    r8,QWORD PTR [rsp]
   1a5d3:	mov    rdi,r8
   1a5d6:	mov    ebx,0xffffffff
   1a5db:	call   404c0 <rpl_fclose>
   1a5e0:	jmp    1a51b <wget_update_file+0x19b>
   1a5e5:	mov    ebx,0xfffffffe
   1a5ea:	jmp    1a53c <wget_update_file+0x1bc>
   1a5ef:	mov    rbp,QWORD PTR [rip+0x5b9f2]        # 75fe8 <wget_free@@Base-0x1328>
   1a5f6:	mov    ebx,0xfffffffe
   1a5fb:	jmp    1a530 <wget_update_file+0x1b0>
   1a600:	call   104b0 <__errno_location@plt>
   1a605:	mov    edx,0x5
   1a60a:	xor    edi,edi
   1a60c:	lea    rsi,[rip+0x3152a]        # 4bb3d <__func__.0+0x7d>
   1a613:	mov    r14d,DWORD PTR [rax]
   1a616:	mov    ebx,0xfffffff6
   1a61b:	call   10f90 <dcgettext@plt>
   1a620:	mov    rsi,r12
   1a623:	mov    rdi,rax
   1a626:	mov    edx,r14d
   1a629:	xor    eax,eax
   1a62b:	call   11ea0 <wget_error_printf@plt>
   1a630:	jmp    1a523 <wget_update_file+0x1a3>
   1a635:	mov    rdi,r13
   1a638:	call   10b00 <unlink@plt>
   1a63d:	call   104b0 <__errno_location@plt>
   1a642:	mov    edx,0x5
   1a647:	lea    rsi,[rip+0x31632]        # 4bc80 <__func__.0+0x1c0>
   1a64e:	xor    edi,edi
   1a650:	mov    ebx,DWORD PTR [rax]
   1a652:	call   10f90 <dcgettext@plt>
   1a657:	mov    rsi,r13
   1a65a:	mov    rdi,rax
   1a65d:	mov    edx,ebx
   1a65f:	xor    eax,eax
   1a661:	mov    ebx,0xfffffff5
   1a666:	call   11ea0 <wget_error_printf@plt>
   1a66b:	jmp    1a51b <wget_update_file+0x19b>
   1a670:	call   104b0 <__errno_location@plt>
   1a675:	mov    edx,0x5
   1a67a:	lea    rsi,[rip+0x315b7]        # 4bc38 <__func__.0+0x178>
   1a681:	mov    ebx,DWORD PTR [rax]
   1a683:	xor    edi,edi
   1a685:	call   10f90 <dcgettext@plt>
   1a68a:	mov    edx,ebx
   1a68c:	mov    rsi,r13
   1a68f:	mov    ebx,0xfffffff6
   1a694:	mov    rdi,rax
   1a697:	xor    eax,eax
   1a699:	call   11ea0 <wget_error_printf@plt>
   1a69e:	jmp    1a51b <wget_update_file+0x19b>
   1a6a3:	call   104b0 <__errno_location@plt>
   1a6a8:	mov    edx,0x5
   1a6ad:	lea    rsi,[rip+0x315f4]        # 4bca8 <__func__.0+0x1e8>
   1a6b4:	xor    edi,edi
   1a6b6:	mov    ebx,DWORD PTR [rax]
   1a6b8:	call   10f90 <dcgettext@plt>
   1a6bd:	mov    rdx,rbp
   1a6c0:	mov    rsi,r13
   1a6c3:	mov    ecx,ebx
   1a6c5:	mov    rdi,rax
   1a6c8:	xor    eax,eax
   1a6ca:	mov    ebx,0xfffffff5
   1a6cf:	call   11ea0 <wget_error_printf@plt>
   1a6d4:	mov    edx,0x5
   1a6d9:	lea    rsi,[rip+0x31493]        # 4bb73 <__func__.0+0xb3>
   1a6e0:	xor    edi,edi
   1a6e2:	call   10f90 <dcgettext@plt>
   1a6e7:	mov    rsi,r13
   1a6ea:	mov    rdi,rax
   1a6ed:	xor    eax,eax
   1a6ef:	call   11ea0 <wget_error_printf@plt>
   1a6f4:	jmp    1a51b <wget_update_file+0x19b>
   1a6f9:	call   104b0 <__errno_location@plt>
   1a6fe:	mov    edx,0x5
   1a703:	lea    rsi,[rip+0x3144f]        # 4bb59 <__func__.0+0x99>
   1a70a:	xor    edi,edi
   1a70c:	mov    ebx,DWORD PTR [rax]
   1a70e:	call   10f90 <dcgettext@plt>
   1a713:	mov    rsi,r12
   1a716:	mov    rdi,rax
   1a719:	mov    edx,ebx
   1a71b:	xor    eax,eax
   1a71d:	mov    ebx,0xfffffff5
   1a722:	call   11ea0 <wget_error_printf@plt>
   1a727:	jmp    1a51b <wget_update_file+0x19b>
   1a72c:	call   104b0 <__errno_location@plt>
   1a731:	mov    ebx,DWORD PTR [rax]
   1a733:	cmp    ebx,0x2
   1a736:	je     1a48d <wget_update_file+0x10d>
   1a73c:	mov    edx,0x5
   1a741:	lea    rsi,[rip+0x314d0]        # 4bc18 <__func__.0+0x158>
   1a748:	xor    edi,edi
   1a74a:	call   10f90 <dcgettext@plt>
   1a74f:	mov    edx,ebx
   1a751:	mov    rsi,rbp
   1a754:	mov    ebx,0xfffffff6
   1a759:	mov    rdi,rax
   1a75c:	xor    eax,eax
   1a75e:	call   11ea0 <wget_error_printf@plt>
   1a763:	jmp    1a51b <wget_update_file+0x19b>
   1a768:	mov    rdi,r13
   1a76b:	call   10b00 <unlink@plt>
   1a770:	mov    edi,ebx
   1a772:	call   12740 <close@plt>
   1a777:	call   104b0 <__errno_location@plt>
   1a77c:	mov    edx,0x5
   1a781:	lea    rsi,[rip+0x314d8]        # 4bc60 <__func__.0+0x1a0>
   1a788:	mov    ebx,DWORD PTR [rax]
   1a78a:	jmp    1a683 <wget_update_file+0x303>
   1a78f:	nop

000000000001a790 <wget_truncate>:
   1a790:	endbr64 
   1a794:	push   r12
   1a796:	push   rbp
   1a797:	sub    rsp,0x8
   1a79b:	test   rdi,rdi
   1a79e:	je     1a7f8 <wget_truncate+0x68>
   1a7a0:	mov    r12,rsi
   1a7a3:	xor    eax,eax
   1a7a5:	mov    esi,0x2
   1a7aa:	call   11070 <open@plt>
   1a7af:	mov    ebp,eax
   1a7b1:	cmp    eax,0xffffffff
   1a7b4:	je     1a7f0 <wget_truncate+0x60>
   1a7b6:	mov    rsi,r12
   1a7b9:	mov    edi,eax
   1a7bb:	call   11c00 <ftruncate@plt>
   1a7c0:	mov    edi,ebp
   1a7c2:	mov    r12d,eax
   1a7c5:	call   12740 <close@plt>
   1a7ca:	test   r12d,r12d
   1a7cd:	jne    1a7e0 <wget_truncate+0x50>
   1a7cf:	add    rsp,0x8
   1a7d3:	mov    eax,r12d
   1a7d6:	pop    rbp
   1a7d7:	pop    r12
   1a7d9:	ret    
   1a7da:	nop    WORD PTR [rax+rax*1+0x0]
   1a7e0:	mov    r12d,0xfffffff5
   1a7e6:	jmp    1a7cf <wget_truncate+0x3f>
   1a7e8:	nop    DWORD PTR [rax+rax*1+0x0]
   1a7f0:	mov    r12d,0xfffffff6
   1a7f6:	jmp    1a7cf <wget_truncate+0x3f>
   1a7f8:	mov    r12d,0xfffffffd
   1a7fe:	jmp    1a7cf <wget_truncate+0x3f>

000000000001a800 <hash_hsts>:
   1a800:	endbr64 
   1a804:	mov    rcx,QWORD PTR [rdi]
   1a807:	movzx  eax,WORD PTR [rdi+0x20]
   1a80b:	movzx  edx,BYTE PTR [rcx]
   1a80e:	test   dl,dl
   1a810:	je     1a828 <hash_hsts+0x28>
   1a812:	nop    WORD PTR [rax+rax*1+0x0]
   1a818:	imul   eax,eax,0x65
   1a81b:	add    rcx,0x1
   1a81f:	add    eax,edx
   1a821:	movzx  edx,BYTE PTR [rcx]
   1a824:	test   dl,dl
   1a826:	jne    1a818 <hash_hsts+0x18>
   1a828:	ret    
   1a829:	nop    DWORD PTR [rax+0x0]

000000000001a830 <hsts_db_save>:
   1a830:	endbr64 
   1a834:	push   r12
   1a836:	push   rbp
   1a837:	mov    rbp,rsi
   1a83a:	sub    rsp,0x8
   1a83e:	mov    r12,QWORD PTR [rdi+0x8]
   1a842:	mov    rdi,r12
   1a845:	call   125c0 <wget_hashmap_size@plt>
   1a84a:	mov    r8d,eax
   1a84d:	xor    eax,eax
   1a84f:	test   r8d,r8d
   1a852:	jle    1a8bd <hsts_db_save+0x8d>
   1a854:	mov    rcx,rbp
   1a857:	mov    edx,0xf
   1a85c:	mov    esi,0x1
   1a861:	lea    rdi,[rip+0x31479]        # 4bce1 <__func__.0+0x11>
   1a868:	call   12730 <fwrite@plt>
   1a86d:	mov    rcx,rbp
   1a870:	mov    edx,0x34
   1a875:	mov    esi,0x1
   1a87a:	lea    rdi,[rip+0x314d7]        # 4bd58 <__func__.0+0x88>
   1a881:	call   12730 <fwrite@plt>
   1a886:	mov    rcx,rbp
   1a889:	mov    edx,0x3b
   1a88e:	mov    esi,0x1
   1a893:	lea    rdi,[rip+0x314f6]        # 4bd90 <__func__.0+0xc0>
   1a89a:	call   12730 <fwrite@plt>
   1a89f:	mov    rdx,rbp
   1a8a2:	lea    rsi,[rip+0x27]        # 1a8d0 <hsts_save>
   1a8a9:	mov    rdi,r12
   1a8ac:	call   12570 <wget_hashmap_browse@plt>
   1a8b1:	mov    rdi,rbp
   1a8b4:	call   12580 <ferror@plt>
   1a8b9:	neg    eax
   1a8bb:	sbb    eax,eax
   1a8bd:	add    rsp,0x8
   1a8c1:	pop    rbp
   1a8c2:	pop    r12
   1a8c4:	ret    
   1a8c5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

000000000001a8d0 <hsts_save>:
   1a8d0:	endbr64 
   1a8d4:	sub    rsp,0x10
   1a8d8:	movzx  r8d,BYTE PTR [rsi+0x22]
   1a8dd:	movzx  ecx,WORD PTR [rsi+0x20]
   1a8e1:	push   QWORD PTR [rsi+0x18]
   1a8e4:	mov    rdx,QWORD PTR [rsi]
   1a8e7:	xor    eax,eax
   1a8e9:	mov    r9,QWORD PTR [rsi+0x10]
   1a8ed:	and    r8d,0x1
   1a8f1:	lea    rsi,[rip+0x313f9]        # 4bcf1 <__func__.0+0x21>
   1a8f8:	call   108e0 <wget_fprintf@plt>
   1a8fd:	xor    eax,eax
   1a8ff:	add    rsp,0x18
   1a903:	ret    
   1a904:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1a90f:	nop

000000000001a910 <compare_hsts>:
   1a910:	endbr64 
   1a914:	push   rbp
   1a915:	mov    rbp,rdi
   1a918:	push   rbx
   1a919:	mov    rbx,rsi
   1a91c:	sub    rsp,0x8
   1a920:	mov    rsi,QWORD PTR [rsi]
   1a923:	mov    rdi,QWORD PTR [rdi]
   1a926:	call   11c60 <strcmp@plt>
   1a92b:	test   eax,eax
   1a92d:	jne    1a93f <compare_hsts+0x2f>
   1a92f:	movzx  eax,WORD PTR [rbx+0x20]
   1a933:	cmp    WORD PTR [rbp+0x20],ax
   1a937:	jb     1a950 <compare_hsts+0x40>
   1a939:	seta   al
   1a93c:	movzx  eax,al
   1a93f:	add    rsp,0x8
   1a943:	pop    rbx
   1a944:	pop    rbp
   1a945:	ret    
   1a946:	cs nop WORD PTR [rax+rax*1+0x0]
   1a950:	mov    eax,0xffffffff
   1a955:	jmp    1a93f <compare_hsts+0x2f>
   1a957:	nop    WORD PTR [rax+rax*1+0x0]

000000000001a960 <free_hsts>:
   1a960:	endbr64 
   1a964:	test   rdi,rdi
   1a967:	je     1a9a0 <free_hsts+0x40>
   1a969:	push   rbp
   1a96a:	mov    rbp,rdi
   1a96d:	push   rbx
   1a96e:	sub    rsp,0x8
   1a972:	mov    rdi,QWORD PTR [rdi]
   1a975:	mov    rbx,QWORD PTR [rip+0x5b66c]        # 75fe8 <wget_free@@Base-0x1328>
   1a97c:	test   rdi,rdi
   1a97f:	je     1a98b <free_hsts+0x2b>
   1a981:	call   QWORD PTR [rbx]
   1a983:	mov    QWORD PTR [rbp+0x0],0x0
   1a98b:	mov    rax,QWORD PTR [rbx]
   1a98e:	add    rsp,0x8
   1a992:	mov    rdi,rbp
   1a995:	pop    rbx
   1a996:	pop    rbp
   1a997:	jmp    rax
   1a999:	nop    DWORD PTR [rax+0x0]
   1a9a0:	ret    
   1a9a1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1a9ac:	nop    DWORD PTR [rax+0x0]

000000000001a9b0 <hsts_db_add_entry.part.0>:
   1a9b0:	push   r12
   1a9b2:	push   rbp
   1a9b3:	mov    rbp,rsi
   1a9b6:	push   rbx
   1a9b7:	mov    rbx,rdi
   1a9ba:	sub    rsp,0x10
   1a9be:	mov    rdi,QWORD PTR [rdi+0x10]
   1a9c2:	mov    rax,QWORD PTR fs:0x28
   1a9cb:	mov    QWORD PTR [rsp+0x8],rax
   1a9d0:	xor    eax,eax
   1a9d2:	call   12040 <wget_thread_mutex_lock@plt>
   1a9d7:	cmp    QWORD PTR [rbp+0x18],0x0
   1a9dc:	jne    1aa40 <hsts_db_add_entry.part.0+0x90>
   1a9de:	mov    rdi,QWORD PTR [rbx+0x8]
   1a9e2:	mov    rsi,rbp
   1a9e5:	call   10b70 <wget_hashmap_remove@plt>
   1a9ea:	test   eax,eax
   1a9ec:	jne    1aad0 <hsts_db_add_entry.part.0+0x120>
   1a9f2:	mov    rdi,QWORD PTR [rbp+0x0]
   1a9f6:	mov    r12,QWORD PTR [rip+0x5b5eb]        # 75fe8 <wget_free@@Base-0x1328>
   1a9fd:	test   rdi,rdi
   1aa00:	je     1aa0e <hsts_db_add_entry.part.0+0x5e>
   1aa02:	call   QWORD PTR [r12]
   1aa06:	mov    QWORD PTR [rbp+0x0],0x0
   1aa0e:	mov    rdi,rbp
   1aa11:	call   QWORD PTR [r12]
   1aa15:	mov    rax,QWORD PTR [rsp+0x8]
   1aa1a:	sub    rax,QWORD PTR fs:0x28
   1aa23:	jne    1ab34 <hsts_db_add_entry.part.0+0x184>
   1aa29:	mov    rdi,QWORD PTR [rbx+0x10]
   1aa2d:	add    rsp,0x10
   1aa31:	pop    rbx
   1aa32:	pop    rbp
   1aa33:	pop    r12
   1aa35:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   1aa3a:	nop    WORD PTR [rax+rax*1+0x0]
   1aa40:	mov    rdi,QWORD PTR [rbx+0x8]
   1aa44:	mov    rdx,rsp
   1aa47:	mov    rsi,rbp
   1aa4a:	call   10520 <wget_hashmap_get@plt>
   1aa4f:	test   eax,eax
   1aa51:	je     1ab20 <hsts_db_add_entry.part.0+0x170>
   1aa57:	mov    rax,QWORD PTR [rsp]
   1aa5b:	mov    rdx,QWORD PTR [rbp+0x10]
   1aa5f:	mov    rcx,QWORD PTR [rbp+0x18]
   1aa63:	cmp    QWORD PTR [rax+0x10],rdx
   1aa67:	jl     1aa73 <hsts_db_add_entry.part.0+0xc3>
   1aa69:	cmp    QWORD PTR [rax+0x18],rcx
   1aa6d:	je     1ab00 <hsts_db_add_entry.part.0+0x150>
   1aa73:	mov    QWORD PTR [rax+0x10],rdx
   1aa77:	mov    rdx,QWORD PTR [rbp+0x8]
   1aa7b:	lea    rdi,[rip+0x3134e]        # 4bdd0 <__func__.0+0x100>
   1aa82:	movzx  r8d,BYTE PTR [rbp+0x22]
   1aa87:	mov    rsi,QWORD PTR [rax]
   1aa8a:	mov    QWORD PTR [rax+0x18],rcx
   1aa8e:	mov    QWORD PTR [rax+0x8],rdx
   1aa92:	movzx  edx,BYTE PTR [rax+0x22]
   1aa96:	and    r8d,0x1
   1aa9a:	and    edx,0xfffffffe
   1aa9d:	or     edx,r8d
   1aaa0:	and    r8d,0x1
   1aaa4:	mov    BYTE PTR [rax+0x22],dl
   1aaa7:	movzx  edx,WORD PTR [rax+0x20]
   1aaab:	xor    eax,eax
   1aaad:	call   114b0 <wget_debug_printf@plt>
   1aab2:	mov    rdi,QWORD PTR [rbp+0x0]
   1aab6:	mov    r12,QWORD PTR [rip+0x5b52b]        # 75fe8 <wget_free@@Base-0x1328>
   1aabd:	test   rdi,rdi
   1aac0:	jne    1aa02 <hsts_db_add_entry.part.0+0x52>
   1aac6:	jmp    1aa0e <hsts_db_add_entry.part.0+0x5e>
   1aacb:	nop    DWORD PTR [rax+rax*1+0x0]
   1aad0:	movzx  edx,WORD PTR [rbp+0x20]
   1aad4:	mov    rsi,QWORD PTR [rbp+0x0]
   1aad8:	lea    rdi,[rip+0x31227]        # 4bd06 <__func__.0+0x36>
   1aadf:	xor    eax,eax
   1aae1:	call   114b0 <wget_debug_printf@plt>
   1aae6:	mov    rdi,QWORD PTR [rbp+0x0]
   1aaea:	mov    r12,QWORD PTR [rip+0x5b4f7]        # 75fe8 <wget_free@@Base-0x1328>
   1aaf1:	test   rdi,rdi
   1aaf4:	jne    1aa02 <hsts_db_add_entry.part.0+0x52>
   1aafa:	jmp    1aa0e <hsts_db_add_entry.part.0+0x5e>
   1aaff:	nop
   1ab00:	movzx  esi,BYTE PTR [rax+0x22]
   1ab04:	xor    sil,BYTE PTR [rbp+0x22]
   1ab08:	and    esi,0x1
   1ab0b:	je     1a9f2 <hsts_db_add_entry.part.0+0x42>
   1ab11:	jmp    1aa73 <hsts_db_add_entry.part.0+0xc3>
   1ab16:	cs nop WORD PTR [rax+rax*1+0x0]
   1ab20:	mov    rdi,QWORD PTR [rbx+0x8]
   1ab24:	mov    rdx,rbp
   1ab27:	mov    rsi,rbp
   1ab2a:	call   10c90 <wget_hashmap_put@plt>
   1ab2f:	jmp    1aa15 <hsts_db_add_entry.part.0+0x65>
   1ab34:	call   11760 <__stack_chk_fail@plt>
   1ab39:	nop    DWORD PTR [rax+0x0]

000000000001ab40 <hsts_db_load>:
   1ab40:	endbr64 
   1ab44:	push   r15
   1ab46:	push   r14
   1ab48:	push   r13
   1ab4a:	push   r12
   1ab4c:	push   rbp
   1ab4d:	mov    rbp,rsi
   1ab50:	push   rbx
   1ab51:	mov    rbx,rdi
   1ab54:	sub    rsp,0x108
   1ab5b:	mov    QWORD PTR [rsp+0x18],rdi
   1ab60:	xor    edi,edi
   1ab62:	mov    rax,QWORD PTR fs:0x28
   1ab6b:	mov    QWORD PTR [rsp+0xf8],rax
   1ab73:	xor    eax,eax
   1ab75:	mov    QWORD PTR [rsp+0x20],0x0
   1ab7e:	mov    QWORD PTR [rsp+0x28],0x0
   1ab87:	call   11480 <time@plt>
   1ab8c:	mov    rdi,rbp
   1ab8f:	mov    QWORD PTR [rsp+0x10],rax
   1ab94:	call   11650 <fileno@plt>
   1ab99:	lea    rsi,[rsp+0x60]
   1ab9e:	mov    edi,eax
   1aba0:	call   12210 <fstat@plt>
   1aba5:	test   eax,eax
   1aba7:	jne    1abc4 <hsts_db_load+0x84>
   1aba9:	mov    rax,QWORD PTR [rsp+0xb8]
   1abb1:	cmp    rax,QWORD PTR [rbx+0x18]
   1abb5:	je     1ad04 <hsts_db_load+0x1c4>
   1abbb:	mov    rdi,QWORD PTR [rsp+0x18]
   1abc0:	mov    QWORD PTR [rdi+0x18],rax
   1abc4:	lea    rax,[rsp+0x30]
   1abc9:	lea    r13,[rsp+0x28]
   1abce:	mov    QWORD PTR [rsp+0x8],rax
   1abd3:	lea    r12,[rsp+0x20]
   1abd8:	nop    DWORD PTR [rax+rax*1+0x0]
   1abe0:	mov    rdx,rbp
   1abe3:	mov    rsi,r13
   1abe6:	mov    rdi,r12
   1abe9:	call   10db0 <wget_getline@plt>
   1abee:	mov    rbx,rax
   1abf1:	test   rax,rax
   1abf4:	js     1acd8 <hsts_db_load+0x198>
   1abfa:	mov    rcx,QWORD PTR [rsp+0x20]
   1abff:	mov    QWORD PTR [rsp],rcx
   1ac03:	call   116c0 <__ctype_b_loc@plt>
   1ac08:	mov    rcx,QWORD PTR [rsp]
   1ac0c:	mov    rsi,QWORD PTR [rax]
   1ac0f:	mov    r15,rax
   1ac12:	mov    r14,rcx
   1ac15:	jmp    1ac24 <hsts_db_load+0xe4>
   1ac17:	nop    WORD PTR [rax+rax*1+0x0]
   1ac20:	add    r14,0x1
   1ac24:	movsx  rdx,BYTE PTR [r14]
   1ac28:	test   BYTE PTR [rsi+rdx*2+0x1],0x20
   1ac2d:	jne    1ac20 <hsts_db_load+0xe0>
   1ac2f:	test   dl,dl
   1ac31:	je     1abe0 <hsts_db_load+0xa0>
   1ac33:	cmp    dl,0x23
   1ac36:	je     1abe0 <hsts_db_load+0xa0>
   1ac38:	test   rbx,rbx
   1ac3b:	jne    1ac4f <hsts_db_load+0x10f>
   1ac3d:	jmp    1ac5b <hsts_db_load+0x11b>
   1ac3f:	nop
   1ac40:	sub    rbx,0x1
   1ac44:	mov    BYTE PTR [rcx+rbx*1],0x0
   1ac48:	je     1ac5b <hsts_db_load+0x11b>
   1ac4a:	mov    rcx,QWORD PTR [rsp+0x20]
   1ac4f:	movzx  eax,BYTE PTR [rcx+rbx*1]
   1ac53:	cmp    al,0xa
   1ac55:	je     1ac40 <hsts_db_load+0x100>
   1ac57:	cmp    al,0xd
   1ac59:	je     1ac40 <hsts_db_load+0x100>
   1ac5b:	mov    rax,QWORD PTR [rsp+0x8]
   1ac60:	pxor   xmm0,xmm0
   1ac64:	xor    edi,edi
   1ac66:	mov    QWORD PTR [rax+0x20],0x0
   1ac6e:	movaps XMMWORD PTR [rax],xmm0
   1ac71:	movaps XMMWORD PTR [rax+0x10],xmm0
   1ac75:	call   11480 <time@plt>
   1ac7a:	mov    QWORD PTR [rsp+0x40],rax
   1ac7f:	movsx  rax,BYTE PTR [r14]
   1ac83:	test   al,al
   1ac85:	jne    1ad30 <hsts_db_load+0x1f0>
   1ac8b:	mov    rdi,QWORD PTR [rsp+0x30]
   1ac90:	test   rdi,rdi
   1ac93:	je     1aca7 <hsts_db_load+0x167>
   1ac95:	mov    rax,QWORD PTR [rip+0x5b34c]        # 75fe8 <wget_free@@Base-0x1328>
   1ac9c:	call   QWORD PTR [rax]
   1ac9e:	mov    QWORD PTR [rsp+0x30],0x0
   1aca7:	mov    r14,QWORD PTR [rsp+0x20]
   1acac:	xor    edi,edi
   1acae:	mov    edx,0x5
   1acb3:	lea    rsi,[rip+0x3114e]        # 4be08 <__func__.0+0x138>
   1acba:	call   10f90 <dcgettext@plt>
   1acbf:	mov    rdi,rax
   1acc2:	mov    rsi,r14
   1acc5:	xor    eax,eax
   1acc7:	call   11ea0 <wget_error_printf@plt>
   1accc:	jmp    1abe0 <hsts_db_load+0xa0>
   1acd1:	nop    DWORD PTR [rax+0x0]
   1acd8:	mov    rdi,QWORD PTR [rsp+0x20]
   1acdd:	test   rdi,rdi
   1ace0:	je     1acf4 <hsts_db_load+0x1b4>
   1ace2:	mov    rax,QWORD PTR [rip+0x5b2ff]        # 75fe8 <wget_free@@Base-0x1328>
   1ace9:	call   QWORD PTR [rax]
   1aceb:	mov    QWORD PTR [rsp+0x20],0x0
   1acf4:	mov    rdi,rbp
   1acf7:	call   12580 <ferror@plt>
   1acfc:	test   eax,eax
   1acfe:	jne    1af50 <hsts_db_load+0x410>
   1ad04:	xor    eax,eax
   1ad06:	mov    rdx,QWORD PTR [rsp+0xf8]
   1ad0e:	sub    rdx,QWORD PTR fs:0x28
   1ad17:	jne    1af7f <hsts_db_load+0x43f>
   1ad1d:	add    rsp,0x108
   1ad24:	pop    rbx
   1ad25:	pop    rbp
   1ad26:	pop    r12
   1ad28:	pop    r13
   1ad2a:	pop    r14
   1ad2c:	pop    r15
   1ad2e:	ret    
   1ad2f:	nop
   1ad30:	mov    rdx,QWORD PTR [r15]
   1ad33:	mov    rbx,r14
   1ad36:	jmp    1ad4d <hsts_db_load+0x20d>
   1ad38:	nop    DWORD PTR [rax+rax*1+0x0]
   1ad40:	movsx  rax,BYTE PTR [rbx+0x1]
   1ad45:	add    rbx,0x1
   1ad49:	test   al,al
   1ad4b:	je     1ad54 <hsts_db_load+0x214>
   1ad4d:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   1ad52:	je     1ad40 <hsts_db_load+0x200>
   1ad54:	mov    rsi,rbx
   1ad57:	mov    rdi,r14
   1ad5a:	sub    rsi,r14
   1ad5d:	call   126b0 <wget_strmemdup@plt>
   1ad62:	mov    QWORD PTR [rsp+0x30],rax
   1ad67:	cmp    BYTE PTR [rbx],0x0
   1ad6a:	je     1ac8b <hsts_db_load+0x14b>
   1ad70:	movsx  rax,BYTE PTR [rbx+0x1]
   1ad75:	lea    rdi,[rbx+0x1]
   1ad79:	test   al,al
   1ad7b:	je     1af77 <hsts_db_load+0x437>
   1ad81:	mov    rdx,QWORD PTR [r15]
   1ad84:	mov    rbx,rdi
   1ad87:	jmp    1ad9d <hsts_db_load+0x25d>
   1ad89:	nop    DWORD PTR [rax+0x0]
   1ad90:	movsx  rax,BYTE PTR [rbx+0x1]
   1ad95:	add    rbx,0x1
   1ad99:	test   al,al
   1ad9b:	je     1ada4 <hsts_db_load+0x264>
   1ad9d:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   1ada2:	je     1ad90 <hsts_db_load+0x250>
   1ada4:	xor    esi,esi
   1ada6:	mov    edx,0xa
   1adab:	call   11c90 <strtol@plt>
   1adb0:	mov    edi,0x1bb
   1adb5:	test   ax,ax
   1adb8:	cmove  eax,edi
   1adbb:	mov    WORD PTR [rsp+0x50],ax
   1adc0:	cmp    BYTE PTR [rbx],0x0
   1adc3:	je     1ac8b <hsts_db_load+0x14b>
   1adc9:	movsx  rax,BYTE PTR [rbx+0x1]
   1adce:	lea    rdi,[rbx+0x1]
   1add2:	test   al,al
   1add4:	je     1af6f <hsts_db_load+0x42f>
   1adda:	mov    rdx,QWORD PTR [r15]
   1addd:	mov    rbx,rdi
   1ade0:	jmp    1adf5 <hsts_db_load+0x2b5>
   1ade2:	nop    WORD PTR [rax+rax*1+0x0]
   1ade8:	movsx  rax,BYTE PTR [rbx+0x1]
   1aded:	add    rbx,0x1
   1adf1:	test   al,al
   1adf3:	je     1adfc <hsts_db_load+0x2bc>
   1adf5:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   1adfa:	je     1ade8 <hsts_db_load+0x2a8>
   1adfc:	mov    edx,0xa
   1ae01:	xor    esi,esi
   1ae03:	call   11c90 <strtol@plt>
   1ae08:	test   eax,eax
   1ae0a:	movzx  eax,BYTE PTR [rsp+0x52]
   1ae0f:	setne  dl
   1ae12:	and    eax,0xfffffffe
   1ae15:	or     eax,edx
   1ae17:	mov    BYTE PTR [rsp+0x52],al
   1ae1b:	cmp    BYTE PTR [rbx],0x0
   1ae1e:	je     1ac8b <hsts_db_load+0x14b>
   1ae24:	movsx  rax,BYTE PTR [rbx+0x1]
   1ae29:	lea    rdi,[rbx+0x1]
   1ae2d:	test   al,al
   1ae2f:	je     1af67 <hsts_db_load+0x427>
   1ae35:	mov    rdx,QWORD PTR [r15]
   1ae38:	mov    rbx,rdi
   1ae3b:	jmp    1ae4d <hsts_db_load+0x30d>
   1ae3d:	nop    DWORD PTR [rax]
   1ae40:	movsx  rax,BYTE PTR [rbx+0x1]
   1ae45:	add    rbx,0x1
   1ae49:	test   al,al
   1ae4b:	je     1ae54 <hsts_db_load+0x314>
   1ae4d:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   1ae52:	je     1ae40 <hsts_db_load+0x300>
   1ae54:	mov    edx,0xa
   1ae59:	xor    esi,esi
   1ae5b:	call   10600 <strtoll@plt>
   1ae60:	xor    edx,edx
   1ae62:	movabs rdi,0x3ffffffffffffffe
   1ae6c:	cmp    rax,rdi
   1ae6f:	cmova  rax,rdx
   1ae73:	mov    QWORD PTR [rsp+0x40],rax
   1ae78:	cmp    BYTE PTR [rbx],0x0
   1ae7b:	je     1ac8b <hsts_db_load+0x14b>
   1ae81:	movsx  rax,BYTE PTR [rbx+0x1]
   1ae86:	lea    rdi,[rbx+0x1]
   1ae8a:	test   al,al
   1ae8c:	je     1aeb4 <hsts_db_load+0x374>
   1ae8e:	mov    rcx,QWORD PTR [r15]
   1ae91:	mov    rdx,rdi
   1ae94:	jmp    1aead <hsts_db_load+0x36d>
   1ae96:	cs nop WORD PTR [rax+rax*1+0x0]
   1aea0:	movsx  rax,BYTE PTR [rdx+0x1]
   1aea5:	add    rdx,0x1
   1aea9:	test   al,al
   1aeab:	je     1aeb4 <hsts_db_load+0x374>
   1aead:	test   BYTE PTR [rcx+rax*2+0x1],0x20
   1aeb2:	je     1aea0 <hsts_db_load+0x360>
   1aeb4:	mov    edx,0xa
   1aeb9:	xor    esi,esi
   1aebb:	call   10600 <strtoll@plt>
   1aec0:	movabs rdi,0x3ffffffffffffffe
   1aeca:	cmp    rax,rdi
   1aecd:	ja     1af0f <hsts_db_load+0x3cf>
   1aecf:	mov    QWORD PTR [rsp+0x48],rax
   1aed4:	test   rax,rax
   1aed7:	je     1aede <hsts_db_load+0x39e>
   1aed9:	add    rax,QWORD PTR [rsp+0x40]
   1aede:	mov    QWORD PTR [rsp+0x38],rax
   1aee3:	cmp    rax,QWORD PTR [rsp+0x10]
   1aee8:	jge    1af26 <hsts_db_load+0x3e6>
   1aeea:	mov    rdi,QWORD PTR [rsp+0x30]
   1aeef:	test   rdi,rdi
   1aef2:	je     1abe0 <hsts_db_load+0xa0>
   1aef8:	mov    rax,QWORD PTR [rip+0x5b0e9]        # 75fe8 <wget_free@@Base-0x1328>
   1aeff:	call   QWORD PTR [rax]
   1af01:	mov    QWORD PTR [rsp+0x30],0x0
   1af0a:	jmp    1abe0 <hsts_db_load+0xa0>
   1af0f:	mov    QWORD PTR [rsp+0x48],0x0
   1af18:	xor    eax,eax
   1af1a:	mov    QWORD PTR [rsp+0x38],rax
   1af1f:	cmp    rax,QWORD PTR [rsp+0x10]
   1af24:	jl     1aeea <hsts_db_load+0x3aa>
   1af26:	mov    rdi,QWORD PTR [rsp+0x8]
   1af2b:	mov    esi,0x28
   1af30:	call   10dc0 <wget_memdup@plt>
   1af35:	mov    rsi,rax
   1af38:	test   rax,rax
   1af3b:	je     1abe0 <hsts_db_load+0xa0>
   1af41:	mov    rdi,QWORD PTR [rsp+0x18]
   1af46:	call   1a9b0 <hsts_db_add_entry.part.0>
   1af4b:	jmp    1abe0 <hsts_db_load+0xa0>
   1af50:	mov    rax,QWORD PTR [rsp+0x18]
   1af55:	mov    QWORD PTR [rax+0x18],0x0
   1af5d:	mov    eax,0xffffffff
   1af62:	jmp    1ad06 <hsts_db_load+0x1c6>
   1af67:	mov    rbx,rdi
   1af6a:	jmp    1ae54 <hsts_db_load+0x314>
   1af6f:	mov    rbx,rdi
   1af72:	jmp    1adfc <hsts_db_load+0x2bc>
   1af77:	mov    rbx,rdi
   1af7a:	jmp    1ada4 <hsts_db_load+0x264>
   1af7f:	call   11760 <__stack_chk_fail@plt>
   1af84:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1af8f:	nop

000000000001af90 <wget_hsts_set_plugin>:
   1af90:	endbr64 
   1af94:	mov    QWORD PTR [rip+0x5c4cd],rdi        # 77468 <plugin_vtable>
   1af9b:	ret    
   1af9c:	nop    DWORD PTR [rax+0x0]

000000000001afa0 <wget_hsts_host_match>:
   1afa0:	endbr64 
   1afa4:	push   r14
   1afa6:	push   r13
   1afa8:	push   r12
   1afaa:	mov    r12,rdi
   1afad:	push   rbp
   1afae:	mov    rbp,rsi
   1afb1:	push   rbx
   1afb2:	mov    ebx,edx
   1afb4:	sub    rsp,0x40
   1afb8:	mov    rax,QWORD PTR fs:0x28
   1afc1:	mov    QWORD PTR [rsp+0x38],rax
   1afc6:	mov    rax,QWORD PTR [rip+0x5c49b]        # 77468 <plugin_vtable>
   1afcd:	test   rax,rax
   1afd0:	je     1b000 <wget_hsts_host_match+0x60>
   1afd2:	mov    rdx,QWORD PTR [rsp+0x38]
   1afd7:	sub    rdx,QWORD PTR fs:0x28
   1afe0:	jne    1b0c7 <wget_hsts_host_match+0x127>
   1afe6:	mov    rax,QWORD PTR [rax]
   1afe9:	add    rsp,0x40
   1afed:	movzx  edx,bx
   1aff0:	pop    rbx
   1aff1:	pop    rbp
   1aff2:	pop    r12
   1aff4:	pop    r13
   1aff6:	pop    r14
   1aff8:	jmp    rax
   1affa:	nop    WORD PTR [rax+rax*1+0x0]
   1b000:	test   rdi,rdi
   1b003:	je     1b0a0 <wget_hsts_host_match+0x100>
   1b009:	xor    edi,edi
   1b00b:	mov    r13d,edx
   1b00e:	call   11480 <time@plt>
   1b013:	cmp    bx,0x50
   1b017:	mov    rdi,QWORD PTR [r12+0x8]
   1b01c:	lea    rbx,[rsp+0x10]
   1b021:	mov    r14,rax
   1b024:	mov    eax,0x1bb
   1b029:	mov    rsi,rbx
   1b02c:	mov    QWORD PTR [rsp+0x10],rbp
   1b031:	cmove  r13d,eax
   1b035:	mov    WORD PTR [rsp+0x30],r13w
   1b03b:	lea    r13,[rsp+0x8]
   1b040:	mov    rdx,r13
   1b043:	call   10520 <wget_hashmap_get@plt>
   1b048:	test   eax,eax
   1b04a:	jne    1b0c0 <wget_hsts_host_match+0x120>
   1b04c:	nop    DWORD PTR [rax+0x0]
   1b050:	mov    esi,0x2e
   1b055:	mov    rdi,rbp
   1b058:	call   109e0 <strchr@plt>
   1b05d:	test   rax,rax
   1b060:	je     1b0a0 <wget_hsts_host_match+0x100>
   1b062:	mov    rdi,QWORD PTR [r12+0x8]
   1b067:	lea    rbp,[rax+0x1]
   1b06b:	mov    rdx,r13
   1b06e:	mov    rsi,rbx
   1b071:	mov    QWORD PTR [rsp+0x10],rbp
   1b076:	call   10520 <wget_hashmap_get@plt>
   1b07b:	test   eax,eax
   1b07d:	je     1b050 <wget_hsts_host_match+0xb0>
   1b07f:	mov    rax,QWORD PTR [rsp+0x8]
   1b084:	test   BYTE PTR [rax+0x22],0x1
   1b088:	je     1b050 <wget_hsts_host_match+0xb0>
   1b08a:	cmp    QWORD PTR [rax+0x8],r14
   1b08e:	jl     1b050 <wget_hsts_host_match+0xb0>
   1b090:	mov    eax,0x1
   1b095:	jmp    1b0a2 <wget_hsts_host_match+0x102>
   1b097:	nop    WORD PTR [rax+rax*1+0x0]
   1b0a0:	xor    eax,eax
   1b0a2:	mov    rdx,QWORD PTR [rsp+0x38]
   1b0a7:	sub    rdx,QWORD PTR fs:0x28
   1b0b0:	jne    1b0c7 <wget_hsts_host_match+0x127>
   1b0b2:	add    rsp,0x40
   1b0b6:	pop    rbx
   1b0b7:	pop    rbp
   1b0b8:	pop    r12
   1b0ba:	pop    r13
   1b0bc:	pop    r14
   1b0be:	ret    
   1b0bf:	nop
   1b0c0:	mov    rax,QWORD PTR [rsp+0x8]
   1b0c5:	jmp    1b08a <wget_hsts_host_match+0xea>
   1b0c7:	call   11760 <__stack_chk_fail@plt>
   1b0cc:	nop    DWORD PTR [rax+0x0]

000000000001b0d0 <wget_hsts_db_deinit>:
   1b0d0:	endbr64 
   1b0d4:	mov    rax,QWORD PTR [rip+0x5c38d]        # 77468 <plugin_vtable>
   1b0db:	push   rbp
   1b0dc:	mov    rbp,rdi
   1b0df:	test   rax,rax
   1b0e2:	je     1b0f0 <wget_hsts_db_deinit+0x20>
   1b0e4:	mov    rax,QWORD PTR [rax+0x10]
   1b0e8:	pop    rbp
   1b0e9:	jmp    rax
   1b0eb:	nop    DWORD PTR [rax+rax*1+0x0]
   1b0f0:	test   rdi,rdi
   1b0f3:	je     1b138 <wget_hsts_db_deinit+0x68>
   1b0f5:	mov    rdi,QWORD PTR [rdi]
   1b0f8:	test   rdi,rdi
   1b0fb:	je     1b10e <wget_hsts_db_deinit+0x3e>
   1b0fd:	mov    rax,QWORD PTR [rip+0x5aee4]        # 75fe8 <wget_free@@Base-0x1328>
   1b104:	call   QWORD PTR [rax]
   1b106:	mov    QWORD PTR [rbp+0x0],0x0
   1b10e:	mov    rdi,QWORD PTR [rbp+0x10]
   1b112:	call   12040 <wget_thread_mutex_lock@plt>
   1b117:	lea    rdi,[rbp+0x8]
   1b11b:	call   10950 <wget_hashmap_free@plt>
   1b120:	mov    rdi,QWORD PTR [rbp+0x10]
   1b124:	call   117c0 <wget_thread_mutex_unlock@plt>
   1b129:	lea    rdi,[rbp+0x10]
   1b12d:	pop    rbp
   1b12e:	jmp    11e70 <wget_thread_mutex_destroy@plt>
   1b133:	nop    DWORD PTR [rax+rax*1+0x0]
   1b138:	pop    rbp
   1b139:	ret    
   1b13a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001b140 <wget_hsts_db_free>:
   1b140:	endbr64 
   1b144:	mov    rax,QWORD PTR [rip+0x5c31d]        # 77468 <plugin_vtable>
   1b14b:	push   rbp
   1b14c:	mov    rbp,rdi
   1b14f:	test   rax,rax
   1b152:	je     1b160 <wget_hsts_db_free+0x20>
   1b154:	mov    rax,QWORD PTR [rax+0x18]
   1b158:	pop    rbp
   1b159:	jmp    rax
   1b15b:	nop    DWORD PTR [rax+rax*1+0x0]
   1b160:	test   rdi,rdi
   1b163:	je     1b18c <wget_hsts_db_free+0x4c>
   1b165:	mov    rdi,QWORD PTR [rdi]
   1b168:	test   rdi,rdi
   1b16b:	je     1b18c <wget_hsts_db_free+0x4c>
   1b16d:	call   10570 <wget_hsts_db_deinit@plt>
   1b172:	mov    rdi,QWORD PTR [rbp+0x0]
   1b176:	test   rdi,rdi
   1b179:	je     1b18c <wget_hsts_db_free+0x4c>
   1b17b:	mov    rax,QWORD PTR [rip+0x5ae66]        # 75fe8 <wget_free@@Base-0x1328>
   1b182:	call   QWORD PTR [rax]
   1b184:	mov    QWORD PTR [rbp+0x0],0x0
   1b18c:	pop    rbp
   1b18d:	ret    
   1b18e:	xchg   ax,ax

000000000001b190 <wget_hsts_db_add>:
   1b190:	endbr64 
   1b194:	push   r15
   1b196:	mov    r15,rcx
   1b199:	push   r14
   1b19b:	mov    r14,rsi
   1b19e:	push   r13
   1b1a0:	mov    r13,rdi
   1b1a3:	push   r12
   1b1a5:	push   rbp
   1b1a6:	mov    ebp,r8d
   1b1a9:	push   rbx
   1b1aa:	mov    ebx,edx
   1b1ac:	sub    rsp,0x18
   1b1b0:	mov    rax,QWORD PTR [rip+0x5c2b1]        # 77468 <plugin_vtable>
   1b1b7:	test   rax,rax
   1b1ba:	je     1b1e0 <wget_hsts_db_add+0x50>
   1b1bc:	mov    rax,QWORD PTR [rax+0x20]
   1b1c0:	add    rsp,0x18
   1b1c4:	movzx  edx,dx
   1b1c7:	movzx  r8d,r8b
   1b1cb:	pop    rbx
   1b1cc:	pop    rbp
   1b1cd:	pop    r12
   1b1cf:	pop    r13
   1b1d1:	pop    r14
   1b1d3:	pop    r15
   1b1d5:	jmp    rax
   1b1d7:	nop    WORD PTR [rax+rax*1+0x0]
   1b1e0:	mov    DWORD PTR [rsp+0xc],edx
   1b1e4:	test   rdi,rdi
   1b1e7:	je     1b290 <wget_hsts_db_add+0x100>
   1b1ed:	mov    rax,QWORD PTR [rip+0x5ad4c]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   1b1f4:	mov    esi,0x28
   1b1f9:	mov    edi,0x1
   1b1fe:	call   QWORD PTR [rax]
   1b200:	mov    r12,rax
   1b203:	test   rax,rax
   1b206:	je     1b290 <wget_hsts_db_add+0x100>
   1b20c:	xor    edi,edi
   1b20e:	call   11480 <time@plt>
   1b213:	mov    rdi,r14
   1b216:	mov    QWORD PTR [r12+0x10],rax
   1b21b:	call   127b0 <wget_strdup@plt>
   1b220:	mov    edx,DWORD PTR [rsp+0xc]
   1b224:	test   bx,bx
   1b227:	mov    r8d,ebp
   1b22a:	mov    QWORD PTR [r12],rax
   1b22e:	mov    eax,0x1bb
   1b233:	cmove  edx,eax
   1b236:	movzx  eax,BYTE PTR [r12+0x22]
   1b23c:	and    r8d,0x1
   1b240:	and    eax,0xfffffffe
   1b243:	mov    WORD PTR [r12+0x20],dx
   1b249:	lea    rdx,[r15-0x1]
   1b24d:	or     eax,r8d
   1b250:	mov    BYTE PTR [r12+0x22],al
   1b255:	movabs rax,0x3ffffffffffffffd
   1b25f:	cmp    rdx,rax
   1b262:	jbe    1b2a0 <wget_hsts_db_add+0x110>
   1b264:	xor    r15d,r15d
   1b267:	xor    eax,eax
   1b269:	mov    QWORD PTR [r12+0x18],r15
   1b26e:	mov    rsi,r12
   1b271:	mov    rdi,r13
   1b274:	mov    QWORD PTR [r12+0x8],rax
   1b279:	add    rsp,0x18
   1b27d:	pop    rbx
   1b27e:	pop    rbp
   1b27f:	pop    r12
   1b281:	pop    r13
   1b283:	pop    r14
   1b285:	pop    r15
   1b287:	jmp    1a9b0 <hsts_db_add_entry.part.0>
   1b28c:	nop    DWORD PTR [rax+0x0]
   1b290:	add    rsp,0x18
   1b294:	pop    rbx
   1b295:	pop    rbp
   1b296:	pop    r12
   1b298:	pop    r13
   1b29a:	pop    r14
   1b29c:	pop    r15
   1b29e:	ret    
   1b29f:	nop
   1b2a0:	movabs rdx,0x3ffffffffffffffe
   1b2aa:	mov    rax,QWORD PTR [r12+0x10]
   1b2af:	cmp    rax,rdx
   1b2b2:	ja     1b264 <wget_hsts_db_add+0xd4>
   1b2b4:	add    rax,r15
   1b2b7:	jmp    1b269 <wget_hsts_db_add+0xd9>
   1b2b9:	nop    DWORD PTR [rax+0x0]

000000000001b2c0 <wget_hsts_db_load>:
   1b2c0:	endbr64 
   1b2c4:	push   r12
   1b2c6:	push   rbp
   1b2c7:	mov    rbp,rdi
   1b2ca:	sub    rsp,0x8
   1b2ce:	mov    rax,QWORD PTR [rip+0x5c193]        # 77468 <plugin_vtable>
   1b2d5:	test   rax,rax
   1b2d8:	je     1b2f0 <wget_hsts_db_load+0x30>
   1b2da:	mov    rax,QWORD PTR [rax+0x28]
   1b2de:	add    rsp,0x8
   1b2e2:	pop    rbp
   1b2e3:	pop    r12
   1b2e5:	jmp    rax
   1b2e7:	nop    WORD PTR [rax+rax*1+0x0]
   1b2f0:	test   rdi,rdi
   1b2f3:	je     1b36a <wget_hsts_db_load+0xaa>
   1b2f5:	mov    rdi,QWORD PTR [rdi]
   1b2f8:	xor    r12d,r12d
   1b2fb:	test   rdi,rdi
   1b2fe:	je     1b305 <wget_hsts_db_load+0x45>
   1b300:	cmp    BYTE PTR [rdi],0x0
   1b303:	jne    1b310 <wget_hsts_db_load+0x50>
   1b305:	add    rsp,0x8
   1b309:	mov    eax,r12d
   1b30c:	pop    rbp
   1b30d:	pop    r12
   1b30f:	ret    
   1b310:	mov    rcx,rbp
   1b313:	xor    edx,edx
   1b315:	lea    rsi,[rip+0xfffffffffffff824]        # 1ab40 <hsts_db_load>
   1b31c:	call   10980 <wget_update_file@plt>
   1b321:	mov    r12d,eax
   1b324:	test   eax,eax
   1b326:	jne    1b345 <wget_hsts_db_load+0x85>
   1b328:	mov    rsi,QWORD PTR [rbp+0x0]
   1b32c:	xor    eax,eax
   1b32e:	lea    rdi,[rip+0x30a00]        # 4bd35 <__func__.0+0x65>
   1b335:	call   114b0 <wget_debug_printf@plt>
   1b33a:	add    rsp,0x8
   1b33e:	mov    eax,r12d
   1b341:	pop    rbp
   1b342:	pop    r12
   1b344:	ret    
   1b345:	mov    edx,0x5
   1b34a:	lea    rsi,[rip+0x309ca]        # 4bd1b <__func__.0+0x4b>
   1b351:	xor    edi,edi
   1b353:	mov    r12d,0xffffffff
   1b359:	call   10f90 <dcgettext@plt>
   1b35e:	mov    rdi,rax
   1b361:	xor    eax,eax
   1b363:	call   11ea0 <wget_error_printf@plt>
   1b368:	jmp    1b305 <wget_hsts_db_load+0x45>
   1b36a:	mov    r12d,0xffffffff
   1b370:	jmp    1b305 <wget_hsts_db_load+0x45>
   1b372:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1b37d:	nop    DWORD PTR [rax]

000000000001b380 <wget_hsts_db_save>:
   1b380:	endbr64 
   1b384:	push   r12
   1b386:	push   rbp
   1b387:	mov    rbp,rdi
   1b38a:	sub    rsp,0x8
   1b38e:	mov    rax,QWORD PTR [rip+0x5c0d3]        # 77468 <plugin_vtable>
   1b395:	test   rax,rax
   1b398:	je     1b3b0 <wget_hsts_db_save+0x30>
   1b39a:	mov    rax,QWORD PTR [rax+0x30]
   1b39e:	add    rsp,0x8
   1b3a2:	pop    rbp
   1b3a3:	pop    r12
   1b3a5:	jmp    rax
   1b3a7:	nop    WORD PTR [rax+rax*1+0x0]
   1b3b0:	test   rdi,rdi
   1b3b3:	je     1b450 <wget_hsts_db_save+0xd0>
   1b3b9:	mov    rdi,QWORD PTR [rdi]
   1b3bc:	test   rdi,rdi
   1b3bf:	je     1b450 <wget_hsts_db_save+0xd0>
   1b3c5:	cmp    BYTE PTR [rdi],0x0
   1b3c8:	je     1b450 <wget_hsts_db_save+0xd0>
   1b3ce:	mov    rcx,rbp
   1b3d1:	lea    rdx,[rip+0xfffffffffffff458]        # 1a830 <hsts_db_save>
   1b3d8:	lea    rsi,[rip+0xfffffffffffff761]        # 1ab40 <hsts_db_load>
   1b3df:	call   10980 <wget_update_file@plt>
   1b3e4:	mov    r12d,eax
   1b3e7:	test   eax,eax
   1b3e9:	jne    1b458 <wget_hsts_db_save+0xd8>
   1b3eb:	mov    rdi,QWORD PTR [rbp+0x8]
   1b3ef:	call   125c0 <wget_hashmap_size@plt>
   1b3f4:	mov    esi,eax
   1b3f6:	test   eax,eax
   1b3f8:	je     1b430 <wget_hsts_db_save+0xb0>
   1b3fa:	cmp    eax,0x1
   1b3fd:	lea    rdx,[rip+0x3226e]        # 4d672 <__func__.0+0x42>
   1b404:	lea    rax,[rip+0x317c2]        # 4cbcd <__func__.5+0x21d>
   1b40b:	mov    rcx,QWORD PTR [rbp+0x0]
   1b40f:	cmove  rdx,rax
   1b413:	lea    rdi,[rip+0x30a36]        # 4be50 <__func__.0+0x180>
   1b41a:	xor    eax,eax
   1b41c:	call   114b0 <wget_debug_printf@plt>
   1b421:	add    rsp,0x8
   1b425:	mov    eax,r12d
   1b428:	pop    rbp
   1b429:	pop    r12
   1b42b:	ret    
   1b42c:	nop    DWORD PTR [rax+0x0]
   1b430:	xor    eax,eax
   1b432:	lea    rdi,[rip+0x30a37]        # 4be70 <__func__.0+0x1a0>
   1b439:	call   114b0 <wget_debug_printf@plt>
   1b43e:	add    rsp,0x8
   1b442:	mov    eax,r12d
   1b445:	pop    rbp
   1b446:	pop    r12
   1b448:	ret    
   1b449:	nop    DWORD PTR [rax+0x0]
   1b450:	mov    r12d,0xffffffff
   1b456:	jmp    1b421 <wget_hsts_db_save+0xa1>
   1b458:	mov    rbp,QWORD PTR [rbp+0x0]
   1b45c:	mov    edx,0x5
   1b461:	lea    rsi,[rip+0x309c8]        # 4be30 <__func__.0+0x160>
   1b468:	xor    edi,edi
   1b46a:	call   10f90 <dcgettext@plt>
   1b46f:	mov    r12d,0xffffffff
   1b475:	mov    rdi,rax
   1b478:	mov    rsi,rbp
   1b47b:	xor    eax,eax
   1b47d:	call   11ea0 <wget_error_printf@plt>
   1b482:	jmp    1b421 <wget_hsts_db_save+0xa1>
   1b484:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1b48f:	nop

000000000001b490 <wget_hsts_db_init>:
   1b490:	endbr64 
   1b494:	push   r13
   1b496:	mov    r13,rdi
   1b499:	push   r12
   1b49b:	push   rbp
   1b49c:	mov    rbp,rsi
   1b49f:	sub    rsp,0x10
   1b4a3:	mov    rax,QWORD PTR fs:0x28
   1b4ac:	mov    QWORD PTR [rsp+0x8],rax
   1b4b1:	mov    rax,QWORD PTR [rip+0x5bfb0]        # 77468 <plugin_vtable>
   1b4b8:	test   rax,rax
   1b4bb:	je     1b4e0 <wget_hsts_db_init+0x50>
   1b4bd:	mov    rdx,QWORD PTR [rsp+0x8]
   1b4c2:	sub    rdx,QWORD PTR fs:0x28
   1b4cb:	jne    1b5fd <wget_hsts_db_init+0x16d>
   1b4d1:	mov    rax,QWORD PTR [rax+0x8]
   1b4d5:	add    rsp,0x10
   1b4d9:	pop    rbp
   1b4da:	pop    r12
   1b4dc:	pop    r13
   1b4de:	jmp    rax
   1b4e0:	test   rsi,rsi
   1b4e3:	je     1b5d0 <wget_hsts_db_init+0x140>
   1b4e9:	mov    rdi,rsi
   1b4ec:	call   127b0 <wget_strdup@plt>
   1b4f1:	mov    rbp,rax
   1b4f4:	test   rax,rax
   1b4f7:	je     1b5f5 <wget_hsts_db_init+0x165>
   1b4fd:	lea    rdx,[rip+0xfffffffffffff40c]        # 1a910 <compare_hsts>
   1b504:	lea    rsi,[rip+0xfffffffffffff2f5]        # 1a800 <hash_hsts>
   1b50b:	mov    edi,0x10
   1b510:	call   104c0 <wget_hashmap_create@plt>
   1b515:	mov    QWORD PTR [rsp],rax
   1b519:	mov    r12,rax
   1b51c:	test   rax,rax
   1b51f:	je     1b5b8 <wget_hsts_db_init+0x128>
   1b525:	test   r13,r13
   1b528:	je     1b590 <wget_hsts_db_init+0x100>
   1b52a:	pxor   xmm0,xmm0
   1b52e:	mov    r12,r13
   1b531:	movups XMMWORD PTR [r13+0x0],xmm0
   1b536:	movups XMMWORD PTR [r13+0x10],xmm0
   1b53b:	mov    rdi,QWORD PTR [rsp]
   1b53f:	mov    QWORD PTR [r12],rbp
   1b543:	lea    rbp,[rip+0xfffffffffffff416]        # 1a960 <free_hsts>
   1b54a:	mov    rsi,rbp
   1b54d:	mov    QWORD PTR [r12+0x8],rdi
   1b552:	call   10b20 <wget_hashmap_set_key_destructor@plt>
   1b557:	mov    rdi,QWORD PTR [r12+0x8]
   1b55c:	mov    rsi,rbp
   1b55f:	call   105d0 <wget_hashmap_set_value_destructor@plt>
   1b564:	lea    rdi,[r12+0x10]
   1b569:	call   10530 <wget_thread_mutex_init@plt>
   1b56e:	mov    rax,QWORD PTR [rsp+0x8]
   1b573:	sub    rax,QWORD PTR fs:0x28
   1b57c:	jne    1b5fd <wget_hsts_db_init+0x16d>
   1b57e:	add    rsp,0x10
   1b582:	mov    rax,r12
   1b585:	pop    rbp
   1b586:	pop    r12
   1b588:	pop    r13
   1b58a:	ret    
   1b58b:	nop    DWORD PTR [rax+rax*1+0x0]
   1b590:	mov    rax,QWORD PTR [rip+0x5a9a9]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   1b597:	mov    esi,0x20
   1b59c:	mov    edi,0x1
   1b5a1:	call   QWORD PTR [rax]
   1b5a3:	mov    r12,rax
   1b5a6:	test   rax,rax
   1b5a9:	jne    1b53b <wget_hsts_db_init+0xab>
   1b5ab:	mov    rdi,rsp
   1b5ae:	call   10950 <wget_hashmap_free@plt>
   1b5b3:	test   rbp,rbp
   1b5b6:	je     1b5f5 <wget_hsts_db_init+0x165>
   1b5b8:	mov    rax,QWORD PTR [rip+0x5aa29]        # 75fe8 <wget_free@@Base-0x1328>
   1b5bf:	mov    rdi,rbp
   1b5c2:	call   QWORD PTR [rax]
   1b5c4:	jmp    1b56e <wget_hsts_db_init+0xde>
   1b5c6:	cs nop WORD PTR [rax+rax*1+0x0]
   1b5d0:	lea    rdx,[rip+0xfffffffffffff339]        # 1a910 <compare_hsts>
   1b5d7:	lea    rsi,[rip+0xfffffffffffff222]        # 1a800 <hash_hsts>
   1b5de:	mov    edi,0x10
   1b5e3:	call   104c0 <wget_hashmap_create@plt>
   1b5e8:	mov    QWORD PTR [rsp],rax
   1b5ec:	test   rax,rax
   1b5ef:	jne    1b525 <wget_hsts_db_init+0x95>
   1b5f5:	xor    r12d,r12d
   1b5f8:	jmp    1b56e <wget_hsts_db_init+0xde>
   1b5fd:	call   11760 <__stack_chk_fail@plt>
   1b602:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1b60d:	nop    DWORD PTR [rax]

000000000001b610 <wget_hsts_db_set_fname>:
   1b610:	endbr64 
   1b614:	push   rbp
   1b615:	mov    rbp,rsi
   1b618:	push   rbx
   1b619:	mov    rbx,rdi
   1b61c:	sub    rsp,0x8
   1b620:	mov    rdi,QWORD PTR [rdi]
   1b623:	test   rdi,rdi
   1b626:	je     1b638 <wget_hsts_db_set_fname+0x28>
   1b628:	mov    rax,QWORD PTR [rip+0x5a9b9]        # 75fe8 <wget_free@@Base-0x1328>
   1b62f:	call   QWORD PTR [rax]
   1b631:	mov    QWORD PTR [rbx],0x0
   1b638:	mov    rdi,rbp
   1b63b:	call   127b0 <wget_strdup@plt>
   1b640:	mov    QWORD PTR [rbx],rax
   1b643:	add    rsp,0x8
   1b647:	pop    rbx
   1b648:	pop    rbp
   1b649:	ret    
   1b64a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001b650 <hpkp_pin_free>:
   1b650:	endbr64 
   1b654:	test   rdi,rdi
   1b657:	je     1b6b0 <hpkp_pin_free+0x60>
   1b659:	push   rbp
   1b65a:	mov    rbp,rdi
   1b65d:	push   rbx
   1b65e:	sub    rsp,0x8
   1b662:	mov    rdi,QWORD PTR [rdi+0x10]
   1b666:	mov    rbx,QWORD PTR [rip+0x5a97b]        # 75fe8 <wget_free@@Base-0x1328>
   1b66d:	test   rdi,rdi
   1b670:	je     1b67c <hpkp_pin_free+0x2c>
   1b672:	call   QWORD PTR [rbx]
   1b674:	mov    QWORD PTR [rbp+0x10],0x0
   1b67c:	mov    rdi,QWORD PTR [rbp+0x8]
   1b680:	test   rdi,rdi
   1b683:	je     1b68f <hpkp_pin_free+0x3f>
   1b685:	call   QWORD PTR [rbx]
   1b687:	mov    QWORD PTR [rbp+0x8],0x0
   1b68f:	mov    rdi,QWORD PTR [rbp+0x0]
   1b693:	test   rdi,rdi
   1b696:	je     1b6a2 <hpkp_pin_free+0x52>
   1b698:	call   QWORD PTR [rbx]
   1b69a:	mov    QWORD PTR [rbp+0x0],0x0
   1b6a2:	mov    rax,QWORD PTR [rbx]
   1b6a5:	add    rsp,0x8
   1b6a9:	mov    rdi,rbp
   1b6ac:	pop    rbx
   1b6ad:	pop    rbp
   1b6ae:	jmp    rax
   1b6b0:	ret    
   1b6b1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1b6bc:	nop    DWORD PTR [rax+0x0]

000000000001b6c0 <compare_pin>:
   1b6c0:	endbr64 
   1b6c4:	push   rbp
   1b6c5:	mov    rbp,rsi
   1b6c8:	push   rbx
   1b6c9:	mov    rbx,rdi
   1b6cc:	sub    rsp,0x8
   1b6d0:	mov    rsi,QWORD PTR [rsi+0x10]
   1b6d4:	mov    rdi,QWORD PTR [rdi+0x10]
   1b6d8:	call   11c60 <strcmp@plt>
   1b6dd:	test   eax,eax
   1b6df:	jne    1b705 <compare_pin+0x45>
   1b6e1:	mov    rdx,QWORD PTR [rbx+0x18]
   1b6e5:	cmp    rdx,QWORD PTR [rbp+0x18]
   1b6e9:	jb     1b70c <compare_pin+0x4c>
   1b6eb:	ja     1b700 <compare_pin+0x40>
   1b6ed:	mov    rsi,QWORD PTR [rbp+0x8]
   1b6f1:	mov    rdi,QWORD PTR [rbx+0x8]
   1b6f5:	add    rsp,0x8
   1b6f9:	pop    rbx
   1b6fa:	pop    rbp
   1b6fb:	jmp    10ac0 <memcmp@plt>
   1b700:	mov    eax,0x1
   1b705:	add    rsp,0x8
   1b709:	pop    rbx
   1b70a:	pop    rbp
   1b70b:	ret    
   1b70c:	mov    eax,0xffffffff
   1b711:	jmp    1b705 <compare_pin+0x45>
   1b713:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1b71e:	xchg   ax,ax

000000000001b720 <wget_hpkp_pin_add>:
   1b720:	endbr64 
   1b724:	push   r14
   1b726:	mov    rax,QWORD PTR [rip+0x5a813]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   1b72d:	mov    r14,rsi
   1b730:	mov    esi,0x20
   1b735:	push   r13
   1b737:	push   r12
   1b739:	mov    r12,rdx
   1b73c:	push   rbp
   1b73d:	push   rbx
   1b73e:	mov    rbx,rdi
   1b741:	mov    edi,0x1
   1b746:	call   QWORD PTR [rax]
   1b748:	mov    rdi,r12
   1b74b:	mov    rbp,rax
   1b74e:	call   10ab0 <strlen@plt>
   1b753:	mov    rdi,r14
   1b756:	mov    r13,rax
   1b759:	call   127b0 <wget_strdup@plt>
   1b75e:	mov    rdi,r12
   1b761:	mov    QWORD PTR [rbp+0x10],rax
   1b765:	call   127b0 <wget_strdup@plt>
   1b76a:	mov    rdi,r12
   1b76d:	lea    rdx,[rbp+0x18]
   1b771:	mov    rsi,r13
   1b774:	mov    QWORD PTR [rbp+0x0],rax
   1b778:	call   122c0 <wget_base64_decode_alloc@plt>
   1b77d:	mov    rdi,QWORD PTR [rbx+0x20]
   1b781:	mov    QWORD PTR [rbp+0x8],rax
   1b785:	test   rdi,rdi
   1b788:	je     1b7a0 <wget_hpkp_pin_add+0x80>
   1b78a:	pop    rbx
   1b78b:	mov    rsi,rbp
   1b78e:	pop    rbp
   1b78f:	pop    r12
   1b791:	pop    r13
   1b793:	pop    r14
   1b795:	jmp    11290 <wget_vector_add@plt>
   1b79a:	nop    WORD PTR [rax+rax*1+0x0]
   1b7a0:	lea    rsi,[rip+0xffffffffffffff19]        # 1b6c0 <compare_pin>
   1b7a7:	mov    edi,0x5
   1b7ac:	call   11f00 <wget_vector_create@plt>
   1b7b1:	lea    rsi,[rip+0xfffffffffffffe98]        # 1b650 <hpkp_pin_free>
   1b7b8:	mov    QWORD PTR [rbx+0x20],rax
   1b7bc:	mov    rdi,rax
   1b7bf:	call   120e0 <wget_vector_set_destructor@plt>
   1b7c4:	mov    rdi,QWORD PTR [rbx+0x20]
   1b7c8:	mov    rsi,rbp
   1b7cb:	pop    rbx
   1b7cc:	pop    rbp
   1b7cd:	pop    r12
   1b7cf:	pop    r13
   1b7d1:	pop    r14
   1b7d3:	jmp    11290 <wget_vector_add@plt>
   1b7d8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001b7e0 <wget_hpkp_free>:
   1b7e0:	endbr64 
   1b7e4:	test   rdi,rdi
   1b7e7:	je     1b828 <wget_hpkp_free+0x48>
   1b7e9:	push   rbp
   1b7ea:	mov    rbp,rdi
   1b7ed:	push   rbx
   1b7ee:	sub    rsp,0x8
   1b7f2:	mov    rdi,QWORD PTR [rdi]
   1b7f5:	mov    rbx,QWORD PTR [rip+0x5a7ec]        # 75fe8 <wget_free@@Base-0x1328>
   1b7fc:	test   rdi,rdi
   1b7ff:	je     1b80b <wget_hpkp_free+0x2b>
   1b801:	call   QWORD PTR [rbx]
   1b803:	mov    QWORD PTR [rbp+0x0],0x0
   1b80b:	lea    rdi,[rbp+0x20]
   1b80f:	call   125e0 <wget_vector_free@plt>
   1b814:	mov    rax,QWORD PTR [rbx]
   1b817:	add    rsp,0x8
   1b81b:	mov    rdi,rbp
   1b81e:	pop    rbx
   1b81f:	pop    rbp
   1b820:	jmp    rax
   1b822:	nop    WORD PTR [rax+rax*1+0x0]
   1b828:	ret    
   1b829:	nop    DWORD PTR [rax+0x0]

000000000001b830 <wget_hpkp_new>:
   1b830:	endbr64 
   1b834:	push   r12
   1b836:	mov    esi,0x30
   1b83b:	mov    edi,0x1
   1b840:	mov    rax,QWORD PTR [rip+0x5a6f9]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   1b847:	call   QWORD PTR [rax]
   1b849:	xor    edi,edi
   1b84b:	mov    r12,rax
   1b84e:	call   11480 <time@plt>
   1b853:	mov    QWORD PTR [r12+0x10],rax
   1b858:	mov    rax,r12
   1b85b:	pop    r12
   1b85d:	ret    
   1b85e:	xchg   ax,ax

000000000001b860 <wget_hpkp_set_host>:
   1b860:	endbr64 
   1b864:	push   rbp
   1b865:	mov    rbp,rsi
   1b868:	push   rbx
   1b869:	mov    rbx,rdi
   1b86c:	sub    rsp,0x8
   1b870:	mov    rdi,QWORD PTR [rdi]
   1b873:	test   rdi,rdi
   1b876:	je     1b888 <wget_hpkp_set_host+0x28>
   1b878:	mov    rax,QWORD PTR [rip+0x5a769]        # 75fe8 <wget_free@@Base-0x1328>
   1b87f:	call   QWORD PTR [rax]
   1b881:	mov    QWORD PTR [rbx],0x0
   1b888:	mov    rdi,rbp
   1b88b:	call   127b0 <wget_strdup@plt>
   1b890:	mov    QWORD PTR [rbx],rax
   1b893:	add    rsp,0x8
   1b897:	pop    rbx
   1b898:	pop    rbp
   1b899:	ret    
   1b89a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001b8a0 <wget_hpkp_set_maxage>:
   1b8a0:	endbr64 
   1b8a4:	movabs rax,0x3ffffffffffffffd
   1b8ae:	push   rbp
   1b8af:	lea    rdx,[rsi-0x1]
   1b8b3:	mov    rbp,rdi
   1b8b6:	push   rbx
   1b8b7:	sub    rsp,0x8
   1b8bb:	cmp    rdx,rax
   1b8be:	jbe    1b8d8 <wget_hpkp_set_maxage+0x38>
   1b8c0:	xor    ebx,ebx
   1b8c2:	xor    eax,eax
   1b8c4:	mov    QWORD PTR [rbp+0x18],rbx
   1b8c8:	mov    QWORD PTR [rbp+0x8],rax
   1b8cc:	add    rsp,0x8
   1b8d0:	pop    rbx
   1b8d1:	pop    rbp
   1b8d2:	ret    
   1b8d3:	nop    DWORD PTR [rax+rax*1+0x0]
   1b8d8:	xor    edi,edi
   1b8da:	mov    rbx,rsi
   1b8dd:	call   11480 <time@plt>
   1b8e2:	movabs rdx,0x3ffffffffffffffe
   1b8ec:	cmp    rax,rdx
   1b8ef:	ja     1b8c0 <wget_hpkp_set_maxage+0x20>
   1b8f1:	add    rax,rbx
   1b8f4:	jmp    1b8c4 <wget_hpkp_set_maxage+0x24>
   1b8f6:	cs nop WORD PTR [rax+rax*1+0x0]

000000000001b900 <wget_hpkp_set_include_subdomains>:
   1b900:	endbr64 
   1b904:	mov    eax,esi
   1b906:	movzx  esi,BYTE PTR [rdi+0x28]
   1b90a:	and    eax,0x1
   1b90d:	and    esi,0xfffffffe
   1b910:	or     esi,eax
   1b912:	mov    BYTE PTR [rdi+0x28],sil
   1b916:	ret    
   1b917:	nop    WORD PTR [rax+rax*1+0x0]

000000000001b920 <wget_hpkp_get_n_pins>:
   1b920:	endbr64 
   1b924:	mov    rdi,QWORD PTR [rdi+0x20]
   1b928:	jmp    10e90 <wget_vector_size@plt>
   1b92d:	nop    DWORD PTR [rax]

000000000001b930 <wget_hpkp_get_pins_b64>:
   1b930:	endbr64 
   1b934:	push   r14
   1b936:	push   r13
   1b938:	mov    r13,rdx
   1b93b:	push   r12
   1b93d:	mov    r12,rsi
   1b940:	push   rbp
   1b941:	push   rbx
   1b942:	mov    r14,QWORD PTR [rdi+0x20]
   1b946:	mov    rdi,r14
   1b949:	call   10e90 <wget_vector_size@plt>
   1b94e:	test   eax,eax
   1b950:	jle    1b983 <wget_hpkp_get_pins_b64+0x53>
   1b952:	movsxd rbp,eax
   1b955:	xor    ebx,ebx
   1b957:	nop    WORD PTR [rax+rax*1+0x0]
   1b960:	mov    esi,ebx
   1b962:	mov    rdi,r14
   1b965:	call   10c00 <wget_vector_get@plt>
   1b96a:	mov    rdx,QWORD PTR [rax+0x10]
   1b96e:	mov    QWORD PTR [r12+rbx*8],rdx
   1b972:	mov    rax,QWORD PTR [rax]
   1b975:	mov    QWORD PTR [r13+rbx*8+0x0],rax
   1b97a:	add    rbx,0x1
   1b97e:	cmp    rbx,rbp
   1b981:	jne    1b960 <wget_hpkp_get_pins_b64+0x30>
   1b983:	pop    rbx
   1b984:	pop    rbp
   1b985:	pop    r12
   1b987:	pop    r13
   1b989:	pop    r14
   1b98b:	ret    
   1b98c:	nop    DWORD PTR [rax+0x0]

000000000001b990 <wget_hpkp_get_pins>:
   1b990:	endbr64 
   1b994:	push   r15
   1b996:	mov    r15,rcx
   1b999:	push   r14
   1b99b:	mov    r14,rdx
   1b99e:	push   r13
   1b9a0:	mov    r13,rsi
   1b9a3:	push   r12
   1b9a5:	mov    r12,rdi
   1b9a8:	push   rbp
   1b9a9:	push   rbx
   1b9aa:	sub    rsp,0x18
   1b9ae:	mov    rdi,QWORD PTR [rdi+0x20]
   1b9b2:	mov    QWORD PTR [rsp+0x8],rdi
   1b9b7:	call   10e90 <wget_vector_size@plt>
   1b9bc:	test   eax,eax
   1b9be:	jle    1b9fe <wget_hpkp_get_pins+0x6e>
   1b9c0:	mov    rdi,QWORD PTR [rsp+0x8]
   1b9c5:	movsxd rbp,eax
   1b9c8:	xor    ebx,ebx
   1b9ca:	jmp    1b9d5 <wget_hpkp_get_pins+0x45>
   1b9cc:	nop    DWORD PTR [rax+0x0]
   1b9d0:	mov    rdi,QWORD PTR [r12+0x20]
   1b9d5:	mov    esi,ebx
   1b9d7:	call   10c00 <wget_vector_get@plt>
   1b9dc:	mov    rdx,QWORD PTR [rax+0x10]
   1b9e0:	mov    QWORD PTR [r13+rbx*8+0x0],rdx
   1b9e5:	mov    rdx,QWORD PTR [rax+0x18]
   1b9e9:	mov    rax,QWORD PTR [rax+0x8]
   1b9ed:	mov    QWORD PTR [r14+rbx*8],rdx
   1b9f1:	mov    QWORD PTR [r15+rbx*8],rax
   1b9f5:	add    rbx,0x1
   1b9f9:	cmp    rbx,rbp
   1b9fc:	jne    1b9d0 <wget_hpkp_get_pins+0x40>
   1b9fe:	add    rsp,0x18
   1ba02:	pop    rbx
   1ba03:	pop    rbp
   1ba04:	pop    r12
   1ba06:	pop    r13
   1ba08:	pop    r14
   1ba0a:	pop    r15
   1ba0c:	ret    
   1ba0d:	nop    DWORD PTR [rax]

000000000001ba10 <wget_hpkp_get_host>:
   1ba10:	endbr64 
   1ba14:	mov    rax,QWORD PTR [rdi]
   1ba17:	ret    
   1ba18:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001ba20 <wget_hpkp_get_maxage>:
   1ba20:	endbr64 
   1ba24:	mov    rax,QWORD PTR [rdi+0x18]
   1ba28:	ret    
   1ba29:	nop    DWORD PTR [rax+0x0]

000000000001ba30 <wget_hpkp_get_include_subdomains>:
   1ba30:	endbr64 
   1ba34:	movzx  eax,BYTE PTR [rdi+0x28]
   1ba38:	and    eax,0x1
   1ba3b:	ret    
   1ba3c:	nop    DWORD PTR [rax+0x0]

000000000001ba40 <hash_hpkp>:
   1ba40:	endbr64 
   1ba44:	mov    rcx,QWORD PTR [rdi]
   1ba47:	xor    eax,eax
   1ba49:	movzx  edx,BYTE PTR [rcx]
   1ba4c:	test   dl,dl
   1ba4e:	je     1ba68 <hash_hpkp+0x28>
   1ba50:	imul   eax,eax,0x65
   1ba53:	add    rcx,0x1
   1ba57:	add    eax,edx
   1ba59:	movzx  edx,BYTE PTR [rcx]
   1ba5c:	test   dl,dl
   1ba5e:	jne    1ba50 <hash_hpkp+0x10>
   1ba60:	ret    
   1ba61:	nop    DWORD PTR [rax+0x0]
   1ba68:	ret    
   1ba69:	nop    DWORD PTR [rax+0x0]

000000000001ba70 <hpkp_db_save>:
   1ba70:	endbr64 
   1ba74:	push   r12
   1ba76:	mov    r12,rsi
   1ba79:	push   rbp
   1ba7a:	sub    rsp,0x8
   1ba7e:	mov    rbp,QWORD PTR [rdi+0x8]
   1ba82:	mov    rdi,rbp
   1ba85:	call   125c0 <wget_hashmap_size@plt>
   1ba8a:	xor    r8d,r8d
   1ba8d:	test   eax,eax
   1ba8f:	jg     1baa0 <hpkp_db_save+0x30>
   1ba91:	add    rsp,0x8
   1ba95:	mov    eax,r8d
   1ba98:	pop    rbp
   1ba99:	pop    r12
   1ba9b:	ret    
   1ba9c:	nop    DWORD PTR [rax+0x0]
   1baa0:	mov    rcx,r12
   1baa3:	mov    edx,0x10
   1baa8:	mov    esi,0x1
   1baad:	lea    rdi,[rip+0x303e6]        # 4be9a <__func__.0+0x1ca>
   1bab4:	call   12730 <fwrite@plt>
   1bab9:	mov    rcx,r12
   1babc:	mov    edx,0x34
   1bac1:	mov    esi,0x1
   1bac6:	lea    rdi,[rip+0x3028b]        # 4bd58 <__func__.0+0x88>
   1bacd:	call   12730 <fwrite@plt>
   1bad2:	lea    rdi,[rip+0x3048f]        # 4bf68 <__func__.0+0x298>
   1bad9:	mov    rcx,r12
   1badc:	mov    edx,0x34
   1bae1:	mov    esi,0x1
   1bae6:	call   12730 <fwrite@plt>
   1baeb:	mov    rdi,r12
   1baee:	call   12580 <ferror@plt>
   1baf3:	test   eax,eax
   1baf5:	jne    1bb10 <hpkp_db_save+0xa0>
   1baf7:	add    rsp,0x8
   1bafb:	mov    rdx,r12
   1bafe:	mov    rdi,rbp
   1bb01:	lea    rsi,[rip+0x58]        # 1bb60 <hpkp_save>
   1bb08:	pop    rbp
   1bb09:	pop    r12
   1bb0b:	jmp    12570 <wget_hashmap_browse@plt>
   1bb10:	mov    r8d,0xffffffff
   1bb16:	jmp    1ba91 <hpkp_db_save+0x21>
   1bb1b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001bb20 <hpkp_save_pin>:
   1bb20:	endbr64 
   1bb24:	push   rbp
   1bb25:	mov    rdx,QWORD PTR [rsi+0x10]
   1bb29:	mov    rbp,rdi
   1bb2c:	xor    eax,eax
   1bb2e:	mov    rcx,QWORD PTR [rsi]
   1bb31:	lea    rsi,[rip+0x30373]        # 4beab <__func__.0+0x1db>
   1bb38:	call   108e0 <wget_fprintf@plt>
   1bb3d:	mov    rdi,rbp
   1bb40:	call   12580 <ferror@plt>
   1bb45:	pop    rbp
   1bb46:	neg    eax
   1bb48:	sbb    eax,eax
   1bb4a:	ret    
   1bb4b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001bb50 <compare_hpkp>:
   1bb50:	endbr64 
   1bb54:	mov    rsi,QWORD PTR [rsi]
   1bb57:	mov    rdi,QWORD PTR [rdi]
   1bb5a:	jmp    11c60 <strcmp@plt>
   1bb5f:	nop

000000000001bb60 <hpkp_save>:
   1bb60:	endbr64 
   1bb64:	push   r13
   1bb66:	mov    r13,rdi
   1bb69:	push   r12
   1bb6b:	push   rbx
   1bb6c:	mov    rdi,QWORD PTR [rsi+0x20]
   1bb70:	mov    rbx,rsi
   1bb73:	call   10e90 <wget_vector_size@plt>
   1bb78:	test   eax,eax
   1bb7a:	jne    1bba0 <hpkp_save+0x40>
   1bb7c:	mov    rsi,QWORD PTR [rbx]
   1bb7f:	mov    r12d,eax
   1bb82:	lea    rdi,[rip+0x30417]        # 4bfa0 <__func__.0+0x2d0>
   1bb89:	xor    eax,eax
   1bb8b:	call   114b0 <wget_debug_printf@plt>
   1bb90:	mov    eax,r12d
   1bb93:	pop    rbx
   1bb94:	pop    r12
   1bb96:	pop    r13
   1bb98:	ret    
   1bb99:	nop    DWORD PTR [rax+0x0]
   1bba0:	mov    r12,QWORD PTR [rbx+0x8]
   1bba4:	xor    edi,edi
   1bba6:	call   11480 <time@plt>
   1bbab:	cmp    r12,rax
   1bbae:	jl     1bc00 <hpkp_save+0xa0>
   1bbb0:	movzx  ecx,BYTE PTR [rbx+0x28]
   1bbb4:	mov    r9,QWORD PTR [rbx+0x18]
   1bbb8:	mov    rdi,r13
   1bbbb:	xor    eax,eax
   1bbbd:	mov    r8,QWORD PTR [rbx+0x10]
   1bbc1:	mov    rdx,QWORD PTR [rbx]
   1bbc4:	lea    rsi,[rip+0x30302]        # 4becd <__func__.0+0x1fd>
   1bbcb:	and    ecx,0x1
   1bbce:	call   108e0 <wget_fprintf@plt>
   1bbd3:	mov    rdi,r13
   1bbd6:	call   12580 <ferror@plt>
   1bbdb:	test   eax,eax
   1bbdd:	jne    1bc1d <hpkp_save+0xbd>
   1bbdf:	mov    rdi,QWORD PTR [rbx+0x20]
   1bbe3:	mov    rdx,r13
   1bbe6:	pop    rbx
   1bbe7:	lea    rsi,[rip+0xffffffffffffff32]        # 1bb20 <hpkp_save_pin>
   1bbee:	pop    r12
   1bbf0:	pop    r13
   1bbf2:	jmp    10ef0 <wget_vector_browse@plt>
   1bbf7:	nop    WORD PTR [rax+rax*1+0x0]
   1bc00:	mov    rsi,QWORD PTR [rbx]
   1bc03:	xor    eax,eax
   1bc05:	xor    r12d,r12d
   1bc08:	lea    rdi,[rip+0x302a4]        # 4beb3 <__func__.0+0x1e3>
   1bc0f:	call   114b0 <wget_debug_printf@plt>
   1bc14:	mov    eax,r12d
   1bc17:	pop    rbx
   1bc18:	pop    r12
   1bc1a:	pop    r13
   1bc1c:	ret    
   1bc1d:	mov    r12d,0xffffffff
   1bc23:	jmp    1bb90 <hpkp_save+0x30>
   1bc28:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001bc30 <wget_hpkp_set_plugin>:
   1bc30:	endbr64 
   1bc34:	mov    QWORD PTR [rip+0x5b835],rdi        # 77470 <plugin_vtable>
   1bc3b:	ret    
   1bc3c:	nop    DWORD PTR [rax+0x0]

000000000001bc40 <wget_hpkp_db_deinit>:
   1bc40:	endbr64 
   1bc44:	mov    rax,QWORD PTR [rip+0x5b825]        # 77470 <plugin_vtable>
   1bc4b:	push   rbp
   1bc4c:	mov    rbp,rdi
   1bc4f:	test   rax,rax
   1bc52:	je     1bc60 <wget_hpkp_db_deinit+0x20>
   1bc54:	mov    rax,QWORD PTR [rax+0x8]
   1bc58:	pop    rbp
   1bc59:	jmp    rax
   1bc5b:	nop    DWORD PTR [rax+rax*1+0x0]
   1bc60:	test   rdi,rdi
   1bc63:	je     1bca8 <wget_hpkp_db_deinit+0x68>
   1bc65:	mov    rdi,QWORD PTR [rdi]
   1bc68:	test   rdi,rdi
   1bc6b:	je     1bc7e <wget_hpkp_db_deinit+0x3e>
   1bc6d:	mov    rax,QWORD PTR [rip+0x5a374]        # 75fe8 <wget_free@@Base-0x1328>
   1bc74:	call   QWORD PTR [rax]
   1bc76:	mov    QWORD PTR [rbp+0x0],0x0
   1bc7e:	mov    rdi,QWORD PTR [rbp+0x10]
   1bc82:	call   12040 <wget_thread_mutex_lock@plt>
   1bc87:	lea    rdi,[rbp+0x8]
   1bc8b:	call   10950 <wget_hashmap_free@plt>
   1bc90:	mov    rdi,QWORD PTR [rbp+0x10]
   1bc94:	call   117c0 <wget_thread_mutex_unlock@plt>
   1bc99:	lea    rdi,[rbp+0x10]
   1bc9d:	pop    rbp
   1bc9e:	jmp    11e70 <wget_thread_mutex_destroy@plt>
   1bca3:	nop    DWORD PTR [rax+rax*1+0x0]
   1bca8:	pop    rbp
   1bca9:	ret    
   1bcaa:	nop    WORD PTR [rax+rax*1+0x0]

000000000001bcb0 <wget_hpkp_db_free>:
   1bcb0:	endbr64 
   1bcb4:	mov    rax,QWORD PTR [rip+0x5b7b5]        # 77470 <plugin_vtable>
   1bcbb:	push   rbp
   1bcbc:	mov    rbp,rdi
   1bcbf:	test   rax,rax
   1bcc2:	je     1bcd0 <wget_hpkp_db_free+0x20>
   1bcc4:	mov    rax,QWORD PTR [rax+0x10]
   1bcc8:	pop    rbp
   1bcc9:	jmp    rax
   1bccb:	nop    DWORD PTR [rax+rax*1+0x0]
   1bcd0:	test   rdi,rdi
   1bcd3:	je     1bcfc <wget_hpkp_db_free+0x4c>
   1bcd5:	mov    rdi,QWORD PTR [rdi]
   1bcd8:	test   rdi,rdi
   1bcdb:	je     1bcfc <wget_hpkp_db_free+0x4c>
   1bcdd:	call   12450 <wget_hpkp_db_deinit@plt>
   1bce2:	mov    rdi,QWORD PTR [rbp+0x0]
   1bce6:	test   rdi,rdi
   1bce9:	je     1bcfc <wget_hpkp_db_free+0x4c>
   1bceb:	mov    rax,QWORD PTR [rip+0x5a2f6]        # 75fe8 <wget_free@@Base-0x1328>
   1bcf2:	call   QWORD PTR [rax]
   1bcf4:	mov    QWORD PTR [rbp+0x0],0x0
   1bcfc:	pop    rbp
   1bcfd:	ret    
   1bcfe:	xchg   ax,ax

000000000001bd00 <wget_hpkp_db_check_pubkey>:
   1bd00:	endbr64 
   1bd04:	push   r15
   1bd06:	push   r14
   1bd08:	mov    r14,rdi
   1bd0b:	push   r13
   1bd0d:	mov    r13,rsi
   1bd10:	push   r12
   1bd12:	push   rbp
   1bd13:	push   rbx
   1bd14:	sub    rsp,0x98
   1bd1b:	mov    QWORD PTR [rsp+0x8],rdx
   1bd20:	mov    QWORD PTR [rsp+0x10],rcx
   1bd25:	mov    rax,QWORD PTR fs:0x28
   1bd2e:	mov    QWORD PTR [rsp+0x88],rax
   1bd36:	mov    rax,QWORD PTR [rip+0x5b733]        # 77470 <plugin_vtable>
   1bd3d:	test   rax,rax
   1bd40:	je     1bd80 <wget_hpkp_db_check_pubkey+0x80>
   1bd42:	mov    rdx,QWORD PTR [rsp+0x88]
   1bd4a:	sub    rdx,QWORD PTR fs:0x28
   1bd53:	jne    1bf0e <wget_hpkp_db_check_pubkey+0x20e>
   1bd59:	mov    rax,QWORD PTR [rax+0x18]
   1bd5d:	mov    rcx,QWORD PTR [rsp+0x10]
   1bd62:	mov    rdx,QWORD PTR [rsp+0x8]
   1bd67:	add    rsp,0x98
   1bd6e:	pop    rbx
   1bd6f:	pop    rbp
   1bd70:	pop    r12
   1bd72:	pop    r13
   1bd74:	pop    r14
   1bd76:	pop    r15
   1bd78:	jmp    rax
   1bd7a:	nop    WORD PTR [rax+rax*1+0x0]
   1bd80:	mov    QWORD PTR [rsp+0x28],0x0
   1bd89:	mov    edi,0x5
   1bd8e:	call   10880 <wget_hash_get_len@plt>
   1bd93:	cdqe   
   1bd95:	mov    QWORD PTR [rsp+0x18],rax
   1bd9a:	cmp    rax,0x20
   1bd9e:	ja     1bed9 <wget_hpkp_db_check_pubkey+0x1d9>
   1bda4:	movzx  eax,BYTE PTR [r13+0x0]
   1bda9:	xor    ebx,ebx
   1bdab:	lea    r12,[rsp+0x28]
   1bdb0:	lea    r15,[rsp+0x30]
   1bdb5:	mov    ebp,0x1
   1bdba:	test   al,al
   1bdbc:	je     1bece <wget_hpkp_db_check_pubkey+0x1ce>
   1bdc2:	nop    WORD PTR [rax+rax*1+0x0]
   1bdc8:	cmp    al,0x2e
   1bdca:	jne    1bddb <wget_hpkp_db_check_pubkey+0xdb>
   1bdcc:	nop    DWORD PTR [rax+0x0]
   1bdd0:	add    r13,0x1
   1bdd4:	cmp    BYTE PTR [r13+0x0],0x2e
   1bdd9:	je     1bdd0 <wget_hpkp_db_check_pubkey+0xd0>
   1bddb:	mov    rdi,QWORD PTR [r14+0x8]
   1bddf:	pxor   xmm0,xmm0
   1bde3:	mov    rdx,r12
   1bde6:	mov    rsi,r15
   1bde9:	mov    QWORD PTR [rsp+0x30],r13
   1bdee:	movups XMMWORD PTR [rsp+0x38],xmm0
   1bdf3:	movups XMMWORD PTR [rsp+0x48],xmm0
   1bdf8:	mov    QWORD PTR [rsp+0x58],0x0
   1be01:	call   10520 <wget_hashmap_get@plt>
   1be06:	mov    rdi,r13
   1be09:	mov    esi,0x2e
   1be0e:	test   eax,eax
   1be10:	cmove  ebx,ebp
   1be13:	call   11030 <strchrnul@plt>
   1be18:	mov    rdx,QWORD PTR [rsp+0x28]
   1be1d:	mov    r13,rax
   1be20:	movzx  eax,BYTE PTR [rax]
   1be23:	test   al,al
   1be25:	je     1bec5 <wget_hpkp_db_check_pubkey+0x1c5>
   1be2b:	test   rdx,rdx
   1be2e:	je     1bdc8 <wget_hpkp_db_check_pubkey+0xc8>
   1be30:	test   ebx,ebx
   1be32:	je     1be3e <wget_hpkp_db_check_pubkey+0x13e>
   1be34:	test   BYTE PTR [rdx+0x28],0x1
   1be38:	je     1bece <wget_hpkp_db_check_pubkey+0x1ce>
   1be3e:	lea    rbx,[rsp+0x60]
   1be43:	mov    rdx,QWORD PTR [rsp+0x10]
   1be48:	mov    rsi,QWORD PTR [rsp+0x8]
   1be4d:	mov    edi,0x5
   1be52:	mov    rcx,rbx
   1be55:	call   10740 <wget_hash_fast@plt>
   1be5a:	test   eax,eax
   1be5c:	jne    1bed2 <wget_hpkp_db_check_pubkey+0x1d2>
   1be5e:	lea    rax,[rip+0x2fb13]        # 4b978 <__func__.0+0x28>
   1be65:	mov    rsi,r15
   1be68:	mov    QWORD PTR [rsp+0x38],rbx
   1be6d:	mov    QWORD PTR [rsp+0x40],rax
   1be72:	mov    rax,QWORD PTR [rsp+0x18]
   1be77:	mov    QWORD PTR [rsp+0x30],0x0
   1be80:	mov    QWORD PTR [rsp+0x48],rax
   1be85:	mov    rax,QWORD PTR [rsp+0x28]
   1be8a:	mov    rdi,QWORD PTR [rax+0x20]
   1be8e:	call   12000 <wget_vector_find@plt>
   1be93:	cmp    eax,0xffffffff
   1be96:	setne  al
   1be99:	movzx  eax,al
   1be9c:	lea    eax,[rax+rax*2-0x2]
   1bea0:	mov    rdx,QWORD PTR [rsp+0x88]
   1bea8:	sub    rdx,QWORD PTR fs:0x28
   1beb1:	jne    1bf0e <wget_hpkp_db_check_pubkey+0x20e>
   1beb3:	add    rsp,0x98
   1beba:	pop    rbx
   1bebb:	pop    rbp
   1bebc:	pop    r12
   1bebe:	pop    r13
   1bec0:	pop    r14
   1bec2:	pop    r15
   1bec4:	ret    
   1bec5:	test   rdx,rdx
   1bec8:	jne    1be30 <wget_hpkp_db_check_pubkey+0x130>
   1bece:	xor    eax,eax
   1bed0:	jmp    1bea0 <wget_hpkp_db_check_pubkey+0x1a0>
   1bed2:	mov    eax,0xffffffff
   1bed7:	jmp    1bea0 <wget_hpkp_db_check_pubkey+0x1a0>
   1bed9:	mov    edx,0x5
   1bede:	lea    rsi,[rip+0x2fb43]        # 4ba28 <__func__.0+0xd8>
   1bee5:	xor    edi,edi
   1bee7:	call   10f90 <dcgettext@plt>
   1beec:	mov    rdx,QWORD PTR [rsp+0x18]
   1bef1:	mov    ecx,0x20
   1bef6:	lea    rsi,[rip+0x301e3]        # 4c0e0 <__func__.0>
   1befd:	mov    rdi,rax
   1bf00:	xor    eax,eax
   1bf02:	call   11ea0 <wget_error_printf@plt>
   1bf07:	mov    eax,0xffffffff
   1bf0c:	jmp    1bea0 <wget_hpkp_db_check_pubkey+0x1a0>
   1bf0e:	call   11760 <__stack_chk_fail@plt>
   1bf13:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1bf1e:	xchg   ax,ax

000000000001bf20 <wget_hpkp_db_add>:
   1bf20:	endbr64 
   1bf24:	push   r12
   1bf26:	push   rbp
   1bf27:	mov    rbp,rdi
   1bf2a:	push   rbx
   1bf2b:	mov    rbx,rsi
   1bf2e:	sub    rsp,0x10
   1bf32:	mov    rax,QWORD PTR fs:0x28
   1bf3b:	mov    QWORD PTR [rsp+0x8],rax
   1bf40:	mov    rax,QWORD PTR [rip+0x5b529]        # 77470 <plugin_vtable>
   1bf47:	test   rax,rax
   1bf4a:	je     1bf78 <wget_hpkp_db_add+0x58>
   1bf4c:	call   QWORD PTR [rax+0x20]
   1bf4f:	mov    QWORD PTR [rbx],0x0
   1bf56:	mov    rax,QWORD PTR [rsp+0x8]
   1bf5b:	sub    rax,QWORD PTR fs:0x28
   1bf64:	jne    1c091 <wget_hpkp_db_add+0x171>
   1bf6a:	add    rsp,0x10
   1bf6e:	pop    rbx
   1bf6f:	pop    rbp
   1bf70:	pop    r12
   1bf72:	ret    
   1bf73:	nop    DWORD PTR [rax+rax*1+0x0]
   1bf78:	test   rsi,rsi
   1bf7b:	je     1bf56 <wget_hpkp_db_add+0x36>
   1bf7d:	mov    r12,QWORD PTR [rsi]
   1bf80:	test   r12,r12
   1bf83:	je     1bf56 <wget_hpkp_db_add+0x36>
   1bf85:	mov    rdi,QWORD PTR [rdi+0x10]
   1bf89:	call   12040 <wget_thread_mutex_lock@plt>
   1bf8e:	cmp    QWORD PTR [r12+0x18],0x0
   1bf94:	je     1c058 <wget_hpkp_db_add+0x138>
   1bf9a:	mov    rdi,QWORD PTR [r12+0x20]
   1bf9f:	call   10e90 <wget_vector_size@plt>
   1bfa4:	test   eax,eax
   1bfa6:	je     1c058 <wget_hpkp_db_add+0x138>
   1bfac:	mov    rdi,QWORD PTR [rbp+0x8]
   1bfb0:	mov    rdx,rsp
   1bfb3:	mov    rsi,r12
   1bfb6:	call   10520 <wget_hashmap_get@plt>
   1bfbb:	test   eax,eax
   1bfbd:	je     1c080 <wget_hpkp_db_add+0x160>
   1bfc3:	mov    rdi,QWORD PTR [rsp]
   1bfc7:	mov    rax,QWORD PTR [r12+0x10]
   1bfcc:	movzx  edx,BYTE PTR [r12+0x28]
   1bfd2:	mov    QWORD PTR [rdi+0x10],rax
   1bfd6:	mov    rax,QWORD PTR [r12+0x18]
   1bfdb:	add    rdi,0x20
   1bfdf:	and    edx,0x1
   1bfe2:	mov    QWORD PTR [rdi-0x8],rax
   1bfe6:	mov    rax,QWORD PTR [r12+0x8]
   1bfeb:	mov    QWORD PTR [rdi-0x18],rax
   1bfef:	movzx  eax,BYTE PTR [rdi+0x8]
   1bff3:	and    eax,0xfffffffe
   1bff6:	or     eax,edx
   1bff8:	mov    BYTE PTR [rdi+0x8],al
   1bffb:	call   125e0 <wget_vector_free@plt>
   1c000:	mov    rax,QWORD PTR [rsp]
   1c004:	mov    rdx,QWORD PTR [r12+0x20]
   1c009:	lea    rdi,[rip+0x2ffb8]        # 4bfc8 <__func__.0+0x2f8>
   1c010:	movzx  ecx,BYTE PTR [rax+0x28]
   1c014:	mov    rsi,QWORD PTR [rax]
   1c017:	mov    QWORD PTR [rax+0x20],rdx
   1c01b:	mov    QWORD PTR [r12+0x20],0x0
   1c024:	mov    rdx,QWORD PTR [rax+0x18]
   1c028:	xor    eax,eax
   1c02a:	and    ecx,0x1
   1c02d:	call   114b0 <wget_debug_printf@plt>
   1c032:	nop    WORD PTR [rax+rax*1+0x0]
   1c038:	mov    rdi,r12
   1c03b:	call   10450 <wget_hpkp_free@plt>
   1c040:	mov    rdi,QWORD PTR [rbp+0x10]
   1c044:	call   117c0 <wget_thread_mutex_unlock@plt>
   1c049:	mov    QWORD PTR [rbx],0x0
   1c050:	jmp    1bf56 <wget_hpkp_db_add+0x36>
   1c055:	nop    DWORD PTR [rax]
   1c058:	mov    rdi,QWORD PTR [rbp+0x8]
   1c05c:	mov    rsi,r12
   1c05f:	call   10b70 <wget_hashmap_remove@plt>
   1c064:	test   eax,eax
   1c066:	je     1c038 <wget_hpkp_db_add+0x118>
   1c068:	mov    rsi,QWORD PTR [r12]
   1c06c:	lea    rdi,[rip+0x2fe6b]        # 4bede <__func__.0+0x20e>
   1c073:	xor    eax,eax
   1c075:	call   114b0 <wget_debug_printf@plt>
   1c07a:	jmp    1c038 <wget_hpkp_db_add+0x118>
   1c07c:	nop    DWORD PTR [rax+0x0]
   1c080:	mov    rdi,QWORD PTR [rbp+0x8]
   1c084:	mov    rdx,r12
   1c087:	mov    rsi,r12
   1c08a:	call   10c90 <wget_hashmap_put@plt>
   1c08f:	jmp    1c040 <wget_hpkp_db_add+0x120>
   1c091:	call   11760 <__stack_chk_fail@plt>
   1c096:	cs nop WORD PTR [rax+rax*1+0x0]

000000000001c0a0 <hpkp_db_load>:
   1c0a0:	endbr64 
   1c0a4:	push   r15
   1c0a6:	push   r14
   1c0a8:	push   r13
   1c0aa:	push   r12
   1c0ac:	push   rbp
   1c0ad:	mov    rbp,rsi
   1c0b0:	push   rbx
   1c0b1:	mov    rbx,rdi
   1c0b4:	sub    rsp,0x328
   1c0bb:	mov    QWORD PTR [rsp+0x8],rdi
   1c0c0:	xor    edi,edi
   1c0c2:	mov    rax,QWORD PTR fs:0x28
   1c0cb:	mov    QWORD PTR [rsp+0x318],rax
   1c0d3:	xor    eax,eax
   1c0d5:	mov    QWORD PTR [rsp+0x48],0x0
   1c0de:	mov    QWORD PTR [rsp+0x50],0x0
   1c0e7:	mov    QWORD PTR [rsp+0x58],0x0
   1c0f0:	call   11480 <time@plt>
   1c0f5:	mov    rdi,rbp
   1c0f8:	mov    QWORD PTR [rsp+0x18],rax
   1c0fd:	call   11650 <fileno@plt>
   1c102:	lea    rsi,[rsp+0x60]
   1c107:	mov    edi,eax
   1c109:	call   12210 <fstat@plt>
   1c10e:	test   eax,eax
   1c110:	jne    1c12d <hpkp_db_load+0x8d>
   1c112:	mov    rax,QWORD PTR [rsp+0xb8]
   1c11a:	cmp    rax,QWORD PTR [rbx+0x18]
   1c11e:	je     1c2f3 <hpkp_db_load+0x253>
   1c124:	mov    rsi,QWORD PTR [rsp+0x8]
   1c129:	mov    QWORD PTR [rsi+0x18],rax
   1c12d:	lea    rax,[rsp+0x48]
   1c132:	lea    r12,[rsp+0x58]
   1c137:	mov    QWORD PTR [rsp+0x10],rax
   1c13c:	lea    rbx,[rsp+0x50]
   1c141:	nop    DWORD PTR [rax+0x0]
   1c148:	mov    rdx,rbp
   1c14b:	mov    rsi,r12
   1c14e:	mov    rdi,rbx
   1c151:	call   10db0 <wget_getline@plt>
   1c156:	mov    r14,rax
   1c159:	test   rax,rax
   1c15c:	js     1c2b8 <hpkp_db_load+0x218>
   1c162:	call   116c0 <__ctype_b_loc@plt>
   1c167:	mov    r15,QWORD PTR [rsp+0x50]
   1c16c:	mov    rcx,QWORD PTR [rax]
   1c16f:	mov    r13,r15
   1c172:	jmp    1c17c <hpkp_db_load+0xdc>
   1c174:	nop    DWORD PTR [rax+0x0]
   1c178:	add    r13,0x1
   1c17c:	movsx  rdx,BYTE PTR [r13+0x0]
   1c181:	mov    rax,rdx
   1c184:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
   1c189:	jne    1c178 <hpkp_db_load+0xd8>
   1c18b:	cmp    dl,0x23
   1c18e:	je     1c148 <hpkp_db_load+0xa8>
   1c190:	test   dl,dl
   1c192:	je     1c148 <hpkp_db_load+0xa8>
   1c194:	test   r14,r14
   1c197:	jne    1c1b0 <hpkp_db_load+0x110>
   1c199:	jmp    1c1c2 <hpkp_db_load+0x122>
   1c19b:	nop    DWORD PTR [rax+rax*1+0x0]
   1c1a0:	sub    r14,0x1
   1c1a4:	mov    BYTE PTR [r15+r14*1],0x0
   1c1a9:	je     1c1bd <hpkp_db_load+0x11d>
   1c1ab:	mov    r15,QWORD PTR [rsp+0x50]
   1c1b0:	movzx  eax,BYTE PTR [r15+r14*1]
   1c1b5:	cmp    al,0xa
   1c1b7:	je     1c1a0 <hpkp_db_load+0x100>
   1c1b9:	cmp    al,0xd
   1c1bb:	je     1c1a0 <hpkp_db_load+0x100>
   1c1bd:	movzx  eax,BYTE PTR [r13+0x0]
   1c1c2:	cmp    al,0x2a
   1c1c4:	je     1c320 <hpkp_db_load+0x280>
   1c1ca:	mov    rsi,QWORD PTR [rsp+0x10]
   1c1cf:	mov    rdi,QWORD PTR [rsp+0x8]
   1c1d4:	lea    r14,[rsp+0x110]
   1c1dc:	call   104f0 <wget_hpkp_db_add@plt>
   1c1e1:	xor    eax,eax
   1c1e3:	lea    rcx,[rsp+0x34]
   1c1e8:	mov    rdx,r14
   1c1eb:	lea    r9,[rsp+0x40]
   1c1f0:	lea    r8,[rsp+0x38]
   1c1f5:	mov    rdi,r13
   1c1f8:	lea    rsi,[rip+0x2fcf0]        # 4beef <__func__.0+0x21f>
   1c1ff:	call   11580 <__isoc99_sscanf@plt>
   1c204:	cmp    eax,0x4
   1c207:	jne    1c388 <hpkp_db_load+0x2e8>
   1c20d:	mov    r13,QWORD PTR [rsp+0x40]
   1c212:	mov    r15,QWORD PTR [rsp+0x38]
   1c217:	movabs rax,0x3ffffffffffffffe
   1c221:	cmp    r13,rax
   1c224:	ja     1c39b <hpkp_db_load+0x2fb>
   1c22a:	cmp    r15,rax
   1c22d:	ja     1c39b <hpkp_db_load+0x2fb>
   1c233:	lea    rax,[r15+r13*1]
   1c237:	mov    QWORD PTR [rsp+0x20],rax
   1c23c:	test   r13,r13
   1c23f:	je     1c39b <hpkp_db_load+0x2fb>
   1c245:	cmp    QWORD PTR [rsp+0x18],rax
   1c24a:	jg     1c39b <hpkp_db_load+0x2fb>
   1c250:	call   109c0 <wget_hpkp_new@plt>
   1c255:	test   rax,rax
   1c258:	mov    QWORD PTR [rsp+0x48],rax
   1c25d:	mov    QWORD PTR [rsp+0x28],rax
   1c262:	je     1c148 <hpkp_db_load+0xa8>
   1c268:	mov    rdi,r14
   1c26b:	call   127b0 <wget_strdup@plt>
   1c270:	mov    rdx,QWORD PTR [rsp+0x28]
   1c275:	mov    QWORD PTR [rdx],rax
   1c278:	test   rax,rax
   1c27b:	je     1c3f5 <hpkp_db_load+0x355>
   1c281:	mov    rax,QWORD PTR [rsp+0x48]
   1c286:	mov    edx,DWORD PTR [rsp+0x34]
   1c28a:	mov    rsi,QWORD PTR [rsp+0x20]
   1c28f:	test   edx,edx
   1c291:	movzx  edx,BYTE PTR [rax+0x28]
   1c295:	mov    QWORD PTR [rax+0x18],r13
   1c299:	setne  cl
   1c29c:	mov    QWORD PTR [rax+0x10],r15
   1c2a0:	and    edx,0xfffffffe
   1c2a3:	mov    QWORD PTR [rax+0x8],rsi
   1c2a7:	or     edx,ecx
   1c2a9:	mov    BYTE PTR [rax+0x28],dl
   1c2ac:	jmp    1c148 <hpkp_db_load+0xa8>
   1c2b1:	nop    DWORD PTR [rax+0x0]
   1c2b8:	mov    rdi,QWORD PTR [rsp+0x8]
   1c2bd:	mov    rsi,QWORD PTR [rsp+0x10]
   1c2c2:	call   104f0 <wget_hpkp_db_add@plt>
   1c2c7:	mov    rdi,QWORD PTR [rsp+0x50]
   1c2cc:	test   rdi,rdi
   1c2cf:	je     1c2e3 <hpkp_db_load+0x243>
   1c2d1:	mov    rax,QWORD PTR [rip+0x59d10]        # 75fe8 <wget_free@@Base-0x1328>
   1c2d8:	call   QWORD PTR [rax]
   1c2da:	mov    QWORD PTR [rsp+0x50],0x0
   1c2e3:	mov    rdi,rbp
   1c2e6:	call   12580 <ferror@plt>
   1c2eb:	test   eax,eax
   1c2ed:	jne    1c3de <hpkp_db_load+0x33e>
   1c2f3:	xor    eax,eax
   1c2f5:	mov    rdx,QWORD PTR [rsp+0x318]
   1c2fd:	sub    rdx,QWORD PTR fs:0x28
   1c306:	jne    1c41a <hpkp_db_load+0x37a>
   1c30c:	add    rsp,0x328
   1c313:	pop    rbx
   1c314:	pop    rbp
   1c315:	pop    r12
   1c317:	pop    r13
   1c319:	pop    r14
   1c31b:	pop    r15
   1c31d:	ret    
   1c31e:	xchg   ax,ax
   1c320:	cmp    QWORD PTR [rsp+0x48],0x0
   1c326:	je     1c3b1 <hpkp_db_load+0x311>
   1c32c:	lea    r15,[rsp+0x210]
   1c334:	xor    eax,eax
   1c336:	mov    rdi,r13
   1c339:	lea    r14,[rsp+0xf0]
   1c341:	mov    rcx,r15
   1c344:	lea    rsi,[rip+0x2fbd4]        # 4bf1f <__func__.0+0x24f>
   1c34b:	mov    rdx,r14
   1c34e:	call   11580 <__isoc99_sscanf@plt>
   1c353:	cmp    eax,0x2
   1c356:	je     1c3c9 <hpkp_db_load+0x329>
   1c358:	mov    r13,QWORD PTR [rsp+0x50]
   1c35d:	mov    edx,0x5
   1c362:	lea    rsi,[rip+0x2fcbf]        # 4c028 <__func__.0+0x358>
   1c369:	xor    edi,edi
   1c36b:	call   10f90 <dcgettext@plt>
   1c370:	mov    rsi,r13
   1c373:	mov    rdi,rax
   1c376:	xor    eax,eax
   1c378:	call   11ea0 <wget_error_printf@plt>
   1c37d:	jmp    1c148 <hpkp_db_load+0xa8>
   1c382:	nop    WORD PTR [rax+rax*1+0x0]
   1c388:	mov    r13,QWORD PTR [rsp+0x50]
   1c38d:	mov    edx,0x5
   1c392:	lea    rsi,[rip+0x2fc67]        # 4c000 <__func__.0+0x330>
   1c399:	jmp    1c369 <hpkp_db_load+0x2c9>
   1c39b:	mov    rsi,r14
   1c39e:	lea    rdi,[rip+0x2fb5d]        # 4bf02 <__func__.0+0x232>
   1c3a5:	xor    eax,eax
   1c3a7:	call   114b0 <wget_debug_printf@plt>
   1c3ac:	jmp    1c148 <hpkp_db_load+0xa8>
   1c3b1:	mov    rsi,QWORD PTR [rsp+0x50]
   1c3b6:	lea    rdi,[rip+0x2fc93]        # 4c050 <__func__.0+0x380>
   1c3bd:	xor    eax,eax
   1c3bf:	call   114b0 <wget_debug_printf@plt>
   1c3c4:	jmp    1c148 <hpkp_db_load+0xa8>
   1c3c9:	mov    rdi,QWORD PTR [rsp+0x48]
   1c3ce:	mov    rdx,r15
   1c3d1:	mov    rsi,r14
   1c3d4:	call   126f0 <wget_hpkp_pin_add@plt>
   1c3d9:	jmp    1c148 <hpkp_db_load+0xa8>
   1c3de:	mov    rax,QWORD PTR [rsp+0x8]
   1c3e3:	mov    QWORD PTR [rax+0x18],0x0
   1c3eb:	mov    eax,0xffffffff
   1c3f0:	jmp    1c2f5 <hpkp_db_load+0x255>
   1c3f5:	mov    rdi,QWORD PTR [rsp+0x48]
   1c3fa:	test   rdi,rdi
   1c3fd:	je     1c148 <hpkp_db_load+0xa8>
   1c403:	mov    rax,QWORD PTR [rip+0x59bde]        # 75fe8 <wget_free@@Base-0x1328>
   1c40a:	call   QWORD PTR [rax]
   1c40c:	mov    QWORD PTR [rsp+0x48],0x0
   1c415:	jmp    1c148 <hpkp_db_load+0xa8>
   1c41a:	call   11760 <__stack_chk_fail@plt>
   1c41f:	nop

000000000001c420 <wget_hpkp_db_load>:
   1c420:	endbr64 
   1c424:	push   r12
   1c426:	push   rbp
   1c427:	mov    rbp,rdi
   1c42a:	sub    rsp,0x8
   1c42e:	mov    rax,QWORD PTR [rip+0x5b03b]        # 77470 <plugin_vtable>
   1c435:	test   rax,rax
   1c438:	je     1c450 <wget_hpkp_db_load+0x30>
   1c43a:	mov    rax,QWORD PTR [rax+0x28]
   1c43e:	add    rsp,0x8
   1c442:	pop    rbp
   1c443:	pop    r12
   1c445:	jmp    rax
   1c447:	nop    WORD PTR [rax+rax*1+0x0]
   1c450:	test   rdi,rdi
   1c453:	je     1c4a8 <wget_hpkp_db_load+0x88>
   1c455:	mov    rdi,QWORD PTR [rdi]
   1c458:	xor    r12d,r12d
   1c45b:	test   rdi,rdi
   1c45e:	je     1c465 <wget_hpkp_db_load+0x45>
   1c460:	cmp    BYTE PTR [rdi],0x0
   1c463:	jne    1c470 <wget_hpkp_db_load+0x50>
   1c465:	add    rsp,0x8
   1c469:	mov    eax,r12d
   1c46c:	pop    rbp
   1c46d:	pop    r12
   1c46f:	ret    
   1c470:	mov    rcx,rbp
   1c473:	xor    edx,edx
   1c475:	lea    rsi,[rip+0xfffffffffffffc24]        # 1c0a0 <hpkp_db_load>
   1c47c:	call   10980 <wget_update_file@plt>
   1c481:	mov    r12d,eax
   1c484:	test   eax,eax
   1c486:	jne    1c4ad <wget_hpkp_db_load+0x8d>
   1c488:	mov    rsi,QWORD PTR [rbp+0x0]
   1c48c:	xor    eax,eax
   1c48e:	lea    rdi,[rip+0x2fab0]        # 4bf45 <__func__.0+0x275>
   1c495:	call   114b0 <wget_debug_printf@plt>
   1c49a:	add    rsp,0x8
   1c49e:	mov    eax,r12d
   1c4a1:	pop    rbp
   1c4a2:	pop    r12
   1c4a4:	ret    
   1c4a5:	nop    DWORD PTR [rax]
   1c4a8:	xor    r12d,r12d
   1c4ab:	jmp    1c465 <wget_hpkp_db_load+0x45>
   1c4ad:	mov    edx,0x5
   1c4b2:	lea    rsi,[rip+0x2fa72]        # 4bf2b <__func__.0+0x25b>
   1c4b9:	xor    edi,edi
   1c4bb:	mov    r12d,0xffffffff
   1c4c1:	call   10f90 <dcgettext@plt>
   1c4c6:	mov    rdi,rax
   1c4c9:	xor    eax,eax
   1c4cb:	call   11ea0 <wget_error_printf@plt>
   1c4d0:	jmp    1c465 <wget_hpkp_db_load+0x45>
   1c4d2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1c4dd:	nop    DWORD PTR [rax]

000000000001c4e0 <wget_hpkp_db_save>:
   1c4e0:	endbr64 
   1c4e4:	push   r12
   1c4e6:	push   rbp
   1c4e7:	mov    rbp,rdi
   1c4ea:	sub    rsp,0x8
   1c4ee:	mov    rax,QWORD PTR [rip+0x5af7b]        # 77470 <plugin_vtable>
   1c4f5:	test   rax,rax
   1c4f8:	je     1c510 <wget_hpkp_db_save+0x30>
   1c4fa:	mov    rax,QWORD PTR [rax+0x30]
   1c4fe:	add    rsp,0x8
   1c502:	pop    rbp
   1c503:	pop    r12
   1c505:	jmp    rax
   1c507:	nop    WORD PTR [rax+rax*1+0x0]
   1c510:	test   rdi,rdi
   1c513:	je     1c5b0 <wget_hpkp_db_save+0xd0>
   1c519:	mov    rdi,QWORD PTR [rdi]
   1c51c:	test   rdi,rdi
   1c51f:	je     1c5b0 <wget_hpkp_db_save+0xd0>
   1c525:	cmp    BYTE PTR [rdi],0x0
   1c528:	je     1c5b0 <wget_hpkp_db_save+0xd0>
   1c52e:	mov    rcx,rbp
   1c531:	lea    rdx,[rip+0xfffffffffffff538]        # 1ba70 <hpkp_db_save>
   1c538:	lea    rsi,[rip+0xfffffffffffffb61]        # 1c0a0 <hpkp_db_load>
   1c53f:	call   10980 <wget_update_file@plt>
   1c544:	mov    r12d,eax
   1c547:	test   eax,eax
   1c549:	jne    1c5b8 <wget_hpkp_db_save+0xd8>
   1c54b:	mov    rdi,QWORD PTR [rbp+0x8]
   1c54f:	call   125c0 <wget_hashmap_size@plt>
   1c554:	mov    esi,eax
   1c556:	test   eax,eax
   1c558:	je     1c590 <wget_hpkp_db_save+0xb0>
   1c55a:	cmp    eax,0x1
   1c55d:	lea    rdx,[rip+0x3110e]        # 4d672 <__func__.0+0x42>
   1c564:	lea    rax,[rip+0x30662]        # 4cbcd <__func__.5+0x21d>
   1c56b:	mov    rcx,QWORD PTR [rbp+0x0]
   1c56f:	cmove  rdx,rax
   1c573:	lea    rdi,[rip+0x2fb16]        # 4c090 <__func__.0+0x3c0>
   1c57a:	xor    eax,eax
   1c57c:	call   114b0 <wget_debug_printf@plt>
   1c581:	add    rsp,0x8
   1c585:	mov    eax,r12d
   1c588:	pop    rbp
   1c589:	pop    r12
   1c58b:	ret    
   1c58c:	nop    DWORD PTR [rax+0x0]
   1c590:	xor    eax,eax
   1c592:	lea    rdi,[rip+0x2fb17]        # 4c0b0 <__func__.0+0x3e0>
   1c599:	call   114b0 <wget_debug_printf@plt>
   1c59e:	add    rsp,0x8
   1c5a2:	mov    eax,r12d
   1c5a5:	pop    rbp
   1c5a6:	pop    r12
   1c5a8:	ret    
   1c5a9:	nop    DWORD PTR [rax+0x0]
   1c5b0:	mov    r12d,0xffffffff
   1c5b6:	jmp    1c581 <wget_hpkp_db_save+0xa1>
   1c5b8:	mov    rbp,QWORD PTR [rbp+0x0]
   1c5bc:	mov    edx,0x5
   1c5c1:	lea    rsi,[rip+0x2faa8]        # 4c070 <__func__.0+0x3a0>
   1c5c8:	xor    edi,edi
   1c5ca:	call   10f90 <dcgettext@plt>
   1c5cf:	mov    r12d,0xffffffff
   1c5d5:	mov    rdi,rax
   1c5d8:	mov    rsi,rbp
   1c5db:	xor    eax,eax
   1c5dd:	call   11ea0 <wget_error_printf@plt>
   1c5e2:	jmp    1c581 <wget_hpkp_db_save+0xa1>
   1c5e4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1c5ef:	nop

000000000001c5f0 <wget_hpkp_db_init>:
   1c5f0:	endbr64 
   1c5f4:	push   r12
   1c5f6:	push   rbp
   1c5f7:	mov    rbp,rsi
   1c5fa:	sub    rsp,0x8
   1c5fe:	mov    rax,QWORD PTR [rip+0x5ae6b]        # 77470 <plugin_vtable>
   1c605:	test   rax,rax
   1c608:	je     1c620 <wget_hpkp_db_init+0x30>
   1c60a:	mov    rax,QWORD PTR [rax]
   1c60d:	add    rsp,0x8
   1c611:	pop    rbp
   1c612:	pop    r12
   1c614:	jmp    rax
   1c616:	cs nop WORD PTR [rax+rax*1+0x0]
   1c620:	test   rdi,rdi
   1c623:	je     1c688 <wget_hpkp_db_init+0x98>
   1c625:	pxor   xmm0,xmm0
   1c629:	mov    r12,rdi
   1c62c:	movups XMMWORD PTR [rdi],xmm0
   1c62f:	movups XMMWORD PTR [rdi+0x10],xmm0
   1c633:	test   rbp,rbp
   1c636:	je     1c644 <wget_hpkp_db_init+0x54>
   1c638:	mov    rdi,rbp
   1c63b:	call   127b0 <wget_strdup@plt>
   1c640:	mov    QWORD PTR [r12],rax
   1c644:	lea    rdx,[rip+0xfffffffffffff505]        # 1bb50 <compare_hpkp>
   1c64b:	lea    rsi,[rip+0xfffffffffffff3ee]        # 1ba40 <hash_hpkp>
   1c652:	mov    edi,0x10
   1c657:	call   104c0 <wget_hashmap_create@plt>
   1c65c:	mov    rsi,QWORD PTR [rip+0x5997d]        # 75fe0 <wget_hpkp_free@@Base+0x5a800>
   1c663:	mov    QWORD PTR [r12+0x8],rax
   1c668:	mov    rdi,rax
   1c66b:	call   10b20 <wget_hashmap_set_key_destructor@plt>
   1c670:	lea    rdi,[r12+0x10]
   1c675:	call   10530 <wget_thread_mutex_init@plt>
   1c67a:	add    rsp,0x8
   1c67e:	mov    rax,r12
   1c681:	pop    rbp
   1c682:	pop    r12
   1c684:	ret    
   1c685:	nop    DWORD PTR [rax]
   1c688:	mov    rax,QWORD PTR [rip+0x598b1]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   1c68f:	mov    esi,0x20
   1c694:	mov    edi,0x1
   1c699:	call   QWORD PTR [rax]
   1c69b:	mov    r12,rax
   1c69e:	jmp    1c633 <wget_hpkp_db_init+0x43>

000000000001c6a0 <wget_hpkp_db_set_fname>:
   1c6a0:	endbr64 
   1c6a4:	push   rbp
   1c6a5:	mov    rbp,rsi
   1c6a8:	push   rbx
   1c6a9:	mov    rbx,rdi
   1c6ac:	sub    rsp,0x8
   1c6b0:	mov    rdi,QWORD PTR [rdi]
   1c6b3:	test   rdi,rdi
   1c6b6:	je     1c6c8 <wget_hpkp_db_set_fname+0x28>
   1c6b8:	mov    rax,QWORD PTR [rip+0x59929]        # 75fe8 <wget_free@@Base-0x1328>
   1c6bf:	call   QWORD PTR [rax]
   1c6c1:	mov    QWORD PTR [rbx],0x0
   1c6c8:	mov    rdi,rbp
   1c6cb:	call   127b0 <wget_strdup@plt>
   1c6d0:	mov    QWORD PTR [rbx],rax
   1c6d3:	add    rsp,0x8
   1c6d7:	pop    rbx
   1c6d8:	pop    rbp
   1c6d9:	ret    
   1c6da:	nop    WORD PTR [rax+rax*1+0x0]

000000000001c6e0 <html_get_url>:
   1c6e0:	endbr64 
   1c6e4:	push   r15
   1c6e6:	mov    r15,r8
   1c6e9:	push   r14
   1c6eb:	push   r13
   1c6ed:	mov    r13,r9
   1c6f0:	push   r12
   1c6f2:	mov    r12d,esi
   1c6f5:	push   rbp
   1c6f6:	mov    rbp,rdx
   1c6f9:	push   rbx
   1c6fa:	mov    rbx,rdi
   1c6fd:	sub    rsp,0x1a8
   1c704:	mov    QWORD PTR [rsp],rcx
   1c708:	mov    rax,QWORD PTR fs:0x28
   1c711:	mov    QWORD PTR [rsp+0x198],rax
   1c719:	xor    eax,eax
   1c71b:	and    esi,0x1
   1c71e:	je     1c760 <html_get_url+0x80>
   1c720:	movzx  eax,BYTE PTR [rdx]
   1c723:	or     eax,0x20
   1c726:	cmp    al,0x61
   1c728:	je     1cae8 <html_get_url+0x408>
   1c72e:	cmp    al,0x6d
   1c730:	je     1cbd0 <html_get_url+0x4f0>
   1c736:	cmp    al,0x6c
   1c738:	jne    1c760 <html_get_url+0x80>
   1c73a:	lea    rsi,[rip+0x2f9c3]        # 4c104 <__func__.0+0x24>
   1c741:	mov    rdi,rdx
   1c744:	call   12590 <wget_strcasecmp_ascii@plt>
   1c749:	test   eax,eax
   1c74b:	jne    1c760 <html_get_url+0x80>
   1c74d:	mov    BYTE PTR [rbx+0x5a],0x0
   1c751:	mov    DWORD PTR [rbx+0x48],0xffffffff
   1c758:	nop    DWORD PTR [rax+rax*1+0x0]
   1c760:	test   r12b,0x8
   1c764:	je     1ca08 <html_get_url+0x328>
   1c76a:	test   r15,r15
   1c76d:	je     1cab8 <html_get_url+0x3d8>
   1c773:	movzx  eax,BYTE PTR [rbp+0x0]
   1c777:	or     eax,0x20
   1c77a:	cmp    al,0x6d
   1c77c:	je     1cbf8 <html_get_url+0x518>
   1c782:	mov    rdi,QWORD PTR [rbx+0x30]
   1c786:	test   rdi,rdi
   1c789:	je     1c7d8 <html_get_url+0xf8>
   1c78b:	lea    rsi,[rsp+0x20]
   1c790:	mov    QWORD PTR [rsp+0x20],rbp
   1c795:	mov    QWORD PTR [rsp+0x28],0x0
   1c79e:	call   12000 <wget_vector_find@plt>
   1c7a3:	cmp    eax,0xffffffff
   1c7a6:	jne    1cab8 <html_get_url+0x3d8>
   1c7ac:	mov    rax,QWORD PTR [rsp]
   1c7b0:	mov    rdi,QWORD PTR [rbx+0x30]
   1c7b4:	lea    rsi,[rsp+0x30]
   1c7b9:	mov    QWORD PTR [rsp+0x30],rbp
   1c7be:	mov    QWORD PTR [rsp+0x38],rax
   1c7c3:	call   12000 <wget_vector_find@plt>
   1c7c8:	cmp    eax,0xffffffff
   1c7cb:	jne    1cab8 <html_get_url+0x3d8>
   1c7d1:	nop    DWORD PTR [rax+0x0]
   1c7d8:	mov    rax,QWORD PTR [rsp]
   1c7dc:	movzx  r14d,BYTE PTR [rax]
   1c7e0:	mov    eax,r14d
   1c7e3:	or     eax,0x20
   1c7e6:	cmp    al,0x73
   1c7e8:	je     1ccb0 <html_get_url+0x5d0>
   1c7ee:	movzx  eax,BYTE PTR [rbp+0x0]
   1c7f2:	or     eax,0x20
   1c7f5:	mov    BYTE PTR [rsp+0x8],al
   1c7f9:	cmp    al,0x6c
   1c7fb:	je     1ccf0 <html_get_url+0x610>
   1c801:	cmp    BYTE PTR [rsp+0x8],0x61
   1c806:	je     1cf00 <html_get_url+0x820>
   1c80c:	or     r14d,0x20
   1c810:	lea    rax,[rip+0x2fa89]        # 4c2a0 <maybe>
   1c817:	movzx  r14d,r14b
   1c81b:	cmp    BYTE PTR [rax+r14*1],0x0
   1c820:	je     1c830 <html_get_url+0x150>
   1c822:	mov    rax,QWORD PTR [rsp]
   1c826:	cmp    BYTE PTR [rax+0x1],0x0
   1c82a:	jne    1ce39 <html_get_url+0x759>
   1c830:	mov    rdi,QWORD PTR [rbx+0x28]
   1c834:	test   rdi,rdi
   1c837:	je     1ca08 <html_get_url+0x328>
   1c83d:	lea    rsi,[rsp+0x20]
   1c842:	mov    QWORD PTR [rsp+0x20],rbp
   1c847:	mov    QWORD PTR [rsp+0x28],0x0
   1c850:	call   12000 <wget_vector_find@plt>
   1c855:	cmp    eax,0xffffffff
   1c858:	je     1d0b9 <html_get_url+0x9d9>
   1c85e:	movzx  eax,BYTE PTR [rbp+0x0]
   1c862:	or     eax,0x20
   1c865:	mov    BYTE PTR [rsp+0x8],al
   1c869:	test   r13,r13
   1c86c:	je     1c8a1 <html_get_url+0x1c1>
   1c86e:	movzx  eax,BYTE PTR [r15]
   1c872:	cmp    al,0xd
   1c874:	jg     1cbb0 <html_get_url+0x4d0>
   1c87a:	cmp    al,0x8
   1c87c:	jg     1cbb8 <html_get_url+0x4d8>
   1c882:	test   r13,r13
   1c885:	je     1c8a1 <html_get_url+0x1c1>
   1c887:	movzx  eax,BYTE PTR [r15+r13*1-0x1]
   1c88d:	lea    rdx,[r13-0x1]
   1c891:	cmp    al,0xd
   1c893:	jg     1cba0 <html_get_url+0x4c0>
   1c899:	cmp    al,0x8
   1c89b:	jg     1cba8 <html_get_url+0x4c8>
   1c8a1:	cmp    BYTE PTR [rsp+0x8],0x62
   1c8a6:	je     1ca93 <html_get_url+0x3b3>
   1c8ac:	cmp    QWORD PTR [rbx],0x0
   1c8b0:	je     1d098 <html_get_url+0x9b8>
   1c8b6:	mov    rdi,QWORD PTR [rsp]
   1c8ba:	lea    rsi,[rip+0x2f8c1]        # 4c182 <__func__.0+0xa2>
   1c8c1:	call   12590 <wget_strcasecmp_ascii@plt>
   1c8c6:	test   eax,eax
   1c8c8:	jne    1cfa9 <html_get_url+0x8c9>
   1c8ce:	test   r13,r13
   1c8d1:	je     1cb90 <html_get_url+0x4b0>
   1c8d7:	nop    WORD PTR [rax+rax*1+0x0]
   1c8e0:	movzx  eax,BYTE PTR [r15]
   1c8e4:	cmp    al,0xd
   1c8e6:	jg     1cb28 <html_get_url+0x448>
   1c8ec:	cmp    al,0x8
   1c8ee:	jg     1cb30 <html_get_url+0x450>
   1c8f4:	mov    r14,r15
   1c8f7:	cmp    al,0xd
   1c8f9:	jg     1c919 <html_get_url+0x239>
   1c8fb:	cmp    al,0x8
   1c8fd:	jg     1cb50 <html_get_url+0x470>
   1c903:	add    r14,0x1
   1c907:	sub    r13,0x1
   1c90b:	je     1d040 <html_get_url+0x960>
   1c911:	movzx  eax,BYTE PTR [r14]
   1c915:	cmp    al,0xd
   1c917:	jle    1c8fb <html_get_url+0x21b>
   1c919:	cmp    al,0x20
   1c91b:	je     1cb50 <html_get_url+0x470>
   1c921:	cmp    al,0x2c
   1c923:	jne    1c903 <html_get_url+0x223>
   1c925:	mov    r10,r14
   1c928:	mov    rdx,r13
   1c92b:	cmp    r14,r15
   1c92e:	je     1cb7f <html_get_url+0x49f>
   1c934:	mov    edx,0x5
   1c939:	lea    rsi,[rip+0x2f849]        # 4c189 <__func__.0+0xa9>
   1c940:	mov    rdi,r15
   1c943:	call   11c40 <wget_strncasecmp_ascii@plt>
   1c948:	test   eax,eax
   1c94a:	jne    1c970 <html_get_url+0x290>
   1c94c:	add    r14,0x1
   1c950:	sub    r13,0x1
   1c954:	je     1c970 <html_get_url+0x290>
   1c956:	movzx  eax,BYTE PTR [r14]
   1c95a:	cmp    al,0xd
   1c95c:	jg     1d025 <html_get_url+0x945>
   1c962:	cmp    al,0x8
   1c964:	jle    1c94c <html_get_url+0x26c>
   1c966:	cs nop WORD PTR [rax+rax*1+0x0]
   1c970:	cmp    BYTE PTR [rbx+0x5a],0x0
   1c974:	mov    rsi,QWORD PTR [rsp]
   1c978:	lea    r8,[rsp+0x40]
   1c97d:	lea    rdi,[rsp+0x60]
   1c982:	movzx  eax,BYTE PTR [rsp+0x80]
   1c98a:	setne  dl
   1c98d:	mov    QWORD PTR [rsp+0x8],r8
   1c992:	mov    QWORD PTR [rsp+0x50],0x0
   1c99b:	mov    QWORD PTR [rsp+0x58],0x0
   1c9a4:	and    eax,0xfffffffe
   1c9a7:	or     eax,edx
   1c9a9:	mov    edx,0x10
   1c9ae:	mov    BYTE PTR [rsp+0x80],al
   1c9b5:	call   11860 <wget_strscpy@plt>
   1c9ba:	lea    rdi,[rsp+0x70]
   1c9bf:	mov    edx,0x10
   1c9c4:	mov    rsi,rbp
   1c9c7:	call   11860 <wget_strscpy@plt>
   1c9cc:	mov    rax,r14
   1c9cf:	mov    rsi,QWORD PTR [rsp+0x8]
   1c9d4:	mov    rdi,QWORD PTR [rbx]
   1c9d7:	sub    rax,r15
   1c9da:	mov    edx,0x48
   1c9df:	mov    QWORD PTR [rsp+0x40],r15
   1c9e4:	mov    QWORD PTR [rsp+0x48],rax
   1c9e9:	call   11a20 <wget_vector_add_memdup@plt>
   1c9ee:	test   r13,r13
   1c9f1:	jne    1cb69 <html_get_url+0x489>
   1c9f7:	nop    WORD PTR [rax+rax*1+0x0]
   1ca00:	mov    r15,r14
   1ca03:	nop    DWORD PTR [rax+rax*1+0x0]
   1ca08:	and    r12d,0x10
   1ca0c:	je     1cab8 <html_get_url+0x3d8>
   1ca12:	test   r15,r15
   1ca15:	je     1cab8 <html_get_url+0x3d8>
   1ca1b:	test   r13,r13
   1ca1e:	je     1cab8 <html_get_url+0x3d8>
   1ca24:	lea    r12,[rip+0x312ee]        # 4dd19 <powers.0+0x59>
   1ca2b:	mov    rdi,rbp
   1ca2e:	mov    rsi,r12
   1ca31:	call   12590 <wget_strcasecmp_ascii@plt>
   1ca36:	test   eax,eax
   1ca38:	jne    1cab8 <html_get_url+0x3d8>
   1ca3a:	lea    rax,[rip+0x2fe29]        # 4c86a <maybe+0x5ca>
   1ca41:	mov    QWORD PTR [rbx+0x70],r12
   1ca45:	mov    QWORD PTR [rbx+0x68],rax
   1ca49:	mov    rax,r15
   1ca4c:	sub    rax,QWORD PTR [rbx+0x60]
   1ca50:	mov    QWORD PTR [rbx+0x50],rax
   1ca54:	mov    rax,QWORD PTR [rsp+0x198]
   1ca5c:	sub    rax,QWORD PTR fs:0x28
   1ca65:	jne    1d278 <html_get_url+0xb98>
   1ca6b:	add    rsp,0x1a8
   1ca72:	mov    r8,rbx
   1ca75:	mov    rsi,r13
   1ca78:	mov    rdi,r15
   1ca7b:	pop    rbx
   1ca7c:	xor    ecx,ecx
   1ca7e:	lea    rdx,[rip+0x7fb]        # 1d280 <css_parse_uri>
   1ca85:	pop    rbp
   1ca86:	pop    r12
   1ca88:	pop    r13
   1ca8a:	pop    r14
   1ca8c:	pop    r15
   1ca8e:	jmp    112e0 <wget_css_parse_buffer@plt>
   1ca93:	lea    rsi,[rip+0x2f6e3]        # 4c17d <__func__.0+0x9d>
   1ca9a:	mov    rdi,rbp
   1ca9d:	call   12590 <wget_strcasecmp_ascii@plt>
   1caa2:	test   eax,eax
   1caa4:	jne    1c8ac <html_get_url+0x1cc>
   1caaa:	mov    QWORD PTR [rbx+0x10],r15
   1caae:	mov    QWORD PTR [rbx+0x18],r13
   1cab2:	nop    WORD PTR [rax+rax*1+0x0]
   1cab8:	mov    rax,QWORD PTR [rsp+0x198]
   1cac0:	sub    rax,QWORD PTR fs:0x28
   1cac9:	jne    1d278 <html_get_url+0xb98>
   1cacf:	add    rsp,0x1a8
   1cad6:	pop    rbx
   1cad7:	pop    rbp
   1cad8:	pop    r12
   1cada:	pop    r13
   1cadc:	pop    r14
   1cade:	pop    r15
   1cae0:	ret    
   1cae1:	nop    DWORD PTR [rax+0x0]
   1cae8:	cmp    BYTE PTR [rdx+0x1],0x0
   1caec:	je     1cb05 <html_get_url+0x425>
   1caee:	lea    rsi,[rip+0x2f605]        # 4c0fa <__func__.0+0x1a>
   1caf5:	mov    rdi,rdx
   1caf8:	call   12590 <wget_strcasecmp_ascii@plt>
   1cafd:	test   eax,eax
   1caff:	jne    1c760 <html_get_url+0x80>
   1cb05:	mov    DWORD PTR [rbx+0x48],0xffffffff
   1cb0c:	mov    QWORD PTR [rbx+0x38],0x0
   1cb14:	mov    QWORD PTR [rbx+0x40],0x0
   1cb1c:	jmp    1c760 <html_get_url+0x80>
   1cb21:	nop    DWORD PTR [rax+0x0]
   1cb28:	cmp    al,0x20
   1cb2a:	jne    1c8f4 <html_get_url+0x214>
   1cb30:	add    r15,0x1
   1cb34:	sub    r13,0x1
   1cb38:	jne    1c8e0 <html_get_url+0x200>
   1cb3e:	mov    r14,r15
   1cb41:	xor    r13d,r13d
   1cb44:	jmp    1ca00 <html_get_url+0x320>
   1cb49:	nop    DWORD PTR [rax+0x0]
   1cb50:	cmp    r14,r15
   1cb53:	je     1cb69 <html_get_url+0x489>
   1cb55:	jmp    1c970 <html_get_url+0x290>
   1cb5a:	nop    WORD PTR [rax+rax*1+0x0]
   1cb60:	test   r13,r13
   1cb63:	je     1ca00 <html_get_url+0x320>
   1cb69:	movzx  eax,BYTE PTR [r14]
   1cb6d:	mov    r10,r14
   1cb70:	mov    rdx,r13
   1cb73:	add    r14,0x1
   1cb77:	sub    r13,0x1
   1cb7b:	cmp    al,0x2c
   1cb7d:	jne    1cb60 <html_get_url+0x480>
   1cb7f:	sub    rdx,0x1
   1cb83:	lea    r15,[r10+0x1]
   1cb87:	mov    r13,rdx
   1cb8a:	jne    1c8e0 <html_get_url+0x200>
   1cb90:	mov    r14,r15
   1cb93:	jmp    1ca00 <html_get_url+0x320>
   1cb98:	nop    DWORD PTR [rax+rax*1+0x0]
   1cba0:	cmp    al,0x20
   1cba2:	jne    1c8a1 <html_get_url+0x1c1>
   1cba8:	mov    r13,rdx
   1cbab:	jmp    1c882 <html_get_url+0x1a2>
   1cbb0:	cmp    al,0x20
   1cbb2:	jne    1c882 <html_get_url+0x1a2>
   1cbb8:	add    r15,0x1
   1cbbc:	sub    r13,0x1
   1cbc0:	jne    1c86e <html_get_url+0x18e>
   1cbc6:	jmp    1c8a1 <html_get_url+0x1c1>
   1cbcb:	nop    DWORD PTR [rax+rax*1+0x0]
   1cbd0:	lea    rsi,[rip+0x2f528]        # 4c0ff <__func__.0+0x1f>
   1cbd7:	mov    rdi,rdx
   1cbda:	call   12590 <wget_strcasecmp_ascii@plt>
   1cbdf:	test   eax,eax
   1cbe1:	jne    1c760 <html_get_url+0x80>
   1cbe7:	xor    eax,eax
   1cbe9:	mov    WORD PTR [rbx+0x58],ax
   1cbed:	jmp    1c760 <html_get_url+0x80>
   1cbf2:	nop    WORD PTR [rax+rax*1+0x0]
   1cbf8:	lea    rsi,[rip+0x2f500]        # 4c0ff <__func__.0+0x1f>
   1cbff:	mov    rdi,rbp
   1cc02:	call   12590 <wget_strcasecmp_ascii@plt>
   1cc07:	test   eax,eax
   1cc09:	jne    1c782 <html_get_url+0xa2>
   1cc0f:	cmp    BYTE PTR [rbx+0x58],0x0
   1cc13:	je     1ceaa <html_get_url+0x7ca>
   1cc19:	mov    rdi,QWORD PTR [rsp]
   1cc1d:	lea    rsi,[rip+0x2f4ec]        # 4c110 <__func__.0+0x30>
   1cc24:	call   12590 <wget_strcasecmp_ascii@plt>
   1cc29:	test   eax,eax
   1cc2b:	je     1d0e3 <html_get_url+0xa03>
   1cc31:	cmp    BYTE PTR [rbx+0x59],0x0
   1cc35:	mov    rax,QWORD PTR [rbx+0x8]
   1cc39:	je     1d050 <html_get_url+0x970>
   1cc3f:	test   rax,rax
   1cc42:	jne    1cab8 <html_get_url+0x3d8>
   1cc48:	mov    rdi,QWORD PTR [rsp]
   1cc4c:	lea    rsi,[rip+0x2f4bd]        # 4c110 <__func__.0+0x30>
   1cc53:	call   12590 <wget_strcasecmp_ascii@plt>
   1cc58:	test   eax,eax
   1cc5a:	jne    1cab8 <html_get_url+0x3d8>
   1cc60:	lea    r12,[rsp+0x90]
   1cc68:	mov    rcx,r13
   1cc6b:	mov    rdx,r15
   1cc6e:	mov    esi,0x100
   1cc73:	mov    rdi,r12
   1cc76:	call   12080 <wget_strmemcpy_a@plt>
   1cc7b:	mov    rbp,rax
   1cc7e:	test   rax,rax
   1cc81:	je     1cab8 <html_get_url+0x3d8>
   1cc87:	xor    esi,esi
   1cc89:	lea    rdx,[rbx+0x8]
   1cc8d:	mov    rdi,rax
   1cc90:	call   10fa0 <wget_http_parse_content_type@plt>
   1cc95:	cmp    rbp,r12
   1cc98:	je     1cab8 <html_get_url+0x3d8>
   1cc9e:	mov    rax,QWORD PTR [rip+0x59343]        # 75fe8 <wget_free@@Base-0x1328>
   1cca5:	mov    rdi,rbp
   1cca8:	call   QWORD PTR [rax]
   1ccaa:	jmp    1cab8 <html_get_url+0x3d8>
   1ccaf:	nop
   1ccb0:	lea    rdx,[rip+0x31062]        # 4dd19 <powers.0+0x59>
   1ccb7:	mov    rdi,QWORD PTR [rsp]
   1ccbb:	mov    rsi,rdx
   1ccbe:	call   12590 <wget_strcasecmp_ascii@plt>
   1ccc3:	test   r13,r13
   1ccc6:	je     1c7ee <html_get_url+0x10e>
   1cccc:	test   eax,eax
   1ccce:	lea    rdx,[rip+0x31044]        # 4dd19 <powers.0+0x59>
   1ccd5:	jne    1c7ee <html_get_url+0x10e>
   1ccdb:	mov    QWORD PTR [rbx+0x70],rbp
   1ccdf:	mov    QWORD PTR [rbx+0x68],rdx
   1cce3:	jmp    1ca49 <html_get_url+0x369>
   1cce8:	nop    DWORD PTR [rax+rax*1+0x0]
   1ccf0:	lea    rsi,[rip+0x2f40d]        # 4c104 <__func__.0+0x24>
   1ccf7:	mov    rdi,rbp
   1ccfa:	call   12590 <wget_strcasecmp_ascii@plt>
   1ccff:	test   eax,eax
   1cd01:	jne    1c80c <html_get_url+0x12c>
   1cd07:	mov    rdi,QWORD PTR [rsp]
   1cd0b:	lea    rsi,[rip+0x2f433]        # 4c145 <__func__.0+0x65>
   1cd12:	call   12590 <wget_strcasecmp_ascii@plt>
   1cd17:	test   eax,eax
   1cd19:	jne    1c80c <html_get_url+0x12c>
   1cd1f:	mov    BYTE PTR [rbx+0x5a],0x0
   1cd23:	test   r13,r13
   1cd26:	je     1ce0b <html_get_url+0x72b>
   1cd2c:	lea    r14,[rip+0x2e2ee]        # 4b021 <_fini+0x62d>
   1cd33:	nop    DWORD PTR [rax+rax*1+0x0]
   1cd38:	mov    rbp,r15
   1cd3b:	movzx  eax,BYTE PTR [rbp+0x0]
   1cd3f:	cmp    al,0xd
   1cd41:	jg     1cee8 <html_get_url+0x808>
   1cd47:	cmp    al,0x8
   1cd49:	jg     1cd58 <html_get_url+0x678>
   1cd4b:	add    rbp,0x1
   1cd4f:	sub    r13,0x1
   1cd53:	jne    1cd3b <html_get_url+0x65b>
   1cd55:	nop    DWORD PTR [rax]
   1cd58:	cmp    r15,rbp
   1cd5b:	je     1d0ac <html_get_url+0x9cc>
   1cd61:	mov    r12,rbp
   1cd64:	mov    rsi,r14
   1cd67:	mov    rdi,r15
   1cd6a:	sub    r12,r15
   1cd6d:	mov    rdx,r12
   1cd70:	call   11c40 <wget_strncasecmp_ascii@plt>
   1cd75:	test   eax,eax
   1cd77:	je     1d243 <html_get_url+0xb63>
   1cd7d:	mov    rdx,r12
   1cd80:	lea    rsi,[rip+0x2f3c2]        # 4c149 <__func__.0+0x69>
   1cd87:	mov    rdi,r15
   1cd8a:	call   11c40 <wget_strncasecmp_ascii@plt>
   1cd8f:	test   eax,eax
   1cd91:	je     1d243 <html_get_url+0xb63>
   1cd97:	mov    rdx,r12
   1cd9a:	lea    rsi,[rip+0x2f3b1]        # 4c152 <__func__.0+0x72>
   1cda1:	mov    rdi,r15
   1cda4:	call   11c40 <wget_strncasecmp_ascii@plt>
   1cda9:	test   eax,eax
   1cdab:	je     1d243 <html_get_url+0xb63>
   1cdb1:	mov    rdx,r12
   1cdb4:	lea    rsi,[rip+0x2f3a5]        # 4c160 <__func__.0+0x80>
   1cdbb:	mov    rdi,r15
   1cdbe:	call   11c40 <wget_strncasecmp_ascii@plt>
   1cdc3:	test   eax,eax
   1cdc5:	je     1d243 <html_get_url+0xb63>
   1cdcb:	mov    rdx,r12
   1cdce:	lea    rsi,[rip+0x2f396]        # 4c16b <__func__.0+0x8b>
   1cdd5:	mov    rdi,r15
   1cdd8:	call   11c40 <wget_strncasecmp_ascii@plt>
   1cddd:	test   eax,eax
   1cddf:	je     1d243 <html_get_url+0xb63>
   1cde5:	mov    rdx,r12
   1cde8:	lea    rsi,[rip+0x2f369]        # 4c158 <__func__.0+0x78>
   1cdef:	mov    rdi,r15
   1cdf2:	call   11c40 <wget_strncasecmp_ascii@plt>
   1cdf7:	test   eax,eax
   1cdf9:	je     1d243 <html_get_url+0xb63>
   1cdff:	mov    r15,rbp
   1ce02:	test   r13,r13
   1ce05:	jne    1cd38 <html_get_url+0x658>
   1ce0b:	mov    esi,DWORD PTR [rbx+0x48]
   1ce0e:	test   esi,esi
   1ce10:	js     1cab8 <html_get_url+0x3d8>
   1ce16:	mov    rdi,QWORD PTR [rbx]
   1ce19:	call   10c00 <wget_vector_get@plt>
   1ce1e:	cmp    BYTE PTR [rbx+0x5a],0x0
   1ce22:	mov    rdx,rax
   1ce25:	movzx  eax,BYTE PTR [rax+0x40]
   1ce29:	setne  cl
   1ce2c:	and    eax,0xfffffffe
   1ce2f:	or     eax,ecx
   1ce31:	mov    BYTE PTR [rdx+0x40],al
   1ce34:	jmp    1cab8 <html_get_url+0x3d8>
   1ce39:	cmp    BYTE PTR [rax+0x2],0x0
   1ce3d:	je     1c830 <html_get_url+0x150>
   1ce43:	mov    r8d,0x13
   1ce49:	xor    r14d,r14d
   1ce4c:	nop    DWORD PTR [rax+0x0]
   1ce50:	cmp    r8,r14
   1ce53:	jbe    1c830 <html_get_url+0x150>
   1ce59:	lea    rax,[r8+r14*1]
   1ce5d:	lea    rcx,[rip+0x2f33c]        # 4c1a0 <attrs>
   1ce64:	mov    rdi,QWORD PTR [rsp]
   1ce68:	mov    QWORD PTR [rsp+0x18],r8
   1ce6d:	mov    rdx,rax
   1ce70:	and    rax,0xfffffffffffffffe
   1ce74:	shr    rdx,1
   1ce77:	add    rax,rdx
   1ce7a:	mov    QWORD PTR [rsp+0x10],rdx
   1ce7f:	lea    rsi,[rcx+rax*4]
   1ce83:	call   12590 <wget_strcasecmp_ascii@plt>
   1ce88:	mov    rdx,QWORD PTR [rsp+0x10]
   1ce8d:	test   eax,eax
   1ce8f:	js     1cef8 <html_get_url+0x818>
   1ce91:	je     1c869 <html_get_url+0x189>
   1ce97:	mov    r8,QWORD PTR [rsp+0x18]
   1ce9c:	lea    r14,[rdx+0x1]
   1cea0:	cmp    r8,r14
   1cea3:	ja     1ce59 <html_get_url+0x779>
   1cea5:	jmp    1c830 <html_get_url+0x150>
   1ceaa:	mov    rdi,QWORD PTR [rsp]
   1ceae:	lea    rsi,[rip+0x2fb3c]        # 4c9f1 <__func__.5+0x41>
   1ceb5:	call   12590 <wget_strcasecmp_ascii@plt>
   1ceba:	test   eax,eax
   1cebc:	jne    1cc31 <html_get_url+0x551>
   1cec2:	mov    rdx,r13
   1cec5:	lea    rsi,[rip+0x2f23d]        # 4c109 <__func__.0+0x29>
   1cecc:	mov    rdi,r15
   1cecf:	call   11c40 <wget_strncasecmp_ascii@plt>
   1ced4:	test   eax,eax
   1ced6:	jne    1cc31 <html_get_url+0x551>
   1cedc:	mov    BYTE PTR [rbx+0x58],0x1
   1cee0:	jmp    1cab8 <html_get_url+0x3d8>
   1cee5:	nop    DWORD PTR [rax]
   1cee8:	cmp    al,0x20
   1ceea:	je     1cd58 <html_get_url+0x678>
   1cef0:	jmp    1cd4b <html_get_url+0x66b>
   1cef5:	nop    DWORD PTR [rax]
   1cef8:	mov    r8,rdx
   1cefb:	jmp    1ce50 <html_get_url+0x770>
   1cf00:	cmp    BYTE PTR [rbp+0x1],0x0
   1cf04:	je     1cf1d <html_get_url+0x83d>
   1cf06:	lea    rsi,[rip+0x2f1ed]        # 4c0fa <__func__.0+0x1a>
   1cf0d:	mov    rdi,rbp
   1cf10:	call   12590 <wget_strcasecmp_ascii@plt>
   1cf15:	test   eax,eax
   1cf17:	jne    1c80c <html_get_url+0x12c>
   1cf1d:	mov    rdi,QWORD PTR [rsp]
   1cf21:	lea    rsi,[rip+0x2f24c]        # 4c174 <__func__.0+0x94>
   1cf28:	call   12590 <wget_strcasecmp_ascii@plt>
   1cf2d:	test   eax,eax
   1cf2f:	jne    1c80c <html_get_url+0x12c>
   1cf35:	test   r13,r13
   1cf38:	je     1cab8 <html_get_url+0x3d8>
   1cf3e:	movzx  eax,BYTE PTR [r15]
   1cf42:	cmp    al,0xd
   1cf44:	jg     1cf8d <html_get_url+0x8ad>
   1cf46:	cmp    al,0x8
   1cf48:	jg     1cf91 <html_get_url+0x8b1>
   1cf4a:	test   r13,r13
   1cf4d:	je     1cab8 <html_get_url+0x3d8>
   1cf53:	movzx  eax,BYTE PTR [r15+r13*1-0x1]
   1cf59:	lea    rdx,[r13-0x1]
   1cf5d:	cmp    al,0xd
   1cf5f:	jg     1cfa0 <html_get_url+0x8c0>
   1cf61:	cmp    al,0x8
   1cf63:	jg     1cfa4 <html_get_url+0x8c4>
   1cf65:	mov    esi,DWORD PTR [rbx+0x48]
   1cf68:	mov    QWORD PTR [rbx+0x38],r15
   1cf6c:	mov    QWORD PTR [rbx+0x40],r13
   1cf70:	test   esi,esi
   1cf72:	js     1cab8 <html_get_url+0x3d8>
   1cf78:	mov    rdi,QWORD PTR [rbx]
   1cf7b:	call   10c00 <wget_vector_get@plt>
   1cf80:	mov    QWORD PTR [rax+0x10],r15
   1cf84:	mov    QWORD PTR [rax+0x18],r13
   1cf88:	jmp    1cab8 <html_get_url+0x3d8>
   1cf8d:	cmp    al,0x20
   1cf8f:	jne    1cf4a <html_get_url+0x86a>
   1cf91:	add    r15,0x1
   1cf95:	sub    r13,0x1
   1cf99:	jne    1cf3e <html_get_url+0x85e>
   1cf9b:	jmp    1cab8 <html_get_url+0x3d8>
   1cfa0:	cmp    al,0x20
   1cfa2:	jne    1cf65 <html_get_url+0x885>
   1cfa4:	mov    r13,rdx
   1cfa7:	jmp    1cf4a <html_get_url+0x86a>
   1cfa9:	mov    rax,QWORD PTR [rbx+0x38]
   1cfad:	cmp    BYTE PTR [rbx+0x5a],0x0
   1cfb1:	lea    rdi,[rsp+0x60]
   1cfb6:	lea    r14,[rsp+0x40]
   1cfbb:	setne  dl
   1cfbe:	mov    rsi,QWORD PTR [rsp]
   1cfc2:	mov    QWORD PTR [rsp+0x50],rax
   1cfc7:	mov    rax,QWORD PTR [rbx+0x40]
   1cfcb:	mov    QWORD PTR [rsp+0x58],rax
   1cfd0:	movzx  eax,BYTE PTR [rsp+0x80]
   1cfd8:	and    eax,0xfffffffe
   1cfdb:	or     eax,edx
   1cfdd:	mov    edx,0x10
   1cfe2:	mov    BYTE PTR [rsp+0x80],al
   1cfe9:	call   11860 <wget_strscpy@plt>
   1cfee:	lea    rdi,[rsp+0x70]
   1cff3:	mov    edx,0x10
   1cff8:	mov    rsi,rbp
   1cffb:	call   11860 <wget_strscpy@plt>
   1d000:	mov    rdi,QWORD PTR [rbx]
   1d003:	mov    rsi,r14
   1d006:	mov    edx,0x48
   1d00b:	mov    QWORD PTR [rsp+0x40],r15
   1d010:	mov    r14,r15
   1d013:	mov    QWORD PTR [rsp+0x48],r13
   1d018:	call   11a20 <wget_vector_add_memdup@plt>
   1d01d:	mov    DWORD PTR [rbx+0x48],eax
   1d020:	jmp    1ca00 <html_get_url+0x320>
   1d025:	cmp    al,0x20
   1d027:	je     1c970 <html_get_url+0x290>
   1d02d:	cmp    al,0x2c
   1d02f:	je     1c970 <html_get_url+0x290>
   1d035:	jmp    1c94c <html_get_url+0x26c>
   1d03a:	nop    WORD PTR [rax+rax*1+0x0]
   1d040:	cmp    r14,r15
   1d043:	jne    1c970 <html_get_url+0x290>
   1d049:	jmp    1cb3e <html_get_url+0x45e>
   1d04e:	xchg   ax,ax
   1d050:	test   rax,rax
   1d053:	jne    1cab8 <html_get_url+0x3d8>
   1d059:	mov    rdi,QWORD PTR [rsp]
   1d05d:	lea    rsi,[rip+0x2f0c1]        # 4c125 <__func__.0+0x45>
   1d064:	call   12590 <wget_strcasecmp_ascii@plt>
   1d069:	test   eax,eax
   1d06b:	jne    1d24c <html_get_url+0xb6c>
   1d071:	mov    rdx,r13
   1d074:	lea    rsi,[rip+0x2f0b5]        # 4c130 <__func__.0+0x50>
   1d07b:	mov    rdi,r15
   1d07e:	call   11c40 <wget_strncasecmp_ascii@plt>
   1d083:	test   eax,eax
   1d085:	jne    1d24c <html_get_url+0xb6c>
   1d08b:	mov    BYTE PTR [rbx+0x59],0x1
   1d08f:	jmp    1cab8 <html_get_url+0x3d8>
   1d094:	nop    DWORD PTR [rax+0x0]
   1d098:	xor    esi,esi
   1d09a:	mov    edi,0x20
   1d09f:	call   11f00 <wget_vector_create@plt>
   1d0a4:	mov    QWORD PTR [rbx],rax
   1d0a7:	jmp    1c8b6 <html_get_url+0x1d6>
   1d0ac:	add    r15,0x1
   1d0b0:	sub    r13,0x1
   1d0b4:	jmp    1ce02 <html_get_url+0x722>
   1d0b9:	mov    rax,QWORD PTR [rsp]
   1d0bd:	mov    rdi,QWORD PTR [rbx+0x28]
   1d0c1:	lea    rsi,[rsp+0x30]
   1d0c6:	mov    QWORD PTR [rsp+0x30],rbp
   1d0cb:	mov    QWORD PTR [rsp+0x38],rax
   1d0d0:	call   12000 <wget_vector_find@plt>
   1d0d5:	cmp    eax,0xffffffff
   1d0d8:	jne    1c85e <html_get_url+0x17e>
   1d0de:	jmp    1ca08 <html_get_url+0x328>
   1d0e3:	lea    rax,[rsp+0x90]
   1d0eb:	mov    rcx,r13
   1d0ee:	mov    rdx,r15
   1d0f1:	mov    esi,0x100
   1d0f6:	mov    rdi,rax
   1d0f9:	mov    QWORD PTR [rsp],rax
   1d0fd:	call   12080 <wget_strmemcpy_a@plt>
   1d102:	mov    rbp,rax
   1d105:	test   rax,rax
   1d108:	je     1cab8 <html_get_url+0x3d8>
   1d10e:	movzx  eax,BYTE PTR [rax]
   1d111:	mov    r15,rbp
   1d114:	lea    r12,[rip+0x2effd]        # 4c118 <__func__.0+0x38>
   1d11b:	test   al,al
   1d11d:	je     1d1e7 <html_get_url+0xb07>
   1d123:	nop    DWORD PTR [rax+rax*1+0x0]
   1d128:	cmp    al,0xd
   1d12a:	jg     1d200 <html_get_url+0xb20>
   1d130:	cmp    al,0x8
   1d132:	jg     1d230 <html_get_url+0xb50>
   1d138:	test   al,al
   1d13a:	je     1d1e7 <html_get_url+0xb07>
   1d140:	mov    r13,r15
   1d143:	cmp    al,0xd
   1d145:	jg     1d212 <html_get_url+0xb32>
   1d14b:	cmp    al,0x8
   1d14d:	jg     1d160 <html_get_url+0xa80>
   1d14f:	movzx  eax,BYTE PTR [r13+0x1]
   1d154:	add    r13,0x1
   1d158:	test   al,al
   1d15a:	jne    1d143 <html_get_url+0xa63>
   1d15c:	nop    DWORD PTR [rax+0x0]
   1d160:	cmp    r15,r13
   1d163:	je     1d1e7 <html_get_url+0xb07>
   1d169:	mov    r14,r13
   1d16c:	mov    rsi,r12
   1d16f:	mov    rdi,r15
   1d172:	sub    r14,r15
   1d175:	mov    rdx,r14
   1d178:	call   11c40 <wget_strncasecmp_ascii@plt>
   1d17d:	test   eax,eax
   1d17f:	je     1d23d <html_get_url+0xb5d>
   1d185:	mov    rdx,r14
   1d188:	lea    rsi,[rip+0x2ef8f]        # 4c11e <__func__.0+0x3e>
   1d18f:	mov    rdi,r15
   1d192:	call   11c40 <wget_strncasecmp_ascii@plt>
   1d197:	test   eax,eax
   1d199:	je     1d23d <html_get_url+0xb5d>
   1d19f:	mov    rdx,r14
   1d1a2:	lea    rsi,[rip+0x2ef73]        # 4c11c <__func__.0+0x3c>
   1d1a9:	mov    rdi,r15
   1d1ac:	call   11c40 <wget_strncasecmp_ascii@plt>
   1d1b1:	test   eax,eax
   1d1b3:	je     1d1cb <html_get_url+0xaeb>
   1d1b5:	mov    rdx,r14
   1d1b8:	lea    rsi,[rip+0x2e66e]        # 4b82d <base64_2_bin+0x62d>
   1d1bf:	mov    rdi,r15
   1d1c2:	call   11c40 <wget_strncasecmp_ascii@plt>
   1d1c7:	test   eax,eax
   1d1c9:	jne    1d1d0 <html_get_url+0xaf0>
   1d1cb:	and    BYTE PTR [rbx+0x20],0xfe
   1d1cf:	nop
   1d1d0:	cmp    BYTE PTR [r13+0x0],0x0
   1d1d5:	je     1d1e7 <html_get_url+0xb07>
   1d1d7:	lea    r15,[r13+0x1]
   1d1db:	movzx  eax,BYTE PTR [r15]
   1d1df:	test   al,al
   1d1e1:	jne    1d128 <html_get_url+0xa48>
   1d1e7:	cmp    rbp,QWORD PTR [rsp]
   1d1eb:	jne    1cc9e <html_get_url+0x5be>
   1d1f1:	jmp    1cab8 <html_get_url+0x3d8>
   1d1f6:	cs nop WORD PTR [rax+rax*1+0x0]
   1d200:	cmp    al,0x20
   1d202:	je     1d230 <html_get_url+0xb50>
   1d204:	cmp    al,0x2c
   1d206:	jne    1d140 <html_get_url+0xa60>
   1d20c:	add    r15,0x1
   1d210:	jmp    1d1db <html_get_url+0xafb>
   1d212:	cmp    al,0x20
   1d214:	je     1d160 <html_get_url+0xa80>
   1d21a:	cmp    al,0x2c
   1d21c:	je     1d160 <html_get_url+0xa80>
   1d222:	jmp    1d14f <html_get_url+0xa6f>
   1d227:	nop    WORD PTR [rax+rax*1+0x0]
   1d230:	add    r15,0x1
   1d234:	movzx  eax,BYTE PTR [r15]
   1d238:	jmp    1d128 <html_get_url+0xa48>
   1d23d:	or     BYTE PTR [rbx+0x20],0x1
   1d241:	jmp    1d1d0 <html_get_url+0xaf0>
   1d243:	mov    BYTE PTR [rbx+0x5a],0x1
   1d247:	jmp    1ce0b <html_get_url+0x72b>
   1d24c:	mov    rdi,QWORD PTR [rsp]
   1d250:	lea    rsi,[rip+0x2eee6]        # 4c13d <__func__.0+0x5d>
   1d257:	call   12590 <wget_strcasecmp_ascii@plt>
   1d25c:	test   eax,eax
   1d25e:	jne    1cab8 <html_get_url+0x3d8>
   1d264:	mov    rsi,r13
   1d267:	mov    rdi,r15
   1d26a:	call   126b0 <wget_strmemdup@plt>
   1d26f:	mov    QWORD PTR [rbx+0x8],rax
   1d273:	jmp    1cab8 <html_get_url+0x3d8>
   1d278:	call   11760 <__stack_chk_fail@plt>
   1d27d:	nop    DWORD PTR [rax]

000000000001d280 <css_parse_uri>:
   1d280:	endbr64 
   1d284:	push   r13
   1d286:	mov    r13,rcx
   1d289:	push   r12
   1d28b:	mov    r12,rdx
   1d28e:	push   rbp
   1d28f:	push   rbx
   1d290:	mov    rbx,rdi
   1d293:	mov    edi,0x48
   1d298:	sub    rsp,0x8
   1d29c:	mov    rdx,QWORD PTR [rip+0x58d2d]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   1d2a3:	call   QWORD PTR [rdx]
   1d2a5:	test   rax,rax
   1d2a8:	je     1d318 <css_parse_uri+0x98>
   1d2aa:	or     BYTE PTR [rax+0x40],0x1
   1d2ae:	mov    rsi,QWORD PTR [rbx+0x68]
   1d2b2:	lea    rdi,[rax+0x20]
   1d2b6:	mov    rbp,rax
   1d2b9:	mov    edx,0x10
   1d2be:	call   11860 <wget_strscpy@plt>
   1d2c3:	mov    rsi,QWORD PTR [rbx+0x70]
   1d2c7:	lea    rdi,[rbp+0x30]
   1d2cb:	mov    edx,0x10
   1d2d0:	call   11860 <wget_strscpy@plt>
   1d2d5:	mov    rax,QWORD PTR [rbx+0x50]
   1d2d9:	mov    rdi,QWORD PTR [rbx]
   1d2dc:	add    rax,r13
   1d2df:	add    rax,QWORD PTR [rbx+0x60]
   1d2e3:	mov    QWORD PTR [rbp+0x8],r12
   1d2e7:	mov    QWORD PTR [rbp+0x0],rax
   1d2eb:	mov    QWORD PTR [rbp+0x10],0x0
   1d2f3:	mov    QWORD PTR [rbp+0x18],0x0
   1d2fb:	test   rdi,rdi
   1d2fe:	je     1d328 <css_parse_uri+0xa8>
   1d300:	add    rsp,0x8
   1d304:	mov    rsi,rbp
   1d307:	pop    rbx
   1d308:	pop    rbp
   1d309:	pop    r12
   1d30b:	pop    r13
   1d30d:	jmp    11290 <wget_vector_add@plt>
   1d312:	nop    WORD PTR [rax+rax*1+0x0]
   1d318:	add    rsp,0x8
   1d31c:	pop    rbx
   1d31d:	pop    rbp
   1d31e:	pop    r12
   1d320:	pop    r13
   1d322:	ret    
   1d323:	nop    DWORD PTR [rax+rax*1+0x0]
   1d328:	mov    edi,0x20
   1d32d:	xor    esi,esi
   1d32f:	call   11f00 <wget_vector_create@plt>
   1d334:	mov    QWORD PTR [rbx],rax
   1d337:	mov    rdi,rax
   1d33a:	jmp    1d300 <css_parse_uri+0x80>
   1d33c:	nop    DWORD PTR [rax+0x0]

000000000001d340 <wget_html_free_urls_inline>:
   1d340:	endbr64 
   1d344:	test   rdi,rdi
   1d347:	je     1d398 <wget_html_free_urls_inline+0x58>
   1d349:	push   rbx
   1d34a:	mov    rbx,rdi
   1d34d:	mov    rdi,QWORD PTR [rdi]
   1d350:	test   rdi,rdi
   1d353:	je     1d392 <wget_html_free_urls_inline+0x52>
   1d355:	mov    r8,QWORD PTR [rdi+0x8]
   1d359:	test   r8,r8
   1d35c:	je     1d375 <wget_html_free_urls_inline+0x35>
   1d35e:	mov    rax,QWORD PTR [rip+0x58c83]        # 75fe8 <wget_free@@Base-0x1328>
   1d365:	mov    rdi,r8
   1d368:	call   QWORD PTR [rax]
   1d36a:	mov    rdi,QWORD PTR [rbx]
   1d36d:	mov    QWORD PTR [rdi+0x8],0x0
   1d375:	call   125e0 <wget_vector_free@plt>
   1d37a:	mov    rdi,QWORD PTR [rbx]
   1d37d:	test   rdi,rdi
   1d380:	je     1d392 <wget_html_free_urls_inline+0x52>
   1d382:	mov    rax,QWORD PTR [rip+0x58c5f]        # 75fe8 <wget_free@@Base-0x1328>
   1d389:	call   QWORD PTR [rax]
   1d38b:	mov    QWORD PTR [rbx],0x0
   1d392:	pop    rbx
   1d393:	ret    
   1d394:	nop    DWORD PTR [rax+0x0]
   1d398:	ret    
   1d399:	nop    DWORD PTR [rax+0x0]

000000000001d3a0 <wget_html_get_urls_inline>:
   1d3a0:	endbr64 
   1d3a4:	push   rbp
   1d3a5:	mov    r8,rdi
   1d3a8:	mov    ecx,0xf
   1d3ad:	add    rsp,0xffffffffffffff80
   1d3b1:	mov    rax,QWORD PTR fs:0x28
   1d3ba:	mov    QWORD PTR [rsp+0x78],rax
   1d3bf:	xor    eax,eax
   1d3c1:	mov    rbp,rsp
   1d3c4:	mov    rdi,rsp
   1d3c7:	rep stos QWORD PTR es:[rdi],rax
   1d3ca:	mov    QWORD PTR [rsp+0x28],rsi
   1d3cf:	mov    rdi,r8
   1d3d2:	mov    ecx,0x1
   1d3d7:	mov    QWORD PTR [rsp+0x30],rdx
   1d3dc:	lea    rsi,[rip+0xfffffffffffff2fd]        # 1c6e0 <html_get_url>
   1d3e3:	mov    rdx,rbp
   1d3e6:	mov    BYTE PTR [rsp+0x20],0x1
   1d3eb:	mov    QWORD PTR [rsp+0x60],r8
   1d3f0:	call   117b0 <wget_html_parse_buffer@plt>
   1d3f5:	mov    esi,0x28
   1d3fa:	mov    rdi,rbp
   1d3fd:	call   10dc0 <wget_memdup@plt>
   1d402:	mov    rdx,QWORD PTR [rsp+0x78]
   1d407:	sub    rdx,QWORD PTR fs:0x28
   1d410:	jne    1d418 <wget_html_get_urls_inline+0x78>
   1d412:	sub    rsp,0xffffffffffffff80
   1d416:	pop    rbp
   1d417:	ret    
   1d418:	call   11760 <__stack_chk_fail@plt>
   1d41d:	nop    DWORD PTR [rax]

000000000001d420 <get_body>:
   1d420:	endbr64 
   1d424:	mov    rax,QWORD PTR [rdi]
   1d427:	mov    r8,rsi
   1d42a:	mov    rcx,rdx
   1d42d:	mov    rdx,r8
   1d430:	mov    rsi,QWORD PTR [rax+0x30]
   1d434:	mov    rax,QWORD PTR [rax+0x18]
   1d438:	jmp    rax
   1d43a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001d440 <body_callback>:
   1d440:	endbr64 
   1d444:	push   rbx
   1d445:	mov    rbx,rdi
   1d448:	mov    rsi,rdx
   1d44b:	mov    rdx,rcx
   1d44e:	sub    rsp,0x10
   1d452:	mov    rdi,QWORD PTR [rdi+0x60]
   1d456:	test   rdi,rdi
   1d459:	je     1d470 <body_callback+0x30>
   1d45b:	call   10ea0 <wget_buffer_memcat@plt>
   1d460:	add    rsp,0x10
   1d464:	xor    eax,eax
   1d466:	pop    rbx
   1d467:	ret    
   1d468:	nop    DWORD PTR [rax+rax*1+0x0]
   1d470:	mov    edi,0x19000
   1d475:	mov    QWORD PTR [rsp+0x8],rcx
   1d47a:	mov    QWORD PTR [rsp],rsi
   1d47e:	call   12780 <wget_buffer_alloc@plt>
   1d483:	mov    rdx,QWORD PTR [rsp+0x8]
   1d488:	mov    rsi,QWORD PTR [rsp]
   1d48c:	mov    QWORD PTR [rbx+0x60],rax
   1d490:	mov    rdi,rax
   1d493:	call   10ea0 <wget_buffer_memcat@plt>
   1d498:	add    rsp,0x10
   1d49c:	xor    eax,eax
   1d49e:	pop    rbx
   1d49f:	ret    

000000000001d4a0 <http_add_header>:
   1d4a0:	push   r13
   1d4a2:	mov    r13,rdx
   1d4a5:	push   r12
   1d4a7:	mov    r12,rsi
   1d4aa:	push   rbp
   1d4ab:	push   rbx
   1d4ac:	mov    rbx,rdi
   1d4af:	mov    edi,0x10
   1d4b4:	sub    rsp,0x8
   1d4b8:	mov    rax,QWORD PTR [rip+0x58b11]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   1d4bf:	call   QWORD PTR [rax]
   1d4c1:	test   rax,rax
   1d4c4:	je     1d538 <http_add_header+0x98>
   1d4c6:	test   r12,r12
   1d4c9:	je     1d538 <http_add_header+0x98>
   1d4cb:	test   r13,r13
   1d4ce:	je     1d518 <http_add_header+0x78>
   1d4d0:	mov    QWORD PTR [rax],r12
   1d4d3:	mov    rdi,QWORD PTR [rbx]
   1d4d6:	mov    rsi,rax
   1d4d9:	mov    rbp,rax
   1d4dc:	mov    QWORD PTR [rax+0x8],r13
   1d4e0:	call   11290 <wget_vector_add@plt>
   1d4e5:	mov    r8d,eax
   1d4e8:	xor    eax,eax
   1d4ea:	test   r8d,r8d
   1d4ed:	jns    1d529 <http_add_header+0x89>
   1d4ef:	mov    rbx,QWORD PTR [rip+0x58af2]        # 75fe8 <wget_free@@Base-0x1328>
   1d4f6:	mov    rdi,rbp
   1d4f9:	call   QWORD PTR [rbx]
   1d4fb:	mov    rdi,r13
   1d4fe:	call   QWORD PTR [rbx]
   1d500:	test   r12,r12
   1d503:	jne    1d518 <http_add_header+0x78>
   1d505:	add    rsp,0x8
   1d509:	mov    eax,0xfffffffe
   1d50e:	pop    rbx
   1d50f:	pop    rbp
   1d510:	pop    r12
   1d512:	pop    r13
   1d514:	ret    
   1d515:	nop    DWORD PTR [rax]
   1d518:	mov    rax,QWORD PTR [rip+0x58ac9]        # 75fe8 <wget_free@@Base-0x1328>
   1d51f:	mov    rdi,r12
   1d522:	call   QWORD PTR [rax]
   1d524:	mov    eax,0xfffffffe
   1d529:	add    rsp,0x8
   1d52d:	pop    rbx
   1d52e:	pop    rbp
   1d52f:	pop    r12
   1d531:	pop    r13
   1d533:	ret    
   1d534:	nop    DWORD PTR [rax+0x0]
   1d538:	test   r13,r13
   1d53b:	je     1d500 <http_add_header+0x60>
   1d53d:	mov    rbx,QWORD PTR [rip+0x58aa4]        # 75fe8 <wget_free@@Base-0x1328>
   1d544:	jmp    1d4fb <http_add_header+0x5b>
   1d546:	cs nop WORD PTR [rax+rax*1+0x0]

000000000001d550 <establish_proxy_connect>:
   1d550:	push   r14
   1d552:	push   r13
   1d554:	mov    r13,rdi
   1d557:	push   r12
   1d559:	mov    r12,rsi
   1d55c:	push   rbp
   1d55d:	push   rbx
   1d55e:	mov    ebx,edx
   1d560:	mov    edx,0x400
   1d565:	sub    rsp,0x430
   1d56c:	mov    rax,QWORD PTR fs:0x28
   1d575:	mov    QWORD PTR [rsp+0x428],rax
   1d57d:	xor    eax,eax
   1d57f:	mov    r14,rsp
   1d582:	lea    rbp,[rsp+0x20]
   1d587:	mov    rsi,rbp
   1d58a:	mov    rdi,r14
   1d58d:	call   108d0 <wget_buffer_init@plt>
   1d592:	movzx  ecx,bx
   1d595:	mov    r8,r12
   1d598:	mov    rdx,r12
   1d59b:	mov    r9d,ecx
   1d59e:	lea    rsi,[rip+0x2edfb]        # 4c3a0 <maybe+0x100>
   1d5a5:	mov    rdi,r14
   1d5a8:	xor    eax,eax
   1d5aa:	call   108c0 <wget_buffer_printf@plt>
   1d5af:	mov    rdx,QWORD PTR [rsp+0x8]
   1d5b4:	mov    rsi,QWORD PTR [rsp]
   1d5b8:	mov    rdi,r13
   1d5bb:	call   105f0 <wget_tcp_write@plt>
   1d5c0:	mov    rdi,r14
   1d5c3:	cmp    rax,QWORD PTR [rsp+0x8]
   1d5c8:	jne    1d678 <establish_proxy_connect+0x128>
   1d5ce:	call   11300 <wget_buffer_deinit@plt>
   1d5d3:	mov    edx,0x3ff
   1d5d8:	mov    rsi,rbp
   1d5db:	mov    rdi,r13
   1d5de:	call   114d0 <wget_tcp_read@plt>
   1d5e3:	test   rax,rax
   1d5e6:	js     1d6ad <establish_proxy_connect+0x15d>
   1d5ec:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
   1d5f1:	je     1d604 <establish_proxy_connect+0xb4>
   1d5f3:	add    rax,rbp
   1d5f6:	movzx  edx,BYTE PTR [rax-0x1]
   1d5fa:	cmp    dl,0xd
   1d5fd:	jg     1d660 <establish_proxy_connect+0x110>
   1d5ff:	cmp    dl,0x8
   1d602:	jg     1d665 <establish_proxy_connect+0x115>
   1d604:	mov    edx,0xc
   1d609:	lea    rsi,[rip+0x2f0df]        # 4c6ef <maybe+0x44f>
   1d610:	mov    rdi,rbp
   1d613:	call   11c40 <wget_strncasecmp_ascii@plt>
   1d618:	mov    r12d,eax
   1d61b:	test   eax,eax
   1d61d:	jne    1d685 <establish_proxy_connect+0x135>
   1d61f:	mov    rsi,rbp
   1d622:	lea    rdi,[rip+0x2edcf]        # 4c3f8 <maybe+0x158>
   1d629:	xor    eax,eax
   1d62b:	call   114b0 <wget_debug_printf@plt>
   1d630:	mov    rax,QWORD PTR [rsp+0x428]
   1d638:	sub    rax,QWORD PTR fs:0x28
   1d641:	jne    1d6b8 <establish_proxy_connect+0x168>
   1d643:	add    rsp,0x430
   1d64a:	mov    eax,r12d
   1d64d:	pop    rbx
   1d64e:	pop    rbp
   1d64f:	pop    r12
   1d651:	pop    r13
   1d653:	pop    r14
   1d655:	ret    
   1d656:	cs nop WORD PTR [rax+rax*1+0x0]
   1d660:	cmp    dl,0x20
   1d663:	jne    1d604 <establish_proxy_connect+0xb4>
   1d665:	mov    BYTE PTR [rax-0x1],0x0
   1d669:	sub    rax,0x1
   1d66d:	cmp    rax,rbp
   1d670:	jne    1d5f6 <establish_proxy_connect+0xa6>
   1d672:	jmp    1d604 <establish_proxy_connect+0xb4>
   1d674:	nop    DWORD PTR [rax+0x0]
   1d678:	call   11300 <wget_buffer_deinit@plt>
   1d67d:	mov    r12d,0xfffffffb
   1d683:	jmp    1d630 <establish_proxy_connect+0xe0>
   1d685:	mov    edx,0x5
   1d68a:	lea    rsi,[rip+0x2ed3f]        # 4c3d0 <maybe+0x130>
   1d691:	xor    edi,edi
   1d693:	mov    r12d,0xfffffffb
   1d699:	call   10f90 <dcgettext@plt>
   1d69e:	mov    rsi,rbp
   1d6a1:	mov    rdi,rax
   1d6a4:	xor    eax,eax
   1d6a6:	call   11ea0 <wget_error_printf@plt>
   1d6ab:	jmp    1d630 <establish_proxy_connect+0xe0>
   1d6ad:	mov    r12d,0xfffffffb
   1d6b3:	jmp    1d630 <establish_proxy_connect+0xe0>
   1d6b8:	call   11760 <__stack_chk_fail@plt>
   1d6bd:	nop    DWORD PTR [rax]

000000000001d6c0 <decompress_error_handler>:
   1d6c0:	endbr64 
   1d6c4:	push   r12
   1d6c6:	push   rbp
   1d6c7:	sub    rsp,0x8
   1d6cb:	call   105a0 <wget_decompress_get_context@plt>
   1d6d0:	test   rax,rax
   1d6d3:	je     1d708 <decompress_error_handler+0x48>
   1d6d5:	mov    rax,QWORD PTR [rax]
   1d6d8:	test   rax,rax
   1d6db:	je     1d708 <decompress_error_handler+0x48>
   1d6dd:	mov    r12,QWORD PTR [rax+0x38]
   1d6e1:	mov    rbp,QWORD PTR [rax+0x58]
   1d6e5:	mov    edx,0x5
   1d6ea:	xor    edi,edi
   1d6ec:	lea    rsi,[rip+0x2ed2d]        # 4c420 <maybe+0x180>
   1d6f3:	call   10f90 <dcgettext@plt>
   1d6f8:	mov    rdx,r12
   1d6fb:	mov    rsi,rbp
   1d6fe:	mov    rdi,rax
   1d701:	xor    eax,eax
   1d703:	call   11ea0 <wget_error_printf@plt>
   1d708:	add    rsp,0x8
   1d70c:	xor    eax,eax
   1d70e:	pop    rbp
   1d70f:	pop    r12
   1d711:	ret    
   1d712:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1d71d:	nop    DWORD PTR [rax]

000000000001d720 <get_page>:
   1d720:	push   r13
   1d722:	push   r12
   1d724:	sub    rsp,0x8
   1d728:	mov    r13,QWORD PTR [rdi+0x38]
   1d72c:	mov    r12,QWORD PTR [rdi+0x58]
   1d730:	mov    edi,DWORD PTR [rdi+0x84]
   1d736:	call   11820 <wget_iri_scheme_get_name@plt>
   1d73b:	add    rsp,0x8
   1d73f:	mov    rcx,r13
   1d742:	mov    rdx,r12
   1d745:	mov    rsi,rax
   1d748:	pop    r12
   1d74a:	lea    rdi,[rip+0x2efab]        # 4c6fc <maybe+0x45c>
   1d751:	xor    eax,eax
   1d753:	pop    r13
   1d755:	jmp    12810 <wget_aprintf@plt>
   1d75a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001d760 <iri_free>:
   1d760:	endbr64 
   1d764:	sub    rsp,0x18
   1d768:	mov    QWORD PTR [rsp+0x8],rdi
   1d76d:	test   rdi,rdi
   1d770:	je     1d77c <iri_free+0x1c>
   1d772:	lea    rdi,[rsp+0x8]
   1d777:	call   11bc0 <wget_iri_free@plt>
   1d77c:	add    rsp,0x18
   1d780:	ret    
   1d781:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1d78c:	nop    DWORD PTR [rax+0x0]

000000000001d790 <http_exit>:
   1d790:	endbr64 
   1d794:	cmp    BYTE PTR [rip+0x59ce5],0x0        # 77480 <initialized>
   1d79b:	jne    1d7a0 <http_exit+0x10>
   1d79d:	ret    
   1d79e:	xchg   ax,ax
   1d7a0:	sub    rsp,0x8
   1d7a4:	lea    rdi,[rip+0x59ce5]        # 77490 <proxy_mutex>
   1d7ab:	call   11e70 <wget_thread_mutex_destroy@plt>
   1d7b0:	lea    rdi,[rip+0x59cd1]        # 77488 <hosts_mutex>
   1d7b7:	call   11e70 <wget_thread_mutex_destroy@plt>
   1d7bc:	mov    BYTE PTR [rip+0x59cbd],0x0        # 77480 <initialized>
   1d7c3:	add    rsp,0x8
   1d7c7:	ret    
   1d7c8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001d7d0 <parse_proxies.part.0>:
   1d7d0:	push   r15
   1d7d2:	push   r14
   1d7d4:	push   r13
   1d7d6:	push   r12
   1d7d8:	push   rbp
   1d7d9:	push   rbx
   1d7da:	sub    rsp,0x118
   1d7e1:	mov    rax,QWORD PTR fs:0x28
   1d7ea:	mov    QWORD PTR [rsp+0x108],rax
   1d7f2:	xor    eax,eax
   1d7f4:	cmp    BYTE PTR [rdi],0x0
   1d7f7:	je     1d8d0 <parse_proxies.part.0+0x100>
   1d7fd:	mov    r12,rdi
   1d800:	mov    rbp,rsi
   1d803:	lea    r14,[rip+0xffffffffffffff56]        # 1d760 <iri_free>
   1d80a:	xor    r13d,r13d
   1d80d:	jmp    1d819 <parse_proxies.part.0+0x49>
   1d80f:	nop
   1d810:	cmp    BYTE PTR [rbx],0x0
   1d813:	lea    r12,[rbx+0x1]
   1d817:	je     1d880 <parse_proxies.part.0+0xb0>
   1d819:	mov    esi,0x2c
   1d81e:	mov    rdi,r12
   1d821:	call   11030 <strchrnul@plt>
   1d826:	mov    rbx,rax
   1d829:	cmp    rax,r12
   1d82c:	je     1d810 <parse_proxies.part.0+0x40>
   1d82e:	mov    rcx,rax
   1d831:	sub    rcx,r12
   1d834:	cmp    rcx,0xff
   1d83b:	jg     1d810 <parse_proxies.part.0+0x40>
   1d83d:	mov    r15,rsp
   1d840:	mov    rdx,r12
   1d843:	mov    esi,0x100
   1d848:	mov    rdi,r15
   1d84b:	call   11530 <wget_strmemcpy@plt>
   1d850:	mov    rsi,rbp
   1d853:	mov    rdi,r15
   1d856:	call   11000 <wget_iri_parse@plt>
   1d85b:	mov    r12,rax
   1d85e:	test   rax,rax
   1d861:	je     1d810 <parse_proxies.part.0+0x40>
   1d863:	test   r13,r13
   1d866:	je     1d8b0 <parse_proxies.part.0+0xe0>
   1d868:	mov    rsi,r12
   1d86b:	mov    rdi,r13
   1d86e:	lea    r12,[rbx+0x1]
   1d872:	call   11290 <wget_vector_add@plt>
   1d877:	cmp    BYTE PTR [rbx],0x0
   1d87a:	jne    1d819 <parse_proxies.part.0+0x49>
   1d87c:	nop    DWORD PTR [rax+0x0]
   1d880:	mov    rax,QWORD PTR [rsp+0x108]
   1d888:	sub    rax,QWORD PTR fs:0x28
   1d891:	jne    1d8d5 <parse_proxies.part.0+0x105>
   1d893:	add    rsp,0x118
   1d89a:	mov    rax,r13
   1d89d:	pop    rbx
   1d89e:	pop    rbp
   1d89f:	pop    r12
   1d8a1:	pop    r13
   1d8a3:	pop    r14
   1d8a5:	pop    r15
   1d8a7:	ret    
   1d8a8:	nop    DWORD PTR [rax+rax*1+0x0]
   1d8b0:	xor    esi,esi
   1d8b2:	mov    edi,0x8
   1d8b7:	call   11f00 <wget_vector_create@plt>
   1d8bc:	mov    rsi,r14
   1d8bf:	mov    rdi,rax
   1d8c2:	mov    r13,rax
   1d8c5:	call   120e0 <wget_vector_set_destructor@plt>
   1d8ca:	jmp    1d868 <parse_proxies.part.0+0x98>
   1d8cc:	nop    DWORD PTR [rax+0x0]
   1d8d0:	xor    r13d,r13d
   1d8d3:	jmp    1d880 <parse_proxies.part.0+0xb0>
   1d8d5:	call   11760 <__stack_chk_fail@plt>
   1d8da:	nop    WORD PTR [rax+rax*1+0x0]

000000000001d8e0 <wget_http_init>:
   1d8e0:	endbr64 
   1d8e4:	jmp    12900 <http_init>
   1d8e9:	nop    DWORD PTR [rax+0x0]

000000000001d8f0 <wget_http_exit>:
   1d8f0:	endbr64 
   1d8f4:	cmp    BYTE PTR [rip+0x59b85],0x0        # 77480 <initialized>
   1d8fb:	jne    1d900 <wget_http_exit+0x10>
   1d8fd:	ret    
   1d8fe:	xchg   ax,ax
   1d900:	sub    rsp,0x8
   1d904:	lea    rdi,[rip+0x59b85]        # 77490 <proxy_mutex>
   1d90b:	call   11e70 <wget_thread_mutex_destroy@plt>
   1d910:	lea    rdi,[rip+0x59b71]        # 77488 <hosts_mutex>
   1d917:	call   11e70 <wget_thread_mutex_destroy@plt>
   1d91c:	mov    BYTE PTR [rip+0x59b5d],0x0        # 77480 <initialized>
   1d923:	add    rsp,0x8
   1d927:	ret    
   1d928:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001d930 <wget_http_request_set_header_cb>:
   1d930:	endbr64 
   1d934:	mov    QWORD PTR [rdi+0x10],rsi
   1d938:	mov    QWORD PTR [rdi+0x28],rdx
   1d93c:	ret    
   1d93d:	nop    DWORD PTR [rax]

000000000001d940 <wget_http_request_set_body_cb>:
   1d940:	endbr64 
   1d944:	mov    QWORD PTR [rdi+0x18],rsi
   1d948:	mov    QWORD PTR [rdi+0x30],rdx
   1d94c:	ret    
   1d94d:	nop    DWORD PTR [rax]

000000000001d950 <wget_http_request_set_int>:
   1d950:	endbr64 
   1d954:	cmp    esi,0x7d9
   1d95a:	je     1d998 <wget_http_request_set_int+0x48>
   1d95c:	push   r12
   1d95e:	mov    r12d,esi
   1d961:	cmp    esi,0x7e4
   1d967:	je     1d9b0 <wget_http_request_set_int+0x60>
   1d969:	mov    edx,0x5
   1d96e:	lea    rsi,[rip+0x2eadb]        # 4c450 <maybe+0x1b0>
   1d975:	xor    edi,edi
   1d977:	call   10f90 <dcgettext@plt>
   1d97c:	mov    edx,r12d
   1d97f:	lea    rsi,[rip+0x2f02a]        # 4c9b0 <__func__.5>
   1d986:	pop    r12
   1d988:	mov    rdi,rax
   1d98b:	xor    eax,eax
   1d98d:	jmp    11ea0 <wget_error_printf@plt>
   1d992:	nop    WORD PTR [rax+rax*1+0x0]
   1d998:	movzx  eax,BYTE PTR [rdi+0x1d0]
   1d99f:	test   edx,edx
   1d9a1:	setne  dl
   1d9a4:	and    eax,0xfffffffe
   1d9a7:	or     eax,edx
   1d9a9:	mov    BYTE PTR [rdi+0x1d0],al
   1d9af:	ret    
   1d9b0:	test   edx,edx
   1d9b2:	movzx  eax,BYTE PTR [rdi+0x1d0]
   1d9b9:	setne  dl
   1d9bc:	add    edx,edx
   1d9be:	and    eax,0xfffffffd
   1d9c1:	or     eax,edx
   1d9c3:	mov    BYTE PTR [rdi+0x1d0],al
   1d9c9:	pop    r12
   1d9cb:	ret    
   1d9cc:	nop    DWORD PTR [rax+0x0]

000000000001d9d0 <wget_http_request_get_int>:
   1d9d0:	endbr64 
   1d9d4:	cmp    esi,0x7d9
   1d9da:	je     1da20 <wget_http_request_get_int+0x50>
   1d9dc:	push   r12
   1d9de:	mov    r12d,esi
   1d9e1:	cmp    esi,0x7e4
   1d9e7:	je     1da30 <wget_http_request_get_int+0x60>
   1d9e9:	mov    edx,0x5
   1d9ee:	lea    rsi,[rip+0x2ea5b]        # 4c450 <maybe+0x1b0>
   1d9f5:	xor    edi,edi
   1d9f7:	call   10f90 <dcgettext@plt>
   1d9fc:	mov    edx,r12d
   1d9ff:	lea    rsi,[rip+0x2ef8a]        # 4c990 <__func__.4>
   1da06:	mov    rdi,rax
   1da09:	xor    eax,eax
   1da0b:	call   11ea0 <wget_error_printf@plt>
   1da10:	mov    eax,0xffffffff
   1da15:	pop    r12
   1da17:	ret    
   1da18:	nop    DWORD PTR [rax+rax*1+0x0]
   1da20:	movzx  eax,BYTE PTR [rdi+0x1d0]
   1da27:	and    eax,0x1
   1da2a:	ret    
   1da2b:	nop    DWORD PTR [rax+rax*1+0x0]
   1da30:	movzx  eax,BYTE PTR [rdi+0x1d0]
   1da37:	pop    r12
   1da39:	shr    al,1
   1da3b:	and    eax,0x1
   1da3e:	ret    
   1da3f:	nop

000000000001da40 <wget_http_request_set_ptr>:
   1da40:	endbr64 
   1da44:	cmp    esi,0x7e3
   1da4a:	jne    1da58 <wget_http_request_set_ptr+0x18>
   1da4c:	mov    QWORD PTR [rdi+0x20],rdx
   1da50:	ret    
   1da51:	nop    DWORD PTR [rax+0x0]
   1da58:	push   r12
   1da5a:	mov    edx,0x5
   1da5f:	mov    r12d,esi
   1da62:	xor    edi,edi
   1da64:	lea    rsi,[rip+0x2e9e5]        # 4c450 <maybe+0x1b0>
   1da6b:	call   10f90 <dcgettext@plt>
   1da70:	mov    edx,r12d
   1da73:	lea    rsi,[rip+0x2eef6]        # 4c970 <__func__.3>
   1da7a:	pop    r12
   1da7c:	mov    rdi,rax
   1da7f:	xor    eax,eax
   1da81:	jmp    11ea0 <wget_error_printf@plt>
   1da86:	cs nop WORD PTR [rax+rax*1+0x0]

000000000001da90 <wget_http_request_get_ptr>:
   1da90:	endbr64 
   1da94:	cmp    esi,0x7e3
   1da9a:	jne    1daa8 <wget_http_request_get_ptr+0x18>
   1da9c:	mov    rax,QWORD PTR [rdi+0x20]
   1daa0:	ret    
   1daa1:	nop    DWORD PTR [rax+0x0]
   1daa8:	push   r12
   1daaa:	mov    edx,0x5
   1daaf:	mov    r12d,esi
   1dab2:	xor    edi,edi
   1dab4:	lea    rsi,[rip+0x2e995]        # 4c450 <maybe+0x1b0>
   1dabb:	call   10f90 <dcgettext@plt>
   1dac0:	mov    edx,r12d
   1dac3:	lea    rsi,[rip+0x2ee86]        # 4c950 <__func__.2>
   1daca:	mov    rdi,rax
   1dacd:	xor    eax,eax
   1dacf:	call   11ea0 <wget_error_printf@plt>
   1dad4:	xor    eax,eax
   1dad6:	pop    r12
   1dad8:	ret    
   1dad9:	nop    DWORD PTR [rax+0x0]

000000000001dae0 <wget_http_add_header_vprintf>:
   1dae0:	endbr64 
   1dae4:	push   r13
   1dae6:	mov    r13,rsi
   1dae9:	mov    rsi,rcx
   1daec:	push   r12
   1daee:	push   rbp
   1daef:	mov    rbp,rdi
   1daf2:	mov    rdi,rdx
   1daf5:	call   10850 <wget_vaprintf@plt>
   1dafa:	mov    rdi,r13
   1dafd:	mov    r12,rax
   1db00:	call   127b0 <wget_strdup@plt>
   1db05:	mov    rdx,r12
   1db08:	mov    rdi,rbp
   1db0b:	pop    rbp
   1db0c:	mov    rsi,rax
   1db0f:	pop    r12
   1db11:	pop    r13
   1db13:	jmp    1d4a0 <http_add_header>
   1db18:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001db20 <wget_http_add_header_printf>:
   1db20:	endbr64 
   1db24:	sub    rsp,0xd8
   1db2b:	mov    QWORD PTR [rsp+0x38],rcx
   1db30:	mov    QWORD PTR [rsp+0x40],r8
   1db35:	mov    QWORD PTR [rsp+0x48],r9
   1db3a:	test   al,al
   1db3c:	je     1db75 <wget_http_add_header_printf+0x55>
   1db3e:	movaps XMMWORD PTR [rsp+0x50],xmm0
   1db43:	movaps XMMWORD PTR [rsp+0x60],xmm1
   1db48:	movaps XMMWORD PTR [rsp+0x70],xmm2
   1db4d:	movaps XMMWORD PTR [rsp+0x80],xmm3
   1db55:	movaps XMMWORD PTR [rsp+0x90],xmm4
   1db5d:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   1db65:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   1db6d:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   1db75:	mov    rax,QWORD PTR fs:0x28
   1db7e:	mov    QWORD PTR [rsp+0x18],rax
   1db83:	xor    eax,eax
   1db85:	lea    rax,[rsp+0xe0]
   1db8d:	mov    rcx,rsp
   1db90:	mov    DWORD PTR [rsp],0x18
   1db97:	mov    QWORD PTR [rsp+0x8],rax
   1db9c:	lea    rax,[rsp+0x20]
   1dba1:	mov    DWORD PTR [rsp+0x4],0x30
   1dba9:	mov    QWORD PTR [rsp+0x10],rax
   1dbae:	call   10a60 <wget_http_add_header_vprintf@plt>
   1dbb3:	mov    rdx,QWORD PTR [rsp+0x18]
   1dbb8:	sub    rdx,QWORD PTR fs:0x28
   1dbc1:	jne    1dbcb <wget_http_add_header_printf+0xab>
   1dbc3:	add    rsp,0xd8
   1dbca:	ret    
   1dbcb:	call   11760 <__stack_chk_fail@plt>

000000000001dbd0 <wget_http_add_header>:
   1dbd0:	endbr64 
   1dbd4:	push   r13
   1dbd6:	mov    r13,rsi
   1dbd9:	push   r12
   1dbdb:	push   rbp
   1dbdc:	mov    rbp,rdi
   1dbdf:	mov    rdi,rdx
   1dbe2:	call   127b0 <wget_strdup@plt>
   1dbe7:	mov    rdi,r13
   1dbea:	mov    r12,rax
   1dbed:	call   127b0 <wget_strdup@plt>
   1dbf2:	mov    rdx,r12
   1dbf5:	mov    rdi,rbp
   1dbf8:	pop    rbp
   1dbf9:	mov    rsi,rax
   1dbfc:	pop    r12
   1dbfe:	pop    r13
   1dc00:	jmp    1d4a0 <http_add_header>
   1dc05:	data16 cs nop WORD PTR [rax+rax*1+0x0]

000000000001dc10 <wget_http_create_request>:
   1dc10:	endbr64 
   1dc14:	mov    rax,QWORD PTR [rip+0x58325]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   1dc1b:	push   r15
   1dc1d:	mov    r15,rsi
   1dc20:	mov    esi,0x1e8
   1dc25:	push   r14
   1dc27:	mov    r14,rdi
   1dc2a:	mov    edi,0x1
   1dc2f:	push   r13
   1dc31:	push   r12
   1dc33:	push   rbp
   1dc34:	call   QWORD PTR [rax]
   1dc36:	mov    r12,rax
   1dc39:	test   rax,rax
   1dc3c:	je     1dcef <wget_http_create_request+0xdf>
   1dc42:	lea    r13,[rax+0x38]
   1dc46:	mov    edx,0x100
   1dc4b:	lea    rbp,[r12+0x58]
   1dc50:	lea    rsi,[rax+0x88]
   1dc57:	mov    rdi,r13
   1dc5a:	call   108d0 <wget_buffer_init@plt>
   1dc5f:	lea    rsi,[r12+0x188]
   1dc67:	mov    edx,0x40
   1dc6c:	mov    rdi,rbp
   1dc6f:	call   108d0 <wget_buffer_init@plt>
   1dc74:	mov    eax,DWORD PTR [r14+0x5c]
   1dc78:	mov    edx,0x8
   1dc7d:	mov    rsi,r15
   1dc80:	lea    rdi,[r12+0x1c8]
   1dc88:	mov    DWORD PTR [r12+0x84],eax
   1dc90:	call   11860 <wget_strscpy@plt>
   1dc95:	mov    rsi,r13
   1dc98:	mov    rdi,r14
   1dc9b:	call   11ee0 <wget_iri_get_escaped_resource@plt>
   1dca0:	mov    rsi,rbp
   1dca3:	mov    rdi,r14
   1dca6:	call   111b0 <wget_iri_get_escaped_host@plt>
   1dcab:	xor    esi,esi
   1dcad:	mov    edi,0x8
   1dcb2:	call   11f00 <wget_vector_create@plt>
   1dcb7:	mov    rsi,QWORD PTR [rip+0x582aa]        # 75f68 <wget_http_free_param@@Base+0x53e38>
   1dcbe:	mov    QWORD PTR [r12],rax
   1dcc2:	mov    rdi,rax
   1dcc5:	call   120e0 <wget_vector_set_destructor@plt>
   1dcca:	mov    rdx,QWORD PTR [r12+0x58]
   1dccf:	lea    rsi,[rip+0x2ea31]        # 4c707 <maybe+0x467>
   1dcd6:	mov    rdi,r12
   1dcd9:	call   11f20 <wget_http_add_header@plt>
   1dcde:	xor    edx,edx
   1dce0:	lea    rsi,[rip+0xfffffffffffff759]        # 1d440 <body_callback>
   1dce7:	mov    rdi,r12
   1dcea:	call   10e10 <wget_http_request_set_body_cb@plt>
   1dcef:	pop    rbp
   1dcf0:	mov    rax,r12
   1dcf3:	pop    r12
   1dcf5:	pop    r13
   1dcf7:	pop    r14
   1dcf9:	pop    r15
   1dcfb:	ret    
   1dcfc:	nop    DWORD PTR [rax+0x0]

000000000001dd00 <wget_http_request_set_body>:
   1dd00:	endbr64 
   1dd04:	push   r12
   1dd06:	mov    r12,rdx
   1dd09:	push   rbp
   1dd0a:	mov    rbp,rcx
   1dd0d:	push   rbx
   1dd0e:	mov    rbx,rdi
   1dd11:	test   rsi,rsi
   1dd14:	je     1dd25 <wget_http_request_set_body+0x25>
   1dd16:	mov    rdx,rsi
   1dd19:	lea    rsi,[rip+0x2e410]        # 4c130 <__func__.0+0x50>
   1dd20:	call   11f20 <wget_http_add_header@plt>
   1dd25:	mov    QWORD PTR [rbx+0x8],r12
   1dd29:	mov    QWORD PTR [rbx+0x78],rbp
   1dd2d:	pop    rbx
   1dd2e:	pop    rbp
   1dd2f:	pop    r12
   1dd31:	ret    
   1dd32:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1dd3d:	nop    DWORD PTR [rax]

000000000001dd40 <wget_http_add_header_param>:
   1dd40:	endbr64 
   1dd44:	push   r12
   1dd46:	push   rbp
   1dd47:	mov    rbp,rdi
   1dd4a:	push   rbx
   1dd4b:	mov    rdi,QWORD PTR [rsi+0x8]
   1dd4f:	mov    rbx,rsi
   1dd52:	call   127b0 <wget_strdup@plt>
   1dd57:	mov    rdi,QWORD PTR [rbx]
   1dd5a:	mov    r12,rax
   1dd5d:	call   127b0 <wget_strdup@plt>
   1dd62:	pop    rbx
   1dd63:	mov    rdx,r12
   1dd66:	mov    rdi,rbp
   1dd69:	mov    rsi,rax
   1dd6c:	pop    rbp
   1dd6d:	pop    r12
   1dd6f:	jmp    1d4a0 <http_add_header>
   1dd74:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1dd7f:	nop

000000000001dd80 <wget_http_add_credentials>:
   1dd80:	endbr64 
   1dd84:	push   r15
   1dd86:	push   r14
   1dd88:	push   r13
   1dd8a:	push   r12
   1dd8c:	push   rbp
   1dd8d:	push   rbx
   1dd8e:	sub    rsp,0x178
   1dd95:	mov    rax,QWORD PTR fs:0x28
   1dd9e:	mov    QWORD PTR [rsp+0x168],rax
   1dda6:	xor    eax,eax
   1dda8:	test   rsi,rsi
   1ddab:	je     1ddfe <wget_http_add_credentials+0x7e>
   1ddad:	mov    r14,QWORD PTR [rsi]
   1ddb0:	lea    rax,[rip+0x2eab3]        # 4c86a <maybe+0x5ca>
   1ddb7:	test   rdx,rdx
   1ddba:	mov    rbp,rdx
   1ddbd:	cmove  rbp,rax
   1ddc1:	mov    r12,rdi
   1ddc4:	test   rcx,rcx
   1ddc7:	mov    r13,rsi
   1ddca:	mov    r15,rcx
   1ddcd:	lea    rsi,[rip+0x2e938]        # 4c70c <maybe+0x46c>
   1ddd4:	mov    rdi,r14
   1ddd7:	cmove  r15,rax
   1dddb:	mov    ebx,r8d
   1ddde:	call   12590 <wget_strcasecmp_ascii@plt>
   1dde3:	test   eax,eax
   1dde5:	je     1de30 <wget_http_add_credentials+0xb0>
   1dde7:	lea    rsi,[rip+0x2e941]        # 4c72f <maybe+0x48f>
   1ddee:	mov    rdi,r14
   1ddf1:	call   12590 <wget_strcasecmp_ascii@plt>
   1ddf6:	test   eax,eax
   1ddf8:	je     1dea8 <wget_http_add_credentials+0x128>
   1ddfe:	mov    rax,QWORD PTR [rsp+0x168]
   1de06:	sub    rax,QWORD PTR fs:0x28
   1de0f:	jne    1e354 <wget_http_add_credentials+0x5d4>
   1de15:	add    rsp,0x178
   1de1c:	pop    rbx
   1de1d:	pop    rbp
   1de1e:	pop    r12
   1de20:	pop    r13
   1de22:	pop    r14
   1de24:	pop    r15
   1de26:	ret    
   1de27:	nop    WORD PTR [rax+rax*1+0x0]
   1de30:	mov    rdx,r15
   1de33:	mov    rsi,rbp
   1de36:	lea    rdi,[rip+0x2e985]        # 4c7c2 <maybe+0x522>
   1de3d:	call   10ee0 <wget_base64_encode_printf_alloc@plt>
   1de42:	lea    rdx,[rip+0x2e8c9]        # 4c712 <maybe+0x472>
   1de49:	mov    rbp,rax
   1de4c:	mov    rcx,rax
   1de4f:	test   ebx,ebx
   1de51:	jne    1e010 <wget_http_add_credentials+0x290>
   1de57:	lea    rsi,[rip+0x2e8c3]        # 4c721 <maybe+0x481>
   1de5e:	mov    rdi,r12
   1de61:	xor    eax,eax
   1de63:	call   12050 <wget_http_add_header_printf@plt>
   1de68:	test   rbp,rbp
   1de6b:	je     1ddfe <wget_http_add_credentials+0x7e>
   1de6d:	mov    rax,QWORD PTR [rsp+0x168]
   1de75:	sub    rax,QWORD PTR fs:0x28
   1de7e:	jne    1e354 <wget_http_add_credentials+0x5d4>
   1de84:	mov    rax,QWORD PTR [rip+0x5815d]        # 75fe8 <wget_free@@Base-0x1328>
   1de8b:	mov    rdi,rbp
   1de8e:	mov    rax,QWORD PTR [rax]
   1de91:	add    rsp,0x178
   1de98:	pop    rbx
   1de99:	pop    rbp
   1de9a:	pop    r12
   1de9c:	pop    r13
   1de9e:	pop    r14
   1dea0:	pop    r15
   1dea2:	jmp    rax
   1dea4:	nop    DWORD PTR [rax+0x0]
   1dea8:	mov    rdi,QWORD PTR [r13+0x8]
   1deac:	lea    rdx,[rsp+0x28]
   1deb1:	lea    rsi,[rip+0x2e87e]        # 4c736 <maybe+0x496>
   1deb8:	call   10520 <wget_hashmap_get@plt>
   1debd:	test   eax,eax
   1debf:	jne    1deca <wget_http_add_credentials+0x14a>
   1dec1:	mov    QWORD PTR [rsp+0x28],0x0
   1deca:	mov    rdi,QWORD PTR [r13+0x8]
   1dece:	lea    rdx,[rsp+0x30]
   1ded3:	lea    rsi,[rip+0x2e862]        # 4c73c <maybe+0x49c>
   1deda:	call   10520 <wget_hashmap_get@plt>
   1dedf:	test   eax,eax
   1dee1:	jne    1deec <wget_http_add_credentials+0x16c>
   1dee3:	mov    QWORD PTR [rsp+0x30],0x0
   1deec:	mov    rdi,QWORD PTR [r13+0x8]
   1def0:	lea    rdx,[rsp+0x38]
   1def5:	lea    rsi,[rip+0x2e847]        # 4c743 <maybe+0x4a3>
   1defc:	call   10520 <wget_hashmap_get@plt>
   1df01:	test   eax,eax
   1df03:	jne    1df0e <wget_http_add_credentials+0x18e>
   1df05:	mov    QWORD PTR [rsp+0x38],0x0
   1df0e:	mov    rdi,QWORD PTR [r13+0x8]
   1df12:	lea    rdx,[rsp+0x40]
   1df17:	lea    rsi,[rip+0x2e82b]        # 4c749 <maybe+0x4a9>
   1df1e:	call   10520 <wget_hashmap_get@plt>
   1df23:	test   eax,eax
   1df25:	jne    1df30 <wget_http_add_credentials+0x1b0>
   1df27:	mov    QWORD PTR [rsp+0x40],0x0
   1df30:	mov    rdi,QWORD PTR [r13+0x8]
   1df34:	lea    rdx,[rsp+0x48]
   1df39:	lea    rsi,[rip+0x2e80d]        # 4c74d <maybe+0x4ad>
   1df40:	call   10520 <wget_hashmap_get@plt>
   1df45:	test   eax,eax
   1df47:	jne    1df52 <wget_http_add_credentials+0x1d2>
   1df49:	mov    QWORD PTR [rsp+0x48],0x0
   1df52:	mov    r13,QWORD PTR [rsp+0x40]
   1df57:	test   r13,r13
   1df5a:	je     1df86 <wget_http_add_credentials+0x206>
   1df5c:	lea    rsi,[rip+0x2e7f4]        # 4c757 <maybe+0x4b7>
   1df63:	mov    rdi,r13
   1df66:	call   12590 <wget_strcasecmp_ascii@plt>
   1df6b:	test   eax,eax
   1df6d:	je     1df86 <wget_http_add_credentials+0x206>
   1df6f:	lea    rsi,[rip+0x2e7e6]        # 4c75c <maybe+0x4bc>
   1df76:	mov    rdi,r13
   1df79:	call   12590 <wget_strcasecmp_ascii@plt>
   1df7e:	test   eax,eax
   1df80:	jne    1e2f8 <wget_http_add_credentials+0x578>
   1df86:	mov    r14,QWORD PTR [rsp+0x48]
   1df8b:	lea    rsi,[rip+0x2e7d3]        # 4c765 <maybe+0x4c5>
   1df92:	mov    rdi,r14
   1df95:	call   12590 <wget_strcasecmp_ascii@plt>
   1df9a:	test   eax,eax
   1df9c:	je     1e030 <wget_http_add_credentials+0x2b0>
   1dfa2:	lea    rsi,[rip+0x2e7c0]        # 4c769 <maybe+0x4c9>
   1dfa9:	mov    rdi,r14
   1dfac:	call   12590 <wget_strcasecmp_ascii@plt>
   1dfb1:	test   eax,eax
   1dfb3:	je     1e030 <wget_http_add_credentials+0x2b0>
   1dfb5:	test   r14,r14
   1dfb8:	je     1e030 <wget_http_add_credentials+0x2b0>
   1dfba:	lea    rsi,[rip+0x2e7b1]        # 4c772 <maybe+0x4d2>
   1dfc1:	mov    rdi,r14
   1dfc4:	call   12590 <wget_strcasecmp_ascii@plt>
   1dfc9:	test   eax,eax
   1dfcb:	je     1e2e8 <wget_http_add_credentials+0x568>
   1dfd1:	lea    rsi,[rip+0x2e7a2]        # 4c77a <maybe+0x4da>
   1dfd8:	mov    rdi,r14
   1dfdb:	mov    r13d,0x5
   1dfe1:	call   12590 <wget_strcasecmp_ascii@plt>
   1dfe6:	test   eax,eax
   1dfe8:	je     1e036 <wget_http_add_credentials+0x2b6>
   1dfea:	xor    edi,edi
   1dfec:	mov    edx,0x5
   1dff1:	lea    rsi,[rip+0x2e78f]        # 4c787 <maybe+0x4e7>
   1dff8:	call   10f90 <dcgettext@plt>
   1dffd:	mov    rsi,r14
   1e000:	mov    rdi,rax
   1e003:	xor    eax,eax
   1e005:	call   11ea0 <wget_error_printf@plt>
   1e00a:	jmp    1ddfe <wget_http_add_credentials+0x7e>
   1e00f:	nop
   1e010:	lea    rsi,[rip+0x2e704]        # 4c71b <maybe+0x47b>
   1e017:	mov    rdi,r12
   1e01a:	xor    eax,eax
   1e01c:	call   12050 <wget_http_add_header_printf@plt>
   1e021:	jmp    1de68 <wget_http_add_credentials+0xe8>
   1e026:	cs nop WORD PTR [rax+rax*1+0x0]
   1e030:	mov    r13d,0x1
   1e036:	mov    r9,QWORD PTR [rsp+0x28]
   1e03b:	test   r9,r9
   1e03e:	mov    QWORD PTR [rsp+0x8],r9
   1e043:	je     1ddfe <wget_http_add_credentials+0x7e>
   1e049:	cmp    QWORD PTR [rsp+0x38],0x0
   1e04f:	je     1ddfe <wget_http_add_credentials+0x7e>
   1e055:	pxor   xmm0,xmm0
   1e059:	mov    edi,r13d
   1e05c:	movaps XMMWORD PTR [rsp+0x70],xmm0
   1e061:	call   10880 <wget_hash_get_len@plt>
   1e066:	lea    r10d,[rax+rax*1+0x1]
   1e06b:	movsxd r14,r10d
   1e06e:	cmp    r14,0x41
   1e072:	ja     1ddfe <wget_http_add_credentials+0x7e>
   1e078:	lea    rsi,[rsp+0x80]
   1e080:	mov    r8,rbp
   1e083:	mov    rdx,r14
   1e086:	xor    eax,eax
   1e088:	mov    QWORD PTR [rsp+0x10],rsi
   1e08d:	sub    rsp,0x8
   1e091:	mov    edi,r13d
   1e094:	push   r15
   1e096:	lea    r15,[rip+0x2e722]        # 4c7bf <maybe+0x51f>
   1e09d:	mov    r9,QWORD PTR [rsp+0x18]
   1e0a2:	mov    rcx,r15
   1e0a5:	call   11b30 <wget_hash_printf_hex@plt>
   1e0aa:	mov    rdi,QWORD PTR [rsp+0x58]
   1e0af:	lea    rsi,[rip+0x2e6b3]        # 4c769 <maybe+0x4c9>
   1e0b6:	mov    QWORD PTR [rsp+0x18],rdi
   1e0bb:	call   12590 <wget_strcasecmp_ascii@plt>
   1e0c0:	pop    r10
   1e0c2:	pop    r11
   1e0c4:	test   eax,eax
   1e0c6:	je     1e0dd <wget_http_add_credentials+0x35d>
   1e0c8:	mov    rdi,QWORD PTR [rsp+0x8]
   1e0cd:	lea    rsi,[rip+0x2e6a6]        # 4c77a <maybe+0x4da>
   1e0d4:	call   12590 <wget_strcasecmp_ascii@plt>
   1e0d9:	test   eax,eax
   1e0db:	jne    1e12c <wget_http_add_credentials+0x3ac>
   1e0dd:	call   12410 <wget_random@plt>
   1e0e2:	lea    rdi,[rsp+0x70]
   1e0e7:	mov    esi,0x10
   1e0ec:	lea    rdx,[rip+0x2e6b1]        # 4c7a4 <maybe+0x504>
   1e0f3:	mov    ecx,eax
   1e0f5:	xor    eax,eax
   1e0f7:	mov    QWORD PTR [rsp+0x8],rdi
   1e0fc:	call   119f0 <wget_snprintf@plt>
   1e101:	sub    rsp,0x8
   1e105:	mov    rcx,r15
   1e108:	mov    rdx,r14
   1e10b:	mov    rdi,QWORD PTR [rsp+0x10]
   1e110:	xor    eax,eax
   1e112:	push   rdi
   1e113:	mov    rsi,QWORD PTR [rsp+0x20]
   1e118:	mov    edi,r13d
   1e11b:	mov    r9,QWORD PTR [rsp+0x48]
   1e120:	mov    r8,rsi
   1e123:	call   11b30 <wget_hash_printf_hex@plt>
   1e128:	pop    r8
   1e12a:	pop    r9
   1e12c:	lea    r11,[rsp+0xd0]
   1e134:	xor    eax,eax
   1e136:	mov    rdx,r14
   1e139:	mov    edi,r13d
   1e13c:	mov    r9,QWORD PTR [r12+0x38]
   1e141:	mov    rsi,r11
   1e144:	lea    r8,[r12+0x1c8]
   1e14c:	lea    rcx,[rip+0x2e656]        # 4c7a9 <maybe+0x509>
   1e153:	mov    QWORD PTR [rsp+0x8],r11
   1e158:	call   11b30 <wget_hash_printf_hex@plt>
   1e15d:	mov    rax,QWORD PTR [rsp+0x40]
   1e162:	mov    r11,QWORD PTR [rsp+0x8]
   1e167:	test   rax,rax
   1e16a:	je     1e31d <wget_http_add_credentials+0x59d>
   1e170:	cmp    BYTE PTR [rsp+0x70],0x0
   1e175:	lea    rdi,[rsp+0x70]
   1e17a:	je     1e2a8 <wget_http_add_credentials+0x528>
   1e180:	lea    rsi,[rsp+0x120]
   1e188:	sub    rsp,0x8
   1e18c:	lea    rcx,[rip+0x2e61d]        # 4c7b0 <maybe+0x510>
   1e193:	mov    rdx,r14
   1e196:	mov    QWORD PTR [rsp+0x10],rsi
   1e19b:	push   r11
   1e19d:	push   rax
   1e19e:	xor    eax,eax
   1e1a0:	push   rdi
   1e1a1:	mov    r9,QWORD PTR [rsp+0x58]
   1e1a6:	mov    edi,r13d
   1e1a9:	mov    r8,QWORD PTR [rsp+0x30]
   1e1ae:	call   11b30 <wget_hash_printf_hex@plt>
   1e1b3:	add    rsp,0x20
   1e1b7:	lea    r13,[rsp+0x50]
   1e1bc:	mov    edx,0x100
   1e1c1:	xor    esi,esi
   1e1c3:	mov    rdi,r13
   1e1c6:	call   108d0 <wget_buffer_init@plt>
   1e1cb:	sub    rsp,0x8
   1e1cf:	mov    rdx,rbp
   1e1d2:	mov    rdi,r13
   1e1d5:	push   QWORD PTR [rsp+0x10]
   1e1d9:	mov    r8,QWORD PTR [rsp+0x48]
   1e1de:	xor    eax,eax
   1e1e0:	lea    rsi,[rip+0x2e2d1]        # 4c4b8 <maybe+0x218>
   1e1e7:	mov    rcx,QWORD PTR [rsp+0x38]
   1e1ec:	mov    r9,QWORD PTR [r12+0x38]
   1e1f1:	call   108c0 <wget_buffer_printf@plt>
   1e1f6:	mov    rdi,QWORD PTR [rsp+0x50]
   1e1fb:	lea    rsi,[rip+0x2e555]        # 4c757 <maybe+0x4b7>
   1e202:	call   12590 <wget_strcasecmp_ascii@plt>
   1e207:	pop    rdx
   1e208:	pop    rcx
   1e209:	test   eax,eax
   1e20b:	je     1e288 <wget_http_add_credentials+0x508>
   1e20d:	mov    rdx,QWORD PTR [rsp+0x30]
   1e212:	test   rdx,rdx
   1e215:	je     1e228 <wget_http_add_credentials+0x4a8>
   1e217:	lea    rsi,[rip+0x2e5aa]        # 4c7c8 <maybe+0x528>
   1e21e:	mov    rdi,r13
   1e221:	xor    eax,eax
   1e223:	call   11880 <wget_buffer_printf_append@plt>
   1e228:	mov    rdx,QWORD PTR [rsp+0x48]
   1e22d:	test   rdx,rdx
   1e230:	je     1e243 <wget_http_add_credentials+0x4c3>
   1e232:	lea    rsi,[rip+0x2e59d]        # 4c7d6 <maybe+0x536>
   1e239:	mov    rdi,r13
   1e23c:	xor    eax,eax
   1e23e:	call   11880 <wget_buffer_printf_append@plt>
   1e243:	mov    rdx,QWORD PTR [rsp+0x50]
   1e248:	test   ebx,ebx
   1e24a:	je     1e270 <wget_http_add_credentials+0x4f0>
   1e24c:	lea    rsi,[rip+0x2e4c8]        # 4c71b <maybe+0x47b>
   1e253:	mov    rdi,r12
   1e256:	call   11f20 <wget_http_add_header@plt>
   1e25b:	mov    rdi,r13
   1e25e:	call   11300 <wget_buffer_deinit@plt>
   1e263:	jmp    1ddfe <wget_http_add_credentials+0x7e>
   1e268:	nop    DWORD PTR [rax+rax*1+0x0]
   1e270:	lea    rsi,[rip+0x2e4aa]        # 4c721 <maybe+0x481>
   1e277:	mov    rdi,r12
   1e27a:	call   11f20 <wget_http_add_header@plt>
   1e27f:	jmp    1e25b <wget_http_add_credentials+0x4db>
   1e281:	nop    DWORD PTR [rax+0x0]
   1e288:	lea    rdx,[rsp+0x70]
   1e28d:	lea    rsi,[rip+0x2e26c]        # 4c500 <maybe+0x260>
   1e294:	mov    rdi,r13
   1e297:	call   11880 <wget_buffer_printf_append@plt>
   1e29c:	jmp    1e20d <wget_http_add_credentials+0x48d>
   1e2a1:	nop    DWORD PTR [rax+0x0]
   1e2a8:	mov    QWORD PTR [rsp+0x18],r11
   1e2ad:	mov    QWORD PTR [rsp+0x8],rdi
   1e2b2:	call   12410 <wget_random@plt>
   1e2b7:	mov    rdi,QWORD PTR [rsp+0x8]
   1e2bc:	mov    esi,0x10
   1e2c1:	lea    rdx,[rip+0x2e4dc]        # 4c7a4 <maybe+0x504>
   1e2c8:	mov    ecx,eax
   1e2ca:	xor    eax,eax
   1e2cc:	call   119f0 <wget_snprintf@plt>
   1e2d1:	mov    rax,QWORD PTR [rsp+0x40]
   1e2d6:	mov    r11,QWORD PTR [rsp+0x18]
   1e2db:	mov    rdi,QWORD PTR [rsp+0x8]
   1e2e0:	jmp    1e180 <wget_http_add_credentials+0x400>
   1e2e5:	nop    DWORD PTR [rax]
   1e2e8:	mov    r13d,0x5
   1e2ee:	jmp    1e036 <wget_http_add_credentials+0x2b6>
   1e2f3:	nop    DWORD PTR [rax+rax*1+0x0]
   1e2f8:	xor    edi,edi
   1e2fa:	mov    edx,0x5
   1e2ff:	lea    rsi,[rip+0x2e182]        # 4c488 <maybe+0x1e8>
   1e306:	call   10f90 <dcgettext@plt>
   1e30b:	mov    rsi,r13
   1e30e:	mov    rdi,rax
   1e311:	xor    eax,eax
   1e313:	call   11ea0 <wget_error_printf@plt>
   1e318:	jmp    1ddfe <wget_http_add_credentials+0x7e>
   1e31d:	lea    rax,[rsp+0x120]
   1e325:	sub    rsp,0x8
   1e329:	mov    edi,r13d
   1e32c:	mov    rcx,r15
   1e32f:	mov    QWORD PTR [rsp+0x10],rax
   1e334:	mov    rsi,rax
   1e337:	mov    rdx,r14
   1e33a:	xor    eax,eax
   1e33c:	push   r11
   1e33e:	mov    r9,QWORD PTR [rsp+0x48]
   1e343:	mov    r8,QWORD PTR [rsp+0x20]
   1e348:	call   11b30 <wget_hash_printf_hex@plt>
   1e34d:	pop    rsi
   1e34e:	pop    rdi
   1e34f:	jmp    1e1b7 <wget_http_add_credentials+0x437>
   1e354:	call   11760 <__stack_chk_fail@plt>
   1e359:	nop    DWORD PTR [rax+0x0]

000000000001e360 <wget_http_close>:
   1e360:	endbr64 
   1e364:	cmp    QWORD PTR [rdi],0x0
   1e368:	je     1e3e8 <wget_http_close+0x88>
   1e36a:	push   rbx
   1e36b:	xor    eax,eax
   1e36d:	mov    rbx,rdi
   1e370:	lea    rdi,[rip+0x2e46e]        # 4c7e5 <maybe+0x545>
   1e377:	call   114b0 <wget_debug_printf@plt>
   1e37c:	mov    rdi,QWORD PTR [rbx]
   1e37f:	call   127e0 <wget_tcp_deinit@plt>
   1e384:	mov    rdi,QWORD PTR [rbx]
   1e387:	mov    r8,QWORD PTR [rdi+0x8]
   1e38b:	test   r8,r8
   1e38e:	je     1e3a7 <wget_http_close+0x47>
   1e390:	mov    rax,QWORD PTR [rip+0x57c51]        # 75fe8 <wget_free@@Base-0x1328>
   1e397:	mov    rdi,r8
   1e39a:	call   QWORD PTR [rax]
   1e39c:	mov    rdi,QWORD PTR [rbx]
   1e39f:	mov    QWORD PTR [rdi+0x8],0x0
   1e3a7:	add    rdi,0x10
   1e3ab:	call   111f0 <wget_buffer_free@plt>
   1e3b0:	mov    rax,QWORD PTR [rbx]
   1e3b3:	mov    rdi,QWORD PTR [rax+0x18]
   1e3b7:	call   10910 <wget_vector_clear_nofree@plt>
   1e3bc:	mov    rax,QWORD PTR [rbx]
   1e3bf:	lea    rdi,[rax+0x18]
   1e3c3:	call   125e0 <wget_vector_free@plt>
   1e3c8:	mov    rdi,QWORD PTR [rbx]
   1e3cb:	test   rdi,rdi
   1e3ce:	je     1e3e0 <wget_http_close+0x80>
   1e3d0:	mov    rax,QWORD PTR [rip+0x57c11]        # 75fe8 <wget_free@@Base-0x1328>
   1e3d7:	call   QWORD PTR [rax]
   1e3d9:	mov    QWORD PTR [rbx],0x0
   1e3e0:	pop    rbx
   1e3e1:	ret    
   1e3e2:	nop    WORD PTR [rax+rax*1+0x0]
   1e3e8:	ret    
   1e3e9:	nop    DWORD PTR [rax+0x0]

000000000001e3f0 <wget_http_request_to_buffer>:
   1e3f0:	endbr64 
   1e3f4:	push   r15
   1e3f6:	push   r14
   1e3f8:	push   r13
   1e3fa:	mov    r13,rdi
   1e3fd:	push   r12
   1e3ff:	mov    r12d,ecx
   1e402:	push   rbp
   1e403:	mov    ebp,edx
   1e405:	push   rbx
   1e406:	mov    rbx,rsi
   1e409:	sub    rsp,0x18
   1e40d:	cmp    QWORD PTR [rdi+0x8],0x0
   1e412:	je     1e610 <wget_http_request_to_buffer+0x220>
   1e418:	cmp    QWORD PTR [rdi+0x78],0x1
   1e41d:	sbb    eax,eax
   1e41f:	add    eax,0x1
   1e422:	cmp    QWORD PTR [rdi+0x78],0x1
   1e427:	mov    BYTE PTR [rsp+0xf],al
   1e42b:	sbb    eax,eax
   1e42d:	add    eax,0x1
   1e430:	mov    DWORD PTR [rsp+0x8],eax
   1e434:	lea    rsi,[r13+0x1c8]
   1e43b:	mov    rdi,rbx
   1e43e:	call   11bf0 <wget_buffer_strcpy@plt>
   1e443:	mov    edx,0x1
   1e448:	lea    rsi,[rip+0x2fe20]        # 4e26f <powers.0+0x5af>
   1e44f:	mov    rdi,rbx
   1e452:	call   10ea0 <wget_buffer_memcat@plt>
   1e457:	test   ebp,ebp
   1e459:	jne    1e5c0 <wget_http_request_to_buffer+0x1d0>
   1e45f:	mov    edx,0x1
   1e464:	lea    rsi,[rip+0x2ecd5]        # 4d140 <__func__.4+0x20>
   1e46b:	mov    rdi,rbx
   1e46e:	xor    r12d,r12d
   1e471:	call   10ea0 <wget_buffer_memcat@plt>
   1e476:	lea    rsi,[r13+0x38]
   1e47a:	mov    rdi,rbx
   1e47d:	lea    r15,[rip+0x2e3c7]        # 4c84b <maybe+0x5ab>
   1e484:	call   10a30 <wget_buffer_bufcat@plt>
   1e489:	mov    edx,0xb
   1e48e:	mov    rdi,rbx
   1e491:	lea    rsi,[rip+0x2e369]        # 4c801 <maybe+0x561>
   1e498:	call   10ea0 <wget_buffer_memcat@plt>
   1e49d:	lea    r14,[rip+0x2fdca]        # 4e26e <powers.0+0x5ae>
   1e4a4:	mov    BYTE PTR [rsp+0xe],0x0
   1e4a9:	jmp    1e532 <wget_http_request_to_buffer+0x142>
   1e4ae:	xchg   ax,ax
   1e4b0:	mov    rdi,rbp
   1e4b3:	mov    esi,r12d
   1e4b6:	call   10c00 <wget_vector_get@plt>
   1e4bb:	mov    rdi,rbx
   1e4be:	mov    rsi,QWORD PTR [rax]
   1e4c1:	mov    rbp,rax
   1e4c4:	call   10e40 <wget_buffer_strcat@plt>
   1e4c9:	mov    edx,0x2
   1e4ce:	mov    rsi,r14
   1e4d1:	mov    rdi,rbx
   1e4d4:	call   10ea0 <wget_buffer_memcat@plt>
   1e4d9:	mov    rsi,QWORD PTR [rbp+0x8]
   1e4dd:	mov    rdi,rbx
   1e4e0:	call   10e40 <wget_buffer_strcat@plt>
   1e4e5:	mov    rdx,QWORD PTR [rbx]
   1e4e8:	mov    rax,QWORD PTR [rbx+0x8]
   1e4ec:	cmp    BYTE PTR [rdx+rax*1-0x1],0xa
   1e4f1:	je     1e503 <wget_http_request_to_buffer+0x113>
   1e4f3:	mov    edx,0x2
   1e4f8:	mov    rsi,r15
   1e4fb:	mov    rdi,rbx
   1e4fe:	call   10ea0 <wget_buffer_memcat@plt>
   1e503:	mov    eax,DWORD PTR [rsp+0x8]
   1e507:	test   eax,eax
   1e509:	je     1e52e <wget_http_request_to_buffer+0x13e>
   1e50b:	mov    rdi,QWORD PTR [rbp+0x0]
   1e50f:	lea    rsi,[rip+0x2e2f7]        # 4c80d <maybe+0x56d>
   1e516:	call   12590 <wget_strcasecmp_ascii@plt>
   1e51b:	mov    ecx,0x1
   1e520:	test   eax,eax
   1e522:	movzx  eax,BYTE PTR [rsp+0xe]
   1e527:	cmove  eax,ecx
   1e52a:	mov    BYTE PTR [rsp+0xe],al
   1e52e:	add    r12d,0x1
   1e532:	mov    rbp,QWORD PTR [r13+0x0]
   1e536:	mov    rdi,rbp
   1e539:	call   10e90 <wget_vector_size@plt>
   1e53e:	cmp    eax,r12d
   1e541:	jg     1e4b0 <wget_http_request_to_buffer+0xc0>
   1e547:	test   BYTE PTR [rsp+0xe],0x1
   1e54c:	jne    1e555 <wget_http_request_to_buffer+0x165>
   1e54e:	cmp    BYTE PTR [rsp+0xf],0x0
   1e553:	jne    1e590 <wget_http_request_to_buffer+0x1a0>
   1e555:	mov    rsi,r15
   1e558:	mov    edx,0x2
   1e55d:	mov    rdi,rbx
   1e560:	call   10ea0 <wget_buffer_memcat@plt>
   1e565:	mov    rsi,QWORD PTR [r13+0x8]
   1e569:	test   rsi,rsi
   1e56c:	je     1e577 <wget_http_request_to_buffer+0x187>
   1e56e:	mov    rdx,QWORD PTR [r13+0x78]
   1e572:	test   rdx,rdx
   1e575:	jne    1e5b0 <wget_http_request_to_buffer+0x1c0>
   1e577:	mov    rax,QWORD PTR [rbx+0x8]
   1e57b:	add    rsp,0x18
   1e57f:	pop    rbx
   1e580:	pop    rbp
   1e581:	pop    r12
   1e583:	pop    r13
   1e585:	pop    r14
   1e587:	pop    r15
   1e589:	ret    
   1e58a:	nop    WORD PTR [rax+rax*1+0x0]
   1e590:	mov    rdx,QWORD PTR [r13+0x78]
   1e594:	lea    rsi,[rip+0x2e281]        # 4c81c <maybe+0x57c>
   1e59b:	mov    rdi,rbx
   1e59e:	xor    eax,eax
   1e5a0:	call   11880 <wget_buffer_printf_append@plt>
   1e5a5:	jmp    1e555 <wget_http_request_to_buffer+0x165>
   1e5a7:	nop    WORD PTR [rax+rax*1+0x0]
   1e5b0:	mov    rdi,rbx
   1e5b3:	call   10ea0 <wget_buffer_memcat@plt>
   1e5b8:	jmp    1e577 <wget_http_request_to_buffer+0x187>
   1e5ba:	nop    WORD PTR [rax+rax*1+0x0]
   1e5c0:	mov    edi,DWORD PTR [r13+0x84]
   1e5c7:	call   11820 <wget_iri_scheme_get_name@plt>
   1e5cc:	mov    rdi,rbx
   1e5cf:	mov    rsi,rax
   1e5d2:	call   10e40 <wget_buffer_strcat@plt>
   1e5d7:	mov    edx,0x3
   1e5dc:	mov    rdi,rbx
   1e5df:	lea    rsi,[rip+0x2e213]        # 4c7f9 <maybe+0x559>
   1e5e6:	call   10ea0 <wget_buffer_memcat@plt>
   1e5eb:	lea    rsi,[r13+0x58]
   1e5ef:	mov    rdi,rbx
   1e5f2:	call   10a30 <wget_buffer_bufcat@plt>
   1e5f7:	mov    edx,r12d
   1e5fa:	mov    rdi,rbx
   1e5fd:	xor    eax,eax
   1e5ff:	lea    rsi,[rip+0x2e1f7]        # 4c7fd <maybe+0x55d>
   1e606:	call   11880 <wget_buffer_printf_append@plt>
   1e60b:	jmp    1e45f <wget_http_request_to_buffer+0x6f>
   1e610:	mov    BYTE PTR [rsp+0xf],0x0
   1e615:	mov    DWORD PTR [rsp+0x8],0x0
   1e61d:	jmp    1e434 <wget_http_request_to_buffer+0x44>
   1e622:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1e62d:	nop    DWORD PTR [rax]

000000000001e630 <wget_http_send_request>:
   1e630:	endbr64 
   1e634:	push   r13
   1e636:	push   r12
   1e638:	push   rbp
   1e639:	mov    rbp,rsi
   1e63c:	push   rbx
   1e63d:	mov    rbx,rdi
   1e640:	sub    rsp,0x8
   1e644:	movzx  edx,BYTE PTR [rdi+0x33]
   1e648:	movzx  ecx,WORD PTR [rdi+0x30]
   1e64c:	mov    rsi,QWORD PTR [rdi+0x10]
   1e650:	mov    rdi,rbp
   1e653:	shr    dl,0x2
   1e656:	and    edx,0x1
   1e659:	call   11840 <wget_http_request_to_buffer@plt>
   1e65e:	test   rax,rax
   1e661:	js     1e707 <wget_http_send_request+0xd7>
   1e667:	mov    r12,rax
   1e66a:	call   11020 <wget_get_timemillis@plt>
   1e66f:	mov    rdi,QWORD PTR [rbx]
   1e672:	mov    rdx,r12
   1e675:	mov    QWORD PTR [rbp+0x1d8],rax
   1e67c:	mov    rax,QWORD PTR [rbx+0x10]
   1e680:	mov    rsi,QWORD PTR [rax]
   1e683:	call   105f0 <wget_tcp_write@plt>
   1e688:	mov    r13,rax
   1e68b:	cmp    rax,r12
   1e68e:	jne    1e700 <wget_http_send_request+0xd0>
   1e690:	mov    rdi,QWORD PTR [rbx+0x18]
   1e694:	mov    rsi,rbp
   1e697:	call   11290 <wget_vector_add@plt>
   1e69c:	test   BYTE PTR [rbp+0x1d0],0x4
   1e6a3:	mov    rax,QWORD PTR [rbx+0x10]
   1e6a7:	jne    1e6d0 <wget_http_send_request+0xa0>
   1e6a9:	mov    rcx,QWORD PTR [rax]
   1e6ac:	mov    edx,DWORD PTR [rax+0x8]
   1e6af:	mov    rsi,r13
   1e6b2:	xor    eax,eax
   1e6b4:	lea    rdi,[rip+0x2e177]        # 4c832 <maybe+0x592>
   1e6bb:	call   114b0 <wget_debug_printf@plt>
   1e6c0:	xor    eax,eax
   1e6c2:	add    rsp,0x8
   1e6c6:	pop    rbx
   1e6c7:	pop    rbp
   1e6c8:	pop    r12
   1e6ca:	pop    r13
   1e6cc:	ret    
   1e6cd:	nop    DWORD PTR [rax]
   1e6d0:	mov    rcx,QWORD PTR [rax]
   1e6d3:	mov    rdx,QWORD PTR [rax+0x8]
   1e6d7:	xor    eax,eax
   1e6d9:	mov    rsi,r13
   1e6dc:	sub    edx,DWORD PTR [rbp+0x78]
   1e6df:	lea    rdi,[rip+0x2de6a]        # 4c550 <maybe+0x2b0>
   1e6e6:	call   114b0 <wget_debug_printf@plt>
   1e6eb:	add    rsp,0x8
   1e6ef:	xor    eax,eax
   1e6f1:	pop    rbx
   1e6f2:	pop    rbp
   1e6f3:	pop    r12
   1e6f5:	pop    r13
   1e6f7:	ret    
   1e6f8:	nop    DWORD PTR [rax+rax*1+0x0]
   1e700:	mov    eax,0xffffffff
   1e705:	jmp    1e6c2 <wget_http_send_request+0x92>
   1e707:	mov    edx,0x5
   1e70c:	lea    rsi,[rip+0x2de15]        # 4c528 <maybe+0x288>
   1e713:	xor    edi,edi
   1e715:	call   10f90 <dcgettext@plt>
   1e71a:	mov    rdi,rax
   1e71d:	xor    eax,eax
   1e71f:	call   11ea0 <wget_error_printf@plt>
   1e724:	mov    eax,0xffffffff
   1e729:	jmp    1e6c2 <wget_http_send_request+0x92>
   1e72b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001e730 <wget_http_get_response_cb>:
   1e730:	endbr64 
   1e734:	push   r15
   1e736:	xor    esi,esi
   1e738:	push   r14
   1e73a:	push   r13
   1e73c:	push   r12
   1e73e:	mov    r12,rdi
   1e741:	push   rbp
   1e742:	push   rbx
   1e743:	sub    rsp,0x48
   1e747:	mov    rbp,QWORD PTR [rdi+0x18]
   1e74b:	mov    rax,QWORD PTR fs:0x28
   1e754:	mov    QWORD PTR [rsp+0x38],rax
   1e759:	xor    eax,eax
   1e75b:	mov    rdi,rbp
   1e75e:	call   10c00 <wget_vector_get@plt>
   1e763:	mov    rdi,rbp
   1e766:	mov    r13,rax
   1e769:	call   10e90 <wget_vector_size@plt>
   1e76e:	mov    rsi,r13
   1e771:	lea    rdi,[rip+0x2de00]        # 4c578 <maybe+0x2d8>
   1e778:	mov    edx,eax
   1e77a:	xor    eax,eax
   1e77c:	call   114b0 <wget_debug_printf@plt>
   1e781:	test   r13,r13
   1e784:	je     1e848 <wget_http_get_response_cb+0x118>
   1e78a:	mov    rdi,QWORD PTR [r12+0x18]
   1e78f:	xor    esi,esi
   1e791:	xor    r14d,r14d
   1e794:	call   116b0 <wget_vector_remove_nofree@plt>
   1e799:	mov    rax,QWORD PTR [r12+0x10]
   1e79e:	mov    rbp,QWORD PTR [rax]
   1e7a1:	mov    rbx,QWORD PTR [rax+0x10]
   1e7a5:	jmp    1e7b3 <wget_http_get_response_cb+0x83>
   1e7a7:	nop    WORD PTR [rax+rax*1+0x0]
   1e7b0:	mov    r14,r15
   1e7b3:	mov    rdi,QWORD PTR [r12]
   1e7b7:	mov    rdx,rbx
   1e7ba:	lea    rsi,[rbp+r14*1+0x0]
   1e7bf:	sub    rdx,r14
   1e7c2:	call   114d0 <wget_tcp_read@plt>
   1e7c7:	mov    r15,rax
   1e7ca:	test   rax,rax
   1e7cd:	jle    1e848 <wget_http_get_response_cb+0x118>
   1e7cf:	call   11020 <wget_get_timemillis@plt>
   1e7d4:	add    r15,r14
   1e7d7:	mov    QWORD PTR [r13+0x1e0],rax
   1e7de:	mov    BYTE PTR [rbp+r15*1+0x0],0x0
   1e7e4:	cmp    r15,0x3
   1e7e8:	jle    1e7b0 <wget_http_get_response_cb+0x80>
   1e7ea:	cmp    r14,0x4
   1e7ee:	lea    rdi,[rbp+r14*1-0x3]
   1e7f3:	lea    rsi,[rip+0x2e04f]        # 4c849 <maybe+0x5a9>
   1e7fa:	cmovle rdi,rbp
   1e7fe:	call   10750 <strstr@plt>
   1e803:	mov    r14,rax
   1e806:	test   rax,rax
   1e809:	jne    1e888 <wget_http_get_response_cb+0x158>
   1e80b:	lea    rax,[r15+0x400]
   1e812:	cmp    rax,rbx
   1e815:	jbe    1e7b0 <wget_http_get_response_cb+0x80>
   1e817:	add    rbx,0x400
   1e81e:	mov    rdi,QWORD PTR [r12+0x10]
   1e823:	mov    rsi,rbx
   1e826:	call   118b0 <wget_buffer_ensure_capacity@plt>
   1e82b:	test   eax,eax
   1e82d:	jne    1eb60 <wget_http_get_response_cb+0x430>
   1e833:	mov    rax,QWORD PTR [r12+0x10]
   1e838:	mov    rbp,QWORD PTR [rax]
   1e83b:	mov    rbx,QWORD PTR [rax+0x10]
   1e83f:	jmp    1e7b0 <wget_http_get_response_cb+0x80>
   1e844:	nop    DWORD PTR [rax+0x0]
   1e848:	mov    QWORD PTR [rsp+0x8],0x0
   1e851:	xor    r8d,r8d
   1e854:	mov    rdi,r8
   1e857:	call   10c60 <wget_decompress_close@plt>
   1e85c:	mov    rax,QWORD PTR [rsp+0x38]
   1e861:	sub    rax,QWORD PTR fs:0x28
   1e86a:	jne    1f319 <wget_http_get_response_cb+0xbe9>
   1e870:	mov    rax,QWORD PTR [rsp+0x8]
   1e875:	add    rsp,0x48
   1e879:	pop    rbx
   1e87a:	pop    rbp
   1e87b:	pop    r12
   1e87d:	pop    r13
   1e87f:	pop    r14
   1e881:	pop    r15
   1e883:	ret    
   1e884:	nop    DWORD PTR [rax+0x0]
   1e888:	mov    BYTE PTR [rax],0x0
   1e88b:	mov    r9,rax
   1e88e:	mov    rdx,rbp
   1e891:	lea    rdi,[rip+0x2dfb6]        # 4c84e <maybe+0x5ae>
   1e898:	sub    r9,rbp
   1e89b:	mov    QWORD PTR [rsp+0x8],rax
   1e8a0:	xor    eax,eax
   1e8a2:	mov    rsi,r9
   1e8a5:	mov    QWORD PTR [rsp+0x10],r9
   1e8aa:	call   114b0 <wget_debug_printf@plt>
   1e8af:	test   BYTE PTR [r13+0x1d0],0x1
   1e8b7:	mov    r8,QWORD PTR [rsp+0x8]
   1e8bc:	jne    1eac0 <wget_http_get_response_cb+0x390>
   1e8c2:	mov    rdi,rbp
   1e8c5:	mov    QWORD PTR [rsp+0x10],r8
   1e8ca:	call   11dd0 <wget_http_parse_response_header@plt>
   1e8cf:	mov    r8,QWORD PTR [rsp+0x10]
   1e8d4:	test   rax,rax
   1e8d7:	mov    QWORD PTR [rsp+0x8],rax
   1e8dc:	je     1e848 <wget_http_get_response_cb+0x118>
   1e8e2:	mov    rsi,QWORD PTR [rsp+0x8]
   1e8e7:	mov    rax,QWORD PTR [rip+0x58b8a]        # 77478 <server_stats_callback>
   1e8ee:	mov    QWORD PTR [rsi],r13
   1e8f1:	test   rax,rax
   1e8f4:	je     1e905 <wget_http_get_response_cb+0x1d5>
   1e8f6:	mov    QWORD PTR [rsp+0x10],r8
   1e8fb:	mov    rdi,r12
   1e8fe:	call   rax
   1e900:	mov    r8,QWORD PTR [rsp+0x10]
   1e905:	mov    rax,QWORD PTR [r13+0x10]
   1e909:	test   rax,rax
   1e90c:	je     1e923 <wget_http_get_response_cb+0x1f3>
   1e90e:	mov    rsi,QWORD PTR [r13+0x28]
   1e912:	mov    rdi,QWORD PTR [rsp+0x8]
   1e917:	mov    QWORD PTR [rsp+0x10],r8
   1e91c:	call   rax
   1e91e:	mov    r8,QWORD PTR [rsp+0x10]
   1e923:	lea    rdi,[r13+0x1c8]
   1e92a:	lea    rsi,[rip+0x2df3a]        # 4c86b <maybe+0x5cb>
   1e931:	mov    QWORD PTR [rsp+0x10],r8
   1e936:	call   12590 <wget_strcasecmp_ascii@plt>
   1e93b:	mov    r8,QWORD PTR [rsp+0x10]
   1e940:	test   eax,eax
   1e942:	je     1eb40 <wget_http_get_response_cb+0x410>
   1e948:	mov    rax,QWORD PTR [rsp+0x8]
   1e94d:	cmp    BYTE PTR [rax+0xc8],0x1
   1e954:	je     1eb98 <wget_http_get_response_cb+0x468>
   1e95a:	mov    rax,QWORD PTR [rsp+0x8]
   1e95f:	movzx  eax,WORD PTR [rax+0xc0]
   1e966:	cmp    ax,0x1a0
   1e96a:	je     1eb40 <wget_http_get_response_cb+0x410>
   1e970:	lea    edx,[rax-0x64]
   1e973:	cmp    dx,0x63
   1e977:	setbe  dl
   1e97a:	cmp    ax,0xcc
   1e97e:	sete   cl
   1e981:	or     dl,cl
   1e983:	jne    1eb40 <wget_http_get_response_cb+0x410>
   1e989:	cmp    ax,0x130
   1e98d:	je     1eb40 <wget_http_get_response_cb+0x410>
   1e993:	mov    rax,QWORD PTR [rsp+0x8]
   1e998:	mov    edx,DWORD PTR [rax+0xc4]
   1e99e:	test   edx,edx
   1e9a0:	jne    1e9ad <wget_http_get_response_cb+0x27d>
   1e9a2:	cmp    QWORD PTR [rax+0x70],0x0
   1e9a7:	je     1eb31 <wget_http_get_response_cb+0x401>
   1e9ad:	mov    r14,QWORD PTR [rsp+0x8]
   1e9b2:	lea    r9,[r8+0x4]
   1e9b6:	lea    rsi,[rip+0xffffffffffffea63]        # 1d420 <get_body>
   1e9bd:	mov    QWORD PTR [rsp+0x18],r9
   1e9c2:	movsx  edi,BYTE PTR [r14+0xc8]
   1e9ca:	mov    rdx,r14
   1e9cd:	call   10bc0 <wget_decompress_open@plt>
   1e9d2:	lea    rsi,[rip+0xffffffffffffece7]        # 1d6c0 <decompress_error_handler>
   1e9d9:	mov    rdi,rax
   1e9dc:	mov    QWORD PTR [rsp+0x10],rax
   1e9e1:	call   10a80 <wget_decompress_set_error_handler@plt>
   1e9e6:	mov    r9,QWORD PTR [rsp+0x18]
   1e9eb:	mov    rdi,rbp
   1e9ee:	mov    rax,r9
   1e9f1:	mov    rsi,r9
   1e9f4:	sub    rax,rbp
   1e9f7:	sub    r15,rax
   1e9fa:	mov    rdx,r15
   1e9fd:	call   12110 <memmove@plt>
   1ea02:	mov    BYTE PTR [rbp+r15*1+0x0],0x0
   1ea08:	mov    r8,QWORD PTR [rsp+0x10]
   1ea0d:	cmp    DWORD PTR [r14+0xc4],0x1
   1ea15:	mov    QWORD PTR [r14+0x78],r15
   1ea19:	je     1ec91 <wget_http_get_response_cb+0x561>
   1ea1f:	mov    rax,QWORD PTR [rsp+0x8]
   1ea24:	test   BYTE PTR [rax+0xcb],0x1
   1ea2b:	je     1ea3d <wget_http_get_response_cb+0x30d>
   1ea2d:	mov    rax,QWORD PTR [rax]
   1ea30:	test   BYTE PTR [rax+0x1d0],0x2
   1ea37:	je     1eed7 <wget_http_get_response_cb+0x7a7>
   1ea3d:	xor    eax,eax
   1ea3f:	lea    rdi,[rip+0x2def5]        # 4c93b <maybe+0x69b>
   1ea46:	mov    QWORD PTR [rsp+0x10],r8
   1ea4b:	call   114b0 <wget_debug_printf@plt>
   1ea50:	test   r15,r15
   1ea53:	mov    r8,QWORD PTR [rsp+0x10]
   1ea58:	jne    1ec79 <wget_http_get_response_cb+0x549>
   1ea5e:	mov    r13,QWORD PTR [rsp+0x8]
   1ea63:	mov    r14,r8
   1ea66:	test   BYTE PTR [r12+0x33],0x2
   1ea6c:	je     1eaa1 <wget_http_get_response_cb+0x371>
   1ea6e:	jmp    1eaad <wget_http_get_response_cb+0x37d>
   1ea70:	mov    rdi,QWORD PTR [r12]
   1ea74:	mov    rdx,rbx
   1ea77:	mov    rsi,rbp
   1ea7a:	call   114d0 <wget_tcp_read@plt>
   1ea7f:	mov    rdx,rax
   1ea82:	test   rax,rax
   1ea85:	jle    1eaaa <wget_http_get_response_cb+0x37a>
   1ea87:	add    QWORD PTR [r13+0x78],rdx
   1ea8b:	mov    rsi,rbp
   1ea8e:	mov    rdi,r14
   1ea91:	add    r15,rdx
   1ea94:	call   11340 <wget_decompress@plt>
   1ea99:	test   BYTE PTR [r12+0x33],0x2
   1ea9f:	jne    1eaaa <wget_http_get_response_cb+0x37a>
   1eaa1:	cmp    BYTE PTR [rip+0x58a08],0x0        # 774b0 <abort_indicator>
   1eaa8:	je     1ea70 <wget_http_get_response_cb+0x340>
   1eaaa:	mov    r8,r14
   1eaad:	mov    rax,QWORD PTR [rsp+0x8]
   1eab2:	mov    QWORD PTR [rax+0x70],r15
   1eab6:	jmp    1eb43 <wget_http_get_response_cb+0x413>
   1eabb:	nop    DWORD PTR [rax+rax*1+0x0]
   1eac0:	mov    r9,QWORD PTR [rsp+0x10]
   1eac5:	mov    QWORD PTR [rsp+0x18],r8
   1eaca:	lea    rdi,[r9+0x4]
   1eace:	mov    QWORD PTR [rsp+0x8],r9
   1ead3:	call   12780 <wget_buffer_alloc@plt>
   1ead8:	mov    rdx,QWORD PTR [rsp+0x8]
   1eadd:	mov    rsi,rbp
   1eae0:	mov    rdi,rax
   1eae3:	mov    QWORD PTR [rsp+0x30],rax
   1eae8:	call   10720 <wget_buffer_memcpy@plt>
   1eaed:	mov    rdi,QWORD PTR [rsp+0x30]
   1eaf2:	mov    edx,0x4
   1eaf7:	lea    rsi,[rip+0x2dd4b]        # 4c849 <maybe+0x5a9>
   1eafe:	call   10ea0 <wget_buffer_memcat@plt>
   1eb03:	mov    rdi,rbp
   1eb06:	call   11dd0 <wget_http_parse_response_header@plt>
   1eb0b:	mov    r8,QWORD PTR [rsp+0x18]
   1eb10:	test   rax,rax
   1eb13:	mov    QWORD PTR [rsp+0x8],rax
   1eb18:	je     1eec5 <wget_http_get_response_cb+0x795>
   1eb1e:	mov    rax,QWORD PTR [rsp+0x30]
   1eb23:	mov    rcx,QWORD PTR [rsp+0x8]
   1eb28:	mov    QWORD PTR [rcx+0x58],rax
   1eb2c:	jmp    1e8e2 <wget_http_get_response_cb+0x1b2>
   1eb31:	test   BYTE PTR [rax+0xcb],0x1
   1eb38:	je     1e9ad <wget_http_get_response_cb+0x27d>
   1eb3e:	xchg   ax,ax
   1eb40:	xor    r8d,r8d
   1eb43:	mov    QWORD PTR [rsp+0x10],r8
   1eb48:	call   11020 <wget_get_timemillis@plt>
   1eb4d:	mov    rcx,QWORD PTR [rsp+0x8]
   1eb52:	mov    r8,QWORD PTR [rsp+0x10]
   1eb57:	mov    QWORD PTR [rcx+0x68],rax
   1eb5b:	jmp    1e854 <wget_http_get_response_cb+0x124>
   1eb60:	mov    edx,0x5
   1eb65:	lea    rsi,[rip+0x2dd44]        # 4c8b0 <maybe+0x610>
   1eb6c:	xor    edi,edi
   1eb6e:	mov    QWORD PTR [rsp+0x10],r14
   1eb73:	call   10f90 <dcgettext@plt>
   1eb78:	mov    rsi,rbx
   1eb7b:	mov    rdi,rax
   1eb7e:	xor    eax,eax
   1eb80:	call   11ea0 <wget_error_printf@plt>
   1eb85:	mov    r8,QWORD PTR [rsp+0x10]
   1eb8a:	mov    QWORD PTR [rsp+0x8],0x0
   1eb93:	jmp    1e854 <wget_http_get_response_cb+0x124>
   1eb98:	mov    rdi,QWORD PTR [rax+0x30]
   1eb9c:	lea    rsi,[rip+0x2dccd]        # 4c870 <maybe+0x5d0>
   1eba3:	mov    QWORD PTR [rsp+0x10],r8
   1eba8:	mov    r14,rax
   1ebab:	mov    QWORD PTR [rsp+0x18],rdi
   1ebb0:	call   12590 <wget_strcasecmp_ascii@plt>
   1ebb5:	mov    r8,QWORD PTR [rsp+0x10]
   1ebba:	test   eax,eax
   1ebbc:	je     1ec50 <wget_http_get_response_cb+0x520>
   1ebc2:	mov    rdi,QWORD PTR [rsp+0x18]
   1ebc7:	lea    rsi,[rip+0x2dcb5]        # 4c883 <maybe+0x5e3>
   1ebce:	call   12590 <wget_strcasecmp_ascii@plt>
   1ebd3:	mov    r8,QWORD PTR [rsp+0x10]
   1ebd8:	test   eax,eax
   1ebda:	je     1ec50 <wget_http_get_response_cb+0x520>
   1ebdc:	mov    rdi,QWORD PTR [rsp+0x18]
   1ebe1:	lea    rsi,[rip+0x2dcac]        # 4c894 <maybe+0x5f4>
   1ebe8:	call   12590 <wget_strcasecmp_ascii@plt>
   1ebed:	mov    r8,QWORD PTR [rsp+0x10]
   1ebf2:	test   eax,eax
   1ebf4:	je     1ec50 <wget_http_get_response_cb+0x520>
   1ebf6:	mov    rax,QWORD PTR [r14]
   1ebf9:	mov    esi,0x2e
   1ebfe:	mov    rdi,QWORD PTR [rax+0x38]
   1ec02:	call   11740 <strrchr@plt>
   1ec07:	mov    r8,QWORD PTR [rsp+0x10]
   1ec0c:	test   rax,rax
   1ec0f:	mov    rdi,rax
   1ec12:	je     1e95a <wget_http_get_response_cb+0x22a>
   1ec18:	lea    rsi,[rip+0x2dc88]        # 4c8a7 <maybe+0x607>
   1ec1f:	mov    QWORD PTR [rsp+0x18],rax
   1ec24:	call   12590 <wget_strcasecmp_ascii@plt>
   1ec29:	mov    r8,QWORD PTR [rsp+0x10]
   1ec2e:	test   eax,eax
   1ec30:	je     1ec50 <wget_http_get_response_cb+0x520>
   1ec32:	mov    rdi,QWORD PTR [rsp+0x18]
   1ec37:	lea    rsi,[rip+0x2dc6d]        # 4c8ab <maybe+0x60b>
   1ec3e:	call   12590 <wget_strcasecmp_ascii@plt>
   1ec43:	mov    r8,QWORD PTR [rsp+0x10]
   1ec48:	test   eax,eax
   1ec4a:	jne    1e95a <wget_http_get_response_cb+0x22a>
   1ec50:	xor    eax,eax
   1ec52:	lea    rdi,[rip+0x2d947]        # 4c5a0 <maybe+0x300>
   1ec59:	mov    QWORD PTR [rsp+0x10],r8
   1ec5e:	call   114b0 <wget_debug_printf@plt>
   1ec63:	mov    rax,QWORD PTR [rsp+0x8]
   1ec68:	mov    r8,QWORD PTR [rsp+0x10]
   1ec6d:	mov    BYTE PTR [rax+0xc8],0x0
   1ec74:	jmp    1e95a <wget_http_get_response_cb+0x22a>
   1ec79:	mov    rdi,r8
   1ec7c:	mov    rdx,r15
   1ec7f:	mov    rsi,rbp
   1ec82:	call   11340 <wget_decompress@plt>
   1ec87:	mov    r8,QWORD PTR [rsp+0x10]
   1ec8c:	jmp    1ea5e <wget_http_get_response_cb+0x32e>
   1ec91:	xor    edx,edx
   1ec93:	mov    rsi,r15
   1ec96:	lea    rdi,[rip+0x2dc31]        # 4c8ce <maybe+0x62e>
   1ec9d:	xor    eax,eax
   1ec9f:	call   114b0 <wget_debug_printf@plt>
   1eca4:	mov    QWORD PTR [rsp+0x18],r13
   1eca9:	mov    r14,rbp
   1ecac:	nop    DWORD PTR [rax+0x0]
   1ecb0:	mov    esi,0xd
   1ecb5:	mov    rdi,rbp
   1ecb8:	call   109e0 <strchr@plt>
   1ecbd:	test   rax,rax
   1ecc0:	je     1ecc8 <wget_http_get_response_cb+0x598>
   1ecc2:	cmp    BYTE PTR [rax+0x1],0xa
   1ecc6:	je     1ed43 <wget_http_get_response_cb+0x613>
   1ecc8:	movzx  eax,BYTE PTR [r12+0x33]
   1ecce:	and    eax,0x2
   1ecd1:	or     al,BYTE PTR [rip+0x587d9]        # 774b0 <abort_indicator>
   1ecd7:	jne    1ee7f <wget_http_get_response_cb+0x74f>
   1ecdd:	lea    rax,[r15+0x400]
   1ece4:	cmp    rax,rbx
   1ece7:	jbe    1ed1a <wget_http_get_response_cb+0x5ea>
   1ece9:	add    rbx,0x400
   1ecf0:	mov    rdi,QWORD PTR [r12+0x10]
   1ecf5:	mov    rsi,rbx
   1ecf8:	call   118b0 <wget_buffer_ensure_capacity@plt>
   1ecfd:	test   eax,eax
   1ecff:	jne    1f1fc <wget_http_get_response_cb+0xacc>
   1ed05:	mov    rdx,QWORD PTR [r12+0x10]
   1ed0a:	sub    rbp,r14
   1ed0d:	mov    rax,QWORD PTR [rdx]
   1ed10:	mov    rbx,QWORD PTR [rdx+0x10]
   1ed14:	add    rbp,rax
   1ed17:	mov    r14,rax
   1ed1a:	mov    rdx,rbx
   1ed1d:	mov    rdi,QWORD PTR [r12]
   1ed21:	lea    rsi,[r14+r15*1]
   1ed25:	sub    rdx,r15
   1ed28:	call   114d0 <wget_tcp_read@plt>
   1ed2d:	test   rax,rax
   1ed30:	jle    1ee7f <wget_http_get_response_cb+0x74f>
   1ed36:	add    r15,rax
   1ed39:	mov    BYTE PTR [r14+r15*1],0x0
   1ed3e:	jmp    1ecb0 <wget_http_get_response_cb+0x580>
   1ed43:	mov    QWORD PTR [rsp+0x28],rax
   1ed48:	lea    r13,[rax+0x2]
   1ed4c:	call   104b0 <__errno_location@plt>
   1ed51:	mov    edx,0x10
   1ed56:	xor    esi,esi
   1ed58:	mov    rdi,rbp
   1ed5b:	mov    DWORD PTR [rax],0x0
   1ed61:	mov    QWORD PTR [rsp+0x20],rax
   1ed66:	call   45f40 <rpl_strtoll>
   1ed6b:	mov    r8,QWORD PTR [rsp+0x20]
   1ed70:	mov    rcx,QWORD PTR [rsp+0x28]
   1ed75:	mov    rdx,rax
   1ed78:	mov    eax,DWORD PTR [r8]
   1ed7b:	test   eax,eax
   1ed7d:	jne    1f3f7 <wget_http_get_response_cb+0xcc7>
   1ed83:	test   rdx,rdx
   1ed86:	je     1f336 <wget_http_get_response_cb+0xc06>
   1ed8c:	movabs rax,0x7ffffffffffffffd
   1ed96:	cmp    rdx,rax
   1ed99:	ja     1f2e4 <wget_http_get_response_cb+0xbb4>
   1ed9f:	mov    rax,QWORD PTR [rsp+0x8]
   1eda4:	lea    rcx,[r14+r15*1]
   1eda8:	lea    rbp,[r13+rdx*1+0x2]
   1edad:	mov    QWORD PTR [rsp+0x20],rcx
   1edb2:	mov    rax,QWORD PTR [rax+0x78]
   1edb6:	cmp    rcx,rbp
   1edb9:	jae    1f037 <wget_http_get_response_cb+0x907>
   1edbf:	mov    r8,QWORD PTR [rsp+0x20]
   1edc4:	sub    r8,r13
   1edc7:	cmp    r8,rdx
   1edca:	jbe    1f055 <wget_http_get_response_cb+0x925>
   1edd0:	mov    rcx,QWORD PTR [rsp+0x8]
   1edd5:	add    rax,rdx
   1edd8:	mov    rdi,QWORD PTR [rsp+0x10]
   1eddd:	mov    rsi,r13
   1ede0:	mov    QWORD PTR [rcx+0x78],rax
   1ede4:	call   11340 <wget_decompress@plt>
   1ede9:	mov    r13,rbp
   1edec:	sub    r13,QWORD PTR [rsp+0x20]
   1edf1:	xor    eax,eax
   1edf3:	mov    rsi,r13
   1edf6:	lea    rdi,[rip+0x2db05]        # 4c902 <maybe+0x662>
   1edfd:	call   114b0 <wget_debug_printf@plt>
   1ee02:	test   r13,r13
   1ee05:	je     1ecb0 <wget_http_get_response_cb+0x580>
   1ee0b:	mov    rax,r12
   1ee0e:	mov    r12,rbp
   1ee11:	mov    rbp,rbx
   1ee14:	mov    rbx,r14
   1ee17:	mov    r14,rax
   1ee1a:	movzx  eax,BYTE PTR [r14+0x33]
   1ee1f:	and    eax,0x2
   1ee22:	or     al,BYTE PTR [rip+0x58688]        # 774b0 <abort_indicator>
   1ee28:	jne    1ee7f <wget_http_get_response_cb+0x74f>
   1ee2a:	mov    rdi,QWORD PTR [r14]
   1ee2d:	mov    rdx,rbp
   1ee30:	mov    rsi,rbx
   1ee33:	call   114d0 <wget_tcp_read@plt>
   1ee38:	mov    rdx,rax
   1ee3b:	test   rax,rax
   1ee3e:	jle    1ee7f <wget_http_get_response_cb+0x74f>
   1ee40:	cmp    rax,r13
   1ee43:	jae    1f182 <wget_http_get_response_cb+0xa52>
   1ee49:	mov    rcx,QWORD PTR [rsp+0x8]
   1ee4e:	sub    r13,rax
   1ee51:	mov    rax,QWORD PTR [rcx+0x78]
   1ee55:	cmp    r13,0x1
   1ee59:	jbe    1ee89 <wget_http_get_response_cb+0x759>
   1ee5b:	add    rax,rdx
   1ee5e:	mov    rdi,QWORD PTR [rsp+0x10]
   1ee63:	mov    rsi,rbx
   1ee66:	mov    QWORD PTR [rcx+0x78],rax
   1ee6a:	call   11340 <wget_decompress@plt>
   1ee6f:	movzx  eax,BYTE PTR [r14+0x33]
   1ee74:	and    eax,0x2
   1ee77:	or     al,BYTE PTR [rip+0x58633]        # 774b0 <abort_indicator>
   1ee7d:	je     1ee2a <wget_http_get_response_cb+0x6fa>
   1ee7f:	mov    r8,QWORD PTR [rsp+0x10]
   1ee84:	jmp    1eb43 <wget_http_get_response_cb+0x413>
   1ee89:	mov    rcx,QWORD PTR [rsp+0x8]
   1ee8e:	lea    rax,[rdx+rax*1-0x1]
   1ee93:	mov    rdi,QWORD PTR [rsp+0x10]
   1ee98:	mov    rsi,rbx
   1ee9b:	sub    rdx,0x1
   1ee9f:	mov    QWORD PTR [rcx+0x78],rax
   1eea3:	call   11340 <wget_decompress@plt>
   1eea8:	test   r13,r13
   1eeab:	jne    1ee1a <wget_http_get_response_cb+0x6ea>
   1eeb1:	mov    rax,r14
   1eeb4:	mov    r14,rbx
   1eeb7:	mov    rbx,rbp
   1eeba:	mov    rbp,r12
   1eebd:	mov    r12,rax
   1eec0:	jmp    1ecb0 <wget_http_get_response_cb+0x580>
   1eec5:	lea    rdi,[rsp+0x30]
   1eeca:	call   111f0 <wget_buffer_free@plt>
   1eecf:	xor    r8d,r8d
   1eed2:	jmp    1e854 <wget_http_get_response_cb+0x124>
   1eed7:	xor    eax,eax
   1eed9:	lea    rdi,[rip+0x2da51]        # 4c931 <maybe+0x691>
   1eee0:	mov    QWORD PTR [rsp+0x10],r8
   1eee5:	call   114b0 <wget_debug_printf@plt>
   1eeea:	test   r15,r15
   1eeed:	mov    r8,QWORD PTR [rsp+0x10]
   1eef2:	jne    1f076 <wget_http_get_response_cb+0x946>
   1eef8:	mov    rcx,QWORD PTR [rsp+0x8]
   1eefd:	mov    rdx,QWORD PTR [rcx+0x70]
   1ef01:	mov    rax,rdx
   1ef04:	cmp    rdx,r15
   1ef07:	jbe    1ef82 <wget_http_get_response_cb+0x852>
   1ef09:	mov    QWORD PTR [rsp+0x10],r13
   1ef0e:	mov    r14,r8
   1ef11:	mov    r13,rcx
   1ef14:	jmp    1ef5d <wget_http_get_response_cb+0x82d>
   1ef16:	cs nop WORD PTR [rax+rax*1+0x0]
   1ef20:	mov    rdi,QWORD PTR [r12]
   1ef24:	mov    rdx,rbx
   1ef27:	mov    rsi,rbp
   1ef2a:	call   114d0 <wget_tcp_read@plt>
   1ef2f:	mov    rdx,rax
   1ef32:	test   rax,rax
   1ef35:	jle    1f018 <wget_http_get_response_cb+0x8e8>
   1ef3b:	add    QWORD PTR [r13+0x78],rax
   1ef3f:	mov    rsi,rbp
   1ef42:	mov    rdi,r14
   1ef45:	add    r15,rax
   1ef48:	call   11340 <wget_decompress@plt>
   1ef4d:	mov    rdx,QWORD PTR [r13+0x70]
   1ef51:	mov    rax,rdx
   1ef54:	cmp    rdx,r15
   1ef57:	jbe    1f0e2 <wget_http_get_response_cb+0x9b2>
   1ef5d:	movzx  eax,BYTE PTR [r12+0x33]
   1ef63:	and    eax,0x2
   1ef66:	or     al,BYTE PTR [rip+0x58544]        # 774b0 <abort_indicator>
   1ef6c:	je     1ef20 <wget_http_get_response_cb+0x7f0>
   1ef6e:	mov    r13,QWORD PTR [rsp+0x10]
   1ef73:	mov    r8,r14
   1ef76:	mov    rax,rdx
   1ef79:	cmp    rax,r15
   1ef7c:	ja     1f08e <wget_http_get_response_cb+0x95e>
   1ef82:	cmp    r15,rax
   1ef85:	jbe    1eaad <wget_http_get_response_cb+0x37d>
   1ef8b:	mov    rbx,QWORD PTR [rsp+0x8]
   1ef90:	mov    QWORD PTR [rsp+0x10],r8
   1ef95:	or     BYTE PTR [rbx+0xcb],0x2
   1ef9c:	mov    edi,DWORD PTR [r13+0x84]
   1efa3:	mov    r12,QWORD PTR [r13+0x58]
   1efa7:	mov    r14,QWORD PTR [r13+0x38]
   1efab:	call   11820 <wget_iri_scheme_get_name@plt>
   1efb0:	mov    rdx,r12
   1efb3:	mov    rcx,r14
   1efb6:	lea    rdi,[rip+0x2d73f]        # 4c6fc <maybe+0x45c>
   1efbd:	mov    rsi,rax
   1efc0:	xor    eax,eax
   1efc2:	call   12810 <wget_aprintf@plt>
   1efc7:	mov    r12,QWORD PTR [rbx+0x70]
   1efcb:	mov    edx,0x5
   1efd0:	lea    rsi,[rip+0x2d6e9]        # 4c6c0 <maybe+0x420>
   1efd7:	mov    rbp,rax
   1efda:	xor    edi,edi
   1efdc:	call   10f90 <dcgettext@plt>
   1efe1:	mov    rcx,rbp
   1efe4:	mov    rdx,r12
   1efe7:	mov    rsi,r15
   1efea:	mov    rdi,rax
   1efed:	xor    eax,eax
   1efef:	call   11ea0 <wget_error_printf@plt>
   1eff4:	test   rbp,rbp
   1eff7:	mov    r8,QWORD PTR [rsp+0x10]
   1effc:	je     1eaad <wget_http_get_response_cb+0x37d>
   1f002:	mov    rax,QWORD PTR [rip+0x56fdf]        # 75fe8 <wget_free@@Base-0x1328>
   1f009:	mov    rdi,rbp
   1f00c:	call   QWORD PTR [rax]
   1f00e:	mov    r8,QWORD PTR [rsp+0x10]
   1f013:	jmp    1eaad <wget_http_get_response_cb+0x37d>
   1f018:	mov    r8,r14
   1f01b:	mov    r13,QWORD PTR [rsp+0x10]
   1f020:	mov    r14,rax
   1f023:	js     1f0ef <wget_http_get_response_cb+0x9bf>
   1f029:	mov    rax,QWORD PTR [rsp+0x8]
   1f02e:	mov    rdx,QWORD PTR [rax+0x70]
   1f032:	jmp    1ef76 <wget_http_get_response_cb+0x846>
   1f037:	mov    rcx,QWORD PTR [rsp+0x8]
   1f03c:	add    rax,rdx
   1f03f:	mov    rdi,QWORD PTR [rsp+0x10]
   1f044:	mov    rsi,r13
   1f047:	mov    QWORD PTR [rcx+0x78],rax
   1f04b:	call   11340 <wget_decompress@plt>
   1f050:	jmp    1ecb0 <wget_http_get_response_cb+0x580>
   1f055:	mov    rcx,QWORD PTR [rsp+0x8]
   1f05a:	add    rax,r8
   1f05d:	mov    rdi,QWORD PTR [rsp+0x10]
   1f062:	mov    rdx,r8
   1f065:	mov    rsi,r13
   1f068:	mov    QWORD PTR [rcx+0x78],rax
   1f06c:	call   11340 <wget_decompress@plt>
   1f071:	jmp    1ede9 <wget_http_get_response_cb+0x6b9>
   1f076:	mov    rdi,r8
   1f079:	mov    rdx,r15
   1f07c:	mov    rsi,rbp
   1f07f:	call   11340 <wget_decompress@plt>
   1f084:	mov    r8,QWORD PTR [rsp+0x10]
   1f089:	jmp    1eef8 <wget_http_get_response_cb+0x7c8>
   1f08e:	mov    rbx,QWORD PTR [rsp+0x8]
   1f093:	mov    QWORD PTR [rsp+0x10],r8
   1f098:	or     BYTE PTR [rbx+0xcb],0x2
   1f09f:	mov    edi,DWORD PTR [r13+0x84]
   1f0a6:	mov    r12,QWORD PTR [r13+0x58]
   1f0aa:	mov    r14,QWORD PTR [r13+0x38]
   1f0ae:	call   11820 <wget_iri_scheme_get_name@plt>
   1f0b3:	mov    rdx,r12
   1f0b6:	mov    rcx,r14
   1f0b9:	lea    rdi,[rip+0x2d63c]        # 4c6fc <maybe+0x45c>
   1f0c0:	mov    rsi,rax
   1f0c3:	xor    eax,eax
   1f0c5:	call   12810 <wget_aprintf@plt>
   1f0ca:	mov    r12,QWORD PTR [rbx+0x70]
   1f0ce:	mov    edx,0x5
   1f0d3:	lea    rsi,[rip+0x2d5c6]        # 4c6a0 <maybe+0x400>
   1f0da:	mov    rbp,rax
   1f0dd:	jmp    1efda <wget_http_get_response_cb+0x8aa>
   1f0e2:	mov    r13,QWORD PTR [rsp+0x10]
   1f0e7:	mov    r8,r14
   1f0ea:	jmp    1ef82 <wget_http_get_response_cb+0x852>
   1f0ef:	mov    edi,DWORD PTR [r13+0x84]
   1f0f6:	mov    r12,QWORD PTR [r13+0x58]
   1f0fa:	mov    QWORD PTR [rsp+0x10],r8
   1f0ff:	mov    rbx,QWORD PTR [r13+0x38]
   1f103:	call   11820 <wget_iri_scheme_get_name@plt>
   1f108:	mov    rdx,r12
   1f10b:	lea    rdi,[rip+0x2d5ea]        # 4c6fc <maybe+0x45c>
   1f112:	mov    rsi,rax
   1f115:	mov    rcx,rbx
   1f118:	xor    eax,eax
   1f11a:	call   12810 <wget_aprintf@plt>
   1f11f:	mov    rbp,rax
   1f122:	call   104b0 <__errno_location@plt>
   1f127:	xor    edi,edi
   1f129:	mov    edx,0x5
   1f12e:	lea    rsi,[rip+0x2d543]        # 4c678 <maybe+0x3d8>
   1f135:	mov    r12d,DWORD PTR [rax]
   1f138:	call   10f90 <dcgettext@plt>
   1f13d:	mov    rcx,rbp
   1f140:	mov    rsi,r14
   1f143:	mov    rdi,rax
   1f146:	mov    edx,r12d
   1f149:	xor    eax,eax
   1f14b:	call   11ea0 <wget_error_printf@plt>
   1f150:	test   rbp,rbp
   1f153:	mov    r8,QWORD PTR [rsp+0x10]
   1f158:	je     1f2c5 <wget_http_get_response_cb+0xb95>
   1f15e:	mov    rax,QWORD PTR [rip+0x56e83]        # 75fe8 <wget_free@@Base-0x1328>
   1f165:	mov    QWORD PTR [rsp+0x10],r8
   1f16a:	mov    rdi,rbp
   1f16d:	call   QWORD PTR [rax]
   1f16f:	mov    rax,QWORD PTR [rsp+0x8]
   1f174:	mov    r8,QWORD PTR [rsp+0x10]
   1f179:	mov    rax,QWORD PTR [rax+0x70]
   1f17d:	jmp    1ef79 <wget_http_get_response_cb+0x849>
   1f182:	mov    r12,r14
   1f185:	mov    QWORD PTR [rsp+0x20],rax
   1f18a:	mov    r14,rbx
   1f18d:	mov    rbx,rbp
   1f190:	cmp    r13,0x1
   1f194:	je     1f31e <wget_http_get_response_cb+0xbee>
   1f19a:	lea    r15,[r13-0x2]
   1f19e:	lea    rax,[r14+r15*1]
   1f1a2:	cmp    BYTE PTR [rax],0xd
   1f1a5:	je     1f261 <wget_http_get_response_cb+0xb31>
   1f1ab:	mov    rdi,QWORD PTR [rsp+0x18]
   1f1b0:	call   1d720 <get_page>
   1f1b5:	xor    edi,edi
   1f1b7:	mov    edx,0x5
   1f1bc:	lea    rsi,[rip+0x2d48d]        # 4c650 <maybe+0x3b0>
   1f1c3:	mov    rbp,rax
   1f1c6:	call   10f90 <dcgettext@plt>
   1f1cb:	mov    rsi,rbp
   1f1ce:	mov    rdi,rax
   1f1d1:	xor    eax,eax
   1f1d3:	call   11ea0 <wget_error_printf@plt>
   1f1d8:	test   rbp,rbp
   1f1db:	mov    r8,QWORD PTR [rsp+0x10]
   1f1e0:	je     1eb43 <wget_http_get_response_cb+0x413>
   1f1e6:	mov    rax,QWORD PTR [rip+0x56dfb]        # 75fe8 <wget_free@@Base-0x1328>
   1f1ed:	mov    rdi,rbp
   1f1f0:	call   QWORD PTR [rax]
   1f1f2:	mov    r8,QWORD PTR [rsp+0x10]
   1f1f7:	jmp    1eb43 <wget_http_get_response_cb+0x413>
   1f1fc:	mov    r13,QWORD PTR [rsp+0x18]
   1f201:	mov    edi,DWORD PTR [r13+0x84]
   1f208:	mov    r14,QWORD PTR [r13+0x38]
   1f20c:	mov    r12,QWORD PTR [r13+0x58]
   1f210:	call   11820 <wget_iri_scheme_get_name@plt>
   1f215:	mov    rcx,r14
   1f218:	lea    rdi,[rip+0x2d4dd]        # 4c6fc <maybe+0x45c>
   1f21f:	mov    rsi,rax
   1f222:	mov    rdx,r12
   1f225:	xor    eax,eax
   1f227:	call   12810 <wget_aprintf@plt>
   1f22c:	mov    edx,0x5
   1f231:	lea    rsi,[rip+0x2d3a0]        # 4c5d8 <maybe+0x338>
   1f238:	xor    edi,edi
   1f23a:	mov    rbp,rax
   1f23d:	call   10f90 <dcgettext@plt>
   1f242:	mov    rdx,rbp
   1f245:	mov    rsi,rbx
   1f248:	mov    rdi,rax
   1f24b:	xor    eax,eax
   1f24d:	call   11ea0 <wget_error_printf@plt>
   1f252:	test   rbp,rbp
   1f255:	mov    r8,QWORD PTR [rsp+0x10]
   1f25a:	jne    1f1e6 <wget_http_get_response_cb+0xab6>
   1f25c:	jmp    1eb43 <wget_http_get_response_cb+0x413>
   1f261:	cmp    BYTE PTR [rax+0x1],0xa
   1f265:	jne    1f1ab <wget_http_get_response_cb+0xa7b>
   1f26b:	xor    eax,eax
   1f26d:	lea    rdi,[rip+0x2d6ac]        # 4c920 <maybe+0x680>
   1f274:	call   114b0 <wget_debug_printf@plt>
   1f279:	cmp    r13,0x2
   1f27d:	mov    r8,QWORD PTR [rsp+0x20]
   1f282:	jbe    1f2b0 <wget_http_get_response_cb+0xb80>
   1f284:	mov    rcx,QWORD PTR [rsp+0x8]
   1f289:	mov    rdi,QWORD PTR [rsp+0x10]
   1f28e:	mov    rdx,r15
   1f291:	mov    rsi,r14
   1f294:	mov    QWORD PTR [rsp+0x20],r8
   1f299:	mov    rax,QWORD PTR [rcx+0x78]
   1f29d:	lea    rax,[r13+rax*1-0x2]
   1f2a2:	mov    QWORD PTR [rcx+0x78],rax
   1f2a6:	call   11340 <wget_decompress@plt>
   1f2ab:	mov    r8,QWORD PTR [rsp+0x20]
   1f2b0:	sub    r8,r13
   1f2b3:	mov    r15,r8
   1f2b6:	jne    1f2d3 <wget_http_get_response_cb+0xba3>
   1f2b8:	mov    BYTE PTR [r14+r15*1],0x0
   1f2bd:	mov    rbp,r14
   1f2c0:	jmp    1ecb0 <wget_http_get_response_cb+0x580>
   1f2c5:	mov    rax,QWORD PTR [rsp+0x8]
   1f2ca:	mov    rax,QWORD PTR [rax+0x70]
   1f2ce:	jmp    1ef79 <wget_http_get_response_cb+0x849>
   1f2d3:	lea    rsi,[r14+r13*1]
   1f2d7:	mov    rdx,r8
   1f2da:	mov    rdi,r14
   1f2dd:	call   12110 <memmove@plt>
   1f2e2:	jmp    1f2b8 <wget_http_get_response_cb+0xb88>
   1f2e4:	mov    rdi,QWORD PTR [rsp+0x18]
   1f2e9:	mov    QWORD PTR [rsp+0x20],rdx
   1f2ee:	call   1d720 <get_page>
   1f2f3:	mov    edx,0x5
   1f2f8:	lea    rsi,[rip+0x2d331]        # 4c630 <maybe+0x390>
   1f2ff:	xor    edi,edi
   1f301:	mov    rbp,rax
   1f304:	call   10f90 <dcgettext@plt>
   1f309:	mov    rsi,QWORD PTR [rsp+0x20]
   1f30e:	mov    rdx,rbp
   1f311:	mov    rdi,rax
   1f314:	jmp    1f24b <wget_http_get_response_cb+0xb1b>
   1f319:	call   11760 <__stack_chk_fail@plt>
   1f31e:	lea    rdi,[rip+0x2d5fb]        # 4c920 <maybe+0x680>
   1f325:	xor    eax,eax
   1f327:	call   114b0 <wget_debug_printf@plt>
   1f32c:	mov    r8,QWORD PTR [rsp+0x20]
   1f331:	jmp    1f2b0 <wget_http_get_response_cb+0xb80>
   1f336:	cmp    BYTE PTR [rcx+0x2],0xd
   1f33a:	mov    r8,QWORD PTR [rsp+0x10]
   1f33f:	mov    r10,r13
   1f342:	jne    1f34e <wget_http_get_response_cb+0xc1e>
   1f344:	cmp    BYTE PTR [rcx+0x3],0xa
   1f348:	je     1eb43 <wget_http_get_response_cb+0x413>
   1f34e:	lea    rdi,[rip+0x2d58c]        # 4c8e1 <maybe+0x641>
   1f355:	xor    eax,eax
   1f357:	mov    QWORD PTR [rsp+0x18],r8
   1f35c:	mov    rbp,r14
   1f35f:	mov    QWORD PTR [rsp+0x10],r10
   1f364:	call   114b0 <wget_debug_printf@plt>
   1f369:	mov    rdi,QWORD PTR [rsp+0x10]
   1f36e:	mov    r13,QWORD PTR [rsp+0x18]
   1f373:	jmp    1f3b3 <wget_http_get_response_cb+0xc83>
   1f375:	movzx  eax,BYTE PTR [r12+0x33]
   1f37b:	and    eax,0x2
   1f37e:	or     al,BYTE PTR [rip+0x5812c]        # 774b0 <abort_indicator>
   1f384:	jne    1f44b <wget_http_get_response_cb+0xd1b>
   1f38a:	mov    rdx,rbx
   1f38d:	mov    rdi,QWORD PTR [r12]
   1f391:	lea    rsi,[rbp+r15*1+0x0]
   1f396:	sub    rdx,r15
   1f399:	call   114d0 <wget_tcp_read@plt>
   1f39e:	test   rax,rax
   1f3a1:	jle    1f44b <wget_http_get_response_cb+0xd1b>
   1f3a7:	add    r15,rax
   1f3aa:	mov    rdi,rbp
   1f3ad:	mov    BYTE PTR [rbp+r15*1+0x0],0x0
   1f3b3:	lea    rsi,[rip+0x2d48f]        # 4c849 <maybe+0x5a9>
   1f3ba:	call   10750 <strstr@plt>
   1f3bf:	test   rax,rax
   1f3c2:	jne    1f3da <wget_http_get_response_cb+0xcaa>
   1f3c4:	cmp    r15,0x3
   1f3c8:	jbe    1f375 <wget_http_get_response_cb+0xc45>
   1f3ca:	mov    eax,DWORD PTR [rbp+r15*1-0x3]
   1f3cf:	mov    r15d,0x3
   1f3d5:	mov    DWORD PTR [rbp+0x0],eax
   1f3d8:	jmp    1f375 <wget_http_get_response_cb+0xc45>
   1f3da:	lea    rdi,[rip+0x2d511]        # 4c8f2 <maybe+0x652>
   1f3e1:	xor    eax,eax
   1f3e3:	mov    QWORD PTR [rsp+0x10],r13
   1f3e8:	call   114b0 <wget_debug_printf@plt>
   1f3ed:	mov    r8,QWORD PTR [rsp+0x10]
   1f3f2:	jmp    1eb43 <wget_http_get_response_cb+0x413>
   1f3f7:	mov    rdi,QWORD PTR [rsp+0x18]
   1f3fc:	call   1d720 <get_page>
   1f401:	xor    edi,edi
   1f403:	mov    edx,0x5
   1f408:	lea    rsi,[rip+0x2d1f1]        # 4c600 <maybe+0x360>
   1f40f:	mov    r12,rax
   1f412:	call   10f90 <dcgettext@plt>
   1f417:	mov    rdx,r12
   1f41a:	mov    rsi,rbp
   1f41d:	mov    rdi,rax
   1f420:	xor    eax,eax
   1f422:	call   11ea0 <wget_error_printf@plt>
   1f427:	test   r12,r12
   1f42a:	mov    r8,QWORD PTR [rsp+0x10]
   1f42f:	je     1eb43 <wget_http_get_response_cb+0x413>
   1f435:	mov    rax,QWORD PTR [rip+0x56bac]        # 75fe8 <wget_free@@Base-0x1328>
   1f43c:	mov    rdi,r12
   1f43f:	call   QWORD PTR [rax]
   1f441:	mov    r8,QWORD PTR [rsp+0x10]
   1f446:	jmp    1eb43 <wget_http_get_response_cb+0x413>
   1f44b:	mov    r8,r13
   1f44e:	jmp    1eb43 <wget_http_get_response_cb+0x413>
   1f453:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1f45e:	xchg   ax,ax

000000000001f460 <wget_http_get_response>:
   1f460:	endbr64 
   1f464:	push   r12
   1f466:	call   122b0 <wget_http_get_response_cb@plt>
   1f46b:	mov    r12,rax
   1f46e:	test   rax,rax
   1f471:	je     1f4a0 <wget_http_get_response+0x40>
   1f473:	mov    rax,QWORD PTR [rax]
   1f476:	lea    rsi,[rip+0x2d4c8]        # 4c945 <maybe+0x6a5>
   1f47d:	lea    rdi,[rax+0x1c8]
   1f484:	call   12590 <wget_strcasecmp_ascii@plt>
   1f489:	test   eax,eax
   1f48b:	jne    1f4a0 <wget_http_get_response+0x40>
   1f48d:	mov    rax,QWORD PTR [r12+0x60]
   1f492:	test   rax,rax
   1f495:	je     1f4a0 <wget_http_get_response+0x40>
   1f497:	mov    rax,QWORD PTR [rax+0x8]
   1f49b:	mov    QWORD PTR [r12+0x70],rax
   1f4a0:	mov    rax,r12
   1f4a3:	pop    r12
   1f4a5:	ret    
   1f4a6:	cs nop WORD PTR [rax+rax*1+0x0]

000000000001f4b0 <wget_http_set_http_proxy>:
   1f4b0:	endbr64 
   1f4b4:	push   r12
   1f4b6:	mov    r12,rsi
   1f4b9:	push   rbp
   1f4ba:	mov    rbp,rdi
   1f4bd:	sub    rsp,0x8
   1f4c1:	cmp    QWORD PTR [rip+0x57fdf],0x0        # 774a8 <http_proxies>
   1f4c9:	je     1f4d7 <wget_http_set_http_proxy+0x27>
   1f4cb:	lea    rdi,[rip+0x57fd6]        # 774a8 <http_proxies>
   1f4d2:	call   125e0 <wget_vector_free@plt>
   1f4d7:	test   rbp,rbp
   1f4da:	je     1f4ea <wget_http_set_http_proxy+0x3a>
   1f4dc:	mov    rdi,rbp
   1f4df:	mov    rsi,r12
   1f4e2:	call   1d7d0 <parse_proxies.part.0>
   1f4e7:	mov    rbp,rax
   1f4ea:	mov    QWORD PTR [rip+0x57fb7],rbp        # 774a8 <http_proxies>
   1f4f1:	add    rsp,0x8
   1f4f5:	mov    rdi,rbp
   1f4f8:	pop    rbp
   1f4f9:	pop    r12
   1f4fb:	jmp    10e90 <wget_vector_size@plt>

000000000001f500 <wget_http_set_https_proxy>:
   1f500:	endbr64 
   1f504:	push   r12
   1f506:	mov    r12,rsi
   1f509:	push   rbp
   1f50a:	mov    rbp,rdi
   1f50d:	sub    rsp,0x8
   1f511:	cmp    QWORD PTR [rip+0x57f87],0x0        # 774a0 <https_proxies>
   1f519:	je     1f527 <wget_http_set_https_proxy+0x27>
   1f51b:	lea    rdi,[rip+0x57f7e]        # 774a0 <https_proxies>
   1f522:	call   125e0 <wget_vector_free@plt>
   1f527:	test   rbp,rbp
   1f52a:	je     1f53a <wget_http_set_https_proxy+0x3a>
   1f52c:	mov    rdi,rbp
   1f52f:	mov    rsi,r12
   1f532:	call   1d7d0 <parse_proxies.part.0>
   1f537:	mov    rbp,rax
   1f53a:	mov    QWORD PTR [rip+0x57f5f],rbp        # 774a0 <https_proxies>
   1f541:	add    rsp,0x8
   1f545:	mov    rdi,rbp
   1f548:	pop    rbp
   1f549:	pop    r12
   1f54b:	jmp    10e90 <wget_vector_size@plt>

000000000001f550 <wget_http_set_no_proxy>:
   1f550:	endbr64 
   1f554:	cmp    QWORD PTR [rip+0x57f3c],0x0        # 77498 <no_proxies>
   1f55c:	push   r14
   1f55e:	mov    r14,rsi
   1f561:	push   r13
   1f563:	push   r12
   1f565:	push   rbp
   1f566:	mov    rbp,rdi
   1f569:	push   rbx
   1f56a:	je     1f578 <wget_http_set_no_proxy+0x28>
   1f56c:	lea    rdi,[rip+0x57f25]        # 77498 <no_proxies>
   1f573:	call   125e0 <wget_vector_free@plt>
   1f578:	test   rbp,rbp
   1f57b:	je     1f6a8 <wget_http_set_no_proxy+0x158>
   1f581:	xor    esi,esi
   1f583:	mov    edi,0x8
   1f588:	mov    rbx,rbp
   1f58b:	call   11f00 <wget_vector_create@plt>
   1f590:	movzx  r12d,BYTE PTR [rbp+0x0]
   1f595:	mov    r13,rax
   1f598:	test   r12b,r12b
   1f59b:	je     1f68b <wget_http_set_no_proxy+0x13b>
   1f5a1:	nop    DWORD PTR [rax+0x0]
   1f5a8:	cmp    r12b,0xd
   1f5ac:	jg     1f5ec <wget_http_set_no_proxy+0x9c>
   1f5ae:	cmp    r12b,0x8
   1f5b2:	jg     1f5f2 <wget_http_set_no_proxy+0xa2>
   1f5b4:	mov    esi,0x2c
   1f5b9:	mov    rdi,rbp
   1f5bc:	call   11030 <strchrnul@plt>
   1f5c1:	mov    rbx,rax
   1f5c4:	cmp    rbp,rax
   1f5c7:	je     1f5d4 <wget_http_set_no_proxy+0x84>
   1f5c9:	sub    rax,rbp
   1f5cc:	cmp    rax,0xff
   1f5d2:	jle    1f61c <wget_http_set_no_proxy+0xcc>
   1f5d4:	cmp    BYTE PTR [rbx],0x0
   1f5d7:	lea    rbp,[rbx+0x1]
   1f5db:	je     1f68b <wget_http_set_no_proxy+0x13b>
   1f5e1:	movzx  r12d,BYTE PTR [rbx+0x1]
   1f5e6:	cmp    r12b,0xd
   1f5ea:	jle    1f5ae <wget_http_set_no_proxy+0x5e>
   1f5ec:	cmp    r12b,0x20
   1f5f0:	jne    1f5b4 <wget_http_set_no_proxy+0x64>
   1f5f2:	cmp    rbp,rbx
   1f5f5:	jae    1f5b4 <wget_http_set_no_proxy+0x64>
   1f5f7:	add    rbp,0x1
   1f5fb:	movzx  r12d,BYTE PTR [rbp+0x0]
   1f600:	jmp    1f5a8 <wget_http_set_no_proxy+0x58>
   1f602:	nop    WORD PTR [rax+rax*1+0x0]
   1f608:	cmp    r12b,0x20
   1f60c:	jne    1f628 <wget_http_set_no_proxy+0xd8>
   1f60e:	cmp    rbx,rbp
   1f611:	jbe    1f5d4 <wget_http_set_no_proxy+0x84>
   1f613:	movzx  r12d,BYTE PTR [rbp+0x1]
   1f618:	add    rbp,0x1
   1f61c:	cmp    r12b,0xd
   1f620:	jg     1f608 <wget_http_set_no_proxy+0xb8>
   1f622:	cmp    r12b,0x8
   1f626:	jg     1f60e <wget_http_set_no_proxy+0xbe>
   1f628:	cmp    rbx,rbp
   1f62b:	jbe    1f5d4 <wget_http_set_no_proxy+0x84>
   1f62d:	mov    rsi,rbx
   1f630:	mov    rdi,rbp
   1f633:	sub    rsi,rbp
   1f636:	call   126b0 <wget_strmemdup@plt>
   1f63b:	mov    rbp,rax
   1f63e:	test   rax,rax
   1f641:	je     1f5d4 <wget_http_set_no_proxy+0x84>
   1f643:	mov    rdi,rax
   1f646:	call   10590 <wget_strtolower@plt>
   1f64b:	mov    rdi,rbp
   1f64e:	call   12700 <wget_str_needs_encoding@plt>
   1f653:	test   al,al
   1f655:	jne    1f6c0 <wget_http_set_no_proxy+0x170>
   1f657:	mov    rdi,rbp
   1f65a:	call   114c0 <wget_str_to_ascii@plt>
   1f65f:	mov    r12,rax
   1f662:	cmp    rbp,rax
   1f665:	je     1f673 <wget_http_set_no_proxy+0x123>
   1f667:	mov    rax,QWORD PTR [rip+0x5697a]        # 75fe8 <wget_free@@Base-0x1328>
   1f66e:	mov    rdi,rbp
   1f671:	call   QWORD PTR [rax]
   1f673:	mov    rsi,r12
   1f676:	mov    rdi,r13
   1f679:	lea    rbp,[rbx+0x1]
   1f67d:	call   11290 <wget_vector_add@plt>
   1f682:	cmp    BYTE PTR [rbx],0x0
   1f685:	jne    1f5e1 <wget_http_set_no_proxy+0x91>
   1f68b:	cmp    r13,0x1
   1f68f:	pop    rbx
   1f690:	pop    rbp
   1f691:	mov    QWORD PTR [rip+0x57e00],r13        # 77498 <no_proxies>
   1f698:	pop    r12
   1f69a:	sbb    eax,eax
   1f69c:	pop    r13
   1f69e:	pop    r14
   1f6a0:	ret    
   1f6a1:	nop    DWORD PTR [rax+0x0]
   1f6a8:	xor    r13d,r13d
   1f6ab:	pop    rbx
   1f6ac:	mov    eax,0xffffffff
   1f6b1:	pop    rbp
   1f6b2:	mov    QWORD PTR [rip+0x57ddf],r13        # 77498 <no_proxies>
   1f6b9:	pop    r12
   1f6bb:	pop    r13
   1f6bd:	pop    r14
   1f6bf:	ret    
   1f6c0:	mov    rsi,r14
   1f6c3:	mov    rdi,rbp
   1f6c6:	call   11b80 <wget_str_to_utf8@plt>
   1f6cb:	mov    r12,rax
   1f6ce:	test   rax,rax
   1f6d1:	je     1f657 <wget_http_set_no_proxy+0x107>
   1f6d7:	mov    rax,QWORD PTR [rip+0x5690a]        # 75fe8 <wget_free@@Base-0x1328>
   1f6de:	mov    rdi,rbp
   1f6e1:	mov    rbp,r12
   1f6e4:	call   QWORD PTR [rax]
   1f6e6:	jmp    1f657 <wget_http_set_no_proxy+0x107>
   1f6eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001f6f0 <wget_http_get_no_proxy>:
   1f6f0:	endbr64 
   1f6f4:	mov    rax,QWORD PTR [rip+0x57d9d]        # 77498 <no_proxies>
   1f6fb:	ret    
   1f6fc:	nop    DWORD PTR [rax+0x0]

000000000001f700 <wget_http_match_no_proxy>:
   1f700:	endbr64 
   1f704:	push   r15
   1f706:	push   r14
   1f708:	push   r13
   1f70a:	push   r12
   1f70c:	mov    r12,rsi
   1f70f:	push   rbp
   1f710:	mov    rbp,rdi
   1f713:	push   rbx
   1f714:	sub    rsp,0x68
   1f718:	mov    rax,QWORD PTR fs:0x28
   1f721:	mov    QWORD PTR [rsp+0x58],rax
   1f726:	xor    eax,eax
   1f728:	call   10e90 <wget_vector_size@plt>
   1f72d:	test   r12,r12
   1f730:	sete   r13b
   1f734:	test   eax,eax
   1f736:	setle  al
   1f739:	xor    r9d,r9d
   1f73c:	or     r13b,al
   1f73f:	jne    1f7d6 <wget_http_match_no_proxy+0xd6>
   1f745:	lea    rdx,[rsp+0x28]
   1f74a:	mov    rsi,r12
   1f74d:	mov    edi,0x2
   1f752:	mov    r14d,0x1
   1f758:	call   12620 <inet_pton@plt>
   1f75d:	cmp    eax,0x1
   1f760:	jne    1fa18 <wget_http_match_no_proxy+0x318>
   1f766:	xor    ebx,ebx
   1f768:	jmp    1f773 <wget_http_match_no_proxy+0x73>
   1f76a:	nop    WORD PTR [rax+rax*1+0x0]
   1f770:	add    ebx,0x1
   1f773:	mov    rdi,rbp
   1f776:	call   10e90 <wget_vector_size@plt>
   1f77b:	cmp    ebx,eax
   1f77d:	jge    1fa40 <wget_http_match_no_proxy+0x340>
   1f783:	mov    esi,ebx
   1f785:	mov    rdi,rbp
   1f788:	call   10c00 <wget_vector_get@plt>
   1f78d:	mov    r15,rax
   1f790:	test   rax,rax
   1f793:	je     1f770 <wget_http_match_no_proxy+0x70>
   1f795:	mov    rsi,r12
   1f798:	mov    rdi,rax
   1f79b:	call   11c60 <strcmp@plt>
   1f7a0:	test   eax,eax
   1f7a2:	je     1f7d0 <wget_http_match_no_proxy+0xd0>
   1f7a4:	test   r14b,r14b
   1f7a7:	jne    1f800 <wget_http_match_no_proxy+0x100>
   1f7a9:	test   r13b,r13b
   1f7ac:	jne    1f8b0 <wget_http_match_no_proxy+0x1b0>
   1f7b2:	cmp    BYTE PTR [r15],0x2e
   1f7b6:	jne    1f770 <wget_http_match_no_proxy+0x70>
   1f7b8:	mov    rsi,r15
   1f7bb:	mov    rdi,r12
   1f7be:	call   124b0 <wget_match_tail@plt>
   1f7c3:	test   eax,eax
   1f7c5:	je     1f770 <wget_http_match_no_proxy+0x70>
   1f7c7:	nop    WORD PTR [rax+rax*1+0x0]
   1f7d0:	mov    r9d,0x1
   1f7d6:	mov    rax,QWORD PTR [rsp+0x58]
   1f7db:	sub    rax,QWORD PTR fs:0x28
   1f7e4:	jne    1fa48 <wget_http_match_no_proxy+0x348>
   1f7ea:	add    rsp,0x68
   1f7ee:	mov    eax,r9d
   1f7f1:	pop    rbx
   1f7f2:	pop    rbp
   1f7f3:	pop    r12
   1f7f5:	pop    r13
   1f7f7:	pop    r14
   1f7f9:	pop    r15
   1f7fb:	ret    
   1f7fc:	nop    DWORD PTR [rax+0x0]
   1f800:	mov    esi,0x2f
   1f805:	mov    rdi,r15
   1f808:	call   109e0 <strchr@plt>
   1f80d:	test   rax,rax
   1f810:	je     1f7b2 <wget_http_match_no_proxy+0xb2>
   1f812:	xor    esi,esi
   1f814:	lea    rdi,[rax+0x1]
   1f818:	mov    edx,0xa
   1f81d:	mov    QWORD PTR [rsp+0x10],rax
   1f822:	call   11c90 <strtol@plt>
   1f827:	cmp    eax,0x20
   1f82a:	mov    QWORD PTR [rsp+0x8],rax
   1f82f:	ja     1f7b2 <wget_http_match_no_proxy+0xb2>
   1f831:	mov    rsi,QWORD PTR [rsp+0x10]
   1f836:	mov    rdi,r15
   1f839:	sub    rsi,r15
   1f83c:	call   126b0 <wget_strmemdup@plt>
   1f841:	lea    rdx,[rsp+0x2c]
   1f846:	mov    edi,0x2
   1f84b:	mov    rsi,rax
   1f84e:	mov    QWORD PTR [rsp+0x10],rax
   1f853:	call   12620 <inet_pton@plt>
   1f858:	mov    r9,QWORD PTR [rsp+0x10]
   1f85d:	mov    rcx,QWORD PTR [rsp+0x8]
   1f862:	cmp    eax,0x1
   1f865:	jne    1f950 <wget_http_match_no_proxy+0x250>
   1f86b:	test   r9,r9
   1f86e:	je     1f886 <wget_http_match_no_proxy+0x186>
   1f870:	mov    rax,QWORD PTR [rip+0x56771]        # 75fe8 <wget_free@@Base-0x1328>
   1f877:	mov    QWORD PTR [rsp+0x8],rcx
   1f87c:	mov    rdi,r9
   1f87f:	call   QWORD PTR [rax]
   1f881:	mov    rcx,QWORD PTR [rsp+0x8]
   1f886:	mov    edx,0xffffffff
   1f88b:	mov    eax,DWORD PTR [rsp+0x28]
   1f88f:	xor    eax,DWORD PTR [rsp+0x2c]
   1f893:	shr    rdx,cl
   1f896:	bswap  eax
   1f898:	not    edx
   1f89a:	test   edx,eax
   1f89c:	jne    1f7b2 <wget_http_match_no_proxy+0xb2>
   1f8a2:	jmp    1f7d0 <wget_http_match_no_proxy+0xd0>
   1f8a7:	nop    WORD PTR [rax+rax*1+0x0]
   1f8b0:	mov    esi,0x2f
   1f8b5:	mov    rdi,r15
   1f8b8:	call   109e0 <strchr@plt>
   1f8bd:	test   rax,rax
   1f8c0:	je     1f7b2 <wget_http_match_no_proxy+0xb2>
   1f8c6:	xor    esi,esi
   1f8c8:	lea    rdi,[rax+0x1]
   1f8cc:	mov    edx,0xa
   1f8d1:	mov    QWORD PTR [rsp+0x10],rax
   1f8d6:	call   11c90 <strtol@plt>
   1f8db:	cmp    eax,0x80
   1f8e0:	mov    QWORD PTR [rsp+0x8],rax
   1f8e5:	ja     1f7b2 <wget_http_match_no_proxy+0xb2>
   1f8eb:	mov    rsi,QWORD PTR [rsp+0x10]
   1f8f0:	mov    rdi,r15
   1f8f3:	sub    rsi,r15
   1f8f6:	call   126b0 <wget_strmemdup@plt>
   1f8fb:	lea    r10,[rsp+0x40]
   1f900:	mov    edi,0xa
   1f905:	mov    rdx,r10
   1f908:	mov    rsi,rax
   1f90b:	mov    QWORD PTR [rsp+0x18],r10
   1f910:	mov    QWORD PTR [rsp+0x10],rax
   1f915:	call   12620 <inet_pton@plt>
   1f91a:	mov    r11,QWORD PTR [rsp+0x10]
   1f91f:	mov    r10,QWORD PTR [rsp+0x18]
   1f924:	cmp    eax,0x1
   1f927:	mov    rcx,QWORD PTR [rsp+0x8]
   1f92c:	mov    r9d,eax
   1f92f:	je     1f970 <wget_http_match_no_proxy+0x270>
   1f931:	test   r11,r11
   1f934:	je     1f7b2 <wget_http_match_no_proxy+0xb2>
   1f93a:	mov    rax,QWORD PTR [rip+0x566a7]        # 75fe8 <wget_free@@Base-0x1328>
   1f941:	mov    rdi,r11
   1f944:	call   QWORD PTR [rax]
   1f946:	jmp    1f7b2 <wget_http_match_no_proxy+0xb2>
   1f94b:	nop    DWORD PTR [rax+rax*1+0x0]
   1f950:	test   r9,r9
   1f953:	je     1f7b2 <wget_http_match_no_proxy+0xb2>
   1f959:	mov    rax,QWORD PTR [rip+0x56688]        # 75fe8 <wget_free@@Base-0x1328>
   1f960:	mov    rdi,r9
   1f963:	call   QWORD PTR [rax]
   1f965:	jmp    1f7b2 <wget_http_match_no_proxy+0xb2>
   1f96a:	nop    WORD PTR [rax+rax*1+0x0]
   1f970:	test   r11,r11
   1f973:	je     1f99e <wget_http_match_no_proxy+0x29e>
   1f975:	mov    DWORD PTR [rsp+0x10],eax
   1f979:	mov    rax,QWORD PTR [rip+0x56668]        # 75fe8 <wget_free@@Base-0x1328>
   1f980:	mov    rdi,r11
   1f983:	mov    QWORD PTR [rsp+0x18],r10
   1f988:	mov    QWORD PTR [rsp+0x8],rcx
   1f98d:	call   QWORD PTR [rax]
   1f98f:	mov    r10,QWORD PTR [rsp+0x18]
   1f994:	mov    r9d,DWORD PTR [rsp+0x10]
   1f999:	mov    rcx,QWORD PTR [rsp+0x8]
   1f99e:	test   ecx,ecx
   1f9a0:	lea    r11d,[rcx+0x7]
   1f9a4:	cmovns r11d,ecx
   1f9a8:	sar    r11d,0x3
   1f9ac:	je     1f9e4 <wget_http_match_no_proxy+0x2e4>
   1f9ae:	movsxd rdx,r11d
   1f9b1:	lea    rsi,[rsp+0x30]
   1f9b6:	mov    rdi,r10
   1f9b9:	mov    DWORD PTR [rsp+0x18],r9d
   1f9be:	mov    QWORD PTR [rsp+0x10],rcx
   1f9c3:	mov    DWORD PTR [rsp+0x8],r11d
   1f9c8:	call   10ac0 <memcmp@plt>
   1f9cd:	mov    r11d,DWORD PTR [rsp+0x8]
   1f9d2:	mov    rcx,QWORD PTR [rsp+0x10]
   1f9d7:	test   eax,eax
   1f9d9:	mov    r9d,DWORD PTR [rsp+0x18]
   1f9de:	jne    1f7b2 <wget_http_match_no_proxy+0xb2>
   1f9e4:	and    ecx,0x7
   1f9e7:	je     1f7d6 <wget_http_match_no_proxy+0xd6>
   1f9ed:	mov    eax,0xff
   1f9f2:	movsxd r11,r11d
   1f9f5:	sar    eax,cl
   1f9f7:	movzx  edx,BYTE PTR [rsp+r11*1+0x40]
   1f9fd:	xor    dl,BYTE PTR [rsp+r11*1+0x30]
   1fa02:	not    eax
   1fa04:	test   dl,al
   1fa06:	jne    1f7b2 <wget_http_match_no_proxy+0xb2>
   1fa0c:	jmp    1f7d0 <wget_http_match_no_proxy+0xd0>
   1fa11:	nop    DWORD PTR [rax+0x0]
   1fa18:	lea    rdx,[rsp+0x30]
   1fa1d:	mov    rsi,r12
   1fa20:	mov    edi,0xa
   1fa25:	xor    r14d,r14d
   1fa28:	call   12620 <inet_pton@plt>
   1fa2d:	cmp    eax,0x1
   1fa30:	sete   r13b
   1fa34:	jmp    1f766 <wget_http_match_no_proxy+0x66>
   1fa39:	nop    DWORD PTR [rax+0x0]
   1fa40:	xor    r9d,r9d
   1fa43:	jmp    1f7d6 <wget_http_match_no_proxy+0xd6>
   1fa48:	call   11760 <__stack_chk_fail@plt>
   1fa4d:	nop    DWORD PTR [rax]

000000000001fa50 <wget_http_open>:
   1fa50:	endbr64 
   1fa54:	push   r15
   1fa56:	push   r14
   1fa58:	push   r13
   1fa5a:	push   r12
   1fa5c:	push   rbp
   1fa5d:	push   rbx
   1fa5e:	sub    rsp,0x8
   1fa62:	mov    r15d,DWORD PTR [rsi+0x5c]
   1fa66:	test   rdi,rdi
   1fa69:	je     1fd1f <wget_http_open+0x2cf>
   1fa6f:	mov    rax,QWORD PTR [rip+0x564ca]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   1fa76:	mov    rbx,rsi
   1fa79:	mov    r13,rdi
   1fa7c:	mov    esi,0x38
   1fa81:	mov    edi,0x1
   1fa86:	call   QWORD PTR [rax]
   1fa88:	mov    r14,QWORD PTR [rbx+0x20]
   1fa8c:	movzx  r12d,WORD PTR [rbx+0x58]
   1fa91:	mov    QWORD PTR [r13+0x0],rax
   1fa95:	mov    rbp,rax
   1fa98:	call   12630 <wget_tcp_init@plt>
   1fa9d:	mov    rsi,QWORD PTR [rbx+0x20]
   1faa1:	mov    rdi,QWORD PTR [rip+0x579f0]        # 77498 <no_proxies>
   1faa8:	mov    QWORD PTR [rbp+0x0],rax
   1faac:	call   12790 <wget_http_match_no_proxy@plt>
   1fab1:	test   eax,eax
   1fab3:	jne    1fbb8 <wget_http_open+0x168>
   1fab9:	cmp    r15d,0x1
   1fabd:	je     1fc20 <wget_http_open+0x1d0>
   1fac3:	cmp    QWORD PTR [rip+0x579dd],0x0        # 774a8 <http_proxies>
   1facb:	je     1fb40 <wget_http_open+0xf0>
   1facd:	mov    rdi,QWORD PTR [rip+0x579bc]        # 77490 <proxy_mutex>
   1fad4:	call   12040 <wget_thread_mutex_lock@plt>
   1fad9:	mov    eax,DWORD PTR [rip+0x57799]        # 77278 <next_http_proxy.1>
   1fadf:	mov    r14,QWORD PTR [rip+0x579c2]        # 774a8 <http_proxies>
   1fae6:	lea    r12d,[rax+0x1]
   1faea:	mov    rdi,r14
   1faed:	mov    DWORD PTR [rip+0x57784],r12d        # 77278 <next_http_proxy.1>
   1faf4:	call   10e90 <wget_vector_size@plt>
   1faf9:	mov    rdi,r14
   1fafc:	mov    r8d,eax
   1faff:	mov    eax,r12d
   1fb02:	cdq    
   1fb03:	idiv   r8d
   1fb06:	mov    esi,edx
   1fb08:	call   10c00 <wget_vector_get@plt>
   1fb0d:	mov    rdi,QWORD PTR [rip+0x5797c]        # 77490 <proxy_mutex>
   1fb14:	mov    r15,rax
   1fb17:	call   117c0 <wget_thread_mutex_unlock@plt>
   1fb1c:	mov    eax,DWORD PTR [r15+0x5c]
   1fb20:	mov    r14,QWORD PTR [r15+0x20]
   1fb24:	movzx  r12d,WORD PTR [r15+0x58]
   1fb29:	or     BYTE PTR [rbp+0x33],0x4
   1fb2d:	cmp    eax,0x1
   1fb30:	je     1fbbe <wget_http_open+0x16e>
   1fb36:	cs nop WORD PTR [rax+rax*1+0x0]
   1fb40:	mov    rdi,QWORD PTR [rbp+0x0]
   1fb44:	movzx  edx,r12w
   1fb48:	mov    rsi,r14
   1fb4b:	call   10fc0 <wget_tcp_connect@plt>
   1fb50:	mov    r12d,eax
   1fb53:	test   eax,eax
   1fb55:	jne    1fbf3 <wget_http_open+0x1a3>
   1fb5b:	mov    rdi,QWORD PTR [rbx+0x20]
   1fb5f:	test   rdi,rdi
   1fb62:	je     1fb6c <wget_http_open+0x11c>
   1fb64:	call   127b0 <wget_strdup@plt>
   1fb69:	mov    rdi,rax
   1fb6c:	movzx  eax,WORD PTR [rbx+0x58]
   1fb70:	mov    QWORD PTR [rbp+0x8],rdi
   1fb74:	mov    edi,0x19000
   1fb79:	xor    r12d,r12d
   1fb7c:	mov    WORD PTR [rbp+0x30],ax
   1fb80:	mov    eax,DWORD PTR [rbx+0x5c]
   1fb83:	mov    DWORD PTR [rbp+0x2c],eax
   1fb86:	call   12780 <wget_buffer_alloc@plt>
   1fb8b:	xor    esi,esi
   1fb8d:	mov    edi,0x10
   1fb92:	mov    QWORD PTR [rbp+0x10],rax
   1fb96:	call   11f00 <wget_vector_create@plt>
   1fb9b:	mov    QWORD PTR [rbp+0x18],rax
   1fb9f:	add    rsp,0x8
   1fba3:	mov    eax,r12d
   1fba6:	pop    rbx
   1fba7:	pop    rbp
   1fba8:	pop    r12
   1fbaa:	pop    r13
   1fbac:	pop    r14
   1fbae:	pop    r15
   1fbb0:	ret    
   1fbb1:	nop    DWORD PTR [rax+0x0]
   1fbb8:	cmp    r15d,0x1
   1fbbc:	jne    1fb40 <wget_http_open+0xf0>
   1fbbe:	mov    rdi,QWORD PTR [rbp+0x0]
   1fbc2:	mov    esi,0x1
   1fbc7:	call   12660 <wget_tcp_set_ssl@plt>
   1fbcc:	mov    rdi,QWORD PTR [rbp+0x0]
   1fbd0:	mov    rsi,r14
   1fbd3:	call   11f80 <wget_tcp_set_ssl_hostname@plt>
   1fbd8:	mov    rdi,QWORD PTR [rbp+0x0]
   1fbdc:	movzx  edx,r12w
   1fbe0:	mov    rsi,r14
   1fbe3:	call   10fc0 <wget_tcp_connect@plt>
   1fbe8:	mov    r12d,eax
   1fbeb:	test   eax,eax
   1fbed:	je     1fb5b <wget_http_open+0x10b>
   1fbf3:	mov    rax,QWORD PTR [rip+0x5787e]        # 77478 <server_stats_callback>
   1fbfa:	cmp    r12d,0xfffffff9
   1fbfe:	jne    1fc05 <wget_http_open+0x1b5>
   1fc00:	test   rax,rax
   1fc03:	jne    1fc10 <wget_http_open+0x1c0>
   1fc05:	mov    rdi,r13
   1fc08:	call   11830 <wget_http_close@plt>
   1fc0d:	jmp    1fb9f <wget_http_open+0x14f>
   1fc0f:	nop
   1fc10:	xor    esi,esi
   1fc12:	mov    rdi,rbp
   1fc15:	call   rax
   1fc17:	jmp    1fc05 <wget_http_open+0x1b5>
   1fc19:	nop    DWORD PTR [rax+0x0]
   1fc20:	cmp    QWORD PTR [rip+0x57878],0x0        # 774a0 <https_proxies>
   1fc28:	je     1fbbe <wget_http_open+0x16e>
   1fc2a:	mov    rdi,QWORD PTR [rip+0x5785f]        # 77490 <proxy_mutex>
   1fc31:	call   12040 <wget_thread_mutex_lock@plt>
   1fc36:	mov    eax,DWORD PTR [rip+0x57638]        # 77274 <next_https_proxy.0>
   1fc3c:	mov    r14,QWORD PTR [rip+0x5785d]        # 774a0 <https_proxies>
   1fc43:	lea    r12d,[rax+0x1]
   1fc47:	mov    rdi,r14
   1fc4a:	mov    DWORD PTR [rip+0x57623],r12d        # 77274 <next_https_proxy.0>
   1fc51:	call   10e90 <wget_vector_size@plt>
   1fc56:	mov    rdi,r14
   1fc59:	mov    r8d,eax
   1fc5c:	mov    eax,r12d
   1fc5f:	cdq    
   1fc60:	idiv   r8d
   1fc63:	mov    esi,edx
   1fc65:	call   10c00 <wget_vector_get@plt>
   1fc6a:	mov    rdi,QWORD PTR [rip+0x5781f]        # 77490 <proxy_mutex>
   1fc71:	mov    r12,rax
   1fc74:	call   117c0 <wget_thread_mutex_unlock@plt>
   1fc79:	cmp    DWORD PTR [r12+0x5c],0x1
   1fc7f:	mov    r15,QWORD PTR [r12+0x20]
   1fc84:	movzx  r14d,WORD PTR [r12+0x58]
   1fc8a:	je     1fd00 <wget_http_open+0x2b0>
   1fc8c:	mov    rdi,QWORD PTR [rbp+0x0]
   1fc90:	movzx  edx,r14w
   1fc94:	mov    rsi,r15
   1fc97:	call   10fc0 <wget_tcp_connect@plt>
   1fc9c:	mov    r12d,eax
   1fc9f:	test   eax,eax
   1fca1:	jne    1fbf3 <wget_http_open+0x1a3>
   1fca7:	movzx  edx,WORD PTR [rbx+0x58]
   1fcab:	mov    rsi,QWORD PTR [rbx+0x20]
   1fcaf:	mov    rdi,QWORD PTR [rbp+0x0]
   1fcb3:	call   1d550 <establish_proxy_connect>
   1fcb8:	mov    r12d,eax
   1fcbb:	test   eax,eax
   1fcbd:	jne    1fc05 <wget_http_open+0x1b5>
   1fcc3:	cmp    DWORD PTR [rbx+0x5c],0x1
   1fcc7:	jne    1fb5b <wget_http_open+0x10b>
   1fccd:	mov    rdi,QWORD PTR [rbp+0x0]
   1fcd1:	mov    esi,0x1
   1fcd6:	call   12660 <wget_tcp_set_ssl@plt>
   1fcdb:	mov    rdi,QWORD PTR [rbp+0x0]
   1fcdf:	mov    rsi,QWORD PTR [rbx+0x20]
   1fce3:	call   11f80 <wget_tcp_set_ssl_hostname@plt>
   1fce8:	mov    rdi,QWORD PTR [rbp+0x0]
   1fcec:	call   12170 <wget_tcp_tls_start@plt>
   1fcf1:	jmp    1fb5b <wget_http_open+0x10b>
   1fcf6:	cs nop WORD PTR [rax+rax*1+0x0]
   1fd00:	mov    rdi,QWORD PTR [rbp+0x0]
   1fd04:	mov    esi,0x1
   1fd09:	call   12660 <wget_tcp_set_ssl@plt>
   1fd0e:	mov    rdi,QWORD PTR [rbp+0x0]
   1fd12:	mov    rsi,r15
   1fd15:	call   11f80 <wget_tcp_set_ssl_hostname@plt>
   1fd1a:	jmp    1fc8c <wget_http_open+0x23c>
   1fd1f:	mov    r12d,0xfffffffd
   1fd25:	jmp    1fb9f <wget_http_open+0x14f>
   1fd2a:	nop    WORD PTR [rax+rax*1+0x0]

000000000001fd30 <wget_http_abort_connection>:
   1fd30:	endbr64 
   1fd34:	test   rdi,rdi
   1fd37:	je     1fd40 <wget_http_abort_connection+0x10>
   1fd39:	or     BYTE PTR [rdi+0x33],0x2
   1fd3d:	ret    
   1fd3e:	xchg   ax,ax
   1fd40:	mov    BYTE PTR [rip+0x57769],0x1        # 774b0 <abort_indicator>
   1fd47:	ret    
   1fd48:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001fd50 <wget_server_set_stats_callback>:
   1fd50:	endbr64 
   1fd54:	mov    QWORD PTR [rip+0x5771d],rdi        # 77478 <server_stats_callback>
   1fd5b:	ret    
   1fd5c:	nop    DWORD PTR [rax+0x0]

000000000001fd60 <wget_http_free_link>:
   1fd60:	endbr64 
   1fd64:	push   rbp
   1fd65:	mov    rbp,rdi
   1fd68:	push   rbx
   1fd69:	sub    rsp,0x8
   1fd6d:	mov    rdi,QWORD PTR [rdi]
   1fd70:	mov    rbx,QWORD PTR [rip+0x56271]        # 75fe8 <wget_free@@Base-0x1328>
   1fd77:	test   rdi,rdi
   1fd7a:	je     1fd86 <wget_http_free_link+0x26>
   1fd7c:	call   QWORD PTR [rbx]
   1fd7e:	mov    QWORD PTR [rbp+0x0],0x0
   1fd86:	mov    rdi,QWORD PTR [rbp+0x8]
   1fd8a:	test   rdi,rdi
   1fd8d:	je     1fd99 <wget_http_free_link+0x39>
   1fd8f:	call   QWORD PTR [rbx]
   1fd91:	mov    QWORD PTR [rbp+0x8],0x0
   1fd99:	mov    rax,QWORD PTR [rbx]
   1fd9c:	add    rsp,0x8
   1fda0:	mov    rdi,rbp
   1fda3:	pop    rbx
   1fda4:	pop    rbp
   1fda5:	jmp    rax
   1fda7:	nop    WORD PTR [rax+rax*1+0x0]

000000000001fdb0 <wget_http_free_digest>:
   1fdb0:	endbr64 
   1fdb4:	push   rbp
   1fdb5:	mov    rbp,rdi
   1fdb8:	push   rbx
   1fdb9:	sub    rsp,0x8
   1fdbd:	mov    rdi,QWORD PTR [rdi]
   1fdc0:	mov    rbx,QWORD PTR [rip+0x56221]        # 75fe8 <wget_free@@Base-0x1328>
   1fdc7:	test   rdi,rdi
   1fdca:	je     1fdd6 <wget_http_free_digest+0x26>
   1fdcc:	call   QWORD PTR [rbx]
   1fdce:	mov    QWORD PTR [rbp+0x0],0x0
   1fdd6:	mov    rdi,QWORD PTR [rbp+0x8]
   1fdda:	test   rdi,rdi
   1fddd:	je     1fde9 <wget_http_free_digest+0x39>
   1fddf:	call   QWORD PTR [rbx]
   1fde1:	mov    QWORD PTR [rbp+0x8],0x0
   1fde9:	mov    rax,QWORD PTR [rbx]
   1fdec:	add    rsp,0x8
   1fdf0:	mov    rdi,rbp
   1fdf3:	pop    rbx
   1fdf4:	pop    rbp
   1fdf5:	jmp    rax
   1fdf7:	nop    WORD PTR [rax+rax*1+0x0]

000000000001fe00 <compare_param>:
   1fe00:	endbr64 
   1fe04:	mov    rsi,QWORD PTR [rsi]
   1fe07:	mov    rdi,QWORD PTR [rdi]
   1fe0a:	jmp    12590 <wget_strcasecmp_ascii@plt>
   1fe0f:	nop

000000000001fe10 <cookie_free>:
   1fe10:	endbr64 
   1fe14:	sub    rsp,0x18
   1fe18:	mov    QWORD PTR [rsp+0x8],rdi
   1fe1d:	test   rdi,rdi
   1fe20:	je     1fe2c <cookie_free+0x1c>
   1fe22:	lea    rdi,[rsp+0x8]
   1fe27:	call   123a0 <wget_cookie_free@plt>
   1fe2c:	add    rsp,0x18
   1fe30:	ret    
   1fe31:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1fe3c:	nop    DWORD PTR [rax+0x0]

000000000001fe40 <wget_http_free_challenge>:
   1fe40:	endbr64 
   1fe44:	push   rbp
   1fe45:	mov    rbp,rdi
   1fe48:	push   rbx
   1fe49:	sub    rsp,0x8
   1fe4d:	mov    rdi,QWORD PTR [rdi]
   1fe50:	mov    rbx,QWORD PTR [rip+0x56191]        # 75fe8 <wget_free@@Base-0x1328>
   1fe57:	test   rdi,rdi
   1fe5a:	je     1fe66 <wget_http_free_challenge+0x26>
   1fe5c:	call   QWORD PTR [rbx]
   1fe5e:	mov    QWORD PTR [rbp+0x0],0x0
   1fe66:	lea    rdi,[rbp+0x8]
   1fe6a:	call   10950 <wget_hashmap_free@plt>
   1fe6f:	mov    rax,QWORD PTR [rbx]
   1fe72:	add    rsp,0x8
   1fe76:	mov    rdi,rbp
   1fe79:	pop    rbx
   1fe7a:	pop    rbp
   1fe7b:	jmp    rax
   1fe7d:	nop    DWORD PTR [rax]

000000000001fe80 <wget_http_get_host>:
   1fe80:	endbr64 
   1fe84:	mov    rax,QWORD PTR [rdi+0x8]
   1fe88:	ret    
   1fe89:	nop    DWORD PTR [rax+0x0]

000000000001fe90 <wget_http_get_port>:
   1fe90:	endbr64 
   1fe94:	movzx  eax,WORD PTR [rdi+0x30]
   1fe98:	ret    
   1fe99:	nop    DWORD PTR [rax+0x0]

000000000001fea0 <wget_http_get_scheme>:
   1fea0:	endbr64 
   1fea4:	mov    eax,DWORD PTR [rdi+0x2c]
   1fea7:	ret    
   1fea8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000001feb0 <wget_http_get_protocol>:
   1feb0:	endbr64 
   1feb4:	movsx  eax,BYTE PTR [rdi+0x32]
   1feb8:	ret    
   1feb9:	nop    DWORD PTR [rax+0x0]

000000000001fec0 <wget_http_isseparator>:
   1fec0:	endbr64 
   1fec4:	movzx  edi,dil
   1fec8:	lea    rax,[rip+0x2cfb1]        # 4ce80 <http_ctype>
   1fecf:	movzx  eax,BYTE PTR [rax+rdi*1]
   1fed3:	and    eax,0x1
   1fed6:	ret    
   1fed7:	nop    WORD PTR [rax+rax*1+0x0]

000000000001fee0 <wget_http_istoken>:
   1fee0:	endbr64 
   1fee4:	lea    edx,[rdi-0x21]
   1fee7:	xor    eax,eax
   1fee9:	cmp    dl,0x5d
   1feec:	ja     1ff02 <wget_http_istoken+0x22>
   1feee:	movzx  edi,dil
   1fef2:	lea    rax,[rip+0x2cf87]        # 4ce80 <http_ctype>
   1fef9:	movzx  eax,BYTE PTR [rax+rdi*1]
   1fefd:	not    eax
   1feff:	and    eax,0x1
   1ff02:	ret    
   1ff03:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1ff0e:	xchg   ax,ax

000000000001ff10 <wget_http_parse_token>:
   1ff10:	endbr64 
   1ff14:	push   r12
   1ff16:	mov    r12,rdi
   1ff19:	push   rbp
   1ff1a:	mov    rbp,rdi
   1ff1d:	push   rbx
   1ff1e:	mov    rbx,rsi
   1ff21:	jmp    1ff2c <wget_http_parse_token+0x1c>
   1ff23:	nop    DWORD PTR [rax+rax*1+0x0]
   1ff28:	add    r12,0x1
   1ff2c:	movsx  edi,BYTE PTR [r12]
   1ff31:	call   11720 <wget_http_istoken@plt>
   1ff36:	test   al,al
   1ff38:	jne    1ff28 <wget_http_parse_token+0x18>
   1ff3a:	mov    rsi,r12
   1ff3d:	mov    rdi,rbp
   1ff40:	sub    rsi,rbp
   1ff43:	call   126b0 <wget_strmemdup@plt>
   1ff48:	mov    QWORD PTR [rbx],rax
   1ff4b:	mov    rax,r12
   1ff4e:	pop    rbx
   1ff4f:	pop    rbp
   1ff50:	pop    r12
   1ff52:	ret    
   1ff53:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1ff5e:	xchg   ax,ax

000000000001ff60 <wget_http_parse_quoted_string>:
   1ff60:	endbr64 
   1ff64:	push   r12
   1ff66:	mov    r12,rdi
   1ff69:	push   rbx
   1ff6a:	mov    rbx,rsi
   1ff6d:	sub    rsp,0x8
   1ff71:	cmp    BYTE PTR [rdi],0x22
   1ff74:	je     1ff90 <wget_http_parse_quoted_string+0x30>
   1ff76:	mov    QWORD PTR [rsi],0x0
   1ff7d:	add    rsp,0x8
   1ff81:	mov    rax,r12
   1ff84:	pop    rbx
   1ff85:	pop    r12
   1ff87:	ret    
   1ff88:	nop    DWORD PTR [rax+rax*1+0x0]
   1ff90:	movzx  eax,BYTE PTR [r12+0x1]
   1ff96:	lea    rdi,[rdi+0x1]
   1ff9a:	mov    r12,rdi
   1ff9d:	cmp    al,0x22
   1ff9f:	je     20010 <wget_http_parse_quoted_string+0xb0>
   1ffa1:	test   al,al
   1ffa3:	jne    1ffbe <wget_http_parse_quoted_string+0x5e>
   1ffa5:	jmp    20010 <wget_http_parse_quoted_string+0xb0>
   1ffa7:	nop    WORD PTR [rax+rax*1+0x0]
   1ffb0:	mov    eax,edx
   1ffb2:	add    r12,0x1
   1ffb6:	cmp    al,0x22
   1ffb8:	je     1ffe0 <wget_http_parse_quoted_string+0x80>
   1ffba:	test   al,al
   1ffbc:	je     1ffe0 <wget_http_parse_quoted_string+0x80>
   1ffbe:	movzx  edx,BYTE PTR [r12+0x1]
   1ffc4:	cmp    al,0x5c
   1ffc6:	jne    1ffb0 <wget_http_parse_quoted_string+0x50>
   1ffc8:	test   dl,dl
   1ffca:	je     1ffb0 <wget_http_parse_quoted_string+0x50>
   1ffcc:	movzx  eax,BYTE PTR [r12+0x2]
   1ffd2:	add    r12,0x2
   1ffd6:	cmp    al,0x22
   1ffd8:	jne    1ffba <wget_http_parse_quoted_string+0x5a>
   1ffda:	nop    WORD PTR [rax+rax*1+0x0]
   1ffe0:	mov    rsi,r12
   1ffe3:	sub    rsi,rdi
   1ffe6:	call   126b0 <wget_strmemdup@plt>
   1ffeb:	mov    QWORD PTR [rbx],rax
   1ffee:	xor    eax,eax
   1fff0:	cmp    BYTE PTR [r12],0x22
   1fff5:	sete   al
   1fff8:	add    rsp,0x8
   1fffc:	add    r12,rax
   1ffff:	pop    rbx
   20000:	mov    rax,r12
   20003:	pop    r12
   20005:	ret    
   20006:	cs nop WORD PTR [rax+rax*1+0x0]
   20010:	xor    esi,esi
   20012:	jmp    1ffe6 <wget_http_parse_quoted_string+0x86>
   20014:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2001f:	nop

0000000000020020 <wget_http_parse_param>:
   20020:	endbr64 
   20024:	push   r13
   20026:	push   r12
   20028:	mov    r12,rdx
   2002b:	push   rbp
   2002c:	mov    rbp,rsi
   2002f:	push   rbx
   20030:	sub    rsp,0x8
   20034:	mov    QWORD PTR [rdx],0x0
   2003b:	mov    QWORD PTR [rsi],0x0
   20042:	movsx  edx,BYTE PTR [rdi]
   20045:	cmp    dl,0x20
   20048:	je     20058 <wget_http_parse_param+0x38>
   2004a:	mov    eax,edx
   2004c:	cmp    edx,0x9
   2004f:	jne    2006c <wget_http_parse_param+0x4c>
   20051:	nop    DWORD PTR [rax+0x0]
   20058:	movsx  edx,BYTE PTR [rdi+0x1]
   2005c:	add    rdi,0x1
   20060:	mov    eax,edx
   20062:	cmp    dl,0x9
   20065:	je     20058 <wget_http_parse_param+0x38>
   20067:	cmp    edx,0x20
   2006a:	je     20058 <wget_http_parse_param+0x38>
   2006c:	cmp    al,0x3b
   2006e:	je     20108 <wget_http_parse_param+0xe8>
   20074:	movzx  eax,BYTE PTR [rdi]
   20077:	mov    r13,rdi
   2007a:	mov    rbx,r13
   2007d:	test   al,al
   2007f:	jne    20090 <wget_http_parse_param+0x70>
   20081:	jmp    200e0 <wget_http_parse_param+0xc0>
   20083:	nop    DWORD PTR [rax+rax*1+0x0]
   20088:	movzx  eax,BYTE PTR [rbx+0x1]
   2008c:	add    rbx,0x1
   20090:	movsx  edi,al
   20093:	call   11720 <wget_http_istoken@plt>
   20098:	test   al,al
   2009a:	jne    20088 <wget_http_parse_param+0x68>
   2009c:	mov    rsi,rbx
   2009f:	mov    rdi,r13
   200a2:	sub    rsi,r13
   200a5:	call   126b0 <wget_strmemdup@plt>
   200aa:	mov    QWORD PTR [rbp+0x0],rax
   200ae:	movsx  edx,BYTE PTR [rbx]
   200b1:	mov    eax,edx
   200b3:	cmp    dl,0x9
   200b6:	je     200c0 <wget_http_parse_param+0xa0>
   200b8:	cmp    edx,0x20
   200bb:	jne    200d4 <wget_http_parse_param+0xb4>
   200bd:	nop    DWORD PTR [rax]
   200c0:	movsx  edx,BYTE PTR [rbx+0x1]
   200c4:	add    rbx,0x1
   200c8:	mov    eax,edx
   200ca:	cmp    dl,0x20
   200cd:	je     200c0 <wget_http_parse_param+0xa0>
   200cf:	cmp    edx,0x9
   200d2:	je     200c0 <wget_http_parse_param+0xa0>
   200d4:	test   al,al
   200d6:	je     200f0 <wget_http_parse_param+0xd0>
   200d8:	lea    r13,[rbx+0x1]
   200dc:	cmp    al,0x3d
   200de:	je     20140 <wget_http_parse_param+0x120>
   200e0:	add    rsp,0x8
   200e4:	mov    rax,r13
   200e7:	pop    rbx
   200e8:	pop    rbp
   200e9:	pop    r12
   200eb:	pop    r13
   200ed:	ret    
   200ee:	xchg   ax,ax
   200f0:	add    rsp,0x8
   200f4:	mov    r13,rbx
   200f7:	mov    rax,r13
   200fa:	pop    rbx
   200fb:	pop    rbp
   200fc:	pop    r12
   200fe:	pop    r13
   20100:	ret    
   20101:	nop    DWORD PTR [rax+0x0]
   20108:	movsx  edx,BYTE PTR [rdi+0x1]
   2010c:	lea    r13,[rdi+0x1]
   20110:	mov    eax,edx
   20112:	cmp    dl,0x20
   20115:	jne    20130 <wget_http_parse_param+0x110>
   20117:	nop    WORD PTR [rax+rax*1+0x0]
   20120:	movsx  edx,BYTE PTR [r13+0x1]
   20125:	add    r13,0x1
   20129:	mov    eax,edx
   2012b:	cmp    dl,0x20
   2012e:	je     20120 <wget_http_parse_param+0x100>
   20130:	cmp    edx,0x9
   20133:	je     20120 <wget_http_parse_param+0x100>
   20135:	jmp    2007a <wget_http_parse_param+0x5a>
   2013a:	nop    WORD PTR [rax+rax*1+0x0]
   20140:	movsx  edx,BYTE PTR [rbx+0x1]
   20144:	mov    eax,edx
   20146:	cmp    dl,0x20
   20149:	jne    20160 <wget_http_parse_param+0x140>
   2014b:	nop    DWORD PTR [rax+rax*1+0x0]
   20150:	movsx  edx,BYTE PTR [r13+0x1]
   20155:	add    r13,0x1
   20159:	mov    eax,edx
   2015b:	cmp    dl,0x20
   2015e:	je     20150 <wget_http_parse_param+0x130>
   20160:	cmp    edx,0x9
   20163:	je     20150 <wget_http_parse_param+0x130>
   20165:	mov    rsi,r12
   20168:	mov    rdi,r13
   2016b:	cmp    al,0x22
   2016d:	je     2017e <wget_http_parse_param+0x15e>
   2016f:	add    rsp,0x8
   20173:	pop    rbx
   20174:	pop    rbp
   20175:	pop    r12
   20177:	pop    r13
   20179:	jmp    10c20 <wget_http_parse_token@plt>
   2017e:	add    rsp,0x8
   20182:	pop    rbx
   20183:	pop    rbp
   20184:	pop    r12
   20186:	pop    r13
   20188:	jmp    11ba0 <wget_http_parse_quoted_string@plt>
   2018d:	nop    DWORD PTR [rax]

0000000000020190 <wget_http_parse_name>:
   20190:	endbr64 
   20194:	sub    rsp,0x8
   20198:	movsx  eax,BYTE PTR [rdi]
   2019b:	cmp    eax,0x20
   2019e:	jne    201ad <wget_http_parse_name+0x1d>
   201a0:	movsx  eax,BYTE PTR [rdi+0x1]
   201a4:	add    rdi,0x1
   201a8:	cmp    eax,0x20
   201ab:	je     201a0 <wget_http_parse_name+0x10>
   201ad:	cmp    eax,0x9
   201b0:	je     201a0 <wget_http_parse_name+0x10>
   201b2:	call   10c20 <wget_http_parse_token@plt>
   201b7:	movzx  edx,BYTE PTR [rax]
   201ba:	test   dl,dl
   201bc:	jne    201cc <wget_http_parse_name+0x3c>
   201be:	jmp    201d1 <wget_http_parse_name+0x41>
   201c0:	movzx  edx,BYTE PTR [rax+0x1]
   201c4:	add    rax,0x1
   201c8:	test   dl,dl
   201ca:	je     201d1 <wget_http_parse_name+0x41>
   201cc:	cmp    dl,0x3a
   201cf:	jne    201c0 <wget_http_parse_name+0x30>
   201d1:	cmp    dl,0x3a
   201d4:	sete   dl
   201d7:	add    rsp,0x8
   201db:	movzx  edx,dl
   201de:	add    rax,rdx
   201e1:	ret    
   201e2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   201ed:	nop    DWORD PTR [rax]

00000000000201f0 <wget_parse_name_fixed>:
   201f0:	endbr64 
   201f4:	push   r12
   201f6:	push   rbp
   201f7:	mov    rbp,rdx
   201fa:	push   rbx
   201fb:	movsx  eax,BYTE PTR [rdi]
   201fe:	mov    rbx,rdi
   20201:	cmp    eax,0x20
   20204:	jne    2021d <wget_parse_name_fixed+0x2d>
   20206:	cs nop WORD PTR [rax+rax*1+0x0]
   20210:	movsx  eax,BYTE PTR [rbx+0x1]
   20214:	add    rbx,0x1
   20218:	cmp    eax,0x20
   2021b:	je     20210 <wget_parse_name_fixed+0x20>
   2021d:	cmp    eax,0x9
   20220:	je     20210 <wget_parse_name_fixed+0x20>
   20222:	mov    QWORD PTR [rsi],rbx
   20225:	mov    r12,rbx
   20228:	jmp    20234 <wget_parse_name_fixed+0x44>
   2022a:	nop    WORD PTR [rax+rax*1+0x0]
   20230:	add    r12,0x1
   20234:	movsx  edi,BYTE PTR [r12]
   20239:	call   11720 <wget_http_istoken@plt>
   2023e:	test   al,al
   20240:	jne    20230 <wget_parse_name_fixed+0x40>
   20242:	mov    rax,r12
   20245:	sub    rax,rbx
   20248:	mov    QWORD PTR [rbp+0x0],rax
   2024c:	movzx  eax,BYTE PTR [r12]
   20251:	cmp    al,0x3a
   20253:	je     20272 <wget_parse_name_fixed+0x82>
   20255:	test   al,al
   20257:	je     20272 <wget_parse_name_fixed+0x82>
   20259:	nop    DWORD PTR [rax+0x0]
   20260:	movzx  eax,BYTE PTR [r12+0x1]
   20266:	add    r12,0x1
   2026a:	test   al,al
   2026c:	je     20272 <wget_parse_name_fixed+0x82>
   2026e:	cmp    al,0x3a
   20270:	jne    20260 <wget_parse_name_fixed+0x70>
   20272:	cmp    al,0x3a
   20274:	pop    rbx
   20275:	pop    rbp
   20276:	sete   al
   20279:	movzx  eax,al
   2027c:	add    r12,rax
   2027f:	mov    rax,r12
   20282:	pop    r12
   20284:	ret    
   20285:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000020290 <wget_http_add_param>:
   20290:	endbr64 
   20294:	push   rbp
   20295:	mov    rbp,rsi
   20298:	push   rbx
   20299:	mov    rbx,rdi
   2029c:	sub    rsp,0x8
   202a0:	mov    rdi,QWORD PTR [rdi]
   202a3:	test   rdi,rdi
   202a6:	je     202c0 <wget_http_add_param+0x30>
   202a8:	add    rsp,0x8
   202ac:	mov    rsi,rbp
   202af:	mov    edx,0x10
   202b4:	pop    rbx
   202b5:	pop    rbp
   202b6:	jmp    11a20 <wget_vector_add_memdup@plt>
   202bb:	nop    DWORD PTR [rax+rax*1+0x0]
   202c0:	mov    edi,0x4
   202c5:	lea    rsi,[rip+0xfffffffffffffb34]        # 1fe00 <compare_param>
   202cc:	call   11f00 <wget_vector_create@plt>
   202d1:	mov    QWORD PTR [rbx],rax
   202d4:	mov    rdi,rax
   202d7:	jmp    202a8 <wget_http_add_param+0x18>
   202d9:	nop    DWORD PTR [rax+0x0]

00000000000202e0 <wget_http_parse_link>:
   202e0:	endbr64 
   202e4:	push   r15
   202e6:	pxor   xmm0,xmm0
   202ea:	push   r14
   202ec:	mov    r14,rdi
   202ef:	push   r13
   202f1:	push   r12
   202f3:	push   rbp
   202f4:	push   rbx
   202f5:	mov    rbx,rsi
   202f8:	sub    rsp,0x28
   202fc:	mov    rax,QWORD PTR fs:0x28
   20305:	mov    QWORD PTR [rsp+0x18],rax
   2030a:	xor    eax,eax
   2030c:	mov    QWORD PTR [rsi+0x10],0x0
   20314:	movups XMMWORD PTR [rsi],xmm0
   20317:	movsx  edx,BYTE PTR [rdi]
   2031a:	cmp    dl,0x20
   2031d:	je     20328 <wget_http_parse_link+0x48>
   2031f:	mov    eax,edx
   20321:	jmp    20338 <wget_http_parse_link+0x58>
   20323:	nop    DWORD PTR [rax+rax*1+0x0]
   20328:	movsx  edx,BYTE PTR [r14+0x1]
   2032d:	add    r14,0x1
   20331:	mov    eax,edx
   20333:	cmp    dl,0x20
   20336:	je     20328 <wget_http_parse_link+0x48>
   20338:	cmp    edx,0x9
   2033b:	je     20328 <wget_http_parse_link+0x48>
   2033d:	cmp    al,0x3c
   2033f:	je     20370 <wget_http_parse_link+0x90>
   20341:	mov    rax,QWORD PTR [rsp+0x18]
   20346:	sub    rax,QWORD PTR fs:0x28
   2034f:	jne    20599 <wget_http_parse_link+0x2b9>
   20355:	add    rsp,0x28
   20359:	mov    rax,r14
   2035c:	pop    rbx
   2035d:	pop    rbp
   2035e:	pop    r12
   20360:	pop    r13
   20362:	pop    r14
   20364:	pop    r15
   20366:	ret    
   20367:	nop    WORD PTR [rax+rax*1+0x0]
   20370:	lea    r12,[r14+0x1]
   20374:	mov    esi,0x3e
   20379:	xor    r14d,r14d
   2037c:	mov    rdi,r12
   2037f:	call   109e0 <strchr@plt>
   20384:	mov    rbp,rax
   20387:	test   rax,rax
   2038a:	je     20341 <wget_http_parse_link+0x61>
   2038c:	mov    rsi,rax
   2038f:	mov    rdi,r12
   20392:	lea    r14,[rbp+0x1]
   20396:	mov    QWORD PTR [rsp+0x8],0x0
   2039f:	mov    QWORD PTR [rsp+0x10],0x0
   203a8:	sub    rsi,r12
   203ab:	call   126b0 <wget_strmemdup@plt>
   203b0:	mov    QWORD PTR [rbx],rax
   203b3:	movsx  edx,BYTE PTR [rbp+0x1]
   203b7:	mov    eax,edx
   203b9:	cmp    dl,0x9
   203bc:	je     203c8 <wget_http_parse_link+0xe8>
   203be:	cmp    edx,0x20
   203c1:	jne    203dd <wget_http_parse_link+0xfd>
   203c3:	nop    DWORD PTR [rax+rax*1+0x0]
   203c8:	movsx  edx,BYTE PTR [r14+0x1]
   203cd:	add    r14,0x1
   203d1:	mov    eax,edx
   203d3:	cmp    dl,0x20
   203d6:	je     203c8 <wget_http_parse_link+0xe8>
   203d8:	cmp    edx,0x9
   203db:	je     203c8 <wget_http_parse_link+0xe8>
   203dd:	cmp    al,0x3b
   203df:	jne    20505 <wget_http_parse_link+0x225>
   203e5:	lea    r12,[rsp+0x10]
   203ea:	lea    rbp,[rsp+0x8]
   203ef:	jmp    20435 <wget_http_parse_link+0x155>
   203f1:	nop    DWORD PTR [rax+0x0]
   203f8:	mov    rax,QWORD PTR [rip+0x55be9]        # 75fe8 <wget_free@@Base-0x1328>
   203ff:	mov    rdi,r15
   20402:	call   QWORD PTR [rax]
   20404:	mov    QWORD PTR [rsp+0x8],0x0
   2040d:	mov    rdi,QWORD PTR [rsp+0x10]
   20412:	test   rdi,rdi
   20415:	je     20429 <wget_http_parse_link+0x149>
   20417:	mov    rax,QWORD PTR [rip+0x55bca]        # 75fe8 <wget_free@@Base-0x1328>
   2041e:	call   QWORD PTR [rax]
   20420:	mov    QWORD PTR [rsp+0x10],0x0
   20429:	movzx  eax,BYTE PTR [r14]
   2042d:	cmp    al,0x3b
   2042f:	jne    20505 <wget_http_parse_link+0x225>
   20435:	mov    rdi,r14
   20438:	mov    rdx,r12
   2043b:	mov    rsi,rbp
   2043e:	call   12770 <wget_http_parse_param@plt>
   20443:	mov    r15,QWORD PTR [rsp+0x8]
   20448:	mov    r14,rax
   2044b:	test   r15,r15
   2044e:	je     2040d <wget_http_parse_link+0x12d>
   20450:	mov    r13,QWORD PTR [rsp+0x10]
   20455:	test   r13,r13
   20458:	je     203f8 <wget_http_parse_link+0x118>
   2045a:	lea    rsi,[rip+0x2bce4]        # 4c145 <__func__.0+0x65>
   20461:	mov    rdi,r15
   20464:	call   12590 <wget_strcasecmp_ascii@plt>
   20469:	test   eax,eax
   2046b:	jne    20510 <wget_http_parse_link+0x230>
   20471:	lea    rsi,[rip+0x2c552]        # 4c9ca <__func__.5+0x1a>
   20478:	mov    rdi,r13
   2047b:	call   12590 <wget_strcasecmp_ascii@plt>
   20480:	test   eax,eax
   20482:	je     20560 <wget_http_parse_link+0x280>
   20488:	lea    rsi,[rip+0x2c547]        # 4c9d6 <__func__.5+0x26>
   2048f:	mov    rdi,r13
   20492:	call   12590 <wget_strcasecmp_ascii@plt>
   20497:	test   eax,eax
   20499:	jne    204a8 <wget_http_parse_link+0x1c8>
   2049b:	mov    DWORD PTR [rbx+0x14],0x2
   204a2:	nop    WORD PTR [rax+rax*1+0x0]
   204a8:	movsx  eax,BYTE PTR [r14]
   204ac:	cmp    eax,0x20
   204af:	je     204c0 <wget_http_parse_link+0x1e0>
   204b1:	cmp    eax,0x9
   204b4:	jne    203f8 <wget_http_parse_link+0x118>
   204ba:	nop    WORD PTR [rax+rax*1+0x0]
   204c0:	movsx  eax,BYTE PTR [r14+0x1]
   204c5:	add    r14,0x1
   204c9:	cmp    eax,0x20
   204cc:	je     204c0 <wget_http_parse_link+0x1e0>
   204ce:	cmp    eax,0x9
   204d1:	je     204c0 <wget_http_parse_link+0x1e0>
   204d3:	test   r15,r15
   204d6:	jne    203f8 <wget_http_parse_link+0x118>
   204dc:	jmp    2040d <wget_http_parse_link+0x12d>
   204e1:	nop    DWORD PTR [rax+0x0]
   204e8:	movsx  edx,al
   204eb:	cmp    al,0x20
   204ed:	je     20341 <wget_http_parse_link+0x61>
   204f3:	cmp    edx,0x9
   204f6:	je     20341 <wget_http_parse_link+0x61>
   204fc:	movzx  eax,BYTE PTR [r14+0x1]
   20501:	add    r14,0x1
   20505:	test   al,al
   20507:	jne    204e8 <wget_http_parse_link+0x208>
   20509:	jmp    20341 <wget_http_parse_link+0x61>
   2050e:	xchg   ax,ax
   20510:	lea    rsi,[rip+0x2c4c9]        # 4c9e0 <__func__.5+0x30>
   20517:	mov    rdi,r15
   2051a:	call   12590 <wget_strcasecmp_ascii@plt>
   2051f:	test   eax,eax
   20521:	je     20570 <wget_http_parse_link+0x290>
   20523:	lea    rsi,[rip+0x2c578]        # 4caa2 <__func__.5+0xf2>
   2052a:	mov    rdi,r15
   2052d:	call   12590 <wget_strcasecmp_ascii@plt>
   20532:	test   eax,eax
   20534:	jne    204a8 <wget_http_parse_link+0x1c8>
   2053a:	cmp    QWORD PTR [rbx+0x8],0x0
   2053f:	jne    204a8 <wget_http_parse_link+0x1c8>
   20545:	mov    QWORD PTR [rbx+0x8],r13
   20549:	mov    QWORD PTR [rsp+0x10],0x0
   20552:	jmp    204a8 <wget_http_parse_link+0x1c8>
   20557:	nop    WORD PTR [rax+rax*1+0x0]
   20560:	mov    DWORD PTR [rbx+0x14],0x1
   20567:	jmp    204a8 <wget_http_parse_link+0x1c8>
   2056c:	nop    DWORD PTR [rax+0x0]
   20570:	mov    edx,0xa
   20575:	xor    esi,esi
   20577:	mov    rdi,r13
   2057a:	call   11c90 <strtol@plt>
   2057f:	mov    r15,QWORD PTR [rsp+0x8]
   20584:	mov    DWORD PTR [rbx+0x10],eax
   20587:	movsx  eax,BYTE PTR [r14]
   2058b:	cmp    eax,0x20
   2058e:	jne    204ce <wget_http_parse_link+0x1ee>
   20594:	jmp    204c0 <wget_http_parse_link+0x1e0>
   20599:	call   11760 <__stack_chk_fail@plt>
   2059e:	xchg   ax,ax

00000000000205a0 <wget_http_parse_digest>:
   205a0:	endbr64 
   205a4:	push   r12
   205a6:	pxor   xmm0,xmm0
   205aa:	push   rbx
   205ab:	mov    rbx,rsi
   205ae:	sub    rsp,0x8
   205b2:	movups XMMWORD PTR [rsi],xmm0
   205b5:	movsx  eax,BYTE PTR [rdi]
   205b8:	cmp    eax,0x20
   205bb:	je     205c8 <wget_http_parse_digest+0x28>
   205bd:	cmp    eax,0x9
   205c0:	jne    205da <wget_http_parse_digest+0x3a>
   205c2:	nop    WORD PTR [rax+rax*1+0x0]
   205c8:	movsx  eax,BYTE PTR [rdi+0x1]
   205cc:	add    rdi,0x1
   205d0:	cmp    eax,0x9
   205d3:	je     205c8 <wget_http_parse_digest+0x28>
   205d5:	cmp    eax,0x20
   205d8:	je     205c8 <wget_http_parse_digest+0x28>
   205da:	mov    rsi,rbx
   205dd:	call   10c20 <wget_http_parse_token@plt>
   205e2:	movsx  edx,BYTE PTR [rax]
   205e5:	mov    r12,rax
   205e8:	mov    eax,edx
   205ea:	cmp    dl,0x20
   205ed:	jne    20601 <wget_http_parse_digest+0x61>
   205ef:	nop
   205f0:	movsx  edx,BYTE PTR [r12+0x1]
   205f6:	add    r12,0x1
   205fa:	mov    eax,edx
   205fc:	cmp    dl,0x20
   205ff:	je     205f0 <wget_http_parse_digest+0x50>
   20601:	cmp    edx,0x9
   20604:	je     205f0 <wget_http_parse_digest+0x50>
   20606:	cmp    al,0x3d
   20608:	jne    20620 <wget_http_parse_digest+0x80>
   2060a:	jmp    20638 <wget_http_parse_digest+0x98>
   2060c:	nop    DWORD PTR [rax+0x0]
   20610:	movsx  edx,al
   20613:	cmp    al,0x20
   20615:	je     20629 <wget_http_parse_digest+0x89>
   20617:	cmp    edx,0x9
   2061a:	je     20629 <wget_http_parse_digest+0x89>
   2061c:	add    r12,0x1
   20620:	movzx  eax,BYTE PTR [r12]
   20625:	test   al,al
   20627:	jne    20610 <wget_http_parse_digest+0x70>
   20629:	add    rsp,0x8
   2062d:	mov    rax,r12
   20630:	pop    rbx
   20631:	pop    r12
   20633:	ret    
   20634:	nop    DWORD PTR [rax+0x0]
   20638:	movsx  edx,BYTE PTR [r12+0x1]
   2063e:	lea    rdi,[r12+0x1]
   20643:	mov    eax,edx
   20645:	cmp    dl,0x20
   20648:	jne    2065f <wget_http_parse_digest+0xbf>
   2064a:	nop    WORD PTR [rax+rax*1+0x0]
   20650:	movsx  edx,BYTE PTR [rdi+0x1]
   20654:	add    rdi,0x1
   20658:	mov    eax,edx
   2065a:	cmp    dl,0x20
   2065d:	je     20650 <wget_http_parse_digest+0xb0>
   2065f:	cmp    edx,0x9
   20662:	je     20650 <wget_http_parse_digest+0xb0>
   20664:	cmp    al,0x22
   20666:	je     206ac <wget_http_parse_digest+0x10c>
   20668:	movzx  eax,BYTE PTR [rdi]
   2066b:	mov    r12,rdi
   2066e:	xor    esi,esi
   20670:	movabs rdx,0x800100100000200
   2067a:	test   al,al
   2067c:	jne    2068e <wget_http_parse_digest+0xee>
   2067e:	jmp    2069e <wget_http_parse_digest+0xfe>
   20680:	movzx  eax,BYTE PTR [r12+0x1]
   20686:	add    r12,0x1
   2068a:	test   al,al
   2068c:	je     20698 <wget_http_parse_digest+0xf8>
   2068e:	cmp    al,0x3b
   20690:	ja     20680 <wget_http_parse_digest+0xe0>
   20692:	bt     rdx,rax
   20696:	jae    20680 <wget_http_parse_digest+0xe0>
   20698:	mov    rsi,r12
   2069b:	sub    rsi,rdi
   2069e:	call   126b0 <wget_strmemdup@plt>
   206a3:	mov    QWORD PTR [rbx+0x8],rax
   206a7:	jmp    20620 <wget_http_parse_digest+0x80>
   206ac:	lea    rsi,[rbx+0x8]
   206b0:	call   11ba0 <wget_http_parse_quoted_string@plt>
   206b5:	mov    r12,rax
   206b8:	jmp    20620 <wget_http_parse_digest+0x80>
   206bd:	nop    DWORD PTR [rax]

00000000000206c0 <wget_http_parse_challenge>:
   206c0:	endbr64 
   206c4:	push   r14
   206c6:	pxor   xmm0,xmm0
   206ca:	push   r13
   206cc:	push   r12
   206ce:	push   rbp
   206cf:	mov    rbp,rsi
   206d2:	push   rbx
   206d3:	sub    rsp,0x20
   206d7:	mov    rax,QWORD PTR fs:0x28
   206e0:	mov    QWORD PTR [rsp+0x18],rax
   206e5:	xor    eax,eax
   206e7:	movups XMMWORD PTR [rsi],xmm0
   206ea:	movsx  eax,BYTE PTR [rdi]
   206ed:	cmp    eax,0x9
   206f0:	je     20700 <wget_http_parse_challenge+0x40>
   206f2:	cmp    eax,0x20
   206f5:	jne    20712 <wget_http_parse_challenge+0x52>
   206f7:	nop    WORD PTR [rax+rax*1+0x0]
   20700:	movsx  eax,BYTE PTR [rdi+0x1]
   20704:	add    rdi,0x1
   20708:	cmp    eax,0x20
   2070b:	je     20700 <wget_http_parse_challenge+0x40>
   2070d:	cmp    eax,0x9
   20710:	je     20700 <wget_http_parse_challenge+0x40>
   20712:	mov    rsi,rbp
   20715:	call   10c20 <wget_http_parse_token@plt>
   2071a:	cmp    BYTE PTR [rax],0x20
   2071d:	mov    r14,rax
   20720:	jne    20810 <wget_http_parse_challenge+0x150>
   20726:	add    r14,0x1
   2072a:	mov    r13,rsp
   2072d:	lea    r12,[rsp+0x8]
   20732:	nop    WORD PTR [rax+rax*1+0x0]
   20738:	mov    rsi,r13
   2073b:	mov    rdx,r12
   2073e:	mov    rdi,r14
   20741:	call   12770 <wget_http_parse_param@plt>
   20746:	mov    rsi,QWORD PTR [rsp]
   2074a:	mov    rbx,rax
   2074d:	test   rsi,rsi
   20750:	je     20784 <wget_http_parse_challenge+0xc4>
   20752:	cmp    BYTE PTR [rsi],0x0
   20755:	mov    rdx,QWORD PTR [rsp+0x8]
   2075a:	je     207d0 <wget_http_parse_challenge+0x110>
   2075c:	test   rdx,rdx
   2075f:	je     20837 <wget_http_parse_challenge+0x177>
   20765:	mov    rdi,QWORD PTR [rbp+0x8]
   20769:	test   rdi,rdi
   2076c:	je     207f0 <wget_http_parse_challenge+0x130>
   20772:	call   10c90 <wget_hashmap_put@plt>
   20777:	jmp    20784 <wget_http_parse_challenge+0xc4>
   20779:	nop    DWORD PTR [rax+0x0]
   20780:	add    rbx,0x1
   20784:	movsx  edx,BYTE PTR [rbx]
   20787:	mov    eax,edx
   20789:	cmp    dl,0x20
   2078c:	je     20780 <wget_http_parse_challenge+0xc0>
   2078e:	cmp    edx,0x9
   20791:	je     20780 <wget_http_parse_challenge+0xc0>
   20793:	cmp    al,0x2c
   20795:	jne    2082f <wget_http_parse_challenge+0x16f>
   2079b:	lea    r14,[rbx+0x1]
   2079f:	cmp    BYTE PTR [r14],0x0
   207a3:	jne    20738 <wget_http_parse_challenge+0x78>
   207a5:	mov    rax,QWORD PTR [rsp+0x18]
   207aa:	sub    rax,QWORD PTR fs:0x28
   207b3:	jne    20848 <wget_http_parse_challenge+0x188>
   207b9:	add    rsp,0x20
   207bd:	mov    rax,r14
   207c0:	pop    rbx
   207c1:	pop    rbp
   207c2:	pop    r12
   207c4:	pop    r13
   207c6:	pop    r14
   207c8:	ret    
   207c9:	nop    DWORD PTR [rax+0x0]
   207d0:	test   rdx,rdx
   207d3:	jne    20765 <wget_http_parse_challenge+0xa5>
   207d5:	mov    rax,QWORD PTR [rip+0x5580c]        # 75fe8 <wget_free@@Base-0x1328>
   207dc:	mov    rdi,rsi
   207df:	mov    r14,rbx
   207e2:	call   QWORD PTR [rax]
   207e4:	mov    QWORD PTR [rsp],0x0
   207ec:	jmp    2079f <wget_http_parse_challenge+0xdf>
   207ee:	xchg   ax,ax
   207f0:	mov    edi,0x8
   207f5:	call   104a0 <wget_stringmap_create_nocase@plt>
   207fa:	mov    rsi,QWORD PTR [rsp]
   207fe:	mov    rdx,QWORD PTR [rsp+0x8]
   20803:	mov    QWORD PTR [rbp+0x8],rax
   20807:	mov    rdi,rax
   2080a:	jmp    20772 <wget_http_parse_challenge+0xb2>
   2080f:	nop
   20810:	mov    rdi,QWORD PTR [rbp+0x0]
   20814:	test   rdi,rdi
   20817:	je     207a5 <wget_http_parse_challenge+0xe5>
   20819:	mov    rax,QWORD PTR [rip+0x557c8]        # 75fe8 <wget_free@@Base-0x1328>
   20820:	call   QWORD PTR [rax]
   20822:	mov    QWORD PTR [rbp+0x0],0x0
   2082a:	jmp    207a5 <wget_http_parse_challenge+0xe5>
   2082f:	mov    r14,rbx
   20832:	jmp    207a5 <wget_http_parse_challenge+0xe5>
   20837:	mov    rax,QWORD PTR [rip+0x557aa]        # 75fe8 <wget_free@@Base-0x1328>
   2083e:	mov    rdi,rsi
   20841:	call   QWORD PTR [rax]
   20843:	jmp    207a5 <wget_http_parse_challenge+0xe5>
   20848:	call   11760 <__stack_chk_fail@plt>
   2084d:	nop    DWORD PTR [rax]

0000000000020850 <wget_http_parse_challenges>:
   20850:	endbr64 
   20854:	push   r12
   20856:	push   rbp
   20857:	mov    rbp,rdi
   2085a:	push   rbx
   2085b:	sub    rsp,0x20
   2085f:	mov    rax,QWORD PTR fs:0x28
   20868:	mov    QWORD PTR [rsp+0x18],rax
   2086d:	xor    eax,eax
   2086f:	cmp    BYTE PTR [rdi],0x0
   20872:	je     208ab <wget_http_parse_challenges+0x5b>
   20874:	mov    r12,rsi
   20877:	mov    rbx,rsp
   2087a:	nop    WORD PTR [rax+rax*1+0x0]
   20880:	mov    rdi,rbp
   20883:	mov    rsi,rbx
   20886:	call   10a10 <wget_http_parse_challenge@plt>
   2088b:	cmp    QWORD PTR [rsp],0x0
   20890:	mov    rbp,rax
   20893:	je     208a5 <wget_http_parse_challenges+0x55>
   20895:	mov    edx,0x10
   2089a:	mov    rsi,rbx
   2089d:	mov    rdi,r12
   208a0:	call   11a20 <wget_vector_add_memdup@plt>
   208a5:	cmp    BYTE PTR [rbp+0x0],0x0
   208a9:	jne    20880 <wget_http_parse_challenges+0x30>
   208ab:	mov    rax,QWORD PTR [rsp+0x18]
   208b0:	sub    rax,QWORD PTR fs:0x28
   208b9:	jne    208c7 <wget_http_parse_challenges+0x77>
   208bb:	add    rsp,0x20
   208bf:	mov    rax,rbp
   208c2:	pop    rbx
   208c3:	pop    rbp
   208c4:	pop    r12
   208c6:	ret    
   208c7:	call   11760 <__stack_chk_fail@plt>
   208cc:	nop    DWORD PTR [rax+0x0]

00000000000208d0 <wget_http_parse_location>:
   208d0:	endbr64 
   208d4:	push   r12
   208d6:	push   rbx
   208d7:	mov    rbx,rsi
   208da:	sub    rsp,0x8
   208de:	movsx  edx,BYTE PTR [rdi]
   208e1:	cmp    dl,0x20
   208e4:	je     208f0 <wget_http_parse_location+0x20>
   208e6:	mov    eax,edx
   208e8:	cmp    edx,0x9
   208eb:	jne    20904 <wget_http_parse_location+0x34>
   208ed:	nop    DWORD PTR [rax]
   208f0:	movsx  edx,BYTE PTR [rdi+0x1]
   208f4:	add    rdi,0x1
   208f8:	mov    eax,edx
   208fa:	cmp    dl,0x9
   208fd:	je     208f0 <wget_http_parse_location+0x20>
   208ff:	cmp    edx,0x20
   20902:	je     208f0 <wget_http_parse_location+0x20>
   20904:	cmp    al,0xd
   20906:	ja     20980 <wget_http_parse_location+0xb0>
   20908:	mov    rdx,0xffffffffffffdbfe
   2090f:	mov    r12,rdi
   20912:	bt     rdx,rax
   20916:	jae    20968 <wget_http_parse_location+0x98>
   20918:	mov    rdx,0xffffffffffffdbfe
   2091f:	nop
   20920:	movzx  eax,BYTE PTR [r12+0x1]
   20926:	add    r12,0x1
   2092a:	cmp    al,0xd
   2092c:	ja     20920 <wget_http_parse_location+0x50>
   2092e:	bt     rdx,rax
   20932:	jb     20920 <wget_http_parse_location+0x50>
   20934:	cmp    r12,rdi
   20937:	ja     20949 <wget_http_parse_location+0x79>
   20939:	jmp    20959 <wget_http_parse_location+0x89>
   2093b:	nop    DWORD PTR [rax+rax*1+0x0]
   20940:	sub    r12,0x1
   20944:	cmp    r12,rdi
   20947:	je     20968 <wget_http_parse_location+0x98>
   20949:	movsx  eax,BYTE PTR [r12-0x1]
   2094f:	cmp    eax,0x20
   20952:	je     20940 <wget_http_parse_location+0x70>
   20954:	cmp    eax,0x9
   20957:	je     20940 <wget_http_parse_location+0x70>
   20959:	mov    rsi,r12
   2095c:	sub    rsi,rdi
   2095f:	jmp    2096a <wget_http_parse_location+0x9a>
   20961:	nop    DWORD PTR [rax+0x0]
   20968:	xor    esi,esi
   2096a:	call   126b0 <wget_strmemdup@plt>
   2096f:	mov    QWORD PTR [rbx],rax
   20972:	add    rsp,0x8
   20976:	mov    rax,r12
   20979:	pop    rbx
   2097a:	pop    r12
   2097c:	ret    
   2097d:	nop    DWORD PTR [rax]
   20980:	mov    r12,rdi
   20983:	jmp    20918 <wget_http_parse_location+0x48>
   20985:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000020990 <wget_http_parse_transfer_encoding>:
   20990:	endbr64 
   20994:	push   r12
   20996:	mov    r12,rdi
   20999:	push   rbx
   2099a:	mov    rbx,rsi
   2099d:	sub    rsp,0x8
   209a1:	movsx  eax,BYTE PTR [rdi]
   209a4:	cmp    eax,0x20
   209a7:	jne    209bf <wget_http_parse_transfer_encoding+0x2f>
   209a9:	nop    DWORD PTR [rax+0x0]
   209b0:	movsx  eax,BYTE PTR [r12+0x1]
   209b6:	add    r12,0x1
   209ba:	cmp    eax,0x20
   209bd:	je     209b0 <wget_http_parse_transfer_encoding+0x20>
   209bf:	cmp    eax,0x9
   209c2:	je     209b0 <wget_http_parse_transfer_encoding+0x20>
   209c4:	lea    rsi,[rip+0x2c019]        # 4c9e4 <__func__.5+0x34>
   209cb:	mov    rdi,r12
   209ce:	call   12590 <wget_strcasecmp_ascii@plt>
   209d3:	test   eax,eax
   209d5:	setne  al
   209d8:	movzx  eax,al
   209db:	mov    DWORD PTR [rbx],eax
   209dd:	jmp    209e4 <wget_http_parse_transfer_encoding+0x54>
   209df:	nop
   209e0:	add    r12,0x1
   209e4:	movsx  edi,BYTE PTR [r12]
   209e9:	call   11720 <wget_http_istoken@plt>
   209ee:	test   al,al
   209f0:	jne    209e0 <wget_http_parse_transfer_encoding+0x50>
   209f2:	add    rsp,0x8
   209f6:	mov    rax,r12
   209f9:	pop    rbx
   209fa:	pop    r12
   209fc:	ret    
   209fd:	nop    DWORD PTR [rax]

0000000000020a00 <wget_http_parse_content_type>:
   20a00:	endbr64 
   20a04:	push   r15
   20a06:	push   r14
   20a08:	mov    r14,rdi
   20a0b:	push   r13
   20a0d:	mov    r13,rsi
   20a10:	push   r12
   20a12:	mov    r12,rdx
   20a15:	push   rbp
   20a16:	push   rbx
   20a17:	sub    rsp,0x28
   20a1b:	movsx  edi,BYTE PTR [rdi]
   20a1e:	mov    rax,QWORD PTR fs:0x28
   20a27:	mov    QWORD PTR [rsp+0x18],rax
   20a2c:	xor    eax,eax
   20a2e:	cmp    dil,0x9
   20a32:	je     20a40 <wget_http_parse_content_type+0x40>
   20a34:	mov    ebx,edi
   20a36:	cmp    edi,0x20
   20a39:	jne    20a56 <wget_http_parse_content_type+0x56>
   20a3b:	nop    DWORD PTR [rax+rax*1+0x0]
   20a40:	movsx  edi,BYTE PTR [r14+0x1]
   20a45:	add    r14,0x1
   20a49:	mov    ebx,edi
   20a4b:	cmp    dil,0x20
   20a4f:	je     20a40 <wget_http_parse_content_type+0x40>
   20a51:	cmp    edi,0x9
   20a54:	je     20a40 <wget_http_parse_content_type+0x40>
   20a56:	mov    rbp,r14
   20a59:	test   bl,bl
   20a5b:	jne    20a63 <wget_http_parse_content_type+0x63>
   20a5d:	jmp    20a7d <wget_http_parse_content_type+0x7d>
   20a5f:	nop
   20a60:	movsx  edi,bl
   20a63:	call   11720 <wget_http_istoken@plt>
   20a68:	cmp    bl,0x2f
   20a6b:	je     20a71 <wget_http_parse_content_type+0x71>
   20a6d:	test   al,al
   20a6f:	je     20a7d <wget_http_parse_content_type+0x7d>
   20a71:	movzx  ebx,BYTE PTR [rbp+0x1]
   20a75:	add    rbp,0x1
   20a79:	test   bl,bl
   20a7b:	jne    20a60 <wget_http_parse_content_type+0x60>
   20a7d:	test   r13,r13
   20a80:	je     20a94 <wget_http_parse_content_type+0x94>
   20a82:	mov    rsi,rbp
   20a85:	mov    rdi,r14
   20a88:	sub    rsi,r14
   20a8b:	call   126b0 <wget_strmemdup@plt>
   20a90:	mov    QWORD PTR [r13+0x0],rax
   20a94:	test   r12,r12
   20a97:	je     20b39 <wget_http_parse_content_type+0x139>
   20a9d:	mov    QWORD PTR [r12],0x0
   20aa5:	cmp    BYTE PTR [rbp+0x0],0x0
   20aa9:	je     20b39 <wget_http_parse_content_type+0x139>
   20aaf:	mov    r15,rsp
   20ab2:	lea    r14,[rsp+0x8]
   20ab7:	lea    rbx,[rip+0x2b67f]        # 4c13d <__func__.0+0x5d>
   20abe:	jmp    20afb <wget_http_parse_content_type+0xfb>
   20ac0:	test   r13,r13
   20ac3:	je     20ad9 <wget_http_parse_content_type+0xd9>
   20ac5:	mov    rax,QWORD PTR [rip+0x5551c]        # 75fe8 <wget_free@@Base-0x1328>
   20acc:	mov    rdi,r13
   20acf:	call   QWORD PTR [rax]
   20ad1:	mov    QWORD PTR [rsp],0x0
   20ad9:	mov    rdi,QWORD PTR [rsp+0x8]
   20ade:	test   rdi,rdi
   20ae1:	je     20af5 <wget_http_parse_content_type+0xf5>
   20ae3:	mov    rax,QWORD PTR [rip+0x554fe]        # 75fe8 <wget_free@@Base-0x1328>
   20aea:	call   QWORD PTR [rax]
   20aec:	mov    QWORD PTR [rsp+0x8],0x0
   20af5:	cmp    BYTE PTR [rbp+0x0],0x0
   20af9:	je     20b39 <wget_http_parse_content_type+0x139>
   20afb:	mov    rdi,rbp
   20afe:	mov    rsi,r15
   20b01:	mov    rdx,r14
   20b04:	call   12770 <wget_http_parse_param@plt>
   20b09:	mov    r13,QWORD PTR [rsp]
   20b0d:	mov    rdi,rbx
   20b10:	mov    rbp,rax
   20b13:	mov    rsi,r13
   20b16:	call   12590 <wget_strcasecmp_ascii@plt>
   20b1b:	test   eax,eax
   20b1d:	jne    20ac0 <wget_http_parse_content_type+0xc0>
   20b1f:	test   r13,r13
   20b22:	je     20b30 <wget_http_parse_content_type+0x130>
   20b24:	mov    rax,QWORD PTR [rip+0x554bd]        # 75fe8 <wget_free@@Base-0x1328>
   20b2b:	mov    rdi,r13
   20b2e:	call   QWORD PTR [rax]
   20b30:	mov    rax,QWORD PTR [rsp+0x8]
   20b35:	mov    QWORD PTR [r12],rax
   20b39:	mov    rax,QWORD PTR [rsp+0x18]
   20b3e:	sub    rax,QWORD PTR fs:0x28
   20b47:	jne    20b5b <wget_http_parse_content_type+0x15b>
   20b49:	add    rsp,0x28
   20b4d:	mov    rax,rbp
   20b50:	pop    rbx
   20b51:	pop    rbp
   20b52:	pop    r12
   20b54:	pop    r13
   20b56:	pop    r14
   20b58:	pop    r15
   20b5a:	ret    
   20b5b:	call   11760 <__stack_chk_fail@plt>

0000000000020b60 <wget_http_parse_content_disposition>:
   20b60:	endbr64 
   20b64:	push   r15
   20b66:	push   r14
   20b68:	push   r13
   20b6a:	push   r12
   20b6c:	push   rbp
   20b6d:	mov    rbp,rdi
   20b70:	push   rbx
   20b71:	sub    rsp,0x28
   20b75:	mov    rax,QWORD PTR fs:0x28
   20b7e:	mov    QWORD PTR [rsp+0x18],rax
   20b83:	xor    eax,eax
   20b85:	test   rsi,rsi
   20b88:	je     20cb8 <wget_http_parse_content_disposition+0x158>
   20b8e:	mov    QWORD PTR [rsi],0x0
   20b95:	cmp    BYTE PTR [rdi],0x0
   20b98:	mov    rbx,rsi
   20b9b:	je     20cb8 <wget_http_parse_content_disposition+0x158>
   20ba1:	mov    r13,rsp
   20ba4:	lea    r12,[rsp+0x8]
   20ba9:	jmp    20c06 <wget_http_parse_content_disposition+0xa6>
   20bab:	nop    DWORD PTR [rax+rax*1+0x0]
   20bb0:	cmp    QWORD PTR [rbx],0x0
   20bb4:	je     20ce0 <wget_http_parse_content_disposition+0x180>
   20bba:	test   r14,r14
   20bbd:	je     20bdd <wget_http_parse_content_disposition+0x7d>
   20bbf:	mov    rax,QWORD PTR [rip+0x55422]        # 75fe8 <wget_free@@Base-0x1328>
   20bc6:	mov    rdi,r14
   20bc9:	call   QWORD PTR [rax]
   20bcb:	mov    QWORD PTR [rsp],0x0
   20bd3:	mov    r15,QWORD PTR [rsp+0x8]
   20bd8:	test   r15,r15
   20bdb:	je     20bf2 <wget_http_parse_content_disposition+0x92>
   20bdd:	mov    rax,QWORD PTR [rip+0x55404]        # 75fe8 <wget_free@@Base-0x1328>
   20be4:	mov    rdi,r15
   20be7:	call   QWORD PTR [rax]
   20be9:	mov    QWORD PTR [rsp+0x8],0x0
   20bf2:	cmp    BYTE PTR [rbp+0x0],0x0
   20bf6:	je     20cb8 <wget_http_parse_content_disposition+0x158>
   20bfc:	cmp    QWORD PTR [rbx],0x0
   20c00:	jne    20cb8 <wget_http_parse_content_disposition+0x158>
   20c06:	mov    rdi,rbp
   20c09:	mov    rdx,r12
   20c0c:	mov    rsi,r13
   20c0f:	call   12770 <wget_http_parse_param@plt>
   20c14:	mov    r15,QWORD PTR [rsp+0x8]
   20c19:	mov    r14,QWORD PTR [rsp]
   20c1d:	mov    rbp,rax
   20c20:	test   r15,r15
   20c23:	je     20ca0 <wget_http_parse_content_disposition+0x140>
   20c25:	mov    rsi,r14
   20c28:	lea    rdi,[rip+0x2bdbe]        # 4c9ed <__func__.5+0x3d>
   20c2f:	call   12590 <wget_strcasecmp_ascii@plt>
   20c34:	test   eax,eax
   20c36:	je     20bb0 <wget_http_parse_content_disposition+0x50>
   20c3c:	mov    rsi,r14
   20c3f:	lea    rdi,[rip+0x2bdb3]        # 4c9f9 <__func__.5+0x49>
   20c46:	call   12590 <wget_strcasecmp_ascii@plt>
   20c4b:	test   eax,eax
   20c4d:	jne    20bba <wget_http_parse_content_disposition+0x5a>
   20c53:	mov    esi,0x27
   20c58:	mov    rdi,r15
   20c5b:	call   109e0 <strchr@plt>
   20c60:	test   rax,rax
   20c63:	je     20bba <wget_http_parse_content_disposition+0x5a>
   20c69:	mov    BYTE PTR [rax],0x0
   20c6c:	lea    rdi,[rax+0x1]
   20c70:	mov    esi,0x27
   20c75:	call   109e0 <strchr@plt>
   20c7a:	test   rax,rax
   20c7d:	je     20c8c <wget_http_parse_content_disposition+0x12c>
   20c7f:	cmp    BYTE PTR [rax+0x1],0x0
   20c83:	mov    BYTE PTR [rax],0x0
   20c86:	jne    20d7d <wget_http_parse_content_disposition+0x21d>
   20c8c:	mov    r14,QWORD PTR [rsp]
   20c90:	test   r14,r14
   20c93:	jne    20bbf <wget_http_parse_content_disposition+0x5f>
   20c99:	jmp    20bd3 <wget_http_parse_content_disposition+0x73>
   20c9e:	xchg   ax,ax
   20ca0:	test   r14,r14
   20ca3:	jne    20bbf <wget_http_parse_content_disposition+0x5f>
   20ca9:	cmp    BYTE PTR [rbp+0x0],0x0
   20cad:	jne    20bfc <wget_http_parse_content_disposition+0x9c>
   20cb3:	nop    DWORD PTR [rax+rax*1+0x0]
   20cb8:	mov    rax,QWORD PTR [rsp+0x18]
   20cbd:	sub    rax,QWORD PTR fs:0x28
   20cc6:	jne    20e1f <wget_http_parse_content_disposition+0x2bf>
   20ccc:	add    rsp,0x28
   20cd0:	mov    rax,rbp
   20cd3:	pop    rbx
   20cd4:	pop    rbp
   20cd5:	pop    r12
   20cd7:	pop    r13
   20cd9:	pop    r14
   20cdb:	pop    r15
   20cdd:	ret    
   20cde:	xchg   ax,ax
   20ce0:	lea    rsi,[rip+0x2bd0f]        # 4c9f6 <__func__.5+0x46>
   20ce7:	mov    rdi,r15
   20cea:	call   12390 <strpbrk@plt>
   20cef:	test   rax,rax
   20cf2:	je     20d20 <wget_http_parse_content_disposition+0x1c0>
   20cf4:	lea    rdi,[rax+0x1]
   20cf8:	call   127b0 <wget_strdup@plt>
   20cfd:	mov    r15,rax
   20d00:	mov    rdi,rax
   20d03:	call   112c0 <wget_percent_unescape@plt>
   20d08:	mov    rdi,r15
   20d0b:	call   124c0 <wget_str_is_valid_utf8@plt>
   20d10:	test   al,al
   20d12:	je     20d60 <wget_http_parse_content_disposition+0x200>
   20d14:	mov    QWORD PTR [rbx],r15
   20d17:	jmp    20c8c <wget_http_parse_content_disposition+0x12c>
   20d1c:	nop    DWORD PTR [rax+0x0]
   20d20:	mov    QWORD PTR [rsp+0x8],0x0
   20d29:	mov    rdi,r15
   20d2c:	call   112c0 <wget_percent_unescape@plt>
   20d31:	mov    rdi,r15
   20d34:	call   124c0 <wget_str_is_valid_utf8@plt>
   20d39:	test   al,al
   20d3b:	jne    20d14 <wget_http_parse_content_disposition+0x1b4>
   20d3d:	lea    rsi,[rip+0x2ab11]        # 4b855 <base64_2_bin+0x655>
   20d44:	mov    rdi,r15
   20d47:	call   11b80 <wget_str_to_utf8@plt>
   20d4c:	mov    QWORD PTR [rbx],rax
   20d4f:	mov    rax,QWORD PTR [rip+0x55292]        # 75fe8 <wget_free@@Base-0x1328>
   20d56:	mov    rdi,r15
   20d59:	call   QWORD PTR [rax]
   20d5b:	jmp    20c8c <wget_http_parse_content_disposition+0x12c>
   20d60:	lea    rsi,[rip+0x2aaee]        # 4b855 <base64_2_bin+0x655>
   20d67:	mov    rdi,r15
   20d6a:	call   11b80 <wget_str_to_utf8@plt>
   20d6f:	mov    QWORD PTR [rbx],rax
   20d72:	test   r15,r15
   20d75:	je     20c8c <wget_http_parse_content_disposition+0x12c>
   20d7b:	jmp    20d4f <wget_http_parse_content_disposition+0x1ef>
   20d7d:	lea    r12,[rax+0x1]
   20d81:	mov    rdi,r12
   20d84:	call   112c0 <wget_percent_unescape@plt>
   20d89:	mov    rdi,r12
   20d8c:	call   12700 <wget_str_needs_encoding@plt>
   20d91:	test   al,al
   20d93:	je     20e12 <wget_http_parse_content_disposition+0x2b2>
   20d95:	mov    rdi,r12
   20d98:	mov    rsi,r15
   20d9b:	call   11b80 <wget_str_to_utf8@plt>
   20da0:	mov    rdi,rax
   20da3:	mov    QWORD PTR [rbx],rdi
   20da6:	test   rdi,rdi
   20da9:	je     20ddc <wget_http_parse_content_disposition+0x27c>
   20dab:	lea    rsi,[rip+0x2bc44]        # 4c9f6 <__func__.5+0x46>
   20db2:	call   12390 <strpbrk@plt>
   20db7:	test   rax,rax
   20dba:	je     20ddc <wget_http_parse_content_disposition+0x27c>
   20dbc:	lea    rdi,[rax+0x1]
   20dc0:	call   127b0 <wget_strdup@plt>
   20dc5:	mov    rdi,QWORD PTR [rbx]
   20dc8:	mov    r12,rax
   20dcb:	test   rdi,rdi
   20dce:	je     20dd9 <wget_http_parse_content_disposition+0x279>
   20dd0:	mov    rax,QWORD PTR [rip+0x55211]        # 75fe8 <wget_free@@Base-0x1328>
   20dd7:	call   QWORD PTR [rax]
   20dd9:	mov    QWORD PTR [rbx],r12
   20ddc:	mov    rdi,QWORD PTR [rsp]
   20de0:	test   rdi,rdi
   20de3:	je     20df6 <wget_http_parse_content_disposition+0x296>
   20de5:	mov    rax,QWORD PTR [rip+0x551fc]        # 75fe8 <wget_free@@Base-0x1328>
   20dec:	call   QWORD PTR [rax]
   20dee:	mov    QWORD PTR [rsp],0x0
   20df6:	mov    rdi,QWORD PTR [rsp+0x8]
   20dfb:	test   rdi,rdi
   20dfe:	je     20cb8 <wget_http_parse_content_disposition+0x158>
   20e04:	mov    rax,QWORD PTR [rip+0x551dd]        # 75fe8 <wget_free@@Base-0x1328>
   20e0b:	call   QWORD PTR [rax]
   20e0d:	jmp    20cb8 <wget_http_parse_content_disposition+0x158>
   20e12:	mov    rdi,r12
   20e15:	call   127b0 <wget_strdup@plt>
   20e1a:	mov    rdi,rax
   20e1d:	jmp    20da3 <wget_http_parse_content_disposition+0x243>
   20e1f:	call   11760 <__stack_chk_fail@plt>
   20e24:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   20e2f:	nop

0000000000020e30 <wget_http_parse_public_key_pins>:
   20e30:	endbr64 
   20e34:	push   r15
   20e36:	push   r14
   20e38:	push   r13
   20e3a:	push   r12
   20e3c:	push   rbp
   20e3d:	mov    rbp,rdi
   20e40:	mov    rdi,rsi
   20e43:	push   rbx
   20e44:	sub    rsp,0x38
   20e48:	mov    QWORD PTR [rsp+0x8],rsi
   20e4d:	xor    esi,esi
   20e4f:	mov    rax,QWORD PTR fs:0x28
   20e58:	mov    QWORD PTR [rsp+0x28],rax
   20e5d:	xor    eax,eax
   20e5f:	call   114f0 <wget_hpkp_set_include_subdomains@plt>
   20e64:	cmp    BYTE PTR [rbp+0x0],0x0
   20e68:	je     20f40 <wget_http_parse_public_key_pins+0x110>
   20e6e:	lea    r12,[rsp+0x10]
   20e73:	lea    rbx,[rsp+0x18]
   20e78:	lea    r14,[rip+0x2a7e8]        # 4b667 <base64_2_bin+0x467>
   20e7f:	jmp    20ef6 <wget_http_parse_public_key_pins+0xc6>
   20e81:	nop    DWORD PTR [rax+0x0]
   20e88:	mov    rsi,r14
   20e8b:	mov    rdi,r13
   20e8e:	call   12590 <wget_strcasecmp_ascii@plt>
   20e93:	test   eax,eax
   20e95:	je     20f68 <wget_http_parse_public_key_pins+0x138>
   20e9b:	mov    edx,0x4
   20ea0:	lea    rsi,[rip+0x2bb5c]        # 4ca03 <__func__.5+0x53>
   20ea7:	mov    rdi,r13
   20eaa:	call   11c40 <wget_strncasecmp_ascii@plt>
   20eaf:	test   eax,eax
   20eb1:	je     20fa0 <wget_http_parse_public_key_pins+0x170>
   20eb7:	test   r13,r13
   20eba:	je     20edb <wget_http_parse_public_key_pins+0xab>
   20ebc:	mov    rax,QWORD PTR [rip+0x55125]        # 75fe8 <wget_free@@Base-0x1328>
   20ec3:	mov    rdi,r13
   20ec6:	call   QWORD PTR [rax]
   20ec8:	mov    QWORD PTR [rsp+0x10],0x0
   20ed1:	mov    r15,QWORD PTR [rsp+0x18]
   20ed6:	test   r15,r15
   20ed9:	je     20ef0 <wget_http_parse_public_key_pins+0xc0>
   20edb:	mov    rax,QWORD PTR [rip+0x55106]        # 75fe8 <wget_free@@Base-0x1328>
   20ee2:	mov    rdi,r15
   20ee5:	call   QWORD PTR [rax]
   20ee7:	mov    QWORD PTR [rsp+0x18],0x0
   20ef0:	cmp    BYTE PTR [rbp+0x0],0x0
   20ef4:	je     20f40 <wget_http_parse_public_key_pins+0x110>
   20ef6:	mov    rdi,rbp
   20ef9:	mov    rdx,rbx
   20efc:	mov    rsi,r12
   20eff:	call   12770 <wget_http_parse_param@plt>
   20f04:	mov    r15,QWORD PTR [rsp+0x18]
   20f09:	mov    r13,QWORD PTR [rsp+0x10]
   20f0e:	mov    rbp,rax
   20f11:	test   r15,r15
   20f14:	jne    20e88 <wget_http_parse_public_key_pins+0x58>
   20f1a:	lea    rsi,[rip+0x2bae7]        # 4ca08 <__func__.5+0x58>
   20f21:	mov    rdi,r13
   20f24:	call   12590 <wget_strcasecmp_ascii@plt>
   20f29:	test   eax,eax
   20f2b:	je     20fb8 <wget_http_parse_public_key_pins+0x188>
   20f31:	test   r13,r13
   20f34:	jne    20ebc <wget_http_parse_public_key_pins+0x8c>
   20f36:	cmp    BYTE PTR [rbp+0x0],0x0
   20f3a:	jne    20ef6 <wget_http_parse_public_key_pins+0xc6>
   20f3c:	nop    DWORD PTR [rax+0x0]
   20f40:	mov    rax,QWORD PTR [rsp+0x28]
   20f45:	sub    rax,QWORD PTR fs:0x28
   20f4e:	jne    20fc9 <wget_http_parse_public_key_pins+0x199>
   20f50:	add    rsp,0x38
   20f54:	mov    rax,rbp
   20f57:	pop    rbx
   20f58:	pop    rbp
   20f59:	pop    r12
   20f5b:	pop    r13
   20f5d:	pop    r14
   20f5f:	pop    r15
   20f61:	ret    
   20f62:	nop    WORD PTR [rax+rax*1+0x0]
   20f68:	xor    esi,esi
   20f6a:	mov    rdi,r15
   20f6d:	mov    edx,0xa
   20f72:	call   10600 <strtoll@plt>
   20f77:	mov    rdi,QWORD PTR [rsp+0x8]
   20f7c:	mov    rsi,rax
   20f7f:	call   11260 <wget_hpkp_set_maxage@plt>
   20f84:	mov    r13,QWORD PTR [rsp+0x10]
   20f89:	test   r13,r13
   20f8c:	jne    20ebc <wget_http_parse_public_key_pins+0x8c>
   20f92:	jmp    20ed1 <wget_http_parse_public_key_pins+0xa1>
   20f97:	nop    WORD PTR [rax+rax*1+0x0]
   20fa0:	mov    rdi,QWORD PTR [rsp+0x8]
   20fa5:	lea    rsi,[r13+0x4]
   20fa9:	mov    rdx,r15
   20fac:	call   126f0 <wget_hpkp_pin_add@plt>
   20fb1:	jmp    20f84 <wget_http_parse_public_key_pins+0x154>
   20fb3:	nop    DWORD PTR [rax+rax*1+0x0]
   20fb8:	mov    rdi,QWORD PTR [rsp+0x8]
   20fbd:	mov    esi,0x1
   20fc2:	call   114f0 <wget_hpkp_set_include_subdomains@plt>
   20fc7:	jmp    20f84 <wget_http_parse_public_key_pins+0x154>
   20fc9:	call   11760 <__stack_chk_fail@plt>
   20fce:	xchg   ax,ax

0000000000020fd0 <wget_http_parse_strict_transport_security>:
   20fd0:	endbr64 
   20fd4:	push   r15
   20fd6:	push   r14
   20fd8:	push   r13
   20fda:	push   r12
   20fdc:	push   rbp
   20fdd:	mov    rbp,rdi
   20fe0:	push   rbx
   20fe1:	sub    rsp,0x38
   20fe5:	mov    QWORD PTR [rsp],rsi
   20fe9:	mov    QWORD PTR [rsp+0x8],rdx
   20fee:	mov    rax,QWORD PTR fs:0x28
   20ff7:	mov    QWORD PTR [rsp+0x28],rax
   20ffc:	xor    eax,eax
   20ffe:	mov    QWORD PTR [rsi],0x0
   21005:	mov    BYTE PTR [rdx],0x0
   21008:	cmp    BYTE PTR [rdi],0x0
   2100b:	je     210c0 <wget_http_parse_strict_transport_security+0xf0>
   21011:	lea    r12,[rsp+0x10]
   21016:	lea    rbx,[rsp+0x18]
   2101b:	lea    r13,[rip+0x2a645]        # 4b667 <base64_2_bin+0x467>
   21022:	jmp    2107a <wget_http_parse_strict_transport_security+0xaa>
   21024:	nop    DWORD PTR [rax+0x0]
   21028:	mov    rsi,r13
   2102b:	mov    rdi,r14
   2102e:	call   12590 <wget_strcasecmp_ascii@plt>
   21033:	test   eax,eax
   21035:	je     210e8 <wget_http_parse_strict_transport_security+0x118>
   2103b:	test   r14,r14
   2103e:	je     2105f <wget_http_parse_strict_transport_security+0x8f>
   21040:	mov    rax,QWORD PTR [rip+0x54fa1]        # 75fe8 <wget_free@@Base-0x1328>
   21047:	mov    rdi,r14
   2104a:	call   QWORD PTR [rax]
   2104c:	mov    QWORD PTR [rsp+0x10],0x0
   21055:	mov    r15,QWORD PTR [rsp+0x18]
   2105a:	test   r15,r15
   2105d:	je     21074 <wget_http_parse_strict_transport_security+0xa4>
   2105f:	mov    rax,QWORD PTR [rip+0x54f82]        # 75fe8 <wget_free@@Base-0x1328>
   21066:	mov    rdi,r15
   21069:	call   QWORD PTR [rax]
   2106b:	mov    QWORD PTR [rsp+0x18],0x0
   21074:	cmp    BYTE PTR [rbp+0x0],0x0
   21078:	je     210c0 <wget_http_parse_strict_transport_security+0xf0>
   2107a:	mov    rdi,rbp
   2107d:	mov    rdx,rbx
   21080:	mov    rsi,r12
   21083:	call   12770 <wget_http_parse_param@plt>
   21088:	mov    r15,QWORD PTR [rsp+0x18]
   2108d:	mov    r14,QWORD PTR [rsp+0x10]
   21092:	mov    rbp,rax
   21095:	test   r15,r15
   21098:	jne    21028 <wget_http_parse_strict_transport_security+0x58>
   2109a:	lea    rsi,[rip+0x2b967]        # 4ca08 <__func__.5+0x58>
   210a1:	mov    rdi,r14
   210a4:	call   12590 <wget_strcasecmp_ascii@plt>
   210a9:	test   eax,eax
   210ab:	jne    210b5 <wget_http_parse_strict_transport_security+0xe5>
   210ad:	mov    rax,QWORD PTR [rsp+0x8]
   210b2:	mov    BYTE PTR [rax],0x1
   210b5:	test   r14,r14
   210b8:	jne    21040 <wget_http_parse_strict_transport_security+0x70>
   210ba:	cmp    BYTE PTR [rbp+0x0],0x0
   210be:	jne    2107a <wget_http_parse_strict_transport_security+0xaa>
   210c0:	mov    rax,QWORD PTR [rsp+0x28]
   210c5:	sub    rax,QWORD PTR fs:0x28
   210ce:	jne    21111 <wget_http_parse_strict_transport_security+0x141>
   210d0:	add    rsp,0x38
   210d4:	mov    rax,rbp
   210d7:	pop    rbx
   210d8:	pop    rbp
   210d9:	pop    r12
   210db:	pop    r13
   210dd:	pop    r14
   210df:	pop    r15
   210e1:	ret    
   210e2:	nop    WORD PTR [rax+rax*1+0x0]
   210e8:	mov    edx,0xa
   210ed:	xor    esi,esi
   210ef:	mov    rdi,r15
   210f2:	call   10600 <strtoll@plt>
   210f7:	mov    rcx,QWORD PTR [rsp]
   210fb:	mov    r14,QWORD PTR [rsp+0x10]
   21100:	mov    QWORD PTR [rcx],rax
   21103:	test   r14,r14
   21106:	jne    21040 <wget_http_parse_strict_transport_security+0x70>
   2110c:	jmp    21055 <wget_http_parse_strict_transport_security+0x85>
   21111:	call   11760 <__stack_chk_fail@plt>
   21116:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000021120 <wget_http_parse_content_encoding>:
   21120:	endbr64 
   21124:	push   r12
   21126:	mov    r12,rdi
   21129:	push   rbp
   2112a:	push   rbx
   2112b:	movsx  eax,BYTE PTR [rdi]
   2112e:	mov    rbx,rsi
   21131:	cmp    eax,0x20
   21134:	jne    2114f <wget_http_parse_content_encoding+0x2f>
   21136:	cs nop WORD PTR [rax+rax*1+0x0]
   21140:	movsx  eax,BYTE PTR [r12+0x1]
   21146:	add    r12,0x1
   2114a:	cmp    eax,0x20
   2114d:	je     21140 <wget_http_parse_content_encoding+0x20>
   2114f:	cmp    eax,0x9
   21152:	je     21140 <wget_http_parse_content_encoding+0x20>
   21154:	lea    rsi,[rip+0x2b723]        # 4c87e <maybe+0x5de>
   2115b:	mov    rdi,r12
   2115e:	mov    ebp,0x1
   21163:	call   12590 <wget_strcasecmp_ascii@plt>
   21168:	test   eax,eax
   2116a:	je     2117f <wget_http_parse_content_encoding+0x5f>
   2116c:	lea    rsi,[rip+0x2b709]        # 4c87c <maybe+0x5dc>
   21173:	mov    rdi,r12
   21176:	call   12590 <wget_strcasecmp_ascii@plt>
   2117b:	test   eax,eax
   2117d:	jne    211a8 <wget_http_parse_content_encoding+0x88>
   2117f:	mov    BYTE PTR [rbx],bpl
   21182:	jmp    2118c <wget_http_parse_content_encoding+0x6c>
   21184:	nop    DWORD PTR [rax+0x0]
   21188:	add    r12,0x1
   2118c:	movsx  edi,BYTE PTR [r12]
   21191:	call   11720 <wget_http_istoken@plt>
   21196:	test   al,al
   21198:	jne    21188 <wget_http_parse_content_encoding+0x68>
   2119a:	mov    rax,r12
   2119d:	pop    rbx
   2119e:	pop    rbp
   2119f:	pop    r12
   211a1:	ret    
   211a2:	nop    WORD PTR [rax+rax*1+0x0]
   211a8:	lea    rsi,[rip+0x2b86b]        # 4ca1a <__func__.5+0x6a>
   211af:	mov    rdi,r12
   211b2:	mov    ebp,0x2
   211b7:	call   12590 <wget_strcasecmp_ascii@plt>
   211bc:	test   eax,eax
   211be:	je     2117f <wget_http_parse_content_encoding+0x5f>
   211c0:	lea    rsi,[rip+0x2b85b]        # 4ca22 <__func__.5+0x72>
   211c7:	mov    rdi,r12
   211ca:	call   12590 <wget_strcasecmp_ascii@plt>
   211cf:	test   eax,eax
   211d1:	jne    211da <wget_http_parse_content_encoding+0xba>
   211d3:	mov    ebp,0x5
   211d8:	jmp    2117f <wget_http_parse_content_encoding+0x5f>
   211da:	lea    rsi,[rip+0x2b847]        # 4ca28 <__func__.5+0x78>
   211e1:	mov    rdi,r12
   211e4:	mov    ebp,0x4
   211e9:	call   12590 <wget_strcasecmp_ascii@plt>
   211ee:	test   eax,eax
   211f0:	je     2117f <wget_http_parse_content_encoding+0x5f>
   211f2:	lea    rsi,[rip+0x2b834]        # 4ca2d <__func__.5+0x7d>
   211f9:	mov    rdi,r12
   211fc:	call   12590 <wget_strcasecmp_ascii@plt>
   21201:	test   eax,eax
   21203:	je     2117f <wget_http_parse_content_encoding+0x5f>
   21209:	lea    rsi,[rip+0x2b81b]        # 4ca2b <__func__.5+0x7b>
   21210:	mov    rdi,r12
   21213:	call   12590 <wget_strcasecmp_ascii@plt>
   21218:	test   eax,eax
   2121a:	je     2117f <wget_http_parse_content_encoding+0x5f>
   21220:	lea    rsi,[rip+0x2b80b]        # 4ca32 <__func__.5+0x82>
   21227:	mov    rdi,r12
   2122a:	mov    ebp,0x6
   2122f:	call   12590 <wget_strcasecmp_ascii@plt>
   21234:	test   eax,eax
   21236:	je     2117f <wget_http_parse_content_encoding+0x5f>
   2123c:	lea    rsi,[rip+0x2b7f2]        # 4ca35 <__func__.5+0x85>
   21243:	mov    rdi,r12
   21246:	mov    ebp,0x7
   2124b:	call   12590 <wget_strcasecmp_ascii@plt>
   21250:	test   eax,eax
   21252:	je     2117f <wget_http_parse_content_encoding+0x5f>
   21258:	lea    rsi,[rip+0x2b7db]        # 4ca3a <__func__.5+0x8a>
   2125f:	mov    rdi,r12
   21262:	call   12590 <wget_strcasecmp_ascii@plt>
   21267:	test   eax,eax
   21269:	sete   bpl
   2126d:	shl    ebp,0x3
   21270:	jmp    2117f <wget_http_parse_content_encoding+0x5f>
   21275:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000021280 <wget_http_parse_connection>:
   21280:	endbr64 
   21284:	push   r13
   21286:	push   r12
   21288:	push   rbp
   21289:	mov    rbp,rdi
   2128c:	push   rbx
   2128d:	sub    rsp,0x8
   21291:	mov    BYTE PTR [rsi],0x0
   21294:	cmp    BYTE PTR [rdi],0x0
   21297:	je     2130c <wget_http_parse_connection+0x8c>
   21299:	mov    r12,rsi
   2129c:	lea    r13,[rip+0x2b79c]        # 4ca3f <__func__.5+0x8f>
   212a3:	jmp    212b1 <wget_http_parse_connection+0x31>
   212a5:	nop    DWORD PTR [rax]
   212a8:	cmp    BYTE PTR [rbx],0x0
   212ab:	lea    rbp,[rbx+0x1]
   212af:	je     2130c <wget_http_parse_connection+0x8c>
   212b1:	mov    esi,0x2c
   212b6:	mov    rdi,rbp
   212b9:	call   11030 <strchrnul@plt>
   212be:	mov    rbx,rax
   212c1:	cmp    rax,rbp
   212c4:	je     212a8 <wget_http_parse_connection+0x28>
   212c6:	movsx  eax,BYTE PTR [rbp+0x0]
   212ca:	cmp    eax,0x20
   212cd:	je     212d8 <wget_http_parse_connection+0x58>
   212cf:	cmp    eax,0x9
   212d2:	jne    212ea <wget_http_parse_connection+0x6a>
   212d4:	nop    DWORD PTR [rax+0x0]
   212d8:	movsx  edx,BYTE PTR [rbp+0x1]
   212dc:	add    rbp,0x1
   212e0:	cmp    edx,0x20
   212e3:	je     212d8 <wget_http_parse_connection+0x58>
   212e5:	cmp    edx,0x9
   212e8:	je     212d8 <wget_http_parse_connection+0x58>
   212ea:	mov    edx,0xa
   212ef:	mov    rsi,r13
   212f2:	mov    rdi,rbp
   212f5:	call   11c40 <wget_strncasecmp_ascii@plt>
   212fa:	test   eax,eax
   212fc:	jne    212a8 <wget_http_parse_connection+0x28>
   212fe:	mov    BYTE PTR [r12],0x1
   21303:	cmp    BYTE PTR [rbx],0x0
   21306:	lea    rbp,[rbx+0x1]
   2130a:	jne    212b1 <wget_http_parse_connection+0x31>
   2130c:	add    rsp,0x8
   21310:	mov    rax,rbp
   21313:	pop    rbx
   21314:	pop    rbp
   21315:	pop    r12
   21317:	pop    r13
   21319:	ret    
   2131a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000021320 <wget_http_parse_etag>:
   21320:	endbr64 
   21324:	push   r12
   21326:	push   rbx
   21327:	mov    rbx,rsi
   2132a:	sub    rsp,0x8
   2132e:	movsx  edx,BYTE PTR [rdi]
   21331:	cmp    dl,0x20
   21334:	je     21340 <wget_http_parse_etag+0x20>
   21336:	mov    eax,edx
   21338:	cmp    edx,0x9
   2133b:	jne    21354 <wget_http_parse_etag+0x34>
   2133d:	nop    DWORD PTR [rax]
   21340:	movsx  edx,BYTE PTR [rdi+0x1]
   21344:	add    rdi,0x1
   21348:	mov    eax,edx
   2134a:	cmp    dl,0x9
   2134d:	je     21340 <wget_http_parse_etag+0x20>
   2134f:	cmp    edx,0x20
   21352:	je     21340 <wget_http_parse_etag+0x20>
   21354:	mov    r12,rdi
   21357:	xor    esi,esi
   21359:	test   al,al
   2135b:	jne    21363 <wget_http_parse_etag+0x43>
   2135d:	jmp    21381 <wget_http_parse_etag+0x61>
   2135f:	nop
   21360:	movsx  edx,al
   21363:	cmp    edx,0x20
   21366:	je     2137b <wget_http_parse_etag+0x5b>
   21368:	cmp    edx,0x9
   2136b:	je     2137b <wget_http_parse_etag+0x5b>
   2136d:	movzx  eax,BYTE PTR [r12+0x1]
   21373:	add    r12,0x1
   21377:	test   al,al
   21379:	jne    21360 <wget_http_parse_etag+0x40>
   2137b:	mov    rsi,r12
   2137e:	sub    rsi,rdi
   21381:	call   126b0 <wget_strmemdup@plt>
   21386:	mov    QWORD PTR [rbx],rax
   21389:	add    rsp,0x8
   2138d:	mov    rax,r12
   21390:	pop    rbx
   21391:	pop    r12
   21393:	ret    
   21394:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2139f:	nop

00000000000213a0 <wget_http_parse_full_date>:
   213a0:	endbr64 
   213a4:	push   r15
   213a6:	lea    rsi,[rip+0x2b843]        # 4cbf0 <__func__.5+0x240>
   213ad:	push   r14
   213af:	push   r13
   213b1:	push   r12
   213b3:	mov    r12,rdi
   213b6:	push   rbp
   213b7:	push   rbx
   213b8:	sub    rsp,0x38
   213bc:	mov    rax,QWORD PTR fs:0x28
   213c5:	mov    QWORD PTR [rsp+0x28],rax
   213ca:	xor    eax,eax
   213cc:	lea    rax,[rsp+0x20]
   213d1:	lea    r15,[rsp+0x18]
   213d6:	mov    DWORD PTR [rsp+0x24],0x0
   213de:	mov    QWORD PTR [rsp+0x8],rax
   213e3:	lea    rbx,[rsp+0x14]
   213e8:	lea    r13,[rsp+0x24]
   213ed:	mov    r9,r15
   213f0:	lea    r14,[rsp+0x10]
   213f5:	push   rax
   213f6:	mov    r8,rbx
   213f9:	mov    rcx,r13
   213fc:	mov    rdx,r14
   213ff:	xor    eax,eax
   21401:	lea    rbp,[rsp+0x24]
   21406:	push   rbp
   21407:	call   11580 <__isoc99_sscanf@plt>
   2140c:	pop    r10
   2140e:	pop    r11
   21410:	cmp    eax,0x6
   21413:	jne    21560 <wget_http_parse_full_date+0x1c0>
   21419:	cmp    BYTE PTR [rsp+0x24],0x0
   2141e:	je     2145d <wget_http_parse_full_date+0xbd>
   21420:	lea    rbx,[rip+0x54861]        # 75c88 <mnames.1+0x8>
   21427:	lea    rsi,[rip+0x2b61c]        # 4ca4a <__func__.5+0x9a>
   2142e:	xor    ebp,ebp
   21430:	jmp    21441 <wget_http_parse_full_date+0xa1>
   21432:	nop    WORD PTR [rax+rax*1+0x0]
   21438:	mov    rsi,QWORD PTR [rbx]
   2143b:	mov    ebp,eax
   2143d:	add    rbx,0x8
   21441:	mov    rdi,r13
   21444:	call   12590 <wget_strcasecmp_ascii@plt>
   21449:	mov    r8d,eax
   2144c:	lea    eax,[rbp+0x1]
   2144f:	test   r8d,r8d
   21452:	je     216b8 <wget_http_parse_full_date+0x318>
   21458:	cmp    eax,0xc
   2145b:	jne    21438 <wget_http_parse_full_date+0x98>
   2145d:	mov    ebp,0xffffffff
   21462:	xor    edi,edi
   21464:	xor    eax,eax
   21466:	mov    edx,DWORD PTR [rsp+0x14]
   2146a:	cmp    edx,0x45
   2146d:	jbe    21540 <wget_http_parse_full_date+0x1a0>
   21473:	lea    ecx,[rdx-0x46]
   21476:	cmp    ecx,0x1d
   21479:	ja     215f0 <wget_http_parse_full_date+0x250>
   2147f:	add    edx,0x76c
   21485:	mov    DWORD PTR [rsp+0x14],edx
   21489:	test   dl,0x3
   2148c:	jne    216c9 <wget_http_parse_full_date+0x329>
   21492:	mov    ecx,edx
   21494:	imul   rcx,rcx,0x51eb851f
   2149b:	shr    rcx,0x25
   2149f:	imul   esi,ecx,0x64
   214a2:	mov    ecx,edx
   214a4:	sub    ecx,esi
   214a6:	jne    21550 <wget_http_parse_full_date+0x1b0>
   214ac:	imul   esi,edx,0xc28f5c29
   214b2:	xor    r9d,r9d
   214b5:	ror    esi,0x4
   214b8:	cmp    esi,0xa3d70a
   214be:	jbe    21550 <wget_http_parse_full_date+0x1b0>
   214c4:	nop    DWORD PTR [rax+0x0]
   214c8:	cmp    ebp,0xb
   214cb:	ja     214fa <wget_http_parse_full_date+0x15a>
   214cd:	mov    r8d,DWORD PTR [rsp+0x10]
   214d2:	test   r8d,r8d
   214d5:	jle    214fa <wget_http_parse_full_date+0x15a>
   214d7:	lea    esi,[rax-0x1]
   214da:	lea    rdi,[rip+0x2b95f]        # 4ce40 <days_per_month.3>
   214e1:	movsxd rsi,esi
   214e4:	add    ecx,DWORD PTR [rdi+rsi*4]
   214e7:	cmp    r8d,ecx
   214ea:	jg     214fa <wget_http_parse_full_date+0x15a>
   214ec:	movsxd rcx,DWORD PTR [rsp+0x18]
   214f1:	cmp    ecx,0x17
   214f4:	jbe    21618 <wget_http_parse_full_date+0x278>
   214fa:	mov    edx,0x5
   214ff:	lea    rsi,[rip+0x2b560]        # 4ca66 <__func__.5+0xb6>
   21506:	xor    edi,edi
   21508:	call   10f90 <dcgettext@plt>
   2150d:	mov    rsi,r12
   21510:	mov    rdi,rax
   21513:	xor    eax,eax
   21515:	call   11ea0 <wget_error_printf@plt>
   2151a:	xor    eax,eax
   2151c:	mov    rdx,QWORD PTR [rsp+0x28]
   21521:	sub    rdx,QWORD PTR fs:0x28
   2152a:	jne    216c4 <wget_http_parse_full_date+0x324>
   21530:	add    rsp,0x38
   21534:	pop    rbx
   21535:	pop    rbp
   21536:	pop    r12
   21538:	pop    r13
   2153a:	pop    r14
   2153c:	pop    r15
   2153e:	ret    
   2153f:	nop
   21540:	add    edx,0x7d0
   21546:	jmp    21485 <wget_http_parse_full_date+0xe5>
   2154b:	nop    DWORD PTR [rax+rax*1+0x0]
   21550:	movzx  ecx,dil
   21554:	mov    r9d,0x1
   2155a:	jmp    214c8 <wget_http_parse_full_date+0x128>
   2155f:	nop
   21560:	push   QWORD PTR [rsp+0x8]
   21564:	mov    r9,r15
   21567:	mov    r8,rbx
   2156a:	mov    rcx,r13
   2156d:	push   rbp
   2156e:	mov    rdx,r14
   21571:	lea    rsi,[rip+0x2b6a0]        # 4cc18 <__func__.5+0x268>
   21578:	mov    rdi,r12
   2157b:	xor    eax,eax
   2157d:	call   11580 <__isoc99_sscanf@plt>
   21582:	pop    r8
   21584:	pop    r9
   21586:	cmp    eax,0x6
   21589:	je     21419 <wget_http_parse_full_date+0x79>
   2158f:	push   rbx
   21590:	lea    rsi,[rip+0x2b6a9]        # 4cc40 <__func__.5+0x290>
   21597:	mov    rdi,r12
   2159a:	mov    r9,rbp
   2159d:	push   QWORD PTR [rsp+0x10]
   215a1:	mov    r8,r15
   215a4:	mov    rcx,r14
   215a7:	mov    rdx,r13
   215aa:	xor    eax,eax
   215ac:	call   11580 <__isoc99_sscanf@plt>
   215b1:	pop    rsi
   215b2:	pop    rdi
   215b3:	cmp    eax,0x6
   215b6:	je     21419 <wget_http_parse_full_date+0x79>
   215bc:	push   QWORD PTR [rsp+0x8]
   215c0:	mov    rcx,r13
   215c3:	mov    rdx,r14
   215c6:	mov    r9,r15
   215c9:	push   rbp
   215ca:	mov    r8,rbx
   215cd:	lea    rsi,[rip+0x2b47a]        # 4ca4e <__func__.5+0x9e>
   215d4:	mov    rdi,r12
   215d7:	xor    eax,eax
   215d9:	call   11580 <__isoc99_sscanf@plt>
   215de:	pop    rdx
   215df:	pop    rcx
   215e0:	cmp    eax,0x6
   215e3:	je     21419 <wget_http_parse_full_date+0x79>
   215e9:	jmp    214fa <wget_http_parse_full_date+0x15a>
   215ee:	xchg   ax,ax
   215f0:	cmp    edx,0x7b1
   215f6:	jg     21489 <wget_http_parse_full_date+0xe9>
   215fc:	mov    DWORD PTR [rsp+0x14],0x7b2
   21604:	xor    ecx,ecx
   21606:	xor    r9d,r9d
   21609:	mov    edx,0x7b2
   2160e:	jmp    214c8 <wget_http_parse_full_date+0x128>
   21613:	nop    DWORD PTR [rax+rax*1+0x0]
   21618:	movsxd rdi,DWORD PTR [rsp+0x1c]
   2161d:	cmp    edi,0x3c
   21620:	ja     214fa <wget_http_parse_full_date+0x15a>
   21626:	movsxd r11,DWORD PTR [rsp+0x20]
   2162b:	cmp    r11d,0x3c
   2162f:	ja     214fa <wget_http_parse_full_date+0x15a>
   21635:	lea    r10d,[rdx-0x1]
   21639:	sub    edx,0x7b2
   2163f:	mov    ebx,r10d
   21642:	imul   r10,r10,0x51eb851f
   21649:	imul   edx,edx,0x16d
   2164f:	sar    ebx,0x2
   21652:	mov    r14,r10
   21655:	shr    r10,0x27
   21659:	shr    r14,0x25
   2165d:	sub    ebx,r14d
   21660:	lea    r10d,[rbx+r10*1-0x1dd]
   21668:	add    edx,r10d
   2166b:	cmp    eax,0x2
   2166e:	setg   al
   21671:	movzx  eax,al
   21674:	and    eax,r9d
   21677:	lea    r9,[rip+0x2b782]        # 4ce00 <sum_of_days.2>
   2167e:	add    eax,DWORD PTR [r9+rsi*4]
   21682:	add    eax,edx
   21684:	lea    eax,[r8+rax*1-0x1]
   21689:	cdqe   
   2168b:	lea    rax,[rax+rax*2]
   2168f:	lea    rdx,[rcx+rax*8]
   21693:	mov    rax,rdx
   21696:	shl    rax,0x4
   2169a:	sub    rax,rdx
   2169d:	lea    rdx,[rdi+rax*4]
   216a1:	mov    rax,rdx
   216a4:	shl    rax,0x4
   216a8:	sub    rax,rdx
   216ab:	lea    rax,[r11+rax*4]
   216af:	jmp    2151c <wget_http_parse_full_date+0x17c>
   216b4:	nop    DWORD PTR [rax+0x0]
   216b8:	cmp    eax,0x2
   216bb:	sete   dil
   216bf:	jmp    21466 <wget_http_parse_full_date+0xc6>
   216c4:	call   11760 <__stack_chk_fail@plt>
   216c9:	xor    ecx,ecx
   216cb:	xor    r9d,r9d
   216ce:	jmp    214c8 <wget_http_parse_full_date+0x128>
   216d3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   216de:	xchg   ax,ax

00000000000216e0 <wget_http_print_date>:
   216e0:	endbr64 
   216e4:	push   r12
   216e6:	mov    r12,rsi
   216e9:	push   rbp
   216ea:	sub    rsp,0x58
   216ee:	mov    rax,QWORD PTR fs:0x28
   216f7:	mov    QWORD PTR [rsp+0x48],rax
   216fc:	xor    eax,eax
   216fe:	test   rdx,rdx
   21701:	jne    21728 <wget_http_print_date+0x48>
   21703:	mov    rax,QWORD PTR [rsp+0x48]
   21708:	sub    rax,QWORD PTR fs:0x28
   21711:	jne    217aa <wget_http_print_date+0xca>
   21717:	add    rsp,0x58
   2171b:	mov    rax,r12
   2171e:	pop    rbp
   2171f:	pop    r12
   21721:	ret    
   21722:	nop    WORD PTR [rax+rax*1+0x0]
   21728:	mov    QWORD PTR [rsp+0x8],rdi
   2172d:	lea    rsi,[rsp+0x10]
   21732:	lea    rdi,[rsp+0x8]
   21737:	mov    rbp,rdx
   2173a:	call   127a0 <gmtime_r@plt>
   2173f:	test   rax,rax
   21742:	je     217a0 <wget_http_print_date+0xc0>
   21744:	movsxd rcx,DWORD PTR [rsp+0x28]
   21749:	movsxd rdx,DWORD PTR [rsp+0x20]
   2174e:	mov    rsi,rbp
   21751:	mov    rdi,r12
   21754:	lea    rax,[rip+0x544e5]        # 75c40 <dnames.0>
   2175b:	mov    rcx,QWORD PTR [rax+rcx*8]
   2175f:	mov    eax,DWORD PTR [rsp+0x10]
   21763:	push   rax
   21764:	mov    eax,DWORD PTR [rsp+0x1c]
   21768:	push   rax
   21769:	mov    eax,DWORD PTR [rsp+0x28]
   2176d:	push   rax
   2176e:	mov    eax,DWORD PTR [rsp+0x3c]
   21772:	add    eax,0x76c
   21777:	push   rax
   21778:	lea    rax,[rip+0x54501]        # 75c80 <mnames.1>
   2177f:	mov    r8d,DWORD PTR [rsp+0x3c]
   21784:	mov    r9,QWORD PTR [rax+rdx*8]
   21788:	lea    rdx,[rip+0x2b4d9]        # 4cc68 <__func__.5+0x2b8>
   2178f:	xor    eax,eax
   21791:	call   119f0 <wget_snprintf@plt>
   21796:	add    rsp,0x20
   2179a:	jmp    21703 <wget_http_print_date+0x23>
   2179f:	nop
   217a0:	mov    BYTE PTR [r12],0x0
   217a5:	jmp    21703 <wget_http_print_date+0x23>
   217aa:	call   11760 <__stack_chk_fail@plt>
   217af:	nop

00000000000217b0 <wget_http_parse_setcookie>:
   217b0:	endbr64 
   217b4:	jmp    10fd0 <wget_cookie_parse_setcookie@plt>
   217b9:	nop    DWORD PTR [rax+0x0]

00000000000217c0 <wget_http_parse_header_line>:
   217c0:	endbr64 
   217c4:	push   r15
   217c6:	push   r14
   217c8:	push   r13
   217ca:	push   r12
   217cc:	push   rbp
   217cd:	push   rbx
   217ce:	sub    rsp,0x148
   217d5:	mov    QWORD PTR [rsp],rdi
   217d9:	mov    rax,QWORD PTR fs:0x28
   217e2:	mov    QWORD PTR [rsp+0x138],rax
   217ea:	xor    eax,eax
   217ec:	test   rsi,rsi
   217ef:	je     21d50 <wget_http_parse_header_line+0x590>
   217f5:	mov    r12,rcx
   217f8:	test   rcx,rcx
   217fb:	je     21d50 <wget_http_parse_header_line+0x590>
   21801:	lea    rbp,[rsp+0x30]
   21806:	mov    r13,rsi
   21809:	mov    r15,rdx
   2180c:	mov    rcx,r8
   2180f:	mov    rdx,r12
   21812:	mov    esi,0x100
   21817:	mov    rdi,rbp
   2181a:	mov    rbx,r8
   2181d:	call   12080 <wget_strmemcpy_a@plt>
   21822:	mov    r14,rax
   21825:	test   rax,rax
   21828:	je     21e75 <wget_http_parse_header_line+0x6b5>
   2182e:	movzx  eax,BYTE PTR [r13+0x0]
   21833:	or     eax,0x20
   21836:	sub    eax,0x3a
   21839:	cmp    al,0x3e
   2183b:	ja     21878 <wget_http_parse_header_line+0xb8>
   2183d:	lea    rdx,[rip+0x2b4bc]        # 4cd00 <__func__.5+0x350>
   21844:	movzx  eax,al
   21847:	movsxd rax,DWORD PTR [rdx+rax*4]
   2184b:	add    rax,rdx
   2184e:	notrack jmp rax
   21851:	nop    DWORD PTR [rax+0x0]
   21858:	mov    rdx,r15
   2185b:	lea    rsi,[rip+0x2b310]        # 4cb72 <__func__.5+0x1c2>
   21862:	mov    rdi,r13
   21865:	call   11c40 <wget_strncasecmp_ascii@plt>
   2186a:	mov    r12d,eax
   2186d:	test   eax,eax
   2186f:	je     218c0 <wget_http_parse_header_line+0x100>
   21871:	nop    DWORD PTR [rax+0x0]
   21878:	mov    r12d,0xffffffff
   2187e:	cmp    r14,rbp
   21881:	je     2188f <wget_http_parse_header_line+0xcf>
   21883:	mov    rax,QWORD PTR [rip+0x5475e]        # 75fe8 <wget_free@@Base-0x1328>
   2188a:	mov    rdi,r14
   2188d:	call   QWORD PTR [rax]
   2188f:	mov    rax,QWORD PTR [rsp+0x138]
   21897:	sub    rax,QWORD PTR fs:0x28
   218a0:	jne    21ec4 <wget_http_parse_header_line+0x704>
   218a6:	add    rsp,0x148
   218ad:	mov    eax,r12d
   218b0:	pop    rbx
   218b1:	pop    rbp
   218b2:	pop    r12
   218b4:	pop    r13
   218b6:	pop    r14
   218b8:	pop    r15
   218ba:	ret    
   218bb:	nop    DWORD PTR [rax+rax*1+0x0]
   218c0:	mov    rdi,r14
   218c3:	call   12160 <wget_http_parse_full_date@plt>
   218c8:	mov    rbx,QWORD PTR [rsp]
   218cc:	mov    QWORD PTR [rbx+0x88],rax
   218d3:	jmp    2187e <wget_http_parse_header_line+0xbe>
   218d5:	nop    DWORD PTR [rax]
   218d8:	mov    rdx,r15
   218db:	lea    rsi,[rip+0x2b19f]        # 4ca81 <__func__.5+0xd1>
   218e2:	mov    rdi,r13
   218e5:	call   10ac0 <memcmp@plt>
   218ea:	cmp    rbx,0x3
   218ee:	jne    21878 <wget_http_parse_header_line+0xb8>
   218f0:	test   eax,eax
   218f2:	jne    21878 <wget_http_parse_header_line+0xb8>
   218f4:	movsx  eax,BYTE PTR [r12]
   218f9:	mov    rbx,QWORD PTR [rsp]
   218fd:	lea    edx,[rax+rax*4-0xf0]
   21904:	movsx  eax,BYTE PTR [r12+0x1]
   2190a:	lea    eax,[rax+rdx*2-0x30]
   2190e:	movsx  dx,BYTE PTR [r12+0x2]
   21915:	xor    r12d,r12d
   21918:	lea    eax,[rax+rax*4]
   2191b:	lea    eax,[rdx+rax*2-0x30]
   2191f:	mov    WORD PTR [rbx+0xc0],ax
   21926:	jmp    2187e <wget_http_parse_header_line+0xbe>
   2192b:	nop    DWORD PTR [rax+rax*1+0x0]
   21930:	mov    rdx,r15
   21933:	lea    rsi,[rip+0x2b14f]        # 4ca89 <__func__.5+0xd9>
   2193a:	mov    rdi,r13
   2193d:	call   11c40 <wget_strncasecmp_ascii@plt>
   21942:	mov    r12d,eax
   21945:	test   eax,eax
   21947:	je     21d30 <wget_http_parse_header_line+0x570>
   2194d:	mov    rdx,r15
   21950:	lea    rsi,[rip+0x2b143]        # 4ca9a <__func__.5+0xea>
   21957:	mov    rdi,r13
   2195a:	call   11c40 <wget_strncasecmp_ascii@plt>
   2195f:	mov    r12d,eax
   21962:	test   eax,eax
   21964:	je     21c88 <wget_http_parse_header_line+0x4c8>
   2196a:	mov    rdx,r15
   2196d:	lea    rsi,[rip+0x2b133]        # 4caa7 <__func__.5+0xf7>
   21974:	mov    rdi,r13
   21977:	call   11c40 <wget_strncasecmp_ascii@plt>
   2197c:	mov    r12d,eax
   2197f:	test   eax,eax
   21981:	je     21dfa <wget_http_parse_header_line+0x63a>
   21987:	mov    rdx,r15
   2198a:	lea    rsi,[rip+0x2b125]        # 4cab6 <__func__.5+0x106>
   21991:	mov    rdi,r13
   21994:	call   11c40 <wget_strncasecmp_ascii@plt>
   21999:	mov    r12d,eax
   2199c:	test   eax,eax
   2199e:	jne    21db0 <wget_http_parse_header_line+0x5f0>
   219a4:	mov    rax,QWORD PTR [rsp]
   219a8:	cmp    QWORD PTR [rax+0x40],0x0
   219ad:	jne    2187e <wget_http_parse_header_line+0xbe>
   219b3:	mov    rsi,rax
   219b6:	mov    rdi,r14
   219b9:	add    rsi,0x40
   219bd:	call   12030 <wget_http_parse_content_disposition@plt>
   219c2:	jmp    2187e <wget_http_parse_header_line+0xbe>
   219c7:	nop    WORD PTR [rax+rax*1+0x0]
   219d0:	mov    rdx,r15
   219d3:	lea    rsi,[rip+0x2ad55]        # 4c72f <maybe+0x48f>
   219da:	mov    rdi,r13
   219dd:	call   11c40 <wget_strncasecmp_ascii@plt>
   219e2:	mov    r12d,eax
   219e5:	test   eax,eax
   219e7:	jne    21878 <wget_http_parse_header_line+0xb8>
   219ed:	lea    r13,[rsp+0x10]
   219f2:	mov    rdi,r14
   219f5:	mov    rsi,r13
   219f8:	call   113a0 <wget_http_parse_digest@plt>
   219fd:	mov    rax,QWORD PTR [rsp]
   21a01:	mov    rdi,QWORD PTR [rax+0x10]
   21a05:	test   rdi,rdi
   21a08:	je     21e49 <wget_http_parse_header_line+0x689>
   21a0e:	mov    edx,0x10
   21a13:	mov    rsi,r13
   21a16:	call   11a20 <wget_vector_add_memdup@plt>
   21a1b:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21a20:	mov    rdx,r15
   21a23:	lea    rsi,[rip+0x2b0c3]        # 4caed <__func__.5+0x13d>
   21a2a:	mov    rdi,r13
   21a2d:	call   11c40 <wget_strncasecmp_ascii@plt>
   21a32:	mov    r12d,eax
   21a35:	test   eax,eax
   21a37:	jne    21878 <wget_http_parse_header_line+0xb8>
   21a3d:	mov    rax,QWORD PTR [rsp]
   21a41:	cmp    QWORD PTR [rax+0x50],0x0
   21a46:	jne    2187e <wget_http_parse_header_line+0xbe>
   21a4c:	mov    rsi,rax
   21a4f:	mov    rdi,r14
   21a52:	add    rsi,0x50
   21a56:	call   112d0 <wget_http_parse_etag@plt>
   21a5b:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21a60:	mov    rdx,r15
   21a63:	lea    rsi,[rip+0x2b088]        # 4caf2 <__func__.5+0x142>
   21a6a:	mov    rdi,r13
   21a6d:	call   11c40 <wget_strncasecmp_ascii@plt>
   21a72:	mov    r12d,eax
   21a75:	test   eax,eax
   21a77:	jne    21878 <wget_http_parse_header_line+0xb8>
   21a7d:	mov    edx,0xa
   21a82:	xor    esi,esi
   21a84:	mov    rdi,r14
   21a87:	call   11c90 <strtol@plt>
   21a8c:	mov    rbx,QWORD PTR [rsp]
   21a90:	mov    DWORD PTR [rbx+0xb8],eax
   21a96:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21a9b:	nop    DWORD PTR [rax+rax*1+0x0]
   21aa0:	mov    rdx,r15
   21aa3:	lea    rsi,[rip+0x2b0d7]        # 4cb81 <__func__.5+0x1d1>
   21aaa:	mov    rdi,r13
   21aad:	call   11c40 <wget_strncasecmp_ascii@plt>
   21ab2:	mov    r12d,eax
   21ab5:	test   eax,eax
   21ab7:	je     218c0 <wget_http_parse_header_line+0x100>
   21abd:	mov    rbx,QWORD PTR [rsp]
   21ac1:	mov    r12d,0xffffffff
   21ac7:	movzx  eax,WORD PTR [rbx+0xc0]
   21ace:	mov    WORD PTR [rsp+0xe],ax
   21ad3:	sub    ax,0x12c
   21ad7:	cmp    ax,0x63
   21adb:	ja     2187e <wget_http_parse_header_line+0xbe>
   21ae1:	mov    rdx,r15
   21ae4:	lea    rsi,[rip+0x2b013]        # 4cafe <__func__.5+0x14e>
   21aeb:	mov    rdi,r13
   21aee:	call   11c40 <wget_strncasecmp_ascii@plt>
   21af3:	mov    r12d,eax
   21af6:	test   eax,eax
   21af8:	jne    21d60 <wget_http_parse_header_line+0x5a0>
   21afe:	cmp    QWORD PTR [rbx+0x48],0x0
   21b03:	jne    2187e <wget_http_parse_header_line+0xbe>
   21b09:	mov    rsi,rbx
   21b0c:	mov    rdi,r14
   21b0f:	add    rsi,0x48
   21b13:	call   11680 <wget_http_parse_location@plt>
   21b18:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21b1d:	nop    DWORD PTR [rax]
   21b20:	mov    rdx,r15
   21b23:	lea    rsi,[rip+0x2afdd]        # 4cb07 <__func__.5+0x157>
   21b2a:	mov    rdi,r13
   21b2d:	call   11c40 <wget_strncasecmp_ascii@plt>
   21b32:	mov    r12d,eax
   21b35:	test   eax,eax
   21b37:	jne    21c78 <wget_http_parse_header_line+0x4b8>
   21b3d:	mov    rax,QWORD PTR [rsp]
   21b41:	cmp    QWORD PTR [rax+0x28],0x0
   21b46:	jne    2187e <wget_http_parse_header_line+0xbe>
   21b4c:	call   109c0 <wget_hpkp_new@plt>
   21b51:	mov    rdi,r14
   21b54:	mov    rsi,rax
   21b57:	mov    rax,QWORD PTR [rsp]
   21b5b:	mov    QWORD PTR [rax+0x28],rsi
   21b5f:	call   12690 <wget_http_parse_public_key_pins@plt>
   21b64:	lea    rdi,[rip+0x2b125]        # 4cc90 <__func__.5+0x2e0>
   21b6b:	xor    eax,eax
   21b6d:	call   114b0 <wget_debug_printf@plt>
   21b72:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21b77:	nop    WORD PTR [rax+rax*1+0x0]
   21b80:	mov    rdx,r15
   21b83:	lea    rsi,[rip+0x2afa0]        # 4cb2a <__func__.5+0x17a>
   21b8a:	mov    rdi,r13
   21b8d:	call   11c40 <wget_strncasecmp_ascii@plt>
   21b92:	mov    r12d,eax
   21b95:	test   eax,eax
   21b97:	je     21cd0 <wget_http_parse_header_line+0x510>
   21b9d:	mov    rdx,r15
   21ba0:	lea    rsi,[rip+0x2af8e]        # 4cb35 <__func__.5+0x185>
   21ba7:	mov    rdi,r13
   21baa:	call   11c40 <wget_strncasecmp_ascii@plt>
   21baf:	mov    r12d,eax
   21bb2:	test   eax,eax
   21bb4:	jne    21878 <wget_http_parse_header_line+0xb8>
   21bba:	mov    rax,QWORD PTR [rsp]
   21bbe:	mov    rdi,r14
   21bc1:	or     BYTE PTR [rax+0xcb],0x4
   21bc8:	lea    rdx,[rax+0xc9]
   21bcf:	lea    rsi,[rax+0x90]
   21bd6:	call   10b90 <wget_http_parse_strict_transport_security@plt>
   21bdb:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21be0:	mov    rdx,r15
   21be3:	lea    rsi,[rip+0x2af65]        # 4cb4f <__func__.5+0x19f>
   21bea:	mov    rdi,r13
   21bed:	call   11c40 <wget_strncasecmp_ascii@plt>
   21bf2:	mov    r12d,eax
   21bf5:	test   eax,eax
   21bf7:	jne    21878 <wget_http_parse_header_line+0xb8>
   21bfd:	mov    rsi,QWORD PTR [rsp]
   21c01:	mov    rdi,r14
   21c04:	add    rsi,0xc4
   21c0b:	call   122d0 <wget_http_parse_transfer_encoding@plt>
   21c10:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21c15:	nop    DWORD PTR [rax]
   21c18:	mov    rdx,r15
   21c1b:	lea    rsi,[rip+0x2af3f]        # 4cb61 <__func__.5+0x1b1>
   21c22:	mov    rdi,r13
   21c25:	call   11c40 <wget_strncasecmp_ascii@plt>
   21c2a:	mov    r12d,eax
   21c2d:	test   eax,eax
   21c2f:	jne    21878 <wget_http_parse_header_line+0xb8>
   21c35:	mov    rax,QWORD PTR [rip+0x54394]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   21c3c:	mov    edi,0x10
   21c41:	call   QWORD PTR [rax]
   21c43:	mov    r13,rax
   21c46:	test   rax,rax
   21c49:	je     21cc0 <wget_http_parse_header_line+0x500>
   21c4b:	mov    rdi,r14
   21c4e:	mov    rsi,rax
   21c51:	call   10a10 <wget_http_parse_challenge@plt>
   21c56:	mov    rax,QWORD PTR [rsp]
   21c5a:	mov    rdi,QWORD PTR [rax+0x20]
   21c5e:	test   rdi,rdi
   21c61:	je     21e1d <wget_http_parse_header_line+0x65d>
   21c67:	mov    rsi,r13
   21c6a:	call   11290 <wget_vector_add@plt>
   21c6f:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21c74:	nop    DWORD PTR [rax+0x0]
   21c78:	mov    rdx,r15
   21c7b:	lea    rsi,[rip+0x2ae95]        # 4cb17 <__func__.5+0x167>
   21c82:	jmp    21c22 <wget_http_parse_header_line+0x462>
   21c84:	nop    DWORD PTR [rax+0x0]
   21c88:	mov    rax,QWORD PTR [rsp]
   21c8c:	cmp    QWORD PTR [rax+0x30],0x0
   21c91:	jne    2187e <wget_http_parse_header_line+0xbe>
   21c97:	cmp    QWORD PTR [rax+0x38],0x0
   21c9c:	jne    2187e <wget_http_parse_header_line+0xbe>
   21ca2:	lea    rdx,[rax+0x38]
   21ca6:	lea    rsi,[rax+0x30]
   21caa:	mov    rdi,r14
   21cad:	call   10fa0 <wget_http_parse_content_type@plt>
   21cb2:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21cb7:	nop    WORD PTR [rax+rax*1+0x0]
   21cc0:	mov    r12d,0xfffffffe
   21cc6:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21ccb:	nop    DWORD PTR [rax+rax*1+0x0]
   21cd0:	lea    rsi,[rsp+0x10]
   21cd5:	mov    rdi,r14
   21cd8:	call   11e50 <wget_http_parse_setcookie@plt>
   21cdd:	mov    rsi,QWORD PTR [rsp+0x10]
   21ce2:	test   rsi,rsi
   21ce5:	je     2187e <wget_http_parse_header_line+0xbe>
   21ceb:	mov    rax,QWORD PTR [rsp]
   21cef:	mov    rdi,QWORD PTR [rax+0x18]
   21cf3:	test   rdi,rdi
   21cf6:	jne    21c6a <wget_http_parse_header_line+0x4aa>
   21cfc:	xor    esi,esi
   21cfe:	mov    edi,0x4
   21d03:	call   11f00 <wget_vector_create@plt>
   21d08:	mov    rbx,QWORD PTR [rsp]
   21d0c:	lea    rsi,[rip+0xffffffffffffe0fd]        # 1fe10 <cookie_free>
   21d13:	mov    rdi,rax
   21d16:	mov    QWORD PTR [rbx+0x18],rax
   21d1a:	call   120e0 <wget_vector_set_destructor@plt>
   21d1f:	mov    rsi,QWORD PTR [rsp+0x10]
   21d24:	mov    rdi,QWORD PTR [rbx+0x18]
   21d28:	jmp    21c6a <wget_http_parse_header_line+0x4aa>
   21d2d:	nop    DWORD PTR [rax]
   21d30:	mov    rsi,QWORD PTR [rsp]
   21d34:	mov    rdi,r14
   21d37:	add    rsi,0xc8
   21d3e:	call   109f0 <wget_http_parse_content_encoding@plt>
   21d43:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21d48:	nop    DWORD PTR [rax+rax*1+0x0]
   21d50:	mov    r12d,0xfffffffd
   21d56:	jmp    2188f <wget_http_parse_header_line+0xcf>
   21d5b:	nop    DWORD PTR [rax+rax*1+0x0]
   21d60:	mov    rdx,r15
   21d63:	lea    rsi,[rip+0x2a39a]        # 4c104 <__func__.0+0x24>
   21d6a:	mov    rdi,r13
   21d6d:	call   11c40 <wget_strncasecmp_ascii@plt>
   21d72:	mov    r12d,eax
   21d75:	test   eax,eax
   21d77:	jne    21878 <wget_http_parse_header_line+0xb8>
   21d7d:	lea    r13,[rsp+0x10]
   21d82:	mov    rdi,r14
   21d85:	mov    rsi,r13
   21d88:	call   12020 <wget_http_parse_link@plt>
   21d8d:	mov    rax,QWORD PTR [rsp]
   21d91:	mov    rdi,QWORD PTR [rax+0x8]
   21d95:	test   rdi,rdi
   21d98:	je     21e98 <wget_http_parse_header_line+0x6d8>
   21d9e:	mov    edx,0x18
   21da3:	mov    rsi,r13
   21da6:	call   11a20 <wget_vector_add_memdup@plt>
   21dab:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21db0:	mov    rdx,r15
   21db3:	lea    rsi,[rip+0x2ad10]        # 4caca <__func__.5+0x11a>
   21dba:	mov    rdi,r13
   21dbd:	call   11c40 <wget_strncasecmp_ascii@plt>
   21dc2:	mov    r12d,eax
   21dc5:	test   eax,eax
   21dc7:	je     21e80 <wget_http_parse_header_line+0x6c0>
   21dcd:	mov    rdx,r15
   21dd0:	lea    rsi,[rip+0x2acfe]        # 4cad5 <__func__.5+0x125>
   21dd7:	mov    rdi,r13
   21dda:	call   11c40 <wget_strncasecmp_ascii@plt>
   21ddf:	mov    r12d,eax
   21de2:	test   eax,eax
   21de4:	jne    21878 <wget_http_parse_header_line+0xb8>
   21dea:	mov    rax,QWORD PTR [rsp]
   21dee:	or     BYTE PTR [rax+0xcb],0x8
   21df5:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21dfa:	mov    edx,0xa
   21dff:	xor    esi,esi
   21e01:	mov    rdi,r14
   21e04:	call   10600 <strtoll@plt>
   21e09:	mov    rbx,QWORD PTR [rsp]
   21e0d:	or     BYTE PTR [rbx+0xcb],0x1
   21e14:	mov    QWORD PTR [rbx+0x70],rax
   21e18:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21e1d:	xor    esi,esi
   21e1f:	mov    edi,0x2
   21e24:	call   11f00 <wget_vector_create@plt>
   21e29:	mov    rbx,QWORD PTR [rsp]
   21e2d:	mov    rsi,QWORD PTR [rip+0x5415c]        # 75f90 <wget_http_free_challenge@@Base+0x56150>
   21e34:	mov    rdi,rax
   21e37:	mov    QWORD PTR [rbx+0x20],rax
   21e3b:	call   120e0 <wget_vector_set_destructor@plt>
   21e40:	mov    rdi,QWORD PTR [rbx+0x20]
   21e44:	jmp    21c67 <wget_http_parse_header_line+0x4a7>
   21e49:	xor    esi,esi
   21e4b:	mov    edi,0x4
   21e50:	call   11f00 <wget_vector_create@plt>
   21e55:	mov    rbx,QWORD PTR [rsp]
   21e59:	mov    rsi,QWORD PTR [rip+0x540f8]        # 75f58 <wget_http_free_digest@@Base+0x561a8>
   21e60:	mov    rdi,rax
   21e63:	mov    QWORD PTR [rbx+0x10],rax
   21e67:	call   120e0 <wget_vector_set_destructor@plt>
   21e6c:	mov    rdi,QWORD PTR [rbx+0x10]
   21e70:	jmp    21a0e <wget_http_parse_header_line+0x24e>
   21e75:	mov    r12d,0xfffffffe
   21e7b:	jmp    2188f <wget_http_parse_header_line+0xcf>
   21e80:	mov    rsi,QWORD PTR [rsp]
   21e84:	mov    rdi,r14
   21e87:	add    rsi,0xca
   21e8e:	call   12750 <wget_http_parse_connection@plt>
   21e93:	jmp    2187e <wget_http_parse_header_line+0xbe>
   21e98:	xor    esi,esi
   21e9a:	mov    edi,0x8
   21e9f:	call   11f00 <wget_vector_create@plt>
   21ea4:	mov    rbx,QWORD PTR [rsp]
   21ea8:	mov    rsi,QWORD PTR [rip+0x540c1]        # 75f70 <wget_http_free_link@@Base+0x56210>
   21eaf:	mov    rdi,rax
   21eb2:	mov    QWORD PTR [rbx+0x8],rax
   21eb6:	call   120e0 <wget_vector_set_destructor@plt>
   21ebb:	mov    rdi,QWORD PTR [rbx+0x8]
   21ebf:	jmp    21d9e <wget_http_parse_header_line+0x5de>
   21ec4:	call   11760 <__stack_chk_fail@plt>
   21ec9:	nop    DWORD PTR [rax+0x0]

0000000000021ed0 <wget_http_parse_response_header>:
   21ed0:	endbr64 
   21ed4:	push   r14
   21ed6:	mov    esi,0xd0
   21edb:	push   r13
   21edd:	push   r12
   21edf:	push   rbp
   21ee0:	push   rbx
   21ee1:	mov    rbx,rdi
   21ee4:	mov    edi,0x1
   21ee9:	sub    rsp,0x20
   21eed:	mov    rax,QWORD PTR fs:0x28
   21ef6:	mov    QWORD PTR [rsp+0x18],rax
   21efb:	xor    eax,eax
   21efd:	mov    rax,QWORD PTR [rip+0x5403c]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   21f04:	call   QWORD PTR [rax]
   21f06:	mov    r13,rax
   21f09:	test   rax,rax
   21f0c:	je     2206d <wget_http_parse_response_header+0x19d>
   21f12:	lea    r14,[rax+0x98]
   21f19:	lea    r12,[rax+0xc0]
   21f20:	mov    rdi,rbx
   21f23:	lea    rcx,[rax+0xbe]
   21f2a:	lea    rdx,[rax+0xbc]
   21f31:	mov    r9,r14
   21f34:	xor    eax,eax
   21f36:	mov    r8,r12
   21f39:	lea    rsi,[rip+0x2ad80]        # 4ccc0 <__func__.5+0x310>
   21f40:	call   11580 <__isoc99_sscanf@plt>
   21f45:	cmp    eax,0x2
   21f48:	jle    220b1 <wget_http_parse_response_header+0x1e1>
   21f4e:	lea    rdi,[rbx+0xa]
   21f52:	mov    esi,0xa
   21f57:	call   109e0 <strchr@plt>
   21f5c:	test   rax,rax
   21f5f:	je     2206d <wget_http_parse_response_header+0x19d>
   21f65:	cmp    WORD PTR [r13+0xbc],0x1
   21f6e:	je     22091 <wget_http_parse_response_header+0x1c1>
   21f74:	jle    21f7e <wget_http_parse_response_header+0xae>
   21f76:	mov    BYTE PTR [r13+0xca],0x1
   21f7e:	lea    r12,[rax+0x1]
   21f82:	mov    rbx,0xffffffffffffdbfe
   21f89:	nop    DWORD PTR [rax+0x0]
   21f90:	movzx  eax,BYTE PTR [r12]
   21f95:	cmp    al,0xd
   21f97:	ja     21fa3 <wget_http_parse_response_header+0xd3>
   21f99:	bt     rbx,rax
   21f9d:	jae    2206d <wget_http_parse_response_header+0x19d>
   21fa3:	mov    esi,0xa
   21fa8:	mov    rdi,r12
   21fab:	call   109e0 <strchr@plt>
   21fb0:	mov    rbp,rax
   21fb3:	test   rax,rax
   21fb6:	jne    21fdd <wget_http_parse_response_header+0x10d>
   21fb8:	jmp    22038 <wget_http_parse_response_header+0x168>
   21fba:	nop    WORD PTR [rax+rax*1+0x0]
   21fc0:	mov    BYTE PTR [rbp-0x1],0x20
   21fc4:	mov    rdi,rbp
   21fc7:	mov    esi,0xa
   21fcc:	mov    BYTE PTR [rbp+0x0],0x20
   21fd0:	call   109e0 <strchr@plt>
   21fd5:	mov    rbp,rax
   21fd8:	test   rax,rax
   21fdb:	je     22038 <wget_http_parse_response_header+0x168>
   21fdd:	movsx  eax,BYTE PTR [rbp+0x1]
   21fe1:	cmp    eax,0x20
   21fe4:	je     21fc0 <wget_http_parse_response_header+0xf0>
   21fe6:	cmp    eax,0x9
   21fe9:	je     21fc0 <wget_http_parse_response_header+0xf0>
   21feb:	cmp    BYTE PTR [rbp-0x1],0xd
   21fef:	je     220a8 <wget_http_parse_response_header+0x1d8>
   21ff5:	mov    BYTE PTR [rbp+0x0],0x0
   21ff9:	mov    rdi,r12
   21ffc:	lea    rdx,[rsp+0x8]
   22001:	lea    rsi,[rsp+0x10]
   22006:	call   11c30 <wget_parse_name_fixed@plt>
   2200b:	cmp    BYTE PTR [rbp-0x1],0x1
   2200f:	mov    r8,rbp
   22012:	mov    rdi,r13
   22015:	mov    rdx,QWORD PTR [rsp+0x8]
   2201a:	mov    rsi,QWORD PTR [rsp+0x10]
   2201f:	mov    rcx,rax
   22022:	sbb    r8,rax
   22025:	lea    r12,[rbp+0x1]
   22029:	call   12400 <wget_http_parse_header_line@plt>
   2202e:	jmp    21f90 <wget_http_parse_response_header+0xc0>
   22033:	nop    DWORD PTR [rax+rax*1+0x0]
   22038:	lea    rdx,[rsp+0x8]
   2203d:	lea    rsi,[rsp+0x10]
   22042:	mov    rdi,r12
   22045:	call   11c30 <wget_parse_name_fixed@plt>
   2204a:	mov    rdi,rax
   2204d:	mov    r12,rax
   22050:	call   10ab0 <strlen@plt>
   22055:	mov    rdx,QWORD PTR [rsp+0x8]
   2205a:	mov    rcx,r12
   2205d:	mov    rdi,r13
   22060:	mov    rsi,QWORD PTR [rsp+0x10]
   22065:	mov    r8,rax
   22068:	call   12400 <wget_http_parse_header_line@plt>
   2206d:	mov    rax,QWORD PTR [rsp+0x18]
   22072:	sub    rax,QWORD PTR fs:0x28
   2207b:	jne    22121 <wget_http_parse_response_header+0x251>
   22081:	add    rsp,0x20
   22085:	mov    rax,r13
   22088:	pop    rbx
   22089:	pop    rbp
   2208a:	pop    r12
   2208c:	pop    r13
   2208e:	pop    r14
   22090:	ret    
   22091:	cmp    WORD PTR [r13+0xbe],0x0
   2209a:	jg     21f76 <wget_http_parse_response_header+0xa6>
   220a0:	jmp    21f7e <wget_http_parse_response_header+0xae>
   220a5:	nop    DWORD PTR [rax]
   220a8:	mov    BYTE PTR [rbp-0x1],0x0
   220ac:	jmp    21ff9 <wget_http_parse_response_header+0x129>
   220b1:	xor    eax,eax
   220b3:	mov    rcx,r14
   220b6:	mov    rdx,r12
   220b9:	mov    rdi,rbx
   220bc:	lea    rsi,[rip+0x2aacc]        # 4cb8f <__func__.5+0x1df>
   220c3:	call   11580 <__isoc99_sscanf@plt>
   220c8:	test   eax,eax
   220ca:	jle    220f0 <wget_http_parse_response_header+0x220>
   220cc:	lea    rdi,[rbx+0x4]
   220d0:	mov    esi,0xa
   220d5:	call   109e0 <strchr@plt>
   220da:	test   rax,rax
   220dd:	je     2206d <wget_http_parse_response_header+0x19d>
   220df:	cmp    WORD PTR [r13+0xbc],0x1
   220e8:	jne    21f74 <wget_http_parse_response_header+0xa4>
   220ee:	jmp    22091 <wget_http_parse_response_header+0x1c1>
   220f0:	mov    edx,0x5
   220f5:	lea    rsi,[rip+0x2abe4]        # 4cce0 <__func__.5+0x330>
   220fc:	xor    edi,edi
   220fe:	call   10f90 <dcgettext@plt>
   22103:	mov    rdi,rax
   22106:	xor    eax,eax
   22108:	call   11ea0 <wget_error_printf@plt>
   2210d:	mov    rax,QWORD PTR [rip+0x53ed4]        # 75fe8 <wget_free@@Base-0x1328>
   22114:	mov    rdi,r13
   22117:	xor    r13d,r13d
   2211a:	call   QWORD PTR [rax]
   2211c:	jmp    2206d <wget_http_parse_response_header+0x19d>
   22121:	call   11760 <__stack_chk_fail@plt>
   22126:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000022130 <wget_http_free_param>:
   22130:	endbr64 
   22134:	push   rbp
   22135:	mov    rbp,rdi
   22138:	push   rbx
   22139:	sub    rsp,0x8
   2213d:	mov    rdi,QWORD PTR [rdi]
   22140:	mov    rbx,QWORD PTR [rip+0x53ea1]        # 75fe8 <wget_free@@Base-0x1328>
   22147:	test   rdi,rdi
   2214a:	je     22156 <wget_http_free_param+0x26>
   2214c:	call   QWORD PTR [rbx]
   2214e:	mov    QWORD PTR [rbp+0x0],0x0
   22156:	mov    rdi,QWORD PTR [rbp+0x8]
   2215a:	test   rdi,rdi
   2215d:	je     22169 <wget_http_free_param+0x39>
   2215f:	call   QWORD PTR [rbx]
   22161:	mov    QWORD PTR [rbp+0x8],0x0
   22169:	mov    rax,QWORD PTR [rbx]
   2216c:	add    rsp,0x8
   22170:	mov    rdi,rbp
   22173:	pop    rbx
   22174:	pop    rbp
   22175:	jmp    rax
   22177:	nop    WORD PTR [rax+rax*1+0x0]

0000000000022180 <wget_http_free_links>:
   22180:	endbr64 
   22184:	jmp    125e0 <wget_vector_free@plt>
   22189:	nop    DWORD PTR [rax+0x0]

0000000000022190 <wget_http_free_digests>:
   22190:	endbr64 
   22194:	jmp    125e0 <wget_vector_free@plt>
   22199:	nop    DWORD PTR [rax+0x0]

00000000000221a0 <wget_http_free_challenges>:
   221a0:	endbr64 
   221a4:	jmp    125e0 <wget_vector_free@plt>
   221a9:	nop    DWORD PTR [rax+0x0]

00000000000221b0 <wget_http_free_cookies>:
   221b0:	endbr64 
   221b4:	jmp    125e0 <wget_vector_free@plt>
   221b9:	nop    DWORD PTR [rax+0x0]

00000000000221c0 <wget_http_free_hpkp_entries>:
   221c0:	endbr64 
   221c4:	test   rdi,rdi
   221c7:	je     221e0 <wget_http_free_hpkp_entries+0x20>
   221c9:	push   rbx
   221ca:	mov    rbx,rdi
   221cd:	mov    rdi,QWORD PTR [rdi]
   221d0:	call   10450 <wget_hpkp_free@plt>
   221d5:	mov    QWORD PTR [rbx],0x0
   221dc:	pop    rbx
   221dd:	ret    
   221de:	xchg   ax,ax
   221e0:	ret    
   221e1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   221ec:	nop    DWORD PTR [rax+0x0]

00000000000221f0 <wget_http_free_response>:
   221f0:	endbr64 
   221f4:	test   rdi,rdi
   221f7:	je     22320 <wget_http_free_response+0x130>
   221fd:	push   rbx
   221fe:	mov    rbx,rdi
   22201:	mov    rdi,QWORD PTR [rdi]
   22204:	test   rdi,rdi
   22207:	je     22316 <wget_http_free_response+0x126>
   2220d:	add    rdi,0x8
   22211:	call   11950 <wget_http_free_links@plt>
   22216:	mov    rax,QWORD PTR [rbx]
   22219:	lea    rdi,[rax+0x10]
   2221d:	call   11570 <wget_http_free_digests@plt>
   22222:	mov    rax,QWORD PTR [rbx]
   22225:	lea    rdi,[rax+0x20]
   22229:	call   11b10 <wget_http_free_challenges@plt>
   2222e:	mov    rax,QWORD PTR [rbx]
   22231:	lea    rdi,[rax+0x18]
   22235:	call   11110 <wget_http_free_cookies@plt>
   2223a:	mov    rax,QWORD PTR [rbx]
   2223d:	lea    rdi,[rax+0x28]
   22241:	call   11d10 <wget_http_free_hpkp_entries@plt>
   22246:	mov    rdi,QWORD PTR [rbx]
   22249:	mov    r8,QWORD PTR [rdi+0x30]
   2224d:	test   r8,r8
   22250:	je     22269 <wget_http_free_response+0x79>
   22252:	mov    rax,QWORD PTR [rip+0x53d8f]        # 75fe8 <wget_free@@Base-0x1328>
   22259:	mov    rdi,r8
   2225c:	call   QWORD PTR [rax]
   2225e:	mov    rdi,QWORD PTR [rbx]
   22261:	mov    QWORD PTR [rdi+0x30],0x0
   22269:	mov    r8,QWORD PTR [rdi+0x38]
   2226d:	test   r8,r8
   22270:	je     22289 <wget_http_free_response+0x99>
   22272:	mov    rax,QWORD PTR [rip+0x53d6f]        # 75fe8 <wget_free@@Base-0x1328>
   22279:	mov    rdi,r8
   2227c:	call   QWORD PTR [rax]
   2227e:	mov    rdi,QWORD PTR [rbx]
   22281:	mov    QWORD PTR [rdi+0x38],0x0
   22289:	mov    r8,QWORD PTR [rdi+0x40]
   2228d:	test   r8,r8
   22290:	je     222a9 <wget_http_free_response+0xb9>
   22292:	mov    rax,QWORD PTR [rip+0x53d4f]        # 75fe8 <wget_free@@Base-0x1328>
   22299:	mov    rdi,r8
   2229c:	call   QWORD PTR [rax]
   2229e:	mov    rdi,QWORD PTR [rbx]
   222a1:	mov    QWORD PTR [rdi+0x40],0x0
   222a9:	mov    r8,QWORD PTR [rdi+0x48]
   222ad:	test   r8,r8
   222b0:	je     222c9 <wget_http_free_response+0xd9>
   222b2:	mov    rax,QWORD PTR [rip+0x53d2f]        # 75fe8 <wget_free@@Base-0x1328>
   222b9:	mov    rdi,r8
   222bc:	call   QWORD PTR [rax]
   222be:	mov    rdi,QWORD PTR [rbx]
   222c1:	mov    QWORD PTR [rdi+0x48],0x0
   222c9:	mov    r8,QWORD PTR [rdi+0x50]
   222cd:	test   r8,r8
   222d0:	je     222e9 <wget_http_free_response+0xf9>
   222d2:	mov    rax,QWORD PTR [rip+0x53d0f]        # 75fe8 <wget_free@@Base-0x1328>
   222d9:	mov    rdi,r8
   222dc:	call   QWORD PTR [rax]
   222de:	mov    rdi,QWORD PTR [rbx]
   222e1:	mov    QWORD PTR [rdi+0x50],0x0
   222e9:	add    rdi,0x58
   222ed:	call   111f0 <wget_buffer_free@plt>
   222f2:	mov    rax,QWORD PTR [rbx]
   222f5:	lea    rdi,[rax+0x60]
   222f9:	call   111f0 <wget_buffer_free@plt>
   222fe:	mov    rdi,QWORD PTR [rbx]
   22301:	test   rdi,rdi
   22304:	je     22316 <wget_http_free_response+0x126>
   22306:	mov    rax,QWORD PTR [rip+0x53cdb]        # 75fe8 <wget_free@@Base-0x1328>
   2230d:	call   QWORD PTR [rax]
   2230f:	mov    QWORD PTR [rbx],0x0
   22316:	pop    rbx
   22317:	ret    
   22318:	nop    DWORD PTR [rax+rax*1+0x0]
   22320:	ret    
   22321:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2232c:	nop    DWORD PTR [rax+0x0]

0000000000022330 <wget_http_free_request>:
   22330:	endbr64 
   22334:	test   rdi,rdi
   22337:	je     223a0 <wget_http_free_request+0x70>
   22339:	push   rbp
   2233a:	push   rbx
   2233b:	mov    rbx,rdi
   2233e:	sub    rsp,0x8
   22342:	mov    rdi,QWORD PTR [rdi]
   22345:	test   rdi,rdi
   22348:	je     22395 <wget_http_free_request+0x65>
   2234a:	add    rdi,0x38
   2234e:	call   11300 <wget_buffer_deinit@plt>
   22353:	mov    rax,QWORD PTR [rbx]
   22356:	lea    rdi,[rax+0x58]
   2235a:	call   11300 <wget_buffer_deinit@plt>
   2235f:	mov    rdi,QWORD PTR [rbx]
   22362:	call   125e0 <wget_vector_free@plt>
   22367:	mov    rdi,QWORD PTR [rbx]
   2236a:	mov    rbp,QWORD PTR [rip+0x53c77]        # 75fe8 <wget_free@@Base-0x1328>
   22371:	mov    r8,QWORD PTR [rdi+0x8]
   22375:	test   r8,r8
   22378:	je     2238b <wget_http_free_request+0x5b>
   2237a:	mov    rdi,r8
   2237d:	call   QWORD PTR [rbp+0x0]
   22380:	mov    rdi,QWORD PTR [rbx]
   22383:	mov    QWORD PTR [rdi+0x8],0x0
   2238b:	call   QWORD PTR [rbp+0x0]
   2238e:	mov    QWORD PTR [rbx],0x0
   22395:	add    rsp,0x8
   22399:	pop    rbx
   2239a:	pop    rbp
   2239b:	ret    
   2239c:	nop    DWORD PTR [rax+0x0]
   223a0:	ret    
   223a1:	cs nop WORD PTR [rax+rax*1+0x0]
   223ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000223b0 <global_exit>:
   223b0:	endbr64 
   223b4:	cmp    BYTE PTR [rip+0x55105],0x0        # 774c0 <initialized>
   223bb:	jne    223c0 <global_exit+0x10>
   223bd:	ret    
   223be:	xchg   ax,ax
   223c0:	sub    rsp,0x8
   223c4:	lea    rdi,[rip+0x550fd]        # 774c8 <_mutex>
   223cb:	call   11e70 <wget_thread_mutex_destroy@plt>
   223d0:	mov    BYTE PTR [rip+0x550e9],0x0        # 774c0 <initialized>
   223d7:	add    rsp,0x8
   223db:	ret    
   223dc:	nop    DWORD PTR [rax+0x0]

00000000000223e0 <wget_global_init>:
   223e0:	endbr64 
   223e4:	push   r15
   223e6:	push   r14
   223e8:	mov    r14d,edi
   223eb:	push   r13
   223ed:	push   r12
   223ef:	push   rbp
   223f0:	push   rbx
   223f1:	sub    rsp,0x58
   223f5:	mov    QWORD PTR [rsp+0x30],rdx
   223fa:	mov    QWORD PTR [rsp+0x28],rsi
   223ff:	mov    QWORD PTR [rsp+0x38],rcx
   22404:	mov    QWORD PTR [rsp+0x40],r8
   22409:	mov    QWORD PTR [rsp+0x48],r9
   2240e:	mov    rax,QWORD PTR fs:0x28
   22417:	mov    QWORD PTR [rsp+0x18],rax
   2241c:	xor    eax,eax
   2241e:	call   12940 <global_init>
   22423:	mov    rdi,QWORD PTR [rip+0x5509e]        # 774c8 <_mutex>
   2242a:	call   12040 <wget_thread_mutex_lock@plt>
   2242f:	mov    eax,DWORD PTR [rip+0x5509b]        # 774d0 <global_initialized>
   22435:	lea    edx,[rax+0x1]
   22438:	mov    DWORD PTR [rip+0x55092],edx        # 774d0 <global_initialized>
   2243e:	test   eax,eax
   22440:	jne    229e0 <wget_global_init+0x600>
   22446:	call   10d70 <wget_console_init@plt>
   2244b:	xor    ebp,ebp
   2244d:	call   11770 <wget_random_init@plt>
   22452:	call   115b0 <wget_http_init@plt>
   22457:	lea    rax,[rsp+0x90]
   2245f:	mov    DWORD PTR [rsp],0x8
   22466:	mov    QWORD PTR [rsp+0x8],rax
   2246b:	lea    rax,[rsp+0x20]
   22470:	mov    QWORD PTR [rsp+0x10],rax
   22475:	test   r14d,r14d
   22478:	je     224f5 <wget_global_init+0x115>
   2247a:	lea    r15,[rip+0x2ab8f]        # 4d010 <http_ctype+0x190>
   22481:	lea    r12,[rip+0x55050]        # 774d8 <dns_cache>
   22488:	lea    r13,[rip+0x2aaf1]        # 4cf80 <http_ctype+0x100>
   2248f:	nop
   22490:	lea    eax,[r14-0x3e8]
   22497:	cmp    eax,0x13
   2249a:	ja     22983 <wget_global_init+0x5a3>
   224a0:	movsxd rax,DWORD PTR [r15+rax*4]
   224a4:	add    rax,r15
   224a7:	notrack jmp rax
   224aa:	nop    WORD PTR [rax+rax*1+0x0]
   224b0:	mov    ebx,DWORD PTR [rsp]
   224b3:	cmp    ebx,0x2f
   224b6:	ja     22ba8 <wget_global_init+0x7c8>
   224bc:	mov    eax,ebx
   224be:	add    ebx,0x8
   224c1:	add    rax,QWORD PTR [rsp+0x10]
   224c6:	mov    DWORD PTR [rsp],ebx
   224c9:	mov    rsi,QWORD PTR [rax]
   224cc:	xor    edi,edi
   224ce:	call   111c0 <wget_tcp_set_bind_interface@plt>
   224d3:	cmp    ebx,0x2f
   224d6:	ja     22959 <wget_global_init+0x579>
   224dc:	nop    DWORD PTR [rax+0x0]
   224e0:	mov    eax,ebx
   224e2:	add    rax,QWORD PTR [rsp+0x10]
   224e7:	add    ebx,0x8
   224ea:	mov    r14d,DWORD PTR [rax]
   224ed:	mov    DWORD PTR [rsp],ebx
   224f0:	test   r14d,r14d
   224f3:	jne    22490 <wget_global_init+0xb0>
   224f5:	cmp    BYTE PTR [rip+0x54ff4],0x0        # 774f0 <config+0x10>
   224fc:	je     22547 <wget_global_init+0x167>
   224fe:	cmp    QWORD PTR [rip+0x54fda],0x0        # 774e0 <config>
   22506:	je     22547 <wget_global_init+0x167>
   22508:	xor    edi,edi
   2250a:	call   10c50 <wget_cookie_db_init@plt>
   2250f:	movzx  esi,BYTE PTR [rip+0x54fdb]        # 774f1 <config+0x11>
   22516:	mov    rdi,rax
   22519:	mov    QWORD PTR [rip+0x54fc8],rax        # 774e8 <config+0x8>
   22520:	call   115e0 <wget_cookie_set_keep_session_cookies@plt>
   22525:	mov    rsi,QWORD PTR [rip+0x54fb4]        # 774e0 <config>
   2252c:	mov    rdi,QWORD PTR [rip+0x54fb5]        # 774e8 <config+0x8>
   22533:	call   12230 <wget_cookie_db_load@plt>
   22538:	mov    rdi,QWORD PTR [rip+0x54fa9]        # 774e8 <config+0x8>
   2253f:	mov    rsi,rbp
   22542:	call   11630 <wget_cookie_db_load_psl@plt>
   22547:	call   105b0 <wget_net_init@plt>
   2254c:	mov    rdi,QWORD PTR [rip+0x54f75]        # 774c8 <_mutex>
   22553:	mov    r12d,eax
   22556:	call   117c0 <wget_thread_mutex_unlock@plt>
   2255b:	test   r12d,r12d
   2255e:	je     229b6 <wget_global_init+0x5d6>
   22564:	mov    edx,0x5
   22569:	lea    rsi,[rip+0x2aa48]        # 4cfb8 <http_ctype+0x138>
   22570:	xor    edi,edi
   22572:	call   10f90 <dcgettext@plt>
   22577:	mov    edx,r12d
   2257a:	lea    rsi,[rip+0x2ab9f]        # 4d120 <__func__.4>
   22581:	mov    rdi,rax
   22584:	xor    eax,eax
   22586:	call   10580 <wget_error_printf_exit@plt>
   2258b:	nop    DWORD PTR [rax+rax*1+0x0]
   22590:	mov    ebx,DWORD PTR [rsp]
   22593:	cmp    ebx,0x2f
   22596:	ja     22b90 <wget_global_init+0x7b0>
   2259c:	mov    eax,ebx
   2259e:	add    ebx,0x8
   225a1:	add    rax,QWORD PTR [rsp+0x10]
   225a6:	mov    DWORD PTR [rsp],ebx
   225a9:	mov    ecx,DWORD PTR [rax]
   225ab:	xor    esi,esi
   225ad:	test   ecx,ecx
   225af:	setne  sil
   225b3:	xor    edi,edi
   225b5:	call   12010 <wget_tcp_set_tcp_fastopen@plt>
   225ba:	jmp    22950 <wget_global_init+0x570>
   225bf:	nop
   225c0:	mov    ebx,DWORD PTR [rsp]
   225c3:	cmp    ebx,0x2f
   225c6:	ja     22b78 <wget_global_init+0x798>
   225cc:	mov    eax,ebx
   225ce:	add    ebx,0x8
   225d1:	add    rax,QWORD PTR [rsp+0x10]
   225d6:	mov    DWORD PTR [rsp],ebx
   225d9:	mov    esi,DWORD PTR [rax]
   225db:	xor    edi,edi
   225dd:	call   11da0 <wget_tcp_set_preferred_family@plt>
   225e2:	jmp    22950 <wget_global_init+0x570>
   225e7:	nop    WORD PTR [rax+rax*1+0x0]
   225f0:	mov    ebx,DWORD PTR [rsp]
   225f3:	cmp    ebx,0x2f
   225f6:	ja     22b60 <wget_global_init+0x780>
   225fc:	mov    eax,ebx
   225fe:	add    ebx,0x8
   22601:	add    rax,QWORD PTR [rsp+0x10]
   22606:	mov    DWORD PTR [rsp],ebx
   22609:	mov    esi,DWORD PTR [rax]
   2260b:	xor    edi,edi
   2260d:	call   104d0 <wget_tcp_set_family@plt>
   22612:	jmp    22950 <wget_global_init+0x570>
   22617:	nop    WORD PTR [rax+rax*1+0x0]
   22620:	mov    ebx,DWORD PTR [rsp]
   22623:	cmp    ebx,0x2f
   22626:	ja     22b48 <wget_global_init+0x768>
   2262c:	mov    eax,ebx
   2262e:	add    ebx,0x8
   22631:	add    rax,QWORD PTR [rsp+0x10]
   22636:	mov    DWORD PTR [rsp],ebx
   22639:	mov    rsi,QWORD PTR [rax]
   2263c:	xor    edi,edi
   2263e:	call   11ac0 <wget_tcp_set_bind_address@plt>
   22643:	jmp    22950 <wget_global_init+0x570>
   22648:	nop    DWORD PTR [rax+rax*1+0x0]
   22650:	mov    ebx,DWORD PTR [rsp]
   22653:	cmp    ebx,0x2f
   22656:	ja     22b30 <wget_global_init+0x750>
   2265c:	mov    eax,ebx
   2265e:	add    ebx,0x8
   22661:	add    rax,QWORD PTR [rsp+0x10]
   22666:	mov    DWORD PTR [rsp],ebx
   22669:	mov    eax,DWORD PTR [rax]
   2266b:	test   eax,eax
   2266d:	setne  BYTE PTR [rip+0x54e7d]        # 774f1 <config+0x11>
   22674:	jmp    22950 <wget_global_init+0x570>
   22679:	nop    DWORD PTR [rax+0x0]
   22680:	mov    ebx,DWORD PTR [rsp]
   22683:	mov    BYTE PTR [rip+0x54e66],0x1        # 774f0 <config+0x10>
   2268a:	cmp    ebx,0x2f
   2268d:	ja     22b18 <wget_global_init+0x738>
   22693:	mov    eax,ebx
   22695:	add    ebx,0x8
   22698:	add    rax,QWORD PTR [rsp+0x10]
   2269d:	mov    DWORD PTR [rsp],ebx
   226a0:	mov    rax,QWORD PTR [rax]
   226a3:	mov    QWORD PTR [rip+0x54e36],rax        # 774e0 <config>
   226aa:	jmp    22950 <wget_global_init+0x570>
   226af:	nop
   226b0:	mov    ebx,DWORD PTR [rsp]
   226b3:	cmp    ebx,0x2f
   226b6:	ja     22b00 <wget_global_init+0x720>
   226bc:	mov    eax,ebx
   226be:	add    ebx,0x8
   226c1:	add    rax,QWORD PTR [rsp+0x10]
   226c6:	mov    DWORD PTR [rsp],ebx
   226c9:	mov    edx,DWORD PTR [rax]
   226cb:	test   edx,edx
   226cd:	setne  BYTE PTR [rip+0x54e1c]        # 774f0 <config+0x10>
   226d4:	jmp    22950 <wget_global_init+0x570>
   226d9:	nop    DWORD PTR [rax+0x0]
   226e0:	mov    ebx,DWORD PTR [rsp]
   226e3:	cmp    ebx,0x2f
   226e6:	jbe    22ae8 <wget_global_init+0x708>
   226ec:	mov    rax,QWORD PTR [rsp+0x8]
   226f1:	lea    rdx,[rax+0x8]
   226f5:	mov    QWORD PTR [rsp+0x8],rdx
   226fa:	mov    rbp,QWORD PTR [rax]
   226fd:	mov    BYTE PTR [rip+0x54dec],0x1        # 774f0 <config+0x10>
   22704:	jmp    22950 <wget_global_init+0x570>
   22709:	nop    DWORD PTR [rax+0x0]
   22710:	mov    ebx,DWORD PTR [rsp]
   22713:	cmp    ebx,0x2f
   22716:	ja     22ac8 <wget_global_init+0x6e8>
   2271c:	mov    eax,ebx
   2271e:	add    rax,QWORD PTR [rsp+0x10]
   22723:	add    ebx,0x8
   22726:	mov    edi,DWORD PTR [rax]
   22728:	mov    DWORD PTR [rsp],ebx
   2272b:	test   edi,edi
   2272d:	je     22950 <wget_global_init+0x570>
   22733:	mov    rdi,r12
   22736:	call   12270 <wget_dns_cache_init@plt>
   2273b:	mov    r14d,eax
   2273e:	test   eax,eax
   22740:	jne    22bbb <wget_global_init+0x7db>
   22746:	mov    rsi,QWORD PTR [rip+0x54d8b]        # 774d8 <dns_cache>
   2274d:	xor    edi,edi
   2274f:	call   11640 <wget_dns_set_cache@plt>
   22754:	mov    ebx,DWORD PTR [rsp]
   22757:	jmp    22950 <wget_global_init+0x570>
   2275c:	nop    DWORD PTR [rax+0x0]
   22760:	mov    ebx,DWORD PTR [rsp]
   22763:	cmp    ebx,0x2f
   22766:	ja     22ab0 <wget_global_init+0x6d0>
   2276c:	mov    r14d,ebx
   2276f:	add    ebx,0x8
   22772:	add    r14,QWORD PTR [rsp+0x10]
   22777:	mov    DWORD PTR [rsp],ebx
   2277a:	mov    edi,0x1
   2277f:	call   11620 <wget_get_logger@plt>
   22784:	mov    rsi,QWORD PTR [r14]
   22787:	mov    rdi,rax
   2278a:	call   11850 <wget_logger_set_file@plt>
   2278f:	jmp    22950 <wget_global_init+0x570>
   22794:	nop    DWORD PTR [rax+0x0]
   22798:	mov    ebx,DWORD PTR [rsp]
   2279b:	cmp    ebx,0x2f
   2279e:	ja     22a98 <wget_global_init+0x6b8>
   227a4:	mov    r14d,ebx
   227a7:	add    ebx,0x8
   227aa:	add    r14,QWORD PTR [rsp+0x10]
   227af:	mov    DWORD PTR [rsp],ebx
   227b2:	mov    edi,0x1
   227b7:	call   11620 <wget_get_logger@plt>
   227bc:	mov    rsi,QWORD PTR [r14]
   227bf:	mov    rdi,rax
   227c2:	call   10b60 <wget_logger_set_func@plt>
   227c7:	jmp    22950 <wget_global_init+0x570>
   227cc:	nop    DWORD PTR [rax+0x0]
   227d0:	mov    ebx,DWORD PTR [rsp]
   227d3:	cmp    ebx,0x2f
   227d6:	ja     22a80 <wget_global_init+0x6a0>
   227dc:	mov    r14d,ebx
   227df:	add    ebx,0x8
   227e2:	add    r14,QWORD PTR [rsp+0x10]
   227e7:	mov    DWORD PTR [rsp],ebx
   227ea:	mov    edi,0x1
   227ef:	call   11620 <wget_get_logger@plt>
   227f4:	mov    rsi,QWORD PTR [r14]
   227f7:	mov    rdi,rax
   227fa:	call   12130 <wget_logger_set_stream@plt>
   227ff:	jmp    22950 <wget_global_init+0x570>
   22804:	nop    DWORD PTR [rax+0x0]
   22808:	mov    ebx,DWORD PTR [rsp]
   2280b:	cmp    ebx,0x2f
   2280e:	ja     22a68 <wget_global_init+0x688>
   22814:	mov    r14d,ebx
   22817:	add    ebx,0x8
   2281a:	add    r14,QWORD PTR [rsp+0x10]
   2281f:	mov    DWORD PTR [rsp],ebx
   22822:	mov    edi,0x2
   22827:	call   11620 <wget_get_logger@plt>
   2282c:	mov    rsi,QWORD PTR [r14]
   2282f:	mov    rdi,rax
   22832:	call   11850 <wget_logger_set_file@plt>
   22837:	jmp    22950 <wget_global_init+0x570>
   2283c:	nop    DWORD PTR [rax+0x0]
   22840:	mov    ebx,DWORD PTR [rsp]
   22843:	cmp    ebx,0x2f
   22846:	ja     22a50 <wget_global_init+0x670>
   2284c:	mov    r14d,ebx
   2284f:	add    ebx,0x8
   22852:	add    r14,QWORD PTR [rsp+0x10]
   22857:	mov    DWORD PTR [rsp],ebx
   2285a:	mov    edi,0x2
   2285f:	call   11620 <wget_get_logger@plt>
   22864:	mov    rsi,QWORD PTR [r14]
   22867:	mov    rdi,rax
   2286a:	call   10b60 <wget_logger_set_func@plt>
   2286f:	jmp    22950 <wget_global_init+0x570>
   22874:	nop    DWORD PTR [rax+0x0]
   22878:	mov    ebx,DWORD PTR [rsp]
   2287b:	cmp    ebx,0x2f
   2287e:	ja     22a38 <wget_global_init+0x658>
   22884:	mov    r14d,ebx
   22887:	add    ebx,0x8
   2288a:	add    r14,QWORD PTR [rsp+0x10]
   2288f:	mov    DWORD PTR [rsp],ebx
   22892:	mov    edi,0x2
   22897:	call   11620 <wget_get_logger@plt>
   2289c:	mov    rsi,QWORD PTR [r14]
   2289f:	mov    rdi,rax
   228a2:	call   12130 <wget_logger_set_stream@plt>
   228a7:	jmp    22950 <wget_global_init+0x570>
   228ac:	nop    DWORD PTR [rax+0x0]
   228b0:	mov    ebx,DWORD PTR [rsp]
   228b3:	cmp    ebx,0x2f
   228b6:	ja     22a20 <wget_global_init+0x640>
   228bc:	mov    r14d,ebx
   228bf:	add    ebx,0x8
   228c2:	add    r14,QWORD PTR [rsp+0x10]
   228c7:	mov    DWORD PTR [rsp],ebx
   228ca:	mov    edi,0x3
   228cf:	call   11620 <wget_get_logger@plt>
   228d4:	mov    rsi,QWORD PTR [r14]
   228d7:	mov    rdi,rax
   228da:	call   11850 <wget_logger_set_file@plt>
   228df:	jmp    22950 <wget_global_init+0x570>
   228e1:	nop    DWORD PTR [rax+0x0]
   228e8:	mov    ebx,DWORD PTR [rsp]
   228eb:	cmp    ebx,0x2f
   228ee:	ja     22a08 <wget_global_init+0x628>
   228f4:	mov    r14d,ebx
   228f7:	add    ebx,0x8
   228fa:	add    r14,QWORD PTR [rsp+0x10]
   228ff:	mov    DWORD PTR [rsp],ebx
   22902:	mov    edi,0x3
   22907:	call   11620 <wget_get_logger@plt>
   2290c:	mov    rsi,QWORD PTR [r14]
   2290f:	mov    rdi,rax
   22912:	call   10b60 <wget_logger_set_func@plt>
   22917:	jmp    22950 <wget_global_init+0x570>
   22919:	nop    DWORD PTR [rax+0x0]
   22920:	mov    ebx,DWORD PTR [rsp]
   22923:	cmp    ebx,0x2f
   22926:	ja     229f0 <wget_global_init+0x610>
   2292c:	mov    r14d,ebx
   2292f:	add    ebx,0x8
   22932:	add    r14,QWORD PTR [rsp+0x10]
   22937:	mov    DWORD PTR [rsp],ebx
   2293a:	mov    edi,0x3
   2293f:	call   11620 <wget_get_logger@plt>
   22944:	mov    rsi,QWORD PTR [r14]
   22947:	mov    rdi,rax
   2294a:	call   12130 <wget_logger_set_stream@plt>
   2294f:	nop
   22950:	cmp    ebx,0x2f
   22953:	jbe    224e0 <wget_global_init+0x100>
   22959:	mov    rax,QWORD PTR [rsp+0x8]
   2295e:	mov    r14d,DWORD PTR [rax]
   22961:	lea    rdx,[rax+0x8]
   22965:	mov    QWORD PTR [rsp+0x8],rdx
   2296a:	test   r14d,r14d
   2296d:	je     224f5 <wget_global_init+0x115>
   22973:	lea    eax,[r14-0x3e8]
   2297a:	cmp    eax,0x13
   2297d:	jbe    224a0 <wget_global_init+0xc0>
   22983:	mov    rdi,QWORD PTR [rip+0x54b3e]        # 774c8 <_mutex>
   2298a:	call   117c0 <wget_thread_mutex_unlock@plt>
   2298f:	mov    edx,0x5
   22994:	lea    rsi,[rip+0x2a603]        # 4cf9e <http_ctype+0x11e>
   2299b:	xor    edi,edi
   2299d:	call   10f90 <dcgettext@plt>
   229a2:	mov    edx,r14d
   229a5:	lea    rsi,[rip+0x2a774]        # 4d120 <__func__.4>
   229ac:	mov    rdi,rax
   229af:	xor    eax,eax
   229b1:	call   11ea0 <wget_error_printf@plt>
   229b6:	mov    rax,QWORD PTR [rsp+0x18]
   229bb:	sub    rax,QWORD PTR fs:0x28
   229c4:	jne    22bdf <wget_global_init+0x7ff>
   229ca:	add    rsp,0x58
   229ce:	pop    rbx
   229cf:	pop    rbp
   229d0:	pop    r12
   229d2:	pop    r13
   229d4:	pop    r14
   229d6:	pop    r15
   229d8:	ret    
   229d9:	nop    DWORD PTR [rax+0x0]
   229e0:	mov    rdi,QWORD PTR [rip+0x54ae1]        # 774c8 <_mutex>
   229e7:	call   117c0 <wget_thread_mutex_unlock@plt>
   229ec:	jmp    229b6 <wget_global_init+0x5d6>
   229ee:	xchg   ax,ax
   229f0:	mov    r14,QWORD PTR [rsp+0x8]
   229f5:	lea    rax,[r14+0x8]
   229f9:	mov    QWORD PTR [rsp+0x8],rax
   229fe:	jmp    2293a <wget_global_init+0x55a>
   22a03:	nop    DWORD PTR [rax+rax*1+0x0]
   22a08:	mov    r14,QWORD PTR [rsp+0x8]
   22a0d:	lea    rax,[r14+0x8]
   22a11:	mov    QWORD PTR [rsp+0x8],rax
   22a16:	jmp    22902 <wget_global_init+0x522>
   22a1b:	nop    DWORD PTR [rax+rax*1+0x0]
   22a20:	mov    r14,QWORD PTR [rsp+0x8]
   22a25:	lea    rax,[r14+0x8]
   22a29:	mov    QWORD PTR [rsp+0x8],rax
   22a2e:	jmp    228ca <wget_global_init+0x4ea>
   22a33:	nop    DWORD PTR [rax+rax*1+0x0]
   22a38:	mov    r14,QWORD PTR [rsp+0x8]
   22a3d:	lea    rax,[r14+0x8]
   22a41:	mov    QWORD PTR [rsp+0x8],rax
   22a46:	jmp    22892 <wget_global_init+0x4b2>
   22a4b:	nop    DWORD PTR [rax+rax*1+0x0]
   22a50:	mov    r14,QWORD PTR [rsp+0x8]
   22a55:	lea    rax,[r14+0x8]
   22a59:	mov    QWORD PTR [rsp+0x8],rax
   22a5e:	jmp    2285a <wget_global_init+0x47a>
   22a63:	nop    DWORD PTR [rax+rax*1+0x0]
   22a68:	mov    r14,QWORD PTR [rsp+0x8]
   22a6d:	lea    rax,[r14+0x8]
   22a71:	mov    QWORD PTR [rsp+0x8],rax
   22a76:	jmp    22822 <wget_global_init+0x442>
   22a7b:	nop    DWORD PTR [rax+rax*1+0x0]
   22a80:	mov    r14,QWORD PTR [rsp+0x8]
   22a85:	lea    rax,[r14+0x8]
   22a89:	mov    QWORD PTR [rsp+0x8],rax
   22a8e:	jmp    227ea <wget_global_init+0x40a>
   22a93:	nop    DWORD PTR [rax+rax*1+0x0]
   22a98:	mov    r14,QWORD PTR [rsp+0x8]
   22a9d:	lea    rax,[r14+0x8]
   22aa1:	mov    QWORD PTR [rsp+0x8],rax
   22aa6:	jmp    227b2 <wget_global_init+0x3d2>
   22aab:	nop    DWORD PTR [rax+rax*1+0x0]
   22ab0:	mov    r14,QWORD PTR [rsp+0x8]
   22ab5:	lea    rax,[r14+0x8]
   22ab9:	mov    QWORD PTR [rsp+0x8],rax
   22abe:	jmp    2277a <wget_global_init+0x39a>
   22ac3:	nop    DWORD PTR [rax+rax*1+0x0]
   22ac8:	mov    rdx,QWORD PTR [rsp+0x8]
   22acd:	mov    esi,DWORD PTR [rdx]
   22acf:	lea    rax,[rdx+0x8]
   22ad3:	mov    QWORD PTR [rsp+0x8],rax
   22ad8:	test   esi,esi
   22ada:	je     2295e <wget_global_init+0x57e>
   22ae0:	jmp    22733 <wget_global_init+0x353>
   22ae5:	nop    DWORD PTR [rax]
   22ae8:	mov    eax,ebx
   22aea:	add    ebx,0x8
   22aed:	add    rax,QWORD PTR [rsp+0x10]
   22af2:	mov    DWORD PTR [rsp],ebx
   22af5:	jmp    226fa <wget_global_init+0x31a>
   22afa:	nop    WORD PTR [rax+rax*1+0x0]
   22b00:	mov    rax,QWORD PTR [rsp+0x8]
   22b05:	lea    rdx,[rax+0x8]
   22b09:	mov    QWORD PTR [rsp+0x8],rdx
   22b0e:	jmp    226c9 <wget_global_init+0x2e9>
   22b13:	nop    DWORD PTR [rax+rax*1+0x0]
   22b18:	mov    rax,QWORD PTR [rsp+0x8]
   22b1d:	lea    rdx,[rax+0x8]
   22b21:	mov    QWORD PTR [rsp+0x8],rdx
   22b26:	jmp    226a0 <wget_global_init+0x2c0>
   22b2b:	nop    DWORD PTR [rax+rax*1+0x0]
   22b30:	mov    rax,QWORD PTR [rsp+0x8]
   22b35:	lea    rdx,[rax+0x8]
   22b39:	mov    QWORD PTR [rsp+0x8],rdx
   22b3e:	jmp    22669 <wget_global_init+0x289>
   22b43:	nop    DWORD PTR [rax+rax*1+0x0]
   22b48:	mov    rax,QWORD PTR [rsp+0x8]
   22b4d:	lea    rdx,[rax+0x8]
   22b51:	mov    QWORD PTR [rsp+0x8],rdx
   22b56:	jmp    22639 <wget_global_init+0x259>
   22b5b:	nop    DWORD PTR [rax+rax*1+0x0]
   22b60:	mov    rax,QWORD PTR [rsp+0x8]
   22b65:	lea    rdx,[rax+0x8]
   22b69:	mov    QWORD PTR [rsp+0x8],rdx
   22b6e:	jmp    22609 <wget_global_init+0x229>
   22b73:	nop    DWORD PTR [rax+rax*1+0x0]
   22b78:	mov    rax,QWORD PTR [rsp+0x8]
   22b7d:	lea    rdx,[rax+0x8]
   22b81:	mov    QWORD PTR [rsp+0x8],rdx
   22b86:	jmp    225d9 <wget_global_init+0x1f9>
   22b8b:	nop    DWORD PTR [rax+rax*1+0x0]
   22b90:	mov    rax,QWORD PTR [rsp+0x8]
   22b95:	lea    rdx,[rax+0x8]
   22b99:	mov    QWORD PTR [rsp+0x8],rdx
   22b9e:	jmp    225a9 <wget_global_init+0x1c9>
   22ba3:	nop    DWORD PTR [rax+rax*1+0x0]
   22ba8:	mov    rax,QWORD PTR [rsp+0x8]
   22bad:	lea    rdx,[rax+0x8]
   22bb1:	mov    QWORD PTR [rsp+0x8],rdx
   22bb6:	jmp    224c9 <wget_global_init+0xe9>
   22bbb:	mov    edx,0x5
   22bc0:	mov    rsi,r13
   22bc3:	xor    edi,edi
   22bc5:	call   10f90 <dcgettext@plt>
   22bca:	mov    esi,r14d
   22bcd:	mov    rdi,rax
   22bd0:	xor    eax,eax
   22bd2:	call   11ea0 <wget_error_printf@plt>
   22bd7:	mov    ebx,DWORD PTR [rsp]
   22bda:	jmp    22950 <wget_global_init+0x570>
   22bdf:	call   11760 <__stack_chk_fail@plt>
   22be4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   22bef:	nop

0000000000022bf0 <wget_global_deinit>:
   22bf0:	endbr64 
   22bf4:	mov    edx,DWORD PTR [rip+0x548d6]        # 774d0 <global_initialized>
   22bfa:	push   r12
   22bfc:	xor    r12d,r12d
   22bff:	cmp    edx,0x1
   22c02:	je     22c30 <wget_global_deinit+0x40>
   22c04:	test   edx,edx
   22c06:	jle    22c11 <wget_global_deinit+0x21>
   22c08:	sub    edx,0x1
   22c0b:	mov    DWORD PTR [rip+0x548bf],edx        # 774d0 <global_initialized>
   22c11:	cmp    BYTE PTR [rip+0x548a8],0x0        # 774c0 <initialized>
   22c18:	jne    22ce0 <wget_global_deinit+0xf0>
   22c1e:	test   r12d,r12d
   22c21:	jne    22cb0 <wget_global_deinit+0xc0>
   22c27:	pop    r12
   22c29:	jmp    120a0 <wget_console_deinit@plt>
   22c2e:	xchg   ax,ax
   22c30:	mov    rdi,QWORD PTR [rip+0x548b1]        # 774e8 <config+0x8>
   22c37:	test   rdi,rdi
   22c3a:	je     22c68 <wget_global_deinit+0x78>
   22c3c:	cmp    BYTE PTR [rip+0x548ad],0x0        # 774f0 <config+0x10>
   22c43:	je     22c68 <wget_global_deinit+0x78>
   22c45:	mov    rsi,QWORD PTR [rip+0x54894]        # 774e0 <config>
   22c4c:	test   rsi,rsi
   22c4f:	je     22c68 <wget_global_deinit+0x78>
   22c51:	call   10650 <wget_cookie_db_save@plt>
   22c56:	lea    rdi,[rip+0x5488b]        # 774e8 <config+0x8>
   22c5d:	call   10710 <wget_cookie_db_free@plt>
   22c62:	nop    WORD PTR [rax+rax*1+0x0]
   22c68:	xor    esi,esi
   22c6a:	xor    edi,edi
   22c6c:	call   11ac0 <wget_tcp_set_bind_address@plt>
   22c71:	lea    rdi,[rip+0x54860]        # 774d8 <dns_cache>
   22c78:	call   106a0 <wget_dns_cache_free@plt>
   22c7d:	call   11c70 <wget_net_deinit@plt>
   22c82:	mov    r12d,eax
   22c85:	call   12240 <wget_ssl_deinit@plt>
   22c8a:	xor    esi,esi
   22c8c:	xor    edi,edi
   22c8e:	call   11980 <wget_http_set_http_proxy@plt>
   22c93:	xor    esi,esi
   22c95:	xor    edi,edi
   22c97:	call   11f10 <wget_http_set_https_proxy@plt>
   22c9c:	xor    esi,esi
   22c9e:	xor    edi,edi
   22ca0:	call   11330 <wget_http_set_no_proxy@plt>
   22ca5:	mov    edx,DWORD PTR [rip+0x54825]        # 774d0 <global_initialized>
   22cab:	jmp    22c04 <wget_global_deinit+0x14>
   22cb0:	mov    edx,0x5
   22cb5:	lea    rsi,[rip+0x2a324]        # 4cfe0 <http_ctype+0x160>
   22cbc:	xor    edi,edi
   22cbe:	call   10f90 <dcgettext@plt>
   22cc3:	mov    edx,r12d
   22cc6:	lea    rsi,[rip+0x2a433]        # 4d100 <__func__.3>
   22ccd:	mov    rdi,rax
   22cd0:	xor    eax,eax
   22cd2:	call   11ea0 <wget_error_printf@plt>
   22cd7:	pop    r12
   22cd9:	jmp    120a0 <wget_console_deinit@plt>
   22cde:	xchg   ax,ax
   22ce0:	lea    rdi,[rip+0x547e1]        # 774c8 <_mutex>
   22ce7:	call   11e70 <wget_thread_mutex_destroy@plt>
   22cec:	mov    BYTE PTR [rip+0x547cd],0x0        # 774c0 <initialized>
   22cf3:	jmp    22c1e <wget_global_deinit+0x2e>
   22cf8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000022d00 <wget_global_get_int>:
   22d00:	endbr64 
   22d04:	cmp    edi,0x3f8
   22d0a:	je     22d48 <wget_global_get_int+0x48>
   22d0c:	push   r12
   22d0e:	mov    r12d,edi
   22d11:	jg     22d30 <wget_global_get_int+0x30>
   22d13:	cmp    edi,0x3f3
   22d19:	je     22d80 <wget_global_get_int+0x80>
   22d1b:	cmp    edi,0x3f6
   22d21:	jne    22d50 <wget_global_get_int+0x50>
   22d23:	movzx  eax,BYTE PTR [rip+0x547c7]        # 774f1 <config+0x11>
   22d2a:	pop    r12
   22d2c:	ret    
   22d2d:	nop    DWORD PTR [rax]
   22d30:	cmp    edi,0x3f9
   22d36:	jne    22d50 <wget_global_get_int+0x50>
   22d38:	xor    edi,edi
   22d3a:	pop    r12
   22d3c:	jmp    12510 <wget_tcp_get_preferred_family@plt>
   22d41:	nop    DWORD PTR [rax+0x0]
   22d48:	xor    edi,edi
   22d4a:	jmp    122e0 <wget_tcp_get_family@plt>
   22d4f:	nop
   22d50:	mov    edx,0x5
   22d55:	lea    rsi,[rip+0x2a242]        # 4cf9e <http_ctype+0x11e>
   22d5c:	xor    edi,edi
   22d5e:	call   10f90 <dcgettext@plt>
   22d63:	mov    edx,r12d
   22d66:	lea    rsi,[rip+0x2a373]        # 4d0e0 <__func__.2>
   22d6d:	mov    rdi,rax
   22d70:	xor    eax,eax
   22d72:	call   11ea0 <wget_error_printf@plt>
   22d77:	xor    eax,eax
   22d79:	pop    r12
   22d7b:	ret    
   22d7c:	nop    DWORD PTR [rax+0x0]
   22d80:	movzx  eax,BYTE PTR [rip+0x54769]        # 774f0 <config+0x10>
   22d87:	pop    r12
   22d89:	ret    
   22d8a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000022d90 <wget_global_get_ptr>:
   22d90:	endbr64 
   22d94:	lea    eax,[rdi-0x3e8]
   22d9a:	push   r12
   22d9c:	mov    r12d,edi
   22d9f:	cmp    eax,0xd
   22da2:	ja     22db8 <wget_global_get_ptr+0x28>
   22da4:	lea    rdx,[rip+0x2a2b5]        # 4d060 <http_ctype+0x1e0>
   22dab:	movsxd rax,DWORD PTR [rdx+rax*4]
   22daf:	add    rax,rdx
   22db2:	notrack jmp rax
   22db5:	nop    DWORD PTR [rax]
   22db8:	mov    edx,0x5
   22dbd:	lea    rsi,[rip+0x2a1da]        # 4cf9e <http_ctype+0x11e>
   22dc4:	xor    edi,edi
   22dc6:	call   10f90 <dcgettext@plt>
   22dcb:	mov    edx,r12d
   22dce:	lea    rsi,[rip+0x2a2eb]        # 4d0c0 <__func__.1>
   22dd5:	mov    rdi,rax
   22dd8:	xor    eax,eax
   22dda:	call   11ea0 <wget_error_printf@plt>
   22ddf:	xor    eax,eax
   22de1:	pop    r12
   22de3:	ret    
   22de4:	nop    DWORD PTR [rax+0x0]
   22de8:	mov    edi,0x3
   22ded:	call   11620 <wget_get_logger@plt>
   22df2:	pop    r12
   22df4:	mov    rdi,rax
   22df7:	jmp    11970 <wget_logger_get_stream@plt>
   22dfc:	nop    DWORD PTR [rax+0x0]
   22e00:	mov    edi,0x3
   22e05:	call   11620 <wget_get_logger@plt>
   22e0a:	pop    r12
   22e0c:	mov    rdi,rax
   22e0f:	jmp    10e60 <wget_logger_get_file@plt>
   22e14:	nop    DWORD PTR [rax+0x0]
   22e18:	mov    edi,0x2
   22e1d:	call   11620 <wget_get_logger@plt>
   22e22:	pop    r12
   22e24:	mov    rdi,rax
   22e27:	jmp    11970 <wget_logger_get_stream@plt>
   22e2c:	nop    DWORD PTR [rax+0x0]
   22e30:	mov    edi,0x2
   22e35:	call   11620 <wget_get_logger@plt>
   22e3a:	pop    r12
   22e3c:	mov    rdi,rax
   22e3f:	jmp    10e60 <wget_logger_get_file@plt>
   22e44:	nop    DWORD PTR [rax+0x0]
   22e48:	mov    edi,0x1
   22e4d:	call   11620 <wget_get_logger@plt>
   22e52:	pop    r12
   22e54:	mov    rdi,rax
   22e57:	jmp    11970 <wget_logger_get_stream@plt>
   22e5c:	nop    DWORD PTR [rax+0x0]
   22e60:	mov    edi,0x1
   22e65:	call   11620 <wget_get_logger@plt>
   22e6a:	pop    r12
   22e6c:	mov    rdi,rax
   22e6f:	jmp    10e60 <wget_logger_get_file@plt>
   22e74:	nop    DWORD PTR [rax+0x0]
   22e78:	mov    rax,QWORD PTR [rip+0x54661]        # 774e0 <config>
   22e7f:	pop    r12
   22e81:	ret    
   22e82:	nop    WORD PTR [rax+rax*1+0x0]
   22e88:	mov    rax,QWORD PTR [rip+0x54659]        # 774e8 <config+0x8>
   22e8f:	pop    r12
   22e91:	ret    
   22e92:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   22e9d:	nop    DWORD PTR [rax]

0000000000022ea0 <wget_global_get_func>:
   22ea0:	endbr64 
   22ea4:	push   r12
   22ea6:	cmp    edi,0x3ec
   22eac:	je     22ef0 <wget_global_get_func+0x50>
   22eae:	mov    r12d,edi
   22eb1:	cmp    edi,0x3ef
   22eb7:	je     22f20 <wget_global_get_func+0x80>
   22eb9:	cmp    edi,0x3e9
   22ebf:	je     22f08 <wget_global_get_func+0x68>
   22ec1:	mov    edx,0x5
   22ec6:	lea    rsi,[rip+0x2a0d1]        # 4cf9e <http_ctype+0x11e>
   22ecd:	xor    edi,edi
   22ecf:	call   10f90 <dcgettext@plt>
   22ed4:	mov    edx,r12d
   22ed7:	lea    rsi,[rip+0x2a1c2]        # 4d0a0 <__func__.0>
   22ede:	mov    rdi,rax
   22ee1:	xor    eax,eax
   22ee3:	call   11ea0 <wget_error_printf@plt>
   22ee8:	xor    eax,eax
   22eea:	pop    r12
   22eec:	ret    
   22eed:	nop    DWORD PTR [rax]
   22ef0:	mov    edi,0x2
   22ef5:	call   11620 <wget_get_logger@plt>
   22efa:	pop    r12
   22efc:	mov    rdi,rax
   22eff:	jmp    10f70 <wget_logger_get_func@plt>
   22f04:	nop    DWORD PTR [rax+0x0]
   22f08:	mov    edi,0x3
   22f0d:	call   11620 <wget_get_logger@plt>
   22f12:	pop    r12
   22f14:	mov    rdi,rax
   22f17:	jmp    10f70 <wget_logger_get_func@plt>
   22f1c:	nop    DWORD PTR [rax+0x0]
   22f20:	mov    edi,0x1
   22f25:	call   11620 <wget_get_logger@plt>
   22f2a:	pop    r12
   22f2c:	mov    rdi,rax
   22f2f:	jmp    10f70 <wget_logger_get_func@plt>
   22f34:	cs nop WORD PTR [rax+rax*1+0x0]
   22f3e:	xchg   ax,ax

0000000000022f40 <wget_ip_is_family>:
   22f40:	endbr64 
   22f44:	sub    rsp,0x98
   22f4b:	mov    rax,QWORD PTR fs:0x28
   22f54:	mov    QWORD PTR [rsp+0x88],rax
   22f5c:	xor    eax,eax
   22f5e:	test   rdi,rdi
   22f61:	je     22fd0 <wget_ip_is_family+0x90>
   22f63:	cmp    esi,0x1
   22f66:	je     22fb0 <wget_ip_is_family+0x70>
   22f68:	cmp    esi,0x2
   22f6b:	je     22f90 <wget_ip_is_family+0x50>
   22f6d:	mov    rdx,QWORD PTR [rsp+0x88]
   22f75:	sub    rdx,QWORD PTR fs:0x28
   22f7e:	jne    22fd4 <wget_ip_is_family+0x94>
   22f80:	add    rsp,0x98
   22f87:	ret    
   22f88:	nop    DWORD PTR [rax+rax*1+0x0]
   22f90:	mov    rsi,rdi
   22f93:	mov    rdx,rsp
   22f96:	mov    edi,0xa
   22f9b:	call   12620 <inet_pton@plt>
   22fa0:	test   eax,eax
   22fa2:	setne  al
   22fa5:	jmp    22f6d <wget_ip_is_family+0x2d>
   22fa7:	nop    WORD PTR [rax+rax*1+0x0]
   22fb0:	mov    rsi,rdi
   22fb3:	mov    rdx,rsp
   22fb6:	mov    edi,0x2
   22fbb:	call   12620 <inet_pton@plt>
   22fc0:	test   eax,eax
   22fc2:	setne  al
   22fc5:	jmp    22f6d <wget_ip_is_family+0x2d>
   22fc7:	nop    WORD PTR [rax+rax*1+0x0]
   22fd0:	xor    eax,eax
   22fd2:	jmp    22f6d <wget_ip_is_family+0x2d>
   22fd4:	call   11760 <__stack_chk_fail@plt>
   22fd9:	nop    DWORD PTR [rax+0x0]

0000000000022fe0 <normalize_path>:
   22fe0:	push   r15
   22fe2:	mov    rsi,rdi
   22fe5:	xor    eax,eax
   22fe7:	push   r14
   22fe9:	push   r13
   22feb:	push   r12
   22fed:	mov    r12,rdi
   22ff0:	lea    rdi,[rip+0x2a13a]        # 4d131 <__func__.4+0x11>
   22ff7:	push   rbp
   22ff8:	push   rbx
   22ff9:	mov    rbx,r12
   22ffc:	sub    rsp,0x8
   23000:	call   114b0 <wget_debug_printf@plt>
   23005:	movzx  eax,BYTE PTR [r12]
   2300a:	nop    WORD PTR [rax+rax*1+0x0]
   23010:	cmp    al,0x2f
   23012:	je     23120 <normalize_path+0x140>
   23018:	cmp    al,0x2e
   2301a:	jne    23154 <normalize_path+0x174>
   23020:	movzx  edx,BYTE PTR [rbx+0x1]
   23024:	cmp    dl,0x2f
   23027:	je     23130 <normalize_path+0x150>
   2302d:	cmp    dl,0x2e
   23030:	je     23140 <normalize_path+0x160>
   23036:	test   dl,dl
   23038:	jne    23055 <normalize_path+0x75>
   2303a:	add    rbx,0x1
   2303e:	xor    ecx,ecx
   23040:	mov    eax,edx
   23042:	mov    rbp,r12
   23045:	movabs rdx,0x8000000800000001
   2304f:	bt     rdx,rcx
   23053:	jb     2308c <normalize_path+0xac>
   23055:	mov    rbp,r12
   23058:	lea    r13,[rip+0x2a0de]        # 4d13d <__func__.4+0x1d>
   2305f:	movabs r15,0x8000000800000001
   23069:	lea    r14,[rip+0x2a0d2]        # 4d142 <__func__.4+0x22>
   23070:	cmp    al,0x2f
   23072:	je     230e8 <normalize_path+0x108>
   23074:	mov    BYTE PTR [rbp+0x0],al
   23077:	add    rbx,0x1
   2307b:	movzx  eax,BYTE PTR [rbx]
   2307e:	add    rbp,0x1
   23082:	cmp    al,0x3f
   23084:	ja     23070 <normalize_path+0x90>
   23086:	bt     r15,rax
   2308a:	jae    23070 <normalize_path+0x90>
   2308c:	cmp    rbx,rbp
   2308f:	jne    230ab <normalize_path+0xcb>
   23091:	jmp    23200 <normalize_path+0x220>
   23096:	cs nop WORD PTR [rax+rax*1+0x0]
   230a0:	mov    BYTE PTR [rbp+0x0],al
   230a3:	add    rbp,0x1
   230a7:	add    rbx,0x1
   230ab:	movzx  eax,BYTE PTR [rbx]
   230ae:	test   al,al
   230b0:	jne    230a0 <normalize_path+0xc0>
   230b2:	mov    BYTE PTR [rbp+0x0],0x0
   230b6:	mov    rsi,r12
   230b9:	xor    eax,eax
   230bb:	lea    rdi,[rip+0x2a084]        # 4d146 <__func__.4+0x26>
   230c2:	call   114b0 <wget_debug_printf@plt>
   230c7:	add    rsp,0x8
   230cb:	mov    rax,rbp
   230ce:	pop    rbx
   230cf:	sub    rax,r12
   230d2:	pop    rbp
   230d3:	pop    r12
   230d5:	pop    r13
   230d7:	pop    r14
   230d9:	pop    r15
   230db:	ret    
   230dc:	nop    DWORD PTR [rax+0x0]
   230e0:	mov    rbx,rdx
   230e3:	nop    DWORD PTR [rax+rax*1+0x0]
   230e8:	movzx  eax,BYTE PTR [rbx+0x1]
   230ec:	cmp    al,0x2e
   230ee:	je     23178 <normalize_path+0x198>
   230f4:	lea    rdx,[rbx+0x1]
   230f8:	cmp    r12,rbp
   230fb:	je     231f0 <normalize_path+0x210>
   23101:	cmp    al,0x2f
   23103:	je     230e0 <normalize_path+0x100>
   23105:	mov    BYTE PTR [rbp+0x0],0x2f
   23109:	add    rbp,0x1
   2310d:	movzx  eax,BYTE PTR [rbx+0x1]
   23111:	mov    rbx,rdx
   23114:	jmp    23082 <normalize_path+0xa2>
   23119:	nop    DWORD PTR [rax+0x0]
   23120:	movzx  eax,BYTE PTR [rbx+0x1]
   23124:	add    rbx,0x1
   23128:	jmp    23010 <normalize_path+0x30>
   2312d:	nop    DWORD PTR [rax]
   23130:	movzx  eax,BYTE PTR [rbx+0x2]
   23134:	add    rbx,0x2
   23138:	jmp    23010 <normalize_path+0x30>
   2313d:	nop    DWORD PTR [rax]
   23140:	movzx  eax,BYTE PTR [rbx+0x2]
   23144:	cmp    al,0x2f
   23146:	je     23168 <normalize_path+0x188>
   23148:	test   al,al
   2314a:	jne    23270 <normalize_path+0x290>
   23150:	add    rbx,0x2
   23154:	mov    ecx,eax
   23156:	cmp    al,0x3f
   23158:	ja     23055 <normalize_path+0x75>
   2315e:	mov    edx,eax
   23160:	jmp    23040 <normalize_path+0x60>
   23165:	nop    DWORD PTR [rax]
   23168:	movzx  eax,BYTE PTR [rbx+0x3]
   2316c:	add    rbx,0x3
   23170:	jmp    23010 <normalize_path+0x30>
   23175:	nop    DWORD PTR [rax]
   23178:	mov    edx,0x4
   2317d:	mov    rsi,r13
   23180:	mov    rdi,rbx
   23183:	call   10b10 <strncmp@plt>
   23188:	test   eax,eax
   2318a:	je     23210 <normalize_path+0x230>
   23190:	mov    rsi,r14
   23193:	mov    rdi,rbx
   23196:	call   11c60 <strcmp@plt>
   2319b:	lea    rcx,[rbx+0x3]
   2319f:	test   eax,eax
   231a1:	je     231dd <normalize_path+0x1fd>
   231a3:	movzx  eax,BYTE PTR [rbx]
   231a6:	cmp    eax,0x2f
   231a9:	jne    23240 <normalize_path+0x260>
   231af:	cmp    BYTE PTR [rbx+0x2],0x2f
   231b3:	jne    2327a <normalize_path+0x29a>
   231b9:	movzx  eax,BYTE PTR [rbx+0x2]
   231bd:	add    rbx,0x2
   231c1:	jmp    23082 <normalize_path+0xa2>
   231c6:	cs nop WORD PTR [rax+rax*1+0x0]
   231d0:	cmp    BYTE PTR [rbp-0x1],0x2f
   231d4:	lea    rdx,[rbp-0x1]
   231d8:	je     23254 <normalize_path+0x274>
   231da:	mov    rbp,rdx
   231dd:	cmp    rbp,r12
   231e0:	ja     231d0 <normalize_path+0x1f0>
   231e2:	movzx  eax,BYTE PTR [rbx+0x3]
   231e6:	mov    rbx,rcx
   231e9:	jmp    23082 <normalize_path+0xa2>
   231ee:	xchg   ax,ax
   231f0:	mov    rbx,rdx
   231f3:	jmp    23082 <normalize_path+0xa2>
   231f8:	nop    DWORD PTR [rax+rax*1+0x0]
   23200:	mov    rdi,rbp
   23203:	call   10ab0 <strlen@plt>
   23208:	add    rbp,rax
   2320b:	jmp    230b6 <normalize_path+0xd6>
   23210:	lea    rdx,[rbx+0x3]
   23214:	jmp    2322a <normalize_path+0x24a>
   23216:	cs nop WORD PTR [rax+rax*1+0x0]
   23220:	sub    rbp,0x1
   23224:	cmp    BYTE PTR [rbp+0x0],0x2f
   23228:	je     2322f <normalize_path+0x24f>
   2322a:	cmp    rbp,r12
   2322d:	ja     23220 <normalize_path+0x240>
   2322f:	movzx  eax,BYTE PTR [rbx+0x3]
   23233:	mov    rbx,rdx
   23236:	jmp    23082 <normalize_path+0xa2>
   2323b:	nop    DWORD PTR [rax+rax*1+0x0]
   23240:	mov    BYTE PTR [rbp+0x0],0x2f
   23244:	add    rbx,0x1
   23248:	movzx  eax,BYTE PTR [rbx]
   2324b:	add    rbp,0x1
   2324f:	jmp    23082 <normalize_path+0xa2>
   23254:	movzx  eax,BYTE PTR [rbx+0x3]
   23258:	mov    rbx,rcx
   2325b:	cmp    r12,rdx
   2325e:	jb     23082 <normalize_path+0xa2>
   23264:	mov    rbp,rdx
   23267:	jmp    23082 <normalize_path+0xa2>
   2326c:	nop    DWORD PTR [rax+0x0]
   23270:	mov    eax,0x2e
   23275:	jmp    23055 <normalize_path+0x75>
   2327a:	cmp    eax,0x2f
   2327d:	jne    23240 <normalize_path+0x260>
   2327f:	cmp    BYTE PTR [rbx+0x1],0x2e
   23283:	jne    23240 <normalize_path+0x260>
   23285:	cmp    BYTE PTR [rbx+0x2],0x0
   23289:	jne    23240 <normalize_path+0x260>
   2328b:	lea    rdx,[rbx+0x2]
   2328f:	cmp    r12,rbp
   23292:	jb     232a0 <normalize_path+0x2c0>
   23294:	movzx  eax,BYTE PTR [rbx+0x2]
   23298:	mov    rbx,rdx
   2329b:	jmp    23082 <normalize_path+0xa2>
   232a0:	mov    BYTE PTR [rbp+0x0],0x2f
   232a4:	add    rbp,0x1
   232a8:	movzx  eax,BYTE PTR [rbx+0x2]
   232ac:	mov    rbx,rdx
   232af:	jmp    23082 <normalize_path+0xa2>
   232b4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   232bf:	nop

00000000000232c0 <iri_unescape_inline>:
   232c0:	movzx  eax,BYTE PTR [rdi]
   232c3:	mov    r8,rdi
   232c6:	test   al,al
   232c8:	je     23500 <iri_unescape_inline+0x240>
   232ce:	push   r14
   232d0:	mov    r10d,esi
   232d3:	mov    rcx,rdi
   232d6:	mov    rdx,rdi
   232d9:	movabs r9,0x7e0000007e03ff
   232e3:	push   r13
   232e5:	xor    r11d,r11d
   232e8:	push   r12
   232ea:	push   rbp
   232eb:	push   rbx
   232ec:	lea    rbx,[rip+0x29f2d]        # 4d220 <iri_ctype>
   232f3:	jmp    23319 <iri_unescape_inline+0x59>
   232f5:	nop    DWORD PTR [rax]
   232f8:	cmp    al,0x23
   232fa:	je     23340 <iri_unescape_inline+0x80>
   232fc:	add    rdx,0x1
   23300:	cmp    al,0xd
   23302:	je     2330e <iri_unescape_inline+0x4e>
   23304:	cmp    al,0xa
   23306:	je     2330e <iri_unescape_inline+0x4e>
   23308:	mov    BYTE PTR [rcx],al
   2330a:	add    rcx,0x1
   2330e:	movzx  eax,BYTE PTR [rdx]
   23311:	test   al,al
   23313:	je     23459 <iri_unescape_inline+0x199>
   23319:	cmp    al,0x25
   2331b:	jne    232f8 <iri_unescape_inline+0x38>
   2331d:	movzx  edi,BYTE PTR [rdx+0x1]
   23321:	lea    esi,[rdi-0x30]
   23324:	cmp    sil,0x36
   23328:	ja     23334 <iri_unescape_inline+0x74>
   2332a:	bt     r9,rsi
   2332e:	jb     233f0 <iri_unescape_inline+0x130>
   23334:	add    rdx,0x1
   23338:	jmp    23308 <iri_unescape_inline+0x48>
   2333a:	nop    WORD PTR [rax+rax*1+0x0]
   23340:	movzx  esi,BYTE PTR [rdx+0x1]
   23344:	lea    r12,[rdx+0x2]
   23348:	xor    ebp,ebp
   2334a:	cmp    sil,0x78
   2334e:	je     233af <iri_unescape_inline+0xef>
   23350:	lea    edi,[rsi-0x30]
   23353:	add    rdx,0x1
   23357:	cmp    edi,0x9
   2335a:	ja     23308 <iri_unescape_inline+0x48>
   2335c:	mov    rbp,rdx
   2335f:	xor    edi,edi
   23361:	lea    edi,[rdi+rdi*4]
   23364:	lea    r14,[rbp+0x1]
   23368:	lea    edi,[rsi+rdi*2-0x30]
   2336c:	movzx  esi,BYTE PTR [rbp+0x1]
   23370:	lea    r13d,[rsi-0x30]
   23374:	mov    r12d,esi
   23377:	cmp    r13d,0x9
   2337b:	ja     23470 <iri_unescape_inline+0x1b0>
   23381:	cmp    edi,0x10ffff
   23387:	ja     23470 <iri_unescape_inline+0x1b0>
   2338d:	mov    rbp,r14
   23390:	jmp    23361 <iri_unescape_inline+0xa1>
   23392:	nop    WORD PTR [rax+rax*1+0x0]
   23398:	shl    ebp,0x4
   2339b:	cmp    dil,0x39
   2339f:	ja     234e0 <iri_unescape_inline+0x220>
   233a5:	movzx  esi,sil
   233a9:	add    r12,0x1
   233ad:	or     ebp,esi
   233af:	movzx  edi,BYTE PTR [r12]
   233b4:	lea    esi,[rdi-0x30]
   233b7:	cmp    sil,0x36
   233bb:	ja     23334 <iri_unescape_inline+0x74>
   233c1:	bt     r9,rsi
   233c5:	jb     23398 <iri_unescape_inline+0xd8>
   233c7:	cmp    dil,0x3b
   233cb:	jne    23334 <iri_unescape_inline+0x74>
   233d1:	lea    esi,[rbp-0x1]
   233d4:	cmp    esi,0x7e
   233d7:	ja     23334 <iri_unescape_inline+0x74>
   233dd:	mov    BYTE PTR [rcx],bpl
   233e0:	lea    rdx,[r12+0x1]
   233e5:	add    rcx,0x1
   233e9:	jmp    2330e <iri_unescape_inline+0x4e>
   233ee:	xchg   ax,ax
   233f0:	movzx  r12d,BYTE PTR [rdx+0x2]
   233f5:	lea    ebp,[r12-0x30]
   233fa:	cmp    bpl,0x36
   233fe:	ja     23334 <iri_unescape_inline+0x74>
   23404:	bt     r9,rbp
   23408:	jae    23334 <iri_unescape_inline+0x74>
   2340e:	cmp    dil,0x39
   23412:	ja     234c0 <iri_unescape_inline+0x200>
   23418:	shl    esi,0x4
   2341b:	cmp    r12b,0x39
   2341f:	ja     234a0 <iri_unescape_inline+0x1e0>
   23421:	or     esi,ebp
   23423:	test   r10d,r10d
   23426:	je     23440 <iri_unescape_inline+0x180>
   23428:	movzx  edi,sil
   2342c:	test   BYTE PTR [rbx+rdi*1],0x1
   23430:	jne    23334 <iri_unescape_inline+0x74>
   23436:	cmp    sil,0x25
   2343a:	je     23334 <iri_unescape_inline+0x74>
   23440:	add    rdx,0x3
   23444:	mov    BYTE PTR [rcx],sil
   23447:	mov    r11,r8
   2344a:	add    rcx,0x1
   2344e:	movzx  eax,BYTE PTR [rdx]
   23451:	test   al,al
   23453:	jne    23319 <iri_unescape_inline+0x59>
   23459:	mov    BYTE PTR [rcx],0x0
   2345c:	mov    rax,r11
   2345f:	pop    rbx
   23460:	pop    rbp
   23461:	pop    r12
   23463:	pop    r13
   23465:	pop    r14
   23467:	ret    
   23468:	nop    DWORD PTR [rax+rax*1+0x0]
   23470:	cmp    r12b,0x3b
   23474:	jne    23308 <iri_unescape_inline+0x48>
   2347a:	lea    esi,[rdi-0x1]
   2347d:	cmp    esi,0x7e
   23480:	ja     23308 <iri_unescape_inline+0x48>
   23486:	mov    BYTE PTR [rcx],dil
   23489:	lea    rdx,[rbp+0x2]
   2348d:	add    rcx,0x1
   23491:	jmp    2330e <iri_unescape_inline+0x4e>
   23496:	cs nop WORD PTR [rax+rax*1+0x0]
   234a0:	cmp    r12b,0x46
   234a4:	lea    edi,[r12-0x37]
   234a9:	lea    ebp,[r12-0x57]
   234ae:	cmovbe ebp,edi
   234b1:	or     esi,ebp
   234b3:	test   r10d,r10d
   234b6:	jne    23428 <iri_unescape_inline+0x168>
   234bc:	jmp    23440 <iri_unescape_inline+0x180>
   234be:	xchg   ax,ax
   234c0:	cmp    dil,0x46
   234c4:	lea    r13d,[rdi-0x37]
   234c8:	lea    esi,[rdi-0x57]
   234cb:	cmovbe esi,r13d
   234cf:	shl    esi,0x4
   234d2:	cmp    r12b,0x39
   234d6:	jbe    23421 <iri_unescape_inline+0x161>
   234dc:	jmp    234a0 <iri_unescape_inline+0x1e0>
   234de:	xchg   ax,ax
   234e0:	cmp    dil,0x46
   234e4:	lea    r13d,[rdi-0x37]
   234e8:	lea    esi,[rdi-0x57]
   234eb:	cmovbe esi,r13d
   234ef:	add    r12,0x1
   234f3:	movzx  esi,sil
   234f7:	or     ebp,esi
   234f9:	jmp    233af <iri_unescape_inline+0xef>
   234fe:	xchg   ax,ax
   23500:	xor    r11d,r11d
   23503:	mov    BYTE PTR [rdi],0x0
   23506:	mov    rax,r11
   23509:	ret    
   2350a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000023510 <wget_iri_scheme_get_name>:
   23510:	endbr64 
   23514:	xor    eax,eax
   23516:	cmp    edi,0x1
   23519:	jbe    23520 <wget_iri_scheme_get_name+0x10>
   2351b:	ret    
   2351c:	nop    DWORD PTR [rax+0x0]
   23520:	mov    edi,edi
   23522:	lea    rax,[rip+0x53d57]        # 77280 <schemes>
   23529:	lea    rax,[rax+rdi*8+0x2]
   2352e:	ret    
   2352f:	nop

0000000000023530 <wget_iri_supported>:
   23530:	endbr64 
   23534:	cmp    DWORD PTR [rdi+0x5c],0x1
   23538:	setbe  al
   2353b:	ret    
   2353c:	nop    DWORD PTR [rax+0x0]

0000000000023540 <wget_iri_isgendelim>:
   23540:	endbr64 
   23544:	movzx  edi,dil
   23548:	lea    rax,[rip+0x29cd1]        # 4d220 <iri_ctype>
   2354f:	movzx  eax,BYTE PTR [rax+rdi*1]
   23553:	and    eax,0x1
   23556:	ret    
   23557:	nop    WORD PTR [rax+rax*1+0x0]

0000000000023560 <wget_iri_issubdelim>:
   23560:	endbr64 
   23564:	movzx  edi,dil
   23568:	lea    rax,[rip+0x29cb1]        # 4d220 <iri_ctype>
   2356f:	movzx  eax,BYTE PTR [rax+rdi*1]
   23573:	shr    al,1
   23575:	and    eax,0x1
   23578:	ret    
   23579:	nop    DWORD PTR [rax+0x0]

0000000000023580 <wget_iri_isreserved>:
   23580:	endbr64 
   23584:	push   rbp
   23585:	movsx  ebp,dil
   23589:	mov    edi,ebp
   2358b:	call   12520 <wget_iri_isgendelim@plt>
   23590:	test   al,al
   23592:	jne    235a0 <wget_iri_isreserved+0x20>
   23594:	mov    edi,ebp
   23596:	pop    rbp
   23597:	jmp    10fe0 <wget_iri_issubdelim@plt>
   2359c:	nop    DWORD PTR [rax+0x0]
   235a0:	pop    rbp
   235a1:	ret    
   235a2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   235ad:	nop    DWORD PTR [rax]

00000000000235b0 <wget_iri_isunreserved>:
   235b0:	endbr64 
   235b4:	movzx  edi,dil
   235b8:	lea    rax,[rip+0x29c61]        # 4d220 <iri_ctype>
   235bf:	movzx  eax,BYTE PTR [rax+rdi*1]
   235c3:	shr    al,0x2
   235c6:	and    eax,0x1
   235c9:	ret    
   235ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000000235d0 <wget_iri_unescape_inline>:
   235d0:	endbr64 
   235d4:	xor    esi,esi
   235d6:	jmp    232c0 <iri_unescape_inline>
   235db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000235e0 <wget_iri_unescape_url_inline>:
   235e0:	endbr64 
   235e4:	mov    esi,0x1
   235e9:	jmp    232c0 <iri_unescape_inline>
   235ee:	xchg   ax,ax

00000000000235f0 <wget_iri_free_content>:
   235f0:	endbr64 
   235f4:	test   rdi,rdi
   235f7:	je     236c8 <wget_iri_free_content+0xd8>
   235fd:	push   rbx
   235fe:	movzx  eax,BYTE PTR [rdi+0x60]
   23602:	mov    rbx,rdi
   23605:	test   al,0x2
   23607:	je     23625 <wget_iri_free_content+0x35>
   23609:	mov    rdi,QWORD PTR [rdi]
   2360c:	test   rdi,rdi
   2360f:	je     23625 <wget_iri_free_content+0x35>
   23611:	mov    rax,QWORD PTR [rip+0x529d0]        # 75fe8 <wget_free@@Base-0x1328>
   23618:	call   QWORD PTR [rax]
   2361a:	mov    QWORD PTR [rbx],0x0
   23621:	movzx  eax,BYTE PTR [rbx+0x60]
   23625:	test   al,0x4
   23627:	je     23647 <wget_iri_free_content+0x57>
   23629:	mov    rdi,QWORD PTR [rbx+0x20]
   2362d:	test   rdi,rdi
   23630:	je     23647 <wget_iri_free_content+0x57>
   23632:	mov    rax,QWORD PTR [rip+0x529af]        # 75fe8 <wget_free@@Base-0x1328>
   23639:	call   QWORD PTR [rax]
   2363b:	mov    QWORD PTR [rbx+0x20],0x0
   23643:	movzx  eax,BYTE PTR [rbx+0x60]
   23647:	test   al,0x8
   23649:	je     23669 <wget_iri_free_content+0x79>
   2364b:	mov    rdi,QWORD PTR [rbx+0x28]
   2364f:	test   rdi,rdi
   23652:	je     23669 <wget_iri_free_content+0x79>
   23654:	mov    rax,QWORD PTR [rip+0x5298d]        # 75fe8 <wget_free@@Base-0x1328>
   2365b:	call   QWORD PTR [rax]
   2365d:	mov    QWORD PTR [rbx+0x28],0x0
   23665:	movzx  eax,BYTE PTR [rbx+0x60]
   23669:	test   al,0x10
   2366b:	je     2368b <wget_iri_free_content+0x9b>
   2366d:	mov    rdi,QWORD PTR [rbx+0x30]
   23671:	test   rdi,rdi
   23674:	je     2368b <wget_iri_free_content+0x9b>
   23676:	mov    rax,QWORD PTR [rip+0x5296b]        # 75fe8 <wget_free@@Base-0x1328>
   2367d:	call   QWORD PTR [rax]
   2367f:	mov    QWORD PTR [rbx+0x30],0x0
   23687:	movzx  eax,BYTE PTR [rbx+0x60]
   2368b:	test   al,0x20
   2368d:	je     236a9 <wget_iri_free_content+0xb9>
   2368f:	mov    rdi,QWORD PTR [rbx+0x38]
   23693:	test   rdi,rdi
   23696:	je     236a9 <wget_iri_free_content+0xb9>
   23698:	mov    rax,QWORD PTR [rip+0x52949]        # 75fe8 <wget_free@@Base-0x1328>
   2369f:	call   QWORD PTR [rax]
   236a1:	mov    QWORD PTR [rbx+0x38],0x0
   236a9:	mov    rdi,QWORD PTR [rbx+0x40]
   236ad:	test   rdi,rdi
   236b0:	je     236c3 <wget_iri_free_content+0xd3>
   236b2:	mov    rax,QWORD PTR [rip+0x5292f]        # 75fe8 <wget_free@@Base-0x1328>
   236b9:	call   QWORD PTR [rax]
   236bb:	mov    QWORD PTR [rbx+0x40],0x0
   236c3:	pop    rbx
   236c4:	ret    
   236c5:	nop    DWORD PTR [rax]
   236c8:	ret    
   236c9:	nop    DWORD PTR [rax+0x0]

00000000000236d0 <wget_iri_free>:
   236d0:	endbr64 
   236d4:	test   rdi,rdi
   236d7:	je     23708 <wget_iri_free+0x38>
   236d9:	push   rbx
   236da:	mov    rbx,rdi
   236dd:	mov    rdi,QWORD PTR [rdi]
   236e0:	test   rdi,rdi
   236e3:	je     23702 <wget_iri_free+0x32>
   236e5:	call   11280 <wget_iri_free_content@plt>
   236ea:	mov    rdi,QWORD PTR [rbx]
   236ed:	test   rdi,rdi
   236f0:	je     23702 <wget_iri_free+0x32>
   236f2:	mov    rax,QWORD PTR [rip+0x528ef]        # 75fe8 <wget_free@@Base-0x1328>
   236f9:	call   QWORD PTR [rax]
   236fb:	mov    QWORD PTR [rbx],0x0
   23702:	pop    rbx
   23703:	ret    
   23704:	nop    DWORD PTR [rax+0x0]
   23708:	ret    
   23709:	nop    DWORD PTR [rax+0x0]

0000000000023710 <wget_iri_parse>:
   23710:	endbr64 
   23714:	push   r14
   23716:	push   r13
   23718:	push   r12
   2371a:	push   rbp
   2371b:	push   rbx
   2371c:	sub    rsp,0x10
   23720:	mov    rax,QWORD PTR fs:0x28
   23729:	mov    QWORD PTR [rsp+0x8],rax
   2372e:	xor    eax,eax
   23730:	test   rdi,rdi
   23733:	je     23755 <wget_iri_parse+0x45>
   23735:	mov    rbp,rdi
   23738:	mov    r13,rsi
   2373b:	movzx  ebx,BYTE PTR [rbp+0x0]
   2373f:	cmp    bl,0xd
   23742:	jg     23780 <wget_iri_parse+0x70>
   23744:	cmp    bl,0x8
   23747:	jg     23b30 <wget_iri_parse+0x420>
   2374d:	test   bl,bl
   2374f:	jne    23e99 <wget_iri_parse+0x789>
   23755:	xor    r12d,r12d
   23758:	mov    rax,QWORD PTR [rsp+0x8]
   2375d:	sub    rax,QWORD PTR fs:0x28
   23766:	jne    23e94 <wget_iri_parse+0x784>
   2376c:	add    rsp,0x10
   23770:	mov    rax,r12
   23773:	pop    rbx
   23774:	pop    rbp
   23775:	pop    r12
   23777:	pop    r13
   23779:	pop    r14
   2377b:	ret    
   2377c:	nop    DWORD PTR [rax+0x0]
   23780:	cmp    bl,0x20
   23783:	je     23b30 <wget_iri_parse+0x420>
   23789:	mov    rdi,rbp
   2378c:	call   10ab0 <strlen@plt>
   23791:	mov    r14,rax
   23794:	mov    r12,rax
   23797:	cmp    bl,0x5a
   2379a:	jg     23ae0 <wget_iri_parse+0x3d0>
   237a0:	cmp    bl,0x40
   237a3:	jg     23aeb <wget_iri_parse+0x3db>
   237a9:	mov    rax,QWORD PTR [rip+0x52820]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   237b0:	lea    rdi,[r12+r12*1+0x78]
   237b5:	call   QWORD PTR [rax]
   237b7:	mov    QWORD PTR [rsp],rax
   237bb:	test   rax,rax
   237be:	je     23755 <wget_iri_parse+0x45>
   237c0:	lea    rdi,[rax+0x8]
   237c4:	mov    QWORD PTR [rax],0x0
   237cb:	mov    edx,0x2f3a
   237d0:	mov    rsi,rbp
   237d3:	and    rdi,0xfffffffffffffff8
   237d7:	mov    QWORD PTR [rax+0x60],0x0
   237df:	sub    rax,rdi
   237e2:	lea    ecx,[rax+0x68]
   237e5:	xor    eax,eax
   237e7:	shr    ecx,0x3
   237ea:	rep stos QWORD PTR es:[rdi],rax
   237ed:	mov    rdi,QWORD PTR [rsp]
   237f1:	lea    rax,[rdi+0x68]
   237f5:	mov    WORD PTR [rdi+0x6c],dx
   237f9:	lea    rdx,[r12+0x1]
   237fe:	add    rdi,0x6f
   23802:	mov    DWORD PTR [rdi-0x7],0x70747468
   23809:	mov    BYTE PTR [rdi-0x1],0x2f
   2380d:	mov    QWORD PTR [rdi-0x6f],rax
   23811:	call   11220 <memcpy@plt>
   23816:	mov    rax,QWORD PTR [rsp]
   2381a:	lea    rdx,[r12+0x8]
   2381f:	mov    QWORD PTR [rax+0x50],rdx
   23823:	mov    rsi,QWORD PTR [rax]
   23826:	lea    rdi,[rsi+rdx*1]
   2382a:	call   11220 <memcpy@plt>
   2382f:	movzx  edx,WORD PTR [rip+0x53a4a]        # 77280 <schemes>
   23836:	mov    BYTE PTR [rax+0x4],0x0
   2383a:	lea    r12,[rax+0x7]
   2383e:	mov    rax,QWORD PTR [rsp]
   23842:	mov    DWORD PTR [rax+0x5c],0x0
   23849:	mov    WORD PTR [rax+0x58],dx
   2384d:	jmp    23854 <wget_iri_parse+0x144>
   2384f:	nop
   23850:	add    r12,0x1
   23854:	movzx  ebx,BYTE PTR [r12]
   23859:	cmp    bl,0x2f
   2385c:	je     23850 <wget_iri_parse+0x140>
   2385e:	mov    rbp,r12
   23861:	test   bl,bl
   23863:	jne    2388a <wget_iri_parse+0x17a>
   23865:	jmp    23b53 <wget_iri_parse+0x443>
   2386a:	nop    WORD PTR [rax+rax*1+0x0]
   23870:	cmp    bl,0x23
   23873:	je     23896 <wget_iri_parse+0x186>
   23875:	movzx  ebx,BYTE PTR [rbp+0x0]
   23879:	test   bl,bl
   2387b:	je     23b53 <wget_iri_parse+0x443>
   23881:	cmp    bl,0x2f
   23884:	je     23b4b <wget_iri_parse+0x43b>
   2388a:	mov    rax,rbp
   2388d:	add    rbp,0x1
   23891:	cmp    bl,0x3f
   23894:	jne    23870 <wget_iri_parse+0x160>
   23896:	mov    BYTE PTR [rax],0x0
   23899:	mov    rdi,r12
   2389c:	call   12280 <wget_iri_unescape_inline@plt>
   238a1:	cmp    bl,0x3f
   238a4:	jne    23e20 <wget_iri_parse+0x710>
   238aa:	mov    rax,QWORD PTR [rsp]
   238ae:	mov    QWORD PTR [rax+0x30],rbp
   238b2:	movzx  eax,BYTE PTR [rbp+0x0]
   238b6:	test   al,al
   238b8:	jne    238d4 <wget_iri_parse+0x1c4>
   238ba:	jmp    23900 <wget_iri_parse+0x1f0>
   238bc:	nop    DWORD PTR [rax+0x0]
   238c0:	cmp    al,0x2b
   238c2:	jne    238c8 <wget_iri_parse+0x1b8>
   238c4:	mov    BYTE PTR [rbp+0x0],0x20
   238c8:	movzx  eax,BYTE PTR [rbp+0x1]
   238cc:	add    rbp,0x1
   238d0:	test   al,al
   238d2:	je     23900 <wget_iri_parse+0x1f0>
   238d4:	cmp    al,0x23
   238d6:	jne    238c0 <wget_iri_parse+0x1b0>
   238d8:	test   al,al
   238da:	je     23900 <wget_iri_parse+0x1f0>
   238dc:	mov    BYTE PTR [rbp+0x0],0x0
   238e0:	lea    r14,[rbp+0x1]
   238e4:	mov    rax,QWORD PTR [rsp]
   238e8:	mov    rdi,r14
   238eb:	mov    QWORD PTR [rax+0x38],r14
   238ef:	call   10ab0 <strlen@plt>
   238f4:	lea    rbp,[r14+rax*1]
   238f8:	mov    rdi,r14
   238fb:	call   12280 <wget_iri_unescape_inline@plt>
   23900:	cmp    BYTE PTR [rbp+0x0],0x0
   23904:	jne    23b65 <wget_iri_parse+0x455>
   2390a:	movzx  ebp,BYTE PTR [r12]
   2390f:	test   bpl,bpl
   23912:	je     239b3 <wget_iri_parse+0x2a3>
   23918:	mov    esi,0x40
   2391d:	mov    rdi,r12
   23920:	mov    r14,QWORD PTR [rsp]
   23924:	call   109e0 <strchr@plt>
   23929:	mov    rbx,rax
   2392c:	test   rax,rax
   2392f:	je     23965 <wget_iri_parse+0x255>
   23931:	mov    QWORD PTR [r14+0x10],r12
   23935:	mov    esi,0x3a
   2393a:	mov    rdi,r12
   2393d:	mov    BYTE PTR [rax],0x0
   23940:	call   109e0 <strchr@plt>
   23945:	mov    r14,QWORD PTR [rsp]
   23949:	test   rax,rax
   2394c:	je     2395d <wget_iri_parse+0x24d>
   2394e:	mov    BYTE PTR [rax],0x0
   23951:	mov    r14,QWORD PTR [rsp]
   23955:	add    rax,0x1
   23959:	mov    QWORD PTR [r14+0x18],rax
   2395d:	movzx  ebp,BYTE PTR [rbx+0x1]
   23961:	lea    r12,[rbx+0x1]
   23965:	cmp    bpl,0x5b
   23969:	je     23dc8 <wget_iri_parse+0x6b8>
   2396f:	mov    QWORD PTR [r14+0x20],r12
   23973:	movzx  eax,BYTE PTR [r12]
   23978:	cmp    al,0x3a
   2397a:	je     23d80 <wget_iri_parse+0x670>
   23980:	test   al,al
   23982:	jne    23998 <wget_iri_parse+0x288>
   23984:	jmp    239a6 <wget_iri_parse+0x296>
   23986:	cs nop WORD PTR [rax+rax*1+0x0]
   23990:	cmp    al,0x3a
   23992:	je     23d80 <wget_iri_parse+0x670>
   23998:	movzx  eax,BYTE PTR [r12+0x1]
   2399e:	add    r12,0x1
   239a2:	test   al,al
   239a4:	jne    23990 <wget_iri_parse+0x280>
   239a6:	cmp    al,0x3a
   239a8:	je     23d80 <wget_iri_parse+0x670>
   239ae:	mov    BYTE PTR [r12],0x0
   239b3:	mov    r12,QWORD PTR [rsp]
   239b7:	mov    rdi,QWORD PTR [r12+0x20]
   239bc:	test   rdi,rdi
   239bf:	je     23e60 <wget_iri_parse+0x750>
   239c5:	call   10590 <wget_strtolower@plt>
   239ca:	mov    rax,QWORD PTR [rsp]
   239ce:	mov    rbp,QWORD PTR [rax+0x20]
   239d2:	mov    rdi,rbp
   239d5:	call   12700 <wget_str_needs_encoding@plt>
   239da:	test   al,al
   239dc:	jne    23d50 <wget_iri_parse+0x640>
   239e2:	mov    rdi,rbp
   239e5:	call   114c0 <wget_str_to_ascii@plt>
   239ea:	mov    r12,QWORD PTR [rsp]
   239ee:	mov    rbx,rax
   239f1:	mov    rdi,QWORD PTR [r12+0x20]
   239f6:	cmp    rax,rdi
   239f9:	je     23a29 <wget_iri_parse+0x319>
   239fb:	test   BYTE PTR [r12+0x60],0x4
   23a01:	je     23a1e <wget_iri_parse+0x30e>
   23a03:	test   rdi,rdi
   23a06:	je     23a1e <wget_iri_parse+0x30e>
   23a08:	mov    rax,QWORD PTR [rip+0x525d9]        # 75fe8 <wget_free@@Base-0x1328>
   23a0f:	call   QWORD PTR [rax]
   23a11:	mov    r12,QWORD PTR [rsp]
   23a15:	mov    QWORD PTR [r12+0x20],0x0
   23a1e:	or     BYTE PTR [r12+0x60],0x4
   23a24:	mov    QWORD PTR [r12+0x20],rbx
   23a29:	mov    esi,0x1
   23a2e:	mov    rdi,rbx
   23a31:	call   12480 <wget_ip_is_family@plt>
   23a36:	test   al,al
   23a38:	jne    23b40 <wget_iri_parse+0x430>
   23a3e:	mov    esi,0x2
   23a43:	mov    rdi,rbx
   23a46:	call   12480 <wget_ip_is_family@plt>
   23a4b:	test   al,al
   23a4d:	jne    23b40 <wget_iri_parse+0x430>
   23a53:	test   rbx,rbx
   23a56:	je     23e60 <wget_iri_parse+0x750>
   23a5c:	mov    rbp,QWORD PTR [r12+0x28]
   23a61:	test   rbp,rbp
   23a64:	je     23a76 <wget_iri_parse+0x366>
   23a66:	mov    rdi,rbp
   23a69:	call   12700 <wget_str_needs_encoding@plt>
   23a6e:	test   al,al
   23a70:	jne    23d20 <wget_iri_parse+0x610>
   23a76:	mov    rbp,QWORD PTR [r12+0x30]
   23a7b:	test   rbp,rbp
   23a7e:	je     23a90 <wget_iri_parse+0x380>
   23a80:	mov    rdi,rbp
   23a83:	call   12700 <wget_str_needs_encoding@plt>
   23a88:	test   al,al
   23a8a:	jne    23cf8 <wget_iri_parse+0x5e8>
   23a90:	mov    rbp,QWORD PTR [r12+0x38]
   23a95:	test   rbp,rbp
   23a98:	je     23758 <wget_iri_parse+0x48>
   23a9e:	mov    rdi,rbp
   23aa1:	call   12700 <wget_str_needs_encoding@plt>
   23aa6:	test   al,al
   23aa8:	je     23758 <wget_iri_parse+0x48>
   23aae:	mov    rsi,r13
   23ab1:	mov    rdi,rbp
   23ab4:	call   11b80 <wget_str_to_utf8@plt>
   23ab9:	mov    r12,QWORD PTR [rsp]
   23abd:	test   rax,rax
   23ac0:	je     23758 <wget_iri_parse+0x48>
   23ac6:	or     BYTE PTR [r12+0x60],0x20
   23acc:	mov    QWORD PTR [r12+0x38],rax
   23ad1:	jmp    23758 <wget_iri_parse+0x48>
   23ad6:	cs nop WORD PTR [rax+rax*1+0x0]
   23ae0:	lea    eax,[rbx-0x61]
   23ae3:	cmp    al,0x19
   23ae5:	ja     237a9 <wget_iri_parse+0x99>
   23aeb:	mov    rax,rbp
   23aee:	jmp    23b20 <wget_iri_parse+0x410>
   23af0:	cmp    bl,0x40
   23af3:	jg     23b10 <wget_iri_parse+0x400>
   23af5:	lea    ecx,[rbx-0x30]
   23af8:	cmp    cl,0x9
   23afb:	jbe    23b10 <wget_iri_parse+0x400>
   23afd:	lea    ecx,[rbx-0x2d]
   23b00:	cmp    cl,0x1
   23b03:	jbe    23b10 <wget_iri_parse+0x400>
   23b05:	cmp    bl,0x2b
   23b08:	jne    23b80 <wget_iri_parse+0x470>
   23b0a:	nop    WORD PTR [rax+rax*1+0x0]
   23b10:	movzx  ebx,BYTE PTR [rax+0x1]
   23b14:	add    rax,0x1
   23b18:	test   bl,bl
   23b1a:	je     237a9 <wget_iri_parse+0x99>
   23b20:	cmp    bl,0x5a
   23b23:	jle    23af0 <wget_iri_parse+0x3e0>
   23b25:	lea    ecx,[rbx-0x61]
   23b28:	cmp    cl,0x19
   23b2b:	ja     23afd <wget_iri_parse+0x3ed>
   23b2d:	jmp    23b10 <wget_iri_parse+0x400>
   23b2f:	nop
   23b30:	add    rbp,0x1
   23b34:	jmp    2373b <wget_iri_parse+0x2b>
   23b39:	nop    DWORD PTR [rax+0x0]
   23b40:	or     BYTE PTR [r12+0x60],0x40
   23b46:	jmp    23a53 <wget_iri_parse+0x343>
   23b4b:	test   bl,bl
   23b4d:	jne    23c78 <wget_iri_parse+0x568>
   23b53:	mov    rdi,r12
   23b56:	call   12280 <wget_iri_unescape_inline@plt>
   23b5b:	cmp    BYTE PTR [rbp+0x0],0x0
   23b5f:	je     2390a <wget_iri_parse+0x1fa>
   23b65:	mov    rsi,rbp
   23b68:	lea    rdi,[rip+0x295fc]        # 4d16b <__func__.4+0x4b>
   23b6f:	xor    eax,eax
   23b71:	call   114b0 <wget_debug_printf@plt>
   23b76:	jmp    2390a <wget_iri_parse+0x1fa>
   23b7b:	nop    DWORD PTR [rax+rax*1+0x0]
   23b80:	cmp    bl,0x3a
   23b83:	jne    237a9 <wget_iri_parse+0x99>
   23b89:	movsx  eax,BYTE PTR [rax+0x1]
   23b8d:	sub    eax,0x30
   23b90:	cmp    eax,0x9
   23b93:	jbe    237a9 <wget_iri_parse+0x99>
   23b99:	mov    rax,QWORD PTR [rip+0x52430]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   23ba0:	lea    rdi,[r14+r14*1+0x6a]
   23ba5:	call   QWORD PTR [rax]
   23ba7:	mov    QWORD PTR [rsp],rax
   23bab:	test   rax,rax
   23bae:	je     23755 <wget_iri_parse+0x45>
   23bb4:	lea    rdi,[rax+0x8]
   23bb8:	mov    QWORD PTR [rax],0x0
   23bbf:	add    r14,0x1
   23bc3:	mov    rsi,rbp
   23bc6:	and    rdi,0xfffffffffffffff8
   23bca:	mov    QWORD PTR [rax+0x60],0x0
   23bd2:	mov    rdx,r14
   23bd5:	sub    rax,rdi
   23bd8:	lea    ecx,[rax+0x68]
   23bdb:	xor    eax,eax
   23bdd:	shr    ecx,0x3
   23be0:	rep stos QWORD PTR es:[rdi],rax
   23be3:	mov    rbx,QWORD PTR [rsp]
   23be7:	mov    QWORD PTR [rbx+0x50],r14
   23beb:	lea    rdi,[rbx+0x68]
   23bef:	call   11220 <memcpy@plt>
   23bf4:	mov    rdx,r14
   23bf7:	mov    rsi,rbp
   23bfa:	mov    QWORD PTR [rbx],rax
   23bfd:	lea    rdi,[rax+r14*1]
   23c01:	call   11220 <memcpy@plt>
   23c06:	mov    esi,0x3a
   23c0b:	mov    rdi,rax
   23c0e:	mov    r14,rax
   23c11:	call   109e0 <strchr@plt>
   23c16:	mov    rdi,r14
   23c19:	mov    BYTE PTR [rax],0x0
   23c1c:	mov    r12,rax
   23c1f:	call   12280 <wget_iri_unescape_inline@plt>
   23c24:	mov    rdi,r14
   23c27:	call   10590 <wget_strtolower@plt>
   23c2c:	mov    rsi,r14
   23c2f:	lea    rdi,[rip+0x5364c]        # 77282 <schemes+0x2>
   23c36:	call   11c60 <strcmp@plt>
   23c3b:	test   eax,eax
   23c3d:	je     23e31 <wget_iri_parse+0x721>
   23c43:	mov    rsi,r14
   23c46:	lea    rdi,[rip+0x5363d]        # 7728a <schemes+0xa>
   23c4d:	call   11c60 <strcmp@plt>
   23c52:	test   eax,eax
   23c54:	je     23e52 <wget_iri_parse+0x742>
   23c5a:	mov    rsi,rbp
   23c5d:	lea    rdi,[rip+0x294eb]        # 4d14f <__func__.4+0x2f>
   23c64:	xor    eax,eax
   23c66:	call   114b0 <wget_debug_printf@plt>
   23c6b:	mov    rdi,rsp
   23c6e:	call   11bc0 <wget_iri_free@plt>
   23c73:	jmp    23755 <wget_iri_parse+0x45>
   23c78:	mov    BYTE PTR [rbp+0x0],0x0
   23c7c:	mov    rdi,r12
   23c7f:	lea    r14,[rax+0x2]
   23c83:	call   12280 <wget_iri_unescape_inline@plt>
   23c88:	cmp    bl,0x2f
   23c8b:	jne    23eb2 <wget_iri_parse+0x7a2>
   23c91:	mov    rax,QWORD PTR [rsp]
   23c95:	mov    QWORD PTR [rax+0x28],r14
   23c99:	movzx  ebx,BYTE PTR [rbp+0x1]
   23c9d:	cmp    bl,0x3f
   23ca0:	je     23e03 <wget_iri_parse+0x6f3>
   23ca6:	mov    rbp,r14
   23ca9:	test   bl,bl
   23cab:	jne    23ccd <wget_iri_parse+0x5bd>
   23cad:	jmp    23e03 <wget_iri_parse+0x6f3>
   23cb2:	nop    WORD PTR [rax+rax*1+0x0]
   23cb8:	movzx  ebx,BYTE PTR [rbp+0x0]
   23cbc:	test   bl,bl
   23cbe:	je     238f8 <wget_iri_parse+0x1e8>
   23cc4:	cmp    bl,0x3f
   23cc7:	je     23e06 <wget_iri_parse+0x6f6>
   23ccd:	mov    rax,rbp
   23cd0:	add    rbp,0x1
   23cd4:	cmp    bl,0x23
   23cd7:	jne    23cb8 <wget_iri_parse+0x5a8>
   23cd9:	lea    rbp,[rax+0x1]
   23cdd:	mov    BYTE PTR [rax],0x0
   23ce0:	mov    rax,QWORD PTR [rsp]
   23ce4:	mov    rdi,QWORD PTR [rax+0x28]
   23ce8:	call   12280 <wget_iri_unescape_inline@plt>
   23ced:	jmp    238a1 <wget_iri_parse+0x191>
   23cf2:	nop    WORD PTR [rax+rax*1+0x0]
   23cf8:	mov    rsi,r13
   23cfb:	mov    rdi,rbp
   23cfe:	call   11b80 <wget_str_to_utf8@plt>
   23d03:	mov    r12,QWORD PTR [rsp]
   23d07:	test   rax,rax
   23d0a:	je     23a90 <wget_iri_parse+0x380>
   23d10:	or     BYTE PTR [r12+0x60],0x10
   23d16:	mov    QWORD PTR [r12+0x30],rax
   23d1b:	jmp    23a90 <wget_iri_parse+0x380>
   23d20:	mov    rsi,r13
   23d23:	mov    rdi,rbp
   23d26:	call   11b80 <wget_str_to_utf8@plt>
   23d2b:	mov    r12,QWORD PTR [rsp]
   23d2f:	test   rax,rax
   23d32:	je     23a76 <wget_iri_parse+0x366>
   23d38:	or     BYTE PTR [r12+0x60],0x8
   23d3e:	mov    QWORD PTR [r12+0x28],rax
   23d43:	jmp    23a76 <wget_iri_parse+0x366>
   23d48:	nop    DWORD PTR [rax+rax*1+0x0]
   23d50:	mov    rdi,rbp
   23d53:	mov    rsi,r13
   23d56:	call   11b80 <wget_str_to_utf8@plt>
   23d5b:	mov    rbp,rax
   23d5e:	mov    rax,QWORD PTR [rsp]
   23d62:	test   rbp,rbp
   23d65:	je     23ea9 <wget_iri_parse+0x799>
   23d6b:	or     BYTE PTR [rax+0x60],0x4
   23d6f:	mov    QWORD PTR [rax+0x20],rbp
   23d73:	jmp    239e2 <wget_iri_parse+0x2d2>
   23d78:	nop    DWORD PTR [rax+rax*1+0x0]
   23d80:	movsx  eax,BYTE PTR [r12+0x1]
   23d86:	sub    eax,0x30
   23d89:	cmp    eax,0x9
   23d8c:	ja     239ae <wget_iri_parse+0x29e>
   23d92:	mov    edx,0xa
   23d97:	lea    rdi,[r12+0x1]
   23d9c:	xor    esi,esi
   23d9e:	call   11c90 <strtol@plt>
   23da3:	lea    edx,[rax-0x1]
   23da6:	cmp    edx,0xfffe
   23dac:	ja     239ae <wget_iri_parse+0x29e>
   23db2:	mov    rdx,QWORD PTR [rsp]
   23db6:	or     BYTE PTR [rdx+0x60],0x1
   23dba:	mov    WORD PTR [rdx+0x58],ax
   23dbe:	jmp    239ae <wget_iri_parse+0x29e>
   23dc3:	nop    DWORD PTR [rax+rax*1+0x0]
   23dc8:	mov    esi,0x5d
   23dcd:	mov    rdi,r12
   23dd0:	call   11740 <strrchr@plt>
   23dd5:	lea    rdx,[r12+0x1]
   23dda:	mov    QWORD PTR [r14+0x20],rdx
   23dde:	test   rax,rax
   23de1:	je     23df3 <wget_iri_parse+0x6e3>
   23de3:	mov    BYTE PTR [rax],0x0
   23de6:	lea    r12,[rax+0x1]
   23dea:	movzx  eax,BYTE PTR [rax+0x1]
   23dee:	jmp    239a6 <wget_iri_parse+0x296>
   23df3:	mov    rdi,r12
   23df6:	call   10ab0 <strlen@plt>
   23dfb:	add    r12,rax
   23dfe:	jmp    239ae <wget_iri_parse+0x29e>
   23e03:	mov    rbp,r14
   23e06:	test   bl,bl
   23e08:	je     238f8 <wget_iri_parse+0x1e8>
   23e0e:	mov    rax,rbp
   23e11:	jmp    23cd9 <wget_iri_parse+0x5c9>
   23e16:	cs nop WORD PTR [rax+rax*1+0x0]
   23e20:	cmp    bl,0x23
   23e23:	jne    23900 <wget_iri_parse+0x1f0>
   23e29:	mov    r14,rbp
   23e2c:	jmp    238e4 <wget_iri_parse+0x1d4>
   23e31:	xor    eax,eax
   23e33:	mov    rdx,QWORD PTR [rsp]
   23e37:	lea    rcx,[rip+0x53442]        # 77280 <schemes>
   23e3e:	add    r12,0x1
   23e42:	mov    DWORD PTR [rdx+0x5c],eax
   23e45:	movzx  eax,WORD PTR [rcx+rax*8]
   23e49:	mov    WORD PTR [rdx+0x58],ax
   23e4d:	jmp    23854 <wget_iri_parse+0x144>
   23e52:	mov    eax,0x1
   23e57:	jmp    23e33 <wget_iri_parse+0x723>
   23e59:	nop    DWORD PTR [rax+0x0]
   23e60:	mov    rbp,QWORD PTR [r12]
   23e64:	mov    edx,0x5
   23e69:	lea    rsi,[rip+0x29370]        # 4d1e0 <__func__.4+0xc0>
   23e70:	xor    edi,edi
   23e72:	call   10f90 <dcgettext@plt>
   23e77:	xor    r12d,r12d
   23e7a:	mov    rdi,rax
   23e7d:	mov    rsi,rbp
   23e80:	xor    eax,eax
   23e82:	call   11ea0 <wget_error_printf@plt>
   23e87:	mov    rdi,rsp
   23e8a:	call   11bc0 <wget_iri_free@plt>
   23e8f:	jmp    23758 <wget_iri_parse+0x48>
   23e94:	call   11760 <__stack_chk_fail@plt>
   23e99:	mov    rdi,rbp
   23e9c:	call   10ab0 <strlen@plt>
   23ea1:	mov    r12,rax
   23ea4:	jmp    237a9 <wget_iri_parse+0x99>
   23ea9:	mov    rbp,QWORD PTR [rax+0x20]
   23ead:	jmp    239e2 <wget_iri_parse+0x2d2>
   23eb2:	mov    rbp,r14
   23eb5:	jmp    238a1 <wget_iri_parse+0x191>
   23eba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000023ec0 <wget_iri_clone>:
   23ec0:	endbr64 
   23ec4:	push   r12
   23ec6:	push   rbp
   23ec7:	push   rbx
   23ec8:	test   rdi,rdi
   23ecb:	je     24070 <wget_iri_clone+0x1b0>
   23ed1:	mov    rbx,rdi
   23ed4:	mov    rdi,QWORD PTR [rdi]
   23ed7:	test   rdi,rdi
   23eda:	je     24070 <wget_iri_clone+0x1b0>
   23ee0:	call   10ab0 <strlen@plt>
   23ee5:	mov    rbp,rax
   23ee8:	mov    rax,QWORD PTR [rbx+0x50]
   23eec:	lea    rdi,[rbp+rax*1+0x69]
   23ef1:	mov    rax,QWORD PTR [rip+0x520d8]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   23ef8:	call   QWORD PTR [rax]
   23efa:	mov    r12,rax
   23efd:	test   rax,rax
   23f00:	je     24070 <wget_iri_clone+0x1b0>
   23f06:	movdqu xmm0,XMMWORD PTR [rbx]
   23f0a:	lea    rdi,[r12+0x68]
   23f0f:	movups XMMWORD PTR [rax],xmm0
   23f12:	movdqu xmm1,XMMWORD PTR [rbx+0x10]
   23f17:	movups XMMWORD PTR [rax+0x10],xmm1
   23f1b:	movdqu xmm2,XMMWORD PTR [rbx+0x20]
   23f20:	movups XMMWORD PTR [rax+0x20],xmm2
   23f24:	movdqu xmm3,XMMWORD PTR [rbx+0x30]
   23f29:	movups XMMWORD PTR [rax+0x30],xmm3
   23f2d:	movdqu xmm4,XMMWORD PTR [rbx+0x40]
   23f32:	movups XMMWORD PTR [rax+0x40],xmm4
   23f36:	movdqu xmm5,XMMWORD PTR [rbx+0x50]
   23f3b:	movups XMMWORD PTR [rax+0x50],xmm5
   23f3f:	mov    rax,QWORD PTR [rbx+0x60]
   23f43:	mov    QWORD PTR [r12+0x60],rax
   23f48:	mov    rax,QWORD PTR [rbx+0x50]
   23f4c:	mov    rsi,QWORD PTR [rbx]
   23f4f:	lea    rdx,[rbp+rax*1+0x1]
   23f54:	call   11220 <memcpy@plt>
   23f59:	and    BYTE PTR [r12+0x60],0xfd
   23f5f:	mov    rdi,QWORD PTR [rbx+0x40]
   23f63:	mov    QWORD PTR [r12],rax
   23f67:	call   127b0 <wget_strdup@plt>
   23f6c:	movzx  edx,BYTE PTR [rbx+0x60]
   23f70:	mov    QWORD PTR [r12+0x40],rax
   23f75:	test   dl,0x4
   23f78:	jne    24050 <wget_iri_clone+0x190>
   23f7e:	mov    rax,QWORD PTR [rbx+0x20]
   23f82:	mov    rcx,rax
   23f85:	sub    rcx,rbx
   23f88:	add    rcx,r12
   23f8b:	test   rax,rax
   23f8e:	cmovne rax,rcx
   23f92:	mov    QWORD PTR [r12+0x20],rax
   23f97:	mov    rax,QWORD PTR [rbx+0x8]
   23f9b:	mov    rdi,QWORD PTR [rbx+0x28]
   23f9f:	mov    rcx,rax
   23fa2:	sub    rcx,rbx
   23fa5:	add    rcx,r12
   23fa8:	test   rax,rax
   23fab:	cmovne rax,rcx
   23faf:	mov    QWORD PTR [r12+0x8],rax
   23fb4:	mov    rax,QWORD PTR [rbx+0x10]
   23fb8:	mov    rcx,rax
   23fbb:	sub    rcx,rbx
   23fbe:	add    rcx,r12
   23fc1:	test   rax,rax
   23fc4:	cmovne rax,rcx
   23fc8:	mov    QWORD PTR [r12+0x10],rax
   23fcd:	mov    rax,QWORD PTR [rbx+0x18]
   23fd1:	mov    rcx,rax
   23fd4:	sub    rcx,rbx
   23fd7:	add    rcx,r12
   23fda:	test   rax,rax
   23fdd:	cmovne rax,rcx
   23fe1:	mov    QWORD PTR [r12+0x18],rax
   23fe6:	test   dl,0x8
   23fe9:	jne    240b0 <wget_iri_clone+0x1f0>
   23fef:	mov    rax,rdi
   23ff2:	sub    rax,rbx
   23ff5:	add    rax,r12
   23ff8:	test   rdi,rdi
   23ffb:	cmovne rdi,rax
   23fff:	mov    QWORD PTR [r12+0x28],rdi
   24004:	mov    rdi,QWORD PTR [rbx+0x30]
   24008:	test   dl,0x10
   2400b:	jne    24098 <wget_iri_clone+0x1d8>
   24011:	mov    rax,rdi
   24014:	sub    rax,rbx
   24017:	add    rax,r12
   2401a:	test   rdi,rdi
   2401d:	cmovne rdi,rax
   24021:	mov    QWORD PTR [r12+0x30],rdi
   24026:	and    edx,0x20
   24029:	mov    rdi,QWORD PTR [rbx+0x38]
   2402d:	jne    24080 <wget_iri_clone+0x1c0>
   2402f:	mov    rax,rdi
   24032:	sub    rax,rbx
   24035:	add    rax,r12
   24038:	test   rdi,rdi
   2403b:	cmovne rdi,rax
   2403f:	mov    rax,r12
   24042:	mov    QWORD PTR [r12+0x38],rdi
   24047:	pop    rbx
   24048:	pop    rbp
   24049:	pop    r12
   2404b:	ret    
   2404c:	nop    DWORD PTR [rax+0x0]
   24050:	mov    rdi,QWORD PTR [rbx+0x20]
   24054:	call   127b0 <wget_strdup@plt>
   24059:	movzx  edx,BYTE PTR [rbx+0x60]
   2405d:	mov    QWORD PTR [r12+0x20],rax
   24062:	jmp    23f97 <wget_iri_clone+0xd7>
   24067:	nop    WORD PTR [rax+rax*1+0x0]
   24070:	xor    r12d,r12d
   24073:	pop    rbx
   24074:	pop    rbp
   24075:	mov    rax,r12
   24078:	pop    r12
   2407a:	ret    
   2407b:	nop    DWORD PTR [rax+rax*1+0x0]
   24080:	call   127b0 <wget_strdup@plt>
   24085:	mov    QWORD PTR [r12+0x38],rax
   2408a:	mov    rax,r12
   2408d:	pop    rbx
   2408e:	pop    rbp
   2408f:	pop    r12
   24091:	ret    
   24092:	nop    WORD PTR [rax+rax*1+0x0]
   24098:	call   127b0 <wget_strdup@plt>
   2409d:	movzx  edx,BYTE PTR [rbx+0x60]
   240a1:	mov    QWORD PTR [r12+0x30],rax
   240a6:	jmp    24026 <wget_iri_clone+0x166>
   240ab:	nop    DWORD PTR [rax+rax*1+0x0]
   240b0:	call   127b0 <wget_strdup@plt>
   240b5:	movzx  edx,BYTE PTR [rbx+0x60]
   240b9:	mov    QWORD PTR [r12+0x28],rax
   240be:	jmp    24004 <wget_iri_clone+0x144>
   240c3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   240ce:	xchg   ax,ax

00000000000240d0 <wget_iri_get_connection_part>:
   240d0:	endbr64 
   240d4:	push   rbx
   240d5:	mov    rbx,rsi
   240d8:	test   rdi,rdi
   240db:	je     2410c <wget_iri_get_connection_part+0x3c>
   240dd:	mov    edx,DWORD PTR [rdi+0x5c]
   240e0:	lea    rax,[rip+0x53199]        # 77280 <schemes>
   240e7:	mov    rcx,QWORD PTR [rdi+0x20]
   240eb:	lea    rdx,[rax+rdx*8+0x2]
   240f0:	test   BYTE PTR [rdi+0x60],0x1
   240f4:	je     24118 <wget_iri_get_connection_part+0x48>
   240f6:	movzx  r8d,WORD PTR [rdi+0x58]
   240fb:	lea    rsi,[rip+0x2907d]        # 4d17f <__func__.4+0x5f>
   24102:	mov    rdi,rbx
   24105:	xor    eax,eax
   24107:	call   11880 <wget_buffer_printf_append@plt>
   2410c:	mov    rax,QWORD PTR [rbx]
   2410f:	pop    rbx
   24110:	ret    
   24111:	nop    DWORD PTR [rax+0x0]
   24118:	mov    rdi,rbx
   2411b:	lea    rsi,[rip+0x29069]        # 4d18b <__func__.4+0x6b>
   24122:	xor    eax,eax
   24124:	call   11880 <wget_buffer_printf_append@plt>
   24129:	mov    rax,QWORD PTR [rbx]
   2412c:	pop    rbx
   2412d:	ret    
   2412e:	xchg   ax,ax

0000000000024130 <wget_iri_relative_to_abs>:
   24130:	endbr64 
   24134:	push   r15
   24136:	push   r14
   24138:	push   r13
   2413a:	push   r12
   2413c:	push   rbp
   2413d:	push   rbx
   2413e:	sub    rsp,0x1000
   24145:	or     QWORD PTR [rsp],0x0
   2414a:	sub    rsp,0x28
   2414e:	mov    rax,QWORD PTR fs:0x28
   24157:	mov    QWORD PTR [rsp+0x1018],rax
   2415f:	xor    eax,eax
   24161:	mov    r12,rdx
   24164:	mov    rbp,rdi
   24167:	mov    r14,rsi
   2416a:	mov    rdx,rsi
   2416d:	lea    rdi,[rip+0x2901f]        # 4d193 <__func__.4+0x73>
   24174:	mov    esi,r12d
   24177:	mov    rbx,rcx
   2417a:	call   114b0 <wget_debug_printf@plt>
   2417f:	cmp    r12,0xffffffffffffffff
   24183:	jne    24190 <wget_iri_relative_to_abs+0x60>
   24185:	mov    rdi,r14
   24188:	call   10ab0 <strlen@plt>
   2418d:	mov    r12,rax
   24190:	cmp    BYTE PTR [r14],0x2f
   24194:	je     24210 <wget_iri_relative_to_abs+0xe0>
   24196:	mov    rdx,r12
   24199:	mov    esi,0x3a
   2419e:	mov    rdi,r14
   241a1:	call   11750 <memchr@plt>
   241a6:	test   rax,rax
   241a9:	je     242c8 <wget_iri_relative_to_abs+0x198>
   241af:	test   rbx,rbx
   241b2:	je     24388 <wget_iri_relative_to_abs+0x258>
   241b8:	mov    rsi,r14
   241bb:	mov    rdi,rbx
   241be:	mov    rdx,r12
   241c1:	call   10720 <wget_buffer_memcpy@plt>
   241c6:	mov    rsi,QWORD PTR [rbx]
   241c9:	lea    rdi,[rip+0x28fde]        # 4d1ae <__func__.4+0x8e>
   241d0:	xor    eax,eax
   241d2:	call   114b0 <wget_debug_printf@plt>
   241d7:	mov    r13,QWORD PTR [rbx]
   241da:	mov    rax,QWORD PTR [rsp+0x1018]
   241e2:	sub    rax,QWORD PTR fs:0x28
   241eb:	jne    24478 <wget_iri_relative_to_abs+0x348>
   241f1:	add    rsp,0x1028
   241f8:	mov    rax,r13
   241fb:	pop    rbx
   241fc:	pop    rbp
   241fd:	pop    r12
   241ff:	pop    r13
   24201:	pop    r14
   24203:	pop    r15
   24205:	ret    
   24206:	cs nop WORD PTR [rax+rax*1+0x0]
   24210:	test   rbp,rbp
   24213:	je     24470 <wget_iri_relative_to_abs+0x340>
   24219:	lea    rdx,[r12+0x1]
   2421e:	cmp    r12,0xfff
   24225:	jbe    24360 <wget_iri_relative_to_abs+0x230>
   2422b:	mov    rax,QWORD PTR [rip+0x51d9e]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   24232:	mov    QWORD PTR [rsp+0x8],rdx
   24237:	mov    rdi,rdx
   2423a:	call   QWORD PTR [rax]
   2423c:	mov    rdx,QWORD PTR [rsp+0x8]
   24241:	test   rax,rax
   24244:	mov    r13,rax
   24247:	je     241da <wget_iri_relative_to_abs+0xaa>
   24249:	mov    rsi,r14
   2424c:	mov    rdi,rax
   2424f:	lea    r15,[rsp+0x10]
   24254:	call   11860 <wget_strscpy@plt>
   24259:	cmp    BYTE PTR [r14+0x1],0x2f
   2425e:	je     243a8 <wget_iri_relative_to_abs+0x278>
   24264:	mov    rdi,r13
   24267:	call   22fe0 <normalize_path>
   2426c:	mov    rdi,rbx
   2426f:	call   106f0 <wget_buffer_reset@plt>
   24274:	mov    rsi,rbx
   24277:	mov    rdi,rbp
   2427a:	call   10820 <wget_iri_get_connection_part@plt>
   2427f:	lea    rsi,[rip+0x28eba]        # 4d140 <__func__.4+0x20>
   24286:	mov    rdi,rbx
   24289:	call   10e40 <wget_buffer_strcat@plt>
   2428e:	mov    rsi,r13
   24291:	mov    rdi,rbx
   24294:	call   10e40 <wget_buffer_strcat@plt>
   24299:	mov    rsi,QWORD PTR [rbx]
   2429c:	lea    rdi,[rip+0x28f04]        # 4d1a7 <__func__.4+0x87>
   242a3:	xor    eax,eax
   242a5:	call   114b0 <wget_debug_printf@plt>
   242aa:	cmp    r13,r15
   242ad:	je     241d7 <wget_iri_relative_to_abs+0xa7>
   242b3:	mov    rax,QWORD PTR [rip+0x51d2e]        # 75fe8 <wget_free@@Base-0x1328>
   242ba:	mov    rdi,r13
   242bd:	call   QWORD PTR [rax]
   242bf:	jmp    241d7 <wget_iri_relative_to_abs+0xa7>
   242c4:	nop    DWORD PTR [rax+0x0]
   242c8:	test   rbp,rbp
   242cb:	je     24410 <wget_iri_relative_to_abs+0x2e0>
   242d1:	mov    rdi,QWORD PTR [rbp+0x28]
   242d5:	test   rdi,rdi
   242d8:	je     24440 <wget_iri_relative_to_abs+0x310>
   242de:	mov    esi,0x2f
   242e3:	call   11740 <strrchr@plt>
   242e8:	mov    rdi,rbx
   242eb:	mov    r13,rax
   242ee:	call   106f0 <wget_buffer_reset@plt>
   242f3:	mov    rsi,rbx
   242f6:	mov    rdi,rbp
   242f9:	call   10820 <wget_iri_get_connection_part@plt>
   242fe:	lea    rsi,[rip+0x28e3b]        # 4d140 <__func__.4+0x20>
   24305:	mov    rdi,rbx
   24308:	call   10e40 <wget_buffer_strcat@plt>
   2430d:	mov    r15,QWORD PTR [rbx+0x8]
   24311:	test   r13,r13
   24314:	je     24329 <wget_iri_relative_to_abs+0x1f9>
   24316:	mov    rsi,QWORD PTR [rbp+0x28]
   2431a:	mov    rdi,rbx
   2431d:	sub    r13,rsi
   24320:	lea    rdx,[r13+0x1]
   24324:	call   10ea0 <wget_buffer_memcat@plt>
   24329:	test   r12,r12
   2432c:	jne    24428 <wget_iri_relative_to_abs+0x2f8>
   24332:	mov    rdi,QWORD PTR [rbx]
   24335:	add    rdi,r15
   24338:	call   22fe0 <normalize_path>
   2433d:	mov    rsi,QWORD PTR [rbx]
   24340:	lea    rdi,[rip+0x28e6e]        # 4d1b5 <__func__.4+0x95>
   24347:	lea    rdx,[rax+r15*1]
   2434b:	xor    eax,eax
   2434d:	mov    QWORD PTR [rbx+0x8],rdx
   24351:	call   114b0 <wget_debug_printf@plt>
   24356:	jmp    241d7 <wget_iri_relative_to_abs+0xa7>
   2435b:	nop    DWORD PTR [rax+rax*1+0x0]
   24360:	lea    r15,[rsp+0x10]
   24365:	mov    rsi,r14
   24368:	mov    rdi,r15
   2436b:	mov    r13,r15
   2436e:	call   11860 <wget_strscpy@plt>
   24373:	cmp    r12,0x1
   24377:	jbe    24264 <wget_iri_relative_to_abs+0x134>
   2437d:	jmp    24259 <wget_iri_relative_to_abs+0x129>
   24382:	nop    WORD PTR [rax+rax*1+0x0]
   24388:	mov    rsi,r14
   2438b:	lea    rdi,[rip+0x28e1c]        # 4d1ae <__func__.4+0x8e>
   24392:	xor    eax,eax
   24394:	mov    r13,r14
   24397:	call   114b0 <wget_debug_printf@plt>
   2439c:	jmp    241da <wget_iri_relative_to_abs+0xaa>
   243a1:	nop    DWORD PTR [rax+0x0]
   243a8:	lea    rdi,[r13+0x2]
   243ac:	mov    esi,0x2f
   243b1:	call   109e0 <strchr@plt>
   243b6:	test   rax,rax
   243b9:	je     243c4 <wget_iri_relative_to_abs+0x294>
   243bb:	lea    rdi,[rax+0x1]
   243bf:	call   22fe0 <normalize_path>
   243c4:	mov    edx,DWORD PTR [rbp+0x5c]
   243c7:	lea    rax,[rip+0x52eb2]        # 77280 <schemes>
   243ce:	mov    rdi,rbx
   243d1:	lea    rsi,[rax+rdx*8+0x2]
   243d6:	call   11bf0 <wget_buffer_strcpy@plt>
   243db:	mov    rdi,rbx
   243de:	lea    rsi,[rip+0x27da8]        # 4c18d <__func__.0+0xad>
   243e5:	call   10e40 <wget_buffer_strcat@plt>
   243ea:	mov    rsi,r13
   243ed:	mov    rdi,rbx
   243f0:	call   10e40 <wget_buffer_strcat@plt>
   243f5:	mov    rsi,QWORD PTR [rbx]
   243f8:	lea    rdi,[rip+0x28da1]        # 4d1a0 <__func__.4+0x80>
   243ff:	xor    eax,eax
   24401:	call   114b0 <wget_debug_printf@plt>
   24406:	jmp    242aa <wget_iri_relative_to_abs+0x17a>
   2440b:	nop    DWORD PTR [rax+rax*1+0x0]
   24410:	cmp    BYTE PTR [r14+r12*1],0x0
   24415:	cmove  rbp,r14
   24419:	mov    r13,rbp
   2441c:	jmp    241da <wget_iri_relative_to_abs+0xaa>
   24421:	nop    DWORD PTR [rax+0x0]
   24428:	mov    rdx,r12
   2442b:	mov    rsi,r14
   2442e:	mov    rdi,rbx
   24431:	call   10ea0 <wget_buffer_memcat@plt>
   24436:	jmp    24332 <wget_iri_relative_to_abs+0x202>
   2443b:	nop    DWORD PTR [rax+rax*1+0x0]
   24440:	mov    rdi,rbx
   24443:	call   106f0 <wget_buffer_reset@plt>
   24448:	mov    rsi,rbx
   2444b:	mov    rdi,rbp
   2444e:	call   10820 <wget_iri_get_connection_part@plt>
   24453:	lea    rsi,[rip+0x28ce6]        # 4d140 <__func__.4+0x20>
   2445a:	mov    rdi,rbx
   2445d:	call   10e40 <wget_buffer_strcat@plt>
   24462:	mov    r15,QWORD PTR [rbx+0x8]
   24466:	jmp    24329 <wget_iri_relative_to_abs+0x1f9>
   2446b:	nop    DWORD PTR [rax+rax*1+0x0]
   24470:	xor    r13d,r13d
   24473:	jmp    241da <wget_iri_relative_to_abs+0xaa>
   24478:	call   11760 <__stack_chk_fail@plt>
   2447d:	nop    DWORD PTR [rax]

0000000000024480 <wget_iri_parse_base>:
   24480:	endbr64 
   24484:	push   r14
   24486:	mov    r14,rdx
   24489:	push   r13
   2448b:	push   r12
   2448d:	mov    r12,rsi
   24490:	push   rbp
   24491:	sub    rsp,0x138
   24498:	mov    rax,QWORD PTR fs:0x28
   244a1:	mov    QWORD PTR [rsp+0x128],rax
   244a9:	xor    eax,eax
   244ab:	test   rdi,rdi
   244ae:	je     24520 <wget_iri_parse_base+0xa0>
   244b0:	mov    r13,rsp
   244b3:	mov    rbp,rdi
   244b6:	lea    rsi,[rsp+0x20]
   244bb:	mov    edx,0x100
   244c0:	mov    rdi,r13
   244c3:	call   108d0 <wget_buffer_init@plt>
   244c8:	mov    rsi,r12
   244cb:	mov    rcx,r13
   244ce:	mov    rdi,rbp
   244d1:	mov    rdx,0xffffffffffffffff
   244d8:	call   107b0 <wget_iri_relative_to_abs@plt>
   244dd:	mov    rsi,r14
   244e0:	mov    rdi,rax
   244e3:	call   11000 <wget_iri_parse@plt>
   244e8:	mov    rdi,r13
   244eb:	mov    r12,rax
   244ee:	call   11300 <wget_buffer_deinit@plt>
   244f3:	mov    rax,QWORD PTR [rsp+0x128]
   244fb:	sub    rax,QWORD PTR fs:0x28
   24504:	jne    2455c <wget_iri_parse_base+0xdc>
   24506:	add    rsp,0x138
   2450d:	mov    rax,r12
   24510:	pop    rbp
   24511:	pop    r12
   24513:	pop    r13
   24515:	pop    r14
   24517:	ret    
   24518:	nop    DWORD PTR [rax+rax*1+0x0]
   24520:	xor    edi,edi
   24522:	xor    ecx,ecx
   24524:	mov    rdx,0xffffffffffffffff
   2452b:	call   107b0 <wget_iri_relative_to_abs@plt>
   24530:	mov    rdi,rax
   24533:	mov    rax,QWORD PTR [rsp+0x128]
   2453b:	sub    rax,QWORD PTR fs:0x28
   24544:	jne    2455c <wget_iri_parse_base+0xdc>
   24546:	add    rsp,0x138
   2454d:	mov    rsi,r14
   24550:	pop    rbp
   24551:	pop    r12
   24553:	pop    r13
   24555:	pop    r14
   24557:	jmp    11000 <wget_iri_parse@plt>
   2455c:	call   11760 <__stack_chk_fail@plt>
   24561:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2456c:	nop    DWORD PTR [rax+0x0]

0000000000024570 <wget_iri_compare>:
   24570:	endbr64 
   24574:	push   rbp
   24575:	push   rbx
   24576:	mov    rbx,rsi
   24579:	sub    rsp,0x8
   2457d:	test   rdi,rdi
   24580:	je     245d8 <wget_iri_compare+0x68>
   24582:	test   rsi,rsi
   24585:	je     245f8 <wget_iri_compare+0x88>
   24587:	mov    rbp,rdi
   2458a:	mov    rsi,QWORD PTR [rsi+0x28]
   2458e:	mov    rdi,QWORD PTR [rdi+0x28]
   24592:	call   10410 <wget_strcasecmp@plt>
   24597:	test   eax,eax
   24599:	jne    245dd <wget_iri_compare+0x6d>
   2459b:	mov    rsi,QWORD PTR [rbx+0x30]
   2459f:	mov    rdi,QWORD PTR [rbp+0x30]
   245a3:	call   10410 <wget_strcasecmp@plt>
   245a8:	test   eax,eax
   245aa:	jne    245dd <wget_iri_compare+0x6d>
   245ac:	mov    eax,DWORD PTR [rbx+0x5c]
   245af:	cmp    DWORD PTR [rbp+0x5c],eax
   245b2:	jne    245e8 <wget_iri_compare+0x78>
   245b4:	movzx  eax,WORD PTR [rbp+0x58]
   245b8:	movzx  edx,WORD PTR [rbx+0x58]
   245bc:	sub    eax,edx
   245be:	jne    245dd <wget_iri_compare+0x6d>
   245c0:	mov    rsi,QWORD PTR [rbx+0x20]
   245c4:	mov    rdi,QWORD PTR [rbp+0x20]
   245c8:	add    rsp,0x8
   245cc:	pop    rbx
   245cd:	pop    rbp
   245ce:	jmp    11c60 <strcmp@plt>
   245d3:	nop    DWORD PTR [rax+rax*1+0x0]
   245d8:	neg    rbx
   245db:	sbb    eax,eax
   245dd:	add    rsp,0x8
   245e1:	pop    rbx
   245e2:	pop    rbp
   245e3:	ret    
   245e4:	nop    DWORD PTR [rax+0x0]
   245e8:	sbb    eax,eax
   245ea:	add    rsp,0x8
   245ee:	or     eax,0x1
   245f1:	pop    rbx
   245f2:	pop    rbp
   245f3:	ret    
   245f4:	nop    DWORD PTR [rax+0x0]
   245f8:	add    rsp,0x8
   245fc:	mov    eax,0x1
   24601:	pop    rbx
   24602:	pop    rbp
   24603:	ret    
   24604:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2460f:	nop

0000000000024610 <wget_iri_escape>:
   24610:	endbr64 
   24614:	push   r13
   24616:	mov    r13,rsi
   24619:	push   r12
   2461b:	push   rbp
   2461c:	push   rbx
   2461d:	sub    rsp,0x8
   24621:	test   rdi,rdi
   24624:	je     24698 <wget_iri_escape+0x88>
   24626:	movzx  eax,BYTE PTR [rdi]
   24629:	mov    rbx,rdi
   2462c:	mov    rsi,rdi
   2462f:	lea    rbp,[rip+0x28bea]        # 4d220 <iri_ctype>
   24636:	lea    r12,[rip+0x28b83]        # 4d1c0 <__func__.4+0xa0>
   2463d:	test   al,al
   2463f:	je     24698 <wget_iri_escape+0x88>
   24641:	nop    DWORD PTR [rax+0x0]
   24648:	mov    rdx,rbx
   2464b:	add    rbx,0x1
   2464f:	test   BYTE PTR [rbp+rax*1+0x0],0x4
   24654:	jne    2467e <wget_iri_escape+0x6e>
   24656:	lea    rax,[rbx-0x1]
   2465a:	cmp    rsi,rax
   2465d:	je     2466a <wget_iri_escape+0x5a>
   2465f:	sub    rdx,rsi
   24662:	mov    rdi,r13
   24665:	call   10ea0 <wget_buffer_memcat@plt>
   2466a:	movzx  edx,BYTE PTR [rbx-0x1]
   2466e:	mov    rsi,r12
   24671:	mov    rdi,r13
   24674:	xor    eax,eax
   24676:	call   11880 <wget_buffer_printf_append@plt>
   2467b:	mov    rsi,rbx
   2467e:	movzx  eax,BYTE PTR [rbx]
   24681:	test   al,al
   24683:	jne    24648 <wget_iri_escape+0x38>
   24685:	cmp    rsi,rbx
   24688:	je     24698 <wget_iri_escape+0x88>
   2468a:	mov    rdx,rbx
   2468d:	mov    rdi,r13
   24690:	sub    rdx,rsi
   24693:	call   10ea0 <wget_buffer_memcat@plt>
   24698:	mov    rax,QWORD PTR [r13+0x0]
   2469c:	add    rsp,0x8
   246a0:	pop    rbx
   246a1:	pop    rbp
   246a2:	pop    r12
   246a4:	pop    r13
   246a6:	ret    
   246a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000246b0 <wget_iri_escape_path>:
   246b0:	endbr64 
   246b4:	push   r13
   246b6:	mov    r13,rsi
   246b9:	push   r12
   246bb:	push   rbp
   246bc:	push   rbx
   246bd:	sub    rsp,0x8
   246c1:	movzx  eax,BYTE PTR [rdi]
   246c4:	test   al,al
   246c6:	je     24745 <wget_iri_escape_path+0x95>
   246c8:	mov    rbx,rdi
   246cb:	mov    rsi,rdi
   246ce:	lea    r12,[rip+0x28b4b]        # 4d220 <iri_ctype>
   246d5:	lea    rbp,[rip+0x28ae4]        # 4d1c0 <__func__.4+0xa0>
   246dc:	nop    DWORD PTR [rax+0x0]
   246e0:	movzx  ecx,al
   246e3:	mov    rdx,rbx
   246e6:	add    rbx,0x1
   246ea:	test   BYTE PTR [r12+rcx*1],0x6
   246ef:	jne    2472b <wget_iri_escape_path+0x7b>
   246f1:	sub    eax,0x2f
   246f4:	cmp    al,0x11
   246f6:	ja     24703 <wget_iri_escape_path+0x53>
   246f8:	mov    ecx,0x20801
   246fd:	bt     rcx,rax
   24701:	jb     2472b <wget_iri_escape_path+0x7b>
   24703:	lea    rax,[rbx-0x1]
   24707:	cmp    rsi,rax
   2470a:	je     24717 <wget_iri_escape_path+0x67>
   2470c:	sub    rdx,rsi
   2470f:	mov    rdi,r13
   24712:	call   10ea0 <wget_buffer_memcat@plt>
   24717:	movzx  edx,BYTE PTR [rbx-0x1]
   2471b:	mov    rsi,rbp
   2471e:	mov    rdi,r13
   24721:	xor    eax,eax
   24723:	call   11880 <wget_buffer_printf_append@plt>
   24728:	mov    rsi,rbx
   2472b:	movzx  eax,BYTE PTR [rbx]
   2472e:	test   al,al
   24730:	jne    246e0 <wget_iri_escape_path+0x30>
   24732:	cmp    rsi,rbx
   24735:	je     24745 <wget_iri_escape_path+0x95>
   24737:	mov    rdx,rbx
   2473a:	mov    rdi,r13
   2473d:	sub    rdx,rsi
   24740:	call   10ea0 <wget_buffer_memcat@plt>
   24745:	mov    rax,QWORD PTR [r13+0x0]
   24749:	add    rsp,0x8
   2474d:	pop    rbx
   2474e:	pop    rbp
   2474f:	pop    r12
   24751:	pop    r13
   24753:	ret    
   24754:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2475f:	nop

0000000000024760 <wget_iri_escape_query>:
   24760:	endbr64 
   24764:	push   r14
   24766:	mov    r14,rsi
   24769:	push   r13
   2476b:	push   r12
   2476d:	push   rbp
   2476e:	push   rbx
   2476f:	movzx  eax,BYTE PTR [rdi]
   24772:	test   al,al
   24774:	je     24813 <wget_iri_escape_query+0xb3>
   2477a:	mov    rbx,rdi
   2477d:	mov    rsi,rdi
   24780:	lea    r13,[rip+0x28a99]        # 4d220 <iri_ctype>
   24787:	lea    rbp,[rip+0x28a32]        # 4d1c0 <__func__.4+0xa0>
   2478e:	lea    r12,[rip+0x28a32]        # 4d1c7 <__func__.4+0xa7>
   24795:	jmp    247a7 <wget_iri_escape_query+0x47>
   24797:	nop    WORD PTR [rax+rax*1+0x0]
   247a0:	movzx  eax,BYTE PTR [rbx]
   247a3:	test   al,al
   247a5:	je     24800 <wget_iri_escape_query+0xa0>
   247a7:	movzx  ecx,al
   247aa:	mov    rdx,rbx
   247ad:	add    rbx,0x1
   247b1:	test   BYTE PTR [r13+rcx*1+0x0],0x4
   247b7:	jne    247a0 <wget_iri_escape_query+0x40>
   247b9:	cmp    al,0x3d
   247bb:	setne  cl
   247be:	cmp    al,0x26
   247c0:	setne  al
   247c3:	test   cl,al
   247c5:	je     247a0 <wget_iri_escape_query+0x40>
   247c7:	lea    rax,[rbx-0x1]
   247cb:	cmp    rsi,rax
   247ce:	je     247db <wget_iri_escape_query+0x7b>
   247d0:	sub    rdx,rsi
   247d3:	mov    rdi,r14
   247d6:	call   10ea0 <wget_buffer_memcat@plt>
   247db:	movzx  edx,BYTE PTR [rbx-0x1]
   247df:	cmp    dl,0x20
   247e2:	je     24820 <wget_iri_escape_query+0xc0>
   247e4:	mov    rsi,rbp
   247e7:	mov    rdi,r14
   247ea:	xor    eax,eax
   247ec:	call   11880 <wget_buffer_printf_append@plt>
   247f1:	movzx  eax,BYTE PTR [rbx]
   247f4:	mov    rsi,rbx
   247f7:	test   al,al
   247f9:	jne    247a7 <wget_iri_escape_query+0x47>
   247fb:	nop    DWORD PTR [rax+rax*1+0x0]
   24800:	cmp    rsi,rbx
   24803:	je     24813 <wget_iri_escape_query+0xb3>
   24805:	mov    rdx,rbx
   24808:	mov    rdi,r14
   2480b:	sub    rdx,rsi
   2480e:	call   10ea0 <wget_buffer_memcat@plt>
   24813:	pop    rbx
   24814:	mov    rax,QWORD PTR [r14]
   24817:	pop    rbp
   24818:	pop    r12
   2481a:	pop    r13
   2481c:	pop    r14
   2481e:	ret    
   2481f:	nop
   24820:	mov    rsi,r12
   24823:	mov    edx,0x1
   24828:	mov    rdi,r14
   2482b:	call   10ea0 <wget_buffer_memcat@plt>
   24830:	mov    rsi,rbx
   24833:	jmp    247a0 <wget_iri_escape_query+0x40>
   24838:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000024840 <wget_iri_get_escaped_host>:
   24840:	endbr64 
   24844:	mov    rdi,QWORD PTR [rdi+0x20]
   24848:	jmp    11700 <wget_iri_escape@plt>
   2484d:	nop    DWORD PTR [rax]

0000000000024850 <wget_iri_get_escaped_resource>:
   24850:	endbr64 
   24854:	push   r12
   24856:	push   rbp
   24857:	mov    rbp,rsi
   2485a:	push   rbx
   2485b:	mov    rbx,rdi
   2485e:	mov    rdi,QWORD PTR [rdi+0x28]
   24862:	test   rdi,rdi
   24865:	je     2486c <wget_iri_get_escaped_resource+0x1c>
   24867:	call   12320 <wget_iri_escape_path@plt>
   2486c:	cmp    QWORD PTR [rbx+0x30],0x0
   24871:	je     248c1 <wget_iri_get_escaped_resource+0x71>
   24873:	mov    edx,0x1
   24878:	lea    rsi,[rip+0x297e8]        # 4e067 <powers.0+0x3a7>
   2487f:	mov    rdi,rbp
   24882:	call   10ea0 <wget_buffer_memcat@plt>
   24887:	mov    rbx,QWORD PTR [rbx+0x30]
   2488b:	movzx  eax,BYTE PTR [rbx]
   2488e:	test   al,al
   24890:	je     248c1 <wget_iri_get_escaped_resource+0x71>
   24892:	lea    r12,[rip+0x2892e]        # 4d1c7 <__func__.4+0xa7>
   24899:	nop    DWORD PTR [rax+0x0]
   248a0:	cmp    al,0x20
   248a2:	mov    rsi,r12
   248a5:	mov    edx,0x1
   248aa:	mov    rdi,rbp
   248ad:	cmovne rsi,rbx
   248b1:	add    rbx,0x1
   248b5:	call   10ea0 <wget_buffer_memcat@plt>
   248ba:	movzx  eax,BYTE PTR [rbx]
   248bd:	test   al,al
   248bf:	jne    248a0 <wget_iri_get_escaped_resource+0x50>
   248c1:	mov    rax,QWORD PTR [rbp+0x0]
   248c5:	pop    rbx
   248c6:	pop    rbp
   248c7:	pop    r12
   248c9:	ret    
   248ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000000248d0 <wget_iri_get_path>:
   248d0:	endbr64 
   248d4:	push   r13
   248d6:	push   r12
   248d8:	mov    r12,rdi
   248db:	push   rbp
   248dc:	mov    rbp,rdx
   248df:	push   rbx
   248e0:	mov    rbx,rsi
   248e3:	sub    rsp,0x8
   248e7:	mov    rax,QWORD PTR [rsi+0x8]
   248eb:	test   rax,rax
   248ee:	je     248fe <wget_iri_get_path+0x2e>
   248f0:	mov    rdx,QWORD PTR [rsi]
   248f3:	cmp    BYTE PTR [rdx+rax*1-0x1],0x2f
   248f8:	jne    249a0 <wget_iri_get_path+0xd0>
   248fe:	mov    r13,QWORD PTR [r12+0x28]
   24903:	test   r13,r13
   24906:	je     24940 <wget_iri_get_path+0x70>
   24908:	lea    rsi,[rip+0x26f51]        # 4b860 <base64_2_bin+0x660>
   2490f:	mov    rdi,rbp
   24912:	call   12590 <wget_strcasecmp_ascii@plt>
   24917:	test   eax,eax
   24919:	jne    24970 <wget_iri_get_path+0xa0>
   2491b:	mov    rsi,r13
   2491e:	mov    rdi,rbx
   24921:	call   10e40 <wget_buffer_strcat@plt>
   24926:	mov    rdx,QWORD PTR [rbx+0x8]
   2492a:	test   rdx,rdx
   2492d:	je     24940 <wget_iri_get_path+0x70>
   2492f:	mov    rax,QWORD PTR [rbx]
   24932:	cmp    BYTE PTR [rax+rdx*1-0x1],0x2f
   24937:	jne    2495e <wget_iri_get_path+0x8e>
   24939:	nop    DWORD PTR [rax+0x0]
   24940:	mov    rsi,QWORD PTR [rip+0x52951]        # 77298 <default_page>
   24947:	test   rsi,rsi
   2494a:	je     2495b <wget_iri_get_path+0x8b>
   2494c:	mov    rdx,QWORD PTR [rip+0x5293d]        # 77290 <default_page_length>
   24953:	mov    rdi,rbx
   24956:	call   10ea0 <wget_buffer_memcat@plt>
   2495b:	mov    rax,QWORD PTR [rbx]
   2495e:	add    rsp,0x8
   24962:	pop    rbx
   24963:	pop    rbp
   24964:	pop    r12
   24966:	pop    r13
   24968:	ret    
   24969:	nop    DWORD PTR [rax+0x0]
   24970:	mov    rsi,rbp
   24973:	mov    rdi,r13
   24976:	call   10b30 <wget_utf8_to_str@plt>
   2497b:	mov    rbp,rax
   2497e:	test   rax,rax
   24981:	je     249c7 <wget_iri_get_path+0xf7>
   24983:	mov    rdi,rbx
   24986:	mov    rsi,rax
   24989:	call   10e40 <wget_buffer_strcat@plt>
   2498e:	mov    rax,QWORD PTR [rip+0x51653]        # 75fe8 <wget_free@@Base-0x1328>
   24995:	mov    rdi,rbp
   24998:	call   QWORD PTR [rax]
   2499a:	jmp    24926 <wget_iri_get_path+0x56>
   2499c:	nop    DWORD PTR [rax+0x0]
   249a0:	mov    edx,0x1
   249a5:	lea    rsi,[rip+0x28794]        # 4d140 <__func__.4+0x20>
   249ac:	mov    rdi,rbx
   249af:	call   10ea0 <wget_buffer_memcat@plt>
   249b4:	mov    r13,QWORD PTR [r12+0x28]
   249b9:	test   r13,r13
   249bc:	jne    24908 <wget_iri_get_path+0x38>
   249c2:	jmp    24926 <wget_iri_get_path+0x56>
   249c7:	mov    rsi,QWORD PTR [r12+0x28]
   249cc:	mov    rdi,rbx
   249cf:	call   10e40 <wget_buffer_strcat@plt>
   249d4:	jmp    24926 <wget_iri_get_path+0x56>
   249d9:	nop    DWORD PTR [rax+0x0]

00000000000249e0 <wget_iri_get_query_as_filename>:
   249e0:	endbr64 
   249e4:	push   r14
   249e6:	push   r13
   249e8:	push   r12
   249ea:	push   rbp
   249eb:	mov    rbp,rsi
   249ee:	push   rbx
   249ef:	cmp    QWORD PTR [rdi+0x30],0x0
   249f4:	je     24ad8 <wget_iri_get_query_as_filename+0xf8>
   249fa:	mov    r12,rdx
   249fd:	lea    rsi,[rip+0x29663]        # 4e067 <powers.0+0x3a7>
   24a04:	mov    rbx,rdi
   24a07:	mov    edx,0x1
   24a0c:	mov    rdi,rbp
   24a0f:	call   10ea0 <wget_buffer_memcat@plt>
   24a14:	lea    rsi,[rip+0x26e45]        # 4b860 <base64_2_bin+0x660>
   24a1b:	mov    rdi,r12
   24a1e:	call   12590 <wget_strcasecmp_ascii@plt>
   24a23:	test   eax,eax
   24a25:	jne    24b08 <wget_iri_get_query_as_filename+0x128>
   24a2b:	mov    r12,QWORD PTR [rbx+0x30]
   24a2f:	xor    r13d,r13d
   24a32:	mov    rdi,r12
   24a35:	xor    ebx,ebx
   24a37:	jmp    24a47 <wget_iri_get_query_as_filename+0x67>
   24a39:	nop    DWORD PTR [rax+0x0]
   24a40:	add    ebx,0x1
   24a43:	lea    rdi,[rax+0x1]
   24a47:	mov    esi,0x2f
   24a4c:	call   109e0 <strchr@plt>
   24a51:	test   rax,rax
   24a54:	jne    24a40 <wget_iri_get_query_as_filename+0x60>
   24a56:	test   ebx,ebx
   24a58:	je     24b30 <wget_iri_get_query_as_filename+0x150>
   24a5e:	movzx  eax,BYTE PTR [r12]
   24a63:	mov    rsi,r12
   24a66:	mov    rbx,r12
   24a69:	lea    r14,[rip+0x28759]        # 4d1c9 <__func__.4+0xa9>
   24a70:	test   al,al
   24a72:	jne    24a87 <wget_iri_get_query_as_filename+0xa7>
   24a74:	jmp    24ad3 <wget_iri_get_query_as_filename+0xf3>
   24a76:	cs nop WORD PTR [rax+rax*1+0x0]
   24a80:	movzx  eax,BYTE PTR [rbx]
   24a83:	test   al,al
   24a85:	je     24ac0 <wget_iri_get_query_as_filename+0xe0>
   24a87:	mov    rdx,rbx
   24a8a:	add    rbx,0x1
   24a8e:	cmp    al,0x2f
   24a90:	jne    24a80 <wget_iri_get_query_as_filename+0xa0>
   24a92:	lea    rax,[rbx-0x1]
   24a96:	cmp    rsi,rax
   24a99:	je     24aa6 <wget_iri_get_query_as_filename+0xc6>
   24a9b:	sub    rdx,rsi
   24a9e:	mov    rdi,rbp
   24aa1:	call   10ea0 <wget_buffer_memcat@plt>
   24aa6:	mov    rsi,r14
   24aa9:	mov    edx,0x3
   24aae:	mov    rdi,rbp
   24ab1:	call   10ea0 <wget_buffer_memcat@plt>
   24ab6:	movzx  eax,BYTE PTR [rbx]
   24ab9:	mov    rsi,rbx
   24abc:	test   al,al
   24abe:	jne    24a87 <wget_iri_get_query_as_filename+0xa7>
   24ac0:	cmp    rsi,rbx
   24ac3:	je     24ad3 <wget_iri_get_query_as_filename+0xf3>
   24ac5:	mov    rdx,rbx
   24ac8:	mov    rdi,rbp
   24acb:	sub    rdx,rsi
   24ace:	call   10ea0 <wget_buffer_memcat@plt>
   24ad3:	test   r13b,r13b
   24ad6:	jne    24ae8 <wget_iri_get_query_as_filename+0x108>
   24ad8:	pop    rbx
   24ad9:	mov    rax,QWORD PTR [rbp+0x0]
   24add:	pop    rbp
   24ade:	pop    r12
   24ae0:	pop    r13
   24ae2:	pop    r14
   24ae4:	ret    
   24ae5:	nop    DWORD PTR [rax]
   24ae8:	mov    rax,QWORD PTR [rip+0x514f9]        # 75fe8 <wget_free@@Base-0x1328>
   24aef:	mov    rdi,r12
   24af2:	call   QWORD PTR [rax]
   24af4:	pop    rbx
   24af5:	mov    rax,QWORD PTR [rbp+0x0]
   24af9:	pop    rbp
   24afa:	pop    r12
   24afc:	pop    r13
   24afe:	pop    r14
   24b00:	ret    
   24b01:	nop    DWORD PTR [rax+0x0]
   24b08:	mov    rdi,QWORD PTR [rbx+0x30]
   24b0c:	mov    rsi,r12
   24b0f:	call   10b30 <wget_utf8_to_str@plt>
   24b14:	mov    r12,rax
   24b17:	test   rax,rax
   24b1a:	je     24a2b <wget_iri_get_query_as_filename+0x4b>
   24b20:	mov    r13d,0x1
   24b26:	jmp    24a32 <wget_iri_get_query_as_filename+0x52>
   24b2b:	nop    DWORD PTR [rax+rax*1+0x0]
   24b30:	mov    rsi,r12
   24b33:	mov    rdi,rbp
   24b36:	call   10e40 <wget_buffer_strcat@plt>
   24b3b:	test   r13b,r13b
   24b3e:	je     24ad8 <wget_iri_get_query_as_filename+0xf8>
   24b40:	jmp    24ae8 <wget_iri_get_query_as_filename+0x108>
   24b42:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   24b4d:	nop    DWORD PTR [rax]

0000000000024b50 <wget_iri_get_basename>:
   24b50:	endbr64 
   24b54:	push   r15
   24b56:	push   r14
   24b58:	push   r13
   24b5a:	mov    r13,rdi
   24b5d:	push   r12
   24b5f:	mov    r12,rdx
   24b62:	push   rbp
   24b63:	mov    rbp,rsi
   24b66:	push   rbx
   24b67:	mov    ebx,ecx
   24b69:	sub    rsp,0x8
   24b6d:	mov    r14,QWORD PTR [rdi+0x28]
   24b71:	test   r14,r14
   24b74:	je     24bd9 <wget_iri_get_basename+0x89>
   24b76:	lea    rsi,[rip+0x26ce3]        # 4b860 <base64_2_bin+0x660>
   24b7d:	mov    rdi,rdx
   24b80:	call   12590 <wget_strcasecmp_ascii@plt>
   24b85:	mov    esi,0x2f
   24b8a:	mov    rdi,r14
   24b8d:	mov    r15d,eax
   24b90:	call   11740 <strrchr@plt>
   24b95:	test   r15d,r15d
   24b98:	je     24c48 <wget_iri_get_basename+0xf8>
   24b9e:	test   rax,rax
   24ba1:	je     24c70 <wget_iri_get_basename+0x120>
   24ba7:	lea    r14,[rax+0x1]
   24bab:	mov    rsi,r12
   24bae:	mov    rdi,r14
   24bb1:	call   10b30 <wget_utf8_to_str@plt>
   24bb6:	mov    r15,rax
   24bb9:	test   rax,rax
   24bbc:	je     24c60 <wget_iri_get_basename+0x110>
   24bc2:	mov    rdi,rbp
   24bc5:	mov    rsi,r15
   24bc8:	call   10e40 <wget_buffer_strcat@plt>
   24bcd:	mov    rax,QWORD PTR [rip+0x51414]        # 75fe8 <wget_free@@Base-0x1328>
   24bd4:	mov    rdi,r15
   24bd7:	call   QWORD PTR [rax]
   24bd9:	mov    rax,QWORD PTR [rbp+0x8]
   24bdd:	test   rax,rax
   24be0:	je     24c08 <wget_iri_get_basename+0xb8>
   24be2:	mov    rdx,QWORD PTR [rbp+0x0]
   24be6:	cmp    BYTE PTR [rdx+rax*1-0x1],0x2f
   24beb:	je     24c08 <wget_iri_get_basename+0xb8>
   24bed:	and    ebx,0x1
   24bf0:	jne    24c28 <wget_iri_get_basename+0xd8>
   24bf2:	mov    rax,QWORD PTR [rbp+0x0]
   24bf6:	add    rsp,0x8
   24bfa:	pop    rbx
   24bfb:	pop    rbp
   24bfc:	pop    r12
   24bfe:	pop    r13
   24c00:	pop    r14
   24c02:	pop    r15
   24c04:	ret    
   24c05:	nop    DWORD PTR [rax]
   24c08:	mov    rsi,QWORD PTR [rip+0x52689]        # 77298 <default_page>
   24c0f:	test   rsi,rsi
   24c12:	je     24bed <wget_iri_get_basename+0x9d>
   24c14:	mov    rdx,QWORD PTR [rip+0x52675]        # 77290 <default_page_length>
   24c1b:	mov    rdi,rbp
   24c1e:	call   10ea0 <wget_buffer_memcat@plt>
   24c23:	and    ebx,0x1
   24c26:	je     24bf2 <wget_iri_get_basename+0xa2>
   24c28:	add    rsp,0x8
   24c2c:	mov    rdx,r12
   24c2f:	mov    rsi,rbp
   24c32:	mov    rdi,r13
   24c35:	pop    rbx
   24c36:	pop    rbp
   24c37:	pop    r12
   24c39:	pop    r13
   24c3b:	pop    r14
   24c3d:	pop    r15
   24c3f:	jmp    118e0 <wget_iri_get_query_as_filename@plt>
   24c44:	nop    DWORD PTR [rax+0x0]
   24c48:	test   rax,rax
   24c4b:	je     24c60 <wget_iri_get_basename+0x110>
   24c4d:	lea    rsi,[rax+0x1]
   24c51:	mov    rdi,rbp
   24c54:	call   10e40 <wget_buffer_strcat@plt>
   24c59:	jmp    24bd9 <wget_iri_get_basename+0x89>
   24c5e:	xchg   ax,ax
   24c60:	mov    rsi,r14
   24c63:	mov    rdi,rbp
   24c66:	call   10e40 <wget_buffer_strcat@plt>
   24c6b:	jmp    24bd9 <wget_iri_get_basename+0x89>
   24c70:	mov    rsi,r12
   24c73:	mov    rdi,r14
   24c76:	call   10b30 <wget_utf8_to_str@plt>
   24c7b:	mov    r15,rax
   24c7e:	test   rax,rax
   24c81:	jne    24bc2 <wget_iri_get_basename+0x72>
   24c87:	mov    rsi,QWORD PTR [r13+0x28]
   24c8b:	mov    rdi,rbp
   24c8e:	call   10e40 <wget_buffer_strcat@plt>
   24c93:	jmp    24bd9 <wget_iri_get_basename+0x89>
   24c98:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000024ca0 <wget_iri_set_defaultpage>:
   24ca0:	endbr64 
   24ca4:	mov    QWORD PTR [rip+0x525ed],rdi        # 77298 <default_page>
   24cab:	test   rdi,rdi
   24cae:	je     24cc8 <wget_iri_set_defaultpage+0x28>
   24cb0:	sub    rsp,0x8
   24cb4:	call   10ab0 <strlen@plt>
   24cb9:	mov    QWORD PTR [rip+0x525d0],rax        # 77290 <default_page_length>
   24cc0:	add    rsp,0x8
   24cc4:	ret    
   24cc5:	nop    DWORD PTR [rax]
   24cc8:	xor    eax,eax
   24cca:	mov    QWORD PTR [rip+0x525bf],rax        # 77290 <default_page_length>
   24cd1:	ret    
   24cd2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   24cdd:	nop    DWORD PTR [rax]

0000000000024ce0 <wget_iri_set_defaultport>:
   24ce0:	endbr64 
   24ce4:	cmp    edi,0x1
   24ce7:	ja     24d00 <wget_iri_set_defaultport+0x20>
   24ce9:	mov    edi,edi
   24ceb:	lea    rax,[rip+0x5258e]        # 77280 <schemes>
   24cf2:	mov    WORD PTR [rax+rdi*8],si
   24cf6:	xor    eax,eax
   24cf8:	ret    
   24cf9:	nop    DWORD PTR [rax+0x0]
   24d00:	mov    eax,0xffffffff
   24d05:	ret    
   24d06:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000024d10 <wget_iri_set_scheme>:
   24d10:	endbr64 
   24d14:	push   r15
   24d16:	push   r14
   24d18:	push   r13
   24d1a:	push   r12
   24d1c:	push   rbp
   24d1d:	push   rbx
   24d1e:	mov    ebx,esi
   24d20:	sub    rsp,0x18
   24d24:	mov    r12d,DWORD PTR [rdi+0x5c]
   24d28:	cmp    r12d,ebx
   24d2b:	je     24d32 <wget_iri_set_scheme+0x22>
   24d2d:	cmp    ebx,0x1
   24d30:	jbe    24d48 <wget_iri_set_scheme+0x38>
   24d32:	add    rsp,0x18
   24d36:	mov    eax,r12d
   24d39:	pop    rbx
   24d3a:	pop    rbp
   24d3b:	pop    r12
   24d3d:	pop    r13
   24d3f:	pop    r14
   24d41:	pop    r15
   24d43:	ret    
   24d44:	nop    DWORD PTR [rax+0x0]
   24d48:	lea    r15,[rip+0x52531]        # 77280 <schemes>
   24d4f:	mov    eax,r12d
   24d52:	mov    DWORD PTR [rdi+0x5c],ebx
   24d55:	mov    rbp,rdi
   24d58:	movzx  ecx,WORD PTR [r15+rax*8]
   24d5d:	cmp    WORD PTR [rdi+0x58],cx
   24d61:	je     24dd8 <wget_iri_set_scheme+0xc8>
   24d63:	lea    rsi,[r15+rax*8+0x2]
   24d68:	mov    rdi,rsi
   24d6b:	mov    QWORD PTR [rsp+0x8],rsi
   24d70:	call   10ab0 <strlen@plt>
   24d75:	mov    r14,QWORD PTR [rbp+0x0]
   24d79:	mov    rsi,QWORD PTR [rsp+0x8]
   24d7e:	mov    rdx,rax
   24d81:	mov    r13,rax
   24d84:	mov    rdi,r14
   24d87:	call   10b10 <strncmp@plt>
   24d8c:	test   eax,eax
   24d8e:	jne    24d32 <wget_iri_set_scheme+0x22>
   24d90:	lea    rdx,[r14+r13*1]
   24d94:	cmp    BYTE PTR [rdx],0x3a
   24d97:	jne    24d32 <wget_iri_set_scheme+0x22>
   24d99:	lea    rsi,[r15+rbx*8+0x2]
   24d9e:	lea    rdi,[rip+0x28428]        # 4d1cd <__func__.4+0xad>
   24da5:	call   12810 <wget_aprintf@plt>
   24daa:	mov    rbx,rax
   24dad:	test   BYTE PTR [rbp+0x60],0x2
   24db1:	je     24dc5 <wget_iri_set_scheme+0xb5>
   24db3:	mov    rdi,QWORD PTR [rbp+0x0]
   24db7:	test   rdi,rdi
   24dba:	je     24dc5 <wget_iri_set_scheme+0xb5>
   24dbc:	mov    rax,QWORD PTR [rip+0x51225]        # 75fe8 <wget_free@@Base-0x1328>
   24dc3:	call   QWORD PTR [rax]
   24dc5:	or     BYTE PTR [rbp+0x60],0x2
   24dc9:	mov    QWORD PTR [rbp+0x0],rbx
   24dcd:	jmp    24d32 <wget_iri_set_scheme+0x22>
   24dd2:	nop    WORD PTR [rax+rax*1+0x0]
   24dd8:	mov    edx,ebx
   24dda:	movzx  edx,WORD PTR [r15+rdx*8]
   24ddf:	mov    WORD PTR [rdi+0x58],dx
   24de3:	jmp    24d63 <wget_iri_set_scheme+0x53>
   24de8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000024df0 <wget_list_append>:
   24df0:	endbr64 
   24df4:	push   r13
   24df6:	mov    r13,rsi
   24df9:	push   r12
   24dfb:	mov    r12,rdx
   24dfe:	push   rbp
   24dff:	mov    rbp,rdi
   24e02:	lea    rdi,[rdx+0x10]
   24e06:	push   rbx
   24e07:	sub    rsp,0x8
   24e0b:	mov    rax,QWORD PTR [rip+0x511be]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   24e12:	call   QWORD PTR [rax]
   24e14:	test   rax,rax
   24e17:	je     24e90 <wget_list_append+0xa0>
   24e19:	lea    r8,[rax+0x10]
   24e1d:	mov    rdx,r12
   24e20:	mov    rsi,r13
   24e23:	mov    rbx,rax
   24e26:	mov    rdi,r8
   24e29:	call   11220 <memcpy@plt>
   24e2e:	mov    r8,rax
   24e31:	mov    rax,QWORD PTR [rbp+0x0]
   24e35:	test   rax,rax
   24e38:	je     24e70 <wget_list_append+0x80>
   24e3a:	mov    QWORD PTR [rbx],rax
   24e3d:	mov    rax,QWORD PTR [rax+0x8]
   24e41:	mov    QWORD PTR [rbx+0x8],rax
   24e45:	mov    rax,QWORD PTR [rbp+0x0]
   24e49:	mov    rax,QWORD PTR [rax+0x8]
   24e4d:	mov    QWORD PTR [rax],rbx
   24e50:	mov    rax,QWORD PTR [rbp+0x0]
   24e54:	mov    QWORD PTR [rax+0x8],rbx
   24e58:	add    rsp,0x8
   24e5c:	mov    rax,r8
   24e5f:	pop    rbx
   24e60:	pop    rbp
   24e61:	pop    r12
   24e63:	pop    r13
   24e65:	ret    
   24e66:	cs nop WORD PTR [rax+rax*1+0x0]
   24e70:	mov    QWORD PTR [rbp+0x0],rbx
   24e74:	mov    rax,r8
   24e77:	mov    QWORD PTR [rbx+0x8],rbx
   24e7b:	mov    QWORD PTR [rbx],rbx
   24e7e:	add    rsp,0x8
   24e82:	pop    rbx
   24e83:	pop    rbp
   24e84:	pop    r12
   24e86:	pop    r13
   24e88:	ret    
   24e89:	nop    DWORD PTR [rax+0x0]
   24e90:	add    rsp,0x8
   24e94:	xor    r8d,r8d
   24e97:	pop    rbx
   24e98:	mov    rax,r8
   24e9b:	pop    rbp
   24e9c:	pop    r12
   24e9e:	pop    r13
   24ea0:	ret    
   24ea1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   24eac:	nop    DWORD PTR [rax+0x0]

0000000000024eb0 <wget_list_prepend>:
   24eb0:	endbr64 
   24eb4:	mov    rax,QWORD PTR [rdi]
   24eb7:	test   rax,rax
   24eba:	je     24ec0 <wget_list_prepend+0x10>
   24ebc:	lea    rdi,[rax+0x8]
   24ec0:	jmp    10af0 <wget_list_append@plt>
   24ec5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000024ed0 <wget_list_remove>:
   24ed0:	endbr64 
   24ed4:	cmp    QWORD PTR [rdi],0x0
   24ed8:	je     24f48 <wget_list_remove+0x78>
   24eda:	mov    rax,QWORD PTR [rsi-0x8]
   24ede:	lea    r8,[rsi-0x10]
   24ee2:	cmp    rax,r8
   24ee5:	je     24f10 <wget_list_remove+0x40>
   24ee7:	mov    rdx,QWORD PTR [rsi-0x10]
   24eeb:	mov    QWORD PTR [rax],rdx
   24eee:	mov    QWORD PTR [rdx+0x8],rax
   24ef2:	cmp    QWORD PTR [rdi],r8
   24ef5:	je     24f30 <wget_list_remove+0x60>
   24ef7:	mov    rax,QWORD PTR [rip+0x510ea]        # 75fe8 <wget_free@@Base-0x1328>
   24efe:	mov    rdi,r8
   24f01:	mov    rax,QWORD PTR [rax]
   24f04:	jmp    rax
   24f06:	cs nop WORD PTR [rax+rax*1+0x0]
   24f10:	mov    rax,QWORD PTR [rip+0x510d1]        # 75fe8 <wget_free@@Base-0x1328>
   24f17:	mov    QWORD PTR [rdi],0x0
   24f1e:	mov    rdi,r8
   24f21:	mov    rax,QWORD PTR [rax]
   24f24:	jmp    rax
   24f26:	cs nop WORD PTR [rax+rax*1+0x0]
   24f30:	mov    rax,QWORD PTR [rip+0x510b1]        # 75fe8 <wget_free@@Base-0x1328>
   24f37:	mov    QWORD PTR [rdi],rdx
   24f3a:	mov    rdi,r8
   24f3d:	mov    rax,QWORD PTR [rax]
   24f40:	jmp    rax
   24f42:	nop    WORD PTR [rax+rax*1+0x0]
   24f48:	ret    
   24f49:	nop    DWORD PTR [rax+0x0]

0000000000024f50 <wget_list_getfirst>:
   24f50:	endbr64 
   24f54:	xor    edx,edx
   24f56:	lea    rax,[rdi+0x10]
   24f5a:	test   rdi,rdi
   24f5d:	cmove  rax,rdx
   24f61:	ret    
   24f62:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   24f6d:	nop    DWORD PTR [rax]

0000000000024f70 <wget_list_getlast>:
   24f70:	endbr64 
   24f74:	test   rdi,rdi
   24f77:	je     24f88 <wget_list_getlast+0x18>
   24f79:	mov    rax,QWORD PTR [rdi+0x8]
   24f7d:	add    rax,0x10
   24f81:	ret    
   24f82:	nop    WORD PTR [rax+rax*1+0x0]
   24f88:	xor    eax,eax
   24f8a:	ret    
   24f8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000024f90 <wget_list_getnext>:
   24f90:	endbr64 
   24f94:	xor    eax,eax
   24f96:	test   rdi,rdi
   24f99:	je     24fa3 <wget_list_getnext+0x13>
   24f9b:	mov    rax,QWORD PTR [rdi-0x10]
   24f9f:	add    rax,0x10
   24fa3:	ret    
   24fa4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   24faf:	nop

0000000000024fb0 <wget_list_browse>:
   24fb0:	endbr64 
   24fb4:	test   rdi,rdi
   24fb7:	je     24ff8 <wget_list_browse+0x48>
   24fb9:	push   r13
   24fbb:	push   r12
   24fbd:	mov    r12,rdx
   24fc0:	push   rbp
   24fc1:	mov    rbp,rsi
   24fc4:	push   rbx
   24fc5:	mov    rbx,rdi
   24fc8:	sub    rsp,0x8
   24fcc:	mov    r13,QWORD PTR [rdi+0x8]
   24fd0:	jmp    24fe0 <wget_list_browse+0x30>
   24fd2:	nop    WORD PTR [rax+rax*1+0x0]
   24fd8:	cmp    rbx,r13
   24fdb:	je     24fed <wget_list_browse+0x3d>
   24fdd:	mov    rbx,QWORD PTR [rbx]
   24fe0:	lea    rsi,[rbx+0x10]
   24fe4:	mov    rdi,r12
   24fe7:	call   rbp
   24fe9:	test   eax,eax
   24feb:	je     24fd8 <wget_list_browse+0x28>
   24fed:	add    rsp,0x8
   24ff1:	pop    rbx
   24ff2:	pop    rbp
   24ff3:	pop    r12
   24ff5:	pop    r13
   24ff7:	ret    
   24ff8:	mov    eax,0xffffffff
   24ffd:	ret    
   24ffe:	xchg   ax,ax

0000000000025000 <wget_list_free>:
   25000:	endbr64 
   25004:	mov    rsi,QWORD PTR [rdi]
   25007:	test   rsi,rsi
   2500a:	je     25030 <wget_list_free+0x30>
   2500c:	push   rbx
   2500d:	mov    rbx,rdi
   25010:	add    rsi,0x10
   25014:	mov    rdi,rbx
   25017:	call   11960 <wget_list_remove@plt>
   2501c:	mov    rsi,QWORD PTR [rbx]
   2501f:	test   rsi,rsi
   25022:	jne    25010 <wget_list_free+0x10>
   25024:	pop    rbx
   25025:	ret    
   25026:	cs nop WORD PTR [rax+rax*1+0x0]
   25030:	ret    
   25031:	cs nop WORD PTR [rax+rax*1+0x0]
   2503b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000025040 <wget_info_vprintf>:
   25040:	endbr64 
   25044:	mov    rax,QWORD PTR [rip+0x5254d]        # 77598 <info_logger+0x18>
   2504b:	mov    rdx,rsi
   2504e:	test   rax,rax
   25051:	je     25060 <wget_info_vprintf+0x20>
   25053:	mov    rsi,rdi
   25056:	lea    rdi,[rip+0x52523]        # 77580 <info_logger>
   2505d:	jmp    rax
   2505f:	nop
   25060:	ret    
   25061:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2506c:	nop    DWORD PTR [rax+0x0]

0000000000025070 <wget_info_printf>:
   25070:	endbr64 
   25074:	sub    rsp,0xd8
   2507b:	mov    QWORD PTR [rsp+0x28],rsi
   25080:	mov    QWORD PTR [rsp+0x30],rdx
   25085:	mov    QWORD PTR [rsp+0x38],rcx
   2508a:	mov    QWORD PTR [rsp+0x40],r8
   2508f:	mov    QWORD PTR [rsp+0x48],r9
   25094:	test   al,al
   25096:	je     250cf <wget_info_printf+0x5f>
   25098:	movaps XMMWORD PTR [rsp+0x50],xmm0
   2509d:	movaps XMMWORD PTR [rsp+0x60],xmm1
   250a2:	movaps XMMWORD PTR [rsp+0x70],xmm2
   250a7:	movaps XMMWORD PTR [rsp+0x80],xmm3
   250af:	movaps XMMWORD PTR [rsp+0x90],xmm4
   250b7:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   250bf:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   250c7:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   250cf:	mov    rax,QWORD PTR fs:0x28
   250d8:	mov    QWORD PTR [rsp+0x18],rax
   250dd:	xor    eax,eax
   250df:	cmp    QWORD PTR [rip+0x524b1],0x0        # 77598 <info_logger+0x18>
   250e7:	je     25122 <wget_info_printf+0xb2>
   250e9:	lea    rax,[rsp+0xe0]
   250f1:	mov    rsi,rdi
   250f4:	mov    rdx,rsp
   250f7:	mov    DWORD PTR [rsp],0x8
   250fe:	mov    QWORD PTR [rsp+0x8],rax
   25103:	lea    rax,[rsp+0x20]
   25108:	lea    rdi,[rip+0x52471]        # 77580 <info_logger>
   2510f:	mov    DWORD PTR [rsp+0x4],0x30
   25117:	mov    QWORD PTR [rsp+0x10],rax
   2511c:	call   QWORD PTR [rip+0x52476]        # 77598 <info_logger+0x18>
   25122:	mov    rax,QWORD PTR [rsp+0x18]
   25127:	sub    rax,QWORD PTR fs:0x28
   25130:	jne    2513a <wget_info_printf+0xca>
   25132:	add    rsp,0xd8
   25139:	ret    
   2513a:	call   11760 <__stack_chk_fail@plt>
   2513f:	nop

0000000000025140 <wget_error_vprintf>:
   25140:	endbr64 
   25144:	mov    rax,QWORD PTR [rip+0x5240d]        # 77558 <error_logger+0x18>
   2514b:	mov    rdx,rsi
   2514e:	test   rax,rax
   25151:	je     25160 <wget_error_vprintf+0x20>
   25153:	mov    rsi,rdi
   25156:	lea    rdi,[rip+0x523e3]        # 77540 <error_logger>
   2515d:	jmp    rax
   2515f:	nop
   25160:	ret    
   25161:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2516c:	nop    DWORD PTR [rax+0x0]

0000000000025170 <wget_error_printf>:
   25170:	endbr64 
   25174:	sub    rsp,0xd8
   2517b:	mov    QWORD PTR [rsp+0x28],rsi
   25180:	mov    QWORD PTR [rsp+0x30],rdx
   25185:	mov    QWORD PTR [rsp+0x38],rcx
   2518a:	mov    QWORD PTR [rsp+0x40],r8
   2518f:	mov    QWORD PTR [rsp+0x48],r9
   25194:	test   al,al
   25196:	je     251cf <wget_error_printf+0x5f>
   25198:	movaps XMMWORD PTR [rsp+0x50],xmm0
   2519d:	movaps XMMWORD PTR [rsp+0x60],xmm1
   251a2:	movaps XMMWORD PTR [rsp+0x70],xmm2
   251a7:	movaps XMMWORD PTR [rsp+0x80],xmm3
   251af:	movaps XMMWORD PTR [rsp+0x90],xmm4
   251b7:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   251bf:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   251c7:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   251cf:	mov    rax,QWORD PTR fs:0x28
   251d8:	mov    QWORD PTR [rsp+0x18],rax
   251dd:	xor    eax,eax
   251df:	cmp    QWORD PTR [rip+0x52371],0x0        # 77558 <error_logger+0x18>
   251e7:	je     25222 <wget_error_printf+0xb2>
   251e9:	lea    rax,[rsp+0xe0]
   251f1:	mov    rsi,rdi
   251f4:	mov    rdx,rsp
   251f7:	mov    DWORD PTR [rsp],0x8
   251fe:	mov    QWORD PTR [rsp+0x8],rax
   25203:	lea    rax,[rsp+0x20]
   25208:	lea    rdi,[rip+0x52331]        # 77540 <error_logger>
   2520f:	mov    DWORD PTR [rsp+0x4],0x30
   25217:	mov    QWORD PTR [rsp+0x10],rax
   2521c:	call   QWORD PTR [rip+0x52336]        # 77558 <error_logger+0x18>
   25222:	mov    rax,QWORD PTR [rsp+0x18]
   25227:	sub    rax,QWORD PTR fs:0x28
   25230:	jne    2523a <wget_error_printf+0xca>
   25232:	add    rsp,0xd8
   25239:	ret    
   2523a:	call   11760 <__stack_chk_fail@plt>
   2523f:	nop

0000000000025240 <wget_error_printf_exit>:
   25240:	endbr64 
   25244:	push   rax
   25245:	pop    rax
   25246:	sub    rsp,0xd8
   2524d:	mov    QWORD PTR [rsp+0x28],rsi
   25252:	mov    QWORD PTR [rsp+0x30],rdx
   25257:	mov    QWORD PTR [rsp+0x38],rcx
   2525c:	mov    QWORD PTR [rsp+0x40],r8
   25261:	mov    QWORD PTR [rsp+0x48],r9
   25266:	test   al,al
   25268:	je     252a1 <wget_error_printf_exit+0x61>
   2526a:	movaps XMMWORD PTR [rsp+0x50],xmm0
   2526f:	movaps XMMWORD PTR [rsp+0x60],xmm1
   25274:	movaps XMMWORD PTR [rsp+0x70],xmm2
   25279:	movaps XMMWORD PTR [rsp+0x80],xmm3
   25281:	movaps XMMWORD PTR [rsp+0x90],xmm4
   25289:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   25291:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   25299:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   252a1:	mov    rax,QWORD PTR fs:0x28
   252aa:	mov    QWORD PTR [rsp+0x18],rax
   252af:	xor    eax,eax
   252b1:	cmp    QWORD PTR [rip+0x5229f],0x0        # 77558 <error_logger+0x18>
   252b9:	je     252f4 <wget_error_printf_exit+0xb4>
   252bb:	lea    rax,[rsp+0xe0]
   252c3:	mov    rsi,rdi
   252c6:	mov    rdx,rsp
   252c9:	mov    DWORD PTR [rsp],0x8
   252d0:	mov    QWORD PTR [rsp+0x8],rax
   252d5:	lea    rax,[rsp+0x20]
   252da:	lea    rdi,[rip+0x5225f]        # 77540 <error_logger>
   252e1:	mov    DWORD PTR [rsp+0x4],0x30
   252e9:	mov    QWORD PTR [rsp+0x10],rax
   252ee:	call   QWORD PTR [rip+0x52264]        # 77558 <error_logger+0x18>
   252f4:	mov    edi,0x1
   252f9:	call   11910 <exit@plt>
   252fe:	xchg   ax,ax

0000000000025300 <wget_debug_vprintf>:
   25300:	endbr64 
   25304:	mov    rax,QWORD PTR [rip+0x5220d]        # 77518 <debug_logger+0x18>
   2530b:	mov    rdx,rsi
   2530e:	test   rax,rax
   25311:	je     25320 <wget_debug_vprintf+0x20>
   25313:	mov    rsi,rdi
   25316:	lea    rdi,[rip+0x521e3]        # 77500 <debug_logger>
   2531d:	jmp    rax
   2531f:	nop
   25320:	ret    
   25321:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2532c:	nop    DWORD PTR [rax+0x0]

0000000000025330 <wget_debug_printf>:
   25330:	endbr64 
   25334:	sub    rsp,0xd8
   2533b:	mov    QWORD PTR [rsp+0x28],rsi
   25340:	mov    QWORD PTR [rsp+0x30],rdx
   25345:	mov    QWORD PTR [rsp+0x38],rcx
   2534a:	mov    QWORD PTR [rsp+0x40],r8
   2534f:	mov    QWORD PTR [rsp+0x48],r9
   25354:	test   al,al
   25356:	je     2538f <wget_debug_printf+0x5f>
   25358:	movaps XMMWORD PTR [rsp+0x50],xmm0
   2535d:	movaps XMMWORD PTR [rsp+0x60],xmm1
   25362:	movaps XMMWORD PTR [rsp+0x70],xmm2
   25367:	movaps XMMWORD PTR [rsp+0x80],xmm3
   2536f:	movaps XMMWORD PTR [rsp+0x90],xmm4
   25377:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   2537f:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   25387:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   2538f:	mov    rax,QWORD PTR fs:0x28
   25398:	mov    QWORD PTR [rsp+0x18],rax
   2539d:	xor    eax,eax
   2539f:	cmp    QWORD PTR [rip+0x52171],0x0        # 77518 <debug_logger+0x18>
   253a7:	je     253e2 <wget_debug_printf+0xb2>
   253a9:	lea    rax,[rsp+0xe0]
   253b1:	mov    rsi,rdi
   253b4:	mov    rdx,rsp
   253b7:	mov    DWORD PTR [rsp],0x8
   253be:	mov    QWORD PTR [rsp+0x8],rax
   253c3:	lea    rax,[rsp+0x20]
   253c8:	lea    rdi,[rip+0x52131]        # 77500 <debug_logger>
   253cf:	mov    DWORD PTR [rsp+0x4],0x30
   253d7:	mov    QWORD PTR [rsp+0x10],rax
   253dc:	call   QWORD PTR [rip+0x52136]        # 77518 <debug_logger+0x18>
   253e2:	mov    rax,QWORD PTR [rsp+0x18]
   253e7:	sub    rax,QWORD PTR fs:0x28
   253f0:	jne    253fa <wget_debug_printf+0xca>
   253f2:	add    rsp,0xd8
   253f9:	ret    
   253fa:	call   11760 <__stack_chk_fail@plt>
   253ff:	nop

0000000000025400 <wget_debug_write>:
   25400:	endbr64 
   25404:	mov    rax,QWORD PTR [rip+0x52115]        # 77520 <debug_logger+0x20>
   2540b:	mov    rdx,rsi
   2540e:	test   rax,rax
   25411:	je     25420 <wget_debug_write+0x20>
   25413:	mov    rsi,rdi
   25416:	lea    rdi,[rip+0x520e3]        # 77500 <debug_logger>
   2541d:	jmp    rax
   2541f:	nop
   25420:	ret    
   25421:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2542c:	nop    DWORD PTR [rax+0x0]

0000000000025430 <wget_get_logger>:
   25430:	endbr64 
   25434:	lea    rax,[rip+0x520c5]        # 77500 <debug_logger>
   2543b:	cmp    edi,0x3
   2543e:	je     2545f <wget_get_logger+0x2f>
   25440:	lea    rax,[rip+0x520f9]        # 77540 <error_logger>
   25447:	cmp    edi,0x2
   2544a:	je     2545f <wget_get_logger+0x2f>
   2544c:	cmp    edi,0x1
   2544f:	lea    rax,[rip+0x5212a]        # 77580 <info_logger>
   25456:	mov    edx,0x0
   2545b:	cmovne rax,rdx
   2545f:	ret    

0000000000025460 <logger_write_func>:
   25460:	endbr64 
   25464:	mov    r8,rdi
   25467:	mov    rdi,rsi
   2546a:	mov    rsi,rdx
   2546d:	jmp    QWORD PTR [r8+0x10]
   25471:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2547c:	nop    DWORD PTR [rax+0x0]

0000000000025480 <logger_vprintf_func>:
   25480:	endbr64 
   25484:	push   r15
   25486:	push   r14
   25488:	push   r13
   2548a:	push   r12
   2548c:	push   rbp
   2548d:	push   rbx
   2548e:	sub    rsp,0x1000
   25495:	or     QWORD PTR [rsp],0x0
   2549a:	sub    rsp,0x38
   2549e:	mov    rbp,rsp
   254a1:	mov    r12,rdi
   254a4:	mov    r13,rsi
   254a7:	mov    r14,rdx
   254aa:	mov    rax,QWORD PTR fs:0x28
   254b3:	mov    QWORD PTR [rsp+0x1028],rax
   254bb:	xor    eax,eax
   254bd:	call   104b0 <__errno_location@plt>
   254c2:	lea    rsi,[rsp+0x20]
   254c7:	mov    edx,0x1000
   254cc:	mov    rdi,rbp
   254cf:	mov    r15d,DWORD PTR [rax]
   254d2:	mov    rbx,rax
   254d5:	call   108d0 <wget_buffer_init@plt>
   254da:	mov    rdx,r14
   254dd:	mov    rsi,r13
   254e0:	mov    rdi,rbp
   254e3:	call   11080 <wget_buffer_vprintf@plt>
   254e8:	mov    rsi,QWORD PTR [rsp+0x8]
   254ed:	mov    rdi,QWORD PTR [rsp]
   254f1:	call   QWORD PTR [r12+0x10]
   254f6:	mov    rdi,rbp
   254f9:	call   11300 <wget_buffer_deinit@plt>
   254fe:	mov    DWORD PTR [rbx],r15d
   25501:	mov    rax,QWORD PTR [rsp+0x1028]
   25509:	sub    rax,QWORD PTR fs:0x28
   25512:	jne    25526 <logger_vprintf_func+0xa6>
   25514:	add    rsp,0x1038
   2551b:	pop    rbx
   2551c:	pop    rbp
   2551d:	pop    r12
   2551f:	pop    r13
   25521:	pop    r14
   25523:	pop    r15
   25525:	ret    
   25526:	call   11760 <__stack_chk_fail@plt>
   2552b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000025530 <logger_write_file>:
   25530:	endbr64 
   25534:	mov    r8,rdi
   25537:	mov    rdi,rsi
   2553a:	mov    esi,0x1
   2553f:	mov    rcx,QWORD PTR [r8]
   25542:	jmp    12730 <fwrite@plt>
   25547:	nop    WORD PTR [rax+rax*1+0x0]

0000000000025550 <logger_vfprintf>:
   25550:	push   r15
   25552:	push   r14
   25554:	push   r13
   25556:	push   r12
   25558:	push   rbp
   25559:	push   rbx
   2555a:	sub    rsp,0x1000
   25561:	or     QWORD PTR [rsp],0x0
   25566:	sub    rsp,0x38
   2556a:	mov    rbp,rsp
   2556d:	mov    r12,rdi
   25570:	mov    r13,rsi
   25573:	mov    r14,rdx
   25576:	mov    rax,QWORD PTR fs:0x28
   2557f:	mov    QWORD PTR [rsp+0x1028],rax
   25587:	xor    eax,eax
   25589:	call   104b0 <__errno_location@plt>
   2558e:	lea    rsi,[rsp+0x20]
   25593:	mov    edx,0x1000
   25598:	mov    rdi,rbp
   2559b:	mov    r15d,DWORD PTR [rax]
   2559e:	mov    rbx,rax
   255a1:	call   108d0 <wget_buffer_init@plt>
   255a6:	mov    rdx,r14
   255a9:	mov    rsi,r13
   255ac:	mov    rdi,rbp
   255af:	call   11080 <wget_buffer_vprintf@plt>
   255b4:	mov    rdx,QWORD PTR [rsp+0x8]
   255b9:	mov    rdi,QWORD PTR [rsp]
   255bd:	mov    rcx,r12
   255c0:	mov    esi,0x1
   255c5:	call   12730 <fwrite@plt>
   255ca:	mov    rdi,rbp
   255cd:	call   11300 <wget_buffer_deinit@plt>
   255d2:	mov    DWORD PTR [rbx],r15d
   255d5:	mov    rax,QWORD PTR [rsp+0x1028]
   255dd:	sub    rax,QWORD PTR fs:0x28
   255e6:	jne    255fa <logger_vfprintf+0xaa>
   255e8:	add    rsp,0x1038
   255ef:	pop    rbx
   255f0:	pop    rbp
   255f1:	pop    r12
   255f3:	pop    r13
   255f5:	pop    r14
   255f7:	pop    r15
   255f9:	ret    
   255fa:	call   11760 <__stack_chk_fail@plt>
   255ff:	nop

0000000000025600 <logger_vprintf_file>:
   25600:	endbr64 
   25604:	mov    rdi,QWORD PTR [rdi]
   25607:	jmp    25550 <logger_vfprintf>
   2560c:	nop    DWORD PTR [rax+0x0]

0000000000025610 <logger_write_fname>:
   25610:	endbr64 
   25614:	push   r13
   25616:	mov    r13,rdx
   25619:	push   r12
   2561b:	mov    r12,rsi
   2561e:	lea    rsi,[rip+0x26ad8]        # 4c0fd <__func__.0+0x1d>
   25625:	push   rbp
   25626:	mov    rdi,QWORD PTR [rdi+0x8]
   2562a:	call   486d0 <rpl_fopen>
   2562f:	test   rax,rax
   25632:	je     25657 <logger_write_fname+0x47>
   25634:	mov    rbp,rax
   25637:	mov    rdi,r12
   2563a:	mov    rdx,r13
   2563d:	mov    rcx,rax
   25640:	mov    esi,0x1
   25645:	call   12730 <fwrite@plt>
   2564a:	mov    rdi,rbp
   2564d:	pop    rbp
   2564e:	pop    r12
   25650:	pop    r13
   25652:	jmp    404c0 <rpl_fclose>
   25657:	pop    rbp
   25658:	pop    r12
   2565a:	pop    r13
   2565c:	ret    
   2565d:	nop    DWORD PTR [rax]

0000000000025660 <logger_vprintf_fname>:
   25660:	endbr64 
   25664:	push   r13
   25666:	mov    r13,rdx
   25669:	push   r12
   2566b:	mov    r12,rsi
   2566e:	lea    rsi,[rip+0x26a88]        # 4c0fd <__func__.0+0x1d>
   25675:	push   rbp
   25676:	mov    rdi,QWORD PTR [rdi+0x8]
   2567a:	call   486d0 <rpl_fopen>
   2567f:	test   rax,rax
   25682:	je     256a2 <logger_vprintf_fname+0x42>
   25684:	mov    rbp,rax
   25687:	mov    rdx,r13
   2568a:	mov    rsi,r12
   2568d:	mov    rdi,rax
   25690:	call   25550 <logger_vfprintf>
   25695:	mov    rdi,rbp
   25698:	pop    rbp
   25699:	pop    r12
   2569b:	pop    r13
   2569d:	jmp    404c0 <rpl_fclose>
   256a2:	pop    rbp
   256a3:	pop    r12
   256a5:	pop    r13
   256a7:	ret    
   256a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000256b0 <wget_logger_set_func>:
   256b0:	endbr64 
   256b4:	test   rdi,rdi
   256b7:	je     256da <wget_logger_set_func+0x2a>
   256b9:	mov    QWORD PTR [rdi+0x10],rsi
   256bd:	xor    eax,eax
   256bf:	test   rsi,rsi
   256c2:	je     256d2 <wget_logger_set_func+0x22>
   256c4:	lea    rax,[rip+0xfffffffffffffdb5]        # 25480 <logger_vprintf_func>
   256cb:	lea    rsi,[rip+0xfffffffffffffd8e]        # 25460 <logger_write_func>
   256d2:	mov    QWORD PTR [rdi+0x18],rax
   256d6:	mov    QWORD PTR [rdi+0x20],rsi
   256da:	ret    
   256db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000256e0 <wget_logger_get_func>:
   256e0:	endbr64 
   256e4:	test   rdi,rdi
   256e7:	je     256f0 <wget_logger_get_func+0x10>
   256e9:	mov    rax,QWORD PTR [rdi+0x10]
   256ed:	ret    
   256ee:	xchg   ax,ax
   256f0:	xor    eax,eax
   256f2:	ret    
   256f3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   256fe:	xchg   ax,ax

0000000000025700 <wget_logger_set_stream>:
   25700:	endbr64 
   25704:	test   rdi,rdi
   25707:	je     2572f <wget_logger_set_stream+0x2f>
   25709:	xor    ecx,ecx
   2570b:	lea    rdx,[rip+0xfffffffffffffeee]        # 25600 <logger_vprintf_file>
   25712:	test   rsi,rsi
   25715:	mov    QWORD PTR [rdi],rsi
   25718:	lea    rax,[rip+0xfffffffffffffe11]        # 25530 <logger_write_file>
   2571f:	cmove  rdx,rcx
   25723:	cmove  rax,rcx
   25727:	mov    QWORD PTR [rdi+0x18],rdx
   2572b:	mov    QWORD PTR [rdi+0x20],rax
   2572f:	ret    

0000000000025730 <wget_logger_get_stream>:
   25730:	endbr64 
   25734:	test   rdi,rdi
   25737:	je     25740 <wget_logger_get_stream+0x10>
   25739:	mov    rax,QWORD PTR [rdi]
   2573c:	ret    
   2573d:	nop    DWORD PTR [rax]
   25740:	xor    eax,eax
   25742:	ret    
   25743:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2574e:	xchg   ax,ax

0000000000025750 <wget_logger_set_file>:
   25750:	endbr64 
   25754:	test   rdi,rdi
   25757:	je     25780 <wget_logger_set_file+0x30>
   25759:	xor    ecx,ecx
   2575b:	lea    rdx,[rip+0xfffffffffffffefe]        # 25660 <logger_vprintf_fname>
   25762:	test   rsi,rsi
   25765:	mov    QWORD PTR [rdi+0x8],rsi
   25769:	lea    rax,[rip+0xfffffffffffffea0]        # 25610 <logger_write_fname>
   25770:	cmove  rdx,rcx
   25774:	cmove  rax,rcx
   25778:	mov    QWORD PTR [rdi+0x18],rdx
   2577c:	mov    QWORD PTR [rdi+0x20],rax
   25780:	ret    
   25781:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2578c:	nop    DWORD PTR [rax+0x0]

0000000000025790 <wget_logger_get_file>:
   25790:	endbr64 
   25794:	test   rdi,rdi
   25797:	je     257a0 <wget_logger_get_file+0x10>
   25799:	mov    rax,QWORD PTR [rdi+0x8]
   2579d:	ret    
   2579e:	xchg   ax,ax
   257a0:	xor    eax,eax
   257a2:	ret    
   257a3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   257ae:	xchg   ax,ax

00000000000257b0 <wget_logger_is_active>:
   257b0:	endbr64 
   257b4:	cmp    QWORD PTR [rdi+0x18],0x0
   257b9:	setne  al
   257bc:	ret    
   257bd:	nop    DWORD PTR [rax]

00000000000257c0 <wget_memdup>:
   257c0:	endbr64 
   257c4:	test   rdi,rdi
   257c7:	je     25810 <wget_memdup+0x50>
   257c9:	push   r12
   257cb:	mov    r12,rsi
   257ce:	push   rbp
   257cf:	mov    rbp,rdi
   257d2:	mov    rdi,rsi
   257d5:	sub    rsp,0x8
   257d9:	mov    rax,QWORD PTR [rip+0x507f0]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   257e0:	call   QWORD PTR [rax]
   257e2:	mov    rdi,rax
   257e5:	test   rax,rax
   257e8:	je     25800 <wget_memdup+0x40>
   257ea:	add    rsp,0x8
   257ee:	mov    rdx,r12
   257f1:	mov    rsi,rbp
   257f4:	pop    rbp
   257f5:	pop    r12
   257f7:	jmp    11220 <memcpy@plt>
   257fc:	nop    DWORD PTR [rax+0x0]
   25800:	add    rsp,0x8
   25804:	xor    eax,eax
   25806:	pop    rbp
   25807:	pop    r12
   25809:	ret    
   2580a:	nop    WORD PTR [rax+rax*1+0x0]
   25810:	xor    eax,eax
   25812:	ret    
   25813:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2581e:	xchg   ax,ax

0000000000025820 <wget_strdup>:
   25820:	endbr64 
   25824:	test   rdi,rdi
   25827:	je     25840 <wget_strdup+0x20>
   25829:	push   rbp
   2582a:	mov    rbp,rdi
   2582d:	call   10ab0 <strlen@plt>
   25832:	mov    rdi,rbp
   25835:	pop    rbp
   25836:	lea    rsi,[rax+0x1]
   2583a:	jmp    10dc0 <wget_memdup@plt>
   2583f:	nop
   25840:	xor    eax,eax
   25842:	ret    
   25843:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2584e:	xchg   ax,ax

0000000000025850 <wget_strmemdup>:
   25850:	endbr64 
   25854:	test   rdi,rdi
   25857:	je     258a0 <wget_strmemdup+0x50>
   25859:	push   rbp
   2585a:	mov    rbp,rdi
   2585d:	lea    rdi,[rsi+0x1]
   25861:	push   rbx
   25862:	mov    rbx,rsi
   25865:	sub    rsp,0x8
   25869:	mov    rax,QWORD PTR [rip+0x50760]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   25870:	call   QWORD PTR [rax]
   25872:	mov    rdi,rax
   25875:	test   rax,rax
   25878:	je     25890 <wget_strmemdup+0x40>
   2587a:	mov    rdx,rbx
   2587d:	mov    rsi,rbp
   25880:	call   11220 <memcpy@plt>
   25885:	mov    BYTE PTR [rax+rbx*1],0x0
   25889:	add    rsp,0x8
   2588d:	pop    rbx
   2588e:	pop    rbp
   2588f:	ret    
   25890:	add    rsp,0x8
   25894:	xor    eax,eax
   25896:	pop    rbx
   25897:	pop    rbp
   25898:	ret    
   25899:	nop    DWORD PTR [rax+0x0]
   258a0:	xor    eax,eax
   258a2:	ret    
   258a3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   258ae:	xchg   ax,ax

00000000000258b0 <wget_strmemcpy>:
   258b0:	endbr64 
   258b4:	test   rdi,rdi
   258b7:	je     258f8 <wget_strmemcpy+0x48>
   258b9:	mov    rax,rsi
   258bc:	test   rsi,rsi
   258bf:	je     258f8 <wget_strmemcpy+0x48>
   258c1:	push   rbx
   258c2:	mov    rbx,rcx
   258c5:	test   rcx,rcx
   258c8:	je     25900 <wget_strmemcpy+0x50>
   258ca:	cmp    rax,rcx
   258cd:	mov    rsi,rdx
   258d0:	lea    rdx,[rax-0x1]
   258d4:	cmovbe rbx,rdx
   258d8:	xor    eax,eax
   258da:	test   rsi,rsi
   258dd:	je     258f0 <wget_strmemcpy+0x40>
   258df:	mov    rdx,rbx
   258e2:	call   12110 <memmove@plt>
   258e7:	mov    rdi,rax
   258ea:	mov    rax,rbx
   258ed:	add    rdi,rbx
   258f0:	mov    BYTE PTR [rdi],0x0
   258f3:	pop    rbx
   258f4:	ret    
   258f5:	nop    DWORD PTR [rax]
   258f8:	xor    eax,eax
   258fa:	ret    
   258fb:	nop    DWORD PTR [rax+rax*1+0x0]
   25900:	xor    eax,eax
   25902:	jmp    258f0 <wget_strmemcpy+0x40>
   25904:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2590f:	nop

0000000000025910 <wget_strmemcpy_a>:
   25910:	endbr64 
   25914:	push   rbp
   25915:	mov    rbp,rdx
   25918:	push   rbx
   25919:	mov    rbx,rcx
   2591c:	sub    rsp,0x8
   25920:	cmp    rcx,rsi
   25923:	jb     25960 <wget_strmemcpy_a+0x50>
   25925:	mov    rax,QWORD PTR [rip+0x506a4]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   2592c:	lea    rdi,[rcx+0x1]
   25930:	call   QWORD PTR [rax]
   25932:	mov    r8,rax
   25935:	test   rax,rax
   25938:	je     2594f <wget_strmemcpy_a+0x3f>
   2593a:	mov    rdi,r8
   2593d:	mov    rdx,rbx
   25940:	mov    rsi,rbp
   25943:	call   12110 <memmove@plt>
   25948:	mov    BYTE PTR [rax+rbx*1],0x0
   2594c:	mov    r8,rax
   2594f:	add    rsp,0x8
   25953:	mov    rax,r8
   25956:	pop    rbx
   25957:	pop    rbp
   25958:	ret    
   25959:	nop    DWORD PTR [rax+0x0]
   25960:	mov    r8,rdi
   25963:	jmp    2593a <wget_strmemcpy_a+0x2a>
   25965:	cs nop WORD PTR [rax+rax*1+0x0]
   2596f:	nop

0000000000025970 <compare_mirror>:
   25970:	endbr64 
   25974:	mov    rax,QWORD PTR [rdi]
   25977:	mov    rdx,QWORD PTR [rsi]
   2597a:	mov    eax,DWORD PTR [rax+0x8]
   2597d:	sub    eax,DWORD PTR [rdx+0x8]
   25980:	ret    
   25981:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2598c:	nop    DWORD PTR [rax+0x0]

0000000000025990 <add_piece>:
   25990:	push   r13
   25992:	push   r12
   25994:	push   rbp
   25995:	push   rbx
   25996:	mov    rbx,rdi
   25999:	mov    rdi,rsi
   2599c:	lea    rsi,[rip+0x2797d]        # 4d320 <iri_ctype+0x100>
   259a3:	lea    rbp,[rbx+0xc]
   259a7:	mov    rdx,rbp
   259aa:	sub    rsp,0xb8
   259b1:	mov    r12,QWORD PTR [rbx]
   259b4:	mov    rax,QWORD PTR fs:0x28
   259bd:	mov    QWORD PTR [rsp+0xa8],rax
   259c5:	xor    eax,eax
   259c7:	call   11580 <__isoc99_sscanf@plt>
   259cc:	mov    rax,QWORD PTR [rbx+0xa8]
   259d3:	test   rax,rax
   259d6:	je     259e1 <add_piece+0x51>
   259d8:	cmp    BYTE PTR [rbx+0x8c],0x0
   259df:	jne    25a10 <add_piece+0x80>
   259e1:	mov    BYTE PTR [rbx+0xc],0x0
   259e5:	mov    rax,QWORD PTR [rsp+0xa8]
   259ed:	sub    rax,QWORD PTR fs:0x28
   259f6:	jne    25add <add_piece+0x14d>
   259fc:	add    rsp,0xb8
   25a03:	pop    rbx
   25a04:	pop    rbp
   25a05:	pop    r12
   25a07:	pop    r13
   25a09:	ret    
   25a0a:	nop    WORD PTR [rax+rax*1+0x0]
   25a10:	cmp    BYTE PTR [rbx+0xc],0x0
   25a14:	je     259e1 <add_piece+0x51>
   25a16:	cmp    QWORD PTR [r12+0x18],0x0
   25a1c:	je     25ac0 <add_piece+0x130>
   25a22:	mov    r13,rsp
   25a25:	lea    rsi,[rbx+0x8c]
   25a2c:	mov    edx,0x10
   25a31:	mov    QWORD PTR [rsp+0xa0],rax
   25a39:	mov    rdi,r13
   25a3c:	call   11860 <wget_strscpy@plt>
   25a41:	mov    rsi,rbp
   25a44:	mov    edx,0x81
   25a49:	lea    rdi,[rsp+0x10]
   25a4e:	call   11860 <wget_strscpy@plt>
   25a53:	mov    rbp,QWORD PTR [r12+0x18]
   25a58:	mov    rdi,rbp
   25a5b:	call   10e90 <wget_vector_size@plt>
   25a60:	mov    rdi,rbp
   25a63:	lea    esi,[rax-0x1]
   25a66:	call   10c00 <wget_vector_get@plt>
   25a6b:	xor    ecx,ecx
   25a6d:	test   rax,rax
   25a70:	je     25a9c <add_piece+0x10c>
   25a72:	mov    rdx,QWORD PTR [rax+0xa0]
   25a79:	test   rdx,rdx
   25a7c:	jle    25a9c <add_piece+0x10c>
   25a7e:	mov    rsi,QWORD PTR [rax+0x98]
   25a85:	movabs rax,0x7fffffffffffffff
   25a8f:	sub    rax,rdx
   25a92:	add    rdx,rsi
   25a95:	cmp    rsi,rax
   25a98:	cmovle rcx,rdx
   25a9c:	mov    edx,0xa8
   25aa1:	mov    rsi,r13
   25aa4:	mov    rdi,rbp
   25aa7:	mov    QWORD PTR [rsp+0x98],rcx
   25aaf:	call   11a20 <wget_vector_add_memdup@plt>
   25ab4:	jmp    259e1 <add_piece+0x51>
   25ab9:	nop    DWORD PTR [rax+0x0]
   25ac0:	xor    esi,esi
   25ac2:	mov    edi,0x20
   25ac7:	call   11f00 <wget_vector_create@plt>
   25acc:	mov    QWORD PTR [r12+0x18],rax
   25ad1:	mov    rax,QWORD PTR [rbx+0xa8]
   25ad8:	jmp    25a22 <add_piece+0x92>
   25add:	call   11760 <__stack_chk_fail@plt>
   25ae2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   25aed:	nop    DWORD PTR [rax]

0000000000025af0 <add_file_hash>:
   25af0:	push   r13
   25af2:	push   r12
   25af4:	push   rbp
   25af5:	push   rbx
   25af6:	mov    rbx,rdi
   25af9:	mov    rdi,rsi
   25afc:	lea    rsi,[rip+0x2781d]        # 4d320 <iri_ctype+0x100>
   25b03:	lea    rbp,[rbx+0xc]
   25b07:	mov    rdx,rbp
   25b0a:	sub    rsp,0xa8
   25b11:	mov    r12,QWORD PTR [rbx]
   25b14:	mov    rax,QWORD PTR fs:0x28
   25b1d:	mov    QWORD PTR [rsp+0x98],rax
   25b25:	xor    eax,eax
   25b27:	call   11580 <__isoc99_sscanf@plt>
   25b2c:	cmp    BYTE PTR [rbx+0x8c],0x0
   25b33:	je     25b3b <add_file_hash+0x4b>
   25b35:	cmp    BYTE PTR [rbx+0xc],0x0
   25b39:	jne    25b70 <add_file_hash+0x80>
   25b3b:	mov    BYTE PTR [rbx+0xc],0x0
   25b3f:	mov    BYTE PTR [rbx+0x8c],0x0
   25b46:	mov    rax,QWORD PTR [rsp+0x98]
   25b4e:	sub    rax,QWORD PTR fs:0x28
   25b57:	jne    25bde <add_file_hash+0xee>
   25b5d:	add    rsp,0xa8
   25b64:	pop    rbx
   25b65:	pop    rbp
   25b66:	pop    r12
   25b68:	pop    r13
   25b6a:	ret    
   25b6b:	nop    DWORD PTR [rax+rax*1+0x0]
   25b70:	xor    eax,eax
   25b72:	mov    rdi,rsp
   25b75:	mov    ecx,0x12
   25b7a:	mov    r13,rsp
   25b7d:	rep stos QWORD PTR es:[rdi],rax
   25b80:	lea    rsi,[rbx+0x8c]
   25b87:	mov    edx,0x10
   25b8c:	mov    BYTE PTR [rdi],0x0
   25b8f:	mov    rdi,r13
   25b92:	call   11860 <wget_strscpy@plt>
   25b97:	lea    rdi,[rsp+0x10]
   25b9c:	mov    edx,0x81
   25ba1:	mov    rsi,rbp
   25ba4:	call   11860 <wget_strscpy@plt>
   25ba9:	mov    rdi,QWORD PTR [r12+0x10]
   25bae:	test   rdi,rdi
   25bb1:	je     25bc8 <add_file_hash+0xd8>
   25bb3:	mov    edx,0x91
   25bb8:	mov    rsi,r13
   25bbb:	call   11a20 <wget_vector_add_memdup@plt>
   25bc0:	jmp    25b3b <add_file_hash+0x4b>
   25bc5:	nop    DWORD PTR [rax]
   25bc8:	mov    edi,0x4
   25bcd:	xor    esi,esi
   25bcf:	call   11f00 <wget_vector_create@plt>
   25bd4:	mov    QWORD PTR [r12+0x10],rax
   25bd9:	mov    rdi,rax
   25bdc:	jmp    25bb3 <add_file_hash+0xc3>
   25bde:	call   11760 <__stack_chk_fail@plt>
   25be3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   25bee:	xchg   ax,ax

0000000000025bf0 <add_mirror>:
   25bf0:	push   r12
   25bf2:	push   rbp
   25bf3:	mov    rbp,rsi
   25bf6:	xor    esi,esi
   25bf8:	push   rbx
   25bf9:	mov    rbx,rdi
   25bfc:	mov    rdi,rbp
   25bff:	sub    rsp,0x10
   25c03:	mov    rax,QWORD PTR fs:0x28
   25c0c:	mov    QWORD PTR [rsp+0x8],rax
   25c11:	xor    eax,eax
   25c13:	call   11000 <wget_iri_parse@plt>
   25c18:	mov    QWORD PTR [rsp],rax
   25c1c:	test   rax,rax
   25c1f:	je     25c89 <add_mirror+0x99>
   25c21:	mov    rdi,rax
   25c24:	call   11bd0 <wget_iri_supported@plt>
   25c29:	test   al,al
   25c2b:	je     25ca8 <add_mirror+0xb8>
   25c2d:	mov    rax,QWORD PTR [rip+0x5030c]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   25c34:	mov    r12,QWORD PTR [rbx]
   25c37:	mov    esi,0x18
   25c3c:	mov    edi,0x1
   25c41:	call   QWORD PTR [rax]
   25c43:	lea    rsi,[rbx+0x9c]
   25c4a:	mov    edx,0x8
   25c4f:	lea    rdi,[rax+0xc]
   25c53:	mov    rbp,rax
   25c56:	call   11860 <wget_strscpy@plt>
   25c5b:	mov    eax,DWORD PTR [rbx+0x8]
   25c5e:	mov    rdi,QWORD PTR [r12+0x8]
   25c63:	mov    DWORD PTR [rbp+0x8],eax
   25c66:	mov    rax,QWORD PTR [rsp]
   25c6a:	mov    QWORD PTR [rbp+0x0],rax
   25c6e:	test   rdi,rdi
   25c71:	je     25cd8 <add_mirror+0xe8>
   25c73:	mov    rsi,rbp
   25c76:	call   11290 <wget_vector_add@plt>
   25c7b:	mov    BYTE PTR [rbx+0x9c],0x0
   25c82:	mov    DWORD PTR [rbx+0x8],0xf423f
   25c89:	mov    rax,QWORD PTR [rsp+0x8]
   25c8e:	sub    rax,QWORD PTR fs:0x28
   25c97:	jne    25d02 <add_mirror+0x112>
   25c99:	add    rsp,0x10
   25c9d:	pop    rbx
   25c9e:	pop    rbp
   25c9f:	pop    r12
   25ca1:	ret    
   25ca2:	nop    WORD PTR [rax+rax*1+0x0]
   25ca8:	mov    edx,0x5
   25cad:	xor    edi,edi
   25caf:	lea    rsi,[rip+0x27722]        # 4d3d8 <iri_ctype+0x1b8>
   25cb6:	call   10f90 <dcgettext@plt>
   25cbb:	mov    rsi,rbp
   25cbe:	mov    rdi,rax
   25cc1:	xor    eax,eax
   25cc3:	call   11ea0 <wget_error_printf@plt>
   25cc8:	mov    rdi,rsp
   25ccb:	call   11bc0 <wget_iri_free@plt>
   25cd0:	jmp    25c89 <add_mirror+0x99>
   25cd2:	nop    WORD PTR [rax+rax*1+0x0]
   25cd8:	xor    esi,esi
   25cda:	mov    edi,0x4
   25cdf:	call   11f00 <wget_vector_create@plt>
   25ce4:	lea    rsi,[rip+0x475]        # 26160 <mirror_free>
   25ceb:	mov    QWORD PTR [r12+0x8],rax
   25cf0:	mov    rdi,rax
   25cf3:	call   120e0 <wget_vector_set_destructor@plt>
   25cf8:	mov    rdi,QWORD PTR [r12+0x8]
   25cfd:	jmp    25c73 <add_mirror+0x83>
   25d02:	call   11760 <__stack_chk_fail@plt>
   25d07:	nop    WORD PTR [rax+rax*1+0x0]

0000000000025d10 <metalink_parse>:
   25d10:	endbr64 
   25d14:	push   r15
   25d16:	push   r14
   25d18:	push   r13
   25d1a:	push   r12
   25d1c:	push   rbp
   25d1d:	push   rbx
   25d1e:	sub    rsp,0x428
   25d25:	mov    QWORD PTR [rsp+0x8],r9
   25d2a:	mov    rax,QWORD PTR fs:0x28
   25d33:	mov    QWORD PTR [rsp+0x418],rax
   25d3b:	xor    eax,eax
   25d3d:	and    esi,0x18
   25d40:	je     25e8f <metalink_parse+0x17f>
   25d46:	mov    rbx,rdx
   25d49:	mov    r13,rdi
   25d4c:	mov    edx,0xe
   25d51:	mov    rbp,rcx
   25d54:	lea    rsi,[rip+0x275cb]        # 4d326 <iri_ctype+0x106>
   25d5b:	mov    rdi,rbx
   25d5e:	mov    r12,r8
   25d61:	call   11c40 <wget_strncasecmp_ascii@plt>
   25d66:	test   eax,eax
   25d68:	jne    25e8f <metalink_parse+0x17f>
   25d6e:	test   r12,r12
   25d71:	lea    rax,[rip+0x26af2]        # 4c86a <maybe+0x5ca>
   25d78:	mov    rcx,QWORD PTR [rsp+0x8]
   25d7d:	lea    r14,[rsp+0x10]
   25d82:	cmove  r12,rax
   25d86:	mov    esi,0x400
   25d8b:	lea    r15,[rbx+0xe]
   25d8f:	mov    rdi,r14
   25d92:	mov    rdx,r12
   25d95:	call   12080 <wget_strmemcpy_a@plt>
   25d9a:	mov    r12,rax
   25d9d:	test   rax,rax
   25da0:	je     25e8f <metalink_parse+0x17f>
   25da6:	mov    edx,0x6
   25dab:	lea    rsi,[rip+0x27583]        # 4d335 <iri_ctype+0x115>
   25db2:	mov    rdi,r15
   25db5:	call   11c40 <wget_strncasecmp_ascii@plt>
   25dba:	test   eax,eax
   25dbc:	jne    25ec0 <metalink_parse+0x1b0>
   25dc2:	lea    r15,[rbx+0x14]
   25dc6:	test   rbp,rbp
   25dc9:	je     26020 <metalink_parse+0x310>
   25dcf:	cmp    BYTE PTR [rbx+0x14],0x0
   25dd3:	je     25e70 <metalink_parse+0x160>
   25dd9:	lea    rsi,[rip+0x2755c]        # 4d33c <iri_ctype+0x11c>
   25de0:	mov    rdi,r15
   25de3:	call   12590 <wget_strcasecmp_ascii@plt>
   25de8:	test   eax,eax
   25dea:	je     25f70 <metalink_parse+0x260>
   25df0:	lea    rsi,[rip+0x2755f]        # 4d356 <iri_ctype+0x136>
   25df7:	mov    rdi,r15
   25dfa:	call   12590 <wget_strcasecmp_ascii@plt>
   25dff:	test   eax,eax
   25e01:	je     26090 <metalink_parse+0x380>
   25e07:	lea    rsi,[rip+0x2755b]        # 4d369 <iri_ctype+0x149>
   25e0e:	mov    rdi,r15
   25e11:	call   12590 <wget_strcasecmp_ascii@plt>
   25e16:	test   eax,eax
   25e18:	jne    25e7e <metalink_parse+0x16e>
   25e1a:	lea    rsi,[rip+0x26cdd]        # 4cafe <__func__.5+0x14e>
   25e21:	mov    rdi,rbp
   25e24:	call   12590 <wget_strcasecmp_ascii@plt>
   25e29:	test   eax,eax
   25e2b:	je     2613c <metalink_parse+0x42c>
   25e31:	lea    rsi,[rip+0x2754c]        # 4d384 <iri_ctype+0x164>
   25e38:	mov    rdi,rbp
   25e3b:	call   12590 <wget_strcasecmp_ascii@plt>
   25e40:	test   eax,eax
   25e42:	jne    25e7e <metalink_parse+0x16e>
   25e44:	lea    rdx,[r13+0x8]
   25e48:	lea    rsi,[rip+0x27540]        # 4d38f <iri_ctype+0x16f>
   25e4f:	mov    rdi,r12
   25e52:	call   11580 <__isoc99_sscanf@plt>
   25e57:	mov    eax,DWORD PTR [r13+0x8]
   25e5b:	sub    eax,0x1
   25e5e:	cmp    eax,0xf423e
   25e63:	jbe    25e7e <metalink_parse+0x16e>
   25e65:	mov    DWORD PTR [r13+0x8],0xf423f
   25e6d:	jmp    25e7e <metalink_parse+0x16e>
   25e6f:	nop
   25e70:	mov    rbx,QWORD PTR [r13+0x0]
   25e74:	cmp    QWORD PTR [rbx],0x0
   25e78:	je     260e0 <metalink_parse+0x3d0>
   25e7e:	cmp    r12,r14
   25e81:	je     25e8f <metalink_parse+0x17f>
   25e83:	mov    rax,QWORD PTR [rip+0x5015e]        # 75fe8 <wget_free@@Base-0x1328>
   25e8a:	mov    rdi,r12
   25e8d:	call   QWORD PTR [rax]
   25e8f:	mov    rax,QWORD PTR [rsp+0x418]
   25e97:	sub    rax,QWORD PTR fs:0x28
   25ea0:	jne    26157 <metalink_parse+0x447>
   25ea6:	add    rsp,0x428
   25ead:	pop    rbx
   25eae:	pop    rbp
   25eaf:	pop    r12
   25eb1:	pop    r13
   25eb3:	pop    r14
   25eb5:	pop    r15
   25eb7:	ret    
   25eb8:	nop    DWORD PTR [rax+rax*1+0x0]
   25ec0:	test   rbp,rbp
   25ec3:	je     25fc0 <metalink_parse+0x2b0>
   25ec9:	cmp    BYTE PTR [rbx+0xe],0x0
   25ecd:	je     25e70 <metalink_parse+0x160>
   25ecf:	lea    rsi,[rip+0x27473]        # 4d349 <iri_ctype+0x129>
   25ed6:	mov    rdi,r15
   25ed9:	call   12590 <wget_strcasecmp_ascii@plt>
   25ede:	test   eax,eax
   25ee0:	je     25f70 <metalink_parse+0x260>
   25ee6:	lea    rsi,[rip+0x27476]        # 4d363 <iri_ctype+0x143>
   25eed:	mov    rdi,r15
   25ef0:	call   12590 <wget_strcasecmp_ascii@plt>
   25ef5:	test   eax,eax
   25ef7:	je     26090 <metalink_parse+0x380>
   25efd:	lea    rsi,[rip+0x2746f]        # 4d373 <iri_ctype+0x153>
   25f04:	mov    rdi,r15
   25f07:	call   12590 <wget_strcasecmp_ascii@plt>
   25f0c:	test   eax,eax
   25f0e:	jne    25e7e <metalink_parse+0x16e>
   25f14:	lea    rsi,[rip+0x26be3]        # 4cafe <__func__.5+0x14e>
   25f1b:	mov    rdi,rbp
   25f1e:	call   12590 <wget_strcasecmp_ascii@plt>
   25f23:	test   eax,eax
   25f25:	je     2613c <metalink_parse+0x42c>
   25f2b:	lea    rsi,[rip+0x27482]        # 4d3b4 <iri_ctype+0x194>
   25f32:	mov    rdi,rbp
   25f35:	call   12590 <wget_strcasecmp_ascii@plt>
   25f3a:	test   eax,eax
   25f3c:	je     25f55 <metalink_parse+0x245>
   25f3e:	lea    rsi,[rip+0x2743f]        # 4d384 <iri_ctype+0x164>
   25f45:	mov    rdi,rbp
   25f48:	call   12590 <wget_strcasecmp_ascii@plt>
   25f4d:	test   eax,eax
   25f4f:	jne    25e7e <metalink_parse+0x16e>
   25f55:	lea    rdx,[r13+0x8]
   25f59:	lea    rsi,[rip+0x2742f]        # 4d38f <iri_ctype+0x16f>
   25f60:	mov    rdi,r12
   25f63:	xor    eax,eax
   25f65:	jmp    25e52 <metalink_parse+0x142>
   25f6a:	nop    WORD PTR [rax+rax*1+0x0]
   25f70:	lea    rsi,[rip+0x26b2b]        # 4caa2 <__func__.5+0xf2>
   25f77:	mov    rdi,rbp
   25f7a:	call   12590 <wget_strcasecmp_ascii@plt>
   25f7f:	test   eax,eax
   25f81:	je     260a7 <metalink_parse+0x397>
   25f87:	lea    rsi,[rip+0x26b21]        # 4caaf <__func__.5+0xff>
   25f8e:	mov    rdi,rbp
   25f91:	call   12590 <wget_strcasecmp_ascii@plt>
   25f96:	test   eax,eax
   25f98:	jne    25e7e <metalink_parse+0x16e>
   25f9e:	mov    edx,0xa
   25fa3:	xor    esi,esi
   25fa5:	mov    rdi,r12
   25fa8:	call   10600 <strtoll@plt>
   25fad:	mov    QWORD PTR [r13+0xa8],rax
   25fb4:	jmp    25e7e <metalink_parse+0x16e>
   25fb9:	nop    DWORD PTR [rax+0x0]
   25fc0:	lea    rsi,[rip+0x273da]        # 4d3a1 <iri_ctype+0x181>
   25fc7:	mov    rdi,r15
   25fca:	call   12590 <wget_strcasecmp_ascii@plt>
   25fcf:	test   eax,eax
   25fd1:	je     260c8 <metalink_parse+0x3b8>
   25fd7:	lea    rsi,[rip+0x27385]        # 4d363 <iri_ctype+0x143>
   25fde:	mov    rdi,r15
   25fe1:	call   12590 <wget_strcasecmp_ascii@plt>
   25fe6:	test   eax,eax
   25fe8:	je     26110 <metalink_parse+0x400>
   25fee:	lea    rsi,[rip+0x273b9]        # 4d3ae <iri_ctype+0x18e>
   25ff5:	mov    rdi,r15
   25ff8:	call   12590 <wget_strcasecmp_ascii@plt>
   25ffd:	test   eax,eax
   25fff:	je     26120 <metalink_parse+0x410>
   26005:	lea    rsi,[rip+0x27367]        # 4d373 <iri_ctype+0x153>
   2600c:	mov    rdi,r15
   2600f:	call   12590 <wget_strcasecmp_ascii@plt>
   26014:	test   eax,eax
   26016:	jne    25e7e <metalink_parse+0x16e>
   2601c:	jmp    2607c <metalink_parse+0x36c>
   2601e:	xchg   ax,ax
   26020:	lea    rsi,[rip+0x2736d]        # 4d394 <iri_ctype+0x174>
   26027:	mov    rdi,r15
   2602a:	call   12590 <wget_strcasecmp_ascii@plt>
   2602f:	test   eax,eax
   26031:	je     260c8 <metalink_parse+0x3b8>
   26037:	lea    rsi,[rip+0x27318]        # 4d356 <iri_ctype+0x136>
   2603e:	mov    rdi,r15
   26041:	call   12590 <wget_strcasecmp_ascii@plt>
   26046:	test   eax,eax
   26048:	je     26110 <metalink_parse+0x400>
   2604e:	lea    rsi,[rip+0x27359]        # 4d3ae <iri_ctype+0x18e>
   26055:	mov    rdi,r15
   26058:	call   12590 <wget_strcasecmp_ascii@plt>
   2605d:	test   eax,eax
   2605f:	je     26120 <metalink_parse+0x410>
   26065:	lea    rsi,[rip+0x272fd]        # 4d369 <iri_ctype+0x149>
   2606c:	mov    rdi,r15
   2606f:	call   12590 <wget_strcasecmp_ascii@plt>
   26074:	test   eax,eax
   26076:	jne    25e7e <metalink_parse+0x16e>
   2607c:	mov    rsi,r12
   2607f:	mov    rdi,r13
   26082:	call   25bf0 <add_mirror>
   26087:	jmp    25e7e <metalink_parse+0x16e>
   2608c:	nop    DWORD PTR [rax+0x0]
   26090:	lea    rsi,[rip+0x26a0b]        # 4caa2 <__func__.5+0xf2>
   26097:	mov    rdi,rbp
   2609a:	call   12590 <wget_strcasecmp_ascii@plt>
   2609f:	test   eax,eax
   260a1:	jne    25e7e <metalink_parse+0x16e>
   260a7:	lea    rdx,[r13+0x8c]
   260ae:	lea    rsi,[rip+0x2729c]        # 4d351 <iri_ctype+0x131>
   260b5:	mov    rdi,r12
   260b8:	call   11580 <__isoc99_sscanf@plt>
   260bd:	jmp    25e7e <metalink_parse+0x16e>
   260c2:	nop    WORD PTR [rax+rax*1+0x0]
   260c8:	mov    rsi,r12
   260cb:	mov    rdi,r13
   260ce:	call   25990 <add_piece>
   260d3:	jmp    25e7e <metalink_parse+0x16e>
   260d8:	nop    DWORD PTR [rax+rax*1+0x0]
   260e0:	lea    rsi,[rip+0x2690a]        # 4c9f1 <__func__.5+0x41>
   260e7:	mov    rdi,rbp
   260ea:	call   12590 <wget_strcasecmp_ascii@plt>
   260ef:	test   eax,eax
   260f1:	jne    25e7e <metalink_parse+0x16e>
   260f7:	mov    rdi,r12
   260fa:	call   127b0 <wget_strdup@plt>
   260ff:	mov    QWORD PTR [rbx],rax
   26102:	jmp    25e7e <metalink_parse+0x16e>
   26107:	nop    WORD PTR [rax+rax*1+0x0]
   26110:	mov    rsi,r12
   26113:	mov    rdi,r13
   26116:	call   25af0 <add_file_hash>
   2611b:	jmp    25e7e <metalink_parse+0x16e>
   26120:	mov    rbx,QWORD PTR [r13+0x0]
   26124:	mov    edx,0xa
   26129:	xor    esi,esi
   2612b:	mov    rdi,r12
   2612e:	call   10600 <strtoll@plt>
   26133:	mov    QWORD PTR [rbx+0x20],rax
   26137:	jmp    25e7e <metalink_parse+0x16e>
   2613c:	lea    rdx,[r13+0x9c]
   26143:	lea    rsi,[rip+0x2722e]        # 4d378 <iri_ctype+0x158>
   2614a:	mov    rdi,r12
   2614d:	call   11580 <__isoc99_sscanf@plt>
   26152:	jmp    25e7e <metalink_parse+0x16e>
   26157:	call   11760 <__stack_chk_fail@plt>
   2615c:	nop    DWORD PTR [rax+0x0]

0000000000026160 <mirror_free>:
   26160:	endbr64 
   26164:	test   rdi,rdi
   26167:	je     26188 <mirror_free+0x28>
   26169:	push   rbp
   2616a:	mov    rbp,rdi
   2616d:	call   11bc0 <wget_iri_free@plt>
   26172:	mov    rax,QWORD PTR [rip+0x4fe6f]        # 75fe8 <wget_free@@Base-0x1328>
   26179:	mov    rdi,rbp
   2617c:	pop    rbp
   2617d:	mov    rax,QWORD PTR [rax]
   26180:	jmp    rax
   26182:	nop    WORD PTR [rax+rax*1+0x0]
   26188:	ret    
   26189:	nop    DWORD PTR [rax+0x0]

0000000000026190 <wget_metalink_free>:
   26190:	endbr64 
   26194:	test   rdi,rdi
   26197:	je     26200 <wget_metalink_free+0x70>
   26199:	push   rbx
   2619a:	mov    rbx,rdi
   2619d:	mov    rdi,QWORD PTR [rdi]
   261a0:	test   rdi,rdi
   261a3:	je     261fc <wget_metalink_free+0x6c>
   261a5:	mov    r8,QWORD PTR [rdi]
   261a8:	test   r8,r8
   261ab:	je     261c3 <wget_metalink_free+0x33>
   261ad:	mov    rax,QWORD PTR [rip+0x4fe34]        # 75fe8 <wget_free@@Base-0x1328>
   261b4:	mov    rdi,r8
   261b7:	call   QWORD PTR [rax]
   261b9:	mov    rdi,QWORD PTR [rbx]
   261bc:	mov    QWORD PTR [rdi],0x0
   261c3:	add    rdi,0x8
   261c7:	call   125e0 <wget_vector_free@plt>
   261cc:	mov    rax,QWORD PTR [rbx]
   261cf:	lea    rdi,[rax+0x10]
   261d3:	call   125e0 <wget_vector_free@plt>
   261d8:	mov    rax,QWORD PTR [rbx]
   261db:	lea    rdi,[rax+0x18]
   261df:	call   125e0 <wget_vector_free@plt>
   261e4:	mov    rdi,QWORD PTR [rbx]
   261e7:	test   rdi,rdi
   261ea:	je     261fc <wget_metalink_free+0x6c>
   261ec:	mov    rax,QWORD PTR [rip+0x4fdf5]        # 75fe8 <wget_free@@Base-0x1328>
   261f3:	call   QWORD PTR [rax]
   261f5:	mov    QWORD PTR [rbx],0x0
   261fc:	pop    rbx
   261fd:	ret    
   261fe:	xchg   ax,ax
   26200:	ret    
   26201:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2620c:	nop    DWORD PTR [rax+0x0]

0000000000026210 <wget_metalink_parse>:
   26210:	endbr64 
   26214:	push   rbp
   26215:	sub    rsp,0xd0
   2621c:	mov    rax,QWORD PTR fs:0x28
   26225:	mov    QWORD PTR [rsp+0xc8],rax
   2622d:	xor    eax,eax
   2622f:	test   rdi,rdi
   26232:	je     262f0 <wget_metalink_parse+0xe0>
   26238:	mov    rax,QWORD PTR [rip+0x4fd01]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   2623f:	mov    rbp,rdi
   26242:	mov    esi,0x28
   26247:	mov    edi,0x1
   2624c:	call   QWORD PTR [rax]
   2624e:	lea    rdi,[rsp+0x18]
   26253:	mov    ecx,0x15
   26258:	lea    rsi,[rip+0xfffffffffffffab1]        # 25d10 <metalink_parse>
   2625f:	mov    rdx,rax
   26262:	mov    QWORD PTR [rsp+0x8],rax
   26267:	xor    eax,eax
   26269:	rep stos QWORD PTR es:[rdi],rax
   2626c:	mov    QWORD PTR [rsp+0x10],rdx
   26271:	mov    rdi,rbp
   26274:	lea    rdx,[rsp+0x10]
   26279:	mov    DWORD PTR [rsp+0x18],0xf423f
   26281:	mov    QWORD PTR [rsp+0xac],0x2d
   2628d:	call   11090 <wget_xml_parse_buffer@plt>
   26292:	test   eax,eax
   26294:	jne    262c0 <wget_metalink_parse+0xb0>
   26296:	mov    rax,QWORD PTR [rsp+0x8]
   2629b:	mov    rdx,QWORD PTR [rsp+0xc8]
   262a3:	sub    rdx,QWORD PTR fs:0x28
   262ac:	jne    262f4 <wget_metalink_parse+0xe4>
   262ae:	add    rsp,0xd0
   262b5:	pop    rbp
   262b6:	ret    
   262b7:	nop    WORD PTR [rax+rax*1+0x0]
   262c0:	mov    edx,0x5
   262c5:	lea    rsi,[rip+0x270f1]        # 4d3bd <iri_ctype+0x19d>
   262cc:	xor    edi,edi
   262ce:	call   10f90 <dcgettext@plt>
   262d3:	mov    rdi,rax
   262d6:	xor    eax,eax
   262d8:	call   11ea0 <wget_error_printf@plt>
   262dd:	lea    rdi,[rsp+0x8]
   262e2:	call   10c30 <wget_metalink_free@plt>
   262e7:	jmp    26296 <wget_metalink_parse+0x86>
   262e9:	nop    DWORD PTR [rax+0x0]
   262f0:	xor    eax,eax
   262f2:	jmp    2629b <wget_metalink_parse+0x8b>
   262f4:	call   11760 <__stack_chk_fail@plt>
   262f9:	nop    DWORD PTR [rax+0x0]

0000000000026300 <wget_metalink_sort_mirrors>:
   26300:	endbr64 
   26304:	test   rdi,rdi
   26307:	je     26330 <wget_metalink_sort_mirrors+0x30>
   26309:	push   rbx
   2630a:	mov    rbx,rdi
   2630d:	mov    rdi,QWORD PTR [rdi+0x8]
   26311:	lea    rsi,[rip+0xfffffffffffff658]        # 25970 <compare_mirror>
   26318:	call   10d50 <wget_vector_setcmpfunc@plt>
   2631d:	mov    rdi,QWORD PTR [rbx+0x8]
   26321:	pop    rbx
   26322:	jmp    108a0 <wget_vector_sort@plt>
   26327:	nop    WORD PTR [rax+rax*1+0x0]
   26330:	ret    
   26331:	cs nop WORD PTR [rax+rax*1+0x0]
   2633b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000026340 <debug_addr>:
   26340:	push   r13
   26342:	mov    r9d,0x20
   26348:	mov    ecx,0x401
   2634d:	push   r12
   2634f:	push   rbp
   26350:	mov    rbp,rdi
   26353:	mov    rdi,rsi
   26356:	mov    esi,edx
   26358:	sub    rsp,0x430
   2635f:	mov    rax,QWORD PTR fs:0x28
   26368:	mov    QWORD PTR [rsp+0x428],rax
   26370:	xor    eax,eax
   26372:	mov    r12,rsp
   26375:	lea    r13,[rsp+0x20]
   2637a:	sub    rsp,0x8
   2637e:	push   0x3
   26380:	mov    r8,r12
   26383:	mov    rdx,r13
   26386:	call   10eb0 <getnameinfo@plt>
   2638b:	mov    rsp,r12
   2638e:	test   eax,eax
   26390:	jne    263d0 <debug_addr+0x90>
   26392:	mov    rcx,r12
   26395:	mov    rdx,r13
   26398:	mov    rsi,rbp
   2639b:	xor    eax,eax
   2639d:	lea    rdi,[rip+0x27057]        # 4d3fb <iri_ctype+0x1db>
   263a4:	call   114b0 <wget_debug_printf@plt>
   263a9:	mov    rax,QWORD PTR [rsp+0x428]
   263b1:	sub    rax,QWORD PTR fs:0x28
   263ba:	jne    263f0 <debug_addr+0xb0>
   263bc:	add    rsp,0x430
   263c3:	pop    rbp
   263c4:	pop    r12
   263c6:	pop    r13
   263c8:	ret    
   263c9:	nop    DWORD PTR [rax+0x0]
   263d0:	mov    edi,eax
   263d2:	call   11c20 <gai_strerror@plt>
   263d7:	mov    rdx,r12
   263da:	mov    rsi,rbp
   263dd:	lea    rdi,[rip+0x27024]        # 4d408 <iri_ctype+0x1e8>
   263e4:	mov    rcx,rax
   263e7:	xor    eax,eax
   263e9:	call   114b0 <wget_debug_printf@plt>
   263ee:	jmp    263a9 <debug_addr+0x69>
   263f0:	call   11760 <__stack_chk_fail@plt>
   263f5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000026400 <wget_net_init>:
   26400:	endbr64 
   26404:	sub    rsp,0x8
   26408:	mov    edi,0x202
   2640d:	call   45580 <gl_sockets_startup>
   26412:	neg    eax
   26414:	sbb    eax,eax
   26416:	add    rsp,0x8
   2641a:	ret    
   2641b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000026420 <wget_net_deinit>:
   26420:	endbr64 
   26424:	sub    rsp,0x8
   26428:	call   45590 <gl_sockets_cleanup>
   2642d:	neg    eax
   2642f:	sbb    eax,eax
   26431:	add    rsp,0x8
   26435:	ret    
   26436:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000026440 <wget_tcp_set_dns>:
   26440:	endbr64 
   26444:	test   rdi,rdi
   26447:	lea    rax,[rip+0x50e52]        # 772a0 <global_tcp>
   2644e:	cmove  rdi,rax
   26452:	mov    QWORD PTR [rdi+0x40],rsi
   26456:	ret    
   26457:	nop    WORD PTR [rax+rax*1+0x0]

0000000000026460 <wget_tcp_set_tcp_fastopen>:
   26460:	endbr64 
   26464:	test   rdi,rdi
   26467:	lea    rax,[rip+0x50e32]        # 772a0 <global_tcp>
   2646e:	cmove  rdi,rax
   26472:	and    esi,0x1
   26475:	lea    eax,[rsi*4+0x0]
   2647c:	movzx  esi,BYTE PTR [rdi+0x6a]
   26480:	and    esi,0xfffffffb
   26483:	or     esi,eax
   26485:	mov    BYTE PTR [rdi+0x6a],sil
   26489:	ret    
   2648a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000026490 <wget_tcp_get_tcp_fastopen>:
   26490:	endbr64 
   26494:	test   rdi,rdi
   26497:	lea    rax,[rip+0x50e02]        # 772a0 <global_tcp>
   2649e:	cmove  rdi,rax
   264a2:	movzx  eax,BYTE PTR [rdi+0x6a]
   264a6:	shr    al,0x2
   264a9:	and    eax,0x1
   264ac:	ret    
   264ad:	nop    DWORD PTR [rax]

00000000000264b0 <wget_tcp_set_tls_false_start>:
   264b0:	endbr64 
   264b4:	test   rdi,rdi
   264b7:	lea    rax,[rip+0x50de2]        # 772a0 <global_tcp>
   264be:	cmove  rdi,rax
   264c2:	and    esi,0x1
   264c5:	lea    eax,[rsi+rsi*1]
   264c8:	movzx  esi,BYTE PTR [rdi+0x6a]
   264cc:	and    esi,0xfffffffd
   264cf:	or     esi,eax
   264d1:	mov    BYTE PTR [rdi+0x6a],sil
   264d5:	ret    
   264d6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000264e0 <wget_tcp_get_tls_false_start>:
   264e0:	endbr64 
   264e4:	test   rdi,rdi
   264e7:	lea    rax,[rip+0x50db2]        # 772a0 <global_tcp>
   264ee:	cmove  rdi,rax
   264f2:	movzx  eax,BYTE PTR [rdi+0x6a]
   264f6:	shr    al,1
   264f8:	and    eax,0x1
   264fb:	ret    
   264fc:	nop    DWORD PTR [rax+0x0]

0000000000026500 <wget_tcp_set_protocol>:
   26500:	endbr64 
   26504:	test   rdi,rdi
   26507:	lea    rax,[rip+0x50d92]        # 772a0 <global_tcp>
   2650e:	cmove  rdi,rax
   26512:	mov    DWORD PTR [rdi+0x60],esi
   26515:	ret    
   26516:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000026520 <wget_tcp_get_protocol>:
   26520:	endbr64 
   26524:	test   rdi,rdi
   26527:	lea    rax,[rip+0x50d72]        # 772a0 <global_tcp>
   2652e:	cmove  rdi,rax
   26532:	mov    eax,DWORD PTR [rdi+0x60]
   26535:	ret    
   26536:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000026540 <wget_tcp_set_preferred_family>:
   26540:	endbr64 
   26544:	lea    rax,[rip+0x50d55]        # 772a0 <global_tcp>
   2654b:	test   rdi,rdi
   2654e:	cmove  rdi,rax
   26552:	mov    eax,0x2
   26557:	cmp    esi,0x1
   2655a:	je     26569 <wget_tcp_set_preferred_family+0x29>
   2655c:	xor    eax,eax
   2655e:	mov    edx,0xa
   26563:	cmp    esi,0x2
   26566:	cmove  eax,edx
   26569:	mov    DWORD PTR [rdi+0x5c],eax
   2656c:	ret    
   2656d:	nop    DWORD PTR [rax]

0000000000026570 <wget_tcp_get_preferred_family>:
   26570:	endbr64 
   26574:	lea    rax,[rip+0x50d25]        # 772a0 <global_tcp>
   2657b:	test   rdi,rdi
   2657e:	cmove  rdi,rax
   26582:	mov    eax,0x1
   26587:	mov    edx,DWORD PTR [rdi+0x5c]
   2658a:	cmp    edx,0x2
   2658d:	je     26599 <wget_tcp_get_preferred_family+0x29>
   2658f:	xor    eax,eax
   26591:	cmp    edx,0xa
   26594:	sete   al
   26597:	add    eax,eax
   26599:	ret    
   2659a:	nop    WORD PTR [rax+rax*1+0x0]

00000000000265a0 <wget_tcp_set_family>:
   265a0:	endbr64 
   265a4:	lea    rax,[rip+0x50cf5]        # 772a0 <global_tcp>
   265ab:	test   rdi,rdi
   265ae:	cmove  rdi,rax
   265b2:	mov    eax,0x2
   265b7:	cmp    esi,0x1
   265ba:	je     265c9 <wget_tcp_set_family+0x29>
   265bc:	xor    eax,eax
   265be:	mov    edx,0xa
   265c3:	cmp    esi,0x2
   265c6:	cmove  eax,edx
   265c9:	mov    DWORD PTR [rdi+0x58],eax
   265cc:	ret    
   265cd:	nop    DWORD PTR [rax]

00000000000265d0 <wget_tcp_get_family>:
   265d0:	endbr64 
   265d4:	lea    rax,[rip+0x50cc5]        # 772a0 <global_tcp>
   265db:	test   rdi,rdi
   265de:	cmove  rdi,rax
   265e2:	mov    eax,0x1
   265e7:	mov    edx,DWORD PTR [rdi+0x58]
   265ea:	cmp    edx,0x2
   265ed:	je     265f9 <wget_tcp_get_family+0x29>
   265ef:	xor    eax,eax
   265f1:	cmp    edx,0xa
   265f4:	sete   al
   265f7:	add    eax,eax
   265f9:	ret    
   265fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000026600 <wget_tcp_get_local_port>:
   26600:	endbr64 
   26604:	push   r13
   26606:	push   r12
   26608:	push   rbp
   26609:	sub    rsp,0xc0
   26610:	mov    rax,QWORD PTR fs:0x28
   26619:	mov    QWORD PTR [rsp+0xb8],rax
   26621:	xor    eax,eax
   26623:	test   rdi,rdi
   26626:	je     2664c <wget_tcp_get_local_port+0x4c>
   26628:	mov    edi,DWORD PTR [rdi+0x48]
   2662b:	lea    rbp,[rsp+0x10]
   26630:	lea    rdx,[rsp+0xc]
   26635:	mov    DWORD PTR [rsp+0xc],0x80
   2663d:	mov    rsi,rbp
   26640:	call   11490 <getsockname@plt>
   26645:	mov    r12d,eax
   26648:	test   eax,eax
   2664a:	je     26678 <wget_tcp_get_local_port+0x78>
   2664c:	xor    r12d,r12d
   2664f:	mov    rax,QWORD PTR [rsp+0xb8]
   26657:	sub    rax,QWORD PTR fs:0x28
   26660:	jne    266b9 <wget_tcp_get_local_port+0xb9>
   26662:	add    rsp,0xc0
   26669:	mov    eax,r12d
   2666c:	pop    rbp
   2666d:	pop    r12
   2666f:	pop    r13
   26671:	ret    
   26672:	nop    WORD PTR [rax+rax*1+0x0]
   26678:	lea    r13,[rsp+0x90]
   26680:	sub    rsp,0x8
   26684:	xor    ecx,ecx
   26686:	xor    edx,edx
   26688:	push   0x2
   2668a:	mov    esi,DWORD PTR [rsp+0x1c]
   2668e:	mov    r9d,0x20
   26694:	mov    r8,r13
   26697:	mov    rdi,rbp
   2669a:	call   10eb0 <getnameinfo@plt>
   2669f:	pop    rdx
   266a0:	pop    rcx
   266a1:	test   eax,eax
   266a3:	jne    2664f <wget_tcp_get_local_port+0x4f>
   266a5:	mov    edx,0xa
   266aa:	xor    esi,esi
   266ac:	mov    rdi,r13
   266af:	call   11c90 <strtol@plt>
   266b4:	mov    r12d,eax
   266b7:	jmp    2664f <wget_tcp_get_local_port+0x4f>
   266b9:	call   11760 <__stack_chk_fail@plt>
   266be:	xchg   ax,ax

00000000000266c0 <wget_tcp_set_connect_timeout>:
   266c0:	endbr64 
   266c4:	test   rdi,rdi
   266c7:	lea    rax,[rip+0x50bd2]        # 772a0 <global_tcp>
   266ce:	cmove  rdi,rax
   266d2:	mov    DWORD PTR [rdi+0x50],esi
   266d5:	ret    
   266d6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000266e0 <wget_tcp_set_timeout>:
   266e0:	endbr64 
   266e4:	test   rdi,rdi
   266e7:	lea    rax,[rip+0x50bb2]        # 772a0 <global_tcp>
   266ee:	cmove  rdi,rax
   266f2:	mov    DWORD PTR [rdi+0x54],esi
   266f5:	ret    
   266f6:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000026700 <wget_tcp_get_timeout>:
   26700:	endbr64 
   26704:	test   rdi,rdi
   26707:	lea    rax,[rip+0x50b92]        # 772a0 <global_tcp>
   2670e:	cmove  rdi,rax
   26712:	mov    eax,DWORD PTR [rdi+0x54]
   26715:	ret    
   26716:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000026720 <wget_tcp_set_bind_address>:
   26720:	endbr64 
   26724:	push   r14
   26726:	push   r13
   26728:	push   r12
   2672a:	push   rbp
   2672b:	mov    rbp,rsi
   2672e:	push   rbx
   2672f:	mov    rbx,rdi
   26732:	sub    rsp,0x10
   26736:	mov    rax,QWORD PTR fs:0x28
   2673f:	mov    QWORD PTR [rsp+0x8],rax
   26744:	xor    eax,eax
   26746:	test   rdi,rdi
   26749:	lea    rax,[rip+0x50b50]        # 772a0 <global_tcp>
   26750:	cmove  rbx,rax
   26754:	mov    rdi,QWORD PTR [rbx+0x40]
   26758:	lea    rsi,[rbx+0x10]
   2675c:	call   126d0 <wget_dns_freeaddrinfo@plt>
   26761:	test   rbp,rbp
   26764:	je     267c0 <wget_tcp_set_bind_address+0xa0>
   26766:	movzx  eax,BYTE PTR [rbp+0x0]
   2676a:	cmp    al,0x5b
   2676c:	je     267e8 <wget_tcp_set_bind_address+0xc8>
   2676e:	cmp    al,0x3a
   26770:	je     26878 <wget_tcp_set_bind_address+0x158>
   26776:	mov    rsi,rbp
   26779:	test   al,al
   2677b:	je     26878 <wget_tcp_set_bind_address+0x158>
   26781:	nop    DWORD PTR [rax+0x0]
   26788:	movzx  eax,BYTE PTR [rsi+0x1]
   2678c:	add    rsi,0x1
   26790:	test   al,al
   26792:	je     26809 <wget_tcp_set_bind_address+0xe9>
   26794:	cmp    al,0x3a
   26796:	jne    26788 <wget_tcp_set_bind_address+0x68>
   26798:	lea    r12,[rsp+0x2]
   2679d:	add    rsi,0x1
   267a1:	mov    edx,0x6
   267a6:	mov    rdi,r12
   267a9:	call   11860 <wget_strscpy@plt>
   267ae:	movsx  eax,BYTE PTR [rsp+0x2]
   267b3:	sub    eax,0x30
   267b6:	cmp    eax,0x9
   267b9:	jbe    26840 <wget_tcp_set_bind_address+0x120>
   267bf:	nop
   267c0:	mov    rax,QWORD PTR [rsp+0x8]
   267c5:	sub    rax,QWORD PTR fs:0x28
   267ce:	jne    2687d <wget_tcp_set_bind_address+0x15d>
   267d4:	add    rsp,0x10
   267d8:	pop    rbx
   267d9:	pop    rbp
   267da:	pop    r12
   267dc:	pop    r13
   267de:	pop    r14
   267e0:	ret    
   267e1:	nop    DWORD PTR [rax+0x0]
   267e8:	mov    rdi,rbp
   267eb:	mov    esi,0x5d
   267f0:	add    rbp,0x1
   267f4:	call   11740 <strrchr@plt>
   267f9:	mov    rdx,rbp
   267fc:	test   rax,rax
   267ff:	je     26834 <wget_tcp_set_bind_address+0x114>
   26801:	lea    rsi,[rax+0x1]
   26805:	movzx  eax,BYTE PTR [rax+0x1]
   26809:	cmp    al,0x3a
   2680b:	je     26798 <wget_tcp_set_bind_address+0x78>
   2680d:	mov    ecx,DWORD PTR [rbx+0x58]
   26810:	mov    rdi,QWORD PTR [rbx+0x40]
   26814:	xor    edx,edx
   26816:	mov    rsi,rbp
   26819:	mov    r8d,DWORD PTR [rbx+0x5c]
   2681d:	call   10cd0 <wget_dns_resolve@plt>
   26822:	mov    QWORD PTR [rbx+0x10],rax
   26826:	jmp    267c0 <wget_tcp_set_bind_address+0xa0>
   26828:	nop    DWORD PTR [rax+rax*1+0x0]
   26830:	add    rbp,0x1
   26834:	cmp    BYTE PTR [rbp+0x0],0x0
   26838:	jne    26830 <wget_tcp_set_bind_address+0x110>
   2683a:	mov    rbp,rdx
   2683d:	jmp    2680d <wget_tcp_set_bind_address+0xed>
   2683f:	nop
   26840:	mov    r14d,DWORD PTR [rbx+0x5c]
   26844:	mov    r13d,DWORD PTR [rbx+0x58]
   26848:	mov    edx,0xa
   2684d:	xor    esi,esi
   2684f:	mov    rdi,r12
   26852:	call   11c90 <strtol@plt>
   26857:	mov    rdi,QWORD PTR [rbx+0x40]
   2685b:	mov    r8d,r14d
   2685e:	mov    ecx,r13d
   26861:	movzx  edx,ax
   26864:	mov    rsi,rbp
   26867:	call   10cd0 <wget_dns_resolve@plt>
   2686c:	mov    QWORD PTR [rbx+0x10],rax
   26870:	jmp    267c0 <wget_tcp_set_bind_address+0xa0>
   26875:	nop    DWORD PTR [rax]
   26878:	mov    rsi,rbp
   2687b:	jmp    26809 <wget_tcp_set_bind_address+0xe9>
   2687d:	call   11760 <__stack_chk_fail@plt>
   26882:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2688d:	nop    DWORD PTR [rax]

0000000000026890 <wget_tcp_set_bind_interface>:
   26890:	endbr64 
   26894:	test   rdi,rdi
   26897:	lea    rax,[rip+0x50a02]        # 772a0 <global_tcp>
   2689e:	cmove  rdi,rax
   268a2:	mov    QWORD PTR [rdi+0x38],rsi
   268a6:	ret    
   268a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000268b0 <wget_tcp_set_ssl>:
   268b0:	endbr64 
   268b4:	test   rdi,rdi
   268b7:	lea    rax,[rip+0x509e2]        # 772a0 <global_tcp>
   268be:	cmove  rdi,rax
   268c2:	mov    eax,esi
   268c4:	and    eax,0x1
   268c7:	movzx  esi,BYTE PTR [rdi+0x6a]
   268cb:	and    esi,0xfffffffe
   268ce:	or     esi,eax
   268d0:	mov    BYTE PTR [rdi+0x6a],sil
   268d4:	ret    
   268d5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

00000000000268e0 <wget_tcp_get_ssl>:
   268e0:	endbr64 
   268e4:	test   rdi,rdi
   268e7:	lea    rax,[rip+0x509b2]        # 772a0 <global_tcp>
   268ee:	cmove  rdi,rax
   268f2:	movzx  eax,BYTE PTR [rdi+0x6a]
   268f6:	and    eax,0x1
   268f9:	ret    
   268fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000026900 <wget_tcp_get_ip>:
   26900:	endbr64 
   26904:	test   rdi,rdi
   26907:	je     26910 <wget_tcp_get_ip+0x10>
   26909:	mov    rax,QWORD PTR [rdi+0x30]
   2690d:	ret    
   2690e:	xchg   ax,ax
   26910:	xor    eax,eax
   26912:	ret    
   26913:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2691e:	xchg   ax,ax

0000000000026920 <wget_tcp_set_ssl_hostname>:
   26920:	endbr64 
   26924:	push   rbp
   26925:	lea    rax,[rip+0x50974]        # 772a0 <global_tcp>
   2692c:	mov    rbp,rsi
   2692f:	push   rbx
   26930:	mov    rbx,rdi
   26933:	sub    rsp,0x8
   26937:	test   rdi,rdi
   2693a:	cmove  rbx,rax
   2693e:	mov    rdi,QWORD PTR [rbx+0x28]
   26942:	test   rdi,rdi
   26945:	je     26958 <wget_tcp_set_ssl_hostname+0x38>
   26947:	mov    rax,QWORD PTR [rip+0x4f69a]        # 75fe8 <wget_free@@Base-0x1328>
   2694e:	call   QWORD PTR [rax]
   26950:	mov    QWORD PTR [rbx+0x28],0x0
   26958:	mov    rdi,rbp
   2695b:	call   127b0 <wget_strdup@plt>
   26960:	mov    QWORD PTR [rbx+0x28],rax
   26964:	add    rsp,0x8
   26968:	pop    rbx
   26969:	pop    rbp
   2696a:	ret    
   2696b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000026970 <wget_tcp_get_ssl_hostname>:
   26970:	endbr64 
   26974:	test   rdi,rdi
   26977:	lea    rax,[rip+0x50922]        # 772a0 <global_tcp>
   2697e:	cmove  rdi,rax
   26982:	mov    rax,QWORD PTR [rdi+0x28]
   26986:	ret    
   26987:	nop    WORD PTR [rax+rax*1+0x0]

0000000000026990 <wget_tcp_init>:
   26990:	endbr64 
   26994:	mov    rax,QWORD PTR [rip+0x4f635]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   2699b:	push   r12
   2699d:	mov    edi,0x70
   269a2:	call   QWORD PTR [rax]
   269a4:	mov    r12,rax
   269a7:	test   rax,rax
   269aa:	je     26a10 <wget_tcp_init+0x80>
   269ac:	movdqa xmm0,XMMWORD PTR [rip+0x508ec]        # 772a0 <global_tcp>
   269b4:	movups XMMWORD PTR [rax],xmm0
   269b7:	movdqa xmm1,XMMWORD PTR [rip+0x508f1]        # 772b0 <global_tcp+0x10>
   269bf:	movups XMMWORD PTR [rax+0x10],xmm1
   269c3:	movdqa xmm2,XMMWORD PTR [rip+0x508f5]        # 772c0 <global_tcp+0x20>
   269cb:	movups XMMWORD PTR [rax+0x20],xmm2
   269cf:	movdqa xmm3,XMMWORD PTR [rip+0x508f9]        # 772d0 <global_tcp+0x30>
   269d7:	mov    rdi,QWORD PTR [rip+0x508ea]        # 772c8 <global_tcp+0x28>
   269de:	movups XMMWORD PTR [rax+0x30],xmm3
   269e2:	movdqa xmm4,XMMWORD PTR [rip+0x508f6]        # 772e0 <global_tcp+0x40>
   269ea:	movups XMMWORD PTR [rax+0x40],xmm4
   269ee:	movdqa xmm5,XMMWORD PTR [rip+0x508fa]        # 772f0 <global_tcp+0x50>
   269f6:	movups XMMWORD PTR [rax+0x50],xmm5
   269fa:	movdqa xmm6,XMMWORD PTR [rip+0x508fe]        # 77300 <global_tcp+0x60>
   26a02:	movups XMMWORD PTR [rax+0x60],xmm6
   26a06:	call   127b0 <wget_strdup@plt>
   26a0b:	mov    QWORD PTR [r12+0x28],rax
   26a10:	mov    rax,r12
   26a13:	pop    r12
   26a15:	ret    
   26a16:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000026a20 <wget_tcp_ready_2_transfer>:
   26a20:	endbr64 
   26a24:	mov    edx,esi
   26a26:	test   rdi,rdi
   26a29:	je     26a40 <wget_tcp_ready_2_transfer+0x20>
   26a2b:	mov    esi,DWORD PTR [rdi+0x54]
   26a2e:	mov    edi,DWORD PTR [rdi+0x48]
   26a31:	jmp    11470 <wget_ready_2_transfer@plt>
   26a36:	cs nop WORD PTR [rax+rax*1+0x0]
   26a40:	mov    eax,0xffffffff
   26a45:	ret    
   26a46:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000026a50 <wget_tcp_tls_start>:
   26a50:	endbr64 
   26a54:	jmp    124d0 <wget_ssl_open@plt>
   26a59:	nop    DWORD PTR [rax+0x0]

0000000000026a60 <wget_tcp_tls_stop>:
   26a60:	endbr64 
   26a64:	test   rdi,rdi
   26a67:	je     26a70 <wget_tcp_tls_stop+0x10>
   26a69:	jmp    115a0 <wget_ssl_close@plt>
   26a6e:	xchg   ax,ax
   26a70:	ret    
   26a71:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   26a7c:	nop    DWORD PTR [rax+0x0]

0000000000026a80 <wget_tcp_read>:
   26a80:	endbr64 
   26a84:	push   r15
   26a86:	push   r14
   26a88:	push   r13
   26a8a:	push   r12
   26a8c:	push   rbp
   26a8d:	push   rbx
   26a8e:	sub    rsp,0x8
   26a92:	test   rdi,rdi
   26a95:	je     26b60 <wget_tcp_read+0xe0>
   26a9b:	mov    rbp,rsi
   26a9e:	test   rsi,rsi
   26aa1:	je     26b60 <wget_tcp_read+0xe0>
   26aa7:	mov    rbx,rdi
   26aaa:	mov    rdi,QWORD PTR [rdi]
   26aad:	mov    r13,rdx
   26ab0:	mov    ecx,DWORD PTR [rbx+0x54]
   26ab3:	test   rdi,rdi
   26ab6:	je     26ae0 <wget_tcp_read+0x60>
   26ab8:	call   11d20 <wget_ssl_read_timeout@plt>
   26abd:	mov    r12,rax
   26ac0:	test   r12,r12
   26ac3:	js     26b02 <wget_tcp_read+0x82>
   26ac5:	add    rsp,0x8
   26ac9:	mov    rax,r12
   26acc:	pop    rbx
   26acd:	pop    rbp
   26ace:	pop    r12
   26ad0:	pop    r13
   26ad2:	pop    r14
   26ad4:	pop    r15
   26ad6:	ret    
   26ad7:	nop    WORD PTR [rax+rax*1+0x0]
   26ae0:	mov    edi,DWORD PTR [rbx+0x48]
   26ae3:	test   ecx,ecx
   26ae5:	jne    26b40 <wget_tcp_read+0xc0>
   26ae7:	xor    r9d,r9d
   26aea:	xor    r8d,r8d
   26aed:	xor    ecx,ecx
   26aef:	mov    rdx,r13
   26af2:	mov    rsi,rbp
   26af5:	call   110f0 <recvfrom@plt>
   26afa:	mov    r12,rax
   26afd:	test   r12,r12
   26b00:	jns    26ac5 <wget_tcp_read+0x45>
   26b02:	call   104b0 <__errno_location@plt>
   26b07:	mov    r15,QWORD PTR [rbx+0x30]
   26b0b:	mov    r14,QWORD PTR [rbx+0x20]
   26b0f:	xor    edi,edi
   26b11:	mov    ebp,DWORD PTR [rax]
   26b13:	mov    edx,0x5
   26b18:	lea    rsi,[rip+0x26981]        # 4d4a0 <iri_ctype+0x280>
   26b1f:	call   10f90 <dcgettext@plt>
   26b24:	mov    rcx,r15
   26b27:	mov    rdx,r14
   26b2a:	mov    rsi,r13
   26b2d:	mov    rdi,rax
   26b30:	mov    r8d,ebp
   26b33:	xor    eax,eax
   26b35:	call   11ea0 <wget_error_printf@plt>
   26b3a:	jmp    26ac5 <wget_tcp_read+0x45>
   26b3c:	nop    DWORD PTR [rax+0x0]
   26b40:	mov    esi,ecx
   26b42:	call   11f30 <wget_ready_2_read@plt>
   26b47:	movsxd r12,eax
   26b4a:	test   r12,r12
   26b4d:	jle    26ac5 <wget_tcp_read+0x45>
   26b53:	mov    edi,DWORD PTR [rbx+0x48]
   26b56:	jmp    26ae7 <wget_tcp_read+0x67>
   26b58:	nop    DWORD PTR [rax+rax*1+0x0]
   26b60:	xor    r12d,r12d
   26b63:	jmp    26ac5 <wget_tcp_read+0x45>
   26b68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000026b70 <wget_tcp_write>:
   26b70:	endbr64 
   26b74:	push   r15
   26b76:	push   r14
   26b78:	push   r13
   26b7a:	push   r12
   26b7c:	push   rbp
   26b7d:	push   rbx
   26b7e:	sub    rsp,0x8
   26b82:	test   rdi,rdi
   26b85:	je     26c36 <wget_tcp_write+0xc6>
   26b8b:	mov    rbp,rsi
   26b8e:	test   rsi,rsi
   26b91:	je     26c36 <wget_tcp_write+0xc6>
   26b97:	mov    rbx,rdi
   26b9a:	mov    rdi,QWORD PTR [rdi]
   26b9d:	mov    r12,rdx
   26ba0:	test   rdi,rdi
   26ba3:	jne    26c20 <wget_tcp_write+0xb0>
   26ba5:	xor    r13d,r13d
   26ba8:	test   rdx,rdx
   26bab:	je     26bd5 <wget_tcp_write+0x65>
   26bad:	nop    DWORD PTR [rax]
   26bb0:	mov    edi,DWORD PTR [rbx+0x48]
   26bb3:	xor    ecx,ecx
   26bb5:	mov    rdx,r12
   26bb8:	mov    rsi,rbp
   26bbb:	call   10ba0 <send@plt>
   26bc0:	test   rax,rax
   26bc3:	js     26bf0 <wget_tcp_write+0x80>
   26bc5:	add    r13,rax
   26bc8:	cmp    r12,rax
   26bcb:	jbe    26bd8 <wget_tcp_write+0x68>
   26bcd:	add    rbp,rax
   26bd0:	sub    r12,rax
   26bd3:	jne    26bb0 <wget_tcp_write+0x40>
   26bd5:	xor    r13d,r13d
   26bd8:	add    rsp,0x8
   26bdc:	mov    rax,r13
   26bdf:	pop    rbx
   26be0:	pop    rbp
   26be1:	pop    r12
   26be3:	pop    r13
   26be5:	pop    r14
   26be7:	pop    r15
   26be9:	ret    
   26bea:	nop    WORD PTR [rax+rax*1+0x0]
   26bf0:	call   104b0 <__errno_location@plt>
   26bf5:	mov    r14d,DWORD PTR [rax]
   26bf8:	lea    eax,[r14-0x6b]
   26bfc:	and    eax,0xfffffff7
   26bff:	je     26c07 <wget_tcp_write+0x97>
   26c01:	cmp    r14d,0xb
   26c05:	jne    26c3f <wget_tcp_write+0xcf>
   26c07:	mov    esi,DWORD PTR [rbx+0x54]
   26c0a:	test   esi,esi
   26c0c:	je     26bb0 <wget_tcp_write+0x40>
   26c0e:	mov    edi,DWORD PTR [rbx+0x48]
   26c11:	call   123f0 <wget_ready_2_write@plt>
   26c16:	test   eax,eax
   26c18:	jg     26bb0 <wget_tcp_write+0x40>
   26c1a:	movsxd r13,eax
   26c1d:	jmp    26bd8 <wget_tcp_write+0x68>
   26c1f:	nop
   26c20:	mov    ecx,DWORD PTR [rbx+0x54]
   26c23:	add    rsp,0x8
   26c27:	pop    rbx
   26c28:	pop    rbp
   26c29:	pop    r12
   26c2b:	pop    r13
   26c2d:	pop    r14
   26c2f:	pop    r15
   26c31:	jmp    11e30 <wget_ssl_write_timeout@plt>
   26c36:	mov    r13,0xffffffffffffffff
   26c3d:	jmp    26bd8 <wget_tcp_write+0x68>
   26c3f:	mov    r13,QWORD PTR [rbx+0x20]
   26c43:	mov    r15,QWORD PTR [rbx+0x30]
   26c47:	mov    edx,0x5
   26c4c:	xor    edi,edi
   26c4e:	lea    rsi,[rip+0x2688b]        # 4d4e0 <iri_ctype+0x2c0>
   26c55:	call   10f90 <dcgettext@plt>
   26c5a:	mov    rdx,r13
   26c5d:	mov    r8d,r14d
   26c60:	mov    rcx,r15
   26c63:	mov    rdi,rax
   26c66:	mov    rsi,r12
   26c69:	xor    eax,eax
   26c6b:	mov    r13,0xffffffffffffffff
   26c72:	call   11ea0 <wget_error_printf@plt>
   26c77:	jmp    26bd8 <wget_tcp_write+0x68>
   26c7c:	nop    DWORD PTR [rax+0x0]

0000000000026c80 <wget_tcp_vprintf>:
   26c80:	endbr64 
   26c84:	push   r14
   26c86:	push   r13
   26c88:	push   r12
   26c8a:	push   rbp
   26c8b:	sub    rsp,0x1000
   26c92:	or     QWORD PTR [rsp],0x0
   26c97:	sub    rsp,0x38
   26c9b:	mov    rbp,rsp
   26c9e:	mov    r12,rdi
   26ca1:	mov    r13,rsi
   26ca4:	mov    r14,rdx
   26ca7:	mov    rax,QWORD PTR fs:0x28
   26cb0:	mov    QWORD PTR [rsp+0x1028],rax
   26cb8:	xor    eax,eax
   26cba:	lea    rsi,[rsp+0x20]
   26cbf:	mov    edx,0x1000
   26cc4:	mov    rdi,rbp
   26cc7:	call   108d0 <wget_buffer_init@plt>
   26ccc:	mov    rdx,r14
   26ccf:	mov    rsi,r13
   26cd2:	mov    rdi,rbp
   26cd5:	call   11080 <wget_buffer_vprintf@plt>
   26cda:	mov    rdx,QWORD PTR [rsp+0x8]
   26cdf:	mov    rsi,QWORD PTR [rsp]
   26ce3:	mov    rdi,r12
   26ce6:	call   105f0 <wget_tcp_write@plt>
   26ceb:	mov    rdi,rbp
   26cee:	mov    r12,rax
   26cf1:	call   11300 <wget_buffer_deinit@plt>
   26cf6:	test   r12,r12
   26cf9:	jg     26d20 <wget_tcp_vprintf+0xa0>
   26cfb:	mov    rax,QWORD PTR [rsp+0x1028]
   26d03:	sub    rax,QWORD PTR fs:0x28
   26d0c:	jne    26d62 <wget_tcp_vprintf+0xe2>
   26d0e:	add    rsp,0x1038
   26d15:	mov    rax,r12
   26d18:	pop    rbp
   26d19:	pop    r12
   26d1b:	pop    r13
   26d1d:	pop    r14
   26d1f:	ret    
   26d20:	mov    rdi,QWORD PTR [rsp]
   26d24:	mov    rsi,r12
   26d27:	call   12760 <wget_debug_write@plt>
   26d2c:	mov    r13,QWORD PTR [rsp+0x8]
   26d31:	cmp    r12,r13
   26d34:	je     26cfb <wget_tcp_vprintf+0x7b>
   26d36:	xor    edi,edi
   26d38:	mov    edx,0x5
   26d3d:	lea    rsi,[rip+0x267dc]        # 4d520 <iri_ctype+0x300>
   26d44:	call   10f90 <dcgettext@plt>
   26d49:	mov    rcx,r12
   26d4c:	mov    rdx,r13
   26d4f:	lea    rsi,[rip+0x268da]        # 4d630 <__func__.0>
   26d56:	mov    rdi,rax
   26d59:	xor    eax,eax
   26d5b:	call   11ea0 <wget_error_printf@plt>
   26d60:	jmp    26cfb <wget_tcp_vprintf+0x7b>
   26d62:	call   11760 <__stack_chk_fail@plt>
   26d67:	nop    WORD PTR [rax+rax*1+0x0]

0000000000026d70 <wget_tcp_printf>:
   26d70:	endbr64 
   26d74:	sub    rsp,0xd8
   26d7b:	mov    QWORD PTR [rsp+0x30],rdx
   26d80:	mov    QWORD PTR [rsp+0x38],rcx
   26d85:	mov    QWORD PTR [rsp+0x40],r8
   26d8a:	mov    QWORD PTR [rsp+0x48],r9
   26d8f:	test   al,al
   26d91:	je     26dca <wget_tcp_printf+0x5a>
   26d93:	movaps XMMWORD PTR [rsp+0x50],xmm0
   26d98:	movaps XMMWORD PTR [rsp+0x60],xmm1
   26d9d:	movaps XMMWORD PTR [rsp+0x70],xmm2
   26da2:	movaps XMMWORD PTR [rsp+0x80],xmm3
   26daa:	movaps XMMWORD PTR [rsp+0x90],xmm4
   26db2:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   26dba:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   26dc2:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   26dca:	mov    rax,QWORD PTR fs:0x28
   26dd3:	mov    QWORD PTR [rsp+0x18],rax
   26dd8:	xor    eax,eax
   26dda:	lea    rax,[rsp+0xe0]
   26de2:	mov    rdx,rsp
   26de5:	mov    DWORD PTR [rsp],0x10
   26dec:	mov    QWORD PTR [rsp+0x8],rax
   26df1:	lea    rax,[rsp+0x20]
   26df6:	mov    DWORD PTR [rsp+0x4],0x30
   26dfe:	mov    QWORD PTR [rsp+0x10],rax
   26e03:	call   10f40 <wget_tcp_vprintf@plt>
   26e08:	mov    rdx,QWORD PTR [rsp+0x18]
   26e0d:	sub    rdx,QWORD PTR fs:0x28
   26e16:	jne    26e20 <wget_tcp_printf+0xb0>
   26e18:	add    rsp,0xd8
   26e1f:	ret    
   26e20:	call   11760 <__stack_chk_fail@plt>
   26e25:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000026e30 <wget_tcp_close>:
   26e30:	endbr64 
   26e34:	test   rdi,rdi
   26e37:	je     26e90 <wget_tcp_close+0x60>
   26e39:	push   rbx
   26e3a:	mov    rbx,rdi
   26e3d:	call   121d0 <wget_tcp_tls_stop@plt>
   26e42:	mov    edi,DWORD PTR [rbx+0x48]
   26e45:	cmp    edi,0xffffffff
   26e48:	jne    26e78 <wget_tcp_close+0x48>
   26e4a:	mov    rdi,QWORD PTR [rbx+0x40]
   26e4e:	lea    rsi,[rbx+0x8]
   26e52:	call   126d0 <wget_dns_freeaddrinfo@plt>
   26e57:	mov    rdi,QWORD PTR [rbx+0x20]
   26e5b:	test   rdi,rdi
   26e5e:	je     26e71 <wget_tcp_close+0x41>
   26e60:	mov    rax,QWORD PTR [rip+0x4f181]        # 75fe8 <wget_free@@Base-0x1328>
   26e67:	call   QWORD PTR [rax]
   26e69:	mov    QWORD PTR [rbx+0x20],0x0
   26e71:	pop    rbx
   26e72:	ret    
   26e73:	nop    DWORD PTR [rax+rax*1+0x0]
   26e78:	call   12740 <close@plt>
   26e7d:	mov    DWORD PTR [rbx+0x48],0xffffffff
   26e84:	jmp    26e4a <wget_tcp_close+0x1a>
   26e86:	cs nop WORD PTR [rax+rax*1+0x0]
   26e90:	ret    
   26e91:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   26e9c:	nop    DWORD PTR [rax+0x0]

0000000000026ea0 <wget_tcp_deinit>:
   26ea0:	endbr64 
   26ea4:	push   r12
   26ea6:	push   rbp
   26ea7:	push   rbx
   26ea8:	test   rdi,rdi
   26eab:	je     26f18 <wget_tcp_deinit+0x78>
   26ead:	mov    rbp,QWORD PTR [rdi]
   26eb0:	mov    rbx,rdi
   26eb3:	test   rbp,rbp
   26eb6:	je     26f0c <wget_tcp_deinit+0x6c>
   26eb8:	mov    rdi,rbp
   26ebb:	call   112b0 <wget_tcp_close@plt>
   26ec0:	mov    rdi,QWORD PTR [rbp+0x40]
   26ec4:	lea    rsi,[rbp+0x10]
   26ec8:	call   126d0 <wget_dns_freeaddrinfo@plt>
   26ecd:	mov    rdi,QWORD PTR [rbp+0x28]
   26ed1:	mov    r12,QWORD PTR [rip+0x4f110]        # 75fe8 <wget_free@@Base-0x1328>
   26ed8:	test   rdi,rdi
   26edb:	je     26ee9 <wget_tcp_deinit+0x49>
   26edd:	call   QWORD PTR [r12]
   26ee1:	mov    QWORD PTR [rbp+0x28],0x0
   26ee9:	mov    rdi,QWORD PTR [rbp+0x30]
   26eed:	test   rdi,rdi
   26ef0:	je     26efe <wget_tcp_deinit+0x5e>
   26ef2:	call   QWORD PTR [r12]
   26ef6:	mov    QWORD PTR [rbp+0x30],0x0
   26efe:	mov    rdi,rbp
   26f01:	call   QWORD PTR [r12]
   26f05:	mov    QWORD PTR [rbx],0x0
   26f0c:	pop    rbx
   26f0d:	pop    rbp
   26f0e:	pop    r12
   26f10:	ret    
   26f11:	nop    DWORD PTR [rax+0x0]
   26f18:	mov    rdi,QWORD PTR [rip+0x503a9]        # 772c8 <global_tcp+0x28>
   26f1f:	test   rdi,rdi
   26f22:	je     26f0c <wget_tcp_deinit+0x6c>
   26f24:	mov    rax,QWORD PTR [rip+0x4f0bd]        # 75fe8 <wget_free@@Base-0x1328>
   26f2b:	call   QWORD PTR [rax]
   26f2d:	pop    rbx
   26f2e:	pop    rbp
   26f2f:	mov    QWORD PTR [rip+0x5038e],0x0        # 772c8 <global_tcp+0x28>
   26f3a:	pop    r12
   26f3c:	ret    
   26f3d:	nop    DWORD PTR [rax]

0000000000026f40 <wget_tcp_connect>:
   26f40:	endbr64 
   26f44:	push   r15
   26f46:	mov    r15,rsi
   26f49:	push   r14
   26f4b:	push   r13
   26f4d:	push   r12
   26f4f:	mov    r12,rdi
   26f52:	mov    edi,0x3
   26f57:	push   rbp
   26f58:	mov    ebp,edx
   26f5a:	push   rbx
   26f5b:	sub    rsp,0x458
   26f62:	mov    rax,QWORD PTR fs:0x28
   26f6b:	mov    QWORD PTR [rsp+0x448],rax
   26f73:	xor    eax,eax
   26f75:	call   11620 <wget_get_logger@plt>
   26f7a:	mov    rdi,rax
   26f7d:	call   12710 <wget_logger_is_active@plt>
   26f82:	test   r12,r12
   26f85:	je     2745d <wget_tcp_connect+0x51d>
   26f8b:	mov    rdi,QWORD PTR [r12+0x40]
   26f90:	lea    rsi,[r12+0x8]
   26f95:	mov    r14d,eax
   26f98:	call   126d0 <wget_dns_freeaddrinfo@plt>
   26f9d:	mov    rdi,QWORD PTR [r12+0x20]
   26fa2:	test   rdi,rdi
   26fa5:	je     26fb9 <wget_tcp_connect+0x79>
   26fa7:	mov    rax,QWORD PTR [rip+0x4f03a]        # 75fe8 <wget_free@@Base-0x1328>
   26fae:	call   QWORD PTR [rax]
   26fb0:	mov    QWORD PTR [r12+0x20],0x0
   26fb9:	mov    ecx,DWORD PTR [r12+0x58]
   26fbe:	mov    rdi,QWORD PTR [r12+0x40]
   26fc3:	movzx  edx,bp
   26fc6:	mov    rsi,r15
   26fc9:	mov    r8d,DWORD PTR [r12+0x5c]
   26fce:	mov    r13d,0xffffffff
   26fd4:	call   10cd0 <wget_dns_resolve@plt>
   26fd9:	mov    WORD PTR [r12+0x68],bp
   26fdf:	mov    QWORD PTR [r12+0x8],rax
   26fe4:	mov    rbx,rax
   26fe7:	test   rax,rax
   26fea:	jne    27193 <wget_tcp_connect+0x253>
   26ff0:	jmp    27210 <wget_tcp_connect+0x2d0>
   26ff5:	nop    DWORD PTR [rax]
   26ff8:	mov    edi,eax
   26ffa:	mov    esi,0x3
   26fff:	xor    eax,eax
   27001:	call   40550 <rpl_fcntl>
   27006:	test   eax,eax
   27008:	js     27468 <wget_tcp_connect+0x528>
   2700e:	or     ah,0x8
   27011:	mov    esi,0x4
   27016:	mov    edi,ebp
   27018:	mov    edx,eax
   2701a:	xor    eax,eax
   2701c:	call   40550 <rpl_fcntl>
   27021:	test   eax,eax
   27023:	js     27485 <wget_tcp_connect+0x545>
   27029:	lea    r13,[rsp+0x1c]
   2702e:	mov    r8d,0x4
   27034:	mov    edx,0x2
   27039:	mov    edi,ebp
   2703b:	mov    rcx,r13
   2703e:	mov    esi,0x1
   27043:	mov    DWORD PTR [rsp+0x1c],0x1
   2704b:	call   123e0 <setsockopt@plt>
   27050:	cmp    eax,0xffffffff
   27053:	je     27338 <wget_tcp_connect+0x3f8>
   27059:	mov    r8d,0x4
   2705f:	mov    rcx,r13
   27062:	mov    edx,0x1
   27067:	mov    edi,ebp
   27069:	mov    esi,0x6
   2706e:	mov    DWORD PTR [rsp+0x1c],0x1
   27076:	call   123e0 <setsockopt@plt>
   2707b:	cmp    eax,0xffffffff
   2707e:	je     27310 <wget_tcp_connect+0x3d0>
   27084:	mov    rcx,QWORD PTR [r12+0x38]
   27089:	test   rcx,rcx
   2708c:	je     270bd <wget_tcp_connect+0x17d>
   2708e:	mov    rdi,rcx
   27091:	mov    QWORD PTR [rsp+0x8],rcx
   27096:	call   10ab0 <strlen@plt>
   2709b:	mov    rcx,QWORD PTR [rsp+0x8]
   270a0:	mov    edx,0x19
   270a5:	mov    edi,ebp
   270a7:	mov    r8d,eax
   270aa:	mov    esi,0x1
   270af:	call   123e0 <setsockopt@plt>
   270b4:	cmp    eax,0xffffffff
   270b7:	je     27378 <wget_tcp_connect+0x438>
   270bd:	mov    r8d,0x4
   270c3:	mov    rcx,r13
   270c6:	mov    edx,0x1e
   270cb:	mov    edi,ebp
   270cd:	mov    esi,0x6
   270d2:	mov    DWORD PTR [rsp+0x1c],0x1
   270da:	call   123e0 <setsockopt@plt>
   270df:	cmp    eax,0xffffffff
   270e2:	je     27360 <wget_tcp_connect+0x420>
   270e8:	mov    rax,QWORD PTR [r12+0x10]
   270ed:	test   rax,rax
   270f0:	je     27111 <wget_tcp_connect+0x1d1>
   270f2:	test   r14b,r14b
   270f5:	jne    272f0 <wget_tcp_connect+0x3b0>
   270fb:	mov    edx,DWORD PTR [rax+0x10]
   270fe:	mov    rsi,QWORD PTR [rax+0x18]
   27102:	mov    edi,ebp
   27104:	call   10630 <bind@plt>
   27109:	test   eax,eax
   2710b:	jne    273fa <wget_tcp_connect+0x4ba>
   27111:	mov    edx,DWORD PTR [rbx+0x10]
   27114:	mov    rsi,QWORD PTR [rbx+0x18]
   27118:	test   BYTE PTR [r12+0x6a],0x4
   2711e:	je     27260 <wget_tcp_connect+0x320>
   27124:	mov    QWORD PTR [r12+0x18],rbx
   27129:	mov    edi,ebp
   2712b:	call   11240 <connect@plt>
   27130:	and    BYTE PTR [r12+0x6a],0xf7
   27136:	test   eax,eax
   27138:	js     27275 <wget_tcp_connect+0x335>
   2713e:	mov    DWORD PTR [r12+0x48],ebp
   27143:	test   BYTE PTR [r12+0x6a],0x1
   27149:	je     273a0 <wget_tcp_connect+0x460>
   2714f:	mov    rdi,r12
   27152:	call   124d0 <wget_ssl_open@plt>
   27157:	mov    r13d,eax
   2715a:	test   eax,eax
   2715c:	je     273a0 <wget_tcp_connect+0x460>
   27162:	cmp    eax,0xfffffff9
   27165:	je     27450 <wget_tcp_connect+0x510>
   2716b:	mov    rbp,QWORD PTR [r12+0x8]
   27170:	mov    rdi,r12
   27173:	mov    QWORD PTR [r12+0x8],0x0
   2717c:	call   112b0 <wget_tcp_close@plt>
   27181:	mov    QWORD PTR [r12+0x8],rbp
   27186:	mov    rbx,QWORD PTR [rbx+0x28]
   2718a:	test   rbx,rbx
   2718d:	je     27210 <wget_tcp_connect+0x2d0>
   27193:	mov    esi,DWORD PTR [rbx+0x8]
   27196:	cmp    esi,0x1
   27199:	jne    27186 <wget_tcp_connect+0x246>
   2719b:	test   r14b,r14b
   2719e:	jne    27240 <wget_tcp_connect+0x300>
   271a4:	mov    edx,DWORD PTR [rbx+0xc]
   271a7:	mov    edi,DWORD PTR [rbx+0x4]
   271aa:	call   107a0 <socket@plt>
   271af:	mov    ebp,eax
   271b1:	cmp    eax,0xffffffff
   271b4:	jne    26ff8 <wget_tcp_connect+0xb8>
   271ba:	mov    edx,0x5
   271bf:	lea    rsi,[rip+0x262c2]        # 4d488 <iri_ctype+0x268>
   271c6:	xor    edi,edi
   271c8:	call   10f90 <dcgettext@plt>
   271cd:	mov    rbp,rax
   271d0:	call   104b0 <__errno_location@plt>
   271d5:	mov    edx,0x5
   271da:	lea    rsi,[rip+0x26277]        # 4d458 <iri_ctype+0x238>
   271e1:	xor    edi,edi
   271e3:	mov    ecx,DWORD PTR [rax]
   271e5:	mov    DWORD PTR [rsp+0x8],ecx
   271e9:	call   10f90 <dcgettext@plt>
   271ee:	mov    ecx,DWORD PTR [rsp+0x8]
   271f2:	mov    rdx,r15
   271f5:	mov    rsi,rbp
   271f8:	mov    rdi,rax
   271fb:	xor    eax,eax
   271fd:	call   11ea0 <wget_error_printf@plt>
   27202:	mov    rbx,QWORD PTR [rbx+0x28]
   27206:	test   rbx,rbx
   27209:	jne    27193 <wget_tcp_connect+0x253>
   2720b:	nop    DWORD PTR [rax+rax*1+0x0]
   27210:	mov    rax,QWORD PTR [rsp+0x448]
   27218:	sub    rax,QWORD PTR fs:0x28
   27221:	jne    27493 <wget_tcp_connect+0x553>
   27227:	add    rsp,0x458
   2722e:	mov    eax,r13d
   27231:	pop    rbx
   27232:	pop    rbp
   27233:	pop    r12
   27235:	pop    r13
   27237:	pop    r14
   27239:	pop    r15
   2723b:	ret    
   2723c:	nop    DWORD PTR [rax+0x0]
   27240:	mov    rsi,QWORD PTR [rbx+0x18]
   27244:	mov    edx,DWORD PTR [rbx+0x10]
   27247:	lea    rdi,[rip+0x261cd]        # 4d41b <iri_ctype+0x1fb>
   2724e:	call   26340 <debug_addr>
   27253:	mov    esi,DWORD PTR [rbx+0x8]
   27256:	jmp    271a4 <wget_tcp_connect+0x264>
   2725b:	nop    DWORD PTR [rax+rax*1+0x0]
   27260:	mov    edi,ebp
   27262:	call   11240 <connect@plt>
   27267:	and    BYTE PTR [r12+0x6a],0xf7
   2726d:	test   eax,eax
   2726f:	jns    2713e <wget_tcp_connect+0x1fe>
   27275:	call   104b0 <__errno_location@plt>
   2727a:	mov    r13,rax
   2727d:	mov    eax,DWORD PTR [rax]
   2727f:	cmp    eax,0x73
   27282:	je     2713e <wget_tcp_connect+0x1fe>
   27288:	cmp    eax,0xb
   2728b:	je     2713e <wget_tcp_connect+0x1fe>
   27291:	mov    edx,0x5
   27296:	lea    rsi,[rip+0x261d9]        # 4d476 <iri_ctype+0x256>
   2729d:	xor    edi,edi
   2729f:	call   10f90 <dcgettext@plt>
   272a4:	mov    r13d,DWORD PTR [r13+0x0]
   272a8:	mov    edx,0x5
   272ad:	xor    edi,edi
   272af:	lea    rsi,[rip+0x261a2]        # 4d458 <iri_ctype+0x238>
   272b6:	mov    QWORD PTR [rsp+0x8],rax
   272bb:	call   10f90 <dcgettext@plt>
   272c0:	mov    rsi,QWORD PTR [rsp+0x8]
   272c5:	mov    ecx,r13d
   272c8:	mov    rdx,r15
   272cb:	mov    rdi,rax
   272ce:	xor    eax,eax
   272d0:	mov    r13d,0xfffffffb
   272d6:	call   11ea0 <wget_error_printf@plt>
   272db:	mov    edi,ebp
   272dd:	call   12740 <close@plt>
   272e2:	jmp    27186 <wget_tcp_connect+0x246>
   272e7:	nop    WORD PTR [rax+rax*1+0x0]
   272f0:	mov    edx,DWORD PTR [rax+0x10]
   272f3:	mov    rsi,QWORD PTR [rax+0x18]
   272f7:	lea    rdi,[rip+0x26140]        # 4d43e <iri_ctype+0x21e>
   272fe:	call   26340 <debug_addr>
   27303:	mov    rax,QWORD PTR [r12+0x10]
   27308:	jmp    270fb <wget_tcp_connect+0x1bb>
   2730d:	nop    DWORD PTR [rax]
   27310:	xor    edi,edi
   27312:	mov    edx,0x5
   27317:	lea    rsi,[rip+0x26282]        # 4d5a0 <iri_ctype+0x380>
   2731e:	call   10f90 <dcgettext@plt>
   27323:	mov    rdi,rax
   27326:	xor    eax,eax
   27328:	call   11ea0 <wget_error_printf@plt>
   2732d:	jmp    27084 <wget_tcp_connect+0x144>
   27332:	nop    WORD PTR [rax+rax*1+0x0]
   27338:	xor    edi,edi
   2733a:	mov    edx,0x5
   2733f:	lea    rsi,[rip+0x26232]        # 4d578 <iri_ctype+0x358>
   27346:	call   10f90 <dcgettext@plt>
   2734b:	mov    rdi,rax
   2734e:	xor    eax,eax
   27350:	call   11ea0 <wget_error_printf@plt>
   27355:	jmp    27059 <wget_tcp_connect+0x119>
   2735a:	nop    WORD PTR [rax+rax*1+0x0]
   27360:	lea    rdi,[rip+0x26291]        # 4d5f8 <iri_ctype+0x3d8>
   27367:	xor    eax,eax
   27369:	call   114b0 <wget_debug_printf@plt>
   2736e:	jmp    270e8 <wget_tcp_connect+0x1a8>
   27373:	nop    DWORD PTR [rax+rax*1+0x0]
   27378:	xor    edi,edi
   2737a:	mov    edx,0x5
   2737f:	lea    rsi,[rip+0x26242]        # 4d5c8 <iri_ctype+0x3a8>
   27386:	call   10f90 <dcgettext@plt>
   2738b:	mov    rdi,rax
   2738e:	xor    eax,eax
   27390:	call   11ea0 <wget_error_printf@plt>
   27395:	jmp    270bd <wget_tcp_connect+0x17d>
   2739a:	nop    WORD PTR [rax+rax*1+0x0]
   273a0:	lea    rbp,[rsp+0x40]
   273a5:	sub    rsp,0x8
   273a9:	mov    esi,DWORD PTR [rbx+0x10]
   273ac:	mov    rdi,QWORD PTR [rbx+0x18]
   273b0:	push   0x3
   273b2:	mov    rdx,rbp
   273b5:	mov    r9d,0x20
   273bb:	mov    ecx,0x401
   273c0:	lea    r8,[rsp+0x30]
   273c5:	call   10eb0 <getnameinfo@plt>
   273ca:	mov    r8d,eax
   273cd:	pop    rax
   273ce:	xor    eax,eax
   273d0:	pop    rdx
   273d1:	test   r8d,r8d
   273d4:	je     273f0 <wget_tcp_connect+0x4b0>
   273d6:	mov    QWORD PTR [r12+0x30],rax
   273db:	mov    rdi,r15
   273de:	xor    r13d,r13d
   273e1:	call   127b0 <wget_strdup@plt>
   273e6:	mov    QWORD PTR [r12+0x20],rax
   273eb:	jmp    27210 <wget_tcp_connect+0x2d0>
   273f0:	mov    rdi,rbp
   273f3:	call   127b0 <wget_strdup@plt>
   273f8:	jmp    273d6 <wget_tcp_connect+0x496>
   273fa:	mov    edx,0x5
   273ff:	lea    rsi,[rip+0x26043]        # 4d449 <iri_ctype+0x229>
   27406:	xor    edi,edi
   27408:	call   10f90 <dcgettext@plt>
   2740d:	mov    r12,rax
   27410:	call   104b0 <__errno_location@plt>
   27415:	mov    edx,0x5
   2741a:	lea    rsi,[rip+0x26037]        # 4d458 <iri_ctype+0x238>
   27421:	xor    edi,edi
   27423:	mov    r13d,DWORD PTR [rax]
   27426:	call   10f90 <dcgettext@plt>
   2742b:	mov    rdx,r15
   2742e:	mov    rsi,r12
   27431:	mov    rdi,rax
   27434:	mov    ecx,r13d
   27437:	xor    eax,eax
   27439:	mov    r13d,0xffffffff
   2743f:	call   11ea0 <wget_error_printf@plt>
   27444:	mov    edi,ebp
   27446:	call   12740 <close@plt>
   2744b:	jmp    27210 <wget_tcp_connect+0x2d0>
   27450:	mov    rdi,r12
   27453:	call   112b0 <wget_tcp_close@plt>
   27458:	jmp    27210 <wget_tcp_connect+0x2d0>
   2745d:	mov    r13d,0xfffffffd
   27463:	jmp    27210 <wget_tcp_connect+0x2d0>
   27468:	mov    edx,0x5
   2746d:	lea    rsi,[rip+0x25fae]        # 4d422 <iri_ctype+0x202>
   27474:	xor    edi,edi
   27476:	call   10f90 <dcgettext@plt>
   2747b:	mov    rdi,rax
   2747e:	xor    eax,eax
   27480:	call   10580 <wget_error_printf_exit@plt>
   27485:	mov    edx,0x5
   2748a:	lea    rsi,[rip+0x260bf]        # 4d550 <iri_ctype+0x330>
   27491:	jmp    27474 <wget_tcp_connect+0x534>
   27493:	call   11760 <__stack_chk_fail@plt>
   27498:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000274a0 <hash_netrc>:
   274a0:	endbr64 
   274a4:	mov    rcx,QWORD PTR [rdi]
   274a7:	xor    eax,eax
   274a9:	movzx  edx,BYTE PTR [rcx]
   274ac:	test   dl,dl
   274ae:	je     274c8 <hash_netrc+0x28>
   274b0:	imul   eax,eax,0x65
   274b3:	add    rcx,0x1
   274b7:	add    eax,edx
   274b9:	movzx  edx,BYTE PTR [rcx]
   274bc:	test   dl,dl
   274be:	jne    274b0 <hash_netrc+0x10>
   274c0:	ret    
   274c1:	nop    DWORD PTR [rax+0x0]
   274c8:	ret    
   274c9:	nop    DWORD PTR [rax+0x0]

00000000000274d0 <compare_netrc>:
   274d0:	endbr64 
   274d4:	mov    rsi,QWORD PTR [rsi]
   274d7:	mov    rdi,QWORD PTR [rdi]
   274da:	jmp    103f0 <wget_strcmp@plt>
   274df:	nop

00000000000274e0 <wget_netrc_init>:
   274e0:	endbr64 
   274e4:	mov    rax,rdi
   274e7:	test   rdi,rdi
   274ea:	je     27500 <wget_netrc_init+0x20>
   274ec:	pxor   xmm0,xmm0
   274f0:	movups XMMWORD PTR [rdi],xmm0
   274f3:	movups XMMWORD PTR [rdi+0x10],xmm0
   274f7:	ret    
   274f8:	nop    DWORD PTR [rax+rax*1+0x0]
   27500:	mov    rax,QWORD PTR [rip+0x4ea39]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   27507:	mov    esi,0x20
   2750c:	mov    edi,0x1
   27511:	mov    rax,QWORD PTR [rax]
   27514:	jmp    rax
   27516:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000027520 <wget_netrc_deinit>:
   27520:	endbr64 
   27524:	test   rdi,rdi
   27527:	je     27580 <wget_netrc_deinit+0x60>
   27529:	push   rbx
   2752a:	mov    rbx,rdi
   2752d:	mov    rdi,QWORD PTR [rdi]
   27530:	test   rdi,rdi
   27533:	je     27545 <wget_netrc_deinit+0x25>
   27535:	mov    rax,QWORD PTR [rip+0x4eaac]        # 75fe8 <wget_free@@Base-0x1328>
   2753c:	call   QWORD PTR [rax]
   2753e:	mov    QWORD PTR [rbx],0x0
   27545:	mov    rdi,QWORD PTR [rbx+0x8]
   27549:	test   rdi,rdi
   2754c:	je     2755f <wget_netrc_deinit+0x3f>
   2754e:	mov    rax,QWORD PTR [rip+0x4ea93]        # 75fe8 <wget_free@@Base-0x1328>
   27555:	call   QWORD PTR [rax]
   27557:	mov    QWORD PTR [rbx+0x8],0x0
   2755f:	mov    rdi,QWORD PTR [rbx+0x10]
   27563:	test   rdi,rdi
   27566:	je     27579 <wget_netrc_deinit+0x59>
   27568:	mov    rax,QWORD PTR [rip+0x4ea79]        # 75fe8 <wget_free@@Base-0x1328>
   2756f:	call   QWORD PTR [rax]
   27571:	mov    QWORD PTR [rbx+0x10],0x0
   27579:	pop    rbx
   2757a:	ret    
   2757b:	nop    DWORD PTR [rax+rax*1+0x0]
   27580:	ret    
   27581:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2758c:	nop    DWORD PTR [rax+0x0]

0000000000027590 <wget_netrc_free>:
   27590:	endbr64 
   27594:	test   rdi,rdi
   27597:	je     275b8 <wget_netrc_free+0x28>
   27599:	push   rbp
   2759a:	mov    rbp,rdi
   2759d:	call   11ca0 <wget_netrc_deinit@plt>
   275a2:	mov    rax,QWORD PTR [rip+0x4ea3f]        # 75fe8 <wget_free@@Base-0x1328>
   275a9:	mov    rdi,rbp
   275ac:	pop    rbp
   275ad:	mov    rax,QWORD PTR [rax]
   275b0:	jmp    rax
   275b2:	nop    WORD PTR [rax+rax*1+0x0]
   275b8:	ret    
   275b9:	nop    DWORD PTR [rax+0x0]

00000000000275c0 <wget_netrc_new>:
   275c0:	endbr64 
   275c4:	push   r14
   275c6:	mov    r14,rsi
   275c9:	push   r13
   275cb:	mov    r13,rdi
   275ce:	xor    edi,edi
   275d0:	push   r12
   275d2:	push   rbp
   275d3:	mov    rbp,rdx
   275d6:	sub    rsp,0x8
   275da:	call   116d0 <wget_netrc_init@plt>
   275df:	mov    r12,rax
   275e2:	test   rax,rax
   275e5:	je     2760d <wget_netrc_new+0x4d>
   275e7:	mov    rdi,r13
   275ea:	call   127b0 <wget_strdup@plt>
   275ef:	mov    rdi,r14
   275f2:	mov    QWORD PTR [r12],rax
   275f6:	call   127b0 <wget_strdup@plt>
   275fb:	mov    rdi,rbp
   275fe:	mov    QWORD PTR [r12+0x8],rax
   27603:	call   127b0 <wget_strdup@plt>
   27608:	mov    QWORD PTR [r12+0x10],rax
   2760d:	add    rsp,0x8
   27611:	mov    rax,r12
   27614:	pop    rbp
   27615:	pop    r12
   27617:	pop    r13
   27619:	pop    r14
   2761b:	ret    
   2761c:	nop    DWORD PTR [rax+0x0]

0000000000027620 <wget_netrc_get>:
   27620:	endbr64 
   27624:	push   r12
   27626:	xor    r12d,r12d
   27629:	sub    rsp,0x40
   2762d:	mov    rax,QWORD PTR fs:0x28
   27636:	mov    QWORD PTR [rsp+0x38],rax
   2763b:	xor    eax,eax
   2763d:	test   rdi,rdi
   27640:	je     27661 <wget_netrc_get+0x41>
   27642:	mov    rdi,QWORD PTR [rdi]
   27645:	mov    QWORD PTR [rsp+0x10],rsi
   2764a:	lea    rdx,[rsp+0x8]
   2764f:	lea    rsi,[rsp+0x10]
   27654:	call   10520 <wget_hashmap_get@plt>
   27659:	test   eax,eax
   2765b:	cmovne r12,QWORD PTR [rsp+0x8]
   27661:	mov    rax,QWORD PTR [rsp+0x38]
   27666:	sub    rax,QWORD PTR fs:0x28
   2766f:	jne    2767b <wget_netrc_get+0x5b>
   27671:	add    rsp,0x40
   27675:	mov    rax,r12
   27678:	pop    r12
   2767a:	ret    
   2767b:	call   11760 <__stack_chk_fail@plt>

0000000000027680 <wget_netrc_db_init>:
   27680:	endbr64 
   27684:	push   r12
   27686:	lea    rdx,[rip+0xfffffffffffffe43]        # 274d0 <compare_netrc>
   2768d:	mov    r12,rdi
   27690:	lea    rsi,[rip+0xfffffffffffffe09]        # 274a0 <hash_netrc>
   27697:	push   rbp
   27698:	mov    edi,0x10
   2769d:	sub    rsp,0x18
   276a1:	mov    rax,QWORD PTR fs:0x28
   276aa:	mov    QWORD PTR [rsp+0x8],rax
   276af:	xor    eax,eax
   276b1:	call   104c0 <wget_hashmap_create@plt>
   276b6:	mov    QWORD PTR [rsp],rax
   276ba:	test   rax,rax
   276bd:	je     2774a <wget_netrc_db_init+0xca>
   276c3:	test   r12,r12
   276c6:	je     27718 <wget_netrc_db_init+0x98>
   276c8:	mov    QWORD PTR [r12],0x0
   276d0:	mov    rdi,rax
   276d3:	mov    rbp,QWORD PTR [rip+0x4e8be]        # 75f98 <wget_netrc_free@@Base+0x4ea08>
   276da:	mov    rsi,rbp
   276dd:	call   10b20 <wget_hashmap_set_key_destructor@plt>
   276e2:	mov    rdi,QWORD PTR [rsp]
   276e6:	mov    rsi,rbp
   276e9:	call   105d0 <wget_hashmap_set_value_destructor@plt>
   276ee:	mov    rax,QWORD PTR [rsp]
   276f2:	mov    QWORD PTR [r12],rax
   276f6:	mov    rax,QWORD PTR [rsp+0x8]
   276fb:	sub    rax,QWORD PTR fs:0x28
   27704:	jne    2774f <wget_netrc_db_init+0xcf>
   27706:	add    rsp,0x18
   2770a:	mov    rax,r12
   2770d:	pop    rbp
   2770e:	pop    r12
   27710:	ret    
   27711:	nop    DWORD PTR [rax+0x0]
   27718:	mov    rax,QWORD PTR [rip+0x4e821]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   2771f:	mov    esi,0x8
   27724:	mov    edi,0x1
   27729:	call   QWORD PTR [rax]
   2772b:	mov    r12,rax
   2772e:	test   rax,rax
   27731:	je     27740 <wget_netrc_db_init+0xc0>
   27733:	mov    rdi,QWORD PTR [rsp]
   27737:	jmp    276d3 <wget_netrc_db_init+0x53>
   27739:	nop    DWORD PTR [rax+0x0]
   27740:	mov    rdi,rsp
   27743:	call   10950 <wget_hashmap_free@plt>
   27748:	jmp    276f6 <wget_netrc_db_init+0x76>
   2774a:	xor    r12d,r12d
   2774d:	jmp    276f6 <wget_netrc_db_init+0x76>
   2774f:	call   11760 <__stack_chk_fail@plt>
   27754:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2775f:	nop

0000000000027760 <wget_netrc_db_deinit>:
   27760:	endbr64 
   27764:	test   rdi,rdi
   27767:	je     27770 <wget_netrc_db_deinit+0x10>
   27769:	jmp    10950 <wget_hashmap_free@plt>
   2776e:	xchg   ax,ax
   27770:	ret    
   27771:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2777c:	nop    DWORD PTR [rax+0x0]

0000000000027780 <wget_netrc_db_free>:
   27780:	endbr64 
   27784:	test   rdi,rdi
   27787:	je     277b0 <wget_netrc_db_free+0x30>
   27789:	push   rbx
   2778a:	mov    rbx,rdi
   2778d:	mov    rdi,QWORD PTR [rdi]
   27790:	call   10660 <wget_netrc_db_deinit@plt>
   27795:	mov    rdi,QWORD PTR [rbx]
   27798:	test   rdi,rdi
   2779b:	je     277ad <wget_netrc_db_free+0x2d>
   2779d:	mov    rax,QWORD PTR [rip+0x4e844]        # 75fe8 <wget_free@@Base-0x1328>
   277a4:	call   QWORD PTR [rax]
   277a6:	mov    QWORD PTR [rbx],0x0
   277ad:	pop    rbx
   277ae:	ret    
   277af:	nop
   277b0:	ret    
   277b1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   277bc:	nop    DWORD PTR [rax+0x0]

00000000000277c0 <wget_netrc_db_add>:
   277c0:	endbr64 
   277c4:	test   rsi,rsi
   277c7:	je     27808 <wget_netrc_db_add+0x48>
   277c9:	push   rbp
   277ca:	mov    rbp,rsi
   277cd:	push   rbx
   277ce:	mov    rbx,rdi
   277d1:	sub    rsp,0x8
   277d5:	test   rdi,rdi
   277d8:	je     27810 <wget_netrc_db_add+0x50>
   277da:	mov    rdx,QWORD PTR [rsi+0x8]
   277de:	mov    rsi,QWORD PTR [rsi]
   277e1:	lea    rdi,[rip+0x25e60]        # 4d648 <__func__.0+0x18>
   277e8:	xor    eax,eax
   277ea:	call   114b0 <wget_debug_printf@plt>
   277ef:	mov    rdi,QWORD PTR [rbx]
   277f2:	add    rsp,0x8
   277f6:	mov    rdx,rbp
   277f9:	mov    rsi,rbp
   277fc:	pop    rbx
   277fd:	pop    rbp
   277fe:	jmp    10c90 <wget_hashmap_put@plt>
   27803:	nop    DWORD PTR [rax+rax*1+0x0]
   27808:	ret    
   27809:	nop    DWORD PTR [rax+0x0]
   27810:	add    rsp,0x8
   27814:	mov    rdi,rsi
   27817:	pop    rbx
   27818:	pop    rbp
   27819:	jmp    10420 <wget_netrc_free@plt>
   2781e:	xchg   ax,ax

0000000000027820 <wget_netrc_db_load>:
   27820:	endbr64 
   27824:	push   r15
   27826:	push   r14
   27828:	push   r13
   2782a:	push   r12
   2782c:	push   rbp
   2782d:	push   rbx
   2782e:	sub    rsp,0x78
   27832:	mov    QWORD PTR [rsp+0x28],rdi
   27837:	mov    rax,QWORD PTR fs:0x28
   27840:	mov    QWORD PTR [rsp+0x68],rax
   27845:	xor    eax,eax
   27847:	test   rdi,rdi
   2784a:	sete   al
   2784d:	test   rsi,rsi
   27850:	sete   dl
   27853:	or     al,dl
   27855:	jne    27dd3 <wget_netrc_db_load+0x5b3>
   2785b:	cmp    BYTE PTR [rsi],0x0
   2785e:	mov    rdi,rsi
   27861:	je     27dd3 <wget_netrc_db_load+0x5b3>
   27867:	lea    rsi,[rip+0x25357]        # 4cbc5 <__func__.5+0x215>
   2786e:	call   486d0 <rpl_fopen>
   27873:	mov    QWORD PTR [rsp+0x8],rax
   27878:	test   rax,rax
   2787b:	je     27deb <wget_netrc_db_load+0x5cb>
   27881:	lea    rax,[rsp+0x38]
   27886:	mov    BYTE PTR [rsp+0x27],0x0
   2788b:	xor    ebx,ebx
   2788d:	xor    r14d,r14d
   27890:	mov    QWORD PTR [rsp+0x18],rax
   27895:	lea    rax,[rsp+0x30]
   2789a:	mov    QWORD PTR [rsp+0x30],0x0
   278a3:	mov    QWORD PTR [rsp+0x38],0x0
   278ac:	mov    QWORD PTR [rsp+0x10],rax
   278b1:	nop    DWORD PTR [rax+0x0]
   278b8:	mov    rdx,QWORD PTR [rsp+0x8]
   278bd:	mov    rsi,QWORD PTR [rsp+0x18]
   278c2:	mov    rdi,QWORD PTR [rsp+0x10]
   278c7:	call   10db0 <wget_getline@plt>
   278cc:	mov    rbp,rax
   278cf:	test   rax,rax
   278d2:	js     27d0e <wget_netrc_db_load+0x4ee>
   278d8:	call   116c0 <__ctype_b_loc@plt>
   278dd:	mov    r15,QWORD PTR [rsp+0x30]
   278e2:	mov    rcx,QWORD PTR [rax]
   278e5:	mov    r12,rax
   278e8:	mov    r13,r15
   278eb:	jmp    278f4 <wget_netrc_db_load+0xd4>
   278ed:	nop    DWORD PTR [rax]
   278f0:	add    r13,0x1
   278f4:	movsx  rax,BYTE PTR [r13+0x0]
   278f9:	mov    rdx,rax
   278fc:	test   BYTE PTR [rcx+rax*2+0x1],0x20
   27901:	jne    278f0 <wget_netrc_db_load+0xd0>
   27903:	cmp    al,0x23
   27905:	je     278b8 <wget_netrc_db_load+0x98>
   27907:	test   rbp,rbp
   2790a:	jne    27920 <wget_netrc_db_load+0x100>
   2790c:	jmp    27932 <wget_netrc_db_load+0x112>
   2790e:	xchg   ax,ax
   27910:	sub    rbp,0x1
   27914:	mov    BYTE PTR [r15+rbp*1],0x0
   27919:	je     2792d <wget_netrc_db_load+0x10d>
   2791b:	mov    r15,QWORD PTR [rsp+0x30]
   27920:	movzx  eax,BYTE PTR [r15+rbp*1]
   27925:	cmp    al,0xa
   27927:	je     27910 <wget_netrc_db_load+0xf0>
   27929:	cmp    al,0xd
   2792b:	je     27910 <wget_netrc_db_load+0xf0>
   2792d:	movzx  edx,BYTE PTR [r13+0x0]
   27932:	test   dl,dl
   27934:	je     27c20 <wget_netrc_db_load+0x400>
   2793a:	cmp    BYTE PTR [rsp+0x27],0x0
   2793f:	mov    edi,edx
   27941:	jne    278b8 <wget_netrc_db_load+0x98>
   27947:	nop    WORD PTR [rax+rax*1+0x0]
   27950:	mov    rcx,QWORD PTR [r12]
   27954:	movsx  rax,dil
   27958:	test   BYTE PTR [rcx+rax*2+0x1],0x20
   2795d:	je     27972 <wget_netrc_db_load+0x152>
   2795f:	nop
   27960:	movsx  rax,BYTE PTR [r13+0x1]
   27965:	add    r13,0x1
   27969:	test   BYTE PTR [rcx+rax*2+0x1],0x20
   2796e:	jne    27960 <wget_netrc_db_load+0x140>
   27970:	mov    edi,eax
   27972:	mov    r15,r13
   27975:	xor    esi,esi
   27977:	test   dil,dil
   2797a:	jne    2798d <wget_netrc_db_load+0x16d>
   2797c:	jmp    2799a <wget_netrc_db_load+0x17a>
   2797e:	xchg   ax,ax
   27980:	movsx  rax,BYTE PTR [r15+0x1]
   27985:	add    r15,0x1
   27989:	test   al,al
   2798b:	je     27994 <wget_netrc_db_load+0x174>
   2798d:	test   BYTE PTR [rcx+rax*2+0x1],0x20
   27992:	je     27980 <wget_netrc_db_load+0x160>
   27994:	mov    rsi,r15
   27997:	sub    rsi,r13
   2799a:	mov    rdi,r13
   2799d:	call   126b0 <wget_strmemdup@plt>
   279a2:	mov    rbp,rax
   279a5:	test   rax,rax
   279a8:	je     27c84 <wget_netrc_db_load+0x464>
   279ae:	lea    rsi,[rip+0x25cc7]        # 4d67c <__func__.0+0x4c>
   279b5:	mov    rdi,rax
   279b8:	lea    r13,[rip+0x25cc5]        # 4d684 <__func__.0+0x54>
   279bf:	call   11c60 <strcmp@plt>
   279c4:	test   eax,eax
   279c6:	je     27a20 <wget_netrc_db_load+0x200>
   279c8:	lea    r13,[rip+0x25cb5]        # 4d684 <__func__.0+0x54>
   279cf:	mov    rdi,rbp
   279d2:	mov    DWORD PTR [rsp],eax
   279d5:	mov    rsi,r13
   279d8:	call   11c60 <strcmp@plt>
   279dd:	mov    ecx,DWORD PTR [rsp]
   279e0:	test   eax,eax
   279e2:	je     27a20 <wget_netrc_db_load+0x200>
   279e4:	movzx  edx,BYTE PTR [r15]
   279e8:	mov    r13,r15
   279eb:	mov    eax,edx
   279ed:	test   r14b,r14b
   279f0:	jne    27a5e <wget_netrc_db_load+0x23e>
   279f2:	nop    WORD PTR [rax+rax*1+0x0]
   279f8:	mov    rax,QWORD PTR [rip+0x4e5e9]        # 75fe8 <wget_free@@Base-0x1328>
   279ff:	mov    rdi,rbp
   27a02:	mov    rax,QWORD PTR [rax]
   27a05:	test   dl,dl
   27a07:	je     27cd6 <wget_netrc_db_load+0x4b6>
   27a0d:	call   rax
   27a0f:	movzx  edi,BYTE PTR [r13+0x0]
   27a14:	jmp    27950 <wget_netrc_db_load+0x130>
   27a19:	nop    DWORD PTR [rax+0x0]
   27a20:	lea    r9,[rsp+0x40]
   27a25:	test   r14b,r14b
   27a28:	jne    27b68 <wget_netrc_db_load+0x348>
   27a2e:	mov    rdi,r9
   27a31:	call   116d0 <wget_netrc_init@plt>
   27a36:	mov    rsi,r13
   27a39:	mov    rdi,rbp
   27a3c:	call   11c60 <strcmp@plt>
   27a41:	test   eax,eax
   27a43:	je     27b10 <wget_netrc_db_load+0x2f0>
   27a49:	lea    rsi,[rip+0x25c2c]        # 4d67c <__func__.0+0x4c>
   27a50:	mov    rdi,rbp
   27a53:	call   11c60 <strcmp@plt>
   27a58:	mov    ecx,eax
   27a5a:	movzx  eax,BYTE PTR [r15]
   27a5e:	mov    rsi,QWORD PTR [r12]
   27a62:	movsx  rdx,al
   27a66:	test   BYTE PTR [rsi+rdx*2+0x1],0x20
   27a6b:	je     27a83 <wget_netrc_db_load+0x263>
   27a6d:	nop    DWORD PTR [rax]
   27a70:	movsx  rdx,BYTE PTR [r15+0x1]
   27a75:	add    r15,0x1
   27a79:	mov    rax,rdx
   27a7c:	test   BYTE PTR [rsi+rdx*2+0x1],0x20
   27a81:	jne    27a70 <wget_netrc_db_load+0x250>
   27a83:	cmp    al,0x22
   27a85:	jne    27a90 <wget_netrc_db_load+0x270>
   27a87:	add    r15,0x1
   27a8b:	mov    ebx,0x1
   27a90:	movzx  eax,BYTE PTR [r15]
   27a94:	mov    r13,r15
   27a97:	xor    r14d,r14d
   27a9a:	test   al,al
   27a9c:	jne    27abf <wget_netrc_db_load+0x29f>
   27a9e:	jmp    27ace <wget_netrc_db_load+0x2ae>
   27aa0:	cmp    al,0x22
   27aa2:	je     27ace <wget_netrc_db_load+0x2ae>
   27aa4:	mov    rdx,r13
   27aa7:	cmp    al,0x5c
   27aa9:	jne    27ab3 <wget_netrc_db_load+0x293>
   27aab:	add    rdx,0x1
   27aaf:	add    r14d,0x1
   27ab3:	movzx  eax,BYTE PTR [rdx+0x1]
   27ab7:	lea    r13,[rdx+0x1]
   27abb:	test   al,al
   27abd:	je     27ace <wget_netrc_db_load+0x2ae>
   27abf:	test   bl,bl
   27ac1:	jne    27aa0 <wget_netrc_db_load+0x280>
   27ac3:	movsx  rdx,al
   27ac7:	test   BYTE PTR [rsi+rdx*2+0x1],0x20
   27acc:	je     27aa4 <wget_netrc_db_load+0x284>
   27ace:	test   ecx,ecx
   27ad0:	jne    27b30 <wget_netrc_db_load+0x310>
   27ad2:	cmp    QWORD PTR [rsp+0x40],0x0
   27ad8:	je     27cf6 <wget_netrc_db_load+0x4d6>
   27ade:	movzx  edx,BYTE PTR [r13+0x0]
   27ae3:	mov    r14d,0x1
   27ae9:	test   bl,bl
   27aeb:	je     279f8 <wget_netrc_db_load+0x1d8>
   27af1:	mov    r14d,ebx
   27af4:	cmp    dl,0x22
   27af7:	jne    279f8 <wget_netrc_db_load+0x1d8>
   27afd:	movzx  edx,BYTE PTR [r13+0x1]
   27b02:	add    r13,0x1
   27b06:	jmp    279f8 <wget_netrc_db_load+0x1d8>
   27b0b:	nop    DWORD PTR [rax+rax*1+0x0]
   27b10:	mov    rdi,r13
   27b13:	mov    r14d,0x1
   27b19:	mov    r13,r15
   27b1c:	call   127b0 <wget_strdup@plt>
   27b21:	mov    QWORD PTR [rsp+0x40],rax
   27b26:	movzx  edx,BYTE PTR [r15]
   27b2a:	jmp    279f8 <wget_netrc_db_load+0x1d8>
   27b2f:	nop
   27b30:	lea    rsi,[rip+0x25b55]        # 4d68c <__func__.0+0x5c>
   27b37:	mov    rdi,rbp
   27b3a:	call   11c60 <strcmp@plt>
   27b3f:	test   eax,eax
   27b41:	jne    27b90 <wget_netrc_db_load+0x370>
   27b43:	cmp    QWORD PTR [rsp+0x48],0x0
   27b49:	jne    27ade <wget_netrc_db_load+0x2be>
   27b4b:	mov    rsi,r13
   27b4e:	mov    rdi,r15
   27b51:	sub    rsi,r15
   27b54:	call   126b0 <wget_strmemdup@plt>
   27b59:	mov    QWORD PTR [rsp+0x48],rax
   27b5e:	jmp    27ade <wget_netrc_db_load+0x2be>
   27b63:	nop    DWORD PTR [rax+rax*1+0x0]
   27b68:	mov    rdi,r9
   27b6b:	mov    esi,0x20
   27b70:	mov    QWORD PTR [rsp],r9
   27b74:	call   10dc0 <wget_memdup@plt>
   27b79:	mov    rdi,QWORD PTR [rsp+0x28]
   27b7e:	mov    rsi,rax
   27b81:	call   12310 <wget_netrc_db_add@plt>
   27b86:	mov    r9,QWORD PTR [rsp]
   27b8a:	jmp    27a2e <wget_netrc_db_load+0x20e>
   27b8f:	nop
   27b90:	lea    rsi,[rip+0x25afb]        # 4d692 <__func__.0+0x62>
   27b97:	mov    rdi,rbp
   27b9a:	call   11c60 <strcmp@plt>
   27b9f:	test   eax,eax
   27ba1:	jne    27c2a <wget_netrc_db_load+0x40a>
   27ba7:	cmp    QWORD PTR [rsp+0x50],0x0
   27bad:	jne    27ade <wget_netrc_db_load+0x2be>
   27bb3:	mov    rsi,r13
   27bb6:	sub    rsi,r15
   27bb9:	test   r14d,r14d
   27bbc:	je     27da0 <wget_netrc_db_load+0x580>
   27bc2:	mov    rax,QWORD PTR [rip+0x4e407]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   27bc9:	movsxd r14,r14d
   27bcc:	sub    rsi,r14
   27bcf:	mov    QWORD PTR [rsp],rsi
   27bd3:	lea    rdi,[rsi+0x1]
   27bd7:	call   QWORD PTR [rax]
   27bd9:	mov    rsi,rax
   27bdc:	test   rax,rax
   27bdf:	je     27c16 <wget_netrc_db_load+0x3f6>
   27be1:	mov    rcx,QWORD PTR [rsp]
   27be5:	test   rcx,rcx
   27be8:	je     27dde <wget_netrc_db_load+0x5be>
   27bee:	add    rcx,rax
   27bf1:	movzx  edx,BYTE PTR [r15]
   27bf5:	cmp    dl,0x5c
   27bf8:	jne    27c03 <wget_netrc_db_load+0x3e3>
   27bfa:	movzx  edx,BYTE PTR [r15+0x1]
   27bff:	add    r15,0x1
   27c03:	add    rax,0x1
   27c07:	add    r15,0x1
   27c0b:	mov    BYTE PTR [rax-0x1],dl
   27c0e:	cmp    rax,rcx
   27c11:	jne    27bf1 <wget_netrc_db_load+0x3d1>
   27c13:	mov    BYTE PTR [rcx],0x0
   27c16:	mov    QWORD PTR [rsp+0x50],rsi
   27c1b:	jmp    27ade <wget_netrc_db_load+0x2be>
   27c20:	mov    BYTE PTR [rsp+0x27],0x0
   27c25:	jmp    278b8 <wget_netrc_db_load+0x98>
   27c2a:	lea    rsi,[rip+0x25a6a]        # 4d69b <__func__.0+0x6b>
   27c31:	mov    rdi,rbp
   27c34:	call   11c60 <strcmp@plt>
   27c39:	test   eax,eax
   27c3b:	je     27cdd <wget_netrc_db_load+0x4bd>
   27c41:	lea    rsi,[rip+0x25a58]        # 4d6a0 <__func__.0+0x70>
   27c48:	mov    rdi,rbp
   27c4b:	call   11c60 <strcmp@plt>
   27c50:	test   eax,eax
   27c52:	jne    27d78 <wget_netrc_db_load+0x558>
   27c58:	mov    edx,0x3
   27c5d:	mov    rsi,r15
   27c60:	lea    rdi,[rip+0x25a3f]        # 4d6a6 <__func__.0+0x76>
   27c67:	call   11c40 <wget_strncasecmp_ascii@plt>
   27c6c:	test   eax,eax
   27c6e:	movzx  eax,BYTE PTR [rsp+0x5a]
   27c73:	sete   dl
   27c76:	and    eax,0xfffffffe
   27c79:	or     eax,edx
   27c7b:	mov    BYTE PTR [rsp+0x5a],al
   27c7f:	jmp    27ade <wget_netrc_db_load+0x2be>
   27c84:	mov    rdi,QWORD PTR [rsp+0x30]
   27c89:	test   rdi,rdi
   27c8c:	je     27ca0 <wget_netrc_db_load+0x480>
   27c8e:	mov    rax,QWORD PTR [rip+0x4e353]        # 75fe8 <wget_free@@Base-0x1328>
   27c95:	call   QWORD PTR [rax]
   27c97:	mov    QWORD PTR [rsp+0x30],0x0
   27ca0:	mov    rdi,QWORD PTR [rsp+0x8]
   27ca5:	mov    r12d,0xfffffffe
   27cab:	call   404c0 <rpl_fclose>
   27cb0:	mov    rax,QWORD PTR [rsp+0x68]
   27cb5:	sub    rax,QWORD PTR fs:0x28
   27cbe:	jne    27de6 <wget_netrc_db_load+0x5c6>
   27cc4:	add    rsp,0x78
   27cc8:	mov    eax,r12d
   27ccb:	pop    rbx
   27ccc:	pop    rbp
   27ccd:	pop    r12
   27ccf:	pop    r13
   27cd1:	pop    r14
   27cd3:	pop    r15
   27cd5:	ret    
   27cd6:	call   rax
   27cd8:	jmp    278b8 <wget_netrc_db_load+0x98>
   27cdd:	mov    edx,0xa
   27ce2:	xor    esi,esi
   27ce4:	mov    rdi,r15
   27ce7:	call   11c90 <strtol@plt>
   27cec:	mov    WORD PTR [rsp+0x58],ax
   27cf1:	jmp    27ade <wget_netrc_db_load+0x2be>
   27cf6:	mov    rsi,r13
   27cf9:	mov    rdi,r15
   27cfc:	sub    rsi,r15
   27cff:	call   126b0 <wget_strmemdup@plt>
   27d04:	mov    QWORD PTR [rsp+0x40],rax
   27d09:	jmp    27ade <wget_netrc_db_load+0x2be>
   27d0e:	test   r14b,r14b
   27d11:	jne    27db2 <wget_netrc_db_load+0x592>
   27d17:	mov    rdi,QWORD PTR [rsp+0x30]
   27d1c:	test   rdi,rdi
   27d1f:	je     27d33 <wget_netrc_db_load+0x513>
   27d21:	mov    rax,QWORD PTR [rip+0x4e2c0]        # 75fe8 <wget_free@@Base-0x1328>
   27d28:	call   QWORD PTR [rax]
   27d2a:	mov    QWORD PTR [rsp+0x30],0x0
   27d33:	mov    rdi,QWORD PTR [rsp+0x8]
   27d38:	call   404c0 <rpl_fclose>
   27d3d:	mov    rax,QWORD PTR [rsp+0x28]
   27d42:	mov    rdi,QWORD PTR [rax]
   27d45:	call   125c0 <wget_hashmap_size@plt>
   27d4a:	lea    rdx,[rip+0x2591d]        # 4d66e <__func__.0+0x3e>
   27d51:	lea    rdi,[rip+0x25959]        # 4d6b1 <__func__.0+0x81>
   27d58:	cmp    eax,0x1
   27d5b:	mov    r12d,eax
   27d5e:	lea    rax,[rip+0x25911]        # 4d676 <__func__.0+0x46>
   27d65:	cmove  rdx,rax
   27d69:	mov    esi,r12d
   27d6c:	xor    eax,eax
   27d6e:	call   114b0 <wget_debug_printf@plt>
   27d73:	jmp    27cb0 <wget_netrc_db_load+0x490>
   27d78:	mov    rdi,rbp
   27d7b:	lea    rsi,[rip+0x25928]        # 4d6aa <__func__.0+0x7a>
   27d82:	call   11c60 <strcmp@plt>
   27d87:	movzx  edi,BYTE PTR [rsp+0x27]
   27d8c:	test   eax,eax
   27d8e:	mov    eax,0x1
   27d93:	cmove  edi,eax
   27d96:	mov    BYTE PTR [rsp+0x27],dil
   27d9b:	jmp    27ade <wget_netrc_db_load+0x2be>
   27da0:	mov    rdi,r15
   27da3:	call   126b0 <wget_strmemdup@plt>
   27da8:	mov    QWORD PTR [rsp+0x50],rax
   27dad:	jmp    27ade <wget_netrc_db_load+0x2be>
   27db2:	lea    rdi,[rsp+0x40]
   27db7:	mov    esi,0x20
   27dbc:	call   10dc0 <wget_memdup@plt>
   27dc1:	mov    rdi,QWORD PTR [rsp+0x28]
   27dc6:	mov    rsi,rax
   27dc9:	call   12310 <wget_netrc_db_add@plt>
   27dce:	jmp    27d17 <wget_netrc_db_load+0x4f7>
   27dd3:	mov    r12d,0xfffffffd
   27dd9:	jmp    27cb0 <wget_netrc_db_load+0x490>
   27dde:	mov    rcx,rax
   27de1:	jmp    27c13 <wget_netrc_db_load+0x3f3>
   27de6:	call   11760 <__stack_chk_fail@plt>
   27deb:	mov    r12d,0xfffffff6
   27df1:	jmp    27cb0 <wget_netrc_db_load+0x490>
   27df6:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000027e00 <hash_ocsp>:
   27e00:	endbr64 
   27e04:	mov    rcx,QWORD PTR [rdi]
   27e07:	xor    eax,eax
   27e09:	movzx  edx,BYTE PTR [rcx]
   27e0c:	test   dl,dl
   27e0e:	je     27e28 <hash_ocsp+0x28>
   27e10:	imul   eax,eax,0x65
   27e13:	add    rcx,0x1
   27e17:	add    eax,edx
   27e19:	movzx  edx,BYTE PTR [rcx]
   27e1c:	test   dl,dl
   27e1e:	jne    27e10 <hash_ocsp+0x10>
   27e20:	ret    
   27e21:	nop    DWORD PTR [rax+0x0]
   27e28:	ret    
   27e29:	nop    DWORD PTR [rax+0x0]

0000000000027e30 <ocsp_db_save_fingerprints>:
   27e30:	endbr64 
   27e34:	push   r12
   27e36:	push   rbp
   27e37:	mov    rbp,rsi
   27e3a:	sub    rsp,0x8
   27e3e:	mov    r12,QWORD PTR [rdi+0x8]
   27e42:	mov    rdi,r12
   27e45:	call   125c0 <wget_hashmap_size@plt>
   27e4a:	mov    r8d,eax
   27e4d:	xor    eax,eax
   27e4f:	test   r8d,r8d
   27e52:	jle    27ebd <ocsp_db_save_fingerprints+0x8d>
   27e54:	mov    rcx,rbp
   27e57:	mov    edx,0x1b
   27e5c:	mov    esi,0x1
   27e61:	lea    rdi,[rip+0x2585e]        # 4d6c6 <__func__.0+0x96>
   27e68:	call   12730 <fwrite@plt>
   27e6d:	mov    rcx,rbp
   27e70:	mov    edx,0x31
   27e75:	mov    esi,0x1
   27e7a:	lea    rdi,[rip+0x2591f]        # 4d7a0 <__func__.0+0x170>
   27e81:	call   12730 <fwrite@plt>
   27e86:	mov    rcx,rbp
   27e89:	mov    edx,0x45
   27e8e:	mov    esi,0x1
   27e93:	lea    rdi,[rip+0x2593e]        # 4d7d8 <__func__.0+0x1a8>
   27e9a:	call   12730 <fwrite@plt>
   27e9f:	mov    rdx,rbp
   27ea2:	lea    rsi,[rip+0xc7]        # 27f70 <ocsp_save_fingerprint>
   27ea9:	mov    rdi,r12
   27eac:	call   12570 <wget_hashmap_browse@plt>
   27eb1:	mov    rdi,rbp
   27eb4:	call   12580 <ferror@plt>
   27eb9:	neg    eax
   27ebb:	sbb    eax,eax
   27ebd:	add    rsp,0x8
   27ec1:	pop    rbp
   27ec2:	pop    r12
   27ec4:	ret    
   27ec5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000027ed0 <ocsp_db_save_hosts>:
   27ed0:	endbr64 
   27ed4:	push   r12
   27ed6:	push   rbp
   27ed7:	mov    rbp,rsi
   27eda:	sub    rsp,0x8
   27ede:	mov    r12,QWORD PTR [rdi+0x10]
   27ee2:	mov    rdi,r12
   27ee5:	call   125c0 <wget_hashmap_size@plt>
   27eea:	mov    r8d,eax
   27eed:	xor    eax,eax
   27eef:	test   r8d,r8d
   27ef2:	jle    27f5d <ocsp_db_save_hosts+0x8d>
   27ef4:	mov    rcx,rbp
   27ef7:	mov    edx,0x14
   27efc:	mov    esi,0x1
   27f01:	lea    rdi,[rip+0x257da]        # 4d6e2 <__func__.0+0xb2>
   27f08:	call   12730 <fwrite@plt>
   27f0d:	mov    rcx,rbp
   27f10:	mov    edx,0x34
   27f15:	mov    esi,0x1
   27f1a:	lea    rdi,[rip+0x23e37]        # 4bd58 <__func__.0+0x88>
   27f21:	call   12730 <fwrite@plt>
   27f26:	mov    rcx,rbp
   27f29:	mov    edx,0x2b
   27f2e:	mov    esi,0x1
   27f33:	lea    rdi,[rip+0x258e6]        # 4d820 <__func__.0+0x1f0>
   27f3a:	call   12730 <fwrite@plt>
   27f3f:	mov    rdx,rbp
   27f42:	lea    rsi,[rip+0x67]        # 27fb0 <ocsp_save_host>
   27f49:	mov    rdi,r12
   27f4c:	call   12570 <wget_hashmap_browse@plt>
   27f51:	mov    rdi,rbp
   27f54:	call   12580 <ferror@plt>
   27f59:	neg    eax
   27f5b:	sbb    eax,eax
   27f5d:	add    rsp,0x8
   27f61:	pop    rbp
   27f62:	pop    r12
   27f64:	ret    
   27f65:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000027f70 <ocsp_save_fingerprint>:
   27f70:	endbr64 
   27f74:	sub    rsp,0x8
   27f78:	movzx  r9d,BYTE PTR [rsi+0x18]
   27f7d:	mov    rcx,QWORD PTR [rsi+0x8]
   27f81:	xor    eax,eax
   27f83:	mov    r8,QWORD PTR [rsi+0x10]
   27f87:	mov    rdx,QWORD PTR [rsi]
   27f8a:	lea    rsi,[rip+0x25766]        # 4d6f7 <__func__.0+0xc7>
   27f91:	and    r9d,0x1
   27f95:	call   108e0 <wget_fprintf@plt>
   27f9a:	xor    eax,eax
   27f9c:	add    rsp,0x8
   27fa0:	ret    
   27fa1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   27fac:	nop    DWORD PTR [rax+0x0]

0000000000027fb0 <ocsp_save_host>:
   27fb0:	endbr64 
   27fb4:	sub    rsp,0x8
   27fb8:	mov    rcx,QWORD PTR [rsi+0x8]
   27fbc:	mov    r8,QWORD PTR [rsi+0x10]
   27fc0:	xor    eax,eax
   27fc2:	mov    rdx,QWORD PTR [rsi]
   27fc5:	lea    rsi,[rip+0x2573c]        # 4d708 <__func__.0+0xd8>
   27fcc:	call   108e0 <wget_fprintf@plt>
   27fd1:	xor    eax,eax
   27fd3:	add    rsp,0x8
   27fd7:	ret    
   27fd8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000027fe0 <compare_ocsp>:
   27fe0:	endbr64 
   27fe4:	mov    rsi,QWORD PTR [rsi]
   27fe7:	mov    rdi,QWORD PTR [rdi]
   27fea:	jmp    11c60 <strcmp@plt>
   27fef:	nop

0000000000027ff0 <new_ocsp>:
   27ff0:	push   r13
   27ff2:	mov    r13,rsi
   27ff5:	push   r12
   27ff7:	push   rbp
   27ff8:	mov    rbp,rdi
   27ffb:	push   rbx
   27ffc:	mov    ebx,edx
   27ffe:	sub    rsp,0x8
   28002:	test   rdi,rdi
   28005:	je     28090 <new_ocsp+0xa0>
   2800b:	call   127b0 <wget_strdup@plt>
   28010:	mov    rbp,rax
   28013:	test   rax,rax
   28016:	je     280ab <new_ocsp+0xbb>
   2801c:	mov    rax,QWORD PTR [rip+0x4df1d]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   28023:	mov    esi,0x20
   28028:	mov    edi,0x1
   2802d:	call   QWORD PTR [rax]
   2802f:	mov    r12,rax
   28032:	test   rax,rax
   28035:	je     28070 <new_ocsp+0x80>
   28037:	xor    edi,edi
   28039:	and    ebx,0x1
   2803c:	call   11480 <time@plt>
   28041:	mov    QWORD PTR [r12],rbp
   28045:	mov    QWORD PTR [r12+0x10],rax
   2804a:	movzx  eax,BYTE PTR [r12+0x18]
   28050:	mov    QWORD PTR [r12+0x8],r13
   28055:	and    eax,0xfffffffe
   28058:	or     ebx,eax
   2805a:	mov    BYTE PTR [r12+0x18],bl
   2805f:	add    rsp,0x8
   28063:	mov    rax,r12
   28066:	pop    rbx
   28067:	pop    rbp
   28068:	pop    r12
   2806a:	pop    r13
   2806c:	ret    
   2806d:	nop    DWORD PTR [rax]
   28070:	mov    rax,QWORD PTR [rip+0x4df71]        # 75fe8 <wget_free@@Base-0x1328>
   28077:	mov    rdi,rbp
   2807a:	call   QWORD PTR [rax]
   2807c:	add    rsp,0x8
   28080:	mov    rax,r12
   28083:	pop    rbx
   28084:	pop    rbp
   28085:	pop    r12
   28087:	pop    r13
   28089:	ret    
   2808a:	nop    WORD PTR [rax+rax*1+0x0]
   28090:	mov    rax,QWORD PTR [rip+0x4dea9]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   28097:	mov    esi,0x20
   2809c:	mov    edi,0x1
   280a1:	call   QWORD PTR [rax]
   280a3:	mov    r12,rax
   280a6:	test   rax,rax
   280a9:	jne    28037 <new_ocsp+0x47>
   280ab:	xor    r12d,r12d
   280ae:	jmp    2805f <new_ocsp+0x6f>

00000000000280b0 <free_ocsp>:
   280b0:	endbr64 
   280b4:	test   rdi,rdi
   280b7:	je     280f0 <free_ocsp+0x40>
   280b9:	push   rbp
   280ba:	mov    rbp,rdi
   280bd:	push   rbx
   280be:	sub    rsp,0x8
   280c2:	mov    rdi,QWORD PTR [rdi]
   280c5:	mov    rbx,QWORD PTR [rip+0x4df1c]        # 75fe8 <wget_free@@Base-0x1328>
   280cc:	test   rdi,rdi
   280cf:	je     280db <free_ocsp+0x2b>
   280d1:	call   QWORD PTR [rbx]
   280d3:	mov    QWORD PTR [rbp+0x0],0x0
   280db:	mov    rax,QWORD PTR [rbx]
   280de:	add    rsp,0x8
   280e2:	mov    rdi,rbp
   280e5:	pop    rbx
   280e6:	pop    rbp
   280e7:	jmp    rax
   280e9:	nop    DWORD PTR [rax+0x0]
   280f0:	ret    
   280f1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   280fc:	nop    DWORD PTR [rax+0x0]

0000000000028100 <ocsp_db_add_host_entry.part.0>:
   28100:	push   r12
   28102:	push   rbp
   28103:	mov    rbp,rsi
   28106:	push   rbx
   28107:	mov    rbx,rdi
   2810a:	sub    rsp,0x10
   2810e:	mov    rdi,QWORD PTR [rdi+0x18]
   28112:	mov    rax,QWORD PTR fs:0x28
   2811b:	mov    QWORD PTR [rsp+0x8],rax
   28120:	xor    eax,eax
   28122:	call   12040 <wget_thread_mutex_lock@plt>
   28127:	cmp    QWORD PTR [rbp+0x8],0x0
   2812c:	jne    28190 <ocsp_db_add_host_entry.part.0+0x90>
   2812e:	mov    rdi,QWORD PTR [rbx+0x10]
   28132:	mov    rsi,rbp
   28135:	call   10b70 <wget_hashmap_remove@plt>
   2813a:	test   eax,eax
   2813c:	jne    28208 <ocsp_db_add_host_entry.part.0+0x108>
   28142:	mov    rdi,QWORD PTR [rbp+0x0]
   28146:	mov    r12,QWORD PTR [rip+0x4de9b]        # 75fe8 <wget_free@@Base-0x1328>
   2814d:	test   rdi,rdi
   28150:	je     2815e <ocsp_db_add_host_entry.part.0+0x5e>
   28152:	call   QWORD PTR [r12]
   28156:	mov    QWORD PTR [rbp+0x0],0x0
   2815e:	mov    rdi,rbp
   28161:	call   QWORD PTR [r12]
   28165:	mov    rax,QWORD PTR [rsp+0x8]
   2816a:	sub    rax,QWORD PTR fs:0x28
   28173:	jne    28262 <ocsp_db_add_host_entry.part.0+0x162>
   28179:	mov    rdi,QWORD PTR [rbx+0x18]
   2817d:	add    rsp,0x10
   28181:	pop    rbx
   28182:	pop    rbp
   28183:	pop    r12
   28185:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   2818a:	nop    WORD PTR [rax+rax*1+0x0]
   28190:	mov    rdi,QWORD PTR [rbx+0x10]
   28194:	mov    rdx,rsp
   28197:	mov    rsi,rbp
   2819a:	call   10520 <wget_hashmap_get@plt>
   2819f:	test   eax,eax
   281a1:	je     28238 <ocsp_db_add_host_entry.part.0+0x138>
   281a7:	mov    rax,QWORD PTR [rsp]
   281ab:	mov    rdx,QWORD PTR [rbp+0x10]
   281af:	cmp    QWORD PTR [rax+0x10],rdx
   281b3:	jge    28142 <ocsp_db_add_host_entry.part.0+0x42>
   281b5:	mov    QWORD PTR [rax+0x10],rdx
   281b9:	movzx  ecx,BYTE PTR [rbp+0x18]
   281bd:	lea    rdi,[rip+0x2568c]        # 4d850 <__func__.0+0x220>
   281c4:	movzx  edx,BYTE PTR [rax+0x18]
   281c8:	mov    r8,QWORD PTR [rbp+0x8]
   281cc:	and    ecx,0x1
   281cf:	mov    rsi,QWORD PTR [rax]
   281d2:	and    edx,0xfffffffe
   281d5:	mov    QWORD PTR [rax+0x8],r8
   281d9:	or     edx,ecx
   281db:	mov    BYTE PTR [rax+0x18],dl
   281de:	mov    rdx,r8
   281e1:	xor    eax,eax
   281e3:	call   114b0 <wget_debug_printf@plt>
   281e8:	mov    rdi,QWORD PTR [rbp+0x0]
   281ec:	mov    r12,QWORD PTR [rip+0x4ddf5]        # 75fe8 <wget_free@@Base-0x1328>
   281f3:	test   rdi,rdi
   281f6:	jne    28152 <ocsp_db_add_host_entry.part.0+0x52>
   281fc:	jmp    2815e <ocsp_db_add_host_entry.part.0+0x5e>
   28201:	nop    DWORD PTR [rax+0x0]
   28208:	mov    rsi,QWORD PTR [rbp+0x0]
   2820c:	lea    rdi,[rip+0x25503]        # 4d716 <__func__.0+0xe6>
   28213:	xor    eax,eax
   28215:	call   114b0 <wget_debug_printf@plt>
   2821a:	mov    rdi,QWORD PTR [rbp+0x0]
   2821e:	mov    r12,QWORD PTR [rip+0x4ddc3]        # 75fe8 <wget_free@@Base-0x1328>
   28225:	test   rdi,rdi
   28228:	jne    28152 <ocsp_db_add_host_entry.part.0+0x52>
   2822e:	jmp    2815e <ocsp_db_add_host_entry.part.0+0x5e>
   28233:	nop    DWORD PTR [rax+rax*1+0x0]
   28238:	mov    rdi,QWORD PTR [rbx+0x10]
   2823c:	mov    rdx,rbp
   2823f:	mov    rsi,rbp
   28242:	call   10c90 <wget_hashmap_put@plt>
   28247:	mov    rdx,QWORD PTR [rbp+0x8]
   2824b:	mov    rsi,QWORD PTR [rbp+0x0]
   2824f:	xor    eax,eax
   28251:	lea    rdi,[rip+0x25620]        # 4d878 <__func__.0+0x248>
   28258:	call   114b0 <wget_debug_printf@plt>
   2825d:	jmp    28165 <ocsp_db_add_host_entry.part.0+0x65>
   28262:	call   11760 <__stack_chk_fail@plt>
   28267:	nop    WORD PTR [rax+rax*1+0x0]

0000000000028270 <ocsp_db_add_fingerprint_entry.part.0>:
   28270:	push   r12
   28272:	push   rbp
   28273:	mov    rbp,rsi
   28276:	push   rbx
   28277:	mov    rbx,rdi
   2827a:	sub    rsp,0x10
   2827e:	mov    rdi,QWORD PTR [rdi+0x18]
   28282:	mov    rax,QWORD PTR fs:0x28
   2828b:	mov    QWORD PTR [rsp+0x8],rax
   28290:	xor    eax,eax
   28292:	call   12040 <wget_thread_mutex_lock@plt>
   28297:	cmp    QWORD PTR [rbp+0x8],0x0
   2829c:	jne    28300 <ocsp_db_add_fingerprint_entry.part.0+0x90>
   2829e:	mov    rdi,QWORD PTR [rbx+0x8]
   282a2:	mov    rsi,rbp
   282a5:	call   10b70 <wget_hashmap_remove@plt>
   282aa:	test   eax,eax
   282ac:	jne    28378 <ocsp_db_add_fingerprint_entry.part.0+0x108>
   282b2:	mov    rdi,QWORD PTR [rbp+0x0]
   282b6:	mov    r12,QWORD PTR [rip+0x4dd2b]        # 75fe8 <wget_free@@Base-0x1328>
   282bd:	test   rdi,rdi
   282c0:	je     282ce <ocsp_db_add_fingerprint_entry.part.0+0x5e>
   282c2:	call   QWORD PTR [r12]
   282c6:	mov    QWORD PTR [rbp+0x0],0x0
   282ce:	mov    rdi,rbp
   282d1:	call   QWORD PTR [r12]
   282d5:	mov    rax,QWORD PTR [rsp+0x8]
   282da:	sub    rax,QWORD PTR fs:0x28
   282e3:	jne    283d9 <ocsp_db_add_fingerprint_entry.part.0+0x169>
   282e9:	mov    rdi,QWORD PTR [rbx+0x18]
   282ed:	add    rsp,0x10
   282f1:	pop    rbx
   282f2:	pop    rbp
   282f3:	pop    r12
   282f5:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   282fa:	nop    WORD PTR [rax+rax*1+0x0]
   28300:	mov    rdi,QWORD PTR [rbx+0x8]
   28304:	mov    rdx,rsp
   28307:	mov    rsi,rbp
   2830a:	call   10520 <wget_hashmap_get@plt>
   2830f:	test   eax,eax
   28311:	je     283a8 <ocsp_db_add_fingerprint_entry.part.0+0x138>
   28317:	mov    rax,QWORD PTR [rsp]
   2831b:	mov    rdx,QWORD PTR [rbp+0x10]
   2831f:	cmp    QWORD PTR [rax+0x10],rdx
   28323:	jge    282b2 <ocsp_db_add_fingerprint_entry.part.0+0x42>
   28325:	mov    QWORD PTR [rax+0x10],rdx
   28329:	movzx  ecx,BYTE PTR [rbp+0x18]
   2832d:	lea    rdi,[rip+0x25564]        # 4d898 <__func__.0+0x268>
   28334:	movzx  edx,BYTE PTR [rax+0x18]
   28338:	mov    r8,QWORD PTR [rbp+0x8]
   2833c:	and    ecx,0x1
   2833f:	mov    rsi,QWORD PTR [rax]
   28342:	and    edx,0xfffffffe
   28345:	mov    QWORD PTR [rax+0x8],r8
   28349:	or     edx,ecx
   2834b:	movzx  ecx,cl
   2834e:	mov    BYTE PTR [rax+0x18],dl
   28351:	mov    rdx,r8
   28354:	xor    eax,eax
   28356:	call   114b0 <wget_debug_printf@plt>
   2835b:	mov    rdi,QWORD PTR [rbp+0x0]
   2835f:	mov    r12,QWORD PTR [rip+0x4dc82]        # 75fe8 <wget_free@@Base-0x1328>
   28366:	test   rdi,rdi
   28369:	jne    282c2 <ocsp_db_add_fingerprint_entry.part.0+0x52>
   2836f:	jmp    282ce <ocsp_db_add_fingerprint_entry.part.0+0x5e>
   28374:	nop    DWORD PTR [rax+0x0]
   28378:	mov    rsi,QWORD PTR [rbp+0x0]
   2837c:	lea    rdi,[rip+0x253a9]        # 4d72c <__func__.0+0xfc>
   28383:	xor    eax,eax
   28385:	call   114b0 <wget_debug_printf@plt>
   2838a:	mov    rdi,QWORD PTR [rbp+0x0]
   2838e:	mov    r12,QWORD PTR [rip+0x4dc53]        # 75fe8 <wget_free@@Base-0x1328>
   28395:	test   rdi,rdi
   28398:	jne    282c2 <ocsp_db_add_fingerprint_entry.part.0+0x52>
   2839e:	jmp    282ce <ocsp_db_add_fingerprint_entry.part.0+0x5e>
   283a3:	nop    DWORD PTR [rax+rax*1+0x0]
   283a8:	movzx  ecx,BYTE PTR [rbp+0x18]
   283ac:	mov    rdx,QWORD PTR [rbp+0x8]
   283b0:	lea    rdi,[rip+0x25511]        # 4d8c8 <__func__.0+0x298>
   283b7:	xor    eax,eax
   283b9:	mov    rsi,QWORD PTR [rbp+0x0]
   283bd:	and    ecx,0x1
   283c0:	call   114b0 <wget_debug_printf@plt>
   283c5:	mov    rdi,QWORD PTR [rbx+0x8]
   283c9:	mov    rdx,rbp
   283cc:	mov    rsi,rbp
   283cf:	call   10c90 <wget_hashmap_put@plt>
   283d4:	jmp    282d5 <ocsp_db_add_fingerprint_entry.part.0+0x65>
   283d9:	call   11760 <__stack_chk_fail@plt>
   283de:	xchg   ax,ax

00000000000283e0 <ocsp_db_load>:
   283e0:	push   r15
   283e2:	push   r14
   283e4:	push   r13
   283e6:	push   r12
   283e8:	push   rbp
   283e9:	mov    rbp,rsi
   283ec:	push   rbx
   283ed:	sub    rsp,0x78
   283f1:	mov    QWORD PTR [rsp+0x10],rdi
   283f6:	xor    edi,edi
   283f8:	lea    r12,[rsp+0x38]
   283fd:	mov    BYTE PTR [rsp+0x1f],dl
   28401:	mov    rax,QWORD PTR fs:0x28
   2840a:	mov    QWORD PTR [rsp+0x68],rax
   2840f:	xor    eax,eax
   28411:	mov    QWORD PTR [rsp+0x30],0x0
   2841a:	mov    QWORD PTR [rsp+0x38],0x0
   28423:	call   11480 <time@plt>
   28428:	mov    QWORD PTR [rsp+0x20],rax
   2842d:	lea    rax,[rsp+0x30]
   28432:	mov    QWORD PTR [rsp+0x8],rax
   28437:	nop    WORD PTR [rax+rax*1+0x0]
   28440:	mov    rdi,QWORD PTR [rsp+0x8]
   28445:	mov    rdx,rbp
   28448:	mov    rsi,r12
   2844b:	call   10db0 <wget_getline@plt>
   28450:	mov    r14,rax
   28453:	test   rax,rax
   28456:	js     28530 <ocsp_db_load+0x150>
   2845c:	call   116c0 <__ctype_b_loc@plt>
   28461:	mov    rbx,QWORD PTR [rsp+0x30]
   28466:	mov    rsi,QWORD PTR [rax]
   28469:	mov    r15,rax
   2846c:	mov    r13,rbx
   2846f:	jmp    2847c <ocsp_db_load+0x9c>
   28471:	nop    DWORD PTR [rax+0x0]
   28478:	add    r13,0x1
   2847c:	movsx  rdx,BYTE PTR [r13+0x0]
   28481:	test   BYTE PTR [rsi+rdx*2+0x1],0x20
   28486:	jne    28478 <ocsp_db_load+0x98>
   28488:	cmp    dl,0x23
   2848b:	je     28440 <ocsp_db_load+0x60>
   2848d:	test   dl,dl
   2848f:	je     28440 <ocsp_db_load+0x60>
   28491:	test   r14,r14
   28494:	jne    284b0 <ocsp_db_load+0xd0>
   28496:	jmp    284bd <ocsp_db_load+0xdd>
   28498:	nop    DWORD PTR [rax+rax*1+0x0]
   284a0:	sub    r14,0x1
   284a4:	mov    BYTE PTR [rbx+r14*1],0x0
   284a9:	je     284bd <ocsp_db_load+0xdd>
   284ab:	mov    rbx,QWORD PTR [rsp+0x30]
   284b0:	movzx  eax,BYTE PTR [rbx+r14*1]
   284b5:	cmp    al,0xa
   284b7:	je     284a0 <ocsp_db_load+0xc0>
   284b9:	cmp    al,0xd
   284bb:	je     284a0 <ocsp_db_load+0xc0>
   284bd:	pxor   xmm0,xmm0
   284c1:	xor    edi,edi
   284c3:	lea    r14,[rsp+0x40]
   284c8:	movaps XMMWORD PTR [rsp+0x40],xmm0
   284cd:	movaps XMMWORD PTR [rsp+0x50],xmm0
   284d2:	call   11480 <time@plt>
   284d7:	mov    QWORD PTR [rsp+0x50],rax
   284dc:	movsx  rax,BYTE PTR [r13+0x0]
   284e1:	test   al,al
   284e3:	jne    28580 <ocsp_db_load+0x1a0>
   284e9:	mov    rdi,QWORD PTR [rsp+0x40]
   284ee:	test   rdi,rdi
   284f1:	je     28506 <ocsp_db_load+0x126>
   284f3:	mov    r14,QWORD PTR [rip+0x4daee]        # 75fe8 <wget_free@@Base-0x1328>
   284fa:	call   QWORD PTR [r14]
   284fd:	mov    QWORD PTR [rsp+0x40],0x0
   28506:	mov    r14,QWORD PTR [rsp+0x30]
   2850b:	xor    edi,edi
   2850d:	mov    edx,0x5
   28512:	lea    rsi,[rip+0x253df]        # 4d8f8 <__func__.0+0x2c8>
   28519:	call   10f90 <dcgettext@plt>
   2851e:	mov    rdi,rax
   28521:	mov    rsi,r14
   28524:	xor    eax,eax
   28526:	call   11ea0 <wget_error_printf@plt>
   2852b:	jmp    28440 <ocsp_db_load+0x60>
   28530:	mov    rdi,QWORD PTR [rsp+0x30]
   28535:	test   rdi,rdi
   28538:	je     2854c <ocsp_db_load+0x16c>
   2853a:	mov    rax,QWORD PTR [rip+0x4daa7]        # 75fe8 <wget_free@@Base-0x1328>
   28541:	call   QWORD PTR [rax]
   28543:	mov    QWORD PTR [rsp+0x30],0x0
   2854c:	mov    rdi,rbp
   2854f:	call   12580 <ferror@plt>
   28554:	neg    eax
   28556:	sbb    eax,eax
   28558:	mov    rdx,QWORD PTR [rsp+0x68]
   2855d:	sub    rdx,QWORD PTR fs:0x28
   28566:	jne    28797 <ocsp_db_load+0x3b7>
   2856c:	add    rsp,0x78
   28570:	pop    rbx
   28571:	pop    rbp
   28572:	pop    r12
   28574:	pop    r13
   28576:	pop    r14
   28578:	pop    r15
   2857a:	ret    
   2857b:	nop    DWORD PTR [rax+rax*1+0x0]
   28580:	mov    rsi,QWORD PTR [r15]
   28583:	mov    rdx,r13
   28586:	jmp    2859d <ocsp_db_load+0x1bd>
   28588:	nop    DWORD PTR [rax+rax*1+0x0]
   28590:	movsx  rax,BYTE PTR [rdx+0x1]
   28595:	add    rdx,0x1
   28599:	test   al,al
   2859b:	je     285a4 <ocsp_db_load+0x1c4>
   2859d:	test   BYTE PTR [rsi+rax*2+0x1],0x20
   285a2:	je     28590 <ocsp_db_load+0x1b0>
   285a4:	mov    rsi,rdx
   285a7:	mov    rdi,r13
   285aa:	mov    QWORD PTR [rsp+0x28],rdx
   285af:	sub    rsi,r13
   285b2:	call   126b0 <wget_strmemdup@plt>
   285b7:	mov    rdx,QWORD PTR [rsp+0x28]
   285bc:	mov    QWORD PTR [rsp+0x40],rax
   285c1:	cmp    BYTE PTR [rdx],0x0
   285c4:	je     284e9 <ocsp_db_load+0x109>
   285ca:	movsx  rax,BYTE PTR [rdx+0x1]
   285cf:	lea    rdi,[rdx+0x1]
   285d3:	test   al,al
   285d5:	je     2878f <ocsp_db_load+0x3af>
   285db:	mov    rdx,QWORD PTR [r15]
   285de:	mov    r8,rdi
   285e1:	jmp    285f5 <ocsp_db_load+0x215>
   285e3:	nop    DWORD PTR [rax+rax*1+0x0]
   285e8:	movsx  rax,BYTE PTR [r8+0x1]
   285ed:	add    r8,0x1
   285f1:	test   al,al
   285f3:	je     285fc <ocsp_db_load+0x21c>
   285f5:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   285fa:	je     285e8 <ocsp_db_load+0x208>
   285fc:	xor    esi,esi
   285fe:	mov    edx,0xa
   28603:	mov    QWORD PTR [rsp+0x28],r8
   28608:	call   10600 <strtoll@plt>
   2860d:	cmp    QWORD PTR [rsp+0x20],rax
   28612:	mov    r8,QWORD PTR [rsp+0x28]
   28617:	mov    QWORD PTR [rsp+0x48],rax
   2861c:	jg     2872a <ocsp_db_load+0x34a>
   28622:	cmp    BYTE PTR [r8],0x0
   28626:	je     286cb <ocsp_db_load+0x2eb>
   2862c:	movsx  rax,BYTE PTR [r8+0x1]
   28631:	lea    rdi,[r8+0x1]
   28635:	test   al,al
   28637:	je     28787 <ocsp_db_load+0x3a7>
   2863d:	mov    rdx,QWORD PTR [r15]
   28640:	mov    r8,rdi
   28643:	jmp    28655 <ocsp_db_load+0x275>
   28645:	nop    DWORD PTR [rax]
   28648:	movsx  rax,BYTE PTR [r8+0x1]
   2864d:	add    r8,0x1
   28651:	test   al,al
   28653:	je     2865c <ocsp_db_load+0x27c>
   28655:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   2865a:	je     28648 <ocsp_db_load+0x268>
   2865c:	xor    esi,esi
   2865e:	mov    edx,0xa
   28663:	mov    QWORD PTR [rsp+0x28],r8
   28668:	call   10600 <strtoll@plt>
   2866d:	mov    r8,QWORD PTR [rsp+0x28]
   28672:	mov    QWORD PTR [rsp+0x50],rax
   28677:	cmp    BYTE PTR [r8],0x0
   2867b:	je     286cb <ocsp_db_load+0x2eb>
   2867d:	movsx  rax,BYTE PTR [r8+0x1]
   28682:	lea    rdi,[r8+0x1]
   28686:	test   al,al
   28688:	je     286ac <ocsp_db_load+0x2cc>
   2868a:	mov    rcx,QWORD PTR [r15]
   2868d:	mov    rdx,rdi
   28690:	jmp    286a5 <ocsp_db_load+0x2c5>
   28692:	nop    WORD PTR [rax+rax*1+0x0]
   28698:	movsx  rax,BYTE PTR [rdx+0x1]
   2869d:	add    rdx,0x1
   286a1:	test   al,al
   286a3:	je     286ac <ocsp_db_load+0x2cc>
   286a5:	test   BYTE PTR [rcx+rax*2+0x1],0x20
   286aa:	je     28698 <ocsp_db_load+0x2b8>
   286ac:	mov    edx,0xa
   286b1:	xor    esi,esi
   286b3:	call   11c90 <strtol@plt>
   286b8:	test   eax,eax
   286ba:	movzx  eax,BYTE PTR [rsp+0x58]
   286bf:	setne  dl
   286c2:	and    eax,0xfffffffe
   286c5:	or     eax,edx
   286c7:	mov    BYTE PTR [rsp+0x58],al
   286cb:	cmp    BYTE PTR [rsp+0x1f],0x0
   286d0:	mov    esi,0x20
   286d5:	mov    rdi,r14
   286d8:	je     28702 <ocsp_db_load+0x322>
   286da:	call   10dc0 <wget_memdup@plt>
   286df:	mov    rsi,rax
   286e2:	test   rax,rax
   286e5:	je     28440 <ocsp_db_load+0x60>
   286eb:	cmp    QWORD PTR [rsp+0x10],0x0
   286f1:	je     28750 <ocsp_db_load+0x370>
   286f3:	mov    rdi,QWORD PTR [rsp+0x10]
   286f8:	call   28100 <ocsp_db_add_host_entry.part.0>
   286fd:	jmp    28440 <ocsp_db_load+0x60>
   28702:	call   10dc0 <wget_memdup@plt>
   28707:	mov    rsi,rax
   2870a:	test   rax,rax
   2870d:	je     28440 <ocsp_db_load+0x60>
   28713:	cmp    QWORD PTR [rsp+0x10],0x0
   28719:	je     28750 <ocsp_db_load+0x370>
   2871b:	mov    rdi,QWORD PTR [rsp+0x10]
   28720:	call   28270 <ocsp_db_add_fingerprint_entry.part.0>
   28725:	jmp    28440 <ocsp_db_load+0x60>
   2872a:	mov    rdi,QWORD PTR [rsp+0x40]
   2872f:	test   rdi,rdi
   28732:	je     28440 <ocsp_db_load+0x60>
   28738:	mov    r14,QWORD PTR [rip+0x4d8a9]        # 75fe8 <wget_free@@Base-0x1328>
   2873f:	call   QWORD PTR [r14]
   28742:	mov    QWORD PTR [rsp+0x40],0x0
   2874b:	jmp    28440 <ocsp_db_load+0x60>
   28750:	mov    rdi,QWORD PTR [rsi]
   28753:	test   rdi,rdi
   28756:	je     2877e <ocsp_db_load+0x39e>
   28758:	mov    r14,QWORD PTR [rip+0x4d889]        # 75fe8 <wget_free@@Base-0x1328>
   2875f:	mov    QWORD PTR [rsp+0x28],rsi
   28764:	call   QWORD PTR [r14]
   28767:	mov    rsi,QWORD PTR [rsp+0x28]
   2876c:	mov    QWORD PTR [rsi],0x0
   28773:	mov    rdi,rsi
   28776:	call   QWORD PTR [r14]
   28779:	jmp    28440 <ocsp_db_load+0x60>
   2877e:	mov    r14,QWORD PTR [rip+0x4d863]        # 75fe8 <wget_free@@Base-0x1328>
   28785:	jmp    28773 <ocsp_db_load+0x393>
   28787:	mov    r8,rdi
   2878a:	jmp    2865c <ocsp_db_load+0x27c>
   2878f:	mov    r8,rdi
   28792:	jmp    285fc <ocsp_db_load+0x21c>
   28797:	call   11760 <__stack_chk_fail@plt>
   2879c:	nop    DWORD PTR [rax+0x0]

00000000000287a0 <ocsp_db_load_fingerprints>:
   287a0:	endbr64 
   287a4:	xor    edx,edx
   287a6:	jmp    283e0 <ocsp_db_load>
   287ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000287b0 <ocsp_db_load_hosts>:
   287b0:	endbr64 
   287b4:	mov    edx,0x1
   287b9:	jmp    283e0 <ocsp_db_load>
   287be:	xchg   ax,ax

00000000000287c0 <wget_ocsp_set_plugin>:
   287c0:	endbr64 
   287c4:	mov    QWORD PTR [rip+0x4eddd],rdi        # 775a8 <plugin_vtable>
   287cb:	ret    
   287cc:	nop    DWORD PTR [rax+0x0]

00000000000287d0 <wget_ocsp_fingerprint_in_cache>:
   287d0:	endbr64 
   287d4:	push   r12
   287d6:	mov    r12,rdx
   287d9:	push   rbx
   287da:	sub    rsp,0x48
   287de:	mov    rax,QWORD PTR fs:0x28
   287e7:	mov    QWORD PTR [rsp+0x38],rax
   287ec:	mov    rax,QWORD PTR [rip+0x4edb5]        # 775a8 <plugin_vtable>
   287f3:	test   rax,rax
   287f6:	je     28820 <wget_ocsp_fingerprint_in_cache+0x50>
   287f8:	mov    rdx,QWORD PTR [rsp+0x38]
   287fd:	sub    rdx,QWORD PTR fs:0x28
   28806:	jne    28897 <wget_ocsp_fingerprint_in_cache+0xc7>
   2880c:	mov    rax,QWORD PTR [rax+0x18]
   28810:	add    rsp,0x48
   28814:	mov    rdx,r12
   28817:	pop    rbx
   28818:	pop    r12
   2881a:	jmp    rax
   2881c:	nop    DWORD PTR [rax+0x0]
   28820:	test   rdi,rdi
   28823:	je     28841 <wget_ocsp_fingerprint_in_cache+0x71>
   28825:	mov    rdi,QWORD PTR [rdi+0x8]
   28829:	mov    QWORD PTR [rsp+0x10],rsi
   2882e:	lea    rdx,[rsp+0x8]
   28833:	lea    rsi,[rsp+0x10]
   28838:	call   10520 <wget_hashmap_get@plt>
   2883d:	test   eax,eax
   2883f:	jne    28860 <wget_ocsp_fingerprint_in_cache+0x90>
   28841:	xor    eax,eax
   28843:	mov    rdx,QWORD PTR [rsp+0x38]
   28848:	sub    rdx,QWORD PTR fs:0x28
   28851:	jne    28897 <wget_ocsp_fingerprint_in_cache+0xc7>
   28853:	add    rsp,0x48
   28857:	pop    rbx
   28858:	pop    r12
   2885a:	ret    
   2885b:	nop    DWORD PTR [rax+rax*1+0x0]
   28860:	mov    rax,QWORD PTR [rsp+0x8]
   28865:	xor    edi,edi
   28867:	mov    rbx,QWORD PTR [rax+0x8]
   2886b:	call   11480 <time@plt>
   28870:	cmp    rbx,rax
   28873:	jl     28841 <wget_ocsp_fingerprint_in_cache+0x71>
   28875:	mov    eax,0x1
   2887a:	test   r12,r12
   2887d:	je     28843 <wget_ocsp_fingerprint_in_cache+0x73>
   2887f:	mov    rdx,QWORD PTR [rsp+0x8]
   28884:	movzx  edx,BYTE PTR [rdx+0x18]
   28888:	and    edx,0x1
   2888b:	xor    edx,0x1
   2888e:	movzx  edx,dl
   28891:	mov    DWORD PTR [r12],edx
   28895:	jmp    28843 <wget_ocsp_fingerprint_in_cache+0x73>
   28897:	call   11760 <__stack_chk_fail@plt>
   2889c:	nop    DWORD PTR [rax+0x0]

00000000000288a0 <wget_ocsp_hostname_is_valid>:
   288a0:	endbr64 
   288a4:	push   rbx
   288a5:	sub    rsp,0x40
   288a9:	mov    rax,QWORD PTR fs:0x28
   288b2:	mov    QWORD PTR [rsp+0x38],rax
   288b7:	mov    rax,QWORD PTR [rip+0x4ecea]        # 775a8 <plugin_vtable>
   288be:	test   rax,rax
   288c1:	je     288e0 <wget_ocsp_hostname_is_valid+0x40>
   288c3:	mov    rdx,QWORD PTR [rsp+0x38]
   288c8:	sub    rdx,QWORD PTR fs:0x28
   288d1:	jne    28938 <wget_ocsp_hostname_is_valid+0x98>
   288d3:	mov    rax,QWORD PTR [rax+0x20]
   288d7:	add    rsp,0x40
   288db:	pop    rbx
   288dc:	jmp    rax
   288de:	xchg   ax,ax
   288e0:	test   rdi,rdi
   288e3:	je     28901 <wget_ocsp_hostname_is_valid+0x61>
   288e5:	mov    rdi,QWORD PTR [rdi+0x10]
   288e9:	mov    QWORD PTR [rsp+0x10],rsi
   288ee:	lea    rdx,[rsp+0x8]
   288f3:	lea    rsi,[rsp+0x10]
   288f8:	call   10520 <wget_hashmap_get@plt>
   288fd:	test   eax,eax
   288ff:	jne    28920 <wget_ocsp_hostname_is_valid+0x80>
   28901:	xor    eax,eax
   28903:	mov    rdx,QWORD PTR [rsp+0x38]
   28908:	sub    rdx,QWORD PTR fs:0x28
   28911:	jne    28938 <wget_ocsp_hostname_is_valid+0x98>
   28913:	add    rsp,0x40
   28917:	pop    rbx
   28918:	ret    
   28919:	nop    DWORD PTR [rax+0x0]
   28920:	mov    rax,QWORD PTR [rsp+0x8]
   28925:	xor    edi,edi
   28927:	mov    rbx,QWORD PTR [rax+0x8]
   2892b:	call   11480 <time@plt>
   28930:	cmp    rbx,rax
   28933:	setge  al
   28936:	jmp    28903 <wget_ocsp_hostname_is_valid+0x63>
   28938:	call   11760 <__stack_chk_fail@plt>
   2893d:	nop    DWORD PTR [rax]

0000000000028940 <wget_ocsp_db_deinit>:
   28940:	endbr64 
   28944:	mov    rax,QWORD PTR [rip+0x4ec5d]        # 775a8 <plugin_vtable>
   2894b:	push   rbp
   2894c:	mov    rbp,rdi
   2894f:	test   rax,rax
   28952:	je     28960 <wget_ocsp_db_deinit+0x20>
   28954:	mov    rax,QWORD PTR [rax+0x8]
   28958:	pop    rbp
   28959:	jmp    rax
   2895b:	nop    DWORD PTR [rax+rax*1+0x0]
   28960:	test   rdi,rdi
   28963:	je     289b0 <wget_ocsp_db_deinit+0x70>
   28965:	mov    rdi,QWORD PTR [rdi]
   28968:	test   rdi,rdi
   2896b:	je     2897e <wget_ocsp_db_deinit+0x3e>
   2896d:	mov    rax,QWORD PTR [rip+0x4d674]        # 75fe8 <wget_free@@Base-0x1328>
   28974:	call   QWORD PTR [rax]
   28976:	mov    QWORD PTR [rbp+0x0],0x0
   2897e:	mov    rdi,QWORD PTR [rbp+0x18]
   28982:	call   12040 <wget_thread_mutex_lock@plt>
   28987:	lea    rdi,[rbp+0x8]
   2898b:	call   10950 <wget_hashmap_free@plt>
   28990:	lea    rdi,[rbp+0x10]
   28994:	call   10950 <wget_hashmap_free@plt>
   28999:	mov    rdi,QWORD PTR [rbp+0x18]
   2899d:	call   117c0 <wget_thread_mutex_unlock@plt>
   289a2:	lea    rdi,[rbp+0x18]
   289a6:	pop    rbp
   289a7:	jmp    11e70 <wget_thread_mutex_destroy@plt>
   289ac:	nop    DWORD PTR [rax+0x0]
   289b0:	pop    rbp
   289b1:	ret    
   289b2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   289bd:	nop    DWORD PTR [rax]

00000000000289c0 <wget_ocsp_db_free>:
   289c0:	endbr64 
   289c4:	mov    rax,QWORD PTR [rip+0x4ebdd]        # 775a8 <plugin_vtable>
   289cb:	push   rbp
   289cc:	mov    rbp,rdi
   289cf:	test   rax,rax
   289d2:	je     289e0 <wget_ocsp_db_free+0x20>
   289d4:	mov    rax,QWORD PTR [rax+0x10]
   289d8:	pop    rbp
   289d9:	jmp    rax
   289db:	nop    DWORD PTR [rax+rax*1+0x0]
   289e0:	test   rdi,rdi
   289e3:	je     28a0c <wget_ocsp_db_free+0x4c>
   289e5:	mov    rdi,QWORD PTR [rdi]
   289e8:	test   rdi,rdi
   289eb:	je     28a0c <wget_ocsp_db_free+0x4c>
   289ed:	call   10d20 <wget_ocsp_db_deinit@plt>
   289f2:	mov    rdi,QWORD PTR [rbp+0x0]
   289f6:	test   rdi,rdi
   289f9:	je     28a0c <wget_ocsp_db_free+0x4c>
   289fb:	mov    rax,QWORD PTR [rip+0x4d5e6]        # 75fe8 <wget_free@@Base-0x1328>
   28a02:	call   QWORD PTR [rax]
   28a04:	mov    QWORD PTR [rbp+0x0],0x0
   28a0c:	pop    rbp
   28a0d:	ret    
   28a0e:	xchg   ax,ax

0000000000028a10 <wget_ocsp_db_add_fingerprint>:
   28a10:	endbr64 
   28a14:	push   rbp
   28a15:	mov    r8,rsi
   28a18:	mov    rbp,rdi
   28a1b:	mov    r9,rdx
   28a1e:	movzx  ecx,cl
   28a21:	sub    rsp,0x10
   28a25:	mov    rax,QWORD PTR [rip+0x4eb7c]        # 775a8 <plugin_vtable>
   28a2c:	test   rax,rax
   28a2f:	je     28a40 <wget_ocsp_db_add_fingerprint+0x30>
   28a31:	mov    rax,QWORD PTR [rax+0x28]
   28a35:	add    rsp,0x10
   28a39:	pop    rbp
   28a3a:	jmp    rax
   28a3c:	nop    DWORD PTR [rax+0x0]
   28a40:	mov    rsi,r9
   28a43:	mov    edx,ecx
   28a45:	mov    rdi,r8
   28a48:	call   27ff0 <new_ocsp>
   28a4d:	mov    rsi,rax
   28a50:	test   rax,rax
   28a53:	je     28a70 <wget_ocsp_db_add_fingerprint+0x60>
   28a55:	test   rbp,rbp
   28a58:	je     28a80 <wget_ocsp_db_add_fingerprint+0x70>
   28a5a:	add    rsp,0x10
   28a5e:	mov    rdi,rbp
   28a61:	pop    rbp
   28a62:	jmp    28270 <ocsp_db_add_fingerprint_entry.part.0>
   28a67:	nop    WORD PTR [rax+rax*1+0x0]
   28a70:	add    rsp,0x10
   28a74:	pop    rbp
   28a75:	ret    
   28a76:	cs nop WORD PTR [rax+rax*1+0x0]
   28a80:	mov    rdi,QWORD PTR [rax]
   28a83:	test   rdi,rdi
   28a86:	je     28ab1 <wget_ocsp_db_add_fingerprint+0xa1>
   28a88:	mov    rbp,QWORD PTR [rip+0x4d559]        # 75fe8 <wget_free@@Base-0x1328>
   28a8f:	mov    QWORD PTR [rsp+0x8],rax
   28a94:	call   QWORD PTR [rbp+0x0]
   28a97:	mov    rsi,QWORD PTR [rsp+0x8]
   28a9c:	mov    QWORD PTR [rsi],0x0
   28aa3:	mov    rax,QWORD PTR [rbp+0x0]
   28aa7:	add    rsp,0x10
   28aab:	mov    rdi,rsi
   28aae:	pop    rbp
   28aaf:	jmp    rax
   28ab1:	mov    rbp,QWORD PTR [rip+0x4d530]        # 75fe8 <wget_free@@Base-0x1328>
   28ab8:	jmp    28aa3 <wget_ocsp_db_add_fingerprint+0x93>
   28aba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000028ac0 <wget_ocsp_db_add_host>:
   28ac0:	endbr64 
   28ac4:	push   rbp
   28ac5:	mov    r8,rsi
   28ac8:	mov    rbp,rdi
   28acb:	mov    r9,rdx
   28ace:	sub    rsp,0x10
   28ad2:	mov    rax,QWORD PTR [rip+0x4eacf]        # 775a8 <plugin_vtable>
   28ad9:	test   rax,rax
   28adc:	je     28af0 <wget_ocsp_db_add_host+0x30>
   28ade:	mov    rax,QWORD PTR [rax+0x30]
   28ae2:	add    rsp,0x10
   28ae6:	pop    rbp
   28ae7:	jmp    rax
   28ae9:	nop    DWORD PTR [rax+0x0]
   28af0:	mov    rsi,r9
   28af3:	xor    edx,edx
   28af5:	mov    rdi,r8
   28af8:	call   27ff0 <new_ocsp>
   28afd:	mov    rsi,rax
   28b00:	test   rax,rax
   28b03:	je     28b20 <wget_ocsp_db_add_host+0x60>
   28b05:	test   rbp,rbp
   28b08:	je     28b30 <wget_ocsp_db_add_host+0x70>
   28b0a:	add    rsp,0x10
   28b0e:	mov    rdi,rbp
   28b11:	pop    rbp
   28b12:	jmp    28100 <ocsp_db_add_host_entry.part.0>
   28b17:	nop    WORD PTR [rax+rax*1+0x0]
   28b20:	add    rsp,0x10
   28b24:	pop    rbp
   28b25:	ret    
   28b26:	cs nop WORD PTR [rax+rax*1+0x0]
   28b30:	mov    rdi,QWORD PTR [rax]
   28b33:	test   rdi,rdi
   28b36:	je     28b61 <wget_ocsp_db_add_host+0xa1>
   28b38:	mov    rbp,QWORD PTR [rip+0x4d4a9]        # 75fe8 <wget_free@@Base-0x1328>
   28b3f:	mov    QWORD PTR [rsp+0x8],rax
   28b44:	call   QWORD PTR [rbp+0x0]
   28b47:	mov    rsi,QWORD PTR [rsp+0x8]
   28b4c:	mov    QWORD PTR [rsi],0x0
   28b53:	mov    rax,QWORD PTR [rbp+0x0]
   28b57:	add    rsp,0x10
   28b5b:	mov    rdi,rsi
   28b5e:	pop    rbp
   28b5f:	jmp    rax
   28b61:	mov    rbp,QWORD PTR [rip+0x4d480]        # 75fe8 <wget_free@@Base-0x1328>
   28b68:	jmp    28b53 <wget_ocsp_db_add_host+0x93>
   28b6a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000028b70 <wget_ocsp_db_load>:
   28b70:	endbr64 
   28b74:	mov    rax,QWORD PTR [rip+0x4ea2d]        # 775a8 <plugin_vtable>
   28b7b:	push   r13
   28b7d:	push   r12
   28b7f:	push   rbp
   28b80:	mov    rbp,rdi
   28b83:	test   rax,rax
   28b86:	je     28b98 <wget_ocsp_db_load+0x28>
   28b88:	pop    rbp
   28b89:	mov    rax,QWORD PTR [rax+0x38]
   28b8d:	pop    r12
   28b8f:	pop    r13
   28b91:	jmp    rax
   28b93:	nop    DWORD PTR [rax+rax*1+0x0]
   28b98:	mov    rsi,QWORD PTR [rdi]
   28b9b:	test   rsi,rsi
   28b9e:	je     28c58 <wget_ocsp_db_load+0xe8>
   28ba4:	cmp    BYTE PTR [rsi],0x0
   28ba7:	je     28c58 <wget_ocsp_db_load+0xe8>
   28bad:	lea    rdi,[rip+0x24b8e]        # 4d742 <__func__.0+0x112>
   28bb4:	xor    eax,eax
   28bb6:	call   12810 <wget_aprintf@plt>
   28bbb:	mov    rcx,rbp
   28bbe:	xor    edx,edx
   28bc0:	lea    rsi,[rip+0xfffffffffffffbe9]        # 287b0 <ocsp_db_load_hosts>
   28bc7:	mov    rdi,rax
   28bca:	mov    r12,rax
   28bcd:	call   10980 <wget_update_file@plt>
   28bd2:	mov    r13d,eax
   28bd5:	test   eax,eax
   28bd7:	je     28c40 <wget_ocsp_db_load+0xd0>
   28bd9:	xor    edi,edi
   28bdb:	mov    edx,0x5
   28be0:	lea    rsi,[rip+0x24b64]        # 4d74b <__func__.0+0x11b>
   28be7:	call   10f90 <dcgettext@plt>
   28bec:	mov    rdi,rax
   28bef:	xor    eax,eax
   28bf1:	call   11ea0 <wget_error_printf@plt>
   28bf6:	test   r12,r12
   28bf9:	je     28c07 <wget_ocsp_db_load+0x97>
   28bfb:	mov    rax,QWORD PTR [rip+0x4d3e6]        # 75fe8 <wget_free@@Base-0x1328>
   28c02:	mov    rdi,r12
   28c05:	call   QWORD PTR [rax]
   28c07:	mov    rdi,QWORD PTR [rbp+0x0]
   28c0b:	xor    edx,edx
   28c0d:	mov    rcx,rbp
   28c10:	lea    rsi,[rip+0xfffffffffffffb89]        # 287a0 <ocsp_db_load_fingerprints>
   28c17:	call   10980 <wget_update_file@plt>
   28c1c:	test   eax,eax
   28c1e:	jne    28c60 <wget_ocsp_db_load+0xf0>
   28c20:	mov    rsi,QWORD PTR [rbp+0x0]
   28c24:	lea    rdi,[rip+0x24d1d]        # 4d948 <__func__.0+0x318>
   28c2b:	xor    eax,eax
   28c2d:	call   114b0 <wget_debug_printf@plt>
   28c32:	mov    eax,r13d
   28c35:	pop    rbp
   28c36:	pop    r12
   28c38:	pop    r13
   28c3a:	ret    
   28c3b:	nop    DWORD PTR [rax+rax*1+0x0]
   28c40:	mov    rsi,r12
   28c43:	lea    rdi,[rip+0x24b1c]        # 4d766 <__func__.0+0x136>
   28c4a:	xor    eax,eax
   28c4c:	call   114b0 <wget_debug_printf@plt>
   28c51:	jmp    28bf6 <wget_ocsp_db_load+0x86>
   28c53:	nop    DWORD PTR [rax+rax*1+0x0]
   28c58:	mov    r13d,0xffffffff
   28c5e:	jmp    28c32 <wget_ocsp_db_load+0xc2>
   28c60:	mov    edx,0x5
   28c65:	lea    rsi,[rip+0x24cb4]        # 4d920 <__func__.0+0x2f0>
   28c6c:	xor    edi,edi
   28c6e:	mov    r13d,0xffffffff
   28c74:	call   10f90 <dcgettext@plt>
   28c79:	mov    rdi,rax
   28c7c:	xor    eax,eax
   28c7e:	call   11ea0 <wget_error_printf@plt>
   28c83:	jmp    28c32 <wget_ocsp_db_load+0xc2>
   28c85:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000028c90 <wget_ocsp_db_save>:
   28c90:	endbr64 
   28c94:	mov    rax,QWORD PTR [rip+0x4e90d]        # 775a8 <plugin_vtable>
   28c9b:	push   r13
   28c9d:	push   r12
   28c9f:	push   rbp
   28ca0:	mov    rbp,rdi
   28ca3:	test   rax,rax
   28ca6:	je     28cb8 <wget_ocsp_db_save+0x28>
   28ca8:	pop    rbp
   28ca9:	mov    rax,QWORD PTR [rax+0x40]
   28cad:	pop    r12
   28caf:	pop    r13
   28cb1:	jmp    rax
   28cb3:	nop    DWORD PTR [rax+rax*1+0x0]
   28cb8:	test   rdi,rdi
   28cbb:	je     28d90 <wget_ocsp_db_save+0x100>
   28cc1:	mov    rsi,QWORD PTR [rdi]
   28cc4:	test   rsi,rsi
   28cc7:	je     28d90 <wget_ocsp_db_save+0x100>
   28ccd:	cmp    BYTE PTR [rsi],0x0
   28cd0:	je     28d90 <wget_ocsp_db_save+0x100>
   28cd6:	lea    rdi,[rip+0x24a65]        # 4d742 <__func__.0+0x112>
   28cdd:	xor    eax,eax
   28cdf:	call   12810 <wget_aprintf@plt>
   28ce4:	mov    rcx,rbp
   28ce7:	lea    rdx,[rip+0xfffffffffffff1e2]        # 27ed0 <ocsp_db_save_hosts>
   28cee:	lea    rsi,[rip+0xfffffffffffffabb]        # 287b0 <ocsp_db_load_hosts>
   28cf5:	mov    rdi,rax
   28cf8:	mov    r12,rax
   28cfb:	call   10980 <wget_update_file@plt>
   28d00:	mov    r13d,eax
   28d03:	test   eax,eax
   28d05:	je     28d78 <wget_ocsp_db_save+0xe8>
   28d07:	lea    rsi,[rip+0x24c62]        # 4d970 <__func__.0+0x340>
   28d0e:	xor    edi,edi
   28d10:	mov    edx,0x5
   28d15:	call   10f90 <dcgettext@plt>
   28d1a:	mov    rsi,r12
   28d1d:	mov    rdi,rax
   28d20:	xor    eax,eax
   28d22:	call   11ea0 <wget_error_printf@plt>
   28d27:	test   r12,r12
   28d2a:	je     28d38 <wget_ocsp_db_save+0xa8>
   28d2c:	mov    rax,QWORD PTR [rip+0x4d2b5]        # 75fe8 <wget_free@@Base-0x1328>
   28d33:	mov    rdi,r12
   28d36:	call   QWORD PTR [rax]
   28d38:	mov    rdi,QWORD PTR [rbp+0x0]
   28d3c:	mov    rcx,rbp
   28d3f:	lea    rdx,[rip+0xfffffffffffff0ea]        # 27e30 <ocsp_db_save_fingerprints>
   28d46:	lea    rsi,[rip+0xfffffffffffffa53]        # 287a0 <ocsp_db_load_fingerprints>
   28d4d:	call   10980 <wget_update_file@plt>
   28d52:	test   eax,eax
   28d54:	jne    28d98 <wget_ocsp_db_save+0x108>
   28d56:	mov    rsi,QWORD PTR [rbp+0x0]
   28d5a:	lea    rdi,[rip+0x24c67]        # 4d9c8 <__func__.0+0x398>
   28d61:	xor    eax,eax
   28d63:	call   114b0 <wget_debug_printf@plt>
   28d68:	mov    eax,r13d
   28d6b:	pop    rbp
   28d6c:	pop    r12
   28d6e:	pop    r13
   28d70:	ret    
   28d71:	nop    DWORD PTR [rax+0x0]
   28d78:	mov    rsi,r12
   28d7b:	lea    rdi,[rip+0x24a02]        # 4d784 <__func__.0+0x154>
   28d82:	xor    eax,eax
   28d84:	call   114b0 <wget_debug_printf@plt>
   28d89:	jmp    28d27 <wget_ocsp_db_save+0x97>
   28d8b:	nop    DWORD PTR [rax+rax*1+0x0]
   28d90:	mov    r13d,0xffffffff
   28d96:	jmp    28d68 <wget_ocsp_db_save+0xd8>
   28d98:	mov    rbp,QWORD PTR [rbp+0x0]
   28d9c:	mov    edx,0x5
   28da1:	lea    rsi,[rip+0x24bf0]        # 4d998 <__func__.0+0x368>
   28da8:	xor    edi,edi
   28daa:	call   10f90 <dcgettext@plt>
   28daf:	mov    r13d,0xffffffff
   28db5:	mov    rdi,rax
   28db8:	mov    rsi,rbp
   28dbb:	xor    eax,eax
   28dbd:	call   11ea0 <wget_error_printf@plt>
   28dc2:	jmp    28d68 <wget_ocsp_db_save+0xd8>
   28dc4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   28dcf:	nop

0000000000028dd0 <wget_ocsp_db_init>:
   28dd0:	endbr64 
   28dd4:	push   r14
   28dd6:	push   r13
   28dd8:	push   r12
   28dda:	mov    r12,rdi
   28ddd:	push   rbp
   28dde:	mov    rbp,rsi
   28de1:	sub    rsp,0x28
   28de5:	mov    rax,QWORD PTR fs:0x28
   28dee:	mov    QWORD PTR [rsp+0x18],rax
   28df3:	mov    rax,QWORD PTR [rip+0x4e7ae]        # 775a8 <plugin_vtable>
   28dfa:	test   rax,rax
   28dfd:	je     28e28 <wget_ocsp_db_init+0x58>
   28dff:	mov    rdx,QWORD PTR [rsp+0x18]
   28e04:	sub    rdx,QWORD PTR fs:0x28
   28e0d:	jne    29009 <wget_ocsp_db_init+0x239>
   28e13:	mov    rax,QWORD PTR [rax]
   28e16:	add    rsp,0x28
   28e1a:	pop    rbp
   28e1b:	pop    r12
   28e1d:	pop    r13
   28e1f:	pop    r14
   28e21:	jmp    rax
   28e23:	nop    DWORD PTR [rax+rax*1+0x0]
   28e28:	test   rsi,rsi
   28e2b:	je     28f88 <wget_ocsp_db_init+0x1b8>
   28e31:	mov    rdi,rsi
   28e34:	call   127b0 <wget_strdup@plt>
   28e39:	mov    rbp,rax
   28e3c:	test   rax,rax
   28e3f:	je     28f7c <wget_ocsp_db_init+0x1ac>
   28e45:	lea    r14,[rip+0xfffffffffffff194]        # 27fe0 <compare_ocsp>
   28e4c:	lea    r13,[rip+0xffffffffffffefad]        # 27e00 <hash_ocsp>
   28e53:	mov    edi,0x10
   28e58:	mov    rdx,r14
   28e5b:	mov    rsi,r13
   28e5e:	call   104c0 <wget_hashmap_create@plt>
   28e63:	mov    rdx,r14
   28e66:	mov    rsi,r13
   28e69:	mov    edi,0x10
   28e6e:	mov    QWORD PTR [rsp+0x8],rax
   28e73:	call   104c0 <wget_hashmap_create@plt>
   28e78:	cmp    QWORD PTR [rsp+0x8],0x0
   28e7e:	mov    QWORD PTR [rsp+0x10],rax
   28e83:	je     28ff0 <wget_ocsp_db_init+0x220>
   28e89:	test   rax,rax
   28e8c:	je     28ff0 <wget_ocsp_db_init+0x220>
   28e92:	test   r12,r12
   28e95:	je     28f30 <wget_ocsp_db_init+0x160>
   28e9b:	pxor   xmm0,xmm0
   28e9f:	movups XMMWORD PTR [r12],xmm0
   28ea4:	movups XMMWORD PTR [r12+0x10],xmm0
   28eaa:	mov    QWORD PTR [r12],rbp
   28eae:	mov    rdi,QWORD PTR [rsp+0x8]
   28eb3:	lea    rbp,[rip+0xfffffffffffff1f6]        # 280b0 <free_ocsp>
   28eba:	mov    rsi,rbp
   28ebd:	call   10b20 <wget_hashmap_set_key_destructor@plt>
   28ec2:	mov    rdi,QWORD PTR [rsp+0x8]
   28ec7:	mov    rsi,rbp
   28eca:	call   105d0 <wget_hashmap_set_value_destructor@plt>
   28ecf:	mov    rax,QWORD PTR [rsp+0x8]
   28ed4:	mov    rdi,QWORD PTR [rsp+0x10]
   28ed9:	mov    rsi,rbp
   28edc:	mov    QWORD PTR [r12+0x8],rax
   28ee1:	call   10b20 <wget_hashmap_set_key_destructor@plt>
   28ee6:	mov    rdi,QWORD PTR [rsp+0x10]
   28eeb:	mov    rsi,rbp
   28eee:	call   105d0 <wget_hashmap_set_value_destructor@plt>
   28ef3:	mov    rax,QWORD PTR [rsp+0x10]
   28ef8:	lea    rdi,[r12+0x18]
   28efd:	mov    QWORD PTR [r12+0x10],rax
   28f02:	call   10530 <wget_thread_mutex_init@plt>
   28f07:	mov    rax,QWORD PTR [rsp+0x18]
   28f0c:	sub    rax,QWORD PTR fs:0x28
   28f15:	jne    29009 <wget_ocsp_db_init+0x239>
   28f1b:	add    rsp,0x28
   28f1f:	mov    rax,r12
   28f22:	pop    rbp
   28f23:	pop    r12
   28f25:	pop    r13
   28f27:	pop    r14
   28f29:	ret    
   28f2a:	nop    WORD PTR [rax+rax*1+0x0]
   28f30:	mov    rax,QWORD PTR [rip+0x4d009]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   28f37:	mov    esi,0x20
   28f3c:	mov    edi,0x1
   28f41:	call   QWORD PTR [rax]
   28f43:	mov    r12,rax
   28f46:	test   rax,rax
   28f49:	jne    28eaa <wget_ocsp_db_init+0xda>
   28f4f:	lea    rdi,[rsp+0x10]
   28f54:	call   10950 <wget_hashmap_free@plt>
   28f59:	lea    rdi,[rsp+0x8]
   28f5e:	call   10950 <wget_hashmap_free@plt>
   28f63:	test   rbp,rbp
   28f66:	je     28f7c <wget_ocsp_db_init+0x1ac>
   28f68:	nop    DWORD PTR [rax+rax*1+0x0]
   28f70:	mov    rax,QWORD PTR [rip+0x4d071]        # 75fe8 <wget_free@@Base-0x1328>
   28f77:	mov    rdi,rbp
   28f7a:	call   QWORD PTR [rax]
   28f7c:	xor    r12d,r12d
   28f7f:	jmp    28f07 <wget_ocsp_db_init+0x137>
   28f81:	nop    DWORD PTR [rax+0x0]
   28f88:	lea    r14,[rip+0xfffffffffffff051]        # 27fe0 <compare_ocsp>
   28f8f:	lea    r13,[rip+0xffffffffffffee6a]        # 27e00 <hash_ocsp>
   28f96:	mov    edi,0x10
   28f9b:	mov    rdx,r14
   28f9e:	mov    rsi,r13
   28fa1:	call   104c0 <wget_hashmap_create@plt>
   28fa6:	mov    rdx,r14
   28fa9:	mov    rsi,r13
   28fac:	mov    edi,0x10
   28fb1:	mov    QWORD PTR [rsp+0x8],rax
   28fb6:	call   104c0 <wget_hashmap_create@plt>
   28fbb:	cmp    QWORD PTR [rsp+0x8],0x0
   28fc1:	mov    QWORD PTR [rsp+0x10],rax
   28fc6:	je     28fd1 <wget_ocsp_db_init+0x201>
   28fc8:	test   rax,rax
   28fcb:	jne    28e92 <wget_ocsp_db_init+0xc2>
   28fd1:	lea    rdi,[rsp+0x10]
   28fd6:	xor    r12d,r12d
   28fd9:	call   10950 <wget_hashmap_free@plt>
   28fde:	lea    rdi,[rsp+0x8]
   28fe3:	call   10950 <wget_hashmap_free@plt>
   28fe8:	jmp    28f07 <wget_ocsp_db_init+0x137>
   28fed:	nop    DWORD PTR [rax]
   28ff0:	lea    rdi,[rsp+0x10]
   28ff5:	call   10950 <wget_hashmap_free@plt>
   28ffa:	lea    rdi,[rsp+0x8]
   28fff:	call   10950 <wget_hashmap_free@plt>
   29004:	jmp    28f70 <wget_ocsp_db_init+0x1a0>
   29009:	call   11760 <__stack_chk_fail@plt>
   2900e:	xchg   ax,ax

0000000000029010 <wget_ocsp_db_set_fname>:
   29010:	endbr64 
   29014:	push   rbp
   29015:	mov    rbp,rsi
   29018:	push   rbx
   29019:	mov    rbx,rdi
   2901c:	sub    rsp,0x8
   29020:	mov    rdi,QWORD PTR [rdi]
   29023:	test   rdi,rdi
   29026:	je     29038 <wget_ocsp_db_set_fname+0x28>
   29028:	mov    rax,QWORD PTR [rip+0x4cfb9]        # 75fe8 <wget_free@@Base-0x1328>
   2902f:	call   QWORD PTR [rax]
   29031:	mov    QWORD PTR [rbx],0x0
   29038:	mov    rdi,rbp
   2903b:	call   127b0 <wget_strdup@plt>
   29040:	mov    QWORD PTR [rbx],rax
   29043:	add    rsp,0x8
   29047:	pop    rbx
   29048:	pop    rbp
   29049:	ret    
   2904a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000029050 <wget_vpopenf>:
   29050:	endbr64 
   29054:	push   r14
   29056:	push   r13
   29058:	push   r12
   2905a:	push   rbp
   2905b:	sub    rsp,0x438
   29062:	mov    rax,QWORD PTR fs:0x28
   2906b:	mov    QWORD PTR [rsp+0x428],rax
   29073:	xor    eax,eax
   29075:	test   rdi,rdi
   29078:	je     290f0 <wget_vpopenf+0xa0>
   2907a:	mov    r12,rsi
   2907d:	test   rsi,rsi
   29080:	je     290f0 <wget_vpopenf+0xa0>
   29082:	mov    r14,rsp
   29085:	mov    rbp,rdi
   29088:	lea    rsi,[rsp+0x20]
   2908d:	mov    r13,rdx
   29090:	mov    rdi,r14
   29093:	mov    edx,0x400
   29098:	call   108d0 <wget_buffer_init@plt>
   2909d:	mov    rsi,r12
   290a0:	mov    rdx,r13
   290a3:	mov    rdi,r14
   290a6:	call   11080 <wget_buffer_vprintf@plt>
   290ab:	mov    rdi,QWORD PTR [rsp]
   290af:	mov    rsi,rbp
   290b2:	call   10920 <popen@plt>
   290b7:	mov    rdi,r14
   290ba:	mov    r12,rax
   290bd:	call   11300 <wget_buffer_deinit@plt>
   290c2:	mov    rax,QWORD PTR [rsp+0x428]
   290ca:	sub    rax,QWORD PTR fs:0x28
   290d3:	jne    290f5 <wget_vpopenf+0xa5>
   290d5:	add    rsp,0x438
   290dc:	mov    rax,r12
   290df:	pop    rbp
   290e0:	pop    r12
   290e2:	pop    r13
   290e4:	pop    r14
   290e6:	ret    
   290e7:	nop    WORD PTR [rax+rax*1+0x0]
   290f0:	xor    r12d,r12d
   290f3:	jmp    290c2 <wget_vpopenf+0x72>
   290f5:	call   11760 <__stack_chk_fail@plt>
   290fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000029100 <wget_popenf>:
   29100:	endbr64 
   29104:	sub    rsp,0xd8
   2910b:	mov    QWORD PTR [rsp+0x30],rdx
   29110:	mov    QWORD PTR [rsp+0x38],rcx
   29115:	mov    QWORD PTR [rsp+0x40],r8
   2911a:	mov    QWORD PTR [rsp+0x48],r9
   2911f:	test   al,al
   29121:	je     2915a <wget_popenf+0x5a>
   29123:	movaps XMMWORD PTR [rsp+0x50],xmm0
   29128:	movaps XMMWORD PTR [rsp+0x60],xmm1
   2912d:	movaps XMMWORD PTR [rsp+0x70],xmm2
   29132:	movaps XMMWORD PTR [rsp+0x80],xmm3
   2913a:	movaps XMMWORD PTR [rsp+0x90],xmm4
   29142:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   2914a:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   29152:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   2915a:	mov    rax,QWORD PTR fs:0x28
   29163:	mov    QWORD PTR [rsp+0x18],rax
   29168:	xor    eax,eax
   2916a:	lea    rax,[rsp+0xe0]
   29172:	mov    rdx,rsp
   29175:	mov    DWORD PTR [rsp],0x10
   2917c:	mov    QWORD PTR [rsp+0x8],rax
   29181:	lea    rax,[rsp+0x20]
   29186:	mov    DWORD PTR [rsp+0x4],0x30
   2918e:	mov    QWORD PTR [rsp+0x10],rax
   29193:	call   11ed0 <wget_vpopenf@plt>
   29198:	mov    rdx,QWORD PTR [rsp+0x18]
   2919d:	sub    rdx,QWORD PTR fs:0x28
   291a6:	jne    291b0 <wget_popenf+0xb0>
   291a8:	add    rsp,0xd8
   291af:	ret    
   291b0:	call   11760 <__stack_chk_fail@plt>
   291b5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

00000000000291c0 <wget_fd_popen3>:
   291c0:	endbr64 
   291c4:	push   r15
   291c6:	push   r14
   291c8:	push   r13
   291ca:	push   r12
   291cc:	push   rbp
   291cd:	push   rbx
   291ce:	sub    rsp,0x28
   291d2:	mov    rax,QWORD PTR fs:0x28
   291db:	mov    QWORD PTR [rsp+0x18],rax
   291e0:	xor    eax,eax
   291e2:	test   rcx,rcx
   291e5:	je     294a7 <wget_fd_popen3+0x2e7>
   291eb:	mov    r13,rdi
   291ee:	mov    rbx,rsi
   291f1:	mov    rbp,rdx
   291f4:	mov    r14,rcx
   291f7:	test   rdi,rdi
   291fa:	je     29210 <wget_fd_popen3+0x50>
   291fc:	mov    rdi,rsp
   291ff:	call   11b50 <pipe@plt>
   29204:	mov    r12d,eax
   29207:	cmp    eax,0xffffffff
   2920a:	je     294b2 <wget_fd_popen3+0x2f2>
   29210:	test   rbx,rbx
   29213:	je     2922b <wget_fd_popen3+0x6b>
   29215:	lea    rdi,[rsp+0x8]
   2921a:	call   11b50 <pipe@plt>
   2921f:	mov    r12d,eax
   29222:	cmp    eax,0xffffffff
   29225:	je     294c6 <wget_fd_popen3+0x306>
   2922b:	test   rbp,rbp
   2922e:	setne  dl
   29231:	cmp    rbx,rbp
   29234:	setne  al
   29237:	and    dl,al
   29239:	mov    r15d,edx
   2923c:	je     29254 <wget_fd_popen3+0x94>
   2923e:	lea    rdi,[rsp+0x10]
   29243:	call   11b50 <pipe@plt>
   29248:	mov    r12d,eax
   2924b:	cmp    eax,0xffffffff
   2924e:	je     2943b <wget_fd_popen3+0x27b>
   29254:	call   10800 <fork@plt>
   29259:	mov    r12d,eax
   2925c:	test   eax,eax
   2925e:	jne    29310 <wget_fd_popen3+0x150>
   29264:	test   r13,r13
   29267:	je     2928d <wget_fd_popen3+0xcd>
   29269:	mov    edi,DWORD PTR [rsp+0x4]
   2926d:	call   12740 <close@plt>
   29272:	mov    edi,DWORD PTR [rsp]
   29275:	xor    esi,esi
   29277:	call   114a0 <dup2@plt>
   2927c:	cmp    eax,0xffffffff
   2927f:	je     29509 <wget_fd_popen3+0x349>
   29285:	mov    edi,DWORD PTR [rsp]
   29288:	call   12740 <close@plt>
   2928d:	test   rbx,rbx
   29290:	je     292bb <wget_fd_popen3+0xfb>
   29292:	mov    edi,DWORD PTR [rsp+0x8]
   29296:	call   12740 <close@plt>
   2929b:	mov    edi,DWORD PTR [rsp+0xc]
   2929f:	mov    esi,0x1
   292a4:	call   114a0 <dup2@plt>
   292a9:	cmp    eax,0xffffffff
   292ac:	je     29538 <wget_fd_popen3+0x378>
   292b2:	mov    edi,DWORD PTR [rsp+0xc]
   292b6:	call   12740 <close@plt>
   292bb:	test   rbp,rbp
   292be:	je     292f2 <wget_fd_popen3+0x132>
   292c0:	test   r15b,r15b
   292c3:	je     29370 <wget_fd_popen3+0x1b0>
   292c9:	mov    edi,DWORD PTR [rsp+0x10]
   292cd:	call   12740 <close@plt>
   292d2:	mov    edi,DWORD PTR [rsp+0x14]
   292d6:	mov    esi,0x2
   292db:	call   114a0 <dup2@plt>
   292e0:	cmp    eax,0xffffffff
   292e3:	je     29408 <wget_fd_popen3+0x248>
   292e9:	mov    edi,DWORD PTR [rsp+0x14]
   292ed:	call   12740 <close@plt>
   292f2:	mov    rdi,QWORD PTR [r14]
   292f5:	mov    rsi,r14
   292f8:	call   11160 <execvp@plt>
   292fd:	mov    edi,0x1
   29302:	call   11910 <exit@plt>
   29307:	nop    WORD PTR [rax+rax*1+0x0]
   29310:	js     29390 <wget_fd_popen3+0x1d0>
   29312:	test   r13,r13
   29315:	je     29327 <wget_fd_popen3+0x167>
   29317:	mov    edi,DWORD PTR [rsp]
   2931a:	call   12740 <close@plt>
   2931f:	mov    eax,DWORD PTR [rsp+0x4]
   29323:	mov    DWORD PTR [r13+0x0],eax
   29327:	test   rbx,rbx
   2932a:	je     2933b <wget_fd_popen3+0x17b>
   2932c:	mov    edi,DWORD PTR [rsp+0xc]
   29330:	call   12740 <close@plt>
   29335:	mov    eax,DWORD PTR [rsp+0x8]
   29339:	mov    DWORD PTR [rbx],eax
   2933b:	test   r15b,r15b
   2933e:	jne    293f0 <wget_fd_popen3+0x230>
   29344:	mov    rax,QWORD PTR [rsp+0x18]
   29349:	sub    rax,QWORD PTR fs:0x28
   29352:	jne    29504 <wget_fd_popen3+0x344>
   29358:	add    rsp,0x28
   2935c:	mov    eax,r12d
   2935f:	pop    rbx
   29360:	pop    rbp
   29361:	pop    r12
   29363:	pop    r13
   29365:	pop    r14
   29367:	pop    r15
   29369:	ret    
   2936a:	nop    WORD PTR [rax+rax*1+0x0]
   29370:	mov    esi,0x2
   29375:	mov    edi,0x1
   2937a:	call   114a0 <dup2@plt>
   2937f:	cmp    eax,0xffffffff
   29382:	jne    292f2 <wget_fd_popen3+0x132>
   29388:	jmp    292fd <wget_fd_popen3+0x13d>
   2938d:	nop    DWORD PTR [rax]
   29390:	test   r13,r13
   29393:	je     293a6 <wget_fd_popen3+0x1e6>
   29395:	mov    edi,DWORD PTR [rsp]
   29398:	call   12740 <close@plt>
   2939d:	mov    edi,DWORD PTR [rsp+0x4]
   293a1:	call   12740 <close@plt>
   293a6:	test   rbx,rbx
   293a9:	je     293bd <wget_fd_popen3+0x1fd>
   293ab:	mov    edi,DWORD PTR [rsp+0x8]
   293af:	call   12740 <close@plt>
   293b4:	mov    edi,DWORD PTR [rsp+0xc]
   293b8:	call   12740 <close@plt>
   293bd:	test   r15b,r15b
   293c0:	jne    29490 <wget_fd_popen3+0x2d0>
   293c6:	mov    rbp,QWORD PTR [r14]
   293c9:	mov    edx,0x5
   293ce:	lea    rsi,[rip+0x246af]        # 4da84 <__func__.0+0x454>
   293d5:	xor    edi,edi
   293d7:	call   10f90 <dcgettext@plt>
   293dc:	mov    rsi,rbp
   293df:	mov    rdi,rax
   293e2:	xor    eax,eax
   293e4:	call   11ea0 <wget_error_printf@plt>
   293e9:	jmp    29344 <wget_fd_popen3+0x184>
   293ee:	xchg   ax,ax
   293f0:	mov    edi,DWORD PTR [rsp+0x14]
   293f4:	call   12740 <close@plt>
   293f9:	mov    eax,DWORD PTR [rsp+0x10]
   293fd:	mov    DWORD PTR [rbp+0x0],eax
   29400:	jmp    29344 <wget_fd_popen3+0x184>
   29405:	nop    DWORD PTR [rax]
   29408:	call   104b0 <__errno_location@plt>
   2940d:	mov    ebp,DWORD PTR [rsp+0x14]
   29411:	mov    edx,0x5
   29416:	xor    edi,edi
   29418:	mov    r12d,DWORD PTR [rax]
   2941b:	lea    rsi,[rip+0x24646]        # 4da68 <__func__.0+0x438>
   29422:	call   10f90 <dcgettext@plt>
   29427:	mov    edx,0x2
   2942c:	mov    esi,ebp
   2942e:	mov    rdi,rax
   29431:	mov    ecx,r12d
   29434:	xor    eax,eax
   29436:	call   10580 <wget_error_printf_exit@plt>
   2943b:	xor    edi,edi
   2943d:	mov    rbp,QWORD PTR [r14]
   29440:	mov    edx,0x5
   29445:	lea    rsi,[rip+0x245f4]        # 4da40 <__func__.0+0x410>
   2944c:	call   10f90 <dcgettext@plt>
   29451:	mov    rdi,rax
   29454:	mov    rsi,rbp
   29457:	xor    eax,eax
   29459:	call   11ea0 <wget_error_printf@plt>
   2945e:	test   r13,r13
   29461:	je     29474 <wget_fd_popen3+0x2b4>
   29463:	mov    edi,DWORD PTR [rsp]
   29466:	call   12740 <close@plt>
   2946b:	mov    edi,DWORD PTR [rsp+0x4]
   2946f:	call   12740 <close@plt>
   29474:	test   rbx,rbx
   29477:	je     294a7 <wget_fd_popen3+0x2e7>
   29479:	mov    edi,DWORD PTR [rsp+0x8]
   2947d:	call   12740 <close@plt>
   29482:	mov    edi,DWORD PTR [rsp+0xc]
   29486:	call   12740 <close@plt>
   2948b:	jmp    29344 <wget_fd_popen3+0x184>
   29490:	mov    edi,DWORD PTR [rsp+0x10]
   29494:	call   12740 <close@plt>
   29499:	mov    edi,DWORD PTR [rsp+0x14]
   2949d:	call   12740 <close@plt>
   294a2:	jmp    293c6 <wget_fd_popen3+0x206>
   294a7:	mov    r12d,0xffffffff
   294ad:	jmp    29344 <wget_fd_popen3+0x184>
   294b2:	mov    rbp,QWORD PTR [r14]
   294b5:	mov    edx,0x5
   294ba:	lea    rsi,[rip+0x2452f]        # 4d9f0 <__func__.0+0x3c0>
   294c1:	jmp    293d5 <wget_fd_popen3+0x215>
   294c6:	xor    edi,edi
   294c8:	mov    rbp,QWORD PTR [r14]
   294cb:	mov    edx,0x5
   294d0:	lea    rsi,[rip+0x24541]        # 4da18 <__func__.0+0x3e8>
   294d7:	call   10f90 <dcgettext@plt>
   294dc:	mov    rdi,rax
   294df:	mov    rsi,rbp
   294e2:	xor    eax,eax
   294e4:	call   11ea0 <wget_error_printf@plt>
   294e9:	test   r13,r13
   294ec:	je     294a7 <wget_fd_popen3+0x2e7>
   294ee:	mov    edi,DWORD PTR [rsp]
   294f1:	call   12740 <close@plt>
   294f6:	mov    edi,DWORD PTR [rsp+0x4]
   294fa:	call   12740 <close@plt>
   294ff:	jmp    29344 <wget_fd_popen3+0x184>
   29504:	call   11760 <__stack_chk_fail@plt>
   29509:	call   104b0 <__errno_location@plt>
   2950e:	mov    ebp,DWORD PTR [rsp]
   29511:	mov    edx,0x5
   29516:	xor    edi,edi
   29518:	mov    r12d,DWORD PTR [rax]
   2951b:	lea    rsi,[rip+0x24546]        # 4da68 <__func__.0+0x438>
   29522:	call   10f90 <dcgettext@plt>
   29527:	xor    edx,edx
   29529:	mov    esi,ebp
   2952b:	mov    rdi,rax
   2952e:	mov    ecx,r12d
   29531:	xor    eax,eax
   29533:	call   10580 <wget_error_printf_exit@plt>
   29538:	call   104b0 <__errno_location@plt>
   2953d:	mov    ebp,DWORD PTR [rsp+0xc]
   29541:	mov    edx,0x5
   29546:	xor    edi,edi
   29548:	mov    r12d,DWORD PTR [rax]
   2954b:	lea    rsi,[rip+0x24516]        # 4da68 <__func__.0+0x438>
   29552:	call   10f90 <dcgettext@plt>
   29557:	mov    edx,0x1
   2955c:	mov    esi,ebp
   2955e:	mov    rdi,rax
   29561:	mov    ecx,r12d
   29564:	xor    eax,eax
   29566:	call   10580 <wget_error_printf_exit@plt>
   2956b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000029570 <wget_popen3>:
   29570:	endbr64 
   29574:	push   r13
   29576:	push   r12
   29578:	mov    r12,rdi
   2957b:	push   rbp
   2957c:	mov    rbp,rdx
   2957f:	push   rbx
   29580:	mov    rbx,rsi
   29583:	sub    rsp,0x28
   29587:	mov    rax,QWORD PTR fs:0x28
   29590:	mov    QWORD PTR [rsp+0x18],rax
   29595:	xor    eax,eax
   29597:	mov    DWORD PTR [rsp+0xc],0xffffffff
   2959f:	mov    DWORD PTR [rsp+0x10],0xffffffff
   295a7:	mov    DWORD PTR [rsp+0x14],0xffffffff
   295af:	test   rdi,rdi
   295b2:	je     295bb <wget_popen3+0x4b>
   295b4:	mov    QWORD PTR [rdi],0x0
   295bb:	test   rbx,rbx
   295be:	je     296a0 <wget_popen3+0x130>
   295c4:	mov    QWORD PTR [rbx],0x0
   295cb:	test   rbp,rbp
   295ce:	je     29628 <wget_popen3+0xb8>
   295d0:	lea    rdx,[rsp+0x14]
   295d5:	lea    rsi,[rsp+0x10]
   295da:	cmp    rbx,rbp
   295dd:	mov    QWORD PTR [rbp+0x0],0x0
   295e5:	cmove  rdx,rsi
   295e9:	test   r12,r12
   295ec:	je     29634 <wget_popen3+0xc4>
   295ee:	lea    rdi,[rsp+0xc]
   295f3:	call   11100 <wget_fd_popen3@plt>
   295f8:	mov    r13d,eax
   295fb:	test   eax,eax
   295fd:	jg     29648 <wget_popen3+0xd8>
   295ff:	mov    rax,QWORD PTR [rsp+0x18]
   29604:	sub    rax,QWORD PTR fs:0x28
   2960d:	jne    296c1 <wget_popen3+0x151>
   29613:	add    rsp,0x28
   29617:	mov    eax,r13d
   2961a:	pop    rbx
   2961b:	pop    rbp
   2961c:	pop    r12
   2961e:	pop    r13
   29620:	ret    
   29621:	nop    DWORD PTR [rax+0x0]
   29628:	xor    edx,edx
   2962a:	lea    rsi,[rsp+0x10]
   2962f:	test   r12,r12
   29632:	jne    295ee <wget_popen3+0x7e>
   29634:	xor    edi,edi
   29636:	call   11100 <wget_fd_popen3@plt>
   2963b:	mov    r13d,eax
   2963e:	test   eax,eax
   29640:	jg     2965c <wget_popen3+0xec>
   29642:	jmp    295ff <wget_popen3+0x8f>
   29644:	nop    DWORD PTR [rax+0x0]
   29648:	mov    edi,DWORD PTR [rsp+0xc]
   2964c:	lea    rsi,[rip+0x22ad0]        # 4c123 <__func__.0+0x43>
   29653:	call   11660 <fdopen@plt>
   29658:	mov    QWORD PTR [r12],rax
   2965c:	test   rbx,rbx
   2965f:	je     29674 <wget_popen3+0x104>
   29661:	mov    edi,DWORD PTR [rsp+0x10]
   29665:	lea    rsi,[rip+0x23559]        # 4cbc5 <__func__.5+0x215>
   2966c:	call   11660 <fdopen@plt>
   29671:	mov    QWORD PTR [rbx],rax
   29674:	test   rbp,rbp
   29677:	je     295ff <wget_popen3+0x8f>
   29679:	cmp    rbx,rbp
   2967c:	je     295ff <wget_popen3+0x8f>
   2967e:	mov    edi,DWORD PTR [rsp+0x14]
   29682:	lea    rsi,[rip+0x2353c]        # 4cbc5 <__func__.5+0x215>
   29689:	call   11660 <fdopen@plt>
   2968e:	mov    QWORD PTR [rbp+0x0],rax
   29692:	jmp    295ff <wget_popen3+0x8f>
   29697:	nop    WORD PTR [rax+rax*1+0x0]
   296a0:	xor    edx,edx
   296a2:	xor    esi,esi
   296a4:	test   rbp,rbp
   296a7:	je     295e9 <wget_popen3+0x79>
   296ad:	mov    QWORD PTR [rbp+0x0],0x0
   296b5:	xor    esi,esi
   296b7:	lea    rdx,[rsp+0x14]
   296bc:	jmp    295e9 <wget_popen3+0x79>
   296c1:	call   11760 <__stack_chk_fail@plt>
   296c6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000296d0 <wget_plugin_get_name>:
   296d0:	endbr64 
   296d4:	mov    rax,QWORD PTR [rdi+0x8]
   296d8:	jmp    QWORD PTR [rax]
   296da:	nop    WORD PTR [rax+rax*1+0x0]

00000000000296e0 <wget_plugin_register_finalizer>:
   296e0:	endbr64 
   296e4:	mov    rax,QWORD PTR [rdi+0x8]
   296e8:	jmp    QWORD PTR [rax+0x8]
   296eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000296f0 <wget_plugin_register_option_callback>:
   296f0:	endbr64 
   296f4:	mov    rax,QWORD PTR [rdi+0x8]
   296f8:	jmp    QWORD PTR [rax+0x10]
   296fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000029700 <wget_intercept_action_reject>:
   29700:	endbr64 
   29704:	mov    rax,QWORD PTR [rdi]
   29707:	jmp    QWORD PTR [rax+0x18]
   2970a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000029710 <wget_intercept_action_accept>:
   29710:	endbr64 
   29714:	mov    rax,QWORD PTR [rdi]
   29717:	jmp    QWORD PTR [rax+0x20]
   2971a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000029720 <wget_intercept_action_set_alt_url>:
   29720:	endbr64 
   29724:	mov    rax,QWORD PTR [rdi]
   29727:	jmp    QWORD PTR [rax+0x28]
   2972a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000029730 <wget_intercept_action_set_local_filename>:
   29730:	endbr64 
   29734:	mov    rax,QWORD PTR [rdi]
   29737:	jmp    QWORD PTR [rax+0x30]
   2973a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000029740 <wget_plugin_register_url_filter_callback>:
   29740:	endbr64 
   29744:	mov    rax,QWORD PTR [rdi+0x8]
   29748:	jmp    QWORD PTR [rax+0x38]
   2974b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000029750 <wget_downloaded_file_get_source_url>:
   29750:	endbr64 
   29754:	mov    rax,QWORD PTR [rdi]
   29757:	jmp    QWORD PTR [rax+0x40]
   2975a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000029760 <wget_downloaded_file_get_local_filename>:
   29760:	endbr64 
   29764:	mov    rax,QWORD PTR [rdi]
   29767:	jmp    QWORD PTR [rax+0x48]
   2976a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000029770 <wget_downloaded_file_get_size>:
   29770:	endbr64 
   29774:	mov    rax,QWORD PTR [rdi]
   29777:	jmp    QWORD PTR [rax+0x50]
   2977a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000029780 <wget_downloaded_file_get_contents>:
   29780:	endbr64 
   29784:	mov    rax,QWORD PTR [rdi]
   29787:	jmp    QWORD PTR [rax+0x58]
   2978a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000029790 <wget_downloaded_file_open_stream>:
   29790:	endbr64 
   29794:	mov    rax,QWORD PTR [rdi]
   29797:	jmp    QWORD PTR [rax+0x60]
   2979a:	nop    WORD PTR [rax+rax*1+0x0]

00000000000297a0 <wget_downloaded_file_get_recurse>:
   297a0:	endbr64 
   297a4:	mov    rax,QWORD PTR [rdi]
   297a7:	jmp    QWORD PTR [rax+0x68]
   297aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000000297b0 <wget_downloaded_file_add_recurse_url>:
   297b0:	endbr64 
   297b4:	mov    rax,QWORD PTR [rdi]
   297b7:	jmp    QWORD PTR [rax+0x70]
   297ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000000297c0 <wget_plugin_register_post_processor>:
   297c0:	endbr64 
   297c4:	mov    rax,QWORD PTR [rdi+0x8]
   297c8:	jmp    QWORD PTR [rax+0x78]
   297cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000297d0 <wget_vasprintf>:
   297d0:	endbr64 
   297d4:	push   r13
   297d6:	mov    r13,rdx
   297d9:	mov    edx,0x80
   297de:	push   r12
   297e0:	mov    r12,rsi
   297e3:	xor    esi,esi
   297e5:	push   rbp
   297e6:	push   rbx
   297e7:	mov    rbx,rdi
   297ea:	sub    rsp,0x38
   297ee:	mov    rax,QWORD PTR fs:0x28
   297f7:	mov    QWORD PTR [rsp+0x28],rax
   297fc:	xor    eax,eax
   297fe:	mov    rbp,rsp
   29801:	mov    rdi,rbp
   29804:	call   108d0 <wget_buffer_init@plt>
   29809:	mov    rdx,r13
   2980c:	mov    rsi,r12
   2980f:	mov    rdi,rbp
   29812:	call   11080 <wget_buffer_vprintf@plt>
   29817:	test   BYTE PTR [rsp+0x18],0x4
   2981c:	jne    29870 <wget_vasprintf+0xa0>
   2981e:	mov    rdi,QWORD PTR [rsp]
   29822:	mov    r12,rax
   29825:	test   rbx,rbx
   29828:	je     29860 <wget_vasprintf+0x90>
   2982a:	lea    rsi,[rax+0x1]
   2982e:	mov    rax,QWORD PTR [rip+0x4c74b]        # 75f80 <wget_realloc_fn@@Base-0x1398>
   29835:	call   QWORD PTR [rax]
   29837:	mov    QWORD PTR [rbx],rax
   2983a:	mov    rax,QWORD PTR [rsp+0x28]
   2983f:	sub    rax,QWORD PTR fs:0x28
   29848:	jne    29882 <wget_vasprintf+0xb2>
   2984a:	add    rsp,0x38
   2984e:	mov    rax,r12
   29851:	pop    rbx
   29852:	pop    rbp
   29853:	pop    r12
   29855:	pop    r13
   29857:	ret    
   29858:	nop    DWORD PTR [rax+rax*1+0x0]
   29860:	test   rdi,rdi
   29863:	je     2983a <wget_vasprintf+0x6a>
   29865:	mov    rax,QWORD PTR [rip+0x4c77c]        # 75fe8 <wget_free@@Base-0x1328>
   2986c:	call   QWORD PTR [rax]
   2986e:	jmp    2983a <wget_vasprintf+0x6a>
   29870:	mov    rdi,QWORD PTR [rsp]
   29874:	mov    r12,0xffffffffffffffff
   2987b:	test   rdi,rdi
   2987e:	jne    29865 <wget_vasprintf+0x95>
   29880:	jmp    2983a <wget_vasprintf+0x6a>
   29882:	call   11760 <__stack_chk_fail@plt>
   29887:	nop    WORD PTR [rax+rax*1+0x0]

0000000000029890 <wget_asprintf>:
   29890:	endbr64 
   29894:	sub    rsp,0xd8
   2989b:	mov    QWORD PTR [rsp+0x30],rdx
   298a0:	mov    QWORD PTR [rsp+0x38],rcx
   298a5:	mov    QWORD PTR [rsp+0x40],r8
   298aa:	mov    QWORD PTR [rsp+0x48],r9
   298af:	test   al,al
   298b1:	je     298ea <wget_asprintf+0x5a>
   298b3:	movaps XMMWORD PTR [rsp+0x50],xmm0
   298b8:	movaps XMMWORD PTR [rsp+0x60],xmm1
   298bd:	movaps XMMWORD PTR [rsp+0x70],xmm2
   298c2:	movaps XMMWORD PTR [rsp+0x80],xmm3
   298ca:	movaps XMMWORD PTR [rsp+0x90],xmm4
   298d2:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   298da:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   298e2:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   298ea:	mov    rax,QWORD PTR fs:0x28
   298f3:	mov    QWORD PTR [rsp+0x18],rax
   298f8:	xor    eax,eax
   298fa:	lea    rax,[rsp+0xe0]
   29902:	mov    rdx,rsp
   29905:	mov    DWORD PTR [rsp],0x10
   2990c:	mov    QWORD PTR [rsp+0x8],rax
   29911:	lea    rax,[rsp+0x20]
   29916:	mov    DWORD PTR [rsp+0x4],0x30
   2991e:	mov    QWORD PTR [rsp+0x10],rax
   29923:	call   11aa0 <wget_vasprintf@plt>
   29928:	mov    rdx,QWORD PTR [rsp+0x18]
   2992d:	sub    rdx,QWORD PTR fs:0x28
   29936:	jne    29940 <wget_asprintf+0xb0>
   29938:	add    rsp,0xd8
   2993f:	ret    
   29940:	call   11760 <__stack_chk_fail@plt>
   29945:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000029950 <wget_vaprintf>:
   29950:	endbr64 
   29954:	sub    rsp,0x18
   29958:	mov    r8,rdi
   2995b:	mov    rdx,rsi
   2995e:	mov    rax,QWORD PTR fs:0x28
   29967:	mov    QWORD PTR [rsp+0x8],rax
   2996c:	xor    eax,eax
   2996e:	mov    rdi,rsp
   29971:	mov    rsi,r8
   29974:	mov    QWORD PTR [rsp],0x0
   2997c:	call   11aa0 <wget_vasprintf@plt>
   29981:	mov    rax,QWORD PTR [rsp]
   29985:	mov    rdx,QWORD PTR [rsp+0x8]
   2998a:	sub    rdx,QWORD PTR fs:0x28
   29993:	jne    2999a <wget_vaprintf+0x4a>
   29995:	add    rsp,0x18
   29999:	ret    
   2999a:	call   11760 <__stack_chk_fail@plt>
   2999f:	nop

00000000000299a0 <wget_aprintf>:
   299a0:	endbr64 
   299a4:	sub    rsp,0xe8
   299ab:	mov    r10,rdi
   299ae:	mov    QWORD PTR [rsp+0x38],rsi
   299b3:	mov    QWORD PTR [rsp+0x40],rdx
   299b8:	mov    QWORD PTR [rsp+0x48],rcx
   299bd:	mov    QWORD PTR [rsp+0x50],r8
   299c2:	mov    QWORD PTR [rsp+0x58],r9
   299c7:	test   al,al
   299c9:	je     29a05 <wget_aprintf+0x65>
   299cb:	movaps XMMWORD PTR [rsp+0x60],xmm0
   299d0:	movaps XMMWORD PTR [rsp+0x70],xmm1
   299d5:	movaps XMMWORD PTR [rsp+0x80],xmm2
   299dd:	movaps XMMWORD PTR [rsp+0x90],xmm3
   299e5:	movaps XMMWORD PTR [rsp+0xa0],xmm4
   299ed:	movaps XMMWORD PTR [rsp+0xb0],xmm5
   299f5:	movaps XMMWORD PTR [rsp+0xc0],xmm6
   299fd:	movaps XMMWORD PTR [rsp+0xd0],xmm7
   29a05:	mov    rax,QWORD PTR fs:0x28
   29a0e:	mov    QWORD PTR [rsp+0x28],rax
   29a13:	xor    eax,eax
   29a15:	lea    rdx,[rsp+0x10]
   29a1a:	lea    rdi,[rsp+0x8]
   29a1f:	mov    rsi,r10
   29a22:	lea    rax,[rsp+0xf0]
   29a2a:	mov    DWORD PTR [rsp+0x10],0x8
   29a32:	mov    QWORD PTR [rsp+0x18],rax
   29a37:	lea    rax,[rsp+0x30]
   29a3c:	mov    QWORD PTR [rsp+0x8],0x0
   29a45:	mov    DWORD PTR [rsp+0x14],0x30
   29a4d:	mov    QWORD PTR [rsp+0x20],rax
   29a52:	call   11aa0 <wget_vasprintf@plt>
   29a57:	mov    rax,QWORD PTR [rsp+0x8]
   29a5c:	mov    rdx,QWORD PTR [rsp+0x28]
   29a61:	sub    rdx,QWORD PTR fs:0x28
   29a6a:	jne    29a74 <wget_aprintf+0xd4>
   29a6c:	add    rsp,0xe8
   29a73:	ret    
   29a74:	call   11760 <__stack_chk_fail@plt>
   29a79:	nop    DWORD PTR [rax+0x0]

0000000000029a80 <wget_vfprintf>:
   29a80:	endbr64 
   29a84:	push   r14
   29a86:	mov    r14,rdx
   29a89:	mov    edx,0x400
   29a8e:	push   r13
   29a90:	mov    r13,rdi
   29a93:	push   r12
   29a95:	mov    r12,rsi
   29a98:	push   rbp
   29a99:	sub    rsp,0x438
   29aa0:	mov    rax,QWORD PTR fs:0x28
   29aa9:	mov    QWORD PTR [rsp+0x428],rax
   29ab1:	xor    eax,eax
   29ab3:	mov    rbp,rsp
   29ab6:	lea    rsi,[rsp+0x20]
   29abb:	mov    rdi,rbp
   29abe:	call   108d0 <wget_buffer_init@plt>
   29ac3:	mov    rdx,r14
   29ac6:	mov    rsi,r12
   29ac9:	mov    rdi,rbp
   29acc:	call   11080 <wget_buffer_vprintf@plt>
   29ad1:	test   BYTE PTR [rsp+0x18],0x4
   29ad6:	jne    29b30 <wget_vfprintf+0xb0>
   29ad8:	mov    r12,rax
   29adb:	test   rax,rax
   29ade:	jne    29b10 <wget_vfprintf+0x90>
   29ae0:	mov    rdi,rbp
   29ae3:	call   11300 <wget_buffer_deinit@plt>
   29ae8:	mov    rax,QWORD PTR [rsp+0x428]
   29af0:	sub    rax,QWORD PTR fs:0x28
   29af9:	jne    29b41 <wget_vfprintf+0xc1>
   29afb:	add    rsp,0x438
   29b02:	mov    rax,r12
   29b05:	pop    rbp
   29b06:	pop    r12
   29b08:	pop    r13
   29b0a:	pop    r14
   29b0c:	ret    
   29b0d:	nop    DWORD PTR [rax]
   29b10:	mov    rdi,QWORD PTR [rsp]
   29b14:	mov    rcx,r13
   29b17:	mov    rdx,rax
   29b1a:	mov    esi,0x1
   29b1f:	call   12730 <fwrite@plt>
   29b24:	mov    r12,rax
   29b27:	jmp    29ae0 <wget_vfprintf+0x60>
   29b29:	nop    DWORD PTR [rax+0x0]
   29b30:	mov    rdi,rbp
   29b33:	mov    r12,0xffffffffffffffff
   29b3a:	call   11300 <wget_buffer_deinit@plt>
   29b3f:	jmp    29ae8 <wget_vfprintf+0x68>
   29b41:	call   11760 <__stack_chk_fail@plt>
   29b46:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000029b50 <wget_fprintf>:
   29b50:	endbr64 
   29b54:	sub    rsp,0xd8
   29b5b:	mov    QWORD PTR [rsp+0x30],rdx
   29b60:	mov    QWORD PTR [rsp+0x38],rcx
   29b65:	mov    QWORD PTR [rsp+0x40],r8
   29b6a:	mov    QWORD PTR [rsp+0x48],r9
   29b6f:	test   al,al
   29b71:	je     29baa <wget_fprintf+0x5a>
   29b73:	movaps XMMWORD PTR [rsp+0x50],xmm0
   29b78:	movaps XMMWORD PTR [rsp+0x60],xmm1
   29b7d:	movaps XMMWORD PTR [rsp+0x70],xmm2
   29b82:	movaps XMMWORD PTR [rsp+0x80],xmm3
   29b8a:	movaps XMMWORD PTR [rsp+0x90],xmm4
   29b92:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   29b9a:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   29ba2:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   29baa:	mov    rax,QWORD PTR fs:0x28
   29bb3:	mov    QWORD PTR [rsp+0x18],rax
   29bb8:	xor    eax,eax
   29bba:	lea    rax,[rsp+0xe0]
   29bc2:	mov    rdx,rsp
   29bc5:	mov    DWORD PTR [rsp],0x10
   29bcc:	mov    QWORD PTR [rsp+0x8],rax
   29bd1:	lea    rax,[rsp+0x20]
   29bd6:	mov    DWORD PTR [rsp+0x4],0x30
   29bde:	mov    QWORD PTR [rsp+0x10],rax
   29be3:	call   10ff0 <wget_vfprintf@plt>
   29be8:	mov    rdx,QWORD PTR [rsp+0x18]
   29bed:	sub    rdx,QWORD PTR fs:0x28
   29bf6:	jne    29c00 <wget_fprintf+0xb0>
   29bf8:	add    rsp,0xd8
   29bff:	ret    
   29c00:	call   11760 <__stack_chk_fail@plt>
   29c05:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000029c10 <wget_printf>:
   29c10:	endbr64 
   29c14:	sub    rsp,0xd8
   29c1b:	mov    r10,rdi
   29c1e:	mov    QWORD PTR [rsp+0x28],rsi
   29c23:	mov    QWORD PTR [rsp+0x30],rdx
   29c28:	mov    QWORD PTR [rsp+0x38],rcx
   29c2d:	mov    QWORD PTR [rsp+0x40],r8
   29c32:	mov    QWORD PTR [rsp+0x48],r9
   29c37:	test   al,al
   29c39:	je     29c72 <wget_printf+0x62>
   29c3b:	movaps XMMWORD PTR [rsp+0x50],xmm0
   29c40:	movaps XMMWORD PTR [rsp+0x60],xmm1
   29c45:	movaps XMMWORD PTR [rsp+0x70],xmm2
   29c4a:	movaps XMMWORD PTR [rsp+0x80],xmm3
   29c52:	movaps XMMWORD PTR [rsp+0x90],xmm4
   29c5a:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   29c62:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   29c6a:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   29c72:	mov    rax,QWORD PTR fs:0x28
   29c7b:	mov    QWORD PTR [rsp+0x18],rax
   29c80:	xor    eax,eax
   29c82:	lea    rax,[rsp+0xe0]
   29c8a:	mov    rdx,rsp
   29c8d:	mov    rsi,r10
   29c90:	mov    QWORD PTR [rsp+0x8],rax
   29c95:	lea    rax,[rsp+0x20]
   29c9a:	mov    QWORD PTR [rsp+0x10],rax
   29c9f:	mov    rax,QWORD PTR [rip+0x4c292]        # 75f38 <stdout@GLIBC_2.2.5>
   29ca6:	mov    DWORD PTR [rsp],0x8
   29cad:	mov    rdi,QWORD PTR [rax]
   29cb0:	mov    DWORD PTR [rsp+0x4],0x30
   29cb8:	call   10ff0 <wget_vfprintf@plt>
   29cbd:	mov    rdx,QWORD PTR [rsp+0x18]
   29cc2:	sub    rdx,QWORD PTR fs:0x28
   29ccb:	jne    29cd5 <wget_printf+0xc5>
   29ccd:	add    rsp,0xd8
   29cd4:	ret    
   29cd5:	call   11760 <__stack_chk_fail@plt>
   29cda:	nop    WORD PTR [rax+rax*1+0x0]

0000000000029ce0 <wget_vsnprintf>:
   29ce0:	endbr64 
   29ce4:	push   r14
   29ce6:	mov    r14,rcx
   29ce9:	push   r13
   29ceb:	push   r12
   29ced:	mov    r12,rdx
   29cf0:	mov    rdx,rsi
   29cf3:	push   rbp
   29cf4:	mov    rbp,rdi
   29cf7:	push   rbx
   29cf8:	mov    rbx,rsi
   29cfb:	mov    rsi,rdi
   29cfe:	sub    rsp,0x30
   29d02:	mov    rax,QWORD PTR fs:0x28
   29d0b:	mov    QWORD PTR [rsp+0x28],rax
   29d10:	xor    eax,eax
   29d12:	mov    r13,rsp
   29d15:	mov    rdi,r13
   29d18:	call   108d0 <wget_buffer_init@plt>
   29d1d:	mov    rdx,r14
   29d20:	mov    rsi,r12
   29d23:	mov    rdi,r13
   29d26:	call   11080 <wget_buffer_vprintf@plt>
   29d2b:	test   BYTE PTR [rsp+0x18],0x4
   29d30:	jne    29da8 <wget_vsnprintf+0xc8>
   29d32:	mov    r12,rax
   29d35:	test   rbp,rbp
   29d38:	je     29d54 <wget_vsnprintf+0x74>
   29d3a:	mov    rsi,QWORD PTR [rsp]
   29d3e:	cmp    rsi,rbp
   29d41:	je     29d98 <wget_vsnprintf+0xb8>
   29d43:	cmp    rbx,rax
   29d46:	jbe    29d80 <wget_vsnprintf+0xa0>
   29d48:	lea    rdx,[rax+0x1]
   29d4c:	mov    rdi,rbp
   29d4f:	call   11220 <memcpy@plt>
   29d54:	mov    rdi,r13
   29d57:	call   11300 <wget_buffer_deinit@plt>
   29d5c:	mov    rax,QWORD PTR [rsp+0x28]
   29d61:	sub    rax,QWORD PTR fs:0x28
   29d6a:	jne    29db9 <wget_vsnprintf+0xd9>
   29d6c:	add    rsp,0x30
   29d70:	mov    rax,r12
   29d73:	pop    rbx
   29d74:	pop    rbp
   29d75:	pop    r12
   29d77:	pop    r13
   29d79:	pop    r14
   29d7b:	ret    
   29d7c:	nop    DWORD PTR [rax+0x0]
   29d80:	lea    rdx,[rbx-0x1]
   29d84:	mov    rdi,rbp
   29d87:	call   11220 <memcpy@plt>
   29d8c:	mov    BYTE PTR [rbp+rbx*1-0x1],0x0
   29d91:	jmp    29d54 <wget_vsnprintf+0x74>
   29d93:	nop    DWORD PTR [rax+rax*1+0x0]
   29d98:	mov    QWORD PTR [rsp],0x0
   29da0:	jmp    29d54 <wget_vsnprintf+0x74>
   29da2:	nop    WORD PTR [rax+rax*1+0x0]
   29da8:	mov    rdi,r13
   29dab:	mov    r12,0xffffffffffffffff
   29db2:	call   11300 <wget_buffer_deinit@plt>
   29db7:	jmp    29d5c <wget_vsnprintf+0x7c>
   29db9:	call   11760 <__stack_chk_fail@plt>
   29dbe:	xchg   ax,ax

0000000000029dc0 <wget_snprintf>:
   29dc0:	endbr64 
   29dc4:	sub    rsp,0xd8
   29dcb:	mov    QWORD PTR [rsp+0x38],rcx
   29dd0:	mov    QWORD PTR [rsp+0x40],r8
   29dd5:	mov    QWORD PTR [rsp+0x48],r9
   29dda:	test   al,al
   29ddc:	je     29e15 <wget_snprintf+0x55>
   29dde:	movaps XMMWORD PTR [rsp+0x50],xmm0
   29de3:	movaps XMMWORD PTR [rsp+0x60],xmm1
   29de8:	movaps XMMWORD PTR [rsp+0x70],xmm2
   29ded:	movaps XMMWORD PTR [rsp+0x80],xmm3
   29df5:	movaps XMMWORD PTR [rsp+0x90],xmm4
   29dfd:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   29e05:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   29e0d:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   29e15:	mov    rax,QWORD PTR fs:0x28
   29e1e:	mov    QWORD PTR [rsp+0x18],rax
   29e23:	xor    eax,eax
   29e25:	lea    rax,[rsp+0xe0]
   29e2d:	mov    rcx,rsp
   29e30:	mov    DWORD PTR [rsp],0x18
   29e37:	mov    QWORD PTR [rsp+0x8],rax
   29e3c:	lea    rax,[rsp+0x20]
   29e41:	mov    DWORD PTR [rsp+0x4],0x30
   29e49:	mov    QWORD PTR [rsp+0x10],rax
   29e4e:	call   117f0 <wget_vsnprintf@plt>
   29e53:	mov    rdx,QWORD PTR [rsp+0x18]
   29e58:	sub    rdx,QWORD PTR fs:0x28
   29e61:	jne    29e6b <wget_snprintf+0xab>
   29e63:	add    rsp,0xd8
   29e6a:	ret    
   29e6b:	call   11760 <__stack_chk_fail@plt>

0000000000029e70 <random_exit>:
   29e70:	endbr64 
   29e74:	cmp    BYTE PTR [rip+0x4d745],0x0        # 775c0 <initialized>
   29e7b:	jne    29e80 <random_exit+0x10>
   29e7d:	ret    
   29e7e:	xchg   ax,ax
   29e80:	sub    rsp,0x8
   29e84:	lea    rdi,[rip+0x4d73d]        # 775c8 <mutex>
   29e8b:	call   11e70 <wget_thread_mutex_destroy@plt>
   29e90:	mov    BYTE PTR [rip+0x4d729],0x0        # 775c0 <initialized>
   29e97:	add    rsp,0x8
   29e9b:	ret    
   29e9c:	nop    DWORD PTR [rax+0x0]

0000000000029ea0 <wget_random_init>:
   29ea0:	endbr64 
   29ea4:	jmp    12970 <random_init>
   29ea9:	nop    DWORD PTR [rax+0x0]

0000000000029eb0 <wget_random_exit>:
   29eb0:	endbr64 
   29eb4:	cmp    BYTE PTR [rip+0x4d705],0x0        # 775c0 <initialized>
   29ebb:	jne    29ec0 <wget_random_exit+0x10>
   29ebd:	ret    
   29ebe:	xchg   ax,ax
   29ec0:	sub    rsp,0x8
   29ec4:	lea    rdi,[rip+0x4d6fd]        # 775c8 <mutex>
   29ecb:	call   11e70 <wget_thread_mutex_destroy@plt>
   29ed0:	mov    BYTE PTR [rip+0x4d6e9],0x0        # 775c0 <initialized>
   29ed7:	add    rsp,0x8
   29edb:	ret    
   29edc:	nop    DWORD PTR [rax+0x0]

0000000000029ee0 <wget_random>:
   29ee0:	endbr64 
   29ee4:	push   rbp
   29ee5:	lea    rbp,[rip+0x4d6f4]        # 775e0 <state>
   29eec:	push   rbx
   29eed:	sub    rsp,0x18
   29ef1:	mov    rdi,QWORD PTR [rip+0x4d6d0]        # 775c8 <mutex>
   29ef8:	mov    rax,QWORD PTR fs:0x28
   29f01:	mov    QWORD PTR [rsp+0x8],rax
   29f06:	xor    eax,eax
   29f08:	call   12040 <wget_thread_mutex_lock@plt>
   29f0d:	mov    eax,DWORD PTR [rip+0x4d74d]        # 77660 <seeded>
   29f13:	test   eax,eax
   29f15:	je     29f60 <wget_random+0x80>
   29f17:	lea    rsi,[rsp+0x4]
   29f1c:	mov    rdi,rbp
   29f1f:	call   111e0 <random_r@plt>
   29f24:	test   eax,eax
   29f26:	je     29f30 <wget_random+0x50>
   29f28:	mov    DWORD PTR [rsp+0x4],0x0
   29f30:	mov    rdi,QWORD PTR [rip+0x4d691]        # 775c8 <mutex>
   29f37:	call   117c0 <wget_thread_mutex_unlock@plt>
   29f3c:	mov    eax,DWORD PTR [rsp+0x4]
   29f40:	mov    rdx,QWORD PTR [rsp+0x8]
   29f45:	sub    rdx,QWORD PTR fs:0x28
   29f4e:	jne    29f93 <wget_random+0xb3>
   29f50:	add    rsp,0x18
   29f54:	pop    rbx
   29f55:	pop    rbp
   29f56:	ret    
   29f57:	nop    WORD PTR [rax+rax*1+0x0]
   29f60:	xor    edi,edi
   29f62:	call   11480 <time@plt>
   29f67:	mov    rbx,rax
   29f6a:	call   11d90 <getpid@plt>
   29f6f:	mov    rcx,rbp
   29f72:	mov    edx,0x40
   29f77:	lea    rsi,[rip+0x4d6a2]        # 77620 <statebuf>
   29f7e:	xor    eax,ebx
   29f80:	mov    edi,eax
   29f82:	call   10f30 <initstate_r@plt>
   29f87:	mov    DWORD PTR [rip+0x4d6cf],0x1        # 77660 <seeded>
   29f91:	jmp    29f17 <wget_random+0x37>
   29f93:	call   11760 <__stack_chk_fail@plt>
   29f98:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000029fa0 <wget_srandom>:
   29fa0:	endbr64 
   29fa4:	push   rbp
   29fa5:	mov    ebp,edi
   29fa7:	mov    rdi,QWORD PTR [rip+0x4d61a]        # 775c8 <mutex>
   29fae:	call   12040 <wget_thread_mutex_lock@plt>
   29fb3:	mov    edi,ebp
   29fb5:	lea    rcx,[rip+0x4d624]        # 775e0 <state>
   29fbc:	mov    edx,0x40
   29fc1:	lea    rsi,[rip+0x4d658]        # 77620 <statebuf>
   29fc8:	call   10f30 <initstate_r@plt>
   29fcd:	mov    rdi,QWORD PTR [rip+0x4d5f4]        # 775c8 <mutex>
   29fd4:	pop    rbp
   29fd5:	mov    DWORD PTR [rip+0x4d681],0x1        # 77660 <seeded>
   29fdf:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   29fe4:	cs nop WORD PTR [rax+rax*1+0x0]
   29fee:	xchg   ax,ax

0000000000029ff0 <path_free>:
   29ff0:	endbr64 
   29ff4:	push   rbp
   29ff5:	mov    rbp,rdi
   29ff8:	push   rbx
   29ff9:	sub    rsp,0x8
   29ffd:	mov    rdi,QWORD PTR [rdi]
   2a000:	mov    rbx,QWORD PTR [rip+0x4bfe1]        # 75fe8 <wget_free@@Base-0x1328>
   2a007:	test   rdi,rdi
   2a00a:	je     2a016 <path_free+0x26>
   2a00c:	call   QWORD PTR [rbx]
   2a00e:	mov    QWORD PTR [rbp+0x0],0x0
   2a016:	mov    rax,QWORD PTR [rbx]
   2a019:	add    rsp,0x8
   2a01d:	mov    rdi,rbp
   2a020:	pop    rbx
   2a021:	pop    rbp
   2a022:	jmp    rax
   2a024:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2a02f:	nop

000000000002a030 <wget_robots_free>:
   2a030:	endbr64 
   2a034:	test   rdi,rdi
   2a037:	je     2a070 <wget_robots_free+0x40>
   2a039:	push   rbx
   2a03a:	mov    rbx,rdi
   2a03d:	mov    rdi,QWORD PTR [rdi]
   2a040:	test   rdi,rdi
   2a043:	je     2a06e <wget_robots_free+0x3e>
   2a045:	call   125e0 <wget_vector_free@plt>
   2a04a:	mov    rax,QWORD PTR [rbx]
   2a04d:	lea    rdi,[rax+0x8]
   2a051:	call   125e0 <wget_vector_free@plt>
   2a056:	mov    rdi,QWORD PTR [rbx]
   2a059:	test   rdi,rdi
   2a05c:	je     2a067 <wget_robots_free+0x37>
   2a05e:	mov    rax,QWORD PTR [rip+0x4bf83]        # 75fe8 <wget_free@@Base-0x1328>
   2a065:	call   QWORD PTR [rax]
   2a067:	mov    QWORD PTR [rbx],0x0
   2a06e:	pop    rbx
   2a06f:	ret    
   2a070:	ret    
   2a071:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2a07c:	nop    DWORD PTR [rax+0x0]

000000000002a080 <wget_robots_parse>:
   2a080:	endbr64 
   2a084:	push   r15
   2a086:	mov    r15,rsi
   2a089:	push   r14
   2a08b:	push   r13
   2a08d:	push   r12
   2a08f:	push   rbp
   2a090:	push   rbx
   2a091:	sub    rsp,0x58
   2a095:	mov    QWORD PTR [rsp+0x8],rdi
   2a09a:	mov    QWORD PTR [rsp+0x18],rdx
   2a09f:	mov    rax,QWORD PTR fs:0x28
   2a0a8:	mov    QWORD PTR [rsp+0x48],rax
   2a0ad:	xor    eax,eax
   2a0af:	mov    QWORD PTR [rsp+0x10],0x0
   2a0b8:	test   rdx,rdx
   2a0bb:	je     2a0ca <wget_robots_parse+0x4a>
   2a0bd:	mov    rdi,rdx
   2a0c0:	call   10ab0 <strlen@plt>
   2a0c5:	mov    QWORD PTR [rsp+0x10],rax
   2a0ca:	test   r15,r15
   2a0cd:	je     2a458 <wget_robots_parse+0x3d8>
   2a0d3:	cmp    BYTE PTR [r15],0x0
   2a0d7:	je     2a458 <wget_robots_parse+0x3d8>
   2a0dd:	cmp    QWORD PTR [rsp+0x8],0x0
   2a0e3:	je     2a458 <wget_robots_parse+0x3d8>
   2a0e9:	mov    rax,QWORD PTR [rip+0x4be50]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   2a0f0:	mov    esi,0x10
   2a0f5:	mov    edi,0x1
   2a0fa:	call   QWORD PTR [rax]
   2a0fc:	mov    QWORD PTR [rsp+0x28],rax
   2a101:	mov    rbp,rax
   2a104:	test   rax,rax
   2a107:	je     2a469 <wget_robots_parse+0x3e9>
   2a10d:	xor    ebx,ebx
   2a10f:	lea    r12,[rip+0x23999]        # 4daaf <__func__.0+0x47f>
   2a116:	lea    r13,[rip+0x2397c]        # 4da99 <__func__.0+0x469>
   2a11d:	jmp    2a15c <wget_robots_parse+0xdc>
   2a11f:	nop
   2a120:	mov    edx,0x8
   2a125:	mov    rsi,r12
   2a128:	mov    rdi,r15
   2a12b:	call   11c40 <wget_strncasecmp_ascii@plt>
   2a130:	test   eax,eax
   2a132:	je     2a280 <wget_robots_parse+0x200>
   2a138:	mov    esi,0xa
   2a13d:	mov    rdi,r15
   2a140:	call   109e0 <strchr@plt>
   2a145:	test   rax,rax
   2a148:	je     2a3c0 <wget_robots_parse+0x340>
   2a14e:	cmp    BYTE PTR [rax+0x1],0x0
   2a152:	lea    r15,[rax+0x1]
   2a156:	je     2a3c0 <wget_robots_parse+0x340>
   2a15c:	cmp    ebx,0x1
   2a15f:	jg     2a120 <wget_robots_parse+0xa0>
   2a161:	mov    edx,0xb
   2a166:	mov    rsi,r13
   2a169:	mov    rdi,r15
   2a16c:	call   11c40 <wget_strncasecmp_ascii@plt>
   2a171:	test   eax,eax
   2a173:	jne    2a188 <wget_robots_parse+0x108>
   2a175:	test   ebx,ebx
   2a177:	je     2a350 <wget_robots_parse+0x2d0>
   2a17d:	mov    ebx,0x2
   2a182:	jmp    2a138 <wget_robots_parse+0xb8>
   2a184:	nop    DWORD PTR [rax+0x0]
   2a188:	cmp    ebx,0x1
   2a18b:	jne    2a120 <wget_robots_parse+0xa0>
   2a18d:	mov    edx,0x9
   2a192:	lea    rsi,[rip+0x2390c]        # 4daa5 <__func__.0+0x475>
   2a199:	mov    rdi,r15
   2a19c:	call   11c40 <wget_strncasecmp_ascii@plt>
   2a1a1:	test   eax,eax
   2a1a3:	jne    2a120 <wget_robots_parse+0xa0>
   2a1a9:	movzx  eax,BYTE PTR [r15+0x9]
   2a1ae:	lea    r14,[r15+0x9]
   2a1b2:	cmp    al,0x20
   2a1b4:	jne    2a1cd <wget_robots_parse+0x14d>
   2a1b6:	cs nop WORD PTR [rax+rax*1+0x0]
   2a1c0:	movzx  eax,BYTE PTR [r14+0x1]
   2a1c5:	add    r14,0x1
   2a1c9:	cmp    al,0x20
   2a1cb:	je     2a1c0 <wget_robots_parse+0x140>
   2a1cd:	cmp    al,0x9
   2a1cf:	je     2a1c0 <wget_robots_parse+0x140>
   2a1d1:	cmp    al,0x23
   2a1d3:	jbe    2a3f0 <wget_robots_parse+0x370>
   2a1d9:	cmp    QWORD PTR [rbp+0x0],0x0
   2a1de:	je     2a426 <wget_robots_parse+0x3a6>
   2a1e4:	movsx  rbp,BYTE PTR [r14]
   2a1e8:	test   bpl,bpl
   2a1eb:	je     2a462 <wget_robots_parse+0x3e2>
   2a1f1:	call   116c0 <__ctype_b_loc@plt>
   2a1f6:	mov    rsi,r14
   2a1f9:	mov    rax,QWORD PTR [rax]
   2a1fc:	jmp    2a20e <wget_robots_parse+0x18e>
   2a1fe:	xchg   ax,ax
   2a200:	movsx  rbp,BYTE PTR [rsi+0x1]
   2a205:	add    rsi,0x1
   2a209:	test   bpl,bpl
   2a20c:	je     2a215 <wget_robots_parse+0x195>
   2a20e:	test   BYTE PTR [rax+rbp*2+0x1],0x20
   2a213:	je     2a200 <wget_robots_parse+0x180>
   2a215:	sub    rsi,r14
   2a218:	mov    rdi,r14
   2a21b:	mov    QWORD PTR [rsp+0x38],rsi
   2a220:	call   126b0 <wget_strmemdup@plt>
   2a225:	mov    QWORD PTR [rsp+0x30],rax
   2a22a:	test   rax,rax
   2a22d:	je     2a26a <wget_robots_parse+0x1ea>
   2a22f:	mov    rax,QWORD PTR [rsp+0x28]
   2a234:	lea    rsi,[rsp+0x30]
   2a239:	mov    edx,0x10
   2a23e:	mov    rdi,QWORD PTR [rax]
   2a241:	call   11a20 <wget_vector_add_memdup@plt>
   2a246:	test   eax,eax
   2a248:	jns    2a31b <wget_robots_parse+0x29b>
   2a24e:	mov    rdi,QWORD PTR [rsp+0x30]
   2a253:	test   rdi,rdi
   2a256:	je     2a26a <wget_robots_parse+0x1ea>
   2a258:	mov    rax,QWORD PTR [rip+0x4bd89]        # 75fe8 <wget_free@@Base-0x1328>
   2a25f:	call   QWORD PTR [rax]
   2a261:	mov    QWORD PTR [rsp+0x30],0x0
   2a26a:	lea    rdi,[rsp+0x28]
   2a26f:	call   107d0 <wget_robots_free@plt>
   2a274:	mov    eax,0xfffffffe
   2a279:	jmp    2a3ca <wget_robots_parse+0x34a>
   2a27e:	xchg   ax,ax
   2a280:	movzx  edx,BYTE PTR [r15+0x8]
   2a285:	lea    r14,[r15+0x8]
   2a289:	cmp    dl,0x9
   2a28c:	je     2a298 <wget_robots_parse+0x218>
   2a28e:	cmp    dl,0x20
   2a291:	jne    2a2ab <wget_robots_parse+0x22b>
   2a293:	nop    DWORD PTR [rax+rax*1+0x0]
   2a298:	movzx  edx,BYTE PTR [r14+0x1]
   2a29d:	add    r14,0x1
   2a2a1:	cmp    dl,0x20
   2a2a4:	je     2a298 <wget_robots_parse+0x218>
   2a2a6:	cmp    dl,0x9
   2a2a9:	je     2a298 <wget_robots_parse+0x218>
   2a2ab:	test   dl,dl
   2a2ad:	mov    BYTE PTR [rsp],dl
   2a2b0:	je     2a41e <wget_robots_parse+0x39e>
   2a2b6:	call   116c0 <__ctype_b_loc@plt>
   2a2bb:	mov    r15,r14
   2a2be:	movsx  rdx,BYTE PTR [rsp]
   2a2c3:	mov    rax,QWORD PTR [rax]
   2a2c6:	jmp    2a2dd <wget_robots_parse+0x25d>
   2a2c8:	nop    DWORD PTR [rax+rax*1+0x0]
   2a2d0:	movsx  rdx,BYTE PTR [r15+0x1]
   2a2d5:	add    r15,0x1
   2a2d9:	test   dl,dl
   2a2db:	je     2a2e4 <wget_robots_parse+0x264>
   2a2dd:	test   BYTE PTR [rax+rdx*2+0x1],0x20
   2a2e2:	je     2a2d0 <wget_robots_parse+0x250>
   2a2e4:	cmp    QWORD PTR [rbp+0x8],0x0
   2a2e9:	je     2a330 <wget_robots_parse+0x2b0>
   2a2eb:	mov    rsi,r15
   2a2ee:	mov    rdi,r14
   2a2f1:	sub    rsi,r14
   2a2f4:	call   126b0 <wget_strmemdup@plt>
   2a2f9:	mov    rsi,rax
   2a2fc:	test   rax,rax
   2a2ff:	je     2a26a <wget_robots_parse+0x1ea>
   2a305:	mov    rax,QWORD PTR [rsp+0x28]
   2a30a:	mov    rdi,QWORD PTR [rax+0x8]
   2a30e:	call   11290 <wget_vector_add@plt>
   2a313:	test   eax,eax
   2a315:	js     2a26a <wget_robots_parse+0x1ea>
   2a31b:	mov    rbp,QWORD PTR [rsp+0x28]
   2a320:	mov    r15,r14
   2a323:	jmp    2a138 <wget_robots_parse+0xb8>
   2a328:	nop    DWORD PTR [rax+rax*1+0x0]
   2a330:	xor    esi,esi
   2a332:	mov    edi,0x4
   2a337:	call   11f00 <wget_vector_create@plt>
   2a33c:	mov    QWORD PTR [rbp+0x8],rax
   2a340:	test   rax,rax
   2a343:	jne    2a2eb <wget_robots_parse+0x26b>
   2a345:	jmp    2a26a <wget_robots_parse+0x1ea>
   2a34a:	nop    WORD PTR [rax+rax*1+0x0]
   2a350:	movzx  ebx,BYTE PTR [r15+0xb]
   2a355:	lea    rcx,[r15+0xb]
   2a359:	cmp    bl,0x20
   2a35c:	jne    2a36d <wget_robots_parse+0x2ed>
   2a35e:	xchg   ax,ax
   2a360:	movzx  ebx,BYTE PTR [rcx+0x1]
   2a364:	add    rcx,0x1
   2a368:	cmp    bl,0x20
   2a36b:	je     2a360 <wget_robots_parse+0x2e0>
   2a36d:	cmp    bl,0x9
   2a370:	je     2a360 <wget_robots_parse+0x2e0>
   2a372:	mov    rax,QWORD PTR [rsp+0x18]
   2a377:	test   rax,rax
   2a37a:	je     2a3a8 <wget_robots_parse+0x328>
   2a37c:	mov    rdx,QWORD PTR [rsp+0x10]
   2a381:	mov    rdi,rcx
   2a384:	mov    rsi,rax
   2a387:	mov    QWORD PTR [rsp],rcx
   2a38b:	call   11c40 <wget_strncasecmp_ascii@plt>
   2a390:	mov    rcx,QWORD PTR [rsp]
   2a394:	test   eax,eax
   2a396:	jne    2a3a8 <wget_robots_parse+0x328>
   2a398:	mov    r15,rcx
   2a39b:	mov    ebx,0x1
   2a3a0:	jmp    2a138 <wget_robots_parse+0xb8>
   2a3a5:	nop    DWORD PTR [rax]
   2a3a8:	cmp    bl,0x2a
   2a3ab:	mov    r15,rcx
   2a3ae:	sete   bl
   2a3b1:	movzx  ebx,bl
   2a3b4:	jmp    2a138 <wget_robots_parse+0xb8>
   2a3b9:	nop    DWORD PTR [rax+0x0]
   2a3c0:	mov    rax,QWORD PTR [rsp+0x8]
   2a3c5:	mov    QWORD PTR [rax],rbp
   2a3c8:	xor    eax,eax
   2a3ca:	mov    rdx,QWORD PTR [rsp+0x48]
   2a3cf:	sub    rdx,QWORD PTR fs:0x28
   2a3d8:	jne    2a473 <wget_robots_parse+0x3f3>
   2a3de:	add    rsp,0x58
   2a3e2:	pop    rbx
   2a3e3:	pop    rbp
   2a3e4:	pop    r12
   2a3e6:	pop    r13
   2a3e8:	pop    r14
   2a3ea:	pop    r15
   2a3ec:	ret    
   2a3ed:	nop    DWORD PTR [rax]
   2a3f0:	movabs rdx,0xfffffff7ffffdbfe
   2a3fa:	bt     rdx,rax
   2a3fe:	jb     2a1d9 <wget_robots_parse+0x159>
   2a404:	mov    rdi,rbp
   2a407:	mov    r15,r14
   2a40a:	mov    ebx,0x2
   2a40f:	call   125e0 <wget_vector_free@plt>
   2a414:	mov    rbp,QWORD PTR [rsp+0x28]
   2a419:	jmp    2a138 <wget_robots_parse+0xb8>
   2a41e:	mov    r15,r14
   2a421:	jmp    2a2e4 <wget_robots_parse+0x264>
   2a426:	xor    esi,esi
   2a428:	mov    edi,0x20
   2a42d:	call   11f00 <wget_vector_create@plt>
   2a432:	mov    QWORD PTR [rbp+0x0],rax
   2a436:	test   rax,rax
   2a439:	je     2a26a <wget_robots_parse+0x1ea>
   2a43f:	mov    rax,QWORD PTR [rsp+0x28]
   2a444:	lea    rsi,[rip+0xfffffffffffffba5]        # 29ff0 <path_free>
   2a44b:	mov    rdi,QWORD PTR [rax]
   2a44e:	call   120e0 <wget_vector_set_destructor@plt>
   2a453:	jmp    2a1e4 <wget_robots_parse+0x164>
   2a458:	mov    eax,0xfffffffd
   2a45d:	jmp    2a3ca <wget_robots_parse+0x34a>
   2a462:	xor    esi,esi
   2a464:	jmp    2a218 <wget_robots_parse+0x198>
   2a469:	mov    eax,0xfffffffe
   2a46e:	jmp    2a3ca <wget_robots_parse+0x34a>
   2a473:	call   11760 <__stack_chk_fail@plt>
   2a478:	nop    DWORD PTR [rax+rax*1+0x0]

000000000002a480 <wget_robots_get_path_count>:
   2a480:	endbr64 
   2a484:	test   rdi,rdi
   2a487:	je     2a498 <wget_robots_get_path_count+0x18>
   2a489:	mov    rdi,QWORD PTR [rdi]
   2a48c:	jmp    10e90 <wget_vector_size@plt>
   2a491:	nop    DWORD PTR [rax+0x0]
   2a498:	xor    eax,eax
   2a49a:	ret    
   2a49b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000002a4a0 <wget_robots_get_path>:
   2a4a0:	endbr64 
   2a4a4:	test   rdi,rdi
   2a4a7:	je     2a4c0 <wget_robots_get_path+0x20>
   2a4a9:	mov    rdi,QWORD PTR [rdi]
   2a4ac:	test   rdi,rdi
   2a4af:	je     2a4c0 <wget_robots_get_path+0x20>
   2a4b1:	jmp    10c00 <wget_vector_get@plt>
   2a4b6:	cs nop WORD PTR [rax+rax*1+0x0]
   2a4c0:	xor    eax,eax
   2a4c2:	ret    
   2a4c3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2a4ce:	xchg   ax,ax

000000000002a4d0 <wget_robots_get_sitemap_count>:
   2a4d0:	endbr64 
   2a4d4:	test   rdi,rdi
   2a4d7:	je     2a4e8 <wget_robots_get_sitemap_count+0x18>
   2a4d9:	mov    rdi,QWORD PTR [rdi+0x8]
   2a4dd:	jmp    10e90 <wget_vector_size@plt>
   2a4e2:	nop    WORD PTR [rax+rax*1+0x0]
   2a4e8:	xor    eax,eax
   2a4ea:	ret    
   2a4eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000002a4f0 <wget_robots_get_sitemap>:
   2a4f0:	endbr64 
   2a4f4:	test   rdi,rdi
   2a4f7:	je     2a510 <wget_robots_get_sitemap+0x20>
   2a4f9:	mov    rdi,QWORD PTR [rdi+0x8]
   2a4fd:	test   rdi,rdi
   2a500:	je     2a510 <wget_robots_get_sitemap+0x20>
   2a502:	jmp    10c00 <wget_vector_get@plt>
   2a507:	nop    WORD PTR [rax+rax*1+0x0]
   2a510:	xor    eax,eax
   2a512:	ret    
   2a513:	cs nop WORD PTR [rax+rax*1+0x0]
   2a51d:	nop    DWORD PTR [rax]

000000000002a520 <rss_get_url>:
   2a520:	endbr64 
   2a524:	test   r8,r8
   2a527:	je     2a738 <rss_get_url+0x218>
   2a52d:	push   r13
   2a52f:	push   r12
   2a531:	push   rbp
   2a532:	push   rbx
   2a533:	mov    rbx,r9
   2a536:	sub    rsp,0x8
   2a53a:	test   r9,r9
   2a53d:	je     2a5d9 <rss_get_url+0xb9>
   2a543:	mov    rbp,rdi
   2a546:	mov    r13,r8
   2a549:	test   sil,0x8
   2a54d:	je     2a5d0 <rss_get_url+0xb0>
   2a553:	lea    rsi,[rip+0x22e1a]        # 4d374 <iri_ctype+0x154>
   2a55a:	mov    rdi,rcx
   2a55d:	mov    r12,rcx
   2a560:	call   12590 <wget_strcasecmp_ascii@plt>
   2a565:	test   eax,eax
   2a567:	jne    2a610 <rss_get_url+0xf0>
   2a56d:	movzx  eax,BYTE PTR [r13+0x0]
   2a572:	cmp    al,0xd
   2a574:	jg     2a5e8 <rss_get_url+0xc8>
   2a576:	cmp    al,0x8
   2a578:	jg     2a5ec <rss_get_url+0xcc>
   2a57a:	test   rbx,rbx
   2a57d:	je     2a591 <rss_get_url+0x71>
   2a57f:	movzx  eax,BYTE PTR [r13+rbx*1-0x1]
   2a585:	lea    rdx,[rbx-0x1]
   2a589:	cmp    al,0xd
   2a58b:	jg     2a600 <rss_get_url+0xe0>
   2a58d:	cmp    al,0x8
   2a58f:	jg     2a604 <rss_get_url+0xe4>
   2a591:	mov    rax,QWORD PTR [rip+0x4ba38]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   2a598:	mov    edi,0x10
   2a59d:	call   QWORD PTR [rax]
   2a59f:	mov    r12,rax
   2a5a2:	test   rax,rax
   2a5a5:	je     2a5d9 <rss_get_url+0xb9>
   2a5a7:	mov    rdi,QWORD PTR [rbp+0x0]
   2a5ab:	mov    QWORD PTR [rax],r13
   2a5ae:	mov    QWORD PTR [rax+0x8],rbx
   2a5b2:	test   rdi,rdi
   2a5b5:	je     2a740 <rss_get_url+0x220>
   2a5bb:	add    rsp,0x8
   2a5bf:	mov    rsi,r12
   2a5c2:	pop    rbx
   2a5c3:	pop    rbp
   2a5c4:	pop    r12
   2a5c6:	pop    r13
   2a5c8:	jmp    11290 <wget_vector_add@plt>
   2a5cd:	nop    DWORD PTR [rax]
   2a5d0:	and    esi,0x10
   2a5d3:	jne    2a690 <rss_get_url+0x170>
   2a5d9:	add    rsp,0x8
   2a5dd:	pop    rbx
   2a5de:	pop    rbp
   2a5df:	pop    r12
   2a5e1:	pop    r13
   2a5e3:	ret    
   2a5e4:	nop    DWORD PTR [rax+0x0]
   2a5e8:	cmp    al,0x20
   2a5ea:	jne    2a57a <rss_get_url+0x5a>
   2a5ec:	add    r13,0x1
   2a5f0:	sub    rbx,0x1
   2a5f4:	jne    2a56d <rss_get_url+0x4d>
   2a5fa:	jmp    2a591 <rss_get_url+0x71>
   2a5fc:	nop    DWORD PTR [rax+0x0]
   2a600:	cmp    al,0x20
   2a602:	jne    2a591 <rss_get_url+0x71>
   2a604:	mov    rbx,rdx
   2a607:	jmp    2a57a <rss_get_url+0x5a>
   2a60c:	nop    DWORD PTR [rax+0x0]
   2a610:	lea    rsi,[rip+0x209e9]        # 4b000 <_fini+0x60c>
   2a617:	mov    rdi,r12
   2a61a:	call   12590 <wget_strcasecmp_ascii@plt>
   2a61f:	test   eax,eax
   2a621:	je     2a56d <rss_get_url+0x4d>
   2a627:	lea    rsi,[rip+0x209db]        # 4b009 <_fini+0x615>
   2a62e:	mov    rdi,r12
   2a631:	call   12590 <wget_strcasecmp_ascii@plt>
   2a636:	test   eax,eax
   2a638:	je     2a56d <rss_get_url+0x4d>
   2a63e:	lea    rsi,[rip+0x2102a]        # 4b66f <base64_2_bin+0x46f>
   2a645:	mov    rdi,r12
   2a648:	call   12590 <wget_strcasecmp_ascii@plt>
   2a64d:	test   eax,eax
   2a64f:	je     2a56d <rss_get_url+0x4d>
   2a655:	lea    rsi,[rip+0x209b8]        # 4b014 <_fini+0x620>
   2a65c:	mov    rdi,r12
   2a65f:	call   12590 <wget_strcasecmp_ascii@plt>
   2a664:	test   eax,eax
   2a666:	je     2a56d <rss_get_url+0x4d>
   2a66c:	mov    edx,0x6
   2a671:	lea    rsi,[rip+0x209a2]        # 4b01a <_fini+0x626>
   2a678:	mov    rdi,r12
   2a67b:	call   11c40 <wget_strncasecmp_ascii@plt>
   2a680:	test   eax,eax
   2a682:	jne    2a5d9 <rss_get_url+0xb9>
   2a688:	jmp    2a56d <rss_get_url+0x4d>
   2a68d:	nop    DWORD PTR [rax]
   2a690:	mov    esi,0x2f
   2a695:	mov    rdi,rdx
   2a698:	call   11740 <strrchr@plt>
   2a69d:	test   rax,rax
   2a6a0:	je     2a5d9 <rss_get_url+0xb9>
   2a6a6:	lea    r12,[rax+0x1]
   2a6aa:	lea    rsi,[rip+0x23407]        # 4dab8 <__func__.0+0x488>
   2a6b1:	mov    rdi,r12
   2a6b4:	call   12590 <wget_strcasecmp_ascii@plt>
   2a6b9:	test   eax,eax
   2a6bb:	je     2a6d8 <rss_get_url+0x1b8>
   2a6bd:	lea    rsi,[rip+0x21a40]        # 4c104 <__func__.0+0x24>
   2a6c4:	mov    rdi,r12
   2a6c7:	call   12590 <wget_strcasecmp_ascii@plt>
   2a6cc:	test   eax,eax
   2a6ce:	jne    2a760 <rss_get_url+0x240>
   2a6d4:	nop    DWORD PTR [rax+0x0]
   2a6d8:	movzx  eax,BYTE PTR [r13+0x0]
   2a6dd:	cmp    al,0xd
   2a6df:	jg     2a720 <rss_get_url+0x200>
   2a6e1:	cmp    al,0x8
   2a6e3:	jle    2a6fb <rss_get_url+0x1db>
   2a6e5:	jmp    2a724 <rss_get_url+0x204>
   2a6e7:	nop    WORD PTR [rax+rax*1+0x0]
   2a6f0:	cmp    al,0x8
   2a6f2:	jle    2a591 <rss_get_url+0x71>
   2a6f8:	mov    rbx,rdx
   2a6fb:	test   rbx,rbx
   2a6fe:	je     2a591 <rss_get_url+0x71>
   2a704:	movzx  eax,BYTE PTR [r13+rbx*1-0x1]
   2a70a:	lea    rdx,[rbx-0x1]
   2a70e:	cmp    al,0xd
   2a710:	jle    2a6f0 <rss_get_url+0x1d0>
   2a712:	cmp    al,0x20
   2a714:	je     2a6f8 <rss_get_url+0x1d8>
   2a716:	jmp    2a591 <rss_get_url+0x71>
   2a71b:	nop    DWORD PTR [rax+rax*1+0x0]
   2a720:	cmp    al,0x20
   2a722:	jne    2a6fb <rss_get_url+0x1db>
   2a724:	add    r13,0x1
   2a728:	sub    rbx,0x1
   2a72c:	jne    2a6d8 <rss_get_url+0x1b8>
   2a72e:	jmp    2a591 <rss_get_url+0x71>
   2a733:	nop    DWORD PTR [rax+rax*1+0x0]
   2a738:	ret    
   2a739:	nop    DWORD PTR [rax+0x0]
   2a740:	mov    edi,0x20
   2a745:	xor    esi,esi
   2a747:	call   11f00 <wget_vector_create@plt>
   2a74c:	mov    QWORD PTR [rbp+0x0],rax
   2a750:	mov    rdi,rax
   2a753:	jmp    2a5bb <rss_get_url+0x9b>
   2a758:	nop    DWORD PTR [rax+rax*1+0x0]
   2a760:	lea    rsi,[rip+0x23356]        # 4dabd <__func__.0+0x48d>
   2a767:	mov    rdi,r12
   2a76a:	call   12590 <wget_strcasecmp_ascii@plt>
   2a76f:	test   eax,eax
   2a771:	je     2a6d8 <rss_get_url+0x1b8>
   2a777:	lea    rsi,[rip+0x23348]        # 4dac6 <__func__.0+0x496>
   2a77e:	mov    rdi,r12
   2a781:	call   12590 <wget_strcasecmp_ascii@plt>
   2a786:	test   eax,eax
   2a788:	jne    2a5d9 <rss_get_url+0xb9>
   2a78e:	jmp    2a6d8 <rss_get_url+0x1b8>
   2a793:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2a79e:	xchg   ax,ax

000000000002a7a0 <wget_rss_get_urls_inline>:
   2a7a0:	endbr64 
   2a7a4:	push   rbx
   2a7a5:	mov    ecx,0x1
   2a7aa:	mov    rbx,rsi
   2a7ad:	lea    rsi,[rip+0xfffffffffffffd6c]        # 2a520 <rss_get_url>
   2a7b4:	sub    rsp,0x10
   2a7b8:	mov    rax,QWORD PTR fs:0x28
   2a7c1:	mov    QWORD PTR [rsp+0x8],rax
   2a7c6:	xor    eax,eax
   2a7c8:	mov    rdx,rsp
   2a7cb:	mov    QWORD PTR [rsp],0x0
   2a7d3:	call   11090 <wget_xml_parse_buffer@plt>
   2a7d8:	mov    rax,QWORD PTR [rsp]
   2a7dc:	mov    QWORD PTR [rbx],rax
   2a7df:	mov    rax,QWORD PTR [rsp+0x8]
   2a7e4:	sub    rax,QWORD PTR fs:0x28
   2a7ed:	jne    2a7f5 <wget_rss_get_urls_inline+0x55>
   2a7ef:	add    rsp,0x10
   2a7f3:	pop    rbx
   2a7f4:	ret    
   2a7f5:	call   11760 <__stack_chk_fail@plt>
   2a7fa:	nop    WORD PTR [rax+rax*1+0x0]

000000000002a800 <sitemap_get_url>:
   2a800:	endbr64 
   2a804:	and    esi,0x10
   2a807:	je     2a8d0 <sitemap_get_url+0xd0>
   2a80d:	push   r14
   2a80f:	push   r13
   2a811:	push   r12
   2a813:	push   rbp
   2a814:	push   rbx
   2a815:	mov    rbx,r9
   2a818:	test   r9,r9
   2a81b:	jne    2a830 <sitemap_get_url+0x30>
   2a81d:	pop    rbx
   2a81e:	pop    rbp
   2a81f:	pop    r12
   2a821:	pop    r13
   2a823:	pop    r14
   2a825:	ret    
   2a826:	cs nop WORD PTR [rax+rax*1+0x0]
   2a830:	mov    r13,rdi
   2a833:	lea    rsi,[rip+0x23291]        # 4dacb <__func__.0+0x49b>
   2a83a:	mov    rdi,rdx
   2a83d:	mov    rbp,rdx
   2a840:	mov    r12,r8
   2a843:	call   12590 <wget_strcasecmp_ascii@plt>
   2a848:	test   eax,eax
   2a84a:	je     2a8d8 <sitemap_get_url+0xd8>
   2a850:	mov    rdi,rbp
   2a853:	lea    rsi,[rip+0x2328b]        # 4dae5 <__func__.0+0x4b5>
   2a85a:	mov    ebp,0x2
   2a85f:	call   12590 <wget_strcasecmp_ascii@plt>
   2a864:	test   eax,eax
   2a866:	jne    2a81d <sitemap_get_url+0x1d>
   2a868:	movzx  eax,BYTE PTR [r12]
   2a86d:	cmp    al,0xd
   2a86f:	jg     2a8e6 <sitemap_get_url+0xe6>
   2a871:	cmp    al,0x8
   2a873:	jg     2a8ea <sitemap_get_url+0xea>
   2a875:	test   rbx,rbx
   2a878:	je     2a88c <sitemap_get_url+0x8c>
   2a87a:	movzx  eax,BYTE PTR [r12+rbx*1-0x1]
   2a880:	lea    rdx,[rbx-0x1]
   2a884:	cmp    al,0xd
   2a886:	jg     2a900 <sitemap_get_url+0x100>
   2a888:	cmp    al,0x8
   2a88a:	jg     2a904 <sitemap_get_url+0x104>
   2a88c:	mov    rax,QWORD PTR [rip+0x4b73d]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   2a893:	mov    edi,0x10
   2a898:	call   QWORD PTR [rax]
   2a89a:	mov    r14,rax
   2a89d:	test   rax,rax
   2a8a0:	je     2a81d <sitemap_get_url+0x1d>
   2a8a6:	mov    QWORD PTR [rax],r12
   2a8a9:	mov    QWORD PTR [rax+0x8],rbx
   2a8ad:	cmp    ebp,0x1
   2a8b0:	je     2a910 <sitemap_get_url+0x110>
   2a8b2:	mov    rdi,QWORD PTR [r13+0x8]
   2a8b6:	test   rdi,rdi
   2a8b9:	je     2a930 <sitemap_get_url+0x130>
   2a8bb:	pop    rbx
   2a8bc:	mov    rsi,r14
   2a8bf:	pop    rbp
   2a8c0:	pop    r12
   2a8c2:	pop    r13
   2a8c4:	pop    r14
   2a8c6:	jmp    11290 <wget_vector_add@plt>
   2a8cb:	nop    DWORD PTR [rax+rax*1+0x0]
   2a8d0:	ret    
   2a8d1:	nop    DWORD PTR [rax+0x0]
   2a8d8:	movzx  eax,BYTE PTR [r12]
   2a8dd:	mov    ebp,0x1
   2a8e2:	cmp    al,0xd
   2a8e4:	jle    2a871 <sitemap_get_url+0x71>
   2a8e6:	cmp    al,0x20
   2a8e8:	jne    2a875 <sitemap_get_url+0x75>
   2a8ea:	add    r12,0x1
   2a8ee:	sub    rbx,0x1
   2a8f2:	jne    2a868 <sitemap_get_url+0x68>
   2a8f8:	jmp    2a88c <sitemap_get_url+0x8c>
   2a8fa:	nop    WORD PTR [rax+rax*1+0x0]
   2a900:	cmp    al,0x20
   2a902:	jne    2a88c <sitemap_get_url+0x8c>
   2a904:	mov    rbx,rdx
   2a907:	jmp    2a875 <sitemap_get_url+0x75>
   2a90c:	nop    DWORD PTR [rax+0x0]
   2a910:	mov    rdi,QWORD PTR [r13+0x0]
   2a914:	test   rdi,rdi
   2a917:	jne    2a8bb <sitemap_get_url+0xbb>
   2a919:	mov    edi,0x20
   2a91e:	xor    esi,esi
   2a920:	call   11f00 <wget_vector_create@plt>
   2a925:	mov    QWORD PTR [r13+0x0],rax
   2a929:	mov    rdi,rax
   2a92c:	jmp    2a8bb <sitemap_get_url+0xbb>
   2a92e:	xchg   ax,ax
   2a930:	mov    edi,0x20
   2a935:	xor    esi,esi
   2a937:	call   11f00 <wget_vector_create@plt>
   2a93c:	mov    QWORD PTR [r13+0x8],rax
   2a940:	mov    rdi,rax
   2a943:	jmp    2a8bb <sitemap_get_url+0xbb>
   2a948:	nop    DWORD PTR [rax+rax*1+0x0]

000000000002a950 <wget_sitemap_get_urls_inline>:
   2a950:	endbr64 
   2a954:	push   rbp
   2a955:	mov    ecx,0x1
   2a95a:	mov    rbp,rsi
   2a95d:	lea    rsi,[rip+0xfffffffffffffe9c]        # 2a800 <sitemap_get_url>
   2a964:	push   rbx
   2a965:	mov    rbx,rdx
   2a968:	sub    rsp,0x28
   2a96c:	mov    rax,QWORD PTR fs:0x28
   2a975:	mov    QWORD PTR [rsp+0x18],rax
   2a97a:	xor    eax,eax
   2a97c:	mov    rdx,rsp
   2a97f:	mov    QWORD PTR [rsp],0x0
   2a987:	mov    QWORD PTR [rsp+0x8],0x0
   2a990:	call   11090 <wget_xml_parse_buffer@plt>
   2a995:	mov    rax,QWORD PTR [rsp+0x8]
   2a99a:	mov    QWORD PTR [rbp+0x0],rax
   2a99e:	mov    rax,QWORD PTR [rsp]
   2a9a2:	mov    QWORD PTR [rbx],rax
   2a9a5:	mov    rax,QWORD PTR [rsp+0x18]
   2a9aa:	sub    rax,QWORD PTR fs:0x28
   2a9b3:	jne    2a9bc <wget_sitemap_get_urls_inline+0x6c>
   2a9b5:	add    rsp,0x28
   2a9b9:	pop    rbx
   2a9ba:	pop    rbp
   2a9bb:	ret    
   2a9bc:	call   11760 <__stack_chk_fail@plt>
   2a9c1:	cs nop WORD PTR [rax+rax*1+0x0]
   2a9cb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000002a9d0 <hash_string>:
   2a9d0:	endbr64 
   2a9d4:	movzx  edx,BYTE PTR [rdi]
   2a9d7:	xor    eax,eax
   2a9d9:	test   dl,dl
   2a9db:	je     2a9f8 <hash_string+0x28>
   2a9dd:	nop    DWORD PTR [rax]
   2a9e0:	imul   eax,eax,0x65
   2a9e3:	add    rdi,0x1
   2a9e7:	add    eax,edx
   2a9e9:	movzx  edx,BYTE PTR [rdi]
   2a9ec:	test   dl,dl
   2a9ee:	jne    2a9e0 <hash_string+0x10>
   2a9f0:	ret    
   2a9f1:	nop    DWORD PTR [rax+0x0]
   2a9f8:	ret    
   2a9f9:	nop    DWORD PTR [rax+0x0]

000000000002aa00 <hash_string_nocase>:
   2aa00:	endbr64 
   2aa04:	push   rbp
   2aa05:	push   rbx
   2aa06:	sub    rsp,0x8
   2aa0a:	movsx  rbx,BYTE PTR [rdi]
   2aa0e:	test   bl,bl
   2aa10:	je     2aa40 <hash_string_nocase+0x40>
   2aa12:	mov    rbp,rdi
   2aa15:	call   10670 <__ctype_tolower_loc@plt>
   2aa1a:	mov    rcx,QWORD PTR [rax]
   2aa1d:	xor    eax,eax
   2aa1f:	nop
   2aa20:	imul   eax,eax,0x65
   2aa23:	add    rbp,0x1
   2aa27:	movzx  edx,BYTE PTR [rcx+rbx*4]
   2aa2b:	movsx  rbx,BYTE PTR [rbp+0x0]
   2aa30:	add    eax,edx
   2aa32:	test   bl,bl
   2aa34:	jne    2aa20 <hash_string_nocase+0x20>
   2aa36:	add    rsp,0x8
   2aa3a:	pop    rbx
   2aa3b:	pop    rbp
   2aa3c:	ret    
   2aa3d:	nop    DWORD PTR [rax]
   2aa40:	add    rsp,0x8
   2aa44:	xor    eax,eax
   2aa46:	pop    rbx
   2aa47:	pop    rbp
   2aa48:	ret    
   2aa49:	nop    DWORD PTR [rax+0x0]

000000000002aa50 <wget_stringmap_create>:
   2aa50:	endbr64 
   2aa54:	mov    rdx,QWORD PTR [rip+0x4b4f5]        # 75f50 <wget_strcmp@@Base+0x4a3d0>
   2aa5b:	lea    rsi,[rip+0xffffffffffffff6e]        # 2a9d0 <hash_string>
   2aa62:	jmp    104c0 <wget_hashmap_create@plt>
   2aa67:	nop    WORD PTR [rax+rax*1+0x0]

000000000002aa70 <wget_stringmap_create_nocase>:
   2aa70:	endbr64 
   2aa74:	mov    rdx,QWORD PTR [rip+0x4b4fd]        # 75f78 <wget_strcasecmp@@Base+0x4a3c8>
   2aa7b:	lea    rsi,[rip+0xffffffffffffff7e]        # 2aa00 <hash_string_nocase>
   2aa82:	jmp    104c0 <wget_hashmap_create@plt>
   2aa87:	nop    WORD PTR [rax+rax*1+0x0]

000000000002aa90 <wget_strlcpy>:
   2aa90:	endbr64 
   2aa94:	mov    rcx,rdi
   2aa97:	mov    rdi,rsi
   2aa9a:	test   rsi,rsi
   2aa9d:	je     2aaf8 <wget_strlcpy+0x68>
   2aa9f:	test   rcx,rcx
   2aaa2:	je     2ab10 <wget_strlcpy+0x80>
   2aaa4:	mov    rax,rsi
   2aaa7:	test   rdx,rdx
   2aaaa:	je     2aae0 <wget_strlcpy+0x50>
   2aaac:	lea    rsi,[rcx+rdx*1-0x1]
   2aab1:	mov    rdx,rdi
   2aab4:	jmp    2aacf <wget_strlcpy+0x3f>
   2aab6:	cs nop WORD PTR [rax+rax*1+0x0]
   2aac0:	movzx  eax,BYTE PTR [rdx-0x1]
   2aac4:	add    rcx,0x1
   2aac8:	mov    BYTE PTR [rcx-0x1],al
   2aacb:	test   al,al
   2aacd:	je     2ab00 <wget_strlcpy+0x70>
   2aacf:	mov    rax,rdx
   2aad2:	lea    rdx,[rdx+0x1]
   2aad6:	cmp    rcx,rsi
   2aad9:	jne    2aac0 <wget_strlcpy+0x30>
   2aadb:	mov    BYTE PTR [rcx],0x0
   2aade:	xchg   ax,ax
   2aae0:	add    rax,0x1
   2aae4:	cmp    BYTE PTR [rax-0x1],0x0
   2aae8:	jne    2aae0 <wget_strlcpy+0x50>
   2aaea:	sub    rax,rdi
   2aaed:	sub    rax,0x1
   2aaf1:	ret    
   2aaf2:	nop    WORD PTR [rax+rax*1+0x0]
   2aaf8:	xor    eax,eax
   2aafa:	ret    
   2aafb:	nop    DWORD PTR [rax+rax*1+0x0]
   2ab00:	sub    rdx,rdi
   2ab03:	lea    rax,[rdx-0x1]
   2ab07:	ret    
   2ab08:	nop    DWORD PTR [rax+rax*1+0x0]
   2ab10:	jmp    10ab0 <strlen@plt>
   2ab15:	cs nop WORD PTR [rax+rax*1+0x0]
   2ab1f:	nop

000000000002ab20 <wget_strscpy>:
   2ab20:	endbr64 
   2ab24:	test   rdi,rdi
   2ab27:	je     2ab70 <wget_strscpy+0x50>
   2ab29:	test   rsi,rsi
   2ab2c:	je     2ab80 <wget_strscpy+0x60>
   2ab2e:	lea    rcx,[rdi+rdx*1-0x1]
   2ab33:	mov    rax,rsi
   2ab36:	test   rdx,rdx
   2ab39:	jne    2ab52 <wget_strscpy+0x32>
   2ab3b:	jmp    2ab70 <wget_strscpy+0x50>
   2ab3d:	nop    DWORD PTR [rax]
   2ab40:	movzx  edx,BYTE PTR [rax]
   2ab43:	add    rax,0x1
   2ab47:	add    rdi,0x1
   2ab4b:	mov    BYTE PTR [rdi-0x1],dl
   2ab4e:	test   dl,dl
   2ab50:	je     2ab60 <wget_strscpy+0x40>
   2ab52:	cmp    rcx,rdi
   2ab55:	jne    2ab40 <wget_strscpy+0x20>
   2ab57:	mov    BYTE PTR [rcx],0x0
   2ab5a:	sub    rax,rsi
   2ab5d:	ret    
   2ab5e:	xchg   ax,ax
   2ab60:	sub    rax,rsi
   2ab63:	sub    rax,0x1
   2ab67:	ret    
   2ab68:	nop    DWORD PTR [rax+rax*1+0x0]
   2ab70:	mov    rax,0xffffffffffffffff
   2ab77:	ret    
   2ab78:	nop    DWORD PTR [rax+rax*1+0x0]
   2ab80:	test   rdx,rdx
   2ab83:	je     2ab70 <wget_strscpy+0x50>
   2ab85:	mov    BYTE PTR [rdi],0x0
   2ab88:	xor    eax,eax
   2ab8a:	ret    
   2ab8b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000002ab90 <wget_thread_mutex_init>:
   2ab90:	endbr64 
   2ab94:	mov    rax,QWORD PTR [rip+0x4b435]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   2ab9b:	push   rbx
   2ab9c:	mov    rbx,rdi
   2ab9f:	mov    edi,0x28
   2aba4:	call   QWORD PTR [rax]
   2aba6:	mov    QWORD PTR [rbx],rax
   2aba9:	test   rax,rax
   2abac:	je     2abb9 <wget_thread_mutex_init+0x29>
   2abae:	mov    rdi,rax
   2abb1:	xor    esi,esi
   2abb3:	pop    rbx
   2abb4:	jmp    11e10 <pthread_mutex_init@plt>
   2abb9:	mov    eax,0xfffffffe
   2abbe:	pop    rbx
   2abbf:	ret    

000000000002abc0 <wget_thread_mutex_destroy>:
   2abc0:	endbr64 
   2abc4:	push   r12
   2abc6:	push   rbx
   2abc7:	mov    rbx,rdi
   2abca:	sub    rsp,0x8
   2abce:	mov    rdi,QWORD PTR [rdi]
   2abd1:	call   11890 <pthread_mutex_destroy@plt>
   2abd6:	mov    rdi,QWORD PTR [rbx]
   2abd9:	mov    r12d,eax
   2abdc:	test   rdi,rdi
   2abdf:	je     2abf1 <wget_thread_mutex_destroy+0x31>
   2abe1:	mov    rax,QWORD PTR [rip+0x4b400]        # 75fe8 <wget_free@@Base-0x1328>
   2abe8:	call   QWORD PTR [rax]
   2abea:	mov    QWORD PTR [rbx],0x0
   2abf1:	add    rsp,0x8
   2abf5:	mov    eax,r12d
   2abf8:	pop    rbx
   2abf9:	pop    r12
   2abfb:	ret    
   2abfc:	nop    DWORD PTR [rax+0x0]

000000000002ac00 <wget_thread_mutex_lock>:
   2ac00:	endbr64 
   2ac04:	jmp    11db0 <pthread_mutex_lock@plt>
   2ac09:	nop    DWORD PTR [rax+0x0]

000000000002ac10 <wget_thread_mutex_unlock>:
   2ac10:	endbr64 
   2ac14:	jmp    110d0 <pthread_mutex_unlock@plt>
   2ac19:	nop    DWORD PTR [rax+0x0]

000000000002ac20 <wget_thread_cond_init>:
   2ac20:	endbr64 
   2ac24:	mov    rax,QWORD PTR [rip+0x4b3a5]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   2ac2b:	push   rbx
   2ac2c:	mov    rbx,rdi
   2ac2f:	mov    edi,0x30
   2ac34:	call   QWORD PTR [rax]
   2ac36:	mov    QWORD PTR [rbx],rax
   2ac39:	test   rax,rax
   2ac3c:	je     2ac49 <wget_thread_cond_init+0x29>
   2ac3e:	mov    rdi,rax
   2ac41:	xor    esi,esi
   2ac43:	pop    rbx
   2ac44:	jmp    11900 <pthread_cond_init@plt>
   2ac49:	mov    eax,0xfffffffe
   2ac4e:	pop    rbx
   2ac4f:	ret    

000000000002ac50 <wget_thread_cond_destroy>:
   2ac50:	endbr64 
   2ac54:	push   r12
   2ac56:	push   rbx
   2ac57:	mov    rbx,rdi
   2ac5a:	sub    rsp,0x8
   2ac5e:	mov    rdi,QWORD PTR [rdi]
   2ac61:	call   126e0 <pthread_cond_destroy@plt>
   2ac66:	mov    rdi,QWORD PTR [rbx]
   2ac69:	mov    r12d,eax
   2ac6c:	test   rdi,rdi
   2ac6f:	je     2ac81 <wget_thread_cond_destroy+0x31>
   2ac71:	mov    rax,QWORD PTR [rip+0x4b370]        # 75fe8 <wget_free@@Base-0x1328>
   2ac78:	call   QWORD PTR [rax]
   2ac7a:	mov    QWORD PTR [rbx],0x0
   2ac81:	add    rsp,0x8
   2ac85:	mov    eax,r12d
   2ac88:	pop    rbx
   2ac89:	pop    r12
   2ac8b:	ret    
   2ac8c:	nop    DWORD PTR [rax+0x0]

000000000002ac90 <wget_thread_cond_signal>:
   2ac90:	endbr64 
   2ac94:	jmp    109a0 <pthread_cond_broadcast@plt>
   2ac99:	nop    DWORD PTR [rax+0x0]

000000000002aca0 <wget_thread_cond_wait>:
   2aca0:	endbr64 
   2aca4:	push   r13
   2aca6:	push   r12
   2aca8:	mov    r12,rsi
   2acab:	push   rbp
   2acac:	mov    rbp,rdi
   2acaf:	push   rbx
   2acb0:	sub    rsp,0x28
   2acb4:	mov    rax,QWORD PTR fs:0x28
   2acbd:	mov    QWORD PTR [rsp+0x18],rax
   2acc2:	xor    eax,eax
   2acc4:	test   rdx,rdx
   2acc7:	jle    2ad70 <wget_thread_cond_wait+0xd0>
   2accd:	mov    r13,rsp
   2acd0:	mov    rbx,rdx
   2acd3:	mov    rdi,r13
   2acd6:	call   40eb0 <gettime>
   2acdb:	mov    rsi,QWORD PTR [rsp+0x8]
   2ace0:	imul   rcx,QWORD PTR [rsp],0x3e8
   2ace8:	mov    rdi,rbp
   2aceb:	movabs rdx,0x431bde82d7b634db
   2acf5:	mov    rax,rsi
   2acf8:	sar    rsi,0x3f
   2acfc:	imul   rdx
   2acff:	sar    rdx,0x12
   2ad03:	sub    rdx,rsi
   2ad06:	mov    rsi,r12
   2ad09:	add    rcx,rdx
   2ad0c:	movabs rdx,0x20c49ba5e353f7cf
   2ad16:	add    rcx,rbx
   2ad19:	mov    rax,rcx
   2ad1c:	imul   rdx
   2ad1f:	mov    rax,rcx
   2ad22:	sar    rax,0x3f
   2ad26:	sar    rdx,0x7
   2ad2a:	sub    rdx,rax
   2ad2d:	mov    QWORD PTR [rsp],rdx
   2ad31:	imul   rdx,rdx,0x3e8
   2ad38:	sub    rcx,rdx
   2ad3b:	mov    rdx,r13
   2ad3e:	imul   rcx,rcx,0xf4240
   2ad45:	mov    QWORD PTR [rsp+0x8],rcx
   2ad4a:	call   11eb0 <pthread_cond_timedwait@plt>
   2ad4f:	mov    rdx,QWORD PTR [rsp+0x18]
   2ad54:	sub    rdx,QWORD PTR fs:0x28
   2ad5d:	jne    2ad8f <wget_thread_cond_wait+0xef>
   2ad5f:	add    rsp,0x28
   2ad63:	pop    rbx
   2ad64:	pop    rbp
   2ad65:	pop    r12
   2ad67:	pop    r13
   2ad69:	ret    
   2ad6a:	nop    WORD PTR [rax+rax*1+0x0]
   2ad70:	mov    rax,QWORD PTR [rsp+0x18]
   2ad75:	sub    rax,QWORD PTR fs:0x28
   2ad7e:	jne    2ad8f <wget_thread_cond_wait+0xef>
   2ad80:	add    rsp,0x28
   2ad84:	pop    rbx
   2ad85:	pop    rbp
   2ad86:	pop    r12
   2ad88:	pop    r13
   2ad8a:	jmp    11f40 <pthread_cond_wait@plt>
   2ad8f:	call   11760 <__stack_chk_fail@plt>
   2ad94:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2ad9f:	nop

000000000002ada0 <wget_thread_cancel>:
   2ada0:	endbr64 
   2ada4:	xor    eax,eax
   2ada6:	ret    
   2ada7:	nop    WORD PTR [rax+rax*1+0x0]

000000000002adb0 <wget_thread_kill>:
   2adb0:	endbr64 
   2adb4:	xor    eax,eax
   2adb6:	ret    
   2adb7:	nop    WORD PTR [rax+rax*1+0x0]

000000000002adc0 <wget_thread_self>:
   2adc0:	endbr64 
   2adc4:	jmp    113c0 <pthread_self@plt>
   2adc9:	nop    DWORD PTR [rax+0x0]

000000000002add0 <wget_thread_support>:
   2add0:	endbr64 
   2add4:	mov    eax,0x1
   2add9:	ret    
   2adda:	nop    WORD PTR [rax+rax*1+0x0]

000000000002ade0 <wget_thread_start>:
   2ade0:	endbr64 
   2ade4:	push   r12
   2ade6:	mov    r12,rsi
   2ade9:	push   rbp
   2adea:	mov    rbp,rdx
   2aded:	push   rbx
   2adee:	mov    rbx,rdi
   2adf1:	call   11b20 <wget_thread_support@plt>
   2adf6:	test   al,al
   2adf8:	je     2ae28 <wget_thread_start+0x48>
   2adfa:	mov    rax,QWORD PTR [rip+0x4b1cf]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   2ae01:	mov    edi,0x8
   2ae06:	call   QWORD PTR [rax]
   2ae08:	mov    QWORD PTR [rbx],rax
   2ae0b:	mov    rdi,rax
   2ae0e:	test   rax,rax
   2ae11:	je     2ae3c <wget_thread_start+0x5c>
   2ae13:	pop    rbx
   2ae14:	mov    rcx,rbp
   2ae17:	mov    rdx,r12
   2ae1a:	pop    rbp
   2ae1b:	xor    esi,esi
   2ae1d:	pop    r12
   2ae1f:	jmp    12460 <pthread_create@plt>
   2ae24:	nop    DWORD PTR [rax+0x0]
   2ae28:	mov    QWORD PTR [rbx],0x0
   2ae2f:	mov    rdi,rbp
   2ae32:	call   r12
   2ae35:	xor    eax,eax
   2ae37:	pop    rbx
   2ae38:	pop    rbp
   2ae39:	pop    r12
   2ae3b:	ret    
   2ae3c:	mov    eax,0xfffffffe
   2ae41:	jmp    2ae37 <wget_thread_start+0x57>
   2ae43:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2ae4e:	xchg   ax,ax

000000000002ae50 <wget_thread_join>:
   2ae50:	endbr64 
   2ae54:	push   rbx
   2ae55:	sub    rsp,0x10
   2ae59:	test   rdi,rdi
   2ae5c:	je     2ae71 <wget_thread_join+0x21>
   2ae5e:	mov    rax,QWORD PTR [rdi]
   2ae61:	mov    rbx,rdi
   2ae64:	test   rax,rax
   2ae67:	je     2ae71 <wget_thread_join+0x21>
   2ae69:	mov    rdi,QWORD PTR [rax]
   2ae6c:	test   rdi,rdi
   2ae6f:	jne    2ae88 <wget_thread_join+0x38>
   2ae71:	call   11b20 <wget_thread_support@plt>
   2ae76:	test   al,al
   2ae78:	jne    2aeb1 <wget_thread_join+0x61>
   2ae7a:	xor    eax,eax
   2ae7c:	add    rsp,0x10
   2ae80:	pop    rbx
   2ae81:	ret    
   2ae82:	nop    WORD PTR [rax+rax*1+0x0]
   2ae88:	xor    esi,esi
   2ae8a:	call   113e0 <pthread_join@plt>
   2ae8f:	mov    rdi,QWORD PTR [rbx]
   2ae92:	test   rdi,rdi
   2ae95:	je     2ae7c <wget_thread_join+0x2c>
   2ae97:	mov    rdx,QWORD PTR [rip+0x4b14a]        # 75fe8 <wget_free@@Base-0x1328>
   2ae9e:	mov    DWORD PTR [rsp+0xc],eax
   2aea2:	call   QWORD PTR [rdx]
   2aea4:	mov    QWORD PTR [rbx],0x0
   2aeab:	mov    eax,DWORD PTR [rsp+0xc]
   2aeaf:	jmp    2ae7c <wget_thread_join+0x2c>
   2aeb1:	call   104b0 <__errno_location@plt>
   2aeb6:	mov    DWORD PTR [rax],0x3
   2aebc:	mov    eax,0xffffffff
   2aec1:	jmp    2ae7c <wget_thread_join+0x2c>
   2aec3:	cs nop WORD PTR [rax+rax*1+0x0]
   2aecd:	nop    DWORD PTR [rax]

000000000002aed0 <hash_tls_session>:
   2aed0:	endbr64 
   2aed4:	mov    rcx,QWORD PTR [rdi]
   2aed7:	xor    eax,eax
   2aed9:	movzx  edx,BYTE PTR [rcx]
   2aedc:	test   dl,dl
   2aede:	je     2aef8 <hash_tls_session+0x28>
   2aee0:	imul   eax,eax,0x65
   2aee3:	add    rcx,0x1
   2aee7:	add    eax,edx
   2aee9:	movzx  edx,BYTE PTR [rcx]
   2aeec:	test   dl,dl
   2aeee:	jne    2aee0 <hash_tls_session+0x10>
   2aef0:	ret    
   2aef1:	nop    DWORD PTR [rax+0x0]
   2aef8:	ret    
   2aef9:	nop    DWORD PTR [rax+0x0]

000000000002af00 <compare_tls_session>:
   2af00:	endbr64 
   2af04:	mov    rsi,QWORD PTR [rsi]
   2af07:	mov    rdi,QWORD PTR [rdi]
   2af0a:	jmp    11c60 <strcmp@plt>
   2af0f:	nop

000000000002af10 <tls_session_db_save>:
   2af10:	endbr64 
   2af14:	push   r12
   2af16:	push   rbp
   2af17:	mov    rbp,rsi
   2af1a:	sub    rsp,0x8
   2af1e:	mov    r12,QWORD PTR [rdi]
   2af21:	mov    rdi,r12
   2af24:	call   125c0 <wget_hashmap_size@plt>
   2af29:	mov    r8d,eax
   2af2c:	xor    eax,eax
   2af2e:	test   r8d,r8d
   2af31:	jle    2af9c <tls_session_db_save+0x8c>
   2af33:	mov    rcx,rbp
   2af36:	mov    edx,0x15
   2af3b:	mov    esi,0x1
   2af40:	lea    rdi,[rip+0x22bae]        # 4daf5 <__func__.0+0x4c5>
   2af47:	call   12730 <fwrite@plt>
   2af4c:	mov    rcx,rbp
   2af4f:	mov    edx,0x34
   2af54:	mov    esi,0x1
   2af59:	lea    rdi,[rip+0x20df8]        # 4bd58 <__func__.0+0x88>
   2af60:	call   12730 <fwrite@plt>
   2af65:	mov    rcx,rbp
   2af68:	mov    edx,0x31
   2af6d:	mov    esi,0x1
   2af72:	lea    rdi,[rip+0x22ba7]        # 4db20 <__func__.0+0x4f0>
   2af79:	call   12730 <fwrite@plt>
   2af7e:	mov    rdx,rbp
   2af81:	lea    rsi,[rip+0x28]        # 2afb0 <tls_session_save>
   2af88:	mov    rdi,r12
   2af8b:	call   12570 <wget_hashmap_browse@plt>
   2af90:	mov    rdi,rbp
   2af93:	call   12580 <ferror@plt>
   2af98:	neg    eax
   2af9a:	sbb    eax,eax
   2af9c:	add    rsp,0x8
   2afa0:	pop    rbp
   2afa1:	pop    r12
   2afa3:	ret    
   2afa4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2afaf:	nop

000000000002afb0 <tls_session_save>:
   2afb0:	endbr64 
   2afb4:	push   r14
   2afb6:	push   r13
   2afb8:	mov    r13,rdi
   2afbb:	push   r12
   2afbd:	push   rbp
   2afbe:	push   rbx
   2afbf:	mov    rbx,rsi
   2afc2:	sub    rsp,0x410
   2afc9:	mov    r14,QWORD PTR [rsi+0x20]
   2afcd:	mov    rax,QWORD PTR fs:0x28
   2afd6:	mov    QWORD PTR [rsp+0x408],rax
   2afde:	xor    eax,eax
   2afe0:	mov    rdi,r14
   2afe3:	call   106e0 <wget_base64_get_encoded_length@plt>
   2afe8:	cmp    rax,0x400
   2afee:	jbe    2b080 <tls_session_save+0xd0>
   2aff4:	mov    rdi,rax
   2aff7:	mov    r12,rax
   2affa:	mov    rax,QWORD PTR [rip+0x4afcf]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   2b001:	call   QWORD PTR [rax]
   2b003:	mov    rbp,rax
   2b006:	test   rax,rax
   2b009:	je     2b0b8 <tls_session_save+0x108>
   2b00f:	mov    rdx,QWORD PTR [rbx+0x20]
   2b013:	mov    rsi,QWORD PTR [rbx+0x28]
   2b017:	mov    rdi,rax
   2b01a:	call   10540 <wget_base64_encode@plt>
   2b01f:	mov    rcx,QWORD PTR [rbx+0x10]
   2b023:	mov    r8,QWORD PTR [rbx+0x18]
   2b027:	mov    r9,rbp
   2b02a:	mov    rdx,QWORD PTR [rbx]
   2b02d:	lea    rsi,[rip+0x22ad7]        # 4db0b <__func__.0+0x4db>
   2b034:	mov    rdi,r13
   2b037:	xor    eax,eax
   2b039:	call   108e0 <wget_fprintf@plt>
   2b03e:	mov    rax,rsp
   2b041:	cmp    rbp,rax
   2b044:	je     2b052 <tls_session_save+0xa2>
   2b046:	mov    rax,QWORD PTR [rip+0x4af9b]        # 75fe8 <wget_free@@Base-0x1328>
   2b04d:	mov    rdi,rbp
   2b050:	call   QWORD PTR [rax]
   2b052:	mov    rax,QWORD PTR [rsp+0x408]
   2b05a:	sub    rax,QWORD PTR fs:0x28
   2b063:	jne    2b0dd <tls_session_save+0x12d>
   2b065:	add    rsp,0x410
   2b06c:	xor    eax,eax
   2b06e:	pop    rbx
   2b06f:	pop    rbp
   2b070:	pop    r12
   2b072:	pop    r13
   2b074:	pop    r14
   2b076:	ret    
   2b077:	nop    WORD PTR [rax+rax*1+0x0]
   2b080:	mov    rsi,QWORD PTR [rbx+0x28]
   2b084:	mov    rbp,rsp
   2b087:	mov    rdx,r14
   2b08a:	mov    rdi,rbp
   2b08d:	call   10540 <wget_base64_encode@plt>
   2b092:	mov    rcx,QWORD PTR [rbx+0x10]
   2b096:	mov    r8,QWORD PTR [rbx+0x18]
   2b09a:	mov    r9,rbp
   2b09d:	mov    rdx,QWORD PTR [rbx]
   2b0a0:	lea    rsi,[rip+0x22a64]        # 4db0b <__func__.0+0x4db>
   2b0a7:	mov    rdi,r13
   2b0aa:	xor    eax,eax
   2b0ac:	call   108e0 <wget_fprintf@plt>
   2b0b1:	jmp    2b052 <tls_session_save+0xa2>
   2b0b3:	nop    DWORD PTR [rax+rax*1+0x0]
   2b0b8:	xor    edi,edi
   2b0ba:	mov    edx,0x5
   2b0bf:	lea    rsi,[rip+0x217ea]        # 4c8b0 <maybe+0x610>
   2b0c6:	call   10f90 <dcgettext@plt>
   2b0cb:	mov    rsi,r12
   2b0ce:	mov    rdi,rax
   2b0d1:	xor    eax,eax
   2b0d3:	call   11ea0 <wget_error_printf@plt>
   2b0d8:	jmp    2b052 <tls_session_save+0xa2>
   2b0dd:	call   11760 <__stack_chk_fail@plt>
   2b0e2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2b0ed:	nop    DWORD PTR [rax]

000000000002b0f0 <wget_tls_session_init>:
   2b0f0:	endbr64 
   2b0f4:	push   r12
   2b0f6:	test   rdi,rdi
   2b0f9:	je     2b120 <wget_tls_session_init+0x30>
   2b0fb:	pxor   xmm0,xmm0
   2b0ff:	mov    r12,rdi
   2b102:	movups XMMWORD PTR [rdi],xmm0
   2b105:	movups XMMWORD PTR [rdi+0x10],xmm0
   2b109:	movups XMMWORD PTR [rdi+0x20],xmm0
   2b10d:	xor    edi,edi
   2b10f:	call   11480 <time@plt>
   2b114:	mov    QWORD PTR [r12+0x10],rax
   2b119:	mov    rax,r12
   2b11c:	pop    r12
   2b11e:	ret    
   2b11f:	nop
   2b120:	mov    rax,QWORD PTR [rip+0x4ae19]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   2b127:	mov    esi,0x30
   2b12c:	mov    edi,0x1
   2b131:	call   QWORD PTR [rax]
   2b133:	mov    r12,rax
   2b136:	test   rax,rax
   2b139:	jne    2b10d <wget_tls_session_init+0x1d>
   2b13b:	jmp    2b119 <wget_tls_session_init+0x29>
   2b13d:	nop    DWORD PTR [rax]

000000000002b140 <wget_tls_session_deinit>:
   2b140:	endbr64 
   2b144:	test   rdi,rdi
   2b147:	je     2b188 <wget_tls_session_deinit+0x48>
   2b149:	push   rbx
   2b14a:	mov    rbx,rdi
   2b14d:	mov    rdi,QWORD PTR [rdi]
   2b150:	test   rdi,rdi
   2b153:	je     2b165 <wget_tls_session_deinit+0x25>
   2b155:	mov    rax,QWORD PTR [rip+0x4ae8c]        # 75fe8 <wget_free@@Base-0x1328>
   2b15c:	call   QWORD PTR [rax]
   2b15e:	mov    QWORD PTR [rbx],0x0
   2b165:	mov    rdi,QWORD PTR [rbx+0x28]
   2b169:	test   rdi,rdi
   2b16c:	je     2b17f <wget_tls_session_deinit+0x3f>
   2b16e:	mov    rax,QWORD PTR [rip+0x4ae73]        # 75fe8 <wget_free@@Base-0x1328>
   2b175:	call   QWORD PTR [rax]
   2b177:	mov    QWORD PTR [rbx+0x28],0x0
   2b17f:	pop    rbx
   2b180:	ret    
   2b181:	nop    DWORD PTR [rax+0x0]
   2b188:	ret    
   2b189:	nop    DWORD PTR [rax+0x0]

000000000002b190 <wget_tls_session_free>:
   2b190:	endbr64 
   2b194:	test   rdi,rdi
   2b197:	je     2b1b8 <wget_tls_session_free+0x28>
   2b199:	push   rbp
   2b19a:	mov    rbp,rdi
   2b19d:	call   120f0 <wget_tls_session_deinit@plt>
   2b1a2:	mov    rax,QWORD PTR [rip+0x4ae3f]        # 75fe8 <wget_free@@Base-0x1328>
   2b1a9:	mov    rdi,rbp
   2b1ac:	pop    rbp
   2b1ad:	mov    rax,QWORD PTR [rax]
   2b1b0:	jmp    rax
   2b1b2:	nop    WORD PTR [rax+rax*1+0x0]
   2b1b8:	ret    
   2b1b9:	nop    DWORD PTR [rax+0x0]

000000000002b1c0 <wget_tls_session_new>:
   2b1c0:	endbr64 
   2b1c4:	push   r14
   2b1c6:	mov    r14,rdi
   2b1c9:	xor    edi,edi
   2b1cb:	push   r13
   2b1cd:	mov    r13,rdx
   2b1d0:	push   r12
   2b1d2:	push   rbp
   2b1d3:	mov    rbp,rsi
   2b1d6:	push   rbx
   2b1d7:	mov    rbx,rcx
   2b1da:	call   12360 <wget_tls_session_init@plt>
   2b1df:	mov    r12,rax
   2b1e2:	test   rax,rax
   2b1e5:	je     2b22d <wget_tls_session_new+0x6d>
   2b1e7:	mov    rdi,r14
   2b1ea:	call   127b0 <wget_strdup@plt>
   2b1ef:	mov    rsi,rbx
   2b1f2:	mov    rdi,r13
   2b1f5:	mov    QWORD PTR [r12],rax
   2b1f9:	call   10dc0 <wget_memdup@plt>
   2b1fe:	lea    rdx,[rbp-0x1]
   2b202:	mov    QWORD PTR [r12+0x20],rbx
   2b207:	mov    QWORD PTR [r12+0x28],rax
   2b20c:	movabs rax,0x3ffffffffffffffd
   2b216:	cmp    rdx,rax
   2b219:	jbe    2b240 <wget_tls_session_new+0x80>
   2b21b:	mov    QWORD PTR [r12+0x18],0x0
   2b224:	mov    QWORD PTR [r12+0x8],0x0
   2b22d:	pop    rbx
   2b22e:	mov    rax,r12
   2b231:	pop    rbp
   2b232:	pop    r12
   2b234:	pop    r13
   2b236:	pop    r14
   2b238:	ret    
   2b239:	nop    DWORD PTR [rax+0x0]
   2b240:	movabs rdx,0x3ffffffffffffffe
   2b24a:	mov    rax,QWORD PTR [r12+0x10]
   2b24f:	cmp    rax,rdx
   2b252:	ja     2b21b <wget_tls_session_new+0x5b>
   2b254:	add    rax,rbp
   2b257:	mov    QWORD PTR [r12+0x18],rbp
   2b25c:	mov    QWORD PTR [r12+0x8],rax
   2b261:	jmp    2b22d <wget_tls_session_new+0x6d>
   2b263:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2b26e:	xchg   ax,ax

000000000002b270 <wget_tls_session_get>:
   2b270:	endbr64 
   2b274:	push   r14
   2b276:	push   r13
   2b278:	push   r12
   2b27a:	push   rbp
   2b27b:	push   rbx
   2b27c:	sub    rsp,0x50
   2b280:	mov    rax,QWORD PTR fs:0x28
   2b289:	mov    QWORD PTR [rsp+0x48],rax
   2b28e:	mov    eax,0x1
   2b293:	test   rdi,rdi
   2b296:	je     2b2d9 <wget_tls_session_get+0x69>
   2b298:	mov    rbx,rdi
   2b29b:	xor    edi,edi
   2b29d:	mov    rbp,rsi
   2b2a0:	mov    r13,rdx
   2b2a3:	mov    r12,rcx
   2b2a6:	call   11480 <time@plt>
   2b2ab:	mov    rdi,QWORD PTR [rbx]
   2b2ae:	lea    rdx,[rsp+0x8]
   2b2b3:	lea    rsi,[rsp+0x10]
   2b2b8:	mov    QWORD PTR [rsp+0x10],rbp
   2b2bd:	mov    r14,rax
   2b2c0:	call   10520 <wget_hashmap_get@plt>
   2b2c5:	test   eax,eax
   2b2c7:	je     2b2d4 <wget_tls_session_get+0x64>
   2b2c9:	mov    rax,QWORD PTR [rsp+0x8]
   2b2ce:	cmp    QWORD PTR [rax+0x8],r14
   2b2d2:	jge    2b300 <wget_tls_session_get+0x90>
   2b2d4:	mov    eax,0x1
   2b2d9:	mov    rdx,QWORD PTR [rsp+0x48]
   2b2de:	sub    rdx,QWORD PTR fs:0x28
   2b2e7:	jne    2b32c <wget_tls_session_get+0xbc>
   2b2e9:	add    rsp,0x50
   2b2ed:	pop    rbx
   2b2ee:	pop    rbp
   2b2ef:	pop    r12
   2b2f1:	pop    r13
   2b2f3:	pop    r14
   2b2f5:	ret    
   2b2f6:	cs nop WORD PTR [rax+rax*1+0x0]
   2b300:	test   r13,r13
   2b303:	je     2b316 <wget_tls_session_get+0xa6>
   2b305:	mov    rsi,QWORD PTR [rax+0x20]
   2b309:	mov    rdi,QWORD PTR [rax+0x28]
   2b30d:	call   10dc0 <wget_memdup@plt>
   2b312:	mov    QWORD PTR [r13+0x0],rax
   2b316:	test   r12,r12
   2b319:	je     2b328 <wget_tls_session_get+0xb8>
   2b31b:	mov    rax,QWORD PTR [rsp+0x8]
   2b320:	mov    rax,QWORD PTR [rax+0x20]
   2b324:	mov    QWORD PTR [r12],rax
   2b328:	xor    eax,eax
   2b32a:	jmp    2b2d9 <wget_tls_session_get+0x69>
   2b32c:	call   11760 <__stack_chk_fail@plt>
   2b331:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2b33c:	nop    DWORD PTR [rax+0x0]

000000000002b340 <wget_tls_session_db_init>:
   2b340:	endbr64 
   2b344:	push   r12
   2b346:	lea    rdx,[rip+0xfffffffffffffbb3]        # 2af00 <compare_tls_session>
   2b34d:	mov    r12,rdi
   2b350:	lea    rsi,[rip+0xfffffffffffffb79]        # 2aed0 <hash_tls_session>
   2b357:	push   rbp
   2b358:	mov    edi,0x10
   2b35d:	sub    rsp,0x18
   2b361:	mov    rax,QWORD PTR fs:0x28
   2b36a:	mov    QWORD PTR [rsp+0x8],rax
   2b36f:	xor    eax,eax
   2b371:	call   104c0 <wget_hashmap_create@plt>
   2b376:	mov    QWORD PTR [rsp],rax
   2b37a:	test   rax,rax
   2b37d:	je     2b41a <wget_tls_session_db_init+0xda>
   2b383:	test   r12,r12
   2b386:	je     2b3e8 <wget_tls_session_db_init+0xa8>
   2b388:	pxor   xmm0,xmm0
   2b38c:	mov    rdi,rax
   2b38f:	movups XMMWORD PTR [r12],xmm0
   2b394:	movups XMMWORD PTR [r12+0x10],xmm0
   2b39a:	mov    rbp,QWORD PTR [rip+0x4ac1f]        # 75fc0 <wget_tls_session_free@@Base+0x4ae30>
   2b3a1:	mov    rsi,rbp
   2b3a4:	call   10b20 <wget_hashmap_set_key_destructor@plt>
   2b3a9:	mov    rdi,QWORD PTR [rsp]
   2b3ad:	mov    rsi,rbp
   2b3b0:	call   105d0 <wget_hashmap_set_value_destructor@plt>
   2b3b5:	mov    rax,QWORD PTR [rsp]
   2b3b9:	lea    rdi,[r12+0x8]
   2b3be:	mov    QWORD PTR [r12],rax
   2b3c2:	call   10530 <wget_thread_mutex_init@plt>
   2b3c7:	mov    rax,QWORD PTR [rsp+0x8]
   2b3cc:	sub    rax,QWORD PTR fs:0x28
   2b3d5:	jne    2b41f <wget_tls_session_db_init+0xdf>
   2b3d7:	add    rsp,0x18
   2b3db:	mov    rax,r12
   2b3de:	pop    rbp
   2b3df:	pop    r12
   2b3e1:	ret    
   2b3e2:	nop    WORD PTR [rax+rax*1+0x0]
   2b3e8:	mov    rax,QWORD PTR [rip+0x4ab51]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   2b3ef:	mov    esi,0x20
   2b3f4:	mov    edi,0x1
   2b3f9:	call   QWORD PTR [rax]
   2b3fb:	mov    r12,rax
   2b3fe:	test   rax,rax
   2b401:	je     2b410 <wget_tls_session_db_init+0xd0>
   2b403:	mov    rdi,QWORD PTR [rsp]
   2b407:	jmp    2b39a <wget_tls_session_db_init+0x5a>
   2b409:	nop    DWORD PTR [rax+0x0]
   2b410:	mov    rdi,rsp
   2b413:	call   10950 <wget_hashmap_free@plt>
   2b418:	jmp    2b3c7 <wget_tls_session_db_init+0x87>
   2b41a:	xor    r12d,r12d
   2b41d:	jmp    2b3c7 <wget_tls_session_db_init+0x87>
   2b41f:	call   11760 <__stack_chk_fail@plt>
   2b424:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2b42f:	nop

000000000002b430 <wget_tls_session_db_deinit>:
   2b430:	endbr64 
   2b434:	test   rdi,rdi
   2b437:	je     2b468 <wget_tls_session_db_deinit+0x38>
   2b439:	push   rbx
   2b43a:	mov    rbx,rdi
   2b43d:	mov    rdi,QWORD PTR [rdi+0x8]
   2b441:	call   12040 <wget_thread_mutex_lock@plt>
   2b446:	mov    rdi,rbx
   2b449:	call   10950 <wget_hashmap_free@plt>
   2b44e:	mov    rdi,QWORD PTR [rbx+0x8]
   2b452:	call   117c0 <wget_thread_mutex_unlock@plt>
   2b457:	lea    rdi,[rbx+0x8]
   2b45b:	pop    rbx
   2b45c:	jmp    11e70 <wget_thread_mutex_destroy@plt>
   2b461:	nop    DWORD PTR [rax+0x0]
   2b468:	ret    
   2b469:	nop    DWORD PTR [rax+0x0]

000000000002b470 <wget_tls_session_db_free>:
   2b470:	endbr64 
   2b474:	test   rdi,rdi
   2b477:	je     2b4a0 <wget_tls_session_db_free+0x30>
   2b479:	push   rbx
   2b47a:	mov    rbx,rdi
   2b47d:	mov    rdi,QWORD PTR [rdi]
   2b480:	call   10fb0 <wget_tls_session_db_deinit@plt>
   2b485:	mov    rdi,QWORD PTR [rbx]
   2b488:	test   rdi,rdi
   2b48b:	je     2b49d <wget_tls_session_db_free+0x2d>
   2b48d:	mov    rax,QWORD PTR [rip+0x4ab54]        # 75fe8 <wget_free@@Base-0x1328>
   2b494:	call   QWORD PTR [rax]
   2b496:	mov    QWORD PTR [rbx],0x0
   2b49d:	pop    rbx
   2b49e:	ret    
   2b49f:	nop
   2b4a0:	ret    
   2b4a1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2b4ac:	nop    DWORD PTR [rax+0x0]

000000000002b4b0 <wget_tls_session_db_add>:
   2b4b0:	endbr64 
   2b4b4:	push   rbp
   2b4b5:	push   rbx
   2b4b6:	sub    rsp,0x18
   2b4ba:	mov    rax,QWORD PTR fs:0x28
   2b4c3:	mov    QWORD PTR [rsp+0x8],rax
   2b4c8:	xor    eax,eax
   2b4ca:	test   rdi,rdi
   2b4cd:	je     2b530 <wget_tls_session_db_add+0x80>
   2b4cf:	mov    rbp,rsi
   2b4d2:	test   rsi,rsi
   2b4d5:	je     2b530 <wget_tls_session_db_add+0x80>
   2b4d7:	mov    rbx,rdi
   2b4da:	mov    rdi,QWORD PTR [rdi+0x8]
   2b4de:	call   12040 <wget_thread_mutex_lock@plt>
   2b4e3:	cmp    QWORD PTR [rbp+0x18],0x0
   2b4e8:	jne    2b550 <wget_tls_session_db_add+0xa0>
   2b4ea:	mov    rdi,QWORD PTR [rbx]
   2b4ed:	mov    rsi,rbp
   2b4f0:	call   10b70 <wget_hashmap_remove@plt>
   2b4f5:	test   eax,eax
   2b4f7:	jne    2b5d8 <wget_tls_session_db_add+0x128>
   2b4fd:	mov    rdi,rbp
   2b500:	call   10440 <wget_tls_session_free@plt>
   2b505:	mov    rax,QWORD PTR [rsp+0x8]
   2b50a:	sub    rax,QWORD PTR fs:0x28
   2b513:	jne    2b5f3 <wget_tls_session_db_add+0x143>
   2b519:	mov    rdi,QWORD PTR [rbx+0x8]
   2b51d:	add    rsp,0x18
   2b521:	pop    rbx
   2b522:	pop    rbp
   2b523:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   2b528:	nop    DWORD PTR [rax+rax*1+0x0]
   2b530:	mov    rax,QWORD PTR [rsp+0x8]
   2b535:	sub    rax,QWORD PTR fs:0x28
   2b53e:	jne    2b5f3 <wget_tls_session_db_add+0x143>
   2b544:	add    rsp,0x18
   2b548:	pop    rbx
   2b549:	pop    rbp
   2b54a:	ret    
   2b54b:	nop    DWORD PTR [rax+rax*1+0x0]
   2b550:	mov    rdi,QWORD PTR [rbx]
   2b553:	mov    rdx,rsp
   2b556:	mov    rsi,rbp
   2b559:	call   10520 <wget_hashmap_get@plt>
   2b55e:	test   eax,eax
   2b560:	jne    2b598 <wget_tls_session_db_add+0xe8>
   2b562:	mov    rcx,QWORD PTR [rbp+0x20]
   2b566:	mov    rdx,QWORD PTR [rbp+0x18]
   2b56a:	lea    rdi,[rip+0x2262f]        # 4dba0 <__func__.0+0x570>
   2b571:	xor    eax,eax
   2b573:	mov    rsi,QWORD PTR [rbp+0x0]
   2b577:	call   114b0 <wget_debug_printf@plt>
   2b57c:	mov    rdi,QWORD PTR [rbx]
   2b57f:	mov    rdx,rbp
   2b582:	mov    rsi,rbp
   2b585:	call   10c90 <wget_hashmap_put@plt>
   2b58a:	or     BYTE PTR [rbx+0x18],0x1
   2b58e:	jmp    2b505 <wget_tls_session_db_add+0x55>
   2b593:	nop    DWORD PTR [rax+rax*1+0x0]
   2b598:	mov    rax,QWORD PTR [rsp]
   2b59c:	lea    rdi,[rip+0x225dd]        # 4db80 <__func__.0+0x550>
   2b5a3:	mov    rsi,QWORD PTR [rax]
   2b5a6:	xor    eax,eax
   2b5a8:	call   114b0 <wget_debug_printf@plt>
   2b5ad:	mov    rsi,QWORD PTR [rsp]
   2b5b1:	mov    rdi,QWORD PTR [rbx]
   2b5b4:	call   10b70 <wget_hashmap_remove@plt>
   2b5b9:	test   eax,eax
   2b5bb:	je     2b562 <wget_tls_session_db_add+0xb2>
   2b5bd:	mov    rsi,QWORD PTR [rbp+0x0]
   2b5c1:	lea    rdi,[rip+0x22590]        # 4db58 <__func__.0+0x528>
   2b5c8:	xor    eax,eax
   2b5ca:	call   114b0 <wget_debug_printf@plt>
   2b5cf:	jmp    2b562 <wget_tls_session_db_add+0xb2>
   2b5d1:	nop    DWORD PTR [rax+0x0]
   2b5d8:	or     BYTE PTR [rbx+0x18],0x1
   2b5dc:	mov    rsi,QWORD PTR [rbp+0x0]
   2b5e0:	lea    rdi,[rip+0x22571]        # 4db58 <__func__.0+0x528>
   2b5e7:	xor    eax,eax
   2b5e9:	call   114b0 <wget_debug_printf@plt>
   2b5ee:	jmp    2b4fd <wget_tls_session_db_add+0x4d>
   2b5f3:	call   11760 <__stack_chk_fail@plt>
   2b5f8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000002b600 <tls_session_db_load>:
   2b600:	endbr64 
   2b604:	push   r15
   2b606:	push   r14
   2b608:	push   r13
   2b60a:	push   r12
   2b60c:	push   rbp
   2b60d:	mov    rbp,rsi
   2b610:	push   rbx
   2b611:	mov    rbx,rdi
   2b614:	sub    rsp,0x108
   2b61b:	mov    QWORD PTR [rsp+0x10],rdi
   2b620:	xor    edi,edi
   2b622:	mov    rax,QWORD PTR fs:0x28
   2b62b:	mov    QWORD PTR [rsp+0xf8],rax
   2b633:	xor    eax,eax
   2b635:	mov    QWORD PTR [rsp+0x20],0x0
   2b63e:	mov    QWORD PTR [rsp+0x28],0x0
   2b647:	call   11480 <time@plt>
   2b64c:	mov    rdi,rbp
   2b64f:	mov    QWORD PTR [rsp+0x18],rax
   2b654:	call   11650 <fileno@plt>
   2b659:	lea    rsi,[rsp+0x60]
   2b65e:	mov    edi,eax
   2b660:	call   12210 <fstat@plt>
   2b665:	test   eax,eax
   2b667:	jne    2b684 <tls_session_db_load+0x84>
   2b669:	mov    rax,QWORD PTR [rsp+0xb8]
   2b671:	cmp    rax,QWORD PTR [rbx+0x10]
   2b675:	je     2b794 <tls_session_db_load+0x194>
   2b67b:	mov    rbx,QWORD PTR [rsp+0x10]
   2b680:	mov    QWORD PTR [rbx+0x10],rax
   2b684:	lea    rax,[rsp+0x30]
   2b689:	lea    r12,[rsp+0x28]
   2b68e:	mov    QWORD PTR [rsp],rax
   2b692:	lea    rbx,[rsp+0x20]
   2b697:	nop    WORD PTR [rax+rax*1+0x0]
   2b6a0:	mov    rdx,rbp
   2b6a3:	mov    rsi,r12
   2b6a6:	mov    rdi,rbx
   2b6a9:	call   10db0 <wget_getline@plt>
   2b6ae:	mov    r15,rax
   2b6b1:	test   rax,rax
   2b6b4:	js     2b768 <tls_session_db_load+0x168>
   2b6ba:	call   116c0 <__ctype_b_loc@plt>
   2b6bf:	mov    r13,QWORD PTR [rsp+0x20]
   2b6c4:	mov    rsi,QWORD PTR [rax]
   2b6c7:	mov    r14,rax
   2b6ca:	mov    r8,r13
   2b6cd:	jmp    2b6d4 <tls_session_db_load+0xd4>
   2b6cf:	nop
   2b6d0:	add    r8,0x1
   2b6d4:	movsx  rcx,BYTE PTR [r8]
   2b6d8:	test   BYTE PTR [rsi+rcx*2+0x1],0x20
   2b6dd:	jne    2b6d0 <tls_session_db_load+0xd0>
   2b6df:	cmp    cl,0x23
   2b6e2:	je     2b6a0 <tls_session_db_load+0xa0>
   2b6e4:	test   cl,cl
   2b6e6:	je     2b6a0 <tls_session_db_load+0xa0>
   2b6e8:	test   r15,r15
   2b6eb:	jne    2b701 <tls_session_db_load+0x101>
   2b6ed:	jmp    2b70f <tls_session_db_load+0x10f>
   2b6ef:	nop
   2b6f0:	sub    r15,0x1
   2b6f4:	mov    BYTE PTR [r13+r15*1+0x0],0x0
   2b6fa:	je     2b70f <tls_session_db_load+0x10f>
   2b6fc:	mov    r13,QWORD PTR [rsp+0x20]
   2b701:	movzx  eax,BYTE PTR [r13+r15*1+0x0]
   2b707:	cmp    al,0xa
   2b709:	je     2b6f0 <tls_session_db_load+0xf0>
   2b70b:	cmp    al,0xd
   2b70d:	je     2b6f0 <tls_session_db_load+0xf0>
   2b70f:	mov    rdi,QWORD PTR [rsp]
   2b713:	mov    QWORD PTR [rsp+0x8],r8
   2b718:	call   12360 <wget_tls_session_init@plt>
   2b71d:	mov    r8,QWORD PTR [rsp+0x8]
   2b722:	movsx  rax,BYTE PTR [r8]
   2b726:	test   al,al
   2b728:	jne    2b7c0 <tls_session_db_load+0x1c0>
   2b72e:	mov    rdi,QWORD PTR [rsp]
   2b732:	call   120f0 <wget_tls_session_deinit@plt>
   2b737:	mov    r14,QWORD PTR [rsp+0x20]
   2b73c:	xor    edi,edi
   2b73e:	mov    edx,0x5
   2b743:	lea    rsi,[rip+0x206be]        # 4be08 <__func__.0+0x138>
   2b74a:	call   10f90 <dcgettext@plt>
   2b74f:	mov    rsi,r14
   2b752:	mov    rdi,rax
   2b755:	xor    eax,eax
   2b757:	call   11ea0 <wget_error_printf@plt>
   2b75c:	jmp    2b6a0 <tls_session_db_load+0xa0>
   2b761:	nop    DWORD PTR [rax+0x0]
   2b768:	mov    rdi,QWORD PTR [rsp+0x20]
   2b76d:	test   rdi,rdi
   2b770:	je     2b784 <tls_session_db_load+0x184>
   2b772:	mov    rax,QWORD PTR [rip+0x4a86f]        # 75fe8 <wget_free@@Base-0x1328>
   2b779:	call   QWORD PTR [rax]
   2b77b:	mov    QWORD PTR [rsp+0x20],0x0
   2b784:	mov    rdi,rbp
   2b787:	call   12580 <ferror@plt>
   2b78c:	test   eax,eax
   2b78e:	jne    2b9d2 <tls_session_db_load+0x3d2>
   2b794:	xor    eax,eax
   2b796:	mov    rdx,QWORD PTR [rsp+0xf8]
   2b79e:	sub    rdx,QWORD PTR fs:0x28
   2b7a7:	jne    2b9f9 <tls_session_db_load+0x3f9>
   2b7ad:	add    rsp,0x108
   2b7b4:	pop    rbx
   2b7b5:	pop    rbp
   2b7b6:	pop    r12
   2b7b8:	pop    r13
   2b7ba:	pop    r14
   2b7bc:	pop    r15
   2b7be:	ret    
   2b7bf:	nop
   2b7c0:	mov    rcx,QWORD PTR [r14]
   2b7c3:	mov    r15,r8
   2b7c6:	jmp    2b7dd <tls_session_db_load+0x1dd>
   2b7c8:	nop    DWORD PTR [rax+rax*1+0x0]
   2b7d0:	movsx  rax,BYTE PTR [r15+0x1]
   2b7d5:	add    r15,0x1
   2b7d9:	test   al,al
   2b7db:	je     2b7e4 <tls_session_db_load+0x1e4>
   2b7dd:	test   BYTE PTR [rcx+rax*2+0x1],0x20
   2b7e2:	je     2b7d0 <tls_session_db_load+0x1d0>
   2b7e4:	mov    rsi,r15
   2b7e7:	mov    rdi,r8
   2b7ea:	sub    rsi,r8
   2b7ed:	call   126b0 <wget_strmemdup@plt>
   2b7f2:	mov    QWORD PTR [rsp+0x30],rax
   2b7f7:	cmp    BYTE PTR [r15],0x0
   2b7fb:	je     2b72e <tls_session_db_load+0x12e>
   2b801:	movsx  rax,BYTE PTR [r15+0x1]
   2b806:	lea    rdi,[r15+0x1]
   2b80a:	test   al,al
   2b80c:	je     2b9f1 <tls_session_db_load+0x3f1>
   2b812:	mov    rdx,QWORD PTR [r14]
   2b815:	mov    r15,rdi
   2b818:	jmp    2b82d <tls_session_db_load+0x22d>
   2b81a:	nop    WORD PTR [rax+rax*1+0x0]
   2b820:	movsx  rax,BYTE PTR [r15+0x1]
   2b825:	add    r15,0x1
   2b829:	test   al,al
   2b82b:	je     2b834 <tls_session_db_load+0x234>
   2b82d:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   2b832:	je     2b820 <tls_session_db_load+0x220>
   2b834:	mov    edx,0xa
   2b839:	xor    esi,esi
   2b83b:	call   10600 <strtoll@plt>
   2b840:	movabs rdx,0x3ffffffffffffffe
   2b84a:	cmp    rax,rdx
   2b84d:	mov    edx,0x0
   2b852:	cmova  rax,rdx
   2b856:	mov    QWORD PTR [rsp+0x40],rax
   2b85b:	cmp    BYTE PTR [r15],0x0
   2b85f:	je     2b72e <tls_session_db_load+0x12e>
   2b865:	movsx  rax,BYTE PTR [r15+0x1]
   2b86a:	lea    rdi,[r15+0x1]
   2b86e:	test   al,al
   2b870:	je     2b9e9 <tls_session_db_load+0x3e9>
   2b876:	mov    rdx,QWORD PTR [r14]
   2b879:	mov    rcx,rdi
   2b87c:	jmp    2b88d <tls_session_db_load+0x28d>
   2b87e:	xchg   ax,ax
   2b880:	movsx  rax,BYTE PTR [rcx+0x1]
   2b885:	add    rcx,0x1
   2b889:	test   al,al
   2b88b:	je     2b894 <tls_session_db_load+0x294>
   2b88d:	test   BYTE PTR [rdx+rax*2+0x1],0x20
   2b892:	je     2b880 <tls_session_db_load+0x280>
   2b894:	xor    esi,esi
   2b896:	mov    edx,0xa
   2b89b:	mov    QWORD PTR [rsp+0x8],rcx
   2b8a0:	call   10600 <strtoll@plt>
   2b8a5:	mov    rcx,QWORD PTR [rsp+0x8]
   2b8aa:	movabs rdi,0x3ffffffffffffffe
   2b8b4:	cmp    rax,rdi
   2b8b7:	ja     2b99a <tls_session_db_load+0x39a>
   2b8bd:	mov    QWORD PTR [rsp+0x48],rax
   2b8c2:	test   rax,rax
   2b8c5:	je     2b8cc <tls_session_db_load+0x2cc>
   2b8c7:	add    rax,QWORD PTR [rsp+0x40]
   2b8cc:	mov    QWORD PTR [rsp+0x38],rax
   2b8d1:	cmp    rax,QWORD PTR [rsp+0x18]
   2b8d6:	jl     2b9b5 <tls_session_db_load+0x3b5>
   2b8dc:	cmp    BYTE PTR [rcx],0x0
   2b8df:	je     2b72e <tls_session_db_load+0x12e>
   2b8e5:	movsx  rax,BYTE PTR [rcx+0x1]
   2b8ea:	lea    r15,[rcx+0x1]
   2b8ee:	test   al,al
   2b8f0:	je     2b9cb <tls_session_db_load+0x3cb>
   2b8f6:	mov    r8,QWORD PTR [r14]
   2b8f9:	mov    rdx,r15
   2b8fc:	jmp    2b914 <tls_session_db_load+0x314>
   2b8fe:	xchg   ax,ax
   2b900:	movsx  rax,BYTE PTR [rdx+0x1]
   2b905:	lea    rdi,[rdx+0x1]
   2b909:	test   al,al
   2b90b:	je     2b9c3 <tls_session_db_load+0x3c3>
   2b911:	mov    rdx,rdi
   2b914:	test   BYTE PTR [r8+rax*2+0x1],0x20
   2b91a:	je     2b900 <tls_session_db_load+0x300>
   2b91c:	sub    rdx,r15
   2b91f:	mov    rdi,rdx
   2b922:	mov    QWORD PTR [rsp+0x8],rdx
   2b927:	call   12290 <wget_base64_get_decoded_length@plt>
   2b92c:	mov    rdi,rax
   2b92f:	mov    rax,QWORD PTR [rip+0x4a69a]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   2b936:	call   QWORD PTR [rax]
   2b938:	mov    r14,rax
   2b93b:	test   rax,rax
   2b93e:	je     2b72e <tls_session_db_load+0x12e>
   2b944:	mov    rdx,QWORD PTR [rsp+0x8]
   2b949:	mov    rsi,r15
   2b94c:	mov    rdi,rax
   2b94f:	call   111a0 <wget_base64_decode@plt>
   2b954:	mov    r15,QWORD PTR [rsp+0x10]
   2b959:	mov    QWORD PTR [rsp+0x58],r14
   2b95e:	mov    QWORD PTR [rsp+0x50],rax
   2b963:	mov    rdi,QWORD PTR [r15]
   2b966:	call   125c0 <wget_hashmap_size@plt>
   2b96b:	mov    rdi,QWORD PTR [rsp]
   2b96f:	mov    esi,0x30
   2b974:	mov    r14d,eax
   2b977:	call   10dc0 <wget_memdup@plt>
   2b97c:	mov    rdi,r15
   2b97f:	mov    rsi,rax
   2b982:	call   10760 <wget_tls_session_db_add@plt>
   2b987:	test   r14d,r14d
   2b98a:	jne    2b6a0 <tls_session_db_load+0xa0>
   2b990:	and    BYTE PTR [r15+0x18],0xfe
   2b995:	jmp    2b6a0 <tls_session_db_load+0xa0>
   2b99a:	mov    QWORD PTR [rsp+0x48],0x0
   2b9a3:	xor    eax,eax
   2b9a5:	mov    QWORD PTR [rsp+0x38],rax
   2b9aa:	cmp    rax,QWORD PTR [rsp+0x18]
   2b9af:	jge    2b8dc <tls_session_db_load+0x2dc>
   2b9b5:	mov    rdi,QWORD PTR [rsp]
   2b9b9:	call   120f0 <wget_tls_session_deinit@plt>
   2b9be:	jmp    2b6a0 <tls_session_db_load+0xa0>
   2b9c3:	sub    rdx,rcx
   2b9c6:	jmp    2b91f <tls_session_db_load+0x31f>
   2b9cb:	xor    edx,edx
   2b9cd:	jmp    2b91f <tls_session_db_load+0x31f>
   2b9d2:	mov    rax,QWORD PTR [rsp+0x10]
   2b9d7:	mov    QWORD PTR [rax+0x10],0x0
   2b9df:	mov    eax,0xffffffff
   2b9e4:	jmp    2b796 <tls_session_db_load+0x196>
   2b9e9:	mov    rcx,rdi
   2b9ec:	jmp    2b894 <tls_session_db_load+0x294>
   2b9f1:	mov    r15,rdi
   2b9f4:	jmp    2b834 <tls_session_db_load+0x234>
   2b9f9:	call   11760 <__stack_chk_fail@plt>
   2b9fe:	xchg   ax,ax

000000000002ba00 <wget_tls_session_db_load>:
   2ba00:	endbr64 
   2ba04:	push   r12
   2ba06:	xor    r12d,r12d
   2ba09:	push   rbp
   2ba0a:	sub    rsp,0x8
   2ba0e:	test   rdi,rdi
   2ba11:	je     2ba20 <wget_tls_session_db_load+0x20>
   2ba13:	mov    rbp,rsi
   2ba16:	test   rsi,rsi
   2ba19:	je     2ba20 <wget_tls_session_db_load+0x20>
   2ba1b:	cmp    BYTE PTR [rsi],0x0
   2ba1e:	jne    2ba30 <wget_tls_session_db_load+0x30>
   2ba20:	add    rsp,0x8
   2ba24:	mov    eax,r12d
   2ba27:	pop    rbp
   2ba28:	pop    r12
   2ba2a:	ret    
   2ba2b:	nop    DWORD PTR [rax+rax*1+0x0]
   2ba30:	mov    rcx,rdi
   2ba33:	xor    edx,edx
   2ba35:	lea    rsi,[rip+0xfffffffffffffbc4]        # 2b600 <tls_session_db_load>
   2ba3c:	mov    rdi,rbp
   2ba3f:	call   10980 <wget_update_file@plt>
   2ba44:	mov    r12d,eax
   2ba47:	test   eax,eax
   2ba49:	jne    2ba67 <wget_tls_session_db_load+0x67>
   2ba4b:	mov    rsi,rbp
   2ba4e:	xor    eax,eax
   2ba50:	lea    rdi,[rip+0x221a9]        # 4dc00 <__func__.0+0x5d0>
   2ba57:	call   114b0 <wget_debug_printf@plt>
   2ba5c:	add    rsp,0x8
   2ba60:	mov    eax,r12d
   2ba63:	pop    rbp
   2ba64:	pop    r12
   2ba66:	ret    
   2ba67:	mov    edx,0x5
   2ba6c:	lea    rsi,[rip+0x22165]        # 4dbd8 <__func__.0+0x5a8>
   2ba73:	xor    edi,edi
   2ba75:	mov    r12d,0xffffffff
   2ba7b:	call   10f90 <dcgettext@plt>
   2ba80:	mov    rdi,rax
   2ba83:	xor    eax,eax
   2ba85:	call   11ea0 <wget_error_printf@plt>
   2ba8a:	jmp    2ba20 <wget_tls_session_db_load+0x20>
   2ba8c:	nop    DWORD PTR [rax+0x0]

000000000002ba90 <wget_tls_session_db_save>:
   2ba90:	endbr64 
   2ba94:	push   r13
   2ba96:	push   r12
   2ba98:	push   rbx
   2ba99:	test   rdi,rdi
   2ba9c:	je     2bb30 <wget_tls_session_db_save+0xa0>
   2baa2:	mov    r12,rsi
   2baa5:	test   rsi,rsi
   2baa8:	je     2bb30 <wget_tls_session_db_save+0xa0>
   2baae:	cmp    BYTE PTR [rsi],0x0
   2bab1:	je     2bb30 <wget_tls_session_db_save+0xa0>
   2bab3:	mov    rcx,rdi
   2bab6:	mov    rbx,rdi
   2bab9:	lea    rdx,[rip+0xfffffffffffff450]        # 2af10 <tls_session_db_save>
   2bac0:	mov    rdi,r12
   2bac3:	lea    rsi,[rip+0xfffffffffffffb36]        # 2b600 <tls_session_db_load>
   2baca:	call   10980 <wget_update_file@plt>
   2bacf:	mov    r13d,eax
   2bad2:	test   eax,eax
   2bad4:	jne    2bb38 <wget_tls_session_db_save+0xa8>
   2bad6:	mov    rdi,QWORD PTR [rbx]
   2bad9:	call   125c0 <wget_hashmap_size@plt>
   2bade:	mov    esi,eax
   2bae0:	test   eax,eax
   2bae2:	je     2bb20 <wget_tls_session_db_save+0x90>
   2bae4:	cmp    eax,0x1
   2bae7:	lea    rdx,[rip+0x21b84]        # 4d672 <__func__.0+0x42>
   2baee:	lea    rax,[rip+0x210d8]        # 4cbcd <__func__.5+0x21d>
   2baf5:	mov    rcx,r12
   2baf8:	cmove  rdx,rax
   2bafc:	lea    rdi,[rip+0x2214d]        # 4dc50 <__func__.0+0x620>
   2bb03:	xor    eax,eax
   2bb05:	call   114b0 <wget_debug_printf@plt>
   2bb0a:	and    BYTE PTR [rbx+0x18],0xfe
   2bb0e:	mov    eax,r13d
   2bb11:	pop    rbx
   2bb12:	pop    r12
   2bb14:	pop    r13
   2bb16:	ret    
   2bb17:	nop    WORD PTR [rax+rax*1+0x0]
   2bb20:	lea    rdi,[rip+0x22151]        # 4dc78 <__func__.0+0x648>
   2bb27:	xor    eax,eax
   2bb29:	call   114b0 <wget_debug_printf@plt>
   2bb2e:	jmp    2bb0a <wget_tls_session_db_save+0x7a>
   2bb30:	mov    r13d,0xffffffff
   2bb36:	jmp    2bb0e <wget_tls_session_db_save+0x7e>
   2bb38:	mov    edx,0x5
   2bb3d:	lea    rsi,[rip+0x220e4]        # 4dc28 <__func__.0+0x5f8>
   2bb44:	xor    edi,edi
   2bb46:	mov    r13d,0xffffffff
   2bb4c:	call   10f90 <dcgettext@plt>
   2bb51:	mov    rsi,r12
   2bb54:	mov    rdi,rax
   2bb57:	xor    eax,eax
   2bb59:	call   11ea0 <wget_error_printf@plt>
   2bb5e:	jmp    2bb0e <wget_tls_session_db_save+0x7e>

000000000002bb60 <wget_tls_session_db_changed>:
   2bb60:	endbr64 
   2bb64:	xor    eax,eax
   2bb66:	test   rdi,rdi
   2bb69:	je     2bb72 <wget_tls_session_db_changed+0x12>
   2bb6b:	movzx  eax,BYTE PTR [rdi+0x18]
   2bb6f:	and    eax,0x1
   2bb72:	ret    
   2bb73:	cs nop WORD PTR [rax+rax*1+0x0]
   2bb7d:	nop    DWORD PTR [rax]

000000000002bb80 <wget_strcmp>:
   2bb80:	endbr64 
   2bb84:	test   rdi,rdi
   2bb87:	je     2bba0 <wget_strcmp+0x20>
   2bb89:	test   rsi,rsi
   2bb8c:	je     2bb98 <wget_strcmp+0x18>
   2bb8e:	jmp    11c60 <strcmp@plt>
   2bb93:	nop    DWORD PTR [rax+rax*1+0x0]
   2bb98:	mov    eax,0x1
   2bb9d:	ret    
   2bb9e:	xchg   ax,ax
   2bba0:	neg    rsi
   2bba3:	sbb    eax,eax
   2bba5:	ret    
   2bba6:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002bbb0 <wget_strcasecmp>:
   2bbb0:	endbr64 
   2bbb4:	test   rdi,rdi
   2bbb7:	je     2bbd0 <wget_strcasecmp+0x20>
   2bbb9:	test   rsi,rsi
   2bbbc:	je     2bbc8 <wget_strcasecmp+0x18>
   2bbbe:	jmp    116e0 <strcasecmp@plt>
   2bbc3:	nop    DWORD PTR [rax+rax*1+0x0]
   2bbc8:	mov    eax,0x1
   2bbcd:	ret    
   2bbce:	xchg   ax,ax
   2bbd0:	neg    rsi
   2bbd3:	sbb    eax,eax
   2bbd5:	ret    
   2bbd6:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002bbe0 <wget_strcasecmp_ascii>:
   2bbe0:	endbr64 
   2bbe4:	test   rdi,rdi
   2bbe7:	je     2bc00 <wget_strcasecmp_ascii+0x20>
   2bbe9:	test   rsi,rsi
   2bbec:	je     2bbf8 <wget_strcasecmp_ascii+0x18>
   2bbee:	jmp    33dc0 <c_strcasecmp>
   2bbf3:	nop    DWORD PTR [rax+rax*1+0x0]
   2bbf8:	mov    eax,0x1
   2bbfd:	ret    
   2bbfe:	xchg   ax,ax
   2bc00:	neg    rsi
   2bc03:	sbb    eax,eax
   2bc05:	ret    
   2bc06:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002bc10 <wget_strncasecmp_ascii>:
   2bc10:	endbr64 
   2bc14:	test   rdi,rdi
   2bc17:	je     2bc30 <wget_strncasecmp_ascii+0x20>
   2bc19:	test   rsi,rsi
   2bc1c:	je     2bc28 <wget_strncasecmp_ascii+0x18>
   2bc1e:	jmp    33e30 <c_strncasecmp>
   2bc23:	nop    DWORD PTR [rax+rax*1+0x0]
   2bc28:	mov    eax,0x1
   2bc2d:	ret    
   2bc2e:	xchg   ax,ax
   2bc30:	neg    rsi
   2bc33:	sbb    eax,eax
   2bc35:	ret    
   2bc36:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002bc40 <wget_strtolower>:
   2bc40:	endbr64 
   2bc44:	mov    rax,rdi
   2bc47:	test   rdi,rdi
   2bc4a:	je     2bc7c <wget_strtolower+0x3c>
   2bc4c:	movzx  edx,BYTE PTR [rdi]
   2bc4f:	test   dl,dl
   2bc51:	je     2bc7c <wget_strtolower+0x3c>
   2bc53:	mov    rsi,rdi
   2bc56:	cs nop WORD PTR [rax+rax*1+0x0]
   2bc60:	movsx  ecx,dl
   2bc63:	sub    ecx,0x41
   2bc66:	cmp    ecx,0x19
   2bc69:	ja     2bc70 <wget_strtolower+0x30>
   2bc6b:	add    edx,0x20
   2bc6e:	mov    BYTE PTR [rsi],dl
   2bc70:	movzx  edx,BYTE PTR [rsi+0x1]
   2bc74:	add    rsi,0x1
   2bc78:	test   dl,dl
   2bc7a:	jne    2bc60 <wget_strtolower+0x20>
   2bc7c:	ret    
   2bc7d:	nop    DWORD PTR [rax]

000000000002bc80 <wget_strncmp>:
   2bc80:	endbr64 
   2bc84:	test   rdi,rdi
   2bc87:	je     2bca0 <wget_strncmp+0x20>
   2bc89:	test   rsi,rsi
   2bc8c:	je     2bc98 <wget_strncmp+0x18>
   2bc8e:	jmp    10b10 <strncmp@plt>
   2bc93:	nop    DWORD PTR [rax+rax*1+0x0]
   2bc98:	mov    eax,0x1
   2bc9d:	ret    
   2bc9e:	xchg   ax,ax
   2bca0:	neg    rsi
   2bca3:	sbb    eax,eax
   2bca5:	ret    
   2bca6:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002bcb0 <wget_strncasecmp>:
   2bcb0:	endbr64 
   2bcb4:	test   rdi,rdi
   2bcb7:	je     2bcd0 <wget_strncasecmp+0x20>
   2bcb9:	test   rsi,rsi
   2bcbc:	je     2bcc8 <wget_strncasecmp+0x18>
   2bcbe:	jmp    11a00 <strncasecmp@plt>
   2bcc3:	nop    DWORD PTR [rax+rax*1+0x0]
   2bcc8:	mov    eax,0x1
   2bccd:	ret    
   2bcce:	xchg   ax,ax
   2bcd0:	neg    rsi
   2bcd3:	sbb    eax,eax
   2bcd5:	ret    
   2bcd6:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002bce0 <wget_memtohex>:
   2bce0:	endbr64 
   2bce4:	test   rdx,rdx
   2bce7:	mov    r8,rsi
   2bcea:	mov    rsi,rdx
   2bced:	mov    r10,rcx
   2bcf0:	sete   al
   2bcf3:	test   rdi,rdi
   2bcf6:	sete   dl
   2bcf9:	or     al,dl
   2bcfb:	jne    2bdb8 <wget_memtohex+0xd8>
   2bd01:	test   rcx,rcx
   2bd04:	je     2bdb8 <wget_memtohex+0xd8>
   2bd0a:	lea    rax,[r8+r8*1]
   2bd0e:	cmp    rax,rcx
   2bd11:	jb     2bdc0 <wget_memtohex+0xe0>
   2bd17:	lea    r8,[rcx-0x1]
   2bd1b:	shr    r8,1
   2bd1e:	je     2bd95 <wget_memtohex+0xb5>
   2bd20:	mov    r11d,0x1
   2bd26:	xor    eax,eax
   2bd28:	nop    DWORD PTR [rax+rax*1+0x0]
   2bd30:	movzx  edx,BYTE PTR [rdi+rax*1]
   2bd34:	shr    dl,0x4
   2bd37:	lea    r9d,[rdx+0x57]
   2bd3b:	cmp    dl,0xa
   2bd3e:	lea    ecx,[rdx+0x30]
   2bd41:	mov    edx,r9d
   2bd44:	cmovb  edx,ecx
   2bd47:	mov    BYTE PTR [rsi+rax*2],dl
   2bd4a:	movzx  edx,BYTE PTR [rdi+rax*1]
   2bd4e:	and    edx,0xf
   2bd51:	lea    r9d,[rdx+0x57]
   2bd55:	cmp    dl,0xa
   2bd58:	lea    ecx,[rdx+0x30]
   2bd5b:	mov    edx,r9d
   2bd5e:	cmovb  edx,ecx
   2bd61:	mov    BYTE PTR [rsi+rax*2+0x1],dl
   2bd65:	add    rax,0x1
   2bd69:	cmp    rax,r8
   2bd6c:	jb     2bd30 <wget_memtohex+0x50>
   2bd6e:	test   r8,r8
   2bd71:	lea    rax,[r8+r8*1]
   2bd75:	mov    edx,0x2
   2bd7a:	cmove  rax,rdx
   2bd7e:	add    rsi,rax
   2bd81:	test   r8,r8
   2bd84:	mov    eax,0x1
   2bd89:	cmove  r8,rax
   2bd8d:	add    rdi,r8
   2bd90:	test   r11d,r11d
   2bd93:	je     2bdb5 <wget_memtohex+0xd5>
   2bd95:	and    r10d,0x1
   2bd99:	jne    2bdb5 <wget_memtohex+0xd5>
   2bd9b:	movzx  eax,BYTE PTR [rdi]
   2bd9e:	shr    al,0x4
   2bda1:	lea    ecx,[rax+0x57]
   2bda4:	cmp    al,0xa
   2bda6:	lea    edx,[rax+0x30]
   2bda9:	mov    eax,ecx
   2bdab:	cmovb  eax,edx
   2bdae:	add    rsi,0x1
   2bdb2:	mov    BYTE PTR [rsi-0x1],al
   2bdb5:	mov    BYTE PTR [rsi],0x0
   2bdb8:	ret    
   2bdb9:	nop    DWORD PTR [rax+0x0]
   2bdc0:	xor    r11d,r11d
   2bdc3:	test   r8,r8
   2bdc6:	jne    2bd26 <wget_memtohex+0x46>
   2bdcc:	jmp    2bdb5 <wget_memtohex+0xd5>
   2bdce:	xchg   ax,ax

000000000002bdd0 <wget_millisleep>:
   2bdd0:	endbr64 
   2bdd4:	sub    rsp,0x28
   2bdd8:	mov    rax,QWORD PTR fs:0x28
   2bde1:	mov    QWORD PTR [rsp+0x18],rax
   2bde6:	xor    eax,eax
   2bde8:	test   edi,edi
   2bdea:	jle    2be28 <wget_millisleep+0x58>
   2bdec:	movsxd rax,edi
   2bdef:	mov    edx,edi
   2bdf1:	xor    esi,esi
   2bdf3:	imul   rax,rax,0x10624dd3
   2bdfa:	sar    edx,0x1f
   2bdfd:	sar    rax,0x26
   2be01:	sub    eax,edx
   2be03:	movsxd rdx,eax
   2be06:	imul   eax,eax,0x3e8
   2be0c:	mov    QWORD PTR [rsp],rdx
   2be10:	sub    edi,eax
   2be12:	imul   edi,edi,0xf4240
   2be18:	movsxd rdi,edi
   2be1b:	mov    QWORD PTR [rsp+0x8],rdi
   2be20:	mov    rdi,rsp
   2be23:	call   44ea0 <rpl_nanosleep>
   2be28:	mov    rax,QWORD PTR [rsp+0x18]
   2be2d:	sub    rax,QWORD PTR fs:0x28
   2be36:	jne    2be3d <wget_millisleep+0x6d>
   2be38:	add    rsp,0x28
   2be3c:	ret    
   2be3d:	call   11760 <__stack_chk_fail@plt>
   2be42:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2be4d:	nop    DWORD PTR [rax]

000000000002be50 <wget_get_timemillis>:
   2be50:	endbr64 
   2be54:	sub    rsp,0x28
   2be58:	mov    rax,QWORD PTR fs:0x28
   2be61:	mov    QWORD PTR [rsp+0x18],rax
   2be66:	xor    eax,eax
   2be68:	mov    rdi,rsp
   2be6b:	call   40eb0 <gettime>
   2be70:	mov    rcx,QWORD PTR [rsp+0x8]
   2be75:	movabs rdx,0x431bde82d7b634db
   2be7f:	imul   rsi,QWORD PTR [rsp],0x3e8
   2be87:	mov    rax,rcx
   2be8a:	sar    rcx,0x3f
   2be8e:	imul   rdx
   2be91:	sar    rdx,0x12
   2be95:	sub    rdx,rcx
   2be98:	lea    rax,[rsi+rdx*1]
   2be9c:	mov    rdx,QWORD PTR [rsp+0x18]
   2bea1:	sub    rdx,QWORD PTR fs:0x28
   2beaa:	jne    2beb1 <wget_get_timemillis+0x61>
   2beac:	add    rsp,0x28
   2beb0:	ret    
   2beb1:	call   11760 <__stack_chk_fail@plt>
   2beb6:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002bec0 <wget_percent_unescape>:
   2bec0:	endbr64 
   2bec4:	movzx  eax,BYTE PTR [rdi]
   2bec7:	test   al,al
   2bec9:	je     2bfa8 <wget_percent_unescape+0xe8>
   2becf:	lea    rdx,[rdi+0x1]
   2bed3:	xor    r11d,r11d
   2bed6:	movabs r10,0x7e0000007e03ff
   2bee0:	jmp    2befd <wget_percent_unescape+0x3d>
   2bee2:	nop    WORD PTR [rax+rax*1+0x0]
   2bee8:	add    rdi,0x1
   2beec:	mov    BYTE PTR [rdx-0x1],al
   2beef:	mov    rcx,rdx
   2bef2:	add    rdx,0x1
   2bef6:	movzx  eax,BYTE PTR [rdi]
   2bef9:	test   al,al
   2befb:	je     2bf57 <wget_percent_unescape+0x97>
   2befd:	cmp    al,0x25
   2beff:	jne    2bee8 <wget_percent_unescape+0x28>
   2bf01:	movzx  esi,BYTE PTR [rdi+0x1]
   2bf05:	lea    ecx,[rsi-0x30]
   2bf08:	cmp    cl,0x36
   2bf0b:	ja     2bee8 <wget_percent_unescape+0x28>
   2bf0d:	bt     r10,rcx
   2bf11:	jae    2bee8 <wget_percent_unescape+0x28>
   2bf13:	movzx  r9d,BYTE PTR [rdi+0x2]
   2bf18:	lea    r8d,[r9-0x30]
   2bf1c:	cmp    r8b,0x36
   2bf20:	ja     2bee8 <wget_percent_unescape+0x28>
   2bf22:	bt     r10,r8
   2bf26:	jae    2bee8 <wget_percent_unescape+0x28>
   2bf28:	cmp    sil,0x39
   2bf2c:	ja     2bf88 <wget_percent_unescape+0xc8>
   2bf2e:	mov    eax,ecx
   2bf30:	shl    eax,0x4
   2bf33:	cmp    r9b,0x39
   2bf37:	ja     2bf60 <wget_percent_unescape+0xa0>
   2bf39:	mov    rcx,rdx
   2bf3c:	or     eax,r8d
   2bf3f:	add    rdi,0x3
   2bf43:	mov    r11d,0x1
   2bf49:	mov    BYTE PTR [rdx-0x1],al
   2bf4c:	movzx  eax,BYTE PTR [rdi]
   2bf4f:	add    rdx,0x1
   2bf53:	test   al,al
   2bf55:	jne    2befd <wget_percent_unescape+0x3d>
   2bf57:	mov    BYTE PTR [rcx],0x0
   2bf5a:	mov    eax,r11d
   2bf5d:	ret    
   2bf5e:	xchg   ax,ax
   2bf60:	cmp    r9b,0x46
   2bf64:	lea    ecx,[r9-0x37]
   2bf68:	lea    r8d,[r9-0x57]
   2bf6c:	mov    r11d,0x1
   2bf72:	cmovbe r8d,ecx
   2bf76:	mov    rcx,rdx
   2bf79:	add    rdi,0x3
   2bf7d:	or     eax,r8d
   2bf80:	jmp    2bf49 <wget_percent_unescape+0x89>
   2bf82:	nop    WORD PTR [rax+rax*1+0x0]
   2bf88:	lea    eax,[rsi-0x37]
   2bf8b:	cmp    sil,0x46
   2bf8f:	lea    ecx,[rsi-0x57]
   2bf92:	cmovbe ecx,eax
   2bf95:	mov    eax,ecx
   2bf97:	shl    eax,0x4
   2bf9a:	cmp    r9b,0x39
   2bf9e:	jbe    2bf39 <wget_percent_unescape+0x79>
   2bfa0:	jmp    2bf60 <wget_percent_unescape+0xa0>
   2bfa2:	nop    WORD PTR [rax+rax*1+0x0]
   2bfa8:	mov    rcx,rdi
   2bfab:	xor    r11d,r11d
   2bfae:	mov    BYTE PTR [rcx],0x0
   2bfb1:	mov    eax,r11d
   2bfb4:	ret    
   2bfb5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

000000000002bfc0 <wget_match_tail>:
   2bfc0:	endbr64 
   2bfc4:	push   r12
   2bfc6:	mov    r12,rsi
   2bfc9:	push   rbp
   2bfca:	push   rbx
   2bfcb:	mov    rbx,rdi
   2bfce:	call   10ab0 <strlen@plt>
   2bfd3:	mov    rdi,r12
   2bfd6:	mov    rbp,rax
   2bfd9:	call   10ab0 <strlen@plt>
   2bfde:	xor    r8d,r8d
   2bfe1:	cmp    rbp,rax
   2bfe4:	jb     2bffe <wget_match_tail+0x3e>
   2bfe6:	sub    rbp,rax
   2bfe9:	mov    rsi,r12
   2bfec:	lea    rdi,[rbx+rbp*1]
   2bff0:	call   11c60 <strcmp@plt>
   2bff5:	xor    r8d,r8d
   2bff8:	test   eax,eax
   2bffa:	sete   r8b
   2bffe:	pop    rbx
   2bfff:	mov    eax,r8d
   2c002:	pop    rbp
   2c003:	pop    r12
   2c005:	ret    
   2c006:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002c010 <wget_match_tail_nocase>:
   2c010:	endbr64 
   2c014:	push   r12
   2c016:	mov    r12,rsi
   2c019:	push   rbp
   2c01a:	push   rbx
   2c01b:	mov    rbx,rdi
   2c01e:	call   10ab0 <strlen@plt>
   2c023:	mov    rdi,r12
   2c026:	mov    rbp,rax
   2c029:	call   10ab0 <strlen@plt>
   2c02e:	xor    r8d,r8d
   2c031:	cmp    rbp,rax
   2c034:	jb     2c04e <wget_match_tail_nocase+0x3e>
   2c036:	sub    rbp,rax
   2c039:	mov    rsi,r12
   2c03c:	lea    rdi,[rbx+rbp*1]
   2c040:	call   12590 <wget_strcasecmp_ascii@plt>
   2c045:	xor    r8d,r8d
   2c048:	test   eax,eax
   2c04a:	sete   r8b
   2c04e:	pop    rbx
   2c04f:	mov    eax,r8d
   2c052:	pop    rbp
   2c053:	pop    r12
   2c055:	ret    
   2c056:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002c060 <wget_strnglob>:
   2c060:	endbr64 
   2c064:	push   r14
   2c066:	push   r13
   2c068:	mov    r13d,edx
   2c06b:	push   r12
   2c06d:	mov    r12,rsi
   2c070:	push   rbp
   2c071:	push   rbx
   2c072:	mov    rbx,rdi
   2c075:	sub    rsp,0x50
   2c079:	mov    rax,QWORD PTR fs:0x28
   2c082:	mov    QWORD PTR [rsp+0x48],rax
   2c087:	xor    eax,eax
   2c089:	call   126b0 <wget_strmemdup@plt>
   2c08e:	test   rax,rax
   2c091:	je     2c0f8 <wget_strnglob+0x98>
   2c093:	mov    r14,rsp
   2c096:	mov    esi,r13d
   2c099:	xor    edx,edx
   2c09b:	mov    rdi,rax
   2c09e:	mov    rcx,r14
   2c0a1:	mov    rbp,rax
   2c0a4:	xor    r13d,r13d
   2c0a7:	call   41d20 <rpl_glob>
   2c0ac:	test   eax,eax
   2c0ae:	je     2c0e0 <wget_strnglob+0x80>
   2c0b0:	mov    rax,QWORD PTR [rip+0x49f31]        # 75fe8 <wget_free@@Base-0x1328>
   2c0b7:	mov    rdi,rbp
   2c0ba:	call   QWORD PTR [rax]
   2c0bc:	mov    rax,QWORD PTR [rsp+0x48]
   2c0c1:	sub    rax,QWORD PTR fs:0x28
   2c0ca:	jne    2c11f <wget_strnglob+0xbf>
   2c0cc:	add    rsp,0x50
   2c0d0:	mov    rax,r13
   2c0d3:	pop    rbx
   2c0d4:	pop    rbp
   2c0d5:	pop    r12
   2c0d7:	pop    r13
   2c0d9:	pop    r14
   2c0db:	ret    
   2c0dc:	nop    DWORD PTR [rax+0x0]
   2c0e0:	cmp    QWORD PTR [rsp],0x0
   2c0e5:	jne    2c100 <wget_strnglob+0xa0>
   2c0e7:	mov    rdi,r14
   2c0ea:	call   431c0 <rpl_globfree>
   2c0ef:	jmp    2c0b0 <wget_strnglob+0x50>
   2c0f1:	nop    DWORD PTR [rax+0x0]
   2c0f8:	xor    r13d,r13d
   2c0fb:	jmp    2c0bc <wget_strnglob+0x5c>
   2c0fd:	nop    DWORD PTR [rax]
   2c100:	mov    rax,QWORD PTR [rsp+0x8]
   2c105:	lea    rdx,[rbx+r12*1]
   2c109:	lea    rdi,[rip+0x210bd]        # 4d1cd <__func__.4+0xad>
   2c110:	mov    rsi,QWORD PTR [rax]
   2c113:	xor    eax,eax
   2c115:	call   12810 <wget_aprintf@plt>
   2c11a:	mov    r13,rax
   2c11d:	jmp    2c0e7 <wget_strnglob+0x87>
   2c11f:	call   11760 <__stack_chk_fail@plt>
   2c124:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2c12f:	nop

000000000002c130 <wget_human_readable>:
   2c130:	endbr64 
   2c134:	push   r12
   2c136:	mov    r12,rdi
   2c139:	cmp    rdx,0x3ff
   2c140:	jbe    2c1f0 <wget_human_readable+0xc0>
   2c146:	cmp    rdx,0xfffff
   2c14d:	jbe    2c236 <wget_human_readable+0x106>
   2c153:	xor    eax,eax
   2c155:	jmp    2c165 <wget_human_readable+0x35>
   2c157:	nop    WORD PTR [rax+rax*1+0x0]
   2c160:	cmp    eax,0x7
   2c163:	je     2c175 <wget_human_readable+0x45>
   2c165:	shr    rdx,0xa
   2c169:	add    eax,0x1
   2c16c:	cmp    rdx,0xfffff
   2c173:	ja     2c160 <wget_human_readable+0x30>
   2c175:	lea    rcx,[rip+0x21b44]        # 4dcc0 <powers.0>
   2c17c:	movsx  r9d,BYTE PTR [rcx+rax*1]
   2c181:	pxor   xmm0,xmm0
   2c185:	movsd  xmm1,QWORD PTR [rip+0x21b43]        # 4dcd0 <powers.0+0x10>
   2c18d:	cvtsi2sd xmm0,rdx
   2c192:	mulsd  xmm0,QWORD PTR [rip+0x21b2e]        # 4dcc8 <powers.0+0x8>
   2c19a:	comisd xmm1,xmm0
   2c19e:	jbe    2c210 <wget_human_readable+0xe0>
   2c1a0:	movsd  xmm1,QWORD PTR [rip+0x21b30]        # 4dcd8 <powers.0+0x18>
   2c1a8:	cvttsd2si ecx,xmm0
   2c1ac:	mov    rdi,r12
   2c1af:	mulsd  xmm1,xmm0
   2c1b3:	cvttsd2si r8d,xmm1
   2c1b8:	movsxd rax,r8d
   2c1bb:	mov    edx,r8d
   2c1be:	imul   rax,rax,0x51eb851f
   2c1c5:	sar    edx,0x1f
   2c1c8:	sar    rax,0x25
   2c1cc:	sub    eax,edx
   2c1ce:	lea    rdx,[rip+0x21ad8]        # 4dcad <__func__.0+0x67d>
   2c1d5:	imul   eax,eax,0x64
   2c1d8:	sub    r8d,eax
   2c1db:	xor    eax,eax
   2c1dd:	call   119f0 <wget_snprintf@plt>
   2c1e2:	mov    rax,r12
   2c1e5:	pop    r12
   2c1e7:	ret    
   2c1e8:	nop    DWORD PTR [rax+rax*1+0x0]
   2c1f0:	mov    ecx,edx
   2c1f2:	xor    eax,eax
   2c1f4:	lea    rdx,[rip+0x21aae]        # 4dca9 <__func__.0+0x679>
   2c1fb:	call   119f0 <wget_snprintf@plt>
   2c200:	mov    rax,r12
   2c203:	pop    r12
   2c205:	ret    
   2c206:	cs nop WORD PTR [rax+rax*1+0x0]
   2c210:	addsd  xmm0,QWORD PTR [rip+0x21ac8]        # 4dce0 <powers.0+0x20>
   2c218:	mov    rdi,r12
   2c21b:	mov    r8d,r9d
   2c21e:	xor    eax,eax
   2c220:	lea    rdx,[rip+0x21a90]        # 4dcb7 <__func__.0+0x687>
   2c227:	cvttsd2si ecx,xmm0
   2c22b:	call   119f0 <wget_snprintf@plt>
   2c230:	mov    rax,r12
   2c233:	pop    r12
   2c235:	ret    
   2c236:	mov    r9d,0x4b
   2c23c:	jmp    2c181 <wget_human_readable+0x51>
   2c241:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2c24c:	nop    DWORD PTR [rax+0x0]

000000000002c250 <wget_get_screen_size>:
   2c250:	endbr64 
   2c254:	push   rbp
   2c255:	mov    rbp,rdi
   2c258:	push   rbx
   2c259:	mov    rbx,rsi
   2c25c:	sub    rsp,0x18
   2c260:	mov    rax,QWORD PTR fs:0x28
   2c269:	mov    QWORD PTR [rsp+0x8],rax
   2c26e:	mov    rax,QWORD PTR [rip+0x49d3b]        # 75fb0 <stderr@GLIBC_2.2.5>
   2c275:	mov    rdi,QWORD PTR [rax]
   2c278:	call   11650 <fileno@plt>
   2c27d:	mov    rdx,rsp
   2c280:	mov    esi,0x5413
   2c285:	mov    edi,eax
   2c287:	xor    eax,eax
   2c289:	call   44610 <rpl_ioctl>
   2c28e:	test   eax,eax
   2c290:	js     2c2c8 <wget_get_screen_size+0x78>
   2c292:	test   rbp,rbp
   2c295:	je     2c29f <wget_get_screen_size+0x4f>
   2c297:	movzx  eax,WORD PTR [rsp+0x2]
   2c29c:	mov    DWORD PTR [rbp+0x0],eax
   2c29f:	xor    eax,eax
   2c2a1:	test   rbx,rbx
   2c2a4:	je     2c2ac <wget_get_screen_size+0x5c>
   2c2a6:	movzx  edx,WORD PTR [rsp]
   2c2aa:	mov    DWORD PTR [rbx],edx
   2c2ac:	mov    rdx,QWORD PTR [rsp+0x8]
   2c2b1:	sub    rdx,QWORD PTR fs:0x28
   2c2ba:	jne    2c2cf <wget_get_screen_size+0x7f>
   2c2bc:	add    rsp,0x18
   2c2c0:	pop    rbx
   2c2c1:	pop    rbp
   2c2c2:	ret    
   2c2c3:	nop    DWORD PTR [rax+rax*1+0x0]
   2c2c8:	mov    eax,0xffffffff
   2c2cd:	jmp    2c2ac <wget_get_screen_size+0x5c>
   2c2cf:	call   11760 <__stack_chk_fail@plt>
   2c2d4:	cs nop WORD PTR [rax+rax*1+0x0]
   2c2de:	xchg   ax,ax

000000000002c2e0 <compare_element>:
   2c2e0:	endbr64 
   2c2e4:	mov    rax,QWORD PTR [rdx]
   2c2e7:	mov    rsi,QWORD PTR [rsi]
   2c2ea:	mov    rdi,QWORD PTR [rdi]
   2c2ed:	jmp    rax
   2c2ef:	nop

000000000002c2f0 <insert_element>:
   2c2f0:	push   r14
   2c2f2:	push   r13
   2c2f4:	push   r12
   2c2f6:	push   rbp
   2c2f7:	push   rbx
   2c2f8:	test   edx,edx
   2c2fa:	js     2c460 <insert_element+0x170>
   2c300:	mov    rbx,rdi
   2c303:	test   rdi,rdi
   2c306:	je     2c460 <insert_element+0x170>
   2c30c:	mov    r12d,edx
   2c30f:	mov    edx,DWORD PTR [rdi+0x1c]
   2c312:	cmp    edx,r12d
   2c315:	jl     2c460 <insert_element+0x170>
   2c31b:	mov    rbp,rsi
   2c31e:	test   ecx,ecx
   2c320:	je     2c380 <insert_element+0x90>
   2c322:	movsxd r14,r12d
   2c325:	lea    r13,[r14*8+0x0]
   2c32d:	mov    rax,QWORD PTR [rbx+0x10]
   2c331:	mov    QWORD PTR [rax+r13*1],rbp
   2c335:	mov    rax,QWORD PTR [rbx]
   2c338:	test   rax,rax
   2c33b:	je     2c370 <insert_element+0x80>
   2c33d:	movsxd rdx,DWORD PTR [rbx+0x1c]
   2c341:	cmp    edx,0x1
   2c344:	je     2c400 <insert_element+0x110>
   2c34a:	jle    2c370 <insert_element+0x80>
   2c34c:	test   BYTE PTR [rbx+0x20],0x1
   2c350:	je     2c370 <insert_element+0x80>
   2c352:	mov    rcx,QWORD PTR [rbx+0x10]
   2c356:	test   r12d,r12d
   2c359:	jne    2c410 <insert_element+0x120>
   2c35f:	mov    rsi,QWORD PTR [rcx+0x8]
   2c363:	mov    rdi,rbp
   2c366:	call   rax
   2c368:	test   eax,eax
   2c36a:	jle    2c370 <insert_element+0x80>
   2c36c:	and    BYTE PTR [rbx+0x20],0xfe
   2c370:	pop    rbx
   2c371:	mov    eax,r12d
   2c374:	pop    rbp
   2c375:	pop    r12
   2c377:	pop    r13
   2c379:	pop    r14
   2c37b:	ret    
   2c37c:	nop    DWORD PTR [rax+0x0]
   2c380:	cmp    edx,DWORD PTR [rdi+0x18]
   2c383:	je     2c3b8 <insert_element+0xc8>
   2c385:	mov    rax,QWORD PTR [rdi+0x10]
   2c389:	movsxd r14,r12d
   2c38c:	sub    edx,r12d
   2c38f:	lea    r13,[r14*8+0x0]
   2c397:	movsxd rdx,edx
   2c39a:	shl    rdx,0x3
   2c39e:	lea    rsi,[rax+r13*1]
   2c3a2:	lea    rdi,[rax+r13*1+0x8]
   2c3a7:	call   12110 <memmove@plt>
   2c3ac:	add    DWORD PTR [rbx+0x1c],0x1
   2c3b0:	jmp    2c32d <insert_element+0x3d>
   2c3b5:	nop    DWORD PTR [rax]
   2c3b8:	pxor   xmm0,xmm0
   2c3bc:	cvtsi2ss xmm0,edx
   2c3c0:	mulss  xmm0,DWORD PTR [rdi+0x24]
   2c3c5:	cvttss2si r13d,xmm0
   2c3ca:	cmp    edx,r13d
   2c3cd:	jge    2c460 <insert_element+0x170>
   2c3d3:	mov    rax,QWORD PTR [rip+0x49ba6]        # 75f80 <wget_realloc_fn@@Base-0x1398>
   2c3da:	movsxd rsi,r13d
   2c3dd:	mov    rdi,QWORD PTR [rdi+0x10]
   2c3e1:	shl    rsi,0x3
   2c3e5:	call   QWORD PTR [rax]
   2c3e7:	test   rax,rax
   2c3ea:	je     2c46b <insert_element+0x17b>
   2c3ec:	mov    QWORD PTR [rbx+0x10],rax
   2c3f0:	mov    edx,DWORD PTR [rbx+0x1c]
   2c3f3:	mov    DWORD PTR [rbx+0x18],r13d
   2c3f7:	jmp    2c389 <insert_element+0x99>
   2c3f9:	nop    DWORD PTR [rax+0x0]
   2c400:	or     BYTE PTR [rbx+0x20],0x1
   2c404:	mov    eax,r12d
   2c407:	pop    rbx
   2c408:	pop    rbp
   2c409:	pop    r12
   2c40b:	pop    r13
   2c40d:	pop    r14
   2c40f:	ret    
   2c410:	lea    esi,[rdx-0x1]
   2c413:	cmp    esi,r12d
   2c416:	je     2c448 <insert_element+0x158>
   2c418:	mov    rsi,QWORD PTR [rcx+r13*1-0x8]
   2c41d:	mov    rdi,rbp
   2c420:	call   rax
   2c422:	test   eax,eax
   2c424:	js     2c36c <insert_element+0x7c>
   2c42a:	mov    rax,QWORD PTR [rbx+0x10]
   2c42e:	mov    rdi,rbp
   2c431:	mov    rsi,QWORD PTR [rax+r14*8+0x8]
   2c436:	call   QWORD PTR [rbx]
   2c438:	test   eax,eax
   2c43a:	jg     2c36c <insert_element+0x7c>
   2c440:	jmp    2c370 <insert_element+0x80>
   2c445:	nop    DWORD PTR [rax]
   2c448:	mov    rsi,QWORD PTR [rcx+rdx*8-0x10]
   2c44d:	mov    rdi,rbp
   2c450:	call   rax
   2c452:	test   eax,eax
   2c454:	jns    2c370 <insert_element+0x80>
   2c45a:	jmp    2c36c <insert_element+0x7c>
   2c45f:	nop
   2c460:	mov    r12d,0xfffffffd
   2c466:	jmp    2c370 <insert_element+0x80>
   2c46b:	mov    r12d,0xfffffffe
   2c471:	jmp    2c370 <insert_element+0x80>
   2c476:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002c480 <wget_vector_create>:
   2c480:	endbr64 
   2c484:	mov    rax,QWORD PTR [rip+0x49ab5]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   2c48b:	push   r12
   2c48d:	push   rbp
   2c48e:	mov    rbp,rsi
   2c491:	mov    esi,0x28
   2c496:	push   rbx
   2c497:	mov    ebx,edi
   2c499:	mov    edi,0x1
   2c49e:	call   QWORD PTR [rax]
   2c4a0:	mov    r12,rax
   2c4a3:	test   rax,rax
   2c4a6:	je     2c4e0 <wget_vector_create+0x60>
   2c4a8:	mov    rax,QWORD PTR [rip+0x49b21]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   2c4af:	movsxd rdi,ebx
   2c4b2:	shl    rdi,0x3
   2c4b6:	call   QWORD PTR [rax]
   2c4b8:	mov    QWORD PTR [r12+0x10],rax
   2c4bd:	test   rax,rax
   2c4c0:	je     2c4f0 <wget_vector_create+0x70>
   2c4c2:	mov    rax,QWORD PTR [rip+0x49ad7]        # 75fa0 <free@GLIBC_2.2.5>
   2c4c9:	mov    DWORD PTR [r12+0x18],ebx
   2c4ce:	mov    DWORD PTR [r12+0x24],0x40000000
   2c4d7:	mov    QWORD PTR [r12],rbp
   2c4db:	mov    QWORD PTR [r12+0x8],rax
   2c4e0:	mov    rax,r12
   2c4e3:	pop    rbx
   2c4e4:	pop    rbp
   2c4e5:	pop    r12
   2c4e7:	ret    
   2c4e8:	nop    DWORD PTR [rax+rax*1+0x0]
   2c4f0:	mov    rax,QWORD PTR [rip+0x49af1]        # 75fe8 <wget_free@@Base-0x1328>
   2c4f7:	mov    rdi,r12
   2c4fa:	xor    r12d,r12d
   2c4fd:	call   QWORD PTR [rax]
   2c4ff:	jmp    2c4e0 <wget_vector_create+0x60>
   2c501:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2c50c:	nop    DWORD PTR [rax+0x0]

000000000002c510 <wget_vector_set_resize_factor>:
   2c510:	endbr64 
   2c514:	test   rdi,rdi
   2c517:	je     2c51e <wget_vector_set_resize_factor+0xe>
   2c519:	movss  DWORD PTR [rdi+0x24],xmm0
   2c51e:	ret    
   2c51f:	nop

000000000002c520 <wget_vector_insert>:
   2c520:	endbr64 
   2c524:	xor    ecx,ecx
   2c526:	jmp    2c2f0 <insert_element>
   2c52b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000002c530 <wget_vector_add_memdup>:
   2c530:	endbr64 
   2c534:	push   r12
   2c536:	push   rbp
   2c537:	mov    rbp,rdi
   2c53a:	sub    rsp,0x18
   2c53e:	test   rdi,rdi
   2c541:	je     2c586 <wget_vector_add_memdup+0x56>
   2c543:	mov    rdi,rsi
   2c546:	mov    rsi,rdx
   2c549:	call   10dc0 <wget_memdup@plt>
   2c54e:	mov    r12,rax
   2c551:	test   rax,rax
   2c554:	je     2c58d <wget_vector_add_memdup+0x5d>
   2c556:	mov    edx,DWORD PTR [rbp+0x1c]
   2c559:	xor    ecx,ecx
   2c55b:	mov    rsi,rax
   2c55e:	mov    rdi,rbp
   2c561:	call   2c2f0 <insert_element>
   2c566:	test   eax,eax
   2c568:	jns    2c57e <wget_vector_add_memdup+0x4e>
   2c56a:	mov    rdx,QWORD PTR [rip+0x49a77]        # 75fe8 <wget_free@@Base-0x1328>
   2c571:	mov    DWORD PTR [rsp+0xc],eax
   2c575:	mov    rdi,r12
   2c578:	call   QWORD PTR [rdx]
   2c57a:	mov    eax,DWORD PTR [rsp+0xc]
   2c57e:	add    rsp,0x18
   2c582:	pop    rbp
   2c583:	pop    r12
   2c585:	ret    
   2c586:	mov    eax,0xfffffffd
   2c58b:	jmp    2c57e <wget_vector_add_memdup+0x4e>
   2c58d:	mov    eax,0xfffffffe
   2c592:	jmp    2c57e <wget_vector_add_memdup+0x4e>
   2c594:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2c59f:	nop

000000000002c5a0 <wget_vector_add>:
   2c5a0:	endbr64 
   2c5a4:	test   rdi,rdi
   2c5a7:	je     2c5b8 <wget_vector_add+0x18>
   2c5a9:	mov    edx,DWORD PTR [rdi+0x1c]
   2c5ac:	xor    ecx,ecx
   2c5ae:	jmp    2c2f0 <insert_element>
   2c5b3:	nop    DWORD PTR [rax+rax*1+0x0]
   2c5b8:	mov    eax,0xfffffffd
   2c5bd:	ret    
   2c5be:	xchg   ax,ax

000000000002c5c0 <wget_vector_add_vprintf>:
   2c5c0:	endbr64 
   2c5c4:	push   rbp
   2c5c5:	mov    rbp,rdi
   2c5c8:	test   rdi,rdi
   2c5cb:	je     2c5f8 <wget_vector_add_vprintf+0x38>
   2c5cd:	mov    rdi,rsi
   2c5d0:	test   rsi,rsi
   2c5d3:	je     2c5f8 <wget_vector_add_vprintf+0x38>
   2c5d5:	mov    rsi,rdx
   2c5d8:	call   10850 <wget_vaprintf@plt>
   2c5dd:	mov    rsi,rax
   2c5e0:	test   rax,rax
   2c5e3:	je     2c5ff <wget_vector_add_vprintf+0x3f>
   2c5e5:	mov    edx,DWORD PTR [rbp+0x1c]
   2c5e8:	mov    rdi,rbp
   2c5eb:	xor    ecx,ecx
   2c5ed:	pop    rbp
   2c5ee:	jmp    2c2f0 <insert_element>
   2c5f3:	nop    DWORD PTR [rax+rax*1+0x0]
   2c5f8:	mov    eax,0xfffffffd
   2c5fd:	pop    rbp
   2c5fe:	ret    
   2c5ff:	mov    eax,0xfffffffe
   2c604:	pop    rbp
   2c605:	ret    
   2c606:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002c610 <wget_vector_add_printf>:
   2c610:	endbr64 
   2c614:	push   rbp
   2c615:	mov    rbp,rdi
   2c618:	mov    rdi,rsi
   2c61b:	sub    rsp,0xd0
   2c622:	mov    QWORD PTR [rsp+0x30],rdx
   2c627:	mov    QWORD PTR [rsp+0x38],rcx
   2c62c:	mov    QWORD PTR [rsp+0x40],r8
   2c631:	mov    QWORD PTR [rsp+0x48],r9
   2c636:	test   al,al
   2c638:	je     2c671 <wget_vector_add_printf+0x61>
   2c63a:	movaps XMMWORD PTR [rsp+0x50],xmm0
   2c63f:	movaps XMMWORD PTR [rsp+0x60],xmm1
   2c644:	movaps XMMWORD PTR [rsp+0x70],xmm2
   2c649:	movaps XMMWORD PTR [rsp+0x80],xmm3
   2c651:	movaps XMMWORD PTR [rsp+0x90],xmm4
   2c659:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   2c661:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   2c669:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   2c671:	mov    rax,QWORD PTR fs:0x28
   2c67a:	mov    QWORD PTR [rsp+0x18],rax
   2c67f:	xor    eax,eax
   2c681:	test   rbp,rbp
   2c684:	je     2c6f0 <wget_vector_add_printf+0xe0>
   2c686:	test   rdi,rdi
   2c689:	je     2c6f0 <wget_vector_add_printf+0xe0>
   2c68b:	lea    rax,[rsp+0xe0]
   2c693:	mov    rsi,rsp
   2c696:	mov    DWORD PTR [rsp],0x10
   2c69d:	mov    QWORD PTR [rsp+0x8],rax
   2c6a2:	lea    rax,[rsp+0x20]
   2c6a7:	mov    DWORD PTR [rsp+0x4],0x30
   2c6af:	mov    QWORD PTR [rsp+0x10],rax
   2c6b4:	call   10850 <wget_vaprintf@plt>
   2c6b9:	mov    rsi,rax
   2c6bc:	test   rax,rax
   2c6bf:	je     2c6f7 <wget_vector_add_printf+0xe7>
   2c6c1:	mov    edx,DWORD PTR [rbp+0x1c]
   2c6c4:	xor    ecx,ecx
   2c6c6:	mov    rdi,rbp
   2c6c9:	call   2c2f0 <insert_element>
   2c6ce:	mov    rdx,QWORD PTR [rsp+0x18]
   2c6d3:	sub    rdx,QWORD PTR fs:0x28
   2c6dc:	jne    2c6fe <wget_vector_add_printf+0xee>
   2c6de:	add    rsp,0xd0
   2c6e5:	pop    rbp
   2c6e6:	ret    
   2c6e7:	nop    WORD PTR [rax+rax*1+0x0]
   2c6f0:	mov    eax,0xfffffffd
   2c6f5:	jmp    2c6ce <wget_vector_add_printf+0xbe>
   2c6f7:	mov    eax,0xfffffffe
   2c6fc:	jmp    2c6ce <wget_vector_add_printf+0xbe>
   2c6fe:	call   11760 <__stack_chk_fail@plt>
   2c703:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2c70e:	xchg   ax,ax

000000000002c710 <wget_vector_replace>:
   2c710:	endbr64 
   2c714:	test   rdi,rdi
   2c717:	je     2c76b <wget_vector_replace+0x5b>
   2c719:	push   r13
   2c71b:	push   r12
   2c71d:	mov    r12d,edx
   2c720:	push   rbp
   2c721:	test   edx,edx
   2c723:	js     2c760 <wget_vector_replace+0x50>
   2c725:	mov    rbp,rdi
   2c728:	cmp    DWORD PTR [rdi+0x1c],edx
   2c72b:	jle    2c760 <wget_vector_replace+0x50>
   2c72d:	mov    rdx,QWORD PTR [rdi+0x8]
   2c731:	mov    r13,rsi
   2c734:	test   rdx,rdx
   2c737:	je     2c746 <wget_vector_replace+0x36>
   2c739:	mov    rcx,QWORD PTR [rdi+0x10]
   2c73d:	movsxd rax,r12d
   2c740:	mov    rdi,QWORD PTR [rcx+rax*8]
   2c744:	call   rdx
   2c746:	mov    edx,r12d
   2c749:	mov    rsi,r13
   2c74c:	mov    rdi,rbp
   2c74f:	mov    ecx,0x1
   2c754:	pop    rbp
   2c755:	pop    r12
   2c757:	pop    r13
   2c759:	jmp    2c2f0 <insert_element>
   2c75e:	xchg   ax,ax
   2c760:	pop    rbp
   2c761:	mov    eax,0xfffffffd
   2c766:	pop    r12
   2c768:	pop    r13
   2c76a:	ret    
   2c76b:	mov    eax,0xfffffffd
   2c770:	ret    
   2c771:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2c77c:	nop    DWORD PTR [rax+0x0]

000000000002c780 <wget_vector_remove>:
   2c780:	endbr64 
   2c784:	test   esi,esi
   2c786:	js     2c7f7 <wget_vector_remove+0x77>
   2c788:	push   r12
   2c78a:	push   rbp
   2c78b:	push   rbx
   2c78c:	mov    rbx,rdi
   2c78f:	test   rdi,rdi
   2c792:	je     2c7f0 <wget_vector_remove+0x70>
   2c794:	mov    edx,DWORD PTR [rdi+0x1c]
   2c797:	mov    ebp,esi
   2c799:	cmp    esi,edx
   2c79b:	jge    2c7f0 <wget_vector_remove+0x70>
   2c79d:	mov    rax,QWORD PTR [rdi+0x8]
   2c7a1:	movsxd rcx,esi
   2c7a4:	lea    r12,[rcx*8+0x0]
   2c7ac:	test   rax,rax
   2c7af:	je     2c7be <wget_vector_remove+0x3e>
   2c7b1:	mov    rdx,QWORD PTR [rdi+0x10]
   2c7b5:	mov    rdi,QWORD PTR [rdx+rcx*8]
   2c7b9:	call   rax
   2c7bb:	mov    edx,DWORD PTR [rbx+0x1c]
   2c7be:	sub    edx,ebp
   2c7c0:	mov    rdi,QWORD PTR [rbx+0x10]
   2c7c4:	sub    edx,0x1
   2c7c7:	movsxd rdx,edx
   2c7ca:	lea    rsi,[rdi+r12*1+0x8]
   2c7cf:	add    rdi,r12
   2c7d2:	shl    rdx,0x3
   2c7d6:	call   12110 <memmove@plt>
   2c7db:	sub    DWORD PTR [rbx+0x1c],0x1
   2c7df:	mov    eax,ebp
   2c7e1:	pop    rbx
   2c7e2:	pop    rbp
   2c7e3:	pop    r12
   2c7e5:	ret    
   2c7e6:	cs nop WORD PTR [rax+rax*1+0x0]
   2c7f0:	mov    eax,0xfffffffd
   2c7f5:	jmp    2c7e1 <wget_vector_remove+0x61>
   2c7f7:	mov    eax,0xfffffffd
   2c7fc:	ret    
   2c7fd:	nop    DWORD PTR [rax]

000000000002c800 <wget_vector_remove_nofree>:
   2c800:	endbr64 
   2c804:	test   esi,esi
   2c806:	js     2c85f <wget_vector_remove_nofree+0x5f>
   2c808:	push   rbp
   2c809:	mov    rbp,rdi
   2c80c:	push   rbx
   2c80d:	sub    rsp,0x8
   2c811:	test   rdi,rdi
   2c814:	je     2c858 <wget_vector_remove_nofree+0x58>
   2c816:	mov    edx,DWORD PTR [rdi+0x1c]
   2c819:	mov    ebx,esi
   2c81b:	cmp    esi,edx
   2c81d:	jge    2c858 <wget_vector_remove_nofree+0x58>
   2c81f:	sub    edx,esi
   2c821:	mov    rcx,QWORD PTR [rdi+0x10]
   2c825:	movsxd rax,esi
   2c828:	sub    edx,0x1
   2c82b:	lea    rax,[rax*8+0x8]
   2c833:	movsxd rdx,edx
   2c836:	lea    rsi,[rcx+rax*1]
   2c83a:	lea    rdi,[rcx+rax*1-0x8]
   2c83f:	shl    rdx,0x3
   2c843:	call   12110 <memmove@plt>
   2c848:	sub    DWORD PTR [rbp+0x1c],0x1
   2c84c:	mov    eax,ebx
   2c84e:	add    rsp,0x8
   2c852:	pop    rbx
   2c853:	pop    rbp
   2c854:	ret    
   2c855:	nop    DWORD PTR [rax]
   2c858:	mov    eax,0xfffffffd
   2c85d:	jmp    2c84e <wget_vector_remove_nofree+0x4e>
   2c85f:	mov    eax,0xfffffffd
   2c864:	ret    
   2c865:	data16 cs nop WORD PTR [rax+rax*1+0x0]

000000000002c870 <wget_vector_move>:
   2c870:	endbr64 
   2c874:	push   r15
   2c876:	push   r14
   2c878:	push   r13
   2c87a:	push   r12
   2c87c:	push   rbp
   2c87d:	push   rbx
   2c87e:	sub    rsp,0x18
   2c882:	test   rdi,rdi
   2c885:	je     2c960 <wget_vector_move+0xf0>
   2c88b:	mov    ebx,esi
   2c88d:	test   esi,esi
   2c88f:	js     2c960 <wget_vector_move+0xf0>
   2c895:	cmp    esi,edx
   2c897:	mov    eax,edx
   2c899:	mov    rbp,rdi
   2c89c:	mov    r12d,edx
   2c89f:	cmovge eax,esi
   2c8a2:	cmp    DWORD PTR [rdi+0x1c],eax
   2c8a5:	jle    2c960 <wget_vector_move+0xf0>
   2c8ab:	test   edx,edx
   2c8ad:	js     2c960 <wget_vector_move+0xf0>
   2c8b3:	cmp    esi,edx
   2c8b5:	je     2c92c <wget_vector_move+0xbc>
   2c8b7:	mov    rax,QWORD PTR [rdi+0x10]
   2c8bb:	movsxd r13,edx
   2c8be:	movsxd rdx,esi
   2c8c1:	lea    rcx,[r13*8+0x0]
   2c8c9:	lea    r15,[rdx*8+0x0]
   2c8d1:	mov    rdi,QWORD PTR [rax+rdx*8]
   2c8d5:	test   BYTE PTR [rbp+0x20],0x1
   2c8d9:	je     2c900 <wget_vector_move+0x90>
   2c8db:	mov    rdx,QWORD PTR [rbp+0x0]
   2c8df:	test   rdx,rdx
   2c8e2:	je     2c900 <wget_vector_move+0x90>
   2c8e4:	mov    QWORD PTR [rsp+0x8],rcx
   2c8e9:	mov    rsi,QWORD PTR [rax+r13*8]
   2c8ed:	call   rdx
   2c8ef:	mov    rcx,QWORD PTR [rsp+0x8]
   2c8f4:	test   eax,eax
   2c8f6:	je     2c8fc <wget_vector_move+0x8c>
   2c8f8:	and    BYTE PTR [rbp+0x20],0xfe
   2c8fc:	mov    rax,QWORD PTR [rbp+0x10]
   2c900:	lea    rdi,[rax+r15*1]
   2c904:	mov    r14,QWORD PTR [rdi]
   2c907:	cmp    ebx,r12d
   2c90a:	jl     2c940 <wget_vector_move+0xd0>
   2c90c:	sub    ebx,r12d
   2c90f:	lea    rsi,[rax+rcx*1]
   2c913:	lea    rdi,[rax+rcx*1+0x8]
   2c918:	movsxd rdx,ebx
   2c91b:	shl    rdx,0x3
   2c91f:	call   12110 <memmove@plt>
   2c924:	mov    rax,QWORD PTR [rbp+0x10]
   2c928:	mov    QWORD PTR [rax+r13*8],r14
   2c92c:	add    rsp,0x18
   2c930:	mov    eax,r12d
   2c933:	pop    rbx
   2c934:	pop    rbp
   2c935:	pop    r12
   2c937:	pop    r13
   2c939:	pop    r14
   2c93b:	pop    r15
   2c93d:	ret    
   2c93e:	xchg   ax,ax
   2c940:	mov    edx,r12d
   2c943:	lea    rsi,[rax+r15*1+0x8]
   2c948:	sub    edx,ebx
   2c94a:	movsxd rdx,edx
   2c94d:	shl    rdx,0x3
   2c951:	call   12110 <memmove@plt>
   2c956:	jmp    2c924 <wget_vector_move+0xb4>
   2c958:	nop    DWORD PTR [rax+rax*1+0x0]
   2c960:	mov    r12d,0xfffffffd
   2c966:	jmp    2c92c <wget_vector_move+0xbc>
   2c968:	nop    DWORD PTR [rax+rax*1+0x0]

000000000002c970 <wget_vector_swap>:
   2c970:	endbr64 
   2c974:	test   rdi,rdi
   2c977:	je     2ca20 <wget_vector_swap+0xb0>
   2c97d:	test   esi,esi
   2c97f:	js     2ca20 <wget_vector_swap+0xb0>
   2c985:	push   rbp
   2c986:	mov    eax,edx
   2c988:	mov    rbp,rdi
   2c98b:	push   rbx
   2c98c:	mov    ebx,edx
   2c98e:	sub    rsp,0x8
   2c992:	cmp    esi,edx
   2c994:	cmovge eax,esi
   2c997:	cmp    DWORD PTR [rdi+0x1c],eax
   2c99a:	jle    2ca10 <wget_vector_swap+0xa0>
   2c99c:	test   edx,edx
   2c99e:	js     2ca10 <wget_vector_swap+0xa0>
   2c9a0:	cmp    esi,edx
   2c9a2:	je     2c9f0 <wget_vector_swap+0x80>
   2c9a4:	mov    rcx,QWORD PTR [rdi+0x10]
   2c9a8:	movsxd rax,ebx
   2c9ab:	movsxd rsi,esi
   2c9ae:	lea    rdx,[rcx+rsi*8]
   2c9b2:	mov    rcx,QWORD PTR [rcx+rax*8]
   2c9b6:	mov    rdi,QWORD PTR [rdx]
   2c9b9:	mov    QWORD PTR [rdx],rcx
   2c9bc:	mov    rdx,QWORD PTR [rbp+0x10]
   2c9c0:	mov    QWORD PTR [rdx+rax*8],rdi
   2c9c4:	test   BYTE PTR [rbp+0x20],0x1
   2c9c8:	je     2c9f0 <wget_vector_swap+0x80>
   2c9ca:	mov    rdx,QWORD PTR [rbp+0x0]
   2c9ce:	test   rdx,rdx
   2c9d1:	je     2c9f0 <wget_vector_swap+0x80>
   2c9d3:	mov    rcx,QWORD PTR [rbp+0x10]
   2c9d7:	mov    r8,QWORD PTR [rcx+rax*8]
   2c9db:	mov    rdi,QWORD PTR [rcx+rsi*8]
   2c9df:	mov    rsi,r8
   2c9e2:	call   rdx
   2c9e4:	test   eax,eax
   2c9e6:	jne    2ca00 <wget_vector_swap+0x90>
   2c9e8:	nop    DWORD PTR [rax+rax*1+0x0]
   2c9f0:	mov    eax,ebx
   2c9f2:	add    rsp,0x8
   2c9f6:	pop    rbx
   2c9f7:	pop    rbp
   2c9f8:	ret    
   2c9f9:	nop    DWORD PTR [rax+0x0]
   2ca00:	and    BYTE PTR [rbp+0x20],0xfe
   2ca04:	jmp    2c9f0 <wget_vector_swap+0x80>
   2ca06:	cs nop WORD PTR [rax+rax*1+0x0]
   2ca10:	mov    eax,0xfffffffd
   2ca15:	jmp    2c9f2 <wget_vector_swap+0x82>
   2ca17:	nop    WORD PTR [rax+rax*1+0x0]
   2ca20:	mov    eax,0xfffffffd
   2ca25:	ret    
   2ca26:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002ca30 <wget_vector_clear>:
   2ca30:	endbr64 
   2ca34:	test   rdi,rdi
   2ca37:	je     2ca98 <wget_vector_clear+0x68>
   2ca39:	push   rbp
   2ca3a:	push   rbx
   2ca3b:	mov    rbx,rdi
   2ca3e:	sub    rsp,0x8
   2ca42:	mov    rax,QWORD PTR [rdi+0x8]
   2ca46:	test   rax,rax
   2ca49:	je     2ca83 <wget_vector_clear+0x53>
   2ca4b:	mov    edx,DWORD PTR [rdi+0x1c]
   2ca4e:	test   edx,edx
   2ca50:	jle    2ca83 <wget_vector_clear+0x53>
   2ca52:	xor    ebp,ebp
   2ca54:	jmp    2ca64 <wget_vector_clear+0x34>
   2ca56:	cs nop WORD PTR [rax+rax*1+0x0]
   2ca60:	mov    rax,QWORD PTR [rbx+0x8]
   2ca64:	mov    rdx,QWORD PTR [rbx+0x10]
   2ca68:	mov    rdi,QWORD PTR [rdx+rbp*8]
   2ca6c:	call   rax
   2ca6e:	mov    rax,QWORD PTR [rbx+0x10]
   2ca72:	mov    QWORD PTR [rax+rbp*8],0x0
   2ca7a:	add    rbp,0x1
   2ca7e:	cmp    DWORD PTR [rbx+0x1c],ebp
   2ca81:	jg     2ca60 <wget_vector_clear+0x30>
   2ca83:	mov    DWORD PTR [rbx+0x1c],0x0
   2ca8a:	add    rsp,0x8
   2ca8e:	pop    rbx
   2ca8f:	pop    rbp
   2ca90:	ret    
   2ca91:	nop    DWORD PTR [rax+0x0]
   2ca98:	ret    
   2ca99:	nop    DWORD PTR [rax+0x0]

000000000002caa0 <wget_vector_free>:
   2caa0:	endbr64 
   2caa4:	test   rdi,rdi
   2caa7:	je     2cb00 <wget_vector_free+0x60>
   2caa9:	push   rbp
   2caaa:	push   rbx
   2caab:	mov    rbx,rdi
   2caae:	sub    rsp,0x8
   2cab2:	mov    rdi,QWORD PTR [rdi]
   2cab5:	test   rdi,rdi
   2cab8:	je     2caf5 <wget_vector_free+0x55>
   2caba:	call   11a30 <wget_vector_clear@plt>
   2cabf:	mov    rdi,QWORD PTR [rbx]
   2cac2:	mov    rbp,QWORD PTR [rip+0x4951f]        # 75fe8 <wget_free@@Base-0x1328>
   2cac9:	mov    r8,QWORD PTR [rdi+0x10]
   2cacd:	test   r8,r8
   2cad0:	je     2caeb <wget_vector_free+0x4b>
   2cad2:	mov    rdi,r8
   2cad5:	call   QWORD PTR [rbp+0x0]
   2cad8:	mov    rax,QWORD PTR [rbx]
   2cadb:	mov    QWORD PTR [rax+0x10],0x0
   2cae3:	mov    rdi,QWORD PTR [rbx]
   2cae6:	test   rdi,rdi
   2cae9:	je     2caf5 <wget_vector_free+0x55>
   2caeb:	call   QWORD PTR [rbp+0x0]
   2caee:	mov    QWORD PTR [rbx],0x0
   2caf5:	add    rsp,0x8
   2caf9:	pop    rbx
   2cafa:	pop    rbp
   2cafb:	ret    
   2cafc:	nop    DWORD PTR [rax+0x0]
   2cb00:	ret    
   2cb01:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2cb0c:	nop    DWORD PTR [rax+0x0]

000000000002cb10 <wget_vector_clear_nofree>:
   2cb10:	endbr64 
   2cb14:	test   rdi,rdi
   2cb17:	je     2cb4c <wget_vector_clear_nofree+0x3c>
   2cb19:	movsxd rcx,DWORD PTR [rdi+0x1c]
   2cb1d:	test   ecx,ecx
   2cb1f:	jle    2cb45 <wget_vector_clear_nofree+0x35>
   2cb21:	shl    rcx,0x3
   2cb25:	xor    eax,eax
   2cb27:	nop    WORD PTR [rax+rax*1+0x0]
   2cb30:	mov    rdx,QWORD PTR [rdi+0x10]
   2cb34:	mov    QWORD PTR [rdx+rax*1],0x0
   2cb3c:	add    rax,0x8
   2cb40:	cmp    rax,rcx
   2cb43:	jne    2cb30 <wget_vector_clear_nofree+0x20>
   2cb45:	mov    DWORD PTR [rdi+0x1c],0x0
   2cb4c:	ret    
   2cb4d:	nop    DWORD PTR [rax]

000000000002cb50 <wget_vector_size>:
   2cb50:	endbr64 
   2cb54:	xor    eax,eax
   2cb56:	test   rdi,rdi
   2cb59:	je     2cb5e <wget_vector_size+0xe>
   2cb5b:	mov    eax,DWORD PTR [rdi+0x1c]
   2cb5e:	ret    
   2cb5f:	nop

000000000002cb60 <wget_vector_get>:
   2cb60:	endbr64 
   2cb64:	test   esi,esi
   2cb66:	js     2cb80 <wget_vector_get+0x20>
   2cb68:	test   rdi,rdi
   2cb6b:	je     2cb80 <wget_vector_get+0x20>
   2cb6d:	cmp    DWORD PTR [rdi+0x1c],esi
   2cb70:	jle    2cb80 <wget_vector_get+0x20>
   2cb72:	mov    rax,QWORD PTR [rdi+0x10]
   2cb76:	movsxd rsi,esi
   2cb79:	mov    rax,QWORD PTR [rax+rsi*8]
   2cb7d:	ret    
   2cb7e:	xchg   ax,ax
   2cb80:	xor    eax,eax
   2cb82:	ret    
   2cb83:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2cb8e:	xchg   ax,ax

000000000002cb90 <wget_vector_browse>:
   2cb90:	endbr64 
   2cb94:	test   rdi,rdi
   2cb97:	je     2cc00 <wget_vector_browse+0x70>
   2cb99:	push   r13
   2cb9b:	push   r12
   2cb9d:	push   rbp
   2cb9e:	mov    rbp,rdi
   2cba1:	push   rbx
   2cba2:	sub    rsp,0x8
   2cba6:	mov    eax,DWORD PTR [rdi+0x1c]
   2cba9:	test   eax,eax
   2cbab:	jle    2cbf0 <wget_vector_browse+0x60>
   2cbad:	mov    r12,rsi
   2cbb0:	mov    r13,rdx
   2cbb3:	xor    ebx,ebx
   2cbb5:	jmp    2cbc9 <wget_vector_browse+0x39>
   2cbb7:	nop    WORD PTR [rax+rax*1+0x0]
   2cbc0:	add    rbx,0x1
   2cbc4:	cmp    DWORD PTR [rbp+0x1c],ebx
   2cbc7:	jle    2cbf0 <wget_vector_browse+0x60>
   2cbc9:	mov    rax,QWORD PTR [rbp+0x10]
   2cbcd:	mov    rdi,r13
   2cbd0:	mov    rsi,QWORD PTR [rax+rbx*8]
   2cbd4:	call   r12
   2cbd7:	test   eax,eax
   2cbd9:	je     2cbc0 <wget_vector_browse+0x30>
   2cbdb:	add    rsp,0x8
   2cbdf:	pop    rbx
   2cbe0:	pop    rbp
   2cbe1:	pop    r12
   2cbe3:	pop    r13
   2cbe5:	ret    
   2cbe6:	cs nop WORD PTR [rax+rax*1+0x0]
   2cbf0:	add    rsp,0x8
   2cbf4:	xor    eax,eax
   2cbf6:	pop    rbx
   2cbf7:	pop    rbp
   2cbf8:	pop    r12
   2cbfa:	pop    r13
   2cbfc:	ret    
   2cbfd:	nop    DWORD PTR [rax]
   2cc00:	xor    eax,eax
   2cc02:	ret    
   2cc03:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2cc0e:	xchg   ax,ax

000000000002cc10 <wget_vector_setcmpfunc>:
   2cc10:	endbr64 
   2cc14:	test   rdi,rdi
   2cc17:	je     2cc26 <wget_vector_setcmpfunc+0x16>
   2cc19:	cmp    DWORD PTR [rdi+0x1c],0x1
   2cc1d:	mov    QWORD PTR [rdi],rsi
   2cc20:	je     2cc30 <wget_vector_setcmpfunc+0x20>
   2cc22:	and    BYTE PTR [rdi+0x20],0xfe
   2cc26:	ret    
   2cc27:	nop    WORD PTR [rax+rax*1+0x0]
   2cc30:	or     BYTE PTR [rdi+0x20],0x1
   2cc34:	ret    
   2cc35:	data16 cs nop WORD PTR [rax+rax*1+0x0]

000000000002cc40 <wget_vector_set_destructor>:
   2cc40:	endbr64 
   2cc44:	test   rdi,rdi
   2cc47:	je     2cc4d <wget_vector_set_destructor+0xd>
   2cc49:	mov    QWORD PTR [rdi+0x8],rsi
   2cc4d:	ret    
   2cc4e:	xchg   ax,ax

000000000002cc50 <wget_vector_sort>:
   2cc50:	endbr64 
   2cc54:	test   rdi,rdi
   2cc57:	je     2cc88 <wget_vector_sort+0x38>
   2cc59:	push   rbx
   2cc5a:	cmp    QWORD PTR [rdi],0x0
   2cc5e:	mov    rbx,rdi
   2cc61:	je     2cc83 <wget_vector_sort+0x33>
   2cc63:	movsxd rsi,DWORD PTR [rdi+0x1c]
   2cc67:	mov    rdi,QWORD PTR [rdi+0x10]
   2cc6b:	mov    r8,rbx
   2cc6e:	lea    rcx,[rip+0xfffffffffffff66b]        # 2c2e0 <compare_element>
   2cc75:	mov    edx,0x8
   2cc7a:	call   121f0 <qsort_r@plt>
   2cc7f:	or     BYTE PTR [rbx+0x20],0x1
   2cc83:	pop    rbx
   2cc84:	ret    
   2cc85:	nop    DWORD PTR [rax]
   2cc88:	ret    
   2cc89:	nop    DWORD PTR [rax+0x0]

000000000002cc90 <wget_vector_insert_sorted>:
   2cc90:	endbr64 
   2cc94:	test   rdi,rdi
   2cc97:	je     2cd33 <wget_vector_insert_sorted+0xa3>
   2cc9d:	push   r14
   2cc9f:	mov    r14,rsi
   2cca2:	push   r13
   2cca4:	push   r12
   2cca6:	push   rbp
   2cca7:	mov    rbp,rdi
   2ccaa:	push   rbx
   2ccab:	cmp    QWORD PTR [rdi],0x0
   2ccaf:	je     2cd27 <wget_vector_insert_sorted+0x97>
   2ccb1:	test   BYTE PTR [rdi+0x20],0x1
   2ccb5:	je     2cd20 <wget_vector_insert_sorted+0x90>
   2ccb7:	mov    ebx,DWORD PTR [rbp+0x1c]
   2ccba:	sub    ebx,0x1
   2ccbd:	js     2cd2e <wget_vector_insert_sorted+0x9e>
   2ccbf:	xor    r13d,r13d
   2ccc2:	jmp    2ccd2 <wget_vector_insert_sorted+0x42>
   2ccc4:	nop    DWORD PTR [rax+0x0]
   2ccc8:	lea    r13d,[r12+0x1]
   2cccd:	cmp    ebx,r13d
   2ccd0:	jl     2ccfa <wget_vector_insert_sorted+0x6a>
   2ccd2:	lea    r12d,[rbx+r13*1]
   2ccd6:	mov    rax,QWORD PTR [rbp+0x10]
   2ccda:	mov    rdi,r14
   2ccdd:	sar    r12d,1
   2cce0:	movsxd rdx,r12d
   2cce3:	mov    rsi,QWORD PTR [rax+rdx*8]
   2cce7:	call   QWORD PTR [rbp+0x0]
   2ccea:	test   eax,eax
   2ccec:	jg     2ccc8 <wget_vector_insert_sorted+0x38>
   2ccee:	je     2cd05 <wget_vector_insert_sorted+0x75>
   2ccf0:	lea    ebx,[r12-0x1]
   2ccf5:	cmp    ebx,r13d
   2ccf8:	jge    2ccd2 <wget_vector_insert_sorted+0x42>
   2ccfa:	test   eax,eax
   2ccfc:	setg   al
   2ccff:	movzx  eax,al
   2cd02:	add    r12d,eax
   2cd05:	xor    ecx,ecx
   2cd07:	mov    edx,r12d
   2cd0a:	pop    rbx
   2cd0b:	mov    rsi,r14
   2cd0e:	mov    rdi,rbp
   2cd11:	pop    rbp
   2cd12:	pop    r12
   2cd14:	pop    r13
   2cd16:	pop    r14
   2cd18:	jmp    2c2f0 <insert_element>
   2cd1d:	nop    DWORD PTR [rax]
   2cd20:	call   108a0 <wget_vector_sort@plt>
   2cd25:	jmp    2ccb7 <wget_vector_insert_sorted+0x27>
   2cd27:	mov    edx,DWORD PTR [rdi+0x1c]
   2cd2a:	xor    ecx,ecx
   2cd2c:	jmp    2cd0a <wget_vector_insert_sorted+0x7a>
   2cd2e:	xor    r12d,r12d
   2cd31:	jmp    2cd05 <wget_vector_insert_sorted+0x75>
   2cd33:	mov    eax,0xfffffffd
   2cd38:	ret    
   2cd39:	nop    DWORD PTR [rax+0x0]

000000000002cd40 <wget_vector_find>:
   2cd40:	endbr64 
   2cd44:	push   r14
   2cd46:	push   r13
   2cd48:	push   r12
   2cd4a:	push   rbp
   2cd4b:	push   rbx
   2cd4c:	test   rdi,rdi
   2cd4f:	je     2ce2d <wget_vector_find+0xed>
   2cd55:	mov    rax,QWORD PTR [rdi]
   2cd58:	mov    r13,rdi
   2cd5b:	test   rax,rax
   2cd5e:	je     2ce2d <wget_vector_find+0xed>
   2cd64:	mov    edx,DWORD PTR [rdi+0x1c]
   2cd67:	mov    r14,rsi
   2cd6a:	cmp    edx,0x1
   2cd6d:	je     2ce10 <wget_vector_find+0xd0>
   2cd73:	test   BYTE PTR [rdi+0x20],0x1
   2cd77:	je     2cdd0 <wget_vector_find+0x90>
   2cd79:	sub    edx,0x1
   2cd7c:	mov    ebx,edx
   2cd7e:	js     2cdbc <wget_vector_find+0x7c>
   2cd80:	xor    ebp,ebp
   2cd82:	jmp    2cd95 <wget_vector_find+0x55>
   2cd84:	nop    DWORD PTR [rax+0x0]
   2cd88:	lea    ebp,[r12+0x1]
   2cd8d:	cmp    ebp,ebx
   2cd8f:	jg     2cdbc <wget_vector_find+0x7c>
   2cd91:	mov    rax,QWORD PTR [r13+0x0]
   2cd95:	lea    r12d,[rbp+rbx*1+0x0]
   2cd9a:	mov    rdx,QWORD PTR [r13+0x10]
   2cd9e:	mov    rdi,r14
   2cda1:	sar    r12d,1
   2cda4:	movsxd rcx,r12d
   2cda7:	mov    rsi,QWORD PTR [rdx+rcx*8]
   2cdab:	call   rax
   2cdad:	test   eax,eax
   2cdaf:	jg     2cd88 <wget_vector_find+0x48>
   2cdb1:	je     2cdc2 <wget_vector_find+0x82>
   2cdb3:	lea    ebx,[r12-0x1]
   2cdb8:	cmp    ebp,ebx
   2cdba:	jle    2cd91 <wget_vector_find+0x51>
   2cdbc:	mov    r12d,0xffffffff
   2cdc2:	pop    rbx
   2cdc3:	mov    eax,r12d
   2cdc6:	pop    rbp
   2cdc7:	pop    r12
   2cdc9:	pop    r13
   2cdcb:	pop    r14
   2cdcd:	ret    
   2cdce:	xchg   ax,ax
   2cdd0:	xor    ebx,ebx
   2cdd2:	test   edx,edx
   2cdd4:	jg     2cdee <wget_vector_find+0xae>
   2cdd6:	jmp    2cdbc <wget_vector_find+0x7c>
   2cdd8:	nop    DWORD PTR [rax+rax*1+0x0]
   2cde0:	add    rbx,0x1
   2cde4:	cmp    DWORD PTR [r13+0x1c],ebx
   2cde8:	jle    2cdbc <wget_vector_find+0x7c>
   2cdea:	mov    rax,QWORD PTR [r13+0x0]
   2cdee:	mov    rdx,QWORD PTR [r13+0x10]
   2cdf2:	mov    r12d,ebx
   2cdf5:	mov    rdi,r14
   2cdf8:	mov    rsi,QWORD PTR [rdx+rbx*8]
   2cdfc:	call   rax
   2cdfe:	test   eax,eax
   2ce00:	jne    2cde0 <wget_vector_find+0xa0>
   2ce02:	pop    rbx
   2ce03:	mov    eax,r12d
   2ce06:	pop    rbp
   2ce07:	pop    r12
   2ce09:	pop    r13
   2ce0b:	pop    r14
   2ce0d:	ret    
   2ce0e:	xchg   ax,ax
   2ce10:	mov    rdx,QWORD PTR [rdi+0x10]
   2ce14:	mov    rdi,r14
   2ce17:	mov    rsi,QWORD PTR [rdx]
   2ce1a:	call   rax
   2ce1c:	pop    rbx
   2ce1d:	pop    rbp
   2ce1e:	neg    eax
   2ce20:	sbb    r12d,r12d
   2ce23:	mov    eax,r12d
   2ce26:	pop    r12
   2ce28:	pop    r13
   2ce2a:	pop    r14
   2ce2c:	ret    
   2ce2d:	mov    r12d,0xfffffffd
   2ce33:	jmp    2cdc2 <wget_vector_find+0x82>
   2ce35:	data16 cs nop WORD PTR [rax+rax*1+0x0]

000000000002ce40 <wget_vector_contains>:
   2ce40:	endbr64 
   2ce44:	sub    rsp,0x8
   2ce48:	call   12000 <wget_vector_find@plt>
   2ce4d:	add    rsp,0x8
   2ce51:	not    eax
   2ce53:	shr    eax,0x1f
   2ce56:	ret    
   2ce57:	nop    WORD PTR [rax+rax*1+0x0]

000000000002ce60 <wget_vector_findext>:
   2ce60:	endbr64 
   2ce64:	push   r13
   2ce66:	push   r12
   2ce68:	push   rbp
   2ce69:	push   rbx
   2ce6a:	sub    rsp,0x8
   2ce6e:	test   rdi,rdi
   2ce71:	je     2cf24 <wget_vector_findext+0xc4>
   2ce77:	mov    rbx,rdi
   2ce7a:	mov    r12d,esi
   2ce7d:	mov    r13,rcx
   2ce80:	test   edx,edx
   2ce82:	je     2ced0 <wget_vector_findext+0x70>
   2ce84:	cmp    DWORD PTR [rdi+0x1c],esi
   2ce87:	jle    2cf10 <wget_vector_findext+0xb0>
   2ce8d:	test   esi,esi
   2ce8f:	js     2cf10 <wget_vector_findext+0xb0>
   2ce91:	movsxd rbp,esi
   2ce94:	shl    rbp,0x3
   2ce98:	jmp    2ceae <wget_vector_findext+0x4e>
   2ce9a:	nop    WORD PTR [rax+rax*1+0x0]
   2cea0:	sub    r12d,0x1
   2cea4:	sub    rbp,0x8
   2cea8:	cmp    r12d,0xffffffff
   2ceac:	je     2cf10 <wget_vector_findext+0xb0>
   2ceae:	mov    rax,QWORD PTR [rbx+0x10]
   2ceb2:	mov    rdi,QWORD PTR [rax+rbp*1]
   2ceb6:	call   r13
   2ceb9:	test   eax,eax
   2cebb:	jne    2cea0 <wget_vector_findext+0x40>
   2cebd:	add    rsp,0x8
   2cec1:	mov    eax,r12d
   2cec4:	pop    rbx
   2cec5:	pop    rbp
   2cec6:	pop    r12
   2cec8:	pop    r13
   2ceca:	ret    
   2cecb:	nop    DWORD PTR [rax+rax*1+0x0]
   2ced0:	test   esi,esi
   2ced2:	js     2cf10 <wget_vector_findext+0xb0>
   2ced4:	cmp    esi,DWORD PTR [rdi+0x1c]
   2ced7:	jge    2cf10 <wget_vector_findext+0xb0>
   2ced9:	movsxd rbp,esi
   2cedc:	shl    rbp,0x3
   2cee0:	jmp    2cef6 <wget_vector_findext+0x96>
   2cee2:	nop    WORD PTR [rax+rax*1+0x0]
   2cee8:	add    r12d,0x1
   2ceec:	add    rbp,0x8
   2cef0:	cmp    DWORD PTR [rbx+0x1c],r12d
   2cef4:	jle    2cf10 <wget_vector_findext+0xb0>
   2cef6:	mov    rax,QWORD PTR [rbx+0x10]
   2cefa:	mov    rdi,QWORD PTR [rax+rbp*1]
   2cefe:	call   r13
   2cf01:	test   eax,eax
   2cf03:	jne    2cee8 <wget_vector_findext+0x88>
   2cf05:	jmp    2cebd <wget_vector_findext+0x5d>
   2cf07:	nop    WORD PTR [rax+rax*1+0x0]
   2cf10:	add    rsp,0x8
   2cf14:	mov    r12d,0xffffffff
   2cf1a:	pop    rbx
   2cf1b:	mov    eax,r12d
   2cf1e:	pop    rbp
   2cf1f:	pop    r12
   2cf21:	pop    r13
   2cf23:	ret    
   2cf24:	mov    r12d,0xfffffffd
   2cf2a:	jmp    2cebd <wget_vector_findext+0x5d>
   2cf2c:	nop    DWORD PTR [rax+0x0]

000000000002cf30 <getToken>:
   2cf30:	push   r12
   2cf32:	push   rbp
   2cf33:	mov    rbp,rdi
   2cf36:	push   rbx
   2cf37:	mov    rbx,QWORD PTR [rdi+0x8]
   2cf3b:	movsx  esi,BYTE PTR [rbx]
   2cf3e:	mov    eax,esi
   2cf40:	test   esi,esi
   2cf42:	jne    2cf61 <getToken+0x31>
   2cf44:	jmp    2cff0 <getToken+0xc0>
   2cf49:	nop    DWORD PTR [rax+0x0]
   2cf50:	mov    QWORD PTR [rbp+0x8],rbx
   2cf54:	movsx  esi,BYTE PTR [rbx]
   2cf57:	mov    eax,esi
   2cf59:	test   esi,esi
   2cf5b:	je     2cff0 <getToken+0xc0>
   2cf61:	lea    edx,[rsi-0x9]
   2cf64:	mov    r12,rbx
   2cf67:	add    rbx,0x1
   2cf6b:	cmp    edx,0x4
   2cf6e:	jbe    2cf50 <getToken+0x20>
   2cf70:	cmp    esi,0x20
   2cf73:	je     2cf50 <getToken+0x20>
   2cf75:	and    eax,0xffffffdf
   2cf78:	mov    QWORD PTR [rbp+0x8],rbx
   2cf7c:	sub    eax,0x41
   2cf7f:	mov    QWORD PTR [rbp+0x10],r12
   2cf83:	cmp    al,0x19
   2cf85:	ja     2d000 <getToken+0xd0>
   2cf87:	movsx  eax,BYTE PTR [r12+0x1]
   2cf8d:	test   eax,eax
   2cf8f:	jne    2cfa7 <getToken+0x77>
   2cf91:	jmp    2cff0 <getToken+0xc0>
   2cf93:	nop    DWORD PTR [rax+rax*1+0x0]
   2cf98:	add    rbx,0x1
   2cf9c:	mov    QWORD PTR [rbp+0x8],rbx
   2cfa0:	movsx  eax,BYTE PTR [rbx]
   2cfa3:	test   eax,eax
   2cfa5:	je     2cff0 <getToken+0xc0>
   2cfa7:	lea    edx,[rax-0x9]
   2cfaa:	cmp    edx,0x4
   2cfad:	jbe    2cfbc <getToken+0x8c>
   2cfaf:	cmp    eax,0x20
   2cfb2:	je     2cfbc <getToken+0x8c>
   2cfb4:	sub    eax,0x3d
   2cfb7:	cmp    eax,0x1
   2cfba:	ja     2cf98 <getToken+0x68>
   2cfbc:	sub    rbx,r12
   2cfbf:	mov    rax,r12
   2cfc2:	mov    QWORD PTR [rbp+0x28],rbx
   2cfc6:	pop    rbx
   2cfc7:	pop    rbp
   2cfc8:	pop    r12
   2cfca:	ret    
   2cfcb:	nop    DWORD PTR [rax+rax*1+0x0]
   2cfd0:	movsx  eax,BYTE PTR [r12+0x1]
   2cfd6:	test   eax,eax
   2cfd8:	je     2cff0 <getToken+0xc0>
   2cfda:	lea    rdx,[r12+0x2]
   2cfdf:	mov    QWORD PTR [rbp+0x8],rdx
   2cfe3:	cmp    eax,0x3e
   2cfe6:	je     2d0f2 <getToken+0x1c2>
   2cfec:	nop    DWORD PTR [rax+0x0]
   2cff0:	xor    r12d,r12d
   2cff3:	mov    rax,r12
   2cff6:	pop    rbx
   2cff7:	pop    rbp
   2cff8:	pop    r12
   2cffa:	ret    
   2cffb:	nop    DWORD PTR [rax+rax*1+0x0]
   2d000:	cmp    esi,0x3c
   2d003:	je     2d0d2 <getToken+0x1a2>
   2d009:	jg     2d0b0 <getToken+0x180>
   2d00f:	cmp    esi,0x2f
   2d012:	je     2cfd0 <getToken+0xa0>
   2d014:	jle    2d070 <getToken+0x140>
   2d016:	lea    eax,[rsi-0x3d]
   2d019:	cmp    eax,0x1
   2d01c:	jbe    2d0c5 <getToken+0x195>
   2d022:	cmp    esi,0x2d
   2d025:	jne    2d151 <getToken+0x221>
   2d02b:	movsx  eax,BYTE PTR [r12+0x1]
   2d031:	test   eax,eax
   2d033:	je     2cff0 <getToken+0xc0>
   2d035:	cmp    eax,0x2d
   2d038:	jne    2d160 <getToken+0x230>
   2d03e:	lea    rax,[r12+0x2]
   2d043:	mov    QWORD PTR [rbp+0x8],rax
   2d047:	movsx  eax,BYTE PTR [r12+0x2]
   2d04d:	test   eax,eax
   2d04f:	je     2cff0 <getToken+0xc0>
   2d051:	lea    rdx,[r12+0x3]
   2d056:	mov    QWORD PTR [rbp+0x8],rdx
   2d05a:	cmp    eax,0x3e
   2d05d:	je     2d1ea <getToken+0x2ba>
   2d063:	mov    QWORD PTR [rbp+0x8],rbx
   2d067:	jmp    2d156 <getToken+0x226>
   2d06c:	nop    DWORD PTR [rax+0x0]
   2d070:	cmp    esi,0x22
   2d073:	je     2d07a <getToken+0x14a>
   2d075:	cmp    esi,0x27
   2d078:	jne    2d016 <getToken+0xe6>
   2d07a:	mov    QWORD PTR [rbp+0x10],rbx
   2d07e:	mov    rdi,rbx
   2d081:	call   109e0 <strchr@plt>
   2d086:	test   rax,rax
   2d089:	je     2cff0 <getToken+0xc0>
   2d08f:	lea    rdx,[rax+0x1]
   2d093:	sub    rax,r12
   2d096:	mov    r12,rbx
   2d099:	sub    rax,0x1
   2d09d:	mov    QWORD PTR [rbp+0x8],rdx
   2d0a1:	mov    QWORD PTR [rbp+0x28],rax
   2d0a5:	jmp    2cff3 <getToken+0xc3>
   2d0aa:	nop    WORD PTR [rax+rax*1+0x0]
   2d0b0:	cmp    esi,0x5f
   2d0b3:	je     2cf87 <getToken+0x57>
   2d0b9:	lea    eax,[rsi-0x3d]
   2d0bc:	cmp    eax,0x1
   2d0bf:	ja     2d151 <getToken+0x221>
   2d0c5:	mov    QWORD PTR [rbp+0x28],0x1
   2d0cd:	jmp    2cff3 <getToken+0xc3>
   2d0d2:	movsx  edx,BYTE PTR [r12+0x1]
   2d0d8:	mov    eax,edx
   2d0da:	test   edx,edx
   2d0dc:	je     2cff0 <getToken+0xc0>
   2d0e2:	lea    rcx,[r12+0x2]
   2d0e7:	and    eax,0xffffffef
   2d0ea:	mov    QWORD PTR [rbp+0x8],rcx
   2d0ee:	cmp    al,0x2f
   2d0f0:	jne    2d0ff <getToken+0x1cf>
   2d0f2:	mov    QWORD PTR [rbp+0x28],0x2
   2d0fa:	jmp    2cff3 <getToken+0xc3>
   2d0ff:	cmp    edx,0x21
   2d102:	jne    2d181 <getToken+0x251>
   2d104:	movsx  eax,BYTE PTR [r12+0x2]
   2d10a:	test   eax,eax
   2d10c:	je     2cff0 <getToken+0xc0>
   2d112:	cmp    eax,0x2d
   2d115:	jne    2d0f2 <getToken+0x1c2>
   2d117:	lea    rax,[r12+0x3]
   2d11c:	mov    QWORD PTR [rbp+0x8],rax
   2d120:	movsx  eax,BYTE PTR [r12+0x3]
   2d126:	test   eax,eax
   2d128:	je     2cff0 <getToken+0xc0>
   2d12e:	lea    rdx,[r12+0x4]
   2d133:	mov    QWORD PTR [rbp+0x8],rdx
   2d137:	cmp    eax,0x2d
   2d13a:	je     2d1dd <getToken+0x2ad>
   2d140:	mov    QWORD PTR [rbp+0x8],rcx
   2d144:	mov    QWORD PTR [rbp+0x28],0x2
   2d14c:	jmp    2cff3 <getToken+0xc3>
   2d151:	cmp    esi,0x3f
   2d154:	je     2d1bc <getToken+0x28c>
   2d156:	movsx  eax,BYTE PTR [r12+0x1]
   2d15c:	jmp    2d178 <getToken+0x248>
   2d15e:	xchg   ax,ax
   2d160:	lea    edx,[rax-0x9]
   2d163:	cmp    edx,0x4
   2d166:	jbe    2d192 <getToken+0x262>
   2d168:	cmp    eax,0x20
   2d16b:	je     2d192 <getToken+0x262>
   2d16d:	add    rbx,0x1
   2d171:	mov    QWORD PTR [rbp+0x8],rbx
   2d175:	movsx  eax,BYTE PTR [rbx]
   2d178:	test   eax,eax
   2d17a:	jne    2d160 <getToken+0x230>
   2d17c:	jmp    2cff0 <getToken+0xc0>
   2d181:	mov    QWORD PTR [rbp+0x8],rbx
   2d185:	mov    QWORD PTR [rbp+0x28],0x1
   2d18d:	jmp    2cff3 <getToken+0xc3>
   2d192:	mov    esi,ebx
   2d194:	mov    rdx,r12
   2d197:	lea    rdi,[rip+0x20b4a]        # 4dce8 <powers.0+0x28>
   2d19e:	xor    eax,eax
   2d1a0:	sub    esi,r12d
   2d1a3:	call   114b0 <wget_debug_printf@plt>
   2d1a8:	mov    r12,QWORD PTR [rbp+0x10]
   2d1ac:	mov    rax,QWORD PTR [rbp+0x8]
   2d1b0:	sub    rax,r12
   2d1b3:	mov    QWORD PTR [rbp+0x28],rax
   2d1b7:	jmp    2cff3 <getToken+0xc3>
   2d1bc:	movsx  eax,BYTE PTR [r12+0x1]
   2d1c2:	test   eax,eax
   2d1c4:	je     2cff0 <getToken+0xc0>
   2d1ca:	cmp    eax,0x3e
   2d1cd:	jne    2d160 <getToken+0x230>
   2d1cf:	lea    rax,[r12+0x2]
   2d1d4:	mov    QWORD PTR [rbp+0x8],rax
   2d1d8:	jmp    2d0f2 <getToken+0x1c2>
   2d1dd:	mov    QWORD PTR [rbp+0x28],0x4
   2d1e5:	jmp    2cff3 <getToken+0xc3>
   2d1ea:	mov    QWORD PTR [rbp+0x28],0x3
   2d1f2:	jmp    2cff3 <getToken+0xc3>
   2d1f7:	nop    WORD PTR [rax+rax*1+0x0]

000000000002d200 <getUnparsed.constprop.0.isra.0>:
   2d200:	mov    r8,QWORD PTR [rdi+0x8]
   2d204:	mov    r10d,esi
   2d207:	mov    QWORD PTR [rdi+0x10],r8
   2d20b:	movzx  esi,BYTE PTR [r8]
   2d20f:	cmp    rcx,0x1
   2d213:	je     2d2b0 <getUnparsed.constprop.0.isra.0+0xb0>
   2d219:	test   sil,sil
   2d21c:	je     2d2e1 <getUnparsed.constprop.0.isra.0+0xe1>
   2d222:	lea    rax,[r8+0x1]
   2d226:	jmp    2d243 <getUnparsed.constprop.0.isra.0+0x43>
   2d228:	nop    DWORD PTR [rax+rax*1+0x0]
   2d230:	mov    QWORD PTR [rdi+0x8],rax
   2d234:	mov    r9,rax
   2d237:	movzx  esi,BYTE PTR [rax]
   2d23a:	add    rax,0x1
   2d23e:	test   sil,sil
   2d241:	je     2d2a0 <getUnparsed.constprop.0.isra.0+0xa0>
   2d243:	cmp    BYTE PTR [rdx],sil
   2d246:	jne    2d230 <getUnparsed.constprop.0.isra.0+0x30>
   2d248:	movzx  esi,BYTE PTR [rdx+0x1]
   2d24c:	cmp    BYTE PTR [rax],sil
   2d24f:	jne    2d230 <getUnparsed.constprop.0.isra.0+0x30>
   2d251:	cmp    rcx,0x2
   2d255:	je     2d261 <getUnparsed.constprop.0.isra.0+0x61>
   2d257:	movzx  esi,BYTE PTR [rdx+0x2]
   2d25b:	cmp    BYTE PTR [rax+0x1],sil
   2d25f:	jne    2d230 <getUnparsed.constprop.0.isra.0+0x30>
   2d261:	mov    rax,QWORD PTR [rdi+0x8]
   2d265:	mov    r9,rax
   2d268:	add    rax,rcx
   2d26b:	sub    r9,r8
   2d26e:	mov    QWORD PTR [rdi+0x8],rax
   2d272:	mov    QWORD PTR [rdi+0x28],r9
   2d276:	mov    rax,QWORD PTR [rdi+0x38]
   2d27a:	test   rax,rax
   2d27d:	je     2d2e0 <getUnparsed.constprop.0.isra.0+0xe0>
   2d27f:	sub    rsp,0x10
   2d283:	mov    rdx,r8
   2d286:	sub    rdx,QWORD PTR [rdi]
   2d289:	mov    r11,QWORD PTR [rdi+0x30]
   2d28d:	push   rdx
   2d28e:	xor    ecx,ecx
   2d290:	xor    edx,edx
   2d292:	mov    esi,r10d
   2d295:	mov    rdi,r11
   2d298:	call   rax
   2d29a:	add    rsp,0x18
   2d29e:	ret    
   2d29f:	nop
   2d2a0:	sub    r9,r8
   2d2a3:	mov    QWORD PTR [rdi+0x28],r9
   2d2a7:	jne    2d276 <getUnparsed.constprop.0.isra.0+0x76>
   2d2a9:	ret    
   2d2aa:	nop    WORD PTR [rax+rax*1+0x0]
   2d2b0:	test   sil,sil
   2d2b3:	je     2d2e1 <getUnparsed.constprop.0.isra.0+0xe1>
   2d2b5:	lea    rax,[r8+0x1]
   2d2b9:	jmp    2d2d3 <getUnparsed.constprop.0.isra.0+0xd3>
   2d2bb:	nop    DWORD PTR [rax+rax*1+0x0]
   2d2c0:	mov    QWORD PTR [rdi+0x8],rax
   2d2c4:	mov    r9,rax
   2d2c7:	movzx  esi,BYTE PTR [rax]
   2d2ca:	add    rax,0x1
   2d2ce:	test   sil,sil
   2d2d1:	je     2d2a0 <getUnparsed.constprop.0.isra.0+0xa0>
   2d2d3:	cmp    BYTE PTR [rdx],sil
   2d2d6:	jne    2d2c0 <getUnparsed.constprop.0.isra.0+0xc0>
   2d2d8:	jmp    2d261 <getUnparsed.constprop.0.isra.0+0x61>
   2d2dd:	nop    DWORD PTR [rax]
   2d2e0:	ret    
   2d2e1:	mov    QWORD PTR [rdi+0x28],0x0
   2d2e9:	ret    
   2d2ea:	nop    WORD PTR [rax+rax*1+0x0]

000000000002d2f0 <parseXML>:
   2d2f0:	push   r15
   2d2f2:	pxor   xmm0,xmm0
   2d2f6:	mov    r15,rsi
   2d2f9:	push   r14
   2d2fb:	push   r13
   2d2fd:	push   r12
   2d2ff:	push   rbp
   2d300:	push   rbx
   2d301:	sub    rsp,0x228
   2d308:	mov    rax,QWORD PTR fs:0x28
   2d311:	mov    QWORD PTR [rsp+0x218],rax
   2d319:	xor    eax,eax
   2d31b:	mov    QWORD PTR [rsp],0x0
   2d323:	movaps XMMWORD PTR [rsp+0x10],xmm0
   2d328:	movaps XMMWORD PTR [rsp+0x20],xmm0
   2d32d:	movaps XMMWORD PTR [rsp+0x30],xmm0
   2d332:	movaps XMMWORD PTR [rsp+0x40],xmm0
   2d337:	movaps XMMWORD PTR [rsp+0x50],xmm0
   2d33c:	movaps XMMWORD PTR [rsp+0x60],xmm0
   2d341:	movaps XMMWORD PTR [rsp+0x70],xmm0
   2d346:	movaps XMMWORD PTR [rsp+0x80],xmm0
   2d34e:	movaps XMMWORD PTR [rsp+0x90],xmm0
   2d356:	movaps XMMWORD PTR [rsp+0xa0],xmm0
   2d35e:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   2d366:	movaps XMMWORD PTR [rsp+0xc0],xmm0
   2d36e:	movaps XMMWORD PTR [rsp+0xd0],xmm0
   2d376:	movaps XMMWORD PTR [rsp+0xe0],xmm0
   2d37e:	movaps XMMWORD PTR [rsp+0xf0],xmm0
   2d386:	movaps XMMWORD PTR [rsp+0x100],xmm0
   2d38e:	test   BYTE PTR [rsi+0x18],0x2
   2d392:	je     2d8e9 <parseXML+0x5f9>
   2d398:	lea    r12,[rip+0x20959]        # 4dcf8 <powers.0+0x38>
   2d39f:	nop
   2d3a0:	mov    r8,QWORD PTR [r15+0x8]
   2d3a4:	mov    QWORD PTR [r15+0x10],r8
   2d3a8:	movsx  eax,BYTE PTR [r8]
   2d3ac:	mov    r9,r8
   2d3af:	test   eax,eax
   2d3b1:	jne    2d3d4 <parseXML+0xe4>
   2d3b3:	jmp    2d848 <parseXML+0x558>
   2d3b8:	nop    DWORD PTR [rax+rax*1+0x0]
   2d3c0:	add    r9,0x1
   2d3c4:	mov    QWORD PTR [r15+0x8],r9
   2d3c8:	movsx  eax,BYTE PTR [r9]
   2d3cc:	test   eax,eax
   2d3ce:	je     2d4b0 <parseXML+0x1c0>
   2d3d4:	cmp    eax,0x3c
   2d3d7:	jne    2d3c0 <parseXML+0xd0>
   2d3d9:	sub    r9,r8
   2d3dc:	mov    rax,QWORD PTR [r15+0x38]
   2d3e0:	mov    QWORD PTR [r15+0x28],r9
   2d3e4:	je     2d400 <parseXML+0x110>
   2d3e6:	test   rax,rax
   2d3e9:	jne    2d4c6 <parseXML+0x1d6>
   2d3ef:	test   r9,r9
   2d3f2:	jne    2d4f4 <parseXML+0x204>
   2d3f8:	nop    DWORD PTR [rax+rax*1+0x0]
   2d400:	mov    rdi,r15
   2d403:	call   2cf30 <getToken>
   2d408:	mov    rdi,rax
   2d40b:	test   rax,rax
   2d40e:	je     2d4a7 <parseXML+0x1b7>
   2d414:	mov    rax,QWORD PTR [r15+0x28]
   2d418:	cmp    rax,0x1
   2d41c:	je     2d518 <parseXML+0x228>
   2d422:	cmp    rax,0x2
   2d426:	jne    2d678 <parseXML+0x388>
   2d42c:	movzx  eax,BYTE PTR [rdi]
   2d42f:	cmp    eax,0x3c
   2d432:	jne    2d3a0 <parseXML+0xb0>
   2d438:	cmp    BYTE PTR [rdi+0x1],0x2f
   2d43c:	jne    2d855 <parseXML+0x565>
   2d442:	mov    rdi,r15
   2d445:	call   2cf30 <getToken>
   2d44a:	mov    rbp,rax
   2d44d:	test   rax,rax
   2d450:	je     2d798 <parseXML+0x4a8>
   2d456:	mov    rbx,QWORD PTR [r15+0x38]
   2d45a:	test   rbx,rbx
   2d45d:	je     2d48b <parseXML+0x19b>
   2d45f:	test   BYTE PTR [r15+0x18],0x2
   2d464:	jne    2d7c6 <parseXML+0x4d6>
   2d46a:	lea    rdx,[rsp+0x10]
   2d46f:	sub    rsp,0x8
   2d473:	mov    rdi,QWORD PTR [r15+0x30]
   2d477:	xor    r8d,r8d
   2d47a:	push   0x0
   2d47c:	xor    r9d,r9d
   2d47f:	xor    ecx,ecx
   2d481:	mov    esi,0x4
   2d486:	call   rbx
   2d488:	pop    rdi
   2d489:	pop    r8
   2d48b:	mov    rdi,r15
   2d48e:	call   2cf30 <getToken>
   2d493:	test   rax,rax
   2d496:	je     2d798 <parseXML+0x4a8>
   2d49c:	test   BYTE PTR [r15+0x18],0x2
   2d4a1:	jne    2d3a0 <parseXML+0xb0>
   2d4a7:	xor    eax,eax
   2d4a9:	jmp    2d79d <parseXML+0x4ad>
   2d4ae:	xchg   ax,ax
   2d4b0:	sub    r9,r8
   2d4b3:	mov    QWORD PTR [r15+0x28],r9
   2d4b7:	je     2d400 <parseXML+0x110>
   2d4bd:	mov    rax,QWORD PTR [r15+0x38]
   2d4c1:	test   rax,rax
   2d4c4:	je     2d4f8 <parseXML+0x208>
   2d4c6:	lea    rdx,[rsp+0x10]
   2d4cb:	mov    rcx,r8
   2d4ce:	sub    rsp,0x8
   2d4d2:	sub    rcx,QWORD PTR [r15]
   2d4d5:	push   rcx
   2d4d6:	mov    rdi,QWORD PTR [r15+0x30]
   2d4da:	xor    ecx,ecx
   2d4dc:	mov    esi,0x10
   2d4e1:	call   rax
   2d4e3:	mov    r9,QWORD PTR [r15+0x28]
   2d4e7:	pop    r10
   2d4e9:	pop    r11
   2d4eb:	test   r9,r9
   2d4ee:	je     2d400 <parseXML+0x110>
   2d4f4:	mov    r8,QWORD PTR [r15+0x10]
   2d4f8:	lea    rsi,[rsp+0x10]
   2d4fd:	mov    rcx,r8
   2d500:	mov    edx,r9d
   2d503:	mov    rdi,r12
   2d506:	xor    eax,eax
   2d508:	call   114b0 <wget_debug_printf@plt>
   2d50d:	jmp    2d400 <parseXML+0x110>
   2d512:	nop    WORD PTR [rax+rax*1+0x0]
   2d518:	cmp    BYTE PTR [rdi],0x3c
   2d51b:	jne    2d3a0 <parseXML+0xb0>
   2d521:	mov    rdi,r15
   2d524:	call   2cf30 <getToken>
   2d529:	mov    r8,rax
   2d52c:	test   rax,rax
   2d52f:	je     2d798 <parseXML+0x4a8>
   2d535:	test   BYTE PTR [r15+0x18],0x2
   2d53a:	jne    2d916 <parseXML+0x626>
   2d540:	mov    rax,QWORD PTR [rsp]
   2d544:	mov    esi,0x100
   2d549:	lea    rbp,[rsp+0x10]
   2d54e:	sub    rsi,rax
   2d551:	lea    rdi,[rbp+rax*1+0x0]
   2d556:	test   rax,rax
   2d559:	je     2d566 <parseXML+0x276>
   2d55b:	cmp    BYTE PTR [rsp+rax*1+0xf],0x2f
   2d560:	je     2db30 <parseXML+0x840>
   2d566:	mov    ecx,DWORD PTR [r15+0x28]
   2d56a:	lea    rdx,[rip+0x20792]        # 4dd03 <powers.0+0x43>
   2d571:	xor    eax,eax
   2d573:	call   119f0 <wget_snprintf@plt>
   2d578:	mov    ebx,0x1
   2d57d:	nop    DWORD PTR [rax]
   2d580:	mov    rdi,r15
   2d583:	call   2cf30 <getToken>
   2d588:	mov    rsi,rax
   2d58b:	test   rax,rax
   2d58e:	je     2d4a7 <parseXML+0x1b7>
   2d594:	mov    rdx,QWORD PTR [r15+0x28]
   2d598:	cmp    rdx,0x2
   2d59c:	je     2d950 <parseXML+0x660>
   2d5a2:	cmp    rdx,0x1
   2d5a6:	jne    2d5b1 <parseXML+0x2c1>
   2d5a8:	cmp    BYTE PTR [rsi],0x3e
   2d5ab:	je     2da91 <parseXML+0x7a1>
   2d5b1:	mov    eax,0xff
   2d5b6:	lea    r13,[rsp+0x110]
   2d5be:	mov    ecx,0x100
   2d5c3:	cmp    rdx,rax
   2d5c6:	mov    rdi,r13
   2d5c9:	cmovbe rax,rdx
   2d5cd:	mov    rdx,rax
   2d5d0:	mov    r14,rax
   2d5d3:	call   122a0 <__memcpy_chk@plt>
   2d5d8:	mov    rax,QWORD PTR [r15+0x8]
   2d5dc:	mov    BYTE PTR [rsp+r14*1+0x110],0x0
   2d5e5:	mov    QWORD PTR [r15+0x28],0x0
   2d5ed:	mov    QWORD PTR [r15+0x10],rax
   2d5f1:	movsx  edx,BYTE PTR [rax]
   2d5f4:	test   edx,edx
   2d5f6:	jne    2d613 <parseXML+0x323>
   2d5f8:	jmp    2d798 <parseXML+0x4a8>
   2d5fd:	nop    DWORD PTR [rax]
   2d600:	add    rax,0x1
   2d604:	mov    QWORD PTR [r15+0x8],rax
   2d608:	movsx  edx,BYTE PTR [rax]
   2d60b:	test   edx,edx
   2d60d:	je     2d798 <parseXML+0x4a8>
   2d613:	lea    ecx,[rdx-0x9]
   2d616:	cmp    ecx,0x4
   2d619:	jbe    2d600 <parseXML+0x310>
   2d61b:	cmp    edx,0x20
   2d61e:	je     2d600 <parseXML+0x310>
   2d620:	cmp    edx,0x3d
   2d623:	je     2d6d4 <parseXML+0x3e4>
   2d629:	mov    QWORD PTR [r15+0x10],rax
   2d62d:	xor    eax,eax
   2d62f:	mov    rdx,r13
   2d632:	lea    rdi,[rip+0x206f3]        # 4dd2c <powers.0+0x6c>
   2d639:	mov    rsi,rbp
   2d63c:	call   114b0 <wget_debug_printf@plt>
   2d641:	mov    rax,QWORD PTR [r15+0x38]
   2d645:	test   rax,rax
   2d648:	je     2d66b <parseXML+0x37b>
   2d64a:	sub    rsp,0x8
   2d64e:	or     ebx,0x8
   2d651:	xor    r9d,r9d
   2d654:	mov    rdi,QWORD PTR [r15+0x30]
   2d658:	push   0x0
   2d65a:	mov    esi,ebx
   2d65c:	xor    r8d,r8d
   2d65f:	mov    rcx,r13
   2d662:	mov    rdx,rbp
   2d665:	call   rax
   2d667:	pop    r9
   2d669:	pop    r10
   2d66b:	xor    ebx,ebx
   2d66d:	jmp    2d580 <parseXML+0x290>
   2d672:	nop    WORD PTR [rax+rax*1+0x0]
   2d678:	cmp    rax,0x4
   2d67c:	jne    2d3a0 <parseXML+0xb0>
   2d682:	mov    edx,0x4
   2d687:	lea    rsi,[rip+0x2067b]        # 4dd09 <powers.0+0x49>
   2d68e:	call   10b10 <strncmp@plt>
   2d693:	test   eax,eax
   2d695:	jne    2d3a0 <parseXML+0xb0>
   2d69b:	mov    rdi,r15
   2d69e:	mov    ecx,0x3
   2d6a3:	mov    esi,0x20
   2d6a8:	lea    rdx,[rip+0x206a1]        # 4dd50 <powers.0+0x90>
   2d6af:	call   2d200 <getUnparsed.constprop.0.isra.0>
   2d6b4:	mov    rcx,QWORD PTR [r15+0x10]
   2d6b8:	mov    edx,DWORD PTR [r15+0x28]
   2d6bc:	xor    eax,eax
   2d6be:	lea    rsi,[rsp+0x10]
   2d6c3:	lea    rdi,[rip+0x2068a]        # 4dd54 <powers.0+0x94>
   2d6ca:	call   114b0 <wget_debug_printf@plt>
   2d6cf:	jmp    2d3a0 <parseXML+0xb0>
   2d6d4:	lea    rdi,[rax+0x1]
   2d6d8:	mov    QWORD PTR [r15+0x8],rdi
   2d6dc:	test   BYTE PTR [r15+0x18],0x2
   2d6e1:	je     2d9a0 <parseXML+0x6b0>
   2d6e7:	movsx  esi,BYTE PTR [rax+0x1]
   2d6eb:	test   esi,esi
   2d6ed:	jne    2d707 <parseXML+0x417>
   2d6ef:	jmp    2d798 <parseXML+0x4a8>
   2d6f4:	nop    DWORD PTR [rax+0x0]
   2d6f8:	mov    QWORD PTR [r15+0x8],rdi
   2d6fc:	movsx  esi,BYTE PTR [rdi]
   2d6ff:	test   esi,esi
   2d701:	je     2d798 <parseXML+0x4a8>
   2d707:	lea    eax,[rsi-0x9]
   2d70a:	mov    r14,rdi
   2d70d:	add    rdi,0x1
   2d711:	cmp    eax,0x4
   2d714:	jbe    2d6f8 <parseXML+0x408>
   2d716:	cmp    esi,0x20
   2d719:	je     2d6f8 <parseXML+0x408>
   2d71b:	lea    eax,[rsi-0x22]
   2d71e:	mov    QWORD PTR [r15+0x8],rdi
   2d722:	mov    QWORD PTR [r15+0x10],r14
   2d726:	cmp    eax,0x3e
   2d729:	jbe    2da11 <parseXML+0x721>
   2d72f:	movsx  eax,BYTE PTR [r14+0x1]
   2d734:	test   eax,eax
   2d736:	jne    2d74f <parseXML+0x45f>
   2d738:	jmp    2d798 <parseXML+0x4a8>
   2d73a:	nop    WORD PTR [rax+rax*1+0x0]
   2d740:	add    rdi,0x1
   2d744:	mov    QWORD PTR [r15+0x8],rdi
   2d748:	movsx  eax,BYTE PTR [rdi]
   2d74b:	test   eax,eax
   2d74d:	je     2d798 <parseXML+0x4a8>
   2d74f:	lea    edx,[rax-0x9]
   2d752:	cmp    edx,0x4
   2d755:	jbe    2d764 <parseXML+0x474>
   2d757:	cmp    eax,0x20
   2d75a:	je     2d764 <parseXML+0x474>
   2d75c:	and    eax,0xfffffffd
   2d75f:	cmp    eax,0x3c
   2d762:	jne    2d740 <parseXML+0x450>
   2d764:	mov    esi,edi
   2d766:	xor    eax,eax
   2d768:	lea    rdi,[rip+0x205f5]        # 4dd64 <powers.0+0xa4>
   2d76f:	mov    rdx,r14
   2d772:	sub    esi,r14d
   2d775:	call   114b0 <wget_debug_printf@plt>
   2d77a:	mov    rax,QWORD PTR [r15+0x10]
   2d77e:	mov    rcx,QWORD PTR [r15+0x8]
   2d782:	sub    rcx,rax
   2d785:	mov    QWORD PTR [r15+0x28],rcx
   2d789:	test   rax,rax
   2d78c:	jne    2d9b5 <parseXML+0x6c5>
   2d792:	nop    WORD PTR [rax+rax*1+0x0]
   2d798:	mov    eax,0xfffffff7
   2d79d:	mov    rdx,QWORD PTR [rsp+0x218]
   2d7a5:	sub    rdx,QWORD PTR fs:0x28
   2d7ae:	jne    2de5f <parseXML+0xb6f>
   2d7b4:	add    rsp,0x228
   2d7bb:	pop    rbx
   2d7bc:	pop    rbp
   2d7bd:	pop    r12
   2d7bf:	pop    r13
   2d7c1:	pop    r14
   2d7c3:	pop    r15
   2d7c5:	ret    
   2d7c6:	mov    r13,QWORD PTR [r15+0x28]
   2d7ca:	cmp    r13,0x7f
   2d7ce:	jbe    2da4f <parseXML+0x75f>
   2d7d4:	mov    rax,QWORD PTR [rip+0x487f5]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   2d7db:	lea    rdi,[r13+0x1]
   2d7df:	call   QWORD PTR [rax]
   2d7e1:	mov    r13,rax
   2d7e4:	test   rax,rax
   2d7e7:	je     2d48b <parseXML+0x19b>
   2d7ed:	mov    rdx,QWORD PTR [r15+0x28]
   2d7f1:	mov    rsi,rbp
   2d7f4:	mov    rdi,rax
   2d7f7:	call   11220 <memcpy@plt>
   2d7fc:	mov    rax,QWORD PTR [r15+0x28]
   2d800:	sub    rsp,0x8
   2d804:	xor    ecx,ecx
   2d806:	mov    esi,0x4
   2d80b:	xor    r9d,r9d
   2d80e:	xor    r8d,r8d
   2d811:	mov    rdx,r13
   2d814:	mov    BYTE PTR [r13+rax*1+0x0],0x0
   2d81a:	mov    rdi,QWORD PTR [r15+0x30]
   2d81e:	push   0x0
   2d820:	call   QWORD PTR [r15+0x38]
   2d824:	lea    rax,[rsp+0x120]
   2d82c:	pop    rcx
   2d82d:	pop    rsi
   2d82e:	cmp    r13,rax
   2d831:	je     2d48b <parseXML+0x19b>
   2d837:	mov    rax,QWORD PTR [rip+0x487aa]        # 75fe8 <wget_free@@Base-0x1328>
   2d83e:	mov    rdi,r13
   2d841:	call   QWORD PTR [rax]
   2d843:	jmp    2d48b <parseXML+0x19b>
   2d848:	mov    QWORD PTR [r15+0x28],0x0
   2d850:	jmp    2d400 <parseXML+0x110>
   2d855:	cmp    eax,0x3c
   2d858:	jne    2d3a0 <parseXML+0xb0>
   2d85e:	cmp    BYTE PTR [rdi+0x1],0x3f
   2d862:	je     2d8b0 <parseXML+0x5c0>
   2d864:	cmp    eax,0x3c
   2d867:	jne    2d3a0 <parseXML+0xb0>
   2d86d:	cmp    BYTE PTR [rdi+0x1],0x21
   2d871:	jne    2d3a0 <parseXML+0xb0>
   2d877:	mov    rdi,r15
   2d87a:	mov    ecx,0x1
   2d87f:	mov    esi,0x100
   2d884:	lea    rdx,[rip+0x204c7]        # 4dd52 <powers.0+0x92>
   2d88b:	call   2d200 <getUnparsed.constprop.0.isra.0>
   2d890:	mov    rcx,QWORD PTR [r15+0x10]
   2d894:	mov    edx,DWORD PTR [r15+0x28]
   2d898:	xor    eax,eax
   2d89a:	lea    rsi,[rsp+0x10]
   2d89f:	lea    rdi,[rip+0x2049e]        # 4dd44 <powers.0+0x84>
   2d8a6:	call   114b0 <wget_debug_printf@plt>
   2d8ab:	jmp    2d3a0 <parseXML+0xb0>
   2d8b0:	mov    rdi,r15
   2d8b3:	mov    ecx,0x2
   2d8b8:	mov    esi,0x80
   2d8bd:	lea    rdx,[rip+0x20470]        # 4dd34 <powers.0+0x74>
   2d8c4:	call   2d200 <getUnparsed.constprop.0.isra.0>
   2d8c9:	mov    rcx,QWORD PTR [r15+0x10]
   2d8cd:	mov    edx,DWORD PTR [r15+0x28]
   2d8d1:	xor    eax,eax
   2d8d3:	lea    rsi,[rsp+0x10]
   2d8d8:	lea    rdi,[rip+0x20458]        # 4dd37 <powers.0+0x77>
   2d8df:	call   114b0 <wget_debug_printf@plt>
   2d8e4:	jmp    2d3a0 <parseXML+0xb0>
   2d8e9:	lea    r8,[rsp+0x10]
   2d8ee:	mov    rsi,rdi
   2d8f1:	mov    edx,0x100
   2d8f6:	mov    rdi,r8
   2d8f9:	call   10970 <wget_strlcpy@plt>
   2d8fe:	mov    r8,rax
   2d901:	mov    eax,0xff
   2d906:	cmp    r8,rax
   2d909:	cmovbe rax,r8
   2d90d:	mov    QWORD PTR [rsp],rax
   2d911:	jmp    2d398 <parseXML+0xa8>
   2d916:	mov    rbx,QWORD PTR [r15+0x28]
   2d91a:	mov    eax,0xff
   2d91f:	lea    rbp,[rsp+0x10]
   2d924:	mov    rsi,r8
   2d927:	mov    ecx,0x100
   2d92c:	mov    rdi,rbp
   2d92f:	cmp    rbx,rax
   2d932:	cmova  rbx,rax
   2d936:	mov    rdx,rbx
   2d939:	call   122a0 <__memcpy_chk@plt>
   2d93e:	mov    BYTE PTR [rsp+rbx*1+0x10],0x0
   2d943:	jmp    2d578 <parseXML+0x288>
   2d948:	nop    DWORD PTR [rax+rax*1+0x0]
   2d950:	cmp    BYTE PTR [rsi],0x2f
   2d953:	jne    2d5b1 <parseXML+0x2c1>
   2d959:	cmp    BYTE PTR [rsi+0x1],0x3e
   2d95d:	jne    2d5b1 <parseXML+0x2c1>
   2d963:	mov    rax,QWORD PTR [r15+0x38]
   2d967:	test   rax,rax
   2d96a:	je     2d98b <parseXML+0x69b>
   2d96c:	sub    rsp,0x8
   2d970:	or     ebx,0x4
   2d973:	mov    rdi,QWORD PTR [r15+0x30]
   2d977:	xor    r8d,r8d
   2d97a:	push   0x0
   2d97c:	mov    esi,ebx
   2d97e:	xor    r9d,r9d
   2d981:	xor    ecx,ecx
   2d983:	mov    rdx,rbp
   2d986:	call   rax
   2d988:	pop    rdi
   2d989:	pop    r8
   2d98b:	mov    rax,QWORD PTR [rsp]
   2d98f:	mov    BYTE PTR [rsp+rax*1+0x10],0x0
   2d994:	jmp    2d3a0 <parseXML+0xb0>
   2d999:	nop    DWORD PTR [rax+0x0]
   2d9a0:	mov    rdi,r15
   2d9a3:	call   2cf30 <getToken>
   2d9a8:	test   rax,rax
   2d9ab:	je     2d798 <parseXML+0x4a8>
   2d9b1:	mov    rcx,QWORD PTR [r15+0x28]
   2d9b5:	test   rcx,rcx
   2d9b8:	je     2d62d <parseXML+0x33d>
   2d9be:	mov    r8,QWORD PTR [r15+0x10]
   2d9c2:	xor    eax,eax
   2d9c4:	mov    rdx,r13
   2d9c7:	mov    rsi,rbp
   2d9ca:	lea    rdi,[rip+0x2034e]        # 4dd1f <powers.0+0x5f>
   2d9d1:	call   114b0 <wget_debug_printf@plt>
   2d9d6:	mov    rax,QWORD PTR [r15+0x38]
   2d9da:	test   rax,rax
   2d9dd:	je     2d66b <parseXML+0x37b>
   2d9e3:	mov    r8,QWORD PTR [r15+0x10]
   2d9e7:	sub    rsp,0x8
   2d9eb:	or     ebx,0x8
   2d9ee:	mov    rdi,QWORD PTR [r15+0x30]
   2d9f2:	mov    esi,ebx
   2d9f4:	mov    r9,QWORD PTR [r15+0x28]
   2d9f8:	mov    rcx,r13
   2d9fb:	mov    rdx,r8
   2d9fe:	sub    rdx,QWORD PTR [r15]
   2da01:	push   rdx
   2da02:	mov    rdx,rbp
   2da05:	call   rax
   2da07:	pop    r11
   2da09:	pop    rbx
   2da0a:	xor    ebx,ebx
   2da0c:	jmp    2d580 <parseXML+0x290>
   2da11:	movabs rcx,0xbfffffffffffffde
   2da1b:	bt     rcx,rax
   2da1f:	jb     2d72f <parseXML+0x43f>
   2da25:	mov    QWORD PTR [r15+0x10],rdi
   2da29:	call   109e0 <strchr@plt>
   2da2e:	test   rax,rax
   2da31:	je     2d798 <parseXML+0x4a8>
   2da37:	lea    rdx,[rax+0x1]
   2da3b:	sub    rax,r14
   2da3e:	lea    rcx,[rax-0x1]
   2da42:	mov    QWORD PTR [r15+0x8],rdx
   2da46:	mov    QWORD PTR [r15+0x28],rcx
   2da4a:	jmp    2d9b5 <parseXML+0x6c5>
   2da4f:	lea    r10,[rsp+0x110]
   2da57:	mov    rdx,r13
   2da5a:	mov    rsi,rax
   2da5d:	mov    rdi,r10
   2da60:	call   11220 <memcpy@plt>
   2da65:	sub    rsp,0x8
   2da69:	mov    rdi,QWORD PTR [r15+0x30]
   2da6d:	xor    r9d,r9d
   2da70:	mov    rdx,rax
   2da73:	xor    r8d,r8d
   2da76:	xor    ecx,ecx
   2da78:	mov    esi,0x4
   2da7d:	mov    BYTE PTR [rsp+r13*1+0x118],0x0
   2da86:	push   0x0
   2da88:	call   rbx
   2da8a:	pop    rax
   2da8b:	pop    rdx
   2da8c:	jmp    2d48b <parseXML+0x19b>
   2da91:	mov    rax,QWORD PTR [r15+0x38]
   2da95:	test   rax,rax
   2da98:	je     2dab8 <parseXML+0x7c8>
   2da9a:	sub    rsp,0x8
   2da9e:	or     ebx,0x2
   2daa1:	xor    ecx,ecx
   2daa3:	mov    rdi,QWORD PTR [r15+0x30]
   2daa7:	push   0x0
   2daa9:	mov    esi,ebx
   2daab:	xor    r9d,r9d
   2daae:	xor    r8d,r8d
   2dab1:	mov    rdx,rbp
   2dab4:	call   rax
   2dab6:	pop    rcx
   2dab7:	pop    rsi
   2dab8:	test   BYTE PTR [r15+0x18],0x2
   2dabd:	je     2dc50 <parseXML+0x960>
   2dac3:	lea    r13,[rip+0x20246]        # 4dd10 <powers.0+0x50>
   2daca:	mov    rdi,rbp
   2dacd:	mov    rsi,r13
   2dad0:	call   12590 <wget_strcasecmp_ascii@plt>
   2dad5:	mov    ebx,eax
   2dad7:	test   eax,eax
   2dad9:	je     2dc60 <parseXML+0x970>
   2dadf:	lea    r14,[rip+0x20233]        # 4dd19 <powers.0+0x59>
   2dae6:	mov    rdi,rbp
   2dae9:	mov    rsi,r14
   2daec:	call   12590 <wget_strcasecmp_ascii@plt>
   2daf1:	mov    ecx,eax
   2daf3:	test   eax,eax
   2daf5:	jne    2d98b <parseXML+0x69b>
   2dafb:	mov    r13,QWORD PTR [r15+0x8]
   2daff:	mov    QWORD PTR [r15+0x10],r13
   2db03:	movzx  eax,BYTE PTR [r13+0x0]
   2db08:	mov    rdx,r13
   2db0b:	mov    rbx,r13
   2db0e:	test   al,al
   2db10:	je     2db86 <parseXML+0x896>
   2db12:	mov    rbx,rdx
   2db15:	cmp    al,0x2f
   2db17:	je     2dbf7 <parseXML+0x907>
   2db1d:	cmp    al,0x3c
   2db1f:	je     2db47 <parseXML+0x857>
   2db21:	movzx  eax,BYTE PTR [rbx+0x1]
   2db25:	add    rbx,0x1
   2db29:	test   al,al
   2db2b:	jne    2db15 <parseXML+0x825>
   2db2d:	jmp    2db7a <parseXML+0x88a>
   2db2f:	nop
   2db30:	mov    ecx,DWORD PTR [r15+0x28]
   2db34:	lea    rdx,[rip+0x1ed09]        # 4c844 <maybe+0x5a4>
   2db3b:	xor    eax,eax
   2db3d:	call   119f0 <wget_snprintf@plt>
   2db42:	jmp    2d578 <parseXML+0x288>
   2db47:	mov    edx,0x7
   2db4c:	lea    rsi,[rip+0x201c4]        # 4dd17 <powers.0+0x57>
   2db53:	mov    rdi,rbx
   2db56:	mov    DWORD PTR [rsp+0x8],ecx
   2db5a:	call   11c40 <wget_strncasecmp_ascii@plt>
   2db5f:	mov    ecx,DWORD PTR [rsp+0x8]
   2db63:	test   eax,eax
   2db65:	je     2dde0 <parseXML+0xaf0>
   2db6b:	movzx  eax,BYTE PTR [rbx+0x1]
   2db6f:	lea    rdx,[rbx+0x1]
   2db73:	test   al,al
   2db75:	jne    2db12 <parseXML+0x822>
   2db77:	mov    rbx,rdx
   2db7a:	mov    QWORD PTR [r15+0x8],rbx
   2db7e:	test   ecx,ecx
   2db80:	jne    2de56 <parseXML+0xb66>
   2db86:	mov    r9,rbx
   2db89:	sub    r9,r13
   2db8c:	mov    QWORD PTR [r15+0x28],r9
   2db90:	cmp    BYTE PTR [rbx],0x0
   2db93:	jne    2de44 <parseXML+0xb54>
   2db99:	test   r9,r9
   2db9c:	je     2d98b <parseXML+0x69b>
   2dba2:	mov    rax,QWORD PTR [r15+0x38]
   2dba6:	test   rax,rax
   2dba9:	je     2dbda <parseXML+0x8ea>
   2dbab:	sub    rsp,0x8
   2dbaf:	mov    rdx,r13
   2dbb2:	sub    rdx,QWORD PTR [r15]
   2dbb5:	mov    r8,r13
   2dbb8:	push   rdx
   2dbb9:	mov    rdi,QWORD PTR [r15+0x30]
   2dbbd:	mov    rdx,r14
   2dbc0:	xor    ecx,ecx
   2dbc2:	mov    esi,0x14
   2dbc7:	call   rax
   2dbc9:	mov    r9,QWORD PTR [r15+0x28]
   2dbcd:	pop    r13
   2dbcf:	pop    r14
   2dbd1:	test   r9,r9
   2dbd4:	je     2d98b <parseXML+0x69b>
   2dbda:	mov    rcx,QWORD PTR [r15+0x10]
   2dbde:	mov    edx,r9d
   2dbe1:	mov    rsi,rbp
   2dbe4:	xor    eax,eax
   2dbe6:	lea    rdi,[rip+0x20136]        # 4dd23 <powers.0+0x63>
   2dbed:	call   114b0 <wget_debug_printf@plt>
   2dbf2:	jmp    2d98b <parseXML+0x69b>
   2dbf7:	movzx  eax,BYTE PTR [rbx+0x1]
   2dbfb:	cmp    al,0x2a
   2dbfd:	jne    2db25 <parseXML+0x835>
   2dc03:	movzx  eax,BYTE PTR [rbx+0x2]
   2dc07:	lea    rdx,[rbx+0x2]
   2dc0b:	mov    rbx,rdx
   2dc0e:	test   al,al
   2dc10:	jne    2dc2c <parseXML+0x93c>
   2dc12:	jmp    2db7a <parseXML+0x88a>
   2dc17:	nop    WORD PTR [rax+rax*1+0x0]
   2dc20:	add    rbx,0x1
   2dc24:	test   al,al
   2dc26:	je     2db7a <parseXML+0x88a>
   2dc2c:	mov    edx,eax
   2dc2e:	movzx  eax,BYTE PTR [rbx+0x1]
   2dc32:	cmp    dl,0x2a
   2dc35:	jne    2dc20 <parseXML+0x930>
   2dc37:	cmp    al,0x2f
   2dc39:	jne    2dc20 <parseXML+0x930>
   2dc3b:	movzx  eax,BYTE PTR [rbx+0x2]
   2dc3f:	lea    rdx,[rbx+0x2]
   2dc43:	test   al,al
   2dc45:	jne    2db12 <parseXML+0x822>
   2dc4b:	jmp    2db77 <parseXML+0x887>
   2dc50:	mov    rsi,r15
   2dc53:	mov    rdi,rbp
   2dc56:	call   2d2f0 <parseXML>
   2dc5b:	jmp    2d98b <parseXML+0x69b>
   2dc60:	xor    eax,eax
   2dc62:	lea    rdi,[rip+0x20127]        # 4dd90 <powers.0+0xd0>
   2dc69:	call   114b0 <wget_debug_printf@plt>
   2dc6e:	mov    r14,QWORD PTR [r15+0x8]
   2dc72:	mov    QWORD PTR [r15+0x10],r14
   2dc76:	movzx  edx,BYTE PTR [r14]
   2dc7a:	mov    rax,r14
   2dc7d:	test   dl,dl
   2dc7f:	je     2dd1a <parseXML+0xa2a>
   2dc85:	mov    QWORD PTR [rsp+0x8],rbp
   2dc8a:	mov    rbp,r14
   2dc8d:	cmp    dl,0x3c
   2dc90:	je     2dca6 <parseXML+0x9b6>
   2dc92:	movzx  edx,BYTE PTR [rbp+0x1]
   2dc96:	lea    rax,[rbp+0x1]
   2dc9a:	test   dl,dl
   2dc9c:	je     2dcdf <parseXML+0x9ef>
   2dc9e:	mov    rbp,rax
   2dca1:	cmp    dl,0x3c
   2dca4:	jne    2dc92 <parseXML+0x9a2>
   2dca6:	mov    edx,0x4
   2dcab:	lea    rsi,[rip+0x20057]        # 4dd09 <powers.0+0x49>
   2dcb2:	mov    rdi,rbp
   2dcb5:	call   10b10 <strncmp@plt>
   2dcba:	test   eax,eax
   2dcbc:	jne    2dd6c <parseXML+0xa7c>
   2dcc2:	movzx  edx,BYTE PTR [rbp+0x4]
   2dcc6:	lea    rax,[rbp+0x4]
   2dcca:	test   dl,dl
   2dccc:	je     2dcdf <parseXML+0x9ef>
   2dcce:	cmp    dl,0x2d
   2dcd1:	je     2dce6 <parseXML+0x9f6>
   2dcd3:	movzx  edx,BYTE PTR [rax+0x1]
   2dcd7:	add    rax,0x1
   2dcdb:	test   dl,dl
   2dcdd:	jne    2dcce <parseXML+0x9de>
   2dcdf:	mov    rbp,QWORD PTR [rsp+0x8]
   2dce4:	jmp    2dd0e <parseXML+0xa1e>
   2dce6:	cmp    BYTE PTR [rax],0x2d
   2dce9:	jne    2dcd3 <parseXML+0x9e3>
   2dceb:	cmp    BYTE PTR [rax+0x1],0x2d
   2dcef:	jne    2dcd3 <parseXML+0x9e3>
   2dcf1:	cmp    BYTE PTR [rax+0x2],0x3e
   2dcf5:	jne    2dcd3 <parseXML+0x9e3>
   2dcf7:	movzx  edx,BYTE PTR [rax+0x3]
   2dcfb:	lea    rbp,[rax+0x3]
   2dcff:	test   dl,dl
   2dd01:	jne    2dc8d <parseXML+0x99d>
   2dd03:	mov    rcx,rbp
   2dd06:	mov    rbp,QWORD PTR [rsp+0x8]
   2dd0b:	mov    rax,rcx
   2dd0e:	mov    QWORD PTR [r15+0x8],rax
   2dd12:	test   ebx,ebx
   2dd14:	jne    2de90 <parseXML+0xba0>
   2dd1a:	mov    r9,rax
   2dd1d:	sub    r9,r14
   2dd20:	mov    QWORD PTR [r15+0x28],r9
   2dd24:	cmp    BYTE PTR [rax],0x0
   2dd27:	jne    2de32 <parseXML+0xb42>
   2dd2d:	test   r9,r9
   2dd30:	je     2d98b <parseXML+0x69b>
   2dd36:	mov    rax,QWORD PTR [r15+0x38]
   2dd3a:	test   rax,rax
   2dd3d:	je     2dbda <parseXML+0x8ea>
   2dd43:	sub    rsp,0x8
   2dd47:	mov    rdx,r14
   2dd4a:	sub    rdx,QWORD PTR [r15]
   2dd4d:	mov    rdi,QWORD PTR [r15+0x30]
   2dd51:	push   rdx
   2dd52:	mov    r8,r14
   2dd55:	mov    rdx,r13
   2dd58:	xor    ecx,ecx
   2dd5a:	mov    esi,0x14
   2dd5f:	call   rax
   2dd61:	pop    rax
   2dd62:	mov    r9,QWORD PTR [r15+0x28]
   2dd66:	pop    rdx
   2dd67:	jmp    2dbd1 <parseXML+0x8e1>
   2dd6c:	mov    edx,0x8
   2dd71:	lea    rsi,[rip+0x1ff96]        # 4dd0e <powers.0+0x4e>
   2dd78:	mov    rdi,rbp
   2dd7b:	call   11c40 <wget_strncasecmp_ascii@plt>
   2dd80:	test   eax,eax
   2dd82:	jne    2dc92 <parseXML+0x9a2>
   2dd88:	mov    r9,rbp
   2dd8b:	lea    rdx,[rbp+0x8]
   2dd8f:	sub    r9,r14
   2dd92:	mov    QWORD PTR [r15+0x28],r9
   2dd96:	movzx  eax,BYTE PTR [rbp+0x8]
   2dd9a:	lea    ecx,[rax-0x9]
   2dd9d:	cmp    cl,0x4
   2dda0:	ja     2ddb2 <parseXML+0xac2>
   2dda2:	movzx  eax,BYTE PTR [rdx+0x1]
   2dda6:	add    rdx,0x1
   2ddaa:	lea    ecx,[rax-0x9]
   2ddad:	cmp    cl,0x4
   2ddb0:	jbe    2dda2 <parseXML+0xab2>
   2ddb2:	cmp    al,0x20
   2ddb4:	je     2dda2 <parseXML+0xab2>
   2ddb6:	cmp    al,0x3e
   2ddb8:	je     2de7c <parseXML+0xb8c>
   2ddbe:	test   al,al
   2ddc0:	je     2de72 <parseXML+0xb82>
   2ddc6:	lea    rax,[rdx+0x1]
   2ddca:	movzx  edx,BYTE PTR [rdx+0x1]
   2ddce:	test   dl,dl
   2ddd0:	je     2de64 <parseXML+0xb74>
   2ddd6:	mov    ebx,0x1
   2dddb:	jmp    2dc9e <parseXML+0x9ae>
   2dde0:	mov    r9,rbx
   2dde3:	lea    rax,[rbx+0x7]
   2dde7:	sub    r9,r13
   2ddea:	mov    QWORD PTR [r15+0x28],r9
   2ddee:	movzx  edx,BYTE PTR [rbx+0x7]
   2ddf2:	lea    ecx,[rdx-0x9]
   2ddf5:	cmp    cl,0x4
   2ddf8:	ja     2de0a <parseXML+0xb1a>
   2ddfa:	movzx  edx,BYTE PTR [rax+0x1]
   2ddfe:	add    rax,0x1
   2de02:	lea    ecx,[rdx-0x9]
   2de05:	cmp    cl,0x4
   2de08:	jbe    2ddfa <parseXML+0xb0a>
   2de0a:	cmp    dl,0x20
   2de0d:	je     2ddfa <parseXML+0xb0a>
   2de0f:	cmp    dl,0x3e
   2de12:	je     2dea5 <parseXML+0xbb5>
   2de18:	test   dl,dl
   2de1a:	je     2de99 <parseXML+0xba9>
   2de1c:	lea    rbx,[rax+0x1]
   2de20:	movzx  eax,BYTE PTR [rax+0x1]
   2de24:	test   al,al
   2de26:	je     2de9c <parseXML+0xbac>
   2de28:	mov    ecx,0x1
   2de2d:	jmp    2db15 <parseXML+0x825>
   2de32:	mov    rax,QWORD PTR [r15+0x38]
   2de36:	test   rax,rax
   2de39:	jne    2dd43 <parseXML+0xa53>
   2de3f:	jmp    2dbd1 <parseXML+0x8e1>
   2de44:	mov    rax,QWORD PTR [r15+0x38]
   2de48:	test   rax,rax
   2de4b:	jne    2dbab <parseXML+0x8bb>
   2de51:	jmp    2dbd1 <parseXML+0x8e1>
   2de56:	mov    r9,QWORD PTR [r15+0x28]
   2de5a:	jmp    2db90 <parseXML+0x8a0>
   2de5f:	call   11760 <__stack_chk_fail@plt>
   2de64:	mov    rbp,QWORD PTR [rsp+0x8]
   2de69:	mov    QWORD PTR [r15+0x8],rax
   2de6d:	jmp    2dd24 <parseXML+0xa34>
   2de72:	mov    rbp,QWORD PTR [rsp+0x8]
   2de77:	mov    rax,rdx
   2de7a:	jmp    2de69 <parseXML+0xb79>
   2de7c:	lea    rax,[rdx+0x1]
   2de80:	mov    rbp,QWORD PTR [rsp+0x8]
   2de85:	mov    QWORD PTR [r15+0x8],rax
   2de89:	jmp    2dd24 <parseXML+0xa34>
   2de8e:	xchg   ax,ax
   2de90:	mov    r9,QWORD PTR [r15+0x28]
   2de94:	jmp    2dd24 <parseXML+0xa34>
   2de99:	mov    rbx,rax
   2de9c:	mov    QWORD PTR [r15+0x8],rbx
   2dea0:	jmp    2db90 <parseXML+0x8a0>
   2dea5:	lea    rbx,[rax+0x1]
   2dea9:	mov    QWORD PTR [r15+0x8],rbx
   2dead:	jmp    2db90 <parseXML+0x8a0>
   2deb2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2debd:	nop    DWORD PTR [rax]

000000000002dec0 <wget_xml_parse_buffer>:
   2dec0:	endbr64 
   2dec4:	sub    rsp,0x58
   2dec8:	mov    rax,QWORD PTR fs:0x28
   2ded1:	mov    QWORD PTR [rsp+0x48],rax
   2ded6:	xor    eax,eax
   2ded8:	mov    QWORD PTR [rsp],rdi
   2dedc:	mov    QWORD PTR [rsp+0x8],rdi
   2dee1:	lea    rdi,[rip+0x1f258]        # 4d140 <__func__.4+0x20>
   2dee8:	mov    QWORD PTR [rsp+0x38],rsi
   2deed:	mov    rsi,rsp
   2def0:	mov    QWORD PTR [rsp+0x30],rdx
   2def5:	mov    QWORD PTR [rsp+0x10],0x0
   2defe:	mov    QWORD PTR [rsp+0x20],0x0
   2df07:	mov    QWORD PTR [rsp+0x28],0x0
   2df10:	mov    DWORD PTR [rsp+0x18],ecx
   2df14:	call   2d2f0 <parseXML>
   2df19:	mov    rdx,QWORD PTR [rsp+0x48]
   2df1e:	sub    rdx,QWORD PTR fs:0x28
   2df27:	jne    2df2e <wget_xml_parse_buffer+0x6e>
   2df29:	add    rsp,0x58
   2df2d:	ret    
   2df2e:	call   11760 <__stack_chk_fail@plt>
   2df33:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2df3e:	xchg   ax,ax

000000000002df40 <wget_html_parse_buffer>:
   2df40:	endbr64 
   2df44:	or     ecx,0x2
   2df47:	jmp    11090 <wget_xml_parse_buffer@plt>
   2df4c:	nop    DWORD PTR [rax+0x0]

000000000002df50 <wget_xml_parse_file>:
   2df50:	endbr64 
   2df54:	push   r15
   2df56:	push   r14
   2df58:	push   r13
   2df5a:	push   r12
   2df5c:	push   rbp
   2df5d:	push   rbx
   2df5e:	sub    rsp,0x1000
   2df65:	or     QWORD PTR [rsp],0x0
   2df6a:	sub    rsp,0xc8
   2df71:	mov    rax,QWORD PTR fs:0x28
   2df7a:	mov    QWORD PTR [rsp+0x10b8],rax
   2df82:	xor    eax,eax
   2df84:	cmp    BYTE PTR [rdi],0x2d
   2df87:	mov    rbp,rdi
   2df8a:	mov    r12,rsi
   2df8d:	mov    r13,rdx
   2df90:	mov    r14d,ecx
   2df93:	jne    2e020 <wget_xml_parse_file+0xd0>
   2df99:	cmp    BYTE PTR [rdi+0x1],0x0
   2df9d:	jne    2e020 <wget_xml_parse_file+0xd0>
   2dfa3:	mov    rbp,rsp
   2dfa6:	mov    edx,0x1000
   2dfab:	xor    esi,esi
   2dfad:	mov    rdi,rbp
   2dfb0:	lea    rbx,[rsp+0xb0]
   2dfb8:	call   108d0 <wget_buffer_init@plt>
   2dfbd:	jmp    2dfcb <wget_xml_parse_file+0x7b>
   2dfbf:	nop
   2dfc0:	mov    rsi,rbx
   2dfc3:	mov    rdi,rbp
   2dfc6:	call   10ea0 <wget_buffer_memcat@plt>
   2dfcb:	mov    edx,0x1000
   2dfd0:	mov    rsi,rbx
   2dfd3:	xor    edi,edi
   2dfd5:	call   11d60 <read@plt>
   2dfda:	mov    rdx,rax
   2dfdd:	test   rax,rax
   2dfe0:	jg     2dfc0 <wget_xml_parse_file+0x70>
   2dfe2:	cmp    QWORD PTR [rsp+0x8],0x0
   2dfe8:	jne    2e0a0 <wget_xml_parse_file+0x150>
   2dfee:	mov    rdi,rbp
   2dff1:	call   11300 <wget_buffer_deinit@plt>
   2dff6:	mov    rax,QWORD PTR [rsp+0x10b8]
   2dffe:	sub    rax,QWORD PTR fs:0x28
   2e007:	jne    2e10f <wget_xml_parse_file+0x1bf>
   2e00d:	add    rsp,0x10c8
   2e014:	pop    rbx
   2e015:	pop    rbp
   2e016:	pop    r12
   2e018:	pop    r13
   2e01a:	pop    r14
   2e01c:	pop    r15
   2e01e:	ret    
   2e01f:	nop
   2e020:	xor    esi,esi
   2e022:	mov    rdi,rbp
   2e025:	xor    eax,eax
   2e027:	call   11070 <open@plt>
   2e02c:	mov    r15d,eax
   2e02f:	cmp    eax,0xffffffff
   2e032:	je     2e050 <wget_xml_parse_file+0x100>
   2e034:	lea    rsi,[rsp+0x20]
   2e039:	mov    edi,eax
   2e03b:	call   12210 <fstat@plt>
   2e040:	test   eax,eax
   2e042:	je     2e0c0 <wget_xml_parse_file+0x170>
   2e044:	mov    edi,r15d
   2e047:	call   12740 <close@plt>
   2e04c:	jmp    2dff6 <wget_xml_parse_file+0xa6>
   2e04e:	xchg   ax,ax
   2e050:	xor    edi,edi
   2e052:	mov    edx,0x5
   2e057:	lea    rsi,[rip+0x1d722]        # 4b780 <base64_2_bin+0x580>
   2e05e:	call   10f90 <dcgettext@plt>
   2e063:	mov    rdi,rax
   2e066:	mov    rax,QWORD PTR [rsp+0x10b8]
   2e06e:	sub    rax,QWORD PTR fs:0x28
   2e077:	jne    2e10f <wget_xml_parse_file+0x1bf>
   2e07d:	add    rsp,0x10c8
   2e084:	mov    rsi,rbp
   2e087:	xor    eax,eax
   2e089:	pop    rbx
   2e08a:	pop    rbp
   2e08b:	pop    r12
   2e08d:	pop    r13
   2e08f:	pop    r14
   2e091:	pop    r15
   2e093:	jmp    11ea0 <wget_error_printf@plt>
   2e098:	nop    DWORD PTR [rax+rax*1+0x0]
   2e0a0:	mov    rdi,QWORD PTR [rsp]
   2e0a4:	mov    ecx,r14d
   2e0a7:	mov    rdx,r13
   2e0aa:	mov    rsi,r12
   2e0ad:	call   11090 <wget_xml_parse_buffer@plt>
   2e0b2:	jmp    2dfee <wget_xml_parse_file+0x9e>
   2e0b7:	nop    WORD PTR [rax+rax*1+0x0]
   2e0c0:	mov    rbx,QWORD PTR [rsp+0x50]
   2e0c5:	xor    r9d,r9d
   2e0c8:	mov    r8d,r15d
   2e0cb:	mov    ecx,0x2
   2e0d0:	mov    edx,0x3
   2e0d5:	xor    edi,edi
   2e0d7:	lea    rsi,[rbx+0x1]
   2e0db:	call   123d0 <mmap@plt>
   2e0e0:	mov    rbp,rax
   2e0e3:	test   rbx,rbx
   2e0e6:	jne    2e0f8 <wget_xml_parse_file+0x1a8>
   2e0e8:	mov    rsi,rbx
   2e0eb:	mov    rdi,rbp
   2e0ee:	call   10d10 <munmap@plt>
   2e0f3:	jmp    2e044 <wget_xml_parse_file+0xf4>
   2e0f8:	mov    BYTE PTR [rax+rbx*1],0x0
   2e0fc:	mov    ecx,r14d
   2e0ff:	mov    rdx,r13
   2e102:	mov    rsi,r12
   2e105:	mov    rdi,rax
   2e108:	call   11090 <wget_xml_parse_buffer@plt>
   2e10d:	jmp    2e0e8 <wget_xml_parse_file+0x198>
   2e10f:	call   11760 <__stack_chk_fail@plt>
   2e114:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2e11f:	nop

000000000002e120 <wget_html_parse_file>:
   2e120:	endbr64 
   2e124:	or     ecx,0x2
   2e127:	jmp    123b0 <wget_xml_parse_file@plt>
   2e12c:	nop    DWORD PTR [rax+0x0]

000000000002e130 <wget_xml_decode_entities_inline>:
   2e130:	endbr64 
   2e134:	push   r15
   2e136:	mov    r15,rdi
   2e139:	push   r14
   2e13b:	push   r13
   2e13d:	push   r12
   2e13f:	push   rbp
   2e140:	mov    rbp,rdi
   2e143:	push   rbx
   2e144:	sub    rsp,0x18
   2e148:	mov    rax,QWORD PTR fs:0x28
   2e151:	mov    QWORD PTR [rsp+0x8],rax
   2e156:	xor    eax,eax
   2e158:	movzx  eax,BYTE PTR [rdi]
   2e15b:	mov    QWORD PTR [rsp],rdi
   2e15f:	test   al,al
   2e161:	je     2e340 <wget_xml_decode_entities_inline+0x210>
   2e167:	mov    rbx,rdi
   2e16a:	xor    r12d,r12d
   2e16d:	lea    r13,[rip+0x1fc04]        # 4dd78 <powers.0+0xb8>
   2e174:	jmp    2e19a <wget_xml_decode_entities_inline+0x6a>
   2e176:	cs nop WORD PTR [rax+rax*1+0x0]
   2e180:	mov    QWORD PTR [rsp],r14
   2e184:	movzx  eax,BYTE PTR [rbx]
   2e187:	mov    BYTE PTR [r15-0x1],al
   2e18b:	movzx  eax,BYTE PTR [rbx+0x1]
   2e18f:	mov    rbx,r14
   2e192:	test   al,al
   2e194:	je     2e228 <wget_xml_decode_entities_inline+0xf8>
   2e19a:	add    r15,0x1
   2e19e:	lea    r14,[rbx+0x1]
   2e1a2:	cmp    al,0x26
   2e1a4:	jne    2e180 <wget_xml_decode_entities_inline+0x50>
   2e1a6:	cmp    BYTE PTR [rbx+0x1],0x23
   2e1aa:	je     2e2c0 <wget_xml_decode_entities_inline+0x190>
   2e1b0:	mov    edx,0x4
   2e1b5:	mov    rsi,r13
   2e1b8:	mov    rdi,r14
   2e1bb:	call   10b10 <strncmp@plt>
   2e1c0:	test   eax,eax
   2e1c2:	je     2e2a0 <wget_xml_decode_entities_inline+0x170>
   2e1c8:	movzx  eax,BYTE PTR [r14]
   2e1cc:	cmp    eax,0x67
   2e1cf:	jne    2e1f0 <wget_xml_decode_entities_inline+0xc0>
   2e1d1:	cmp    BYTE PTR [r14+0x1],0x74
   2e1d6:	jne    2e1f0 <wget_xml_decode_entities_inline+0xc0>
   2e1d8:	cmp    BYTE PTR [r14+0x2],0x3b
   2e1dd:	jne    2e1f0 <wget_xml_decode_entities_inline+0xc0>
   2e1df:	mov    BYTE PTR [r15-0x1],0x3e
   2e1e4:	jmp    2e208 <wget_xml_decode_entities_inline+0xd8>
   2e1e6:	cs nop WORD PTR [rax+rax*1+0x0]
   2e1f0:	cmp    eax,0x6c
   2e1f3:	jne    2e258 <wget_xml_decode_entities_inline+0x128>
   2e1f5:	cmp    BYTE PTR [r14+0x1],0x74
   2e1fa:	jne    2e258 <wget_xml_decode_entities_inline+0x128>
   2e1fc:	cmp    BYTE PTR [r14+0x2],0x3b
   2e201:	jne    2e258 <wget_xml_decode_entities_inline+0x128>
   2e203:	mov    BYTE PTR [r15-0x1],0x3c
   2e208:	lea    rdx,[rbx+0x4]
   2e20c:	mov    r12,rbp
   2e20f:	mov    QWORD PTR [rsp],rdx
   2e213:	movzx  eax,BYTE PTR [rbx+0x4]
   2e217:	mov    rbx,rdx
   2e21a:	test   al,al
   2e21c:	jne    2e19a <wget_xml_decode_entities_inline+0x6a>
   2e222:	nop    WORD PTR [rax+rax*1+0x0]
   2e228:	mov    BYTE PTR [r15],0x0
   2e22c:	mov    rax,QWORD PTR [rsp+0x8]
   2e231:	sub    rax,QWORD PTR fs:0x28
   2e23a:	jne    2e348 <wget_xml_decode_entities_inline+0x218>
   2e240:	add    rsp,0x18
   2e244:	mov    rax,r12
   2e247:	pop    rbx
   2e248:	pop    rbp
   2e249:	pop    r12
   2e24b:	pop    r13
   2e24d:	pop    r14
   2e24f:	pop    r15
   2e251:	ret    
   2e252:	nop    WORD PTR [rax+rax*1+0x0]
   2e258:	mov    edx,0x5
   2e25d:	lea    rsi,[rip+0x1fb19]        # 4dd7d <powers.0+0xbd>
   2e264:	mov    rdi,r14
   2e267:	call   10b10 <strncmp@plt>
   2e26c:	test   eax,eax
   2e26e:	je     2e310 <wget_xml_decode_entities_inline+0x1e0>
   2e274:	mov    edx,0x5
   2e279:	lea    rsi,[rip+0x1fb03]        # 4dd83 <powers.0+0xc3>
   2e280:	mov    rdi,r14
   2e283:	call   10b10 <strncmp@plt>
   2e288:	test   eax,eax
   2e28a:	jne    2e180 <wget_xml_decode_entities_inline+0x50>
   2e290:	mov    BYTE PTR [r15-0x1],0x27
   2e295:	jmp    2e315 <wget_xml_decode_entities_inline+0x1e5>
   2e297:	nop    WORD PTR [rax+rax*1+0x0]
   2e2a0:	lea    rdx,[rbx+0x5]
   2e2a4:	mov    BYTE PTR [r15-0x1],0x26
   2e2a9:	mov    r12,rbp
   2e2ac:	mov    QWORD PTR [rsp],rdx
   2e2b0:	movzx  eax,BYTE PTR [rbx+0x5]
   2e2b4:	mov    rbx,rdx
   2e2b7:	jmp    2e192 <wget_xml_decode_entities_inline+0x62>
   2e2bc:	nop    DWORD PTR [rax+0x0]
   2e2c0:	cmp    BYTE PTR [rbx+0x2],0x78
   2e2c4:	mov    rsi,rsp
   2e2c7:	je     2e330 <wget_xml_decode_entities_inline+0x200>
   2e2c9:	lea    rdi,[rbx+0x2]
   2e2cd:	mov    edx,0xa
   2e2d2:	call   11c90 <strtol@plt>
   2e2d7:	cmp    al,0x20
   2e2d9:	mov    edx,0x2b
   2e2de:	mov    rbx,QWORD PTR [rsp]
   2e2e2:	mov    r12,rbp
   2e2e5:	cmove  eax,edx
   2e2e8:	mov    BYTE PTR [r15-0x1],al
   2e2ec:	movzx  eax,BYTE PTR [rbx]
   2e2ef:	cmp    al,0x3b
   2e2f1:	jne    2e192 <wget_xml_decode_entities_inline+0x62>
   2e2f7:	lea    rdx,[rbx+0x1]
   2e2fb:	mov    QWORD PTR [rsp],rdx
   2e2ff:	movzx  eax,BYTE PTR [rbx+0x1]
   2e303:	mov    rbx,rdx
   2e306:	jmp    2e192 <wget_xml_decode_entities_inline+0x62>
   2e30b:	nop    DWORD PTR [rax+rax*1+0x0]
   2e310:	mov    BYTE PTR [r15-0x1],0x22
   2e315:	lea    rdx,[rbx+0x6]
   2e319:	mov    r12,rbp
   2e31c:	mov    QWORD PTR [rsp],rdx
   2e320:	movzx  eax,BYTE PTR [rbx+0x6]
   2e324:	mov    rbx,rdx
   2e327:	jmp    2e192 <wget_xml_decode_entities_inline+0x62>
   2e32c:	nop    DWORD PTR [rax+0x0]
   2e330:	lea    rdi,[rbx+0x3]
   2e334:	mov    edx,0x10
   2e339:	call   11c90 <strtol@plt>
   2e33e:	jmp    2e2d7 <wget_xml_decode_entities_inline+0x1a7>
   2e340:	xor    r12d,r12d
   2e343:	jmp    2e228 <wget_xml_decode_entities_inline+0xf8>
   2e348:	call   11760 <__stack_chk_fail@plt>
   2e34d:	nop    DWORD PTR [rax]

000000000002e350 <fd_callback>:
   2e350:	endbr64 
   2e354:	push   r12
   2e356:	mov    r8,rsi
   2e359:	mov    rsi,rdx
   2e35c:	mov    rdx,rcx
   2e35f:	push   rbp
   2e360:	mov    rbp,rcx
   2e363:	sub    rsp,0x8
   2e367:	mov    edi,DWORD PTR [r8]
   2e36a:	call   109b0 <write@plt>
   2e36f:	cmp    rax,0xffffffffffffffff
   2e373:	je     2e388 <fd_callback+0x38>
   2e375:	cmp    rbp,rax
   2e378:	jne    2e388 <fd_callback+0x38>
   2e37a:	add    rsp,0x8
   2e37e:	xor    eax,eax
   2e380:	pop    rbp
   2e381:	pop    r12
   2e383:	ret    
   2e384:	nop    DWORD PTR [rax+0x0]
   2e388:	call   104b0 <__errno_location@plt>
   2e38d:	mov    edx,0x5
   2e392:	lea    rsi,[rip+0x1fa1f]        # 4ddb8 <powers.0+0xf8>
   2e399:	xor    edi,edi
   2e39b:	mov    r12d,DWORD PTR [rax]
   2e39e:	call   10f90 <dcgettext@plt>
   2e3a3:	mov    rsi,rbp
   2e3a6:	mov    rdi,rax
   2e3a9:	mov    edx,r12d
   2e3ac:	xor    eax,eax
   2e3ae:	call   11ea0 <wget_error_printf@plt>
   2e3b3:	add    rsp,0x8
   2e3b7:	xor    eax,eax
   2e3b9:	pop    rbp
   2e3ba:	pop    r12
   2e3bc:	ret    
   2e3bd:	nop    DWORD PTR [rax]

000000000002e3c0 <stream_callback>:
   2e3c0:	endbr64 
   2e3c4:	push   r13
   2e3c6:	mov    rdi,rdx
   2e3c9:	push   r12
   2e3cb:	mov    r12,rsi
   2e3ce:	push   rbp
   2e3cf:	mov    rbp,rcx
   2e3d2:	mov    rcx,rsi
   2e3d5:	mov    esi,0x1
   2e3da:	mov    rdx,rbp
   2e3dd:	call   12730 <fwrite@plt>
   2e3e2:	mov    r8,rax
   2e3e5:	xor    eax,eax
   2e3e7:	cmp    rbp,r8
   2e3ea:	je     2e423 <stream_callback+0x63>
   2e3ec:	call   104b0 <__errno_location@plt>
   2e3f1:	xor    edi,edi
   2e3f3:	mov    edx,0x5
   2e3f8:	lea    rsi,[rip+0x1f9e1]        # 4dde0 <powers.0+0x120>
   2e3ff:	mov    r13d,DWORD PTR [rax]
   2e402:	call   10f90 <dcgettext@plt>
   2e407:	mov    rsi,rbp
   2e40a:	mov    rdi,rax
   2e40d:	mov    edx,r13d
   2e410:	xor    eax,eax
   2e412:	call   11ea0 <wget_error_printf@plt>
   2e417:	mov    rdi,r12
   2e41a:	call   11fc0 <feof@plt>
   2e41f:	neg    eax
   2e421:	sbb    eax,eax
   2e423:	pop    rbp
   2e424:	pop    r12
   2e426:	pop    r13
   2e428:	ret    
   2e429:	nop    DWORD PTR [rax+0x0]

000000000002e430 <wget_http_get>:
   2e430:	endbr64 
   2e434:	push   r15
   2e436:	push   r14
   2e438:	push   r13
   2e43a:	push   r12
   2e43c:	push   rbp
   2e43d:	mov    ebp,edi
   2e43f:	mov    edi,0x3f3
   2e444:	push   rbx
   2e445:	sub    rsp,0x528
   2e44c:	mov    QWORD PTR [rsp+0x4f8],rsi
   2e454:	mov    QWORD PTR [rsp+0x500],rdx
   2e45c:	mov    QWORD PTR [rsp+0x508],rcx
   2e464:	mov    QWORD PTR [rsp+0x510],r8
   2e46c:	mov    QWORD PTR [rsp+0x518],r9
   2e474:	mov    rax,QWORD PTR fs:0x28
   2e47d:	mov    QWORD PTR [rsp+0x4e8],rax
   2e485:	xor    eax,eax
   2e487:	mov    DWORD PTR [rsp+0x6c],0xffffffff
   2e48f:	mov    QWORD PTR [rsp+0x78],0x0
   2e498:	mov    QWORD PTR [rsp+0x80],0x0
   2e4a4:	mov    QWORD PTR [rsp+0x90],0x0
   2e4b0:	mov    QWORD PTR [rsp+0x98],0x0
   2e4bc:	call   11ab0 <wget_global_get_int@plt>
   2e4c1:	mov    edi,0x8
   2e4c6:	test   eax,eax
   2e4c8:	setne  BYTE PTR [rsp+0x47]
   2e4cd:	xor    esi,esi
   2e4cf:	call   11f00 <wget_vector_create@plt>
   2e4d4:	mov    QWORD PTR [rsp+0x70],rax
   2e4d9:	test   rax,rax
   2e4dc:	je     2f2dc <wget_http_get+0xeac>
   2e4e2:	lea    rax,[rsp+0x560]
   2e4ea:	mov    DWORD PTR [rsp+0xc8],0x8
   2e4f5:	mov    QWORD PTR [rsp+0xd0],rax
   2e4fd:	lea    rax,[rsp+0x4f0]
   2e505:	mov    QWORD PTR [rsp+0xd8],rax
   2e50d:	test   ebp,ebp
   2e50f:	je     2f1e8 <wget_http_get+0xdb8>
   2e515:	mov    QWORD PTR [rsp+0x38],0x0
   2e51e:	xor    r15d,r15d
   2e521:	mov    edx,ebp
   2e523:	xor    ebx,ebx
   2e525:	mov    QWORD PTR [rsp+0x20],0x0
   2e52e:	xor    r9d,r9d
   2e531:	xor    r8d,r8d
   2e534:	mov    ebp,r15d
   2e537:	mov    QWORD PTR [rsp],0x0
   2e53f:	mov    r14,r8
   2e542:	mov    r15,r9
   2e545:	lea    r13,[rip+0x1e3f9]        # 4c945 <maybe+0x6a5>
   2e54c:	mov    QWORD PTR [rsp+0x8],0x0
   2e555:	lea    r12,[rip+0x1f978]        # 4ded4 <powers.0+0x214>
   2e55c:	mov    DWORD PTR [rsp+0x40],0x5
   2e564:	mov    QWORD PTR [rsp+0x10],0x0
   2e56d:	mov    QWORD PTR [rsp+0x18],0x0
   2e576:	mov    QWORD PTR [rsp+0x30],0x0
   2e57f:	mov    QWORD PTR [rsp+0x28],0x0
   2e588:	nop    DWORD PTR [rax+rax*1+0x0]
   2e590:	lea    eax,[rdx-0x7d0]
   2e596:	cmp    eax,0x12
   2e599:	ja     2e5a8 <wget_http_get+0x178>
   2e59b:	movsxd rax,DWORD PTR [r12+rax*4]
   2e59f:	add    rax,r12
   2e5a2:	notrack jmp rax
   2e5a5:	nop    DWORD PTR [rax]
   2e5a8:	mov    ebp,edx
   2e5aa:	lea    rsi,[rip+0x1f88b]        # 4de3c <powers.0+0x17c>
   2e5b1:	xor    edi,edi
   2e5b3:	mov    edx,0x5
   2e5b8:	call   10f90 <dcgettext@plt>
   2e5bd:	mov    esi,ebp
   2e5bf:	mov    rdi,rax
   2e5c2:	xor    eax,eax
   2e5c4:	call   11ea0 <wget_error_printf@plt>
   2e5c9:	xor    ebp,ebp
   2e5cb:	lea    r12,[rsp+0x98]
   2e5d3:	test   rbx,rbx
   2e5d6:	je     2e95a <wget_http_get+0x52a>
   2e5dc:	mov    rax,QWORD PTR [rsp+0x80]
   2e5e4:	mov    QWORD PTR [rbx],rax
   2e5e7:	mov    rdi,r12
   2e5ea:	call   11b10 <wget_http_free_challenges@plt>
   2e5ef:	lea    rdi,[rsp+0x70]
   2e5f4:	call   125e0 <wget_vector_free@plt>
   2e5f9:	and    ebp,0x1
   2e5fc:	jne    2eed0 <wget_http_get+0xaa0>
   2e602:	mov    r12,QWORD PTR [rsp+0x90]
   2e60a:	mov    rax,QWORD PTR [rsp+0x4e8]
   2e612:	sub    rax,QWORD PTR fs:0x28
   2e61b:	jne    2f2d7 <wget_http_get+0xea7>
   2e621:	add    rsp,0x528
   2e628:	mov    rax,r12
   2e62b:	pop    rbx
   2e62c:	pop    rbp
   2e62d:	pop    r12
   2e62f:	pop    r13
   2e631:	pop    r14
   2e633:	pop    r15
   2e635:	ret    
   2e636:	cs nop WORD PTR [rax+rax*1+0x0]
   2e640:	mov    eax,DWORD PTR [rsp+0xc8]
   2e647:	cmp    eax,0x2f
   2e64a:	ja     2ed98 <wget_http_get+0x968>
   2e650:	mov    edx,eax
   2e652:	add    eax,0x8
   2e655:	add    rdx,QWORD PTR [rsp+0xd8]
   2e65d:	mov    DWORD PTR [rsp+0xc8],eax
   2e664:	mov    rcx,QWORD PTR [rdx]
   2e667:	mov    QWORD PTR [rsp+0x10],rcx
   2e66c:	cmp    eax,0x2f
   2e66f:	jbe    2ecc1 <wget_http_get+0x891>
   2e675:	nop    DWORD PTR [rax]
   2e678:	mov    rdx,QWORD PTR [rsp+0xd0]
   2e680:	lea    rax,[rdx+0x8]
   2e684:	mov    edx,DWORD PTR [rdx]
   2e686:	mov    QWORD PTR [rsp+0xd0],rax
   2e68e:	test   edx,edx
   2e690:	jne    2e590 <wget_http_get+0x160>
   2e696:	mov    rdx,QWORD PTR [rsp+0x78]
   2e69b:	test   r14,r14
   2e69e:	mov    r9,r15
   2e6a1:	mov    r15d,ebp
   2e6a4:	setne  bpl
   2e6a8:	test   rdx,rdx
   2e6ab:	sete   al
   2e6ae:	and    bpl,al
   2e6b1:	jne    2f0b0 <wget_http_get+0xc80>
   2e6b7:	xor    ebp,ebp
   2e6b9:	test   rdx,rdx
   2e6bc:	je     2f24d <wget_http_get+0xe1d>
   2e6c2:	mov    edx,ebp
   2e6c4:	lea    eax,[r15+r15*1]
   2e6c8:	or     al,BYTE PTR [rsp+0x47]
   2e6cc:	xor    ecx,ecx
   2e6ce:	and    edx,0x1
   2e6d1:	shl    edx,0x2
   2e6d4:	or     edx,eax
   2e6d6:	mov    BYTE PTR [rsp+0x5d],dl
   2e6da:	test   al,0x1
   2e6dc:	jne    2f188 <wget_http_get+0xd58>
   2e6e2:	mov    rdi,QWORD PTR [rsp+0x78]
   2e6e7:	mov    eax,DWORD PTR [rsp+0x40]
   2e6eb:	test   rdi,rdi
   2e6ee:	not    eax
   2e6f0:	setne  dl
   2e6f3:	shr    eax,0x1f
   2e6f6:	and    dl,al
   2e6f8:	mov    BYTE PTR [rsp+0x5e],dl
   2e6fc:	je     2e5cb <wget_http_get+0x19b>
   2e702:	lea    eax,[r15+r15*1]
   2e706:	mov    BYTE PTR [rsp+0x5c],bpl
   2e70b:	mov    r14,rcx
   2e70e:	lea    r12,[rsp+0x98]
   2e716:	mov    DWORD PTR [rsp+0x58],0x0
   2e71e:	mov    BYTE PTR [rsp+0x5f],al
   2e722:	mov    rsi,r13
   2e725:	call   11fb0 <wget_http_create_request@plt>
   2e72a:	mov    QWORD PTR [rsp+0x88],rax
   2e732:	test   rax,rax
   2e735:	je     2e94c <wget_http_get+0x51c>
   2e73b:	xor    r15d,r15d
   2e73e:	jmp    2e75f <wget_http_get+0x32f>
   2e740:	mov    esi,r15d
   2e743:	mov    rdi,rbp
   2e746:	add    r15d,0x1
   2e74a:	call   10c00 <wget_vector_get@plt>
   2e74f:	mov    rdi,QWORD PTR [rsp+0x88]
   2e757:	mov    rsi,rax
   2e75a:	call   12500 <wget_http_add_header_param@plt>
   2e75f:	mov    rbp,QWORD PTR [rsp+0x70]
   2e764:	mov    rdi,rbp
   2e767:	call   10e90 <wget_vector_size@plt>
   2e76c:	cmp    eax,r15d
   2e76f:	jg     2e740 <wget_http_get+0x310>
   2e771:	mov    rdi,QWORD PTR [rsp+0x98]
   2e779:	test   rdi,rdi
   2e77c:	je     2e7a4 <wget_http_get+0x374>
   2e77e:	xor    esi,esi
   2e780:	call   10c00 <wget_vector_get@plt>
   2e785:	xor    r8d,r8d
   2e788:	xor    ecx,ecx
   2e78a:	xor    edx,edx
   2e78c:	mov    rdi,QWORD PTR [rsp+0x88]
   2e794:	mov    rsi,rax
   2e797:	call   12060 <wget_http_add_credentials@plt>
   2e79c:	mov    rdi,r12
   2e79f:	call   11b10 <wget_http_free_challenges@plt>
   2e7a4:	test   r14,r14
   2e7a7:	je     2e7e1 <wget_http_get+0x3b1>
   2e7a9:	mov    rsi,QWORD PTR [rsp+0x78]
   2e7ae:	mov    rdi,r14
   2e7b1:	call   11a50 <wget_cookie_create_request_header@plt>
   2e7b6:	mov    r15,rax
   2e7b9:	test   rax,rax
   2e7bc:	je     2e7e1 <wget_http_get+0x3b1>
   2e7be:	mov    rdi,QWORD PTR [rsp+0x88]
   2e7c6:	mov    rdx,rax
   2e7c9:	lea    rsi,[rip+0x1f6a3]        # 4de73 <powers.0+0x1b3>
   2e7d0:	call   11f20 <wget_http_add_header@plt>
   2e7d5:	mov    rax,QWORD PTR [rip+0x4780c]        # 75fe8 <wget_free@@Base-0x1328>
   2e7dc:	mov    rdi,r15
   2e7df:	call   QWORD PTR [rax]
   2e7e1:	test   rbx,rbx
   2e7e4:	je     2e801 <wget_http_get+0x3d1>
   2e7e6:	mov    rdi,QWORD PTR [rsp+0x88]
   2e7ee:	lea    rdx,[rip+0x1f685]        # 4de7a <powers.0+0x1ba>
   2e7f5:	lea    rsi,[rip+0x1f688]        # 4de84 <powers.0+0x1c4>
   2e7fc:	call   11f20 <wget_http_add_header@plt>
   2e801:	mov    rdx,QWORD PTR [rsp+0x80]
   2e809:	mov    r15,QWORD PTR [rsp+0x78]
   2e80e:	lea    rdi,[rsp+0x80]
   2e816:	test   rdx,rdx
   2e819:	je     2e86f <wget_http_get+0x43f>
   2e81b:	mov    r8,QWORD PTR [rdx+0x8]
   2e81f:	mov    rsi,QWORD PTR [r15+0x20]
   2e823:	mov    QWORD PTR [rsp+0x50],rdx
   2e828:	mov    rdi,r8
   2e82b:	mov    QWORD PTR [rsp+0x48],r8
   2e830:	call   103f0 <wget_strcmp@plt>
   2e835:	mov    r8,QWORD PTR [rsp+0x48]
   2e83a:	test   eax,eax
   2e83c:	je     2eee0 <wget_http_get+0xab0>
   2e842:	mov    rsi,r8
   2e845:	lea    rdi,[rip+0x1f658]        # 4dea4 <powers.0+0x1e4>
   2e84c:	xor    eax,eax
   2e84e:	call   114b0 <wget_debug_printf@plt>
   2e853:	lea    rdi,[rsp+0x80]
   2e85b:	mov    QWORD PTR [rsp+0x48],rdi
   2e860:	call   11830 <wget_http_close@plt>
   2e865:	mov    r15,QWORD PTR [rsp+0x78]
   2e86a:	mov    rdi,QWORD PTR [rsp+0x48]
   2e86f:	mov    rsi,r15
   2e872:	call   106b0 <wget_http_open@plt>
   2e877:	test   eax,eax
   2e879:	je     2efd0 <wget_http_get+0xba0>
   2e87f:	mov    rdi,QWORD PTR [rsp+0x80]
   2e887:	test   rdi,rdi
   2e88a:	je     2e8b8 <wget_http_get+0x488>
   2e88c:	mov    rax,QWORD PTR [rsp]
   2e890:	test   rax,rax
   2e893:	je     2e8a3 <wget_http_get+0x473>
   2e895:	mov    r15,QWORD PTR [rsp+0x8]
   2e89a:	test   r15,r15
   2e89d:	jne    2ef20 <wget_http_get+0xaf0>
   2e8a3:	mov    rsi,QWORD PTR [rsp+0x88]
   2e8ab:	call   11e80 <wget_http_send_request@plt>
   2e8b0:	test   eax,eax
   2e8b2:	je     2f0f8 <wget_http_get+0xcc8>
   2e8b8:	lea    rdi,[rsp+0x88]
   2e8c0:	call   11800 <wget_http_free_request@plt>
   2e8c5:	mov    rax,QWORD PTR [rsp+0x90]
   2e8cd:	test   rax,rax
   2e8d0:	je     2e94c <wget_http_get+0x51c>
   2e8d2:	cmp    BYTE PTR [rax+0xca],0x0
   2e8d9:	je     2efb0 <wget_http_get+0xb80>
   2e8df:	test   r14,r14
   2e8e2:	je     2e90e <wget_http_get+0x4de>
   2e8e4:	mov    rsi,QWORD PTR [rax+0x18]
   2e8e8:	mov    rdi,QWORD PTR [rsp+0x78]
   2e8ed:	call   10bb0 <wget_cookie_normalize_cookies@plt>
   2e8f2:	mov    rax,QWORD PTR [rsp+0x90]
   2e8fa:	mov    rdi,r14
   2e8fd:	mov    rsi,QWORD PTR [rax+0x18]
   2e901:	call   11050 <wget_cookie_store_cookies@plt>
   2e906:	mov    rax,QWORD PTR [rsp+0x90]
   2e90e:	movzx  edx,WORD PTR [rax+0xc0]
   2e915:	cmp    dx,0x191
   2e91a:	je     2ef50 <wget_http_get+0xb20>
   2e920:	cmp    dx,0x130
   2e925:	sete   cl
   2e928:	cmp    dx,0x18f
   2e92d:	setg   sil
   2e931:	or     cl,sil
   2e934:	jne    2e94c <wget_http_get+0x51c>
   2e936:	sub    dx,0xc8
   2e93b:	cmp    dx,0x63
   2e93f:	jbe    2e94c <wget_http_get+0x51c>
   2e941:	cmp    QWORD PTR [rax+0x48],0x0
   2e946:	jne    2eff0 <wget_http_get+0xbc0>
   2e94c:	movzx  ebp,BYTE PTR [rsp+0x5c]
   2e951:	test   rbx,rbx
   2e954:	jne    2e5dc <wget_http_get+0x1ac>
   2e95a:	lea    rdi,[rsp+0x80]
   2e962:	call   11830 <wget_http_close@plt>
   2e967:	jmp    2e5e7 <wget_http_get+0x1b7>
   2e96c:	nop    DWORD PTR [rax+0x0]
   2e970:	mov    eax,DWORD PTR [rsp+0xc8]
   2e977:	cmp    eax,0x2f
   2e97a:	ja     2ed70 <wget_http_get+0x940>
   2e980:	mov    rdx,QWORD PTR [rsp+0xd8]
   2e988:	mov    esi,eax
   2e98a:	lea    ecx,[rax+0x8]
   2e98d:	mov    DWORD PTR [rsp+0xc8],ecx
   2e994:	mov    rsi,QWORD PTR [rdx+rsi*1]
   2e998:	mov    QWORD PTR [rsp],rsi
   2e99c:	cmp    ecx,0x2f
   2e99f:	ja     2f310 <wget_http_get+0xee0>
   2e9a5:	add    eax,0x10
   2e9a8:	add    rdx,rcx
   2e9ab:	mov    DWORD PTR [rsp+0xc8],eax
   2e9b2:	mov    rcx,QWORD PTR [rdx]
   2e9b5:	mov    QWORD PTR [rsp+0x8],rcx
   2e9ba:	jmp    2ecb8 <wget_http_get+0x888>
   2e9bf:	nop
   2e9c0:	mov    eax,DWORD PTR [rsp+0xc8]
   2e9c7:	cmp    eax,0x2f
   2e9ca:	ja     2ed50 <wget_http_get+0x920>
   2e9d0:	mov    edx,eax
   2e9d2:	add    eax,0x8
   2e9d5:	add    rdx,QWORD PTR [rsp+0xd8]
   2e9dd:	mov    DWORD PTR [rsp+0xc8],eax
   2e9e4:	mov    r13,QWORD PTR [rdx]
   2e9e7:	jmp    2ecb8 <wget_http_get+0x888>
   2e9ec:	nop    DWORD PTR [rax+0x0]
   2e9f0:	mov    eax,DWORD PTR [rsp+0xc8]
   2e9f7:	cmp    eax,0x2f
   2e9fa:	ja     2ed28 <wget_http_get+0x8f8>
   2ea00:	mov    rdx,QWORD PTR [rsp+0xd8]
   2ea08:	mov    esi,eax
   2ea0a:	lea    ecx,[rax+0x8]
   2ea0d:	mov    DWORD PTR [rsp+0xc8],ecx
   2ea14:	mov    rsi,QWORD PTR [rdx+rsi*1]
   2ea18:	mov    QWORD PTR [rsp+0x18],rsi
   2ea1d:	cmp    ecx,0x2f
   2ea20:	ja     2f301 <wget_http_get+0xed1>
   2ea26:	add    eax,0x10
   2ea29:	add    rdx,rcx
   2ea2c:	mov    DWORD PTR [rsp+0xc8],eax
   2ea33:	mov    rcx,QWORD PTR [rdx]
   2ea36:	mov    QWORD PTR [rsp+0x20],rcx
   2ea3b:	jmp    2ecb8 <wget_http_get+0x888>
   2ea40:	mov    eax,DWORD PTR [rsp+0xc8]
   2ea47:	cmp    eax,0x2f
   2ea4a:	ja     2ed00 <wget_http_get+0x8d0>
   2ea50:	mov    rdx,QWORD PTR [rsp+0xd8]
   2ea58:	mov    esi,eax
   2ea5a:	lea    ecx,[rax+0x8]
   2ea5d:	mov    DWORD PTR [rsp+0xc8],ecx
   2ea64:	mov    rsi,QWORD PTR [rdx+rsi*1]
   2ea68:	mov    QWORD PTR [rsp+0x30],rsi
   2ea6d:	cmp    ecx,0x2f
   2ea70:	ja     2f2f2 <wget_http_get+0xec2>
   2ea76:	add    eax,0x10
   2ea79:	add    rdx,rcx
   2ea7c:	mov    DWORD PTR [rsp+0xc8],eax
   2ea83:	mov    rcx,QWORD PTR [rdx]
   2ea86:	mov    QWORD PTR [rsp+0x38],rcx
   2ea8b:	jmp    2ecb8 <wget_http_get+0x888>
   2ea90:	mov    eax,DWORD PTR [rsp+0xc8]
   2ea97:	cmp    eax,0x2f
   2ea9a:	jbe    2ee18 <wget_http_get+0x9e8>
   2eaa0:	mov    rdx,QWORD PTR [rsp+0xd0]
   2eaa8:	lea    rcx,[rdx+0x8]
   2eaac:	mov    QWORD PTR [rsp+0xd0],rcx
   2eab4:	mov    edx,DWORD PTR [rdx]
   2eab6:	mov    DWORD PTR [rsp+0x6c],edx
   2eaba:	jmp    2ecb8 <wget_http_get+0x888>
   2eabf:	nop
   2eac0:	mov    eax,DWORD PTR [rsp+0xc8]
   2eac7:	cmp    eax,0x2f
   2eaca:	ja     2edf8 <wget_http_get+0x9c8>
   2ead0:	mov    edx,eax
   2ead2:	add    eax,0x8
   2ead5:	add    rdx,QWORD PTR [rsp+0xd8]
   2eadd:	mov    DWORD PTR [rsp+0xc8],eax
   2eae4:	mov    rcx,QWORD PTR [rdx]
   2eae7:	mov    QWORD PTR [rsp+0x28],rcx
   2eaec:	jmp    2ecb8 <wget_http_get+0x888>
   2eaf1:	nop    DWORD PTR [rax+0x0]
   2eaf8:	mov    eax,DWORD PTR [rsp+0xc8]
   2eaff:	cmp    eax,0x2f
   2eb02:	ja     2edd8 <wget_http_get+0x9a8>
   2eb08:	mov    edx,eax
   2eb0a:	add    eax,0x8
   2eb0d:	add    rdx,QWORD PTR [rsp+0xd8]
   2eb15:	mov    DWORD PTR [rsp+0xc8],eax
   2eb1c:	mov    ecx,DWORD PTR [rdx]
   2eb1e:	mov    DWORD PTR [rsp+0x40],ecx
   2eb22:	jmp    2ecb8 <wget_http_get+0x888>
   2eb27:	nop    WORD PTR [rax+rax*1+0x0]
   2eb30:	mov    eax,DWORD PTR [rsp+0xc8]
   2eb37:	cmp    eax,0x2f
   2eb3a:	ja     2edb8 <wget_http_get+0x988>
   2eb40:	mov    edx,eax
   2eb42:	add    eax,0x8
   2eb45:	add    rdx,QWORD PTR [rsp+0xd8]
   2eb4d:	mov    DWORD PTR [rsp+0xc8],eax
   2eb54:	mov    ecx,DWORD PTR [rdx]
   2eb56:	test   ecx,ecx
   2eb58:	setne  bpl
   2eb5c:	jmp    2ecb8 <wget_http_get+0x888>
   2eb61:	nop    DWORD PTR [rax+0x0]
   2eb68:	mov    eax,DWORD PTR [rsp+0xc8]
   2eb6f:	cmp    eax,0x2f
   2eb72:	jbe    2ee70 <wget_http_get+0xa40>
   2eb78:	mov    rdx,QWORD PTR [rsp+0xd0]
   2eb80:	lea    rcx,[rdx+0x8]
   2eb84:	mov    QWORD PTR [rsp+0xd0],rcx
   2eb8c:	mov    rbx,QWORD PTR [rdx]
   2eb8f:	test   rbx,rbx
   2eb92:	je     2ecb8 <wget_http_get+0x888>
   2eb98:	mov    rdx,QWORD PTR [rbx]
   2eb9b:	mov    QWORD PTR [rsp+0x80],rdx
   2eba3:	jmp    2ecb8 <wget_http_get+0x888>
   2eba8:	nop    DWORD PTR [rax+rax*1+0x0]
   2ebb0:	mov    edx,DWORD PTR [rsp+0xc8]
   2ebb7:	cmp    edx,0x2f
   2ebba:	ja     2ee38 <wget_http_get+0xa08>
   2ebc0:	mov    rsi,QWORD PTR [rsp+0xd8]
   2ebc8:	mov    ecx,edx
   2ebca:	lea    eax,[rdx+0x8]
   2ebcd:	mov    DWORD PTR [rsp+0xc8],eax
   2ebd4:	mov    rcx,QWORD PTR [rsi+rcx*1]
   2ebd8:	mov    QWORD PTR [rsp+0xa0],rcx
   2ebe0:	cmp    eax,0x2f
   2ebe3:	ja     2f31f <wget_http_get+0xeef>
   2ebe9:	add    edx,0x10
   2ebec:	add    rax,rsi
   2ebef:	mov    DWORD PTR [rsp+0xc8],edx
   2ebf6:	mov    rax,QWORD PTR [rax]
   2ebf9:	mov    rdi,QWORD PTR [rsp+0x70]
   2ebfe:	mov    edx,0x10
   2ec03:	lea    rsi,[rsp+0xa0]
   2ec0b:	mov    QWORD PTR [rsp+0xa8],rax
   2ec13:	call   11a20 <wget_vector_add_memdup@plt>
   2ec18:	test   eax,eax
   2ec1a:	js     2e5c9 <wget_http_get+0x199>
   2ec20:	mov    eax,DWORD PTR [rsp+0xc8]
   2ec27:	jmp    2ecb8 <wget_http_get+0x888>
   2ec2c:	nop    DWORD PTR [rax+0x0]
   2ec30:	mov    eax,DWORD PTR [rsp+0xc8]
   2ec37:	cmp    eax,0x2f
   2ec3a:	jbe    2ee90 <wget_http_get+0xa60>
   2ec40:	mov    rdx,QWORD PTR [rsp+0xd0]
   2ec48:	lea    rcx,[rdx+0x8]
   2ec4c:	mov    QWORD PTR [rsp+0xd0],rcx
   2ec54:	mov    rdx,QWORD PTR [rdx]
   2ec57:	mov    QWORD PTR [rsp+0x78],rdx
   2ec5c:	jmp    2ecb8 <wget_http_get+0x888>
   2ec5e:	xchg   ax,ax
   2ec60:	mov    eax,DWORD PTR [rsp+0xc8]
   2ec67:	cmp    eax,0x2f
   2ec6a:	jbe    2eeb0 <wget_http_get+0xa80>
   2ec70:	mov    rdx,QWORD PTR [rsp+0xd0]
   2ec78:	lea    rcx,[rdx+0x8]
   2ec7c:	mov    QWORD PTR [rsp+0xd0],rcx
   2ec84:	mov    r15,QWORD PTR [rdx]
   2ec87:	jmp    2ecb8 <wget_http_get+0x888>
   2ec89:	nop    DWORD PTR [rax+0x0]
   2ec90:	mov    eax,DWORD PTR [rsp+0xc8]
   2ec97:	cmp    eax,0x2f
   2ec9a:	ja     2ece8 <wget_http_get+0x8b8>
   2ec9c:	mov    edx,eax
   2ec9e:	add    eax,0x8
   2eca1:	add    rdx,QWORD PTR [rsp+0xd8]
   2eca9:	mov    DWORD PTR [rsp+0xc8],eax
   2ecb0:	mov    r14,QWORD PTR [rdx]
   2ecb3:	nop    DWORD PTR [rax+rax*1+0x0]
   2ecb8:	cmp    eax,0x2f
   2ecbb:	ja     2e678 <wget_http_get+0x248>
   2ecc1:	mov    edx,eax
   2ecc3:	add    rdx,QWORD PTR [rsp+0xd8]
   2eccb:	add    eax,0x8
   2ecce:	mov    edx,DWORD PTR [rdx]
   2ecd0:	mov    DWORD PTR [rsp+0xc8],eax
   2ecd7:	test   edx,edx
   2ecd9:	jne    2e590 <wget_http_get+0x160>
   2ecdf:	jmp    2e696 <wget_http_get+0x266>
   2ece4:	nop    DWORD PTR [rax+0x0]
   2ece8:	mov    rdx,QWORD PTR [rsp+0xd0]
   2ecf0:	lea    rcx,[rdx+0x8]
   2ecf4:	mov    QWORD PTR [rsp+0xd0],rcx
   2ecfc:	jmp    2ecb0 <wget_http_get+0x880>
   2ecfe:	xchg   ax,ax
   2ed00:	mov    rcx,QWORD PTR [rsp+0xd0]
   2ed08:	lea    rdx,[rcx+0x8]
   2ed0c:	mov    rcx,QWORD PTR [rcx]
   2ed0f:	mov    QWORD PTR [rsp+0x30],rcx
   2ed14:	lea    rcx,[rdx+0x8]
   2ed18:	mov    QWORD PTR [rsp+0xd0],rcx
   2ed20:	jmp    2ea83 <wget_http_get+0x653>
   2ed25:	nop    DWORD PTR [rax]
   2ed28:	mov    rcx,QWORD PTR [rsp+0xd0]
   2ed30:	lea    rdx,[rcx+0x8]
   2ed34:	mov    rcx,QWORD PTR [rcx]
   2ed37:	mov    QWORD PTR [rsp+0x18],rcx
   2ed3c:	lea    rcx,[rdx+0x8]
   2ed40:	mov    QWORD PTR [rsp+0xd0],rcx
   2ed48:	jmp    2ea33 <wget_http_get+0x603>
   2ed4d:	nop    DWORD PTR [rax]
   2ed50:	mov    rdx,QWORD PTR [rsp+0xd0]
   2ed58:	lea    rcx,[rdx+0x8]
   2ed5c:	mov    QWORD PTR [rsp+0xd0],rcx
   2ed64:	jmp    2e9e4 <wget_http_get+0x5b4>
   2ed69:	nop    DWORD PTR [rax+0x0]
   2ed70:	mov    rcx,QWORD PTR [rsp+0xd0]
   2ed78:	lea    rdx,[rcx+0x8]
   2ed7c:	mov    rcx,QWORD PTR [rcx]
   2ed7f:	mov    QWORD PTR [rsp],rcx
   2ed83:	lea    rcx,[rdx+0x8]
   2ed87:	mov    QWORD PTR [rsp+0xd0],rcx
   2ed8f:	jmp    2e9b2 <wget_http_get+0x582>
   2ed94:	nop    DWORD PTR [rax+0x0]
   2ed98:	mov    rdx,QWORD PTR [rsp+0xd0]
   2eda0:	lea    rcx,[rdx+0x8]
   2eda4:	mov    QWORD PTR [rsp+0xd0],rcx
   2edac:	jmp    2e664 <wget_http_get+0x234>
   2edb1:	nop    DWORD PTR [rax+0x0]
   2edb8:	mov    rdx,QWORD PTR [rsp+0xd0]
   2edc0:	lea    rcx,[rdx+0x8]
   2edc4:	mov    QWORD PTR [rsp+0xd0],rcx
   2edcc:	jmp    2eb54 <wget_http_get+0x724>
   2edd1:	nop    DWORD PTR [rax+0x0]
   2edd8:	mov    rdx,QWORD PTR [rsp+0xd0]
   2ede0:	lea    rcx,[rdx+0x8]
   2ede4:	mov    QWORD PTR [rsp+0xd0],rcx
   2edec:	jmp    2eb1c <wget_http_get+0x6ec>
   2edf1:	nop    DWORD PTR [rax+0x0]
   2edf8:	mov    rdx,QWORD PTR [rsp+0xd0]
   2ee00:	lea    rcx,[rdx+0x8]
   2ee04:	mov    QWORD PTR [rsp+0xd0],rcx
   2ee0c:	jmp    2eae4 <wget_http_get+0x6b4>
   2ee11:	nop    DWORD PTR [rax+0x0]
   2ee18:	mov    edx,eax
   2ee1a:	add    eax,0x8
   2ee1d:	add    rdx,QWORD PTR [rsp+0xd8]
   2ee25:	mov    DWORD PTR [rsp+0xc8],eax
   2ee2c:	jmp    2eab4 <wget_http_get+0x684>
   2ee31:	nop    DWORD PTR [rax+0x0]
   2ee38:	mov    rax,QWORD PTR [rsp+0xd0]
   2ee40:	mov    rdx,rax
   2ee43:	add    rax,0x8
   2ee47:	mov    rdx,QWORD PTR [rdx]
   2ee4a:	mov    QWORD PTR [rsp+0xd0],rax
   2ee52:	mov    QWORD PTR [rsp+0xa0],rdx
   2ee5a:	lea    rdx,[rax+0x8]
   2ee5e:	mov    QWORD PTR [rsp+0xd0],rdx
   2ee66:	jmp    2ebf6 <wget_http_get+0x7c6>
   2ee6b:	nop    DWORD PTR [rax+rax*1+0x0]
   2ee70:	mov    edx,eax
   2ee72:	add    eax,0x8
   2ee75:	add    rdx,QWORD PTR [rsp+0xd8]
   2ee7d:	mov    DWORD PTR [rsp+0xc8],eax
   2ee84:	jmp    2eb8c <wget_http_get+0x75c>
   2ee89:	nop    DWORD PTR [rax+0x0]
   2ee90:	mov    edx,eax
   2ee92:	add    eax,0x8
   2ee95:	add    rdx,QWORD PTR [rsp+0xd8]
   2ee9d:	mov    DWORD PTR [rsp+0xc8],eax
   2eea4:	jmp    2ec54 <wget_http_get+0x824>
   2eea9:	nop    DWORD PTR [rax+0x0]
   2eeb0:	mov    edx,eax
   2eeb2:	add    eax,0x8
   2eeb5:	add    rdx,QWORD PTR [rsp+0xd8]
   2eebd:	mov    DWORD PTR [rsp+0xc8],eax
   2eec4:	jmp    2ec84 <wget_http_get+0x854>
   2eec9:	nop    DWORD PTR [rax+0x0]
   2eed0:	lea    rdi,[rsp+0x78]
   2eed5:	call   11bc0 <wget_iri_free@plt>
   2eeda:	jmp    2e602 <wget_http_get+0x1d2>
   2eedf:	nop
   2eee0:	mov    rdx,QWORD PTR [rsp+0x50]
   2eee5:	mov    eax,DWORD PTR [r15+0x5c]
   2eee9:	cmp    DWORD PTR [rdx+0x2c],eax
   2eeec:	jne    2e842 <wget_http_get+0x412>
   2eef2:	movzx  eax,WORD PTR [r15+0x58]
   2eef7:	cmp    WORD PTR [rdx+0x30],ax
   2eefb:	jne    2e842 <wget_http_get+0x412>
   2ef01:	mov    rsi,r8
   2ef04:	lea    rdi,[rip+0x1ef84]        # 4de8f <powers.0+0x1cf>
   2ef0b:	xor    eax,eax
   2ef0d:	call   114b0 <wget_debug_printf@plt>
   2ef12:	jmp    2e87f <wget_http_get+0x44f>
   2ef17:	nop    WORD PTR [rax+rax*1+0x0]
   2ef20:	mov    rsi,r15
   2ef23:	mov    rdi,rax
   2ef26:	call   10dc0 <wget_memdup@plt>
   2ef2b:	mov    rdi,QWORD PTR [rsp+0x88]
   2ef33:	mov    rcx,r15
   2ef36:	xor    esi,esi
   2ef38:	mov    rdx,rax
   2ef3b:	call   127c0 <wget_http_request_set_body@plt>
   2ef40:	mov    rdi,QWORD PTR [rsp+0x80]
   2ef48:	jmp    2e8a3 <wget_http_get+0x473>
   2ef4d:	nop    DWORD PTR [rax]
   2ef50:	cmp    QWORD PTR [rsp+0x98],0x0
   2ef59:	jne    2e94c <wget_http_get+0x51c>
   2ef5f:	mov    rdx,QWORD PTR [rax+0x20]
   2ef63:	mov    QWORD PTR [rsp+0x98],rdx
   2ef6b:	test   rdx,rdx
   2ef6e:	je     2e94c <wget_http_get+0x51c>
   2ef74:	mov    QWORD PTR [rax+0x20],0x0
   2ef7c:	lea    rdi,[rsp+0x90]
   2ef84:	call   11310 <wget_http_free_response@plt>
   2ef89:	mov    eax,DWORD PTR [rsp+0x58]
   2ef8d:	mov    edx,DWORD PTR [rsp+0x40]
   2ef91:	test   eax,eax
   2ef93:	sete   al
   2ef96:	test   edx,edx
   2ef98:	setne  dl
   2ef9b:	and    al,dl
   2ef9d:	je     2e94c <wget_http_get+0x51c>
   2efa3:	mov    ecx,DWORD PTR [rsp+0x40]
   2efa7:	mov    DWORD PTR [rsp+0x58],ecx
   2efab:	jmp    2f092 <wget_http_get+0xc62>
   2efb0:	lea    rdi,[rsp+0x80]
   2efb8:	call   11830 <wget_http_close@plt>
   2efbd:	mov    rax,QWORD PTR [rsp+0x90]
   2efc5:	jmp    2e8df <wget_http_get+0x4af>
   2efca:	nop    WORD PTR [rax+rax*1+0x0]
   2efd0:	mov    rax,QWORD PTR [rsp+0x80]
   2efd8:	lea    rdi,[rip+0x1eeda]        # 4deb9 <powers.0+0x1f9>
   2efdf:	mov    rsi,QWORD PTR [rax+0x8]
   2efe3:	xor    eax,eax
   2efe5:	call   114b0 <wget_debug_printf@plt>
   2efea:	jmp    2e87f <wget_http_get+0x44f>
   2efef:	nop
   2eff0:	lea    r15,[rsp+0xa0]
   2eff8:	lea    rsi,[rsp+0xe0]
   2f000:	mov    edx,0x400
   2f005:	mov    rdi,r15
   2f008:	call   108d0 <wget_buffer_init@plt>
   2f00d:	mov    rax,QWORD PTR [rsp+0x90]
   2f015:	mov    rdi,QWORD PTR [rsp+0x78]
   2f01a:	mov    rcx,r15
   2f01d:	mov    rdx,0xffffffffffffffff
   2f024:	mov    rsi,QWORD PTR [rax+0x48]
   2f028:	call   107b0 <wget_iri_relative_to_abs@plt>
   2f02d:	movzx  eax,BYTE PTR [rsp+0x5d]
   2f032:	movzx  ebp,BYTE PTR [rsp+0x5c]
   2f037:	and    eax,0xfffffffc
   2f03a:	and    ebp,0x1
   2f03d:	or     al,BYTE PTR [rsp+0x47]
   2f041:	or     al,BYTE PTR [rsp+0x5f]
   2f045:	lea    edx,[rbp*4+0x0]
   2f04c:	and    eax,0xfffffffb
   2f04f:	or     eax,edx
   2f051:	mov    BYTE PTR [rsp+0x5d],al
   2f055:	test   dl,dl
   2f057:	jne    2f1d9 <wget_http_get+0xda9>
   2f05d:	mov    rdi,QWORD PTR [rsp+0xa0]
   2f065:	xor    esi,esi
   2f067:	call   11000 <wget_iri_parse@plt>
   2f06c:	mov    rdi,r15
   2f06f:	mov    QWORD PTR [rsp+0x78],rax
   2f074:	call   11300 <wget_buffer_deinit@plt>
   2f079:	movzx  ecx,BYTE PTR [rsp+0x5e]
   2f07e:	add    DWORD PTR [rsp+0x58],0x1
   2f083:	mov    eax,DWORD PTR [rsp+0x58]
   2f087:	cmp    eax,DWORD PTR [rsp+0x40]
   2f08b:	mov    BYTE PTR [rsp+0x5c],cl
   2f08f:	setle  al
   2f092:	mov    rdi,QWORD PTR [rsp+0x78]
   2f097:	test   rdi,rdi
   2f09a:	je     2e94c <wget_http_get+0x51c>
   2f0a0:	test   al,al
   2f0a2:	jne    2e722 <wget_http_get+0x2f2>
   2f0a8:	jmp    2e94c <wget_http_get+0x51c>
   2f0ad:	nop    DWORD PTR [rax]
   2f0b0:	mov    rsi,r9
   2f0b3:	mov    rdi,r14
   2f0b6:	call   11000 <wget_iri_parse@plt>
   2f0bb:	mov    QWORD PTR [rsp+0x78],rax
   2f0c0:	test   rax,rax
   2f0c3:	jne    2e6c2 <wget_http_get+0x292>
   2f0c9:	mov    edx,0x5
   2f0ce:	lea    rsi,[rip+0x1ed7a]        # 4de4f <powers.0+0x18f>
   2f0d5:	xor    edi,edi
   2f0d7:	xor    ebp,ebp
   2f0d9:	call   10f90 <dcgettext@plt>
   2f0de:	lea    r12,[rsp+0x98]
   2f0e6:	mov    rdi,rax
   2f0e9:	xor    eax,eax
   2f0eb:	call   11ea0 <wget_error_printf@plt>
   2f0f0:	jmp    2e5d3 <wget_http_get+0x1a3>
   2f0f5:	nop    DWORD PTR [rax]
   2f0f8:	mov    rdx,QWORD PTR [rsp+0x20]
   2f0fd:	mov    rsi,QWORD PTR [rsp+0x18]
   2f102:	mov    rdi,QWORD PTR [rsp+0x88]
   2f10a:	call   10480 <wget_http_request_set_header_cb@plt>
   2f10f:	mov    edx,0x1
   2f114:	mov    esi,0x7d9
   2f119:	mov    rdi,QWORD PTR [rsp+0x88]
   2f121:	call   12260 <wget_http_request_set_int@plt>
   2f126:	mov    rdi,QWORD PTR [rsp+0x10]
   2f12b:	test   rdi,rdi
   2f12e:	je     2f19a <wget_http_get+0xd6a>
   2f130:	lea    rsi,[rip+0x1ed98]        # 4decf <powers.0+0x20f>
   2f137:	call   486d0 <rpl_fopen>
   2f13c:	mov    r15,rax
   2f13f:	test   rax,rax
   2f142:	je     2f2bf <wget_http_get+0xe8f>
   2f148:	mov    rdi,QWORD PTR [rsp+0x88]
   2f150:	mov    rdx,rax
   2f153:	lea    rsi,[rip+0xfffffffffffff266]        # 2e3c0 <stream_callback>
   2f15a:	call   10e10 <wget_http_request_set_body_cb@plt>
   2f15f:	mov    rdi,QWORD PTR [rsp+0x80]
   2f167:	call   127f0 <wget_http_get_response@plt>
   2f16c:	mov    rdi,r15
   2f16f:	mov    QWORD PTR [rsp+0x90],rax
   2f177:	call   404c0 <rpl_fclose>
   2f17c:	jmp    2e8b8 <wget_http_get+0x488>
   2f181:	nop    DWORD PTR [rax+0x0]
   2f188:	mov    edi,0x3f5
   2f18d:	call   125d0 <wget_global_get_ptr@plt>
   2f192:	mov    rcx,rax
   2f195:	jmp    2e6e2 <wget_http_get+0x2b2>
   2f19a:	mov    rax,QWORD PTR [rsp+0x28]
   2f19f:	lea    rsi,[rip+0xfffffffffffff21a]        # 2e3c0 <stream_callback>
   2f1a6:	mov    rdx,rax
   2f1a9:	test   rax,rax
   2f1ac:	je     2f277 <wget_http_get+0xe47>
   2f1b2:	mov    rdi,QWORD PTR [rsp+0x88]
   2f1ba:	call   10e10 <wget_http_request_set_body_cb@plt>
   2f1bf:	mov    rdi,QWORD PTR [rsp+0x80]
   2f1c7:	call   127f0 <wget_http_get_response@plt>
   2f1cc:	mov    QWORD PTR [rsp+0x90],rax
   2f1d4:	jmp    2e8b8 <wget_http_get+0x488>
   2f1d9:	lea    rdi,[rsp+0x78]
   2f1de:	call   11bc0 <wget_iri_free@plt>
   2f1e3:	jmp    2f05d <wget_http_get+0xc2d>
   2f1e8:	mov    QWORD PTR [rsp+0x18],0x0
   2f1f1:	mov    rdx,QWORD PTR [rsp+0x78]
   2f1f6:	xor    ebx,ebx
   2f1f8:	xor    r15d,r15d
   2f1fb:	mov    QWORD PTR [rsp+0x28],0x0
   2f204:	lea    r13,[rip+0x1d73a]        # 4c945 <maybe+0x6a5>
   2f20b:	mov    QWORD PTR [rsp+0x10],0x0
   2f214:	mov    QWORD PTR [rsp+0x38],0x0
   2f21d:	mov    QWORD PTR [rsp+0x8],0x0
   2f226:	mov    QWORD PTR [rsp],0x0
   2f22e:	mov    DWORD PTR [rsp+0x40],0x5
   2f236:	mov    QWORD PTR [rsp+0x20],0x0
   2f23f:	mov    QWORD PTR [rsp+0x30],0x0
   2f248:	jmp    2e6b7 <wget_http_get+0x287>
   2f24d:	mov    edx,0x5
   2f252:	lea    rsi,[rip+0x1ec09]        # 4de62 <powers.0+0x1a2>
   2f259:	xor    edi,edi
   2f25b:	call   10f90 <dcgettext@plt>
   2f260:	lea    r12,[rsp+0x98]
   2f268:	mov    rdi,rax
   2f26b:	xor    eax,eax
   2f26d:	call   11ea0 <wget_error_printf@plt>
   2f272:	jmp    2e5d3 <wget_http_get+0x1a3>
   2f277:	mov    rax,QWORD PTR [rsp+0x30]
   2f27c:	test   rax,rax
   2f27f:	je     2f28e <wget_http_get+0xe5e>
   2f281:	mov    rdx,QWORD PTR [rsp+0x38]
   2f286:	mov    rsi,rax
   2f289:	jmp    2f1b2 <wget_http_get+0xd82>
   2f28e:	cmp    DWORD PTR [rsp+0x6c],0xffffffff
   2f293:	lea    rdx,[rsp+0x6c]
   2f298:	lea    rsi,[rip+0xfffffffffffff0b1]        # 2e350 <fd_callback>
   2f29f:	jne    2f1b2 <wget_http_get+0xd82>
   2f2a5:	mov    rdi,QWORD PTR [rsp+0x80]
   2f2ad:	call   127f0 <wget_http_get_response@plt>
   2f2b2:	mov    QWORD PTR [rsp+0x90],rax
   2f2ba:	jmp    2e8b8 <wget_http_get+0x488>
   2f2bf:	mov    rsi,QWORD PTR [rsp+0x10]
   2f2c4:	lea    rdi,[rip+0x1eb45]        # 4de10 <powers.0+0x150>
   2f2cb:	xor    eax,eax
   2f2cd:	call   114b0 <wget_debug_printf@plt>
   2f2d2:	jmp    2e8b8 <wget_http_get+0x488>
   2f2d7:	call   11760 <__stack_chk_fail@plt>
   2f2dc:	mov    r12,rax
   2f2df:	lea    rdi,[rip+0x1eb4b]        # 4de31 <powers.0+0x171>
   2f2e6:	xor    eax,eax
   2f2e8:	call   114b0 <wget_debug_printf@plt>
   2f2ed:	jmp    2e60a <wget_http_get+0x1da>
   2f2f2:	mov    rdx,QWORD PTR [rsp+0xd0]
   2f2fa:	mov    eax,ecx
   2f2fc:	jmp    2ed14 <wget_http_get+0x8e4>
   2f301:	mov    rdx,QWORD PTR [rsp+0xd0]
   2f309:	mov    eax,ecx
   2f30b:	jmp    2ed3c <wget_http_get+0x90c>
   2f310:	mov    rdx,QWORD PTR [rsp+0xd0]
   2f318:	mov    eax,ecx
   2f31a:	jmp    2ed83 <wget_http_get+0x953>
   2f31f:	mov    rax,QWORD PTR [rsp+0xd0]
   2f327:	jmp    2ee5a <wget_http_get+0xa2a>
   2f32c:	nop    DWORD PTR [rax+0x0]

000000000002f330 <wget_strerror>:
   2f330:	endbr64 
   2f334:	add    edi,0xc
   2f337:	cmp    edi,0xc
   2f33a:	ja     2f42e <wget_strerror+0xfe>
   2f340:	lea    rdx,[rip+0x1ecc5]        # 4e00c <powers.0+0x34c>
   2f347:	movsxd rax,DWORD PTR [rdx+rdi*4]
   2f34b:	add    rax,rdx
   2f34e:	mov    edx,0x5
   2f353:	notrack jmp rax
   2f356:	cs nop WORD PTR [rax+rax*1+0x0]
   2f360:	lea    rsi,[rip+0x1ebc1]        # 4df28 <powers.0+0x268>
   2f367:	xor    edi,edi
   2f369:	jmp    10f90 <dcgettext@plt>
   2f36e:	xchg   ax,ax
   2f370:	lea    rsi,[rip+0x1eba9]        # 4df20 <powers.0+0x260>
   2f377:	xor    edi,edi
   2f379:	jmp    10f90 <dcgettext@plt>
   2f37e:	xchg   ax,ax
   2f380:	lea    rsi,[rip+0x1ec31]        # 4dfb8 <powers.0+0x2f8>
   2f387:	xor    edi,edi
   2f389:	jmp    10f90 <dcgettext@plt>
   2f38e:	xchg   ax,ax
   2f390:	lea    rsi,[rip+0x1ec17]        # 4dfae <powers.0+0x2ee>
   2f397:	xor    edi,edi
   2f399:	jmp    10f90 <dcgettext@plt>
   2f39e:	xchg   ax,ax
   2f3a0:	lea    rsi,[rip+0x1ebf3]        # 4df9a <powers.0+0x2da>
   2f3a7:	xor    edi,edi
   2f3a9:	jmp    10f90 <dcgettext@plt>
   2f3ae:	xchg   ax,ax
   2f3b0:	lea    rsi,[rip+0x1ebcf]        # 4df86 <powers.0+0x2c6>
   2f3b7:	xor    edi,edi
   2f3b9:	jmp    10f90 <dcgettext@plt>
   2f3be:	xchg   ax,ax
   2f3c0:	lea    rsi,[rip+0x1ec19]        # 4dfe0 <powers.0+0x320>
   2f3c7:	xor    edi,edi
   2f3c9:	jmp    10f90 <dcgettext@plt>
   2f3ce:	xchg   ax,ax
   2f3d0:	lea    rsi,[rip+0x1eb9d]        # 4df74 <powers.0+0x2b4>
   2f3d7:	xor    edi,edi
   2f3d9:	jmp    10f90 <dcgettext@plt>
   2f3de:	xchg   ax,ax
   2f3e0:	lea    rsi,[rip+0x1eb7d]        # 4df64 <powers.0+0x2a4>
   2f3e7:	xor    edi,edi
   2f3e9:	jmp    10f90 <dcgettext@plt>
   2f3ee:	xchg   ax,ax
   2f3f0:	lea    rsi,[rip+0x1eb5f]        # 4df56 <powers.0+0x296>
   2f3f7:	xor    edi,edi
   2f3f9:	jmp    10f90 <dcgettext@plt>
   2f3fe:	xchg   ax,ax
   2f400:	lea    rsi,[rip+0x1eb47]        # 4df4e <powers.0+0x28e>
   2f407:	xor    edi,edi
   2f409:	jmp    10f90 <dcgettext@plt>
   2f40e:	xchg   ax,ax
   2f410:	lea    rsi,[rip+0x1eb29]        # 4df40 <powers.0+0x280>
   2f417:	xor    edi,edi
   2f419:	jmp    10f90 <dcgettext@plt>
   2f41e:	xchg   ax,ax
   2f420:	lea    rsi,[rip+0x1eb0f]        # 4df36 <powers.0+0x276>
   2f427:	xor    edi,edi
   2f429:	jmp    10f90 <dcgettext@plt>
   2f42e:	mov    edx,0x5
   2f433:	lea    rsi,[rip+0x1eb93]        # 4dfcd <powers.0+0x30d>
   2f43a:	xor    edi,edi
   2f43c:	jmp    10f90 <dcgettext@plt>
   2f441:	cs nop WORD PTR [rax+rax*1+0x0]
   2f44b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000002f450 <resolve>:
   2f450:	push   r13
   2f452:	pxor   xmm0,xmm0
   2f456:	push   r12
   2f458:	mov    r12,r8
   2f45b:	push   rbp
   2f45c:	mov    rbp,rdx
   2f45f:	sub    rsp,0x60
   2f463:	mov    rax,QWORD PTR fs:0x28
   2f46c:	mov    QWORD PTR [rsp+0x58],rax
   2f471:	xor    eax,eax
   2f473:	mov    eax,esi
   2f475:	mov    DWORD PTR [rsp+0x4],edi
   2f479:	or     eax,0x20
   2f47c:	movups XMMWORD PTR [rsp+0x8],xmm0
   2f481:	mov    QWORD PTR [rsp+0x28],0x0
   2f48a:	mov    DWORD PTR [rsp],eax
   2f48d:	movups XMMWORD PTR [rsp+0x18],xmm0
   2f492:	test   cx,cx
   2f495:	je     2f510 <resolve+0xc0>
   2f497:	or     esi,0x420
   2f49d:	lea    r13,[rsp+0x30]
   2f4a2:	movzx  ecx,cx
   2f4a5:	xor    eax,eax
   2f4a7:	mov    DWORD PTR [rsp],esi
   2f4aa:	lea    rdx,[rip+0x1dcd6]        # 4d187 <__func__.4+0x67>
   2f4b1:	mov    esi,0x20
   2f4b6:	mov    rdi,r13
   2f4b9:	call   119f0 <wget_snprintf@plt>
   2f4be:	test   rbp,rbp
   2f4c1:	mov    rdx,r13
   2f4c4:	lea    rsi,[rip+0x1d39f]        # 4c86a <maybe+0x5ca>
   2f4cb:	cmovne rsi,rbp
   2f4cf:	lea    rdi,[rip+0x1eb6a]        # 4e040 <powers.0+0x380>
   2f4d6:	xor    eax,eax
   2f4d8:	call   114b0 <wget_debug_printf@plt>
   2f4dd:	mov    rdx,rsp
   2f4e0:	mov    rcx,r12
   2f4e3:	mov    rsi,r13
   2f4e6:	mov    rdi,rbp
   2f4e9:	call   119e0 <getaddrinfo@plt>
   2f4ee:	mov    rdx,QWORD PTR [rsp+0x58]
   2f4f3:	sub    rdx,QWORD PTR fs:0x28
   2f4fc:	jne    2f533 <resolve+0xe3>
   2f4fe:	add    rsp,0x60
   2f502:	pop    rbp
   2f503:	pop    r12
   2f505:	pop    r13
   2f507:	ret    
   2f508:	nop    DWORD PTR [rax+rax*1+0x0]
   2f510:	mov    rsi,rdx
   2f513:	lea    rdi,[rip+0x1eb3a]        # 4e054 <powers.0+0x394>
   2f51a:	xor    eax,eax
   2f51c:	call   114b0 <wget_debug_printf@plt>
   2f521:	mov    rdx,rsp
   2f524:	mov    rcx,r12
   2f527:	xor    esi,esi
   2f529:	mov    rdi,rbp
   2f52c:	call   119e0 <getaddrinfo@plt>
   2f531:	jmp    2f4ee <resolve+0x9e>
   2f533:	call   11760 <__stack_chk_fail@plt>
   2f538:	nop    DWORD PTR [rax+rax*1+0x0]

000000000002f540 <dns_exit>:
   2f540:	endbr64 
   2f544:	cmp    BYTE PTR [rip+0x48119],0x0        # 77664 <initialized>
   2f54b:	jne    2f550 <dns_exit+0x10>
   2f54d:	ret    
   2f54e:	xchg   ax,ax
   2f550:	sub    rsp,0x8
   2f554:	lea    rdi,[rip+0x47ded]        # 77348 <default_dns+0x8>
   2f55b:	call   11e70 <wget_thread_mutex_destroy@plt>
   2f560:	mov    BYTE PTR [rip+0x480fd],0x0        # 77664 <initialized>
   2f567:	add    rsp,0x8
   2f56b:	ret    
   2f56c:	nop    DWORD PTR [rax+0x0]

000000000002f570 <wget_dns_init>:
   2f570:	endbr64 
   2f574:	push   rbp
   2f575:	push   rbx
   2f576:	mov    rbx,rdi
   2f579:	sub    rsp,0x8
   2f57d:	call   129a0 <dns_init>
   2f582:	test   rbx,rbx
   2f585:	je     2f5c0 <wget_dns_init+0x50>
   2f587:	mov    rax,QWORD PTR [rip+0x469b2]        # 75f40 <wget_calloc_fn@@Base-0x13e0>
   2f58e:	mov    esi,0x48
   2f593:	mov    edi,0x1
   2f598:	call   QWORD PTR [rax]
   2f59a:	mov    rbp,rax
   2f59d:	test   rax,rax
   2f5a0:	je     2f5dc <wget_dns_init+0x6c>
   2f5a2:	lea    rdi,[rax+0x8]
   2f5a6:	call   10530 <wget_thread_mutex_init@plt>
   2f5ab:	test   eax,eax
   2f5ad:	jne    2f5c9 <wget_dns_init+0x59>
   2f5af:	mov    DWORD PTR [rbp+0x40],0xffffffff
   2f5b6:	mov    QWORD PTR [rbx],rbp
   2f5b9:	add    rsp,0x8
   2f5bd:	pop    rbx
   2f5be:	pop    rbp
   2f5bf:	ret    
   2f5c0:	add    rsp,0x8
   2f5c4:	xor    eax,eax
   2f5c6:	pop    rbx
   2f5c7:	pop    rbp
   2f5c8:	ret    
   2f5c9:	mov    rax,QWORD PTR [rip+0x46a18]        # 75fe8 <wget_free@@Base-0x1328>
   2f5d0:	mov    rdi,rbp
   2f5d3:	call   QWORD PTR [rax]
   2f5d5:	mov    eax,0xfffffffd
   2f5da:	jmp    2f5b9 <wget_dns_init+0x49>
   2f5dc:	mov    eax,0xfffffffe
   2f5e1:	jmp    2f5b9 <wget_dns_init+0x49>
   2f5e3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2f5ee:	xchg   ax,ax

000000000002f5f0 <wget_dns_free>:
   2f5f0:	endbr64 
   2f5f4:	push   rbx
   2f5f5:	test   rdi,rdi
   2f5f8:	je     2f630 <wget_dns_free+0x40>
   2f5fa:	mov    rbx,rdi
   2f5fd:	mov    rdi,QWORD PTR [rdi]
   2f600:	test   rdi,rdi
   2f603:	je     2f626 <wget_dns_free+0x36>
   2f605:	add    rdi,0x8
   2f609:	call   11e70 <wget_thread_mutex_destroy@plt>
   2f60e:	mov    rdi,QWORD PTR [rbx]
   2f611:	test   rdi,rdi
   2f614:	je     2f626 <wget_dns_free+0x36>
   2f616:	mov    rax,QWORD PTR [rip+0x469cb]        # 75fe8 <wget_free@@Base-0x1328>
   2f61d:	call   QWORD PTR [rax]
   2f61f:	mov    QWORD PTR [rbx],0x0
   2f626:	pop    rbx
   2f627:	ret    
   2f628:	nop    DWORD PTR [rax+rax*1+0x0]
   2f630:	cmp    BYTE PTR [rip+0x4802d],0x0        # 77664 <initialized>
   2f637:	je     2f626 <wget_dns_free+0x36>
   2f639:	lea    rdi,[rip+0x47d08]        # 77348 <default_dns+0x8>
   2f640:	call   11e70 <wget_thread_mutex_destroy@plt>
   2f645:	mov    BYTE PTR [rip+0x48018],0x0        # 77664 <initialized>
   2f64c:	pop    rbx
   2f64d:	ret    
   2f64e:	xchg   ax,ax

000000000002f650 <wget_dns_set_timeout>:
   2f650:	endbr64 
   2f654:	test   rdi,rdi
   2f657:	lea    rax,[rip+0x47ce2]        # 77340 <default_dns>
   2f65e:	cmove  rdi,rax
   2f662:	mov    DWORD PTR [rdi+0x40],esi
   2f665:	ret    
   2f666:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002f670 <wget_dns_set_cache>:
   2f670:	endbr64 
   2f674:	test   rdi,rdi
   2f677:	lea    rax,[rip+0x47cc2]        # 77340 <default_dns>
   2f67e:	cmove  rdi,rax
   2f682:	mov    QWORD PTR [rdi],rsi
   2f685:	ret    
   2f686:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002f690 <wget_dns_get_cache>:
   2f690:	endbr64 
   2f694:	test   rdi,rdi
   2f697:	lea    rax,[rip+0x47ca2]        # 77340 <default_dns>
   2f69e:	cmove  rdi,rax
   2f6a2:	mov    rax,QWORD PTR [rdi]
   2f6a5:	ret    
   2f6a6:	cs nop WORD PTR [rax+rax*1+0x0]

000000000002f6b0 <wget_dns_cache_ip>:
   2f6b0:	endbr64 
   2f6b4:	push   r15
   2f6b6:	push   r14
   2f6b8:	push   r13
   2f6ba:	push   r12
   2f6bc:	push   rbp
   2f6bd:	push   rbx
   2f6be:	sub    rsp,0x28
   2f6c2:	mov    rax,QWORD PTR fs:0x28
   2f6cb:	mov    QWORD PTR [rsp+0x18],rax
   2f6d0:	xor    eax,eax
   2f6d2:	test   rdi,rdi
   2f6d5:	je     2f7a8 <wget_dns_cache_ip+0xf8>
   2f6db:	cmp    QWORD PTR [rdi],0x0
   2f6df:	mov    rbx,rdi
   2f6e2:	je     2f7a8 <wget_dns_cache_ip+0xf8>
   2f6e8:	mov    rbp,rdx
   2f6eb:	test   rdx,rdx
   2f6ee:	je     2f7a8 <wget_dns_cache_ip+0xf8>
   2f6f4:	mov    r15,rsi
   2f6f7:	mov    esi,0x1
   2f6fc:	mov    r13d,ecx
   2f6ff:	mov    rdi,r15
   2f702:	call   12480 <wget_ip_is_family@plt>
   2f707:	test   al,al
   2f709:	jne    2f780 <wget_dns_cache_ip+0xd0>
   2f70b:	mov    esi,0x2
   2f710:	mov    rdi,r15
   2f713:	call   12480 <wget_ip_is_family@plt>
   2f718:	test   al,al
   2f71a:	je     2f7a8 <wget_dns_cache_ip+0xf8>
   2f720:	mov    edi,0xa
   2f725:	movzx  r13d,r13w
   2f729:	lea    r14,[rsp+0x10]
   2f72e:	mov    rdx,r15
   2f731:	mov    esi,0x4
   2f736:	mov    r8,r14
   2f739:	mov    ecx,r13d
   2f73c:	call   2f450 <resolve>
   2f741:	mov    r12d,eax
   2f744:	test   eax,eax
   2f746:	jne    2f7b0 <wget_dns_cache_ip+0x100>
   2f748:	mov    rdi,QWORD PTR [rbx]
   2f74b:	mov    rcx,r14
   2f74e:	mov    edx,r13d
   2f751:	mov    rsi,rbp
   2f754:	call   118d0 <wget_dns_cache_add@plt>
   2f759:	test   eax,eax
   2f75b:	js     2f790 <wget_dns_cache_ip+0xe0>
   2f75d:	mov    rax,QWORD PTR [rsp+0x18]
   2f762:	sub    rax,QWORD PTR fs:0x28
   2f76b:	jne    2f7eb <wget_dns_cache_ip+0x13b>
   2f76d:	add    rsp,0x28
   2f771:	mov    eax,r12d
   2f774:	pop    rbx
   2f775:	pop    rbp
   2f776:	pop    r12
   2f778:	pop    r13
   2f77a:	pop    r14
   2f77c:	pop    r15
   2f77e:	ret    
   2f77f:	nop
   2f780:	mov    edi,0x2
   2f785:	jmp    2f725 <wget_dns_cache_ip+0x75>
   2f787:	nop    WORD PTR [rax+rax*1+0x0]
   2f790:	mov    rdi,QWORD PTR [rsp+0x10]
   2f795:	mov    DWORD PTR [rsp+0xc],eax
   2f799:	call   11a70 <freeaddrinfo@plt>
   2f79e:	mov    r12d,DWORD PTR [rsp+0xc]
   2f7a3:	jmp    2f75d <wget_dns_cache_ip+0xad>
   2f7a5:	nop    DWORD PTR [rax]
   2f7a8:	mov    r12d,0xfffffffd
   2f7ae:	jmp    2f75d <wget_dns_cache_ip+0xad>
   2f7b0:	mov    edi,eax
   2f7b2:	call   11c20 <gai_strerror@plt>
   2f7b7:	mov    edx,0x5
   2f7bc:	lea    rsi,[rip+0x1e8dd]        # 4e0a0 <powers.0+0x3e0>
   2f7c3:	xor    edi,edi
   2f7c5:	mov    r12,rax
   2f7c8:	call   10f90 <dcgettext@plt>
   2f7cd:	mov    rcx,r12
   2f7d0:	mov    edx,r13d
   2f7d3:	mov    rsi,r15
   2f7d6:	mov    rdi,rax
   2f7d9:	xor    eax,eax
   2f7db:	mov    r12d,0xffffffff
   2f7e1:	call   11ea0 <wget_error_printf@plt>
   2f7e6:	jmp    2f75d <wget_dns_cache_ip+0xad>
   2f7eb:	call   11760 <__stack_chk_fail@plt>

000000000002f7f0 <wget_dns_resolve>:
   2f7f0:	endbr64 
   2f7f4:	push   r15
   2f7f6:	mov    r15d,r8d
   2f7f9:	push   r14
   2f7fb:	mov    r14d,ecx
   2f7fe:	push   r13
   2f800:	push   r12
   2f802:	mov    r12,rsi
   2f805:	push   rbp
   2f806:	mov    rbp,rdi
   2f809:	push   rbx
   2f80a:	sub    rsp,0x488
   2f811:	mov    DWORD PTR [rsp+0x18],edx
   2f815:	mov    rax,QWORD PTR fs:0x28
   2f81e:	mov    QWORD PTR [rsp+0x478],rax
   2f826:	xor    eax,eax
   2f828:	test   rdi,rdi
   2f82b:	lea    rax,[rip+0x47b0e]        # 77340 <default_dns>
   2f832:	mov    QWORD PTR [rsp+0x28],0x0
   2f83b:	mov    QWORD PTR [rsp+0x10],0x0
   2f844:	cmove  rbp,rax
   2f848:	cmp    QWORD PTR [rbp+0x10],0x0
   2f84d:	je     2f859 <wget_dns_resolve+0x69>
   2f84f:	call   11020 <wget_get_timemillis@plt>
   2f854:	mov    QWORD PTR [rsp+0x10],rax
   2f859:	mov    rdi,QWORD PTR [rbp+0x0]
   2f85d:	lea    rax,[rsp+0x28]
   2f862:	movzx  r13d,WORD PTR [rsp+0x18]
   2f868:	mov    ebx,0x3
   2f86d:	mov    QWORD PTR [rsp+0x8],rax
   2f872:	test   rdi,rdi
   2f875:	je     2f8b6 <wget_dns_resolve+0xc6>
   2f877:	mov    edx,r13d
   2f87a:	mov    rsi,r12
   2f87d:	call   11bb0 <wget_dns_cache_get@plt>
   2f882:	mov    QWORD PTR [rsp+0x28],rax
   2f887:	test   rax,rax
   2f88a:	jne    2f949 <wget_dns_resolve+0x159>
   2f890:	mov    rdi,QWORD PTR [rbp+0x8]
   2f894:	call   12040 <wget_thread_mutex_lock@plt>
   2f899:	mov    rdi,QWORD PTR [rbp+0x0]
   2f89d:	mov    edx,r13d
   2f8a0:	mov    rsi,r12
   2f8a3:	call   11bb0 <wget_dns_cache_get@plt>
   2f8a8:	mov    QWORD PTR [rsp+0x28],rax
   2f8ad:	test   rax,rax
   2f8b0:	jne    2fbe0 <wget_dns_resolve+0x3f0>
   2f8b6:	mov    r8,QWORD PTR [rsp+0x8]
   2f8bb:	mov    edi,r14d
   2f8be:	mov    ecx,r13d
   2f8c1:	mov    rdx,r12
   2f8c4:	mov    QWORD PTR [rsp+0x28],0x0
   2f8cd:	xor    esi,esi
   2f8cf:	call   2f450 <resolve>
   2f8d4:	mov    edi,eax
   2f8d6:	cmp    eax,0xfffffffd
   2f8d9:	jne    2fa28 <wget_dns_resolve+0x238>
   2f8df:	cmp    ebx,0x1
   2f8e2:	je     2f978 <wget_dns_resolve+0x188>
   2f8e8:	cmp    QWORD PTR [rbp+0x0],0x0
   2f8ed:	je     2f8f8 <wget_dns_resolve+0x108>
   2f8ef:	mov    rdi,QWORD PTR [rbp+0x8]
   2f8f3:	call   117c0 <wget_thread_mutex_unlock@plt>
   2f8f8:	mov    edi,0x64
   2f8fd:	sub    ebx,0x1
   2f900:	call   10de0 <wget_millisleep@plt>
   2f905:	mov    rdi,QWORD PTR [rbp+0x0]
   2f909:	test   rdi,rdi
   2f90c:	jne    2f877 <wget_dns_resolve+0x87>
   2f912:	jmp    2f8b6 <wget_dns_resolve+0xc6>
   2f914:	nop    DWORD PTR [rax+0x0]
   2f918:	mov    rdi,QWORD PTR [rbp+0x0]
   2f91c:	test   rdi,rdi
   2f91f:	je     2f944 <wget_dns_resolve+0x154>
   2f921:	mov    rcx,QWORD PTR [rsp+0x8]
   2f926:	mov    edx,r13d
   2f929:	mov    rsi,r12
   2f92c:	call   118d0 <wget_dns_cache_add@plt>
   2f931:	mov    rdi,QWORD PTR [rbp+0x8]
   2f935:	mov    ebx,eax
   2f937:	call   117c0 <wget_thread_mutex_unlock@plt>
   2f93c:	test   ebx,ebx
   2f93e:	js     2fbfa <wget_dns_resolve+0x40a>
   2f944:	mov    rax,QWORD PTR [rsp+0x28]
   2f949:	mov    rdx,QWORD PTR [rsp+0x478]
   2f951:	sub    rdx,QWORD PTR fs:0x28
   2f95a:	jne    2fc0b <wget_dns_resolve+0x41b>
   2f960:	add    rsp,0x488
   2f967:	pop    rbx
   2f968:	pop    rbp
   2f969:	pop    r12
   2f96b:	pop    r13
   2f96d:	pop    r14
   2f96f:	pop    r15
   2f971:	ret    
   2f972:	nop    WORD PTR [rax+rax*1+0x0]
   2f978:	cmp    QWORD PTR [rbp+0x10],0x0
   2f97d:	je     2f9a5 <wget_dns_resolve+0x1b5>
   2f97f:	mov    DWORD PTR [rsp+0x8],eax
   2f983:	call   11020 <wget_get_timemillis@plt>
   2f988:	sub    rax,QWORD PTR [rsp+0x10]
   2f98d:	mov    QWORD PTR [rsp+0x30],r12
   2f992:	mov    QWORD PTR [rsp+0x48],rax
   2f997:	movzx  eax,WORD PTR [rsp+0x18]
   2f99c:	mov    edi,DWORD PTR [rsp+0x8]
   2f9a0:	mov    WORD PTR [rsp+0x40],ax
   2f9a5:	call   11c20 <gai_strerror@plt>
   2f9aa:	test   r12,r12
   2f9ad:	mov    edx,0x5
   2f9b2:	lea    rsi,[rip+0x1e6b0]        # 4e069 <powers.0+0x3a9>
   2f9b9:	mov    r13,rax
   2f9bc:	lea    rax,[rip+0x1cea7]        # 4c86a <maybe+0x5ca>
   2f9c3:	cmove  r12,rax
   2f9c7:	xor    edi,edi
   2f9c9:	call   10f90 <dcgettext@plt>
   2f9ce:	mov    rdx,r13
   2f9d1:	mov    rdi,rax
   2f9d4:	mov    rsi,r12
   2f9d7:	xor    eax,eax
   2f9d9:	call   11ea0 <wget_error_printf@plt>
   2f9de:	cmp    QWORD PTR [rbp+0x0],0x0
   2f9e3:	je     2f9ee <wget_dns_resolve+0x1fe>
   2f9e5:	mov    rdi,QWORD PTR [rbp+0x8]
   2f9e9:	call   117c0 <wget_thread_mutex_unlock@plt>
   2f9ee:	mov    rcx,QWORD PTR [rbp+0x10]
   2f9f2:	xor    eax,eax
   2f9f4:	test   rcx,rcx
   2f9f7:	je     2f949 <wget_dns_resolve+0x159>
   2f9fd:	mov    QWORD PTR [rsp+0x8],rax
   2fa02:	mov    rdx,QWORD PTR [rbp+0x18]
   2fa06:	lea    rsi,[rsp+0x30]
   2fa0b:	mov    rdi,rbp
   2fa0e:	mov    QWORD PTR [rsp+0x38],0x0
   2fa17:	call   rcx
   2fa19:	mov    rax,QWORD PTR [rsp+0x8]
   2fa1e:	jmp    2f949 <wget_dns_resolve+0x159>
   2fa23:	nop    DWORD PTR [rax+rax*1+0x0]
   2fa28:	cmp    QWORD PTR [rbp+0x10],0x0
   2fa2d:	jne    2fc10 <wget_dns_resolve+0x420>
   2fa33:	test   edi,edi
   2fa35:	jne    2f9a5 <wget_dns_resolve+0x1b5>
   2fa3b:	test   r14d,r14d
   2fa3e:	jne    2fabd <wget_dns_resolve+0x2cd>
   2fa40:	test   r15d,r15d
   2fa43:	je     2fabd <wget_dns_resolve+0x2cd>
   2fa45:	mov    rax,QWORD PTR [rsp+0x28]
   2fa4a:	test   rax,rax
   2fa4d:	je     2fbf3 <wget_dns_resolve+0x403>
   2fa53:	xor    r8d,r8d
   2fa56:	xor    edi,edi
   2fa58:	xor    ecx,ecx
   2fa5a:	xor    esi,esi
   2fa5c:	jmp    2fa84 <wget_dns_resolve+0x294>
   2fa5e:	xchg   ax,ax
   2fa60:	test   rcx,rcx
   2fa63:	je     2fbb8 <wget_dns_resolve+0x3c8>
   2fa69:	mov    QWORD PTR [rcx+0x28],rax
   2fa6d:	mov    rdx,QWORD PTR [rax+0x28]
   2fa71:	mov    rcx,rax
   2fa74:	mov    QWORD PTR [rax+0x28],0x0
   2fa7c:	test   rdx,rdx
   2fa7f:	je     2faab <wget_dns_resolve+0x2bb>
   2fa81:	mov    rax,rdx
   2fa84:	cmp    r15d,DWORD PTR [rax+0x4]
   2fa88:	jne    2fa60 <wget_dns_resolve+0x270>
   2fa8a:	test   rsi,rsi
   2fa8d:	je     2fbc0 <wget_dns_resolve+0x3d0>
   2fa93:	mov    QWORD PTR [rsi+0x28],rax
   2fa97:	mov    rdx,QWORD PTR [rax+0x28]
   2fa9b:	mov    rsi,rax
   2fa9e:	mov    QWORD PTR [rax+0x28],0x0
   2faa6:	test   rdx,rdx
   2faa9:	jne    2fa81 <wget_dns_resolve+0x291>
   2faab:	test   rdi,rdi
   2faae:	je     2fbd0 <wget_dns_resolve+0x3e0>
   2fab4:	mov    QWORD PTR [rsi+0x28],r8
   2fab8:	mov    QWORD PTR [rsp+0x28],rdi
   2fabd:	cmp    QWORD PTR [rbp+0x10],0x0
   2fac2:	je     2fb16 <wget_dns_resolve+0x326>
   2fac4:	mov    rax,QWORD PTR [rsp+0x28]
   2fac9:	lea    rbx,[rsp+0x70]
   2face:	sub    rsp,0x8
   2fad2:	mov    ecx,0x401
   2fad7:	mov    rdx,rbx
   2fada:	mov    r9d,0x20
   2fae0:	mov    esi,DWORD PTR [rax+0x10]
   2fae3:	mov    rdi,QWORD PTR [rax+0x18]
   2fae7:	push   0x3
   2fae9:	lea    r8,[rsp+0x60]
   2faee:	call   10eb0 <getnameinfo@plt>
   2faf3:	pop    rcx
   2faf4:	pop    rsi
   2faf5:	mov    rdi,rbp
   2faf8:	test   eax,eax
   2fafa:	lea    rax,[rip+0x1e564]        # 4e065 <powers.0+0x3a5>
   2fb01:	mov    rdx,QWORD PTR [rbp+0x18]
   2fb05:	lea    rsi,[rsp+0x30]
   2fb0a:	cmove  rax,rbx
   2fb0e:	mov    QWORD PTR [rsp+0x38],rax
   2fb13:	call   QWORD PTR [rbp+0x10]
   2fb16:	mov    edi,0x3
   2fb1b:	call   11620 <wget_get_logger@plt>
   2fb20:	mov    rdi,rax
   2fb23:	call   12710 <wget_logger_is_active@plt>
   2fb28:	test   al,al
   2fb2a:	je     2f918 <wget_dns_resolve+0x128>
   2fb30:	mov    r15,QWORD PTR [rsp+0x28]
   2fb35:	test   r15,r15
   2fb38:	je     2f918 <wget_dns_resolve+0x128>
   2fb3e:	lea    r14,[rsp+0x50]
   2fb43:	lea    rbx,[rsp+0x70]
   2fb48:	jmp    2fb71 <wget_dns_resolve+0x381>
   2fb4a:	nop    WORD PTR [rax+rax*1+0x0]
   2fb50:	mov    rdx,r14
   2fb53:	mov    rsi,rbx
   2fb56:	lea    rdi,[rip+0x1e529]        # 4e086 <powers.0+0x3c6>
   2fb5d:	xor    eax,eax
   2fb5f:	call   114b0 <wget_debug_printf@plt>
   2fb64:	mov    r15,QWORD PTR [r15+0x28]
   2fb68:	test   r15,r15
   2fb6b:	je     2f918 <wget_dns_resolve+0x128>
   2fb71:	sub    rsp,0x8
   2fb75:	mov    rdi,QWORD PTR [r15+0x18]
   2fb79:	mov    esi,DWORD PTR [r15+0x10]
   2fb7d:	mov    rdx,rbx
   2fb80:	push   0x3
   2fb82:	mov    r9d,0x20
   2fb88:	mov    r8,r14
   2fb8b:	mov    ecx,0x401
   2fb90:	call   10eb0 <getnameinfo@plt>
   2fb95:	mov    edi,eax
   2fb97:	pop    rax
   2fb98:	pop    rdx
   2fb99:	test   edi,edi
   2fb9b:	je     2fb50 <wget_dns_resolve+0x360>
   2fb9d:	call   11c20 <gai_strerror@plt>
   2fba2:	lea    rdi,[rip+0x1e4e8]        # 4e091 <powers.0+0x3d1>
   2fba9:	mov    rsi,rax
   2fbac:	xor    eax,eax
   2fbae:	call   114b0 <wget_debug_printf@plt>
   2fbb3:	jmp    2fb64 <wget_dns_resolve+0x374>
   2fbb5:	nop    DWORD PTR [rax]
   2fbb8:	mov    r8,rax
   2fbbb:	jmp    2fa6d <wget_dns_resolve+0x27d>
   2fbc0:	mov    rdi,rax
   2fbc3:	jmp    2fa97 <wget_dns_resolve+0x2a7>
   2fbc8:	nop    DWORD PTR [rax+rax*1+0x0]
   2fbd0:	mov    rdi,r8
   2fbd3:	jmp    2fab8 <wget_dns_resolve+0x2c8>
   2fbd8:	nop    DWORD PTR [rax+rax*1+0x0]
   2fbe0:	mov    rdi,QWORD PTR [rbp+0x8]
   2fbe4:	call   117c0 <wget_thread_mutex_unlock@plt>
   2fbe9:	mov    rax,QWORD PTR [rsp+0x28]
   2fbee:	jmp    2f949 <wget_dns_resolve+0x159>
   2fbf3:	xor    edi,edi
   2fbf5:	jmp    2fab8 <wget_dns_resolve+0x2c8>
   2fbfa:	mov    rdi,QWORD PTR [rsp+0x28]
   2fbff:	call   11a70 <freeaddrinfo@plt>
   2fc04:	xor    eax,eax
   2fc06:	jmp    2f949 <wget_dns_resolve+0x159>
   2fc0b:	call   11760 <__stack_chk_fail@plt>
   2fc10:	mov    DWORD PTR [rsp+0x1c],eax
   2fc14:	call   11020 <wget_get_timemillis@plt>
   2fc19:	sub    rax,QWORD PTR [rsp+0x10]
   2fc1e:	mov    QWORD PTR [rsp+0x30],r12
   2fc23:	mov    QWORD PTR [rsp+0x48],rax
   2fc28:	movzx  eax,WORD PTR [rsp+0x18]
   2fc2d:	mov    edi,DWORD PTR [rsp+0x1c]
   2fc31:	mov    WORD PTR [rsp+0x40],ax
   2fc36:	jmp    2fa33 <wget_dns_resolve+0x243>
   2fc3b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000002fc40 <wget_dns_freeaddrinfo>:
   2fc40:	endbr64 
   2fc44:	test   rsi,rsi
   2fc47:	je     2fc70 <wget_dns_freeaddrinfo+0x30>
   2fc49:	mov    r8,QWORD PTR [rsi]
   2fc4c:	test   r8,r8
   2fc4f:	je     2fc70 <wget_dns_freeaddrinfo+0x30>
   2fc51:	test   rdi,rdi
   2fc54:	lea    rax,[rip+0x476e5]        # 77340 <default_dns>
   2fc5b:	cmove  rdi,rax
   2fc5f:	cmp    QWORD PTR [rdi],0x0
   2fc63:	je     2fc78 <wget_dns_freeaddrinfo+0x38>
   2fc65:	mov    QWORD PTR [rsi],0x0
   2fc6c:	ret    
   2fc6d:	nop    DWORD PTR [rax]
   2fc70:	ret    
   2fc71:	nop    DWORD PTR [rax+0x0]
   2fc78:	sub    rsp,0x18
   2fc7c:	mov    rdi,r8
   2fc7f:	mov    QWORD PTR [rsp+0x8],rsi
   2fc84:	call   11a70 <freeaddrinfo@plt>
   2fc89:	mov    rsi,QWORD PTR [rsp+0x8]
   2fc8e:	mov    QWORD PTR [rsi],0x0
   2fc95:	add    rsp,0x18
   2fc99:	ret    
   2fc9a:	nop    WORD PTR [rax+rax*1+0x0]

000000000002fca0 <wget_dns_set_stats_callback>:
   2fca0:	endbr64 
   2fca4:	test   rdi,rdi
   2fca7:	lea    rax,[rip+0x47692]        # 77340 <default_dns>
   2fcae:	cmove  rdi,rax
   2fcb2:	mov    QWORD PTR [rdi+0x10],rsi
   2fcb6:	mov    QWORD PTR [rdi+0x18],rdx
   2fcba:	ret    
   2fcbb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000002fcc0 <ocsp_stapled_responses_add_single>:
   2fcc0:	endbr64 
   2fcc4:	push   r13
   2fcc6:	mov    r13,rdi
   2fcc9:	mov    edi,0x10
   2fcce:	push   r12
   2fcd0:	mov    r12,rdx
   2fcd3:	push   rbp
   2fcd4:	push   rbx
   2fcd5:	mov    ebx,esi
   2fcd7:	sub    rsp,0x8
   2fcdb:	mov    rax,QWORD PTR [rip+0x462ee]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   2fce2:	call   QWORD PTR [rax]
   2fce4:	mov    rdi,r13
   2fce7:	mov    rbp,rax
   2fcea:	call   10d90 <OCSP_SINGLERESP_get0_id@plt>
   2fcef:	mov    rdi,rax
   2fcf2:	call   108b0 <OCSP_CERTID_dup@plt>
   2fcf7:	test   rbp,rbp
   2fcfa:	je     2fd40 <ocsp_stapled_responses_add_single+0x80>
   2fcfc:	test   rax,rax
   2fcff:	jne    2fd20 <ocsp_stapled_responses_add_single+0x60>
   2fd01:	test   rbp,rbp
   2fd04:	je     2fd57 <ocsp_stapled_responses_add_single+0x97>
   2fd06:	mov    rax,QWORD PTR [rip+0x462db]        # 75fe8 <wget_free@@Base-0x1328>
   2fd0d:	mov    rdi,rbp
   2fd10:	mov    rax,QWORD PTR [rax]
   2fd13:	add    rsp,0x8
   2fd17:	pop    rbx
   2fd18:	pop    rbp
   2fd19:	pop    r12
   2fd1b:	pop    r13
   2fd1d:	jmp    rax
   2fd1f:	nop
   2fd20:	mov    DWORD PTR [rbp+0x0],ebx
   2fd23:	mov    rsi,rbp
   2fd26:	mov    rdi,r12
   2fd29:	xor    edx,edx
   2fd2b:	mov    QWORD PTR [rbp+0x8],rax
   2fd2f:	add    rsp,0x8
   2fd33:	pop    rbx
   2fd34:	pop    rbp
   2fd35:	pop    r12
   2fd37:	pop    r13
   2fd39:	jmp    12430 <wget_vector_insert@plt>
   2fd3e:	xchg   ax,ax
   2fd40:	test   rax,rax
   2fd43:	je     2fd01 <ocsp_stapled_responses_add_single+0x41>
   2fd45:	add    rsp,0x8
   2fd49:	mov    rdi,rax
   2fd4c:	pop    rbx
   2fd4d:	pop    rbp
   2fd4e:	pop    r12
   2fd50:	pop    r13
   2fd52:	jmp    10b40 <OCSP_CERTID_free@plt>
   2fd57:	pop    rax
   2fd58:	pop    rbx
   2fd59:	pop    rbp
   2fd5a:	pop    r12
   2fd5c:	pop    r13
   2fd5e:	ret    
   2fd5f:	nop

000000000002fd60 <_ocsp_stapled_response_destroy_func>:
   2fd60:	endbr64 
   2fd64:	push   rbp
   2fd65:	mov    rbp,rdi
   2fd68:	mov    rdi,QWORD PTR [rdi+0x8]
   2fd6c:	call   10b40 <OCSP_CERTID_free@plt>
   2fd71:	mov    rax,QWORD PTR [rip+0x46270]        # 75fe8 <wget_free@@Base-0x1328>
   2fd78:	mov    rdi,rbp
   2fd7b:	pop    rbp
   2fd7c:	mov    rax,QWORD PTR [rax]
   2fd7f:	jmp    rax
   2fd81:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2fd8c:	nop    DWORD PTR [rax+0x0]

000000000002fd90 <print_openssl_time>:
   2fd90:	push   r13
   2fd92:	mov    r13,rdi
   2fd95:	push   r12
   2fd97:	mov    r12,rsi
   2fd9a:	push   rbp
   2fd9b:	sub    rsp,0x90
   2fda2:	mov    rax,QWORD PTR fs:0x28
   2fdab:	mov    QWORD PTR [rsp+0x88],rax
   2fdb3:	xor    eax,eax
   2fdb5:	call   11380 <BIO_s_mem@plt>
   2fdba:	mov    rdi,rax
   2fdbd:	call   12250 <BIO_new@plt>
   2fdc2:	mov    rsi,r12
   2fdc5:	mov    r12,rsp
   2fdc8:	mov    rbp,rax
   2fdcb:	mov    rdi,rax
   2fdce:	call   11060 <ASN1_GENERALIZEDTIME_print@plt>
   2fdd3:	mov    edx,0x7f
   2fdd8:	mov    rsi,r12
   2fddb:	mov    rdi,rbp
   2fdde:	call   11870 <BIO_read@plt>
   2fde3:	test   eax,eax
   2fde5:	jle    2fe30 <print_openssl_time+0xa0>
   2fde7:	cdqe   
   2fde9:	mov    rdx,r12
   2fdec:	lea    rdi,[rip+0x1e2cc]        # 4e0bf <powers.0+0x3ff>
   2fdf3:	mov    rsi,r13
   2fdf6:	mov    BYTE PTR [rsp+rax*1],0x0
   2fdfa:	xor    eax,eax
   2fdfc:	call   114b0 <wget_debug_printf@plt>
   2fe01:	mov    rdi,rbp
   2fe04:	call   10a50 <BIO_free_all@plt>
   2fe09:	mov    rax,QWORD PTR [rsp+0x88]
   2fe11:	sub    rax,QWORD PTR fs:0x28
   2fe1a:	jne    2fe4f <print_openssl_time+0xbf>
   2fe1c:	add    rsp,0x90
   2fe23:	pop    rbp
   2fe24:	pop    r12
   2fe26:	pop    r13
   2fe28:	ret    
   2fe29:	nop    DWORD PTR [rax+0x0]
   2fe30:	xor    edi,edi
   2fe32:	mov    edx,0x5
   2fe37:	lea    rsi,[rip+0x1e622]        # 4e460 <powers.0+0x7a0>
   2fe3e:	call   10f90 <dcgettext@plt>
   2fe43:	mov    rdi,rax
   2fe46:	xor    eax,eax
   2fe48:	call   11ea0 <wget_error_printf@plt>
   2fe4d:	jmp    2fe01 <print_openssl_time+0x71>
   2fe4f:	call   11760 <__stack_chk_fail@plt>
   2fe54:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   2fe5f:	nop

000000000002fe60 <check_ocsp_response>:
   2fe60:	push   r15
   2fe62:	push   r14
   2fe64:	mov    r14d,ecx
   2fe67:	push   r13
   2fe69:	mov    r13,rdx
   2fe6c:	push   r12
   2fe6e:	mov    r12,rsi
   2fe71:	push   rbp
   2fe72:	mov    rbp,rdi
   2fe75:	push   rbx
   2fe76:	mov    rbx,r8
   2fe79:	sub    rsp,0xa8
   2fe80:	mov    QWORD PTR [rsp+0x8],r9
   2fe85:	mov    rax,QWORD PTR fs:0x28
   2fe8e:	mov    QWORD PTR [rsp+0x98],rax
   2fe96:	xor    eax,eax
   2fe98:	mov    QWORD PTR [rsp+0x38],0x0
   2fea1:	mov    QWORD PTR [rsp+0x40],0x0
   2feaa:	mov    QWORD PTR [rsp+0x48],0x0
   2feb3:	call   10f80 <OCSP_response_status@plt>
   2feb8:	mov    r15d,eax
   2febb:	cmp    eax,0x6
   2febe:	ja     300b0 <check_ocsp_response+0x250>
   2fec4:	lea    rdx,[rip+0x1f025]        # 4eef0 <powers.0+0x1230>
   2fecb:	mov    eax,eax
   2fecd:	movsxd rax,DWORD PTR [rdx+rax*4]
   2fed1:	add    rax,rdx
   2fed4:	notrack jmp rax
   2fed7:	nop    WORD PTR [rax+rax*1+0x0]
   2fee0:	lea    rsi,[rip+0x1e3a1]        # 4e288 <powers.0+0x5c8>
   2fee7:	lea    rdi,[rip+0x1e2ee]        # 4e1dc <powers.0+0x51c>
   2feee:	xor    eax,eax
   2fef0:	call   114b0 <wget_debug_printf@plt>
   2fef5:	mov    rdi,rbp
   2fef8:	call   10990 <OCSP_response_get1_basic@plt>
   2fefd:	mov    rbp,rax
   2ff00:	test   rax,rax
   2ff03:	je     300fc <check_ocsp_response+0x29c>
   2ff09:	mov    rdx,r13
   2ff0c:	mov    rsi,r12
   2ff0f:	xor    ecx,ecx
   2ff11:	mov    rdi,rbp
   2ff14:	call   11360 <OCSP_basic_verify@plt>
   2ff19:	mov    edx,0x5
   2ff1e:	lea    rsi,[rip+0x1e56b]        # 4e490 <powers.0+0x7d0>
   2ff25:	test   eax,eax
   2ff27:	je     30140 <check_ocsp_response+0x2e0>
   2ff2d:	xor    esi,esi
   2ff2f:	mov    rdi,rbp
   2ff32:	call   11ae0 <OCSP_resp_get0@plt>
   2ff37:	mov    edx,0x5
   2ff3c:	lea    rsi,[rip+0x1e57d]        # 4e4c0 <powers.0+0x800>
   2ff43:	mov    r12,rax
   2ff46:	test   rax,rax
   2ff49:	je     30140 <check_ocsp_response+0x2e0>
   2ff4f:	lea    rdx,[rsp+0x38]
   2ff54:	lea    rsi,[rsp+0x2c]
   2ff59:	mov    rdi,rax
   2ff5c:	lea    rcx,[rsp+0x40]
   2ff61:	lea    r8,[rsp+0x48]
   2ff66:	call   10a90 <OCSP_single_get0_status@plt>
   2ff6b:	mov    edx,0x5
   2ff70:	lea    rsi,[rip+0x1e571]        # 4e4e8 <powers.0+0x828>
   2ff77:	mov    r13d,eax
   2ff7a:	cmp    eax,0xffffffff
   2ff7d:	je     30140 <check_ocsp_response+0x2e0>
   2ff83:	mov    eax,DWORD PTR [rsp+0x2c]
   2ff87:	cmp    r13d,0x1
   2ff8b:	je     30248 <check_ocsp_response+0x3e8>
   2ff91:	cmp    r13d,0x2
   2ff95:	je     301b8 <check_ocsp_response+0x358>
   2ff9b:	lea    rsi,[rip+0x1e1bc]        # 4e15e <powers.0+0x49e>
   2ffa2:	test   r13d,r13d
   2ffa5:	je     30318 <check_ocsp_response+0x4b8>
   2ffab:	lea    rdi,[rip+0x1e271]        # 4e223 <powers.0+0x563>
   2ffb2:	xor    eax,eax
   2ffb4:	call   114b0 <wget_debug_printf@plt>
   2ffb9:	test   r14b,r14b
   2ffbc:	je     30088 <check_ocsp_response+0x228>
   2ffc2:	mov    r10,QWORD PTR [rsp+0x40]
   2ffc7:	test   r10,r10
   2ffca:	je     30130 <check_ocsp_response+0x2d0>
   2ffd0:	mov    rax,QWORD PTR [rsp+0x48]
   2ffd5:	xor    edi,edi
   2ffd7:	mov    QWORD PTR [rsp+0x18],r10
   2ffdc:	mov    QWORD PTR [rsp+0x10],rax
   2ffe1:	call   11480 <time@plt>
   2ffe6:	xor    ecx,ecx
   2ffe8:	xor    edx,edx
   2ffea:	xor    edi,edi
   2ffec:	mov    rsi,rax
   2ffef:	call   10ad0 <ASN1_TIME_adj@plt>
   2fff4:	mov    r10,QWORD PTR [rsp+0x18]
   2fff9:	test   rax,rax
   2fffc:	mov    r14,rax
   2ffff:	je     3034e <check_ocsp_response+0x4ee>
   30005:	mov    rsi,r10
   30008:	lea    rdi,[rip+0x1e24b]        # 4e25a <powers.0+0x59a>
   3000f:	mov    QWORD PTR [rsp+0x18],r10
   30014:	call   2fd90 <print_openssl_time>
   30019:	cmp    QWORD PTR [rsp+0x10],0x0
   3001f:	mov    r10,QWORD PTR [rsp+0x18]
   30024:	je     301c8 <check_ocsp_response+0x368>
   3002a:	mov    rsi,QWORD PTR [rsp+0x10]
   3002f:	lea    rdi,[rip+0x1e23b]        # 4e271 <powers.0+0x5b1>
   30036:	call   2fd90 <print_openssl_time>
   3003b:	mov    rcx,QWORD PTR [rsp+0x10]
   30040:	lea    rsi,[rsp+0x34]
   30045:	mov    rdx,r14
   30048:	lea    rdi,[rsp+0x30]
   3004d:	call   11ad0 <ASN1_TIME_diff@plt>
   30052:	mov    edx,0x5
   30057:	lea    rsi,[rip+0x1e5ca]        # 4e628 <powers.0+0x968>
   3005e:	test   eax,eax
   30060:	je     30220 <check_ocsp_response+0x3c0>
   30066:	mov    edx,DWORD PTR [rsp+0x30]
   3006a:	test   edx,edx
   3006c:	js     30338 <check_ocsp_response+0x4d8>
   30072:	jne    30080 <check_ocsp_response+0x220>
   30074:	mov    eax,DWORD PTR [rsp+0x34]
   30078:	test   eax,eax
   3007a:	js     30338 <check_ocsp_response+0x4d8>
   30080:	mov    rdi,r14
   30083:	call   12380 <ASN1_STRING_free@plt>
   30088:	test   rbx,rbx
   3008b:	je     30157 <check_ocsp_response+0x2f7>
   30091:	cmp    r13d,0x1
   30095:	ja     30157 <check_ocsp_response+0x2f7>
   3009b:	mov    rdx,QWORD PTR [rsp+0x8]
   300a0:	xor    esi,esi
   300a2:	mov    rdi,r12
   300a5:	call   rbx
   300a7:	jmp    30157 <check_ocsp_response+0x2f7>
   300ac:	nop    DWORD PTR [rax+0x0]
   300b0:	lea    rbp,[rsp+0x50]
   300b5:	mov    esi,0x40
   300ba:	mov    ecx,r15d
   300bd:	xor    eax,eax
   300bf:	lea    rdx,[rip+0x1e0ff]        # 4e1c5 <powers.0+0x505>
   300c6:	mov    rdi,rbp
   300c9:	call   119f0 <wget_snprintf@plt>
   300ce:	mov    rsi,rbp
   300d1:	lea    rdi,[rip+0x1e104]        # 4e1dc <powers.0+0x51c>
   300d8:	xor    eax,eax
   300da:	call   114b0 <wget_debug_printf@plt>
   300df:	xor    edi,edi
   300e1:	mov    edx,0x5
   300e6:	lea    rsi,[rip+0x1e10d]        # 4e1fa <powers.0+0x53a>
   300ed:	call   10f90 <dcgettext@plt>
   300f2:	mov    rdi,rax
   300f5:	xor    eax,eax
   300f7:	call   11ea0 <wget_error_printf@plt>
   300fc:	mov    r15d,0xffffffff
   30102:	mov    rax,QWORD PTR [rsp+0x98]
   3010a:	sub    rax,QWORD PTR fs:0x28
   30113:	jne    30349 <check_ocsp_response+0x4e9>
   30119:	add    rsp,0xa8
   30120:	mov    eax,r15d
   30123:	pop    rbx
   30124:	pop    rbp
   30125:	pop    r12
   30127:	pop    r13
   30129:	pop    r14
   3012b:	pop    r15
   3012d:	ret    
   3012e:	xchg   ax,ax
   30130:	mov    edx,0x5
   30135:	lea    rsi,[rip+0x1e3fc]        # 4e538 <powers.0+0x878>
   3013c:	nop    DWORD PTR [rax+0x0]
   30140:	xor    edi,edi
   30142:	mov    r15d,0xffffffff
   30148:	call   10f90 <dcgettext@plt>
   3014d:	mov    rdi,rax
   30150:	xor    eax,eax
   30152:	call   11ea0 <wget_error_printf@plt>
   30157:	mov    rdi,rbp
   3015a:	call   10770 <OCSP_BASICRESP_free@plt>
   3015f:	jmp    30102 <check_ocsp_response+0x2a2>
   30161:	nop    DWORD PTR [rax+0x0]
   30168:	lea    rsi,[rip+0x1e02b]        # 4e19a <powers.0+0x4da>
   3016f:	jmp    300d1 <check_ocsp_response+0x271>
   30174:	nop    DWORD PTR [rax+0x0]
   30178:	lea    rsi,[rip+0x1e025]        # 4e1a4 <powers.0+0x4e4>
   3017f:	jmp    300d1 <check_ocsp_response+0x271>
   30184:	nop    DWORD PTR [rax+0x0]
   30188:	lea    rsi,[rip+0x1e024]        # 4e1b3 <powers.0+0x4f3>
   3018f:	jmp    300d1 <check_ocsp_response+0x271>
   30194:	nop    DWORD PTR [rax+0x0]
   30198:	lea    rsi,[rip+0x1dfe8]        # 4e187 <powers.0+0x4c7>
   3019f:	jmp    300d1 <check_ocsp_response+0x271>
   301a4:	nop    DWORD PTR [rax+0x0]
   301a8:	lea    rsi,[rip+0x1dfcb]        # 4e17a <powers.0+0x4ba>
   301af:	jmp    300d1 <check_ocsp_response+0x271>
   301b4:	nop    DWORD PTR [rax+0x0]
   301b8:	lea    rsi,[rip+0x1dfb3]        # 4e172 <powers.0+0x4b2>
   301bf:	jmp    2ffab <check_ocsp_response+0x14b>
   301c4:	nop    DWORD PTR [rax+0x0]
   301c8:	lea    rdi,[rip+0x1e3a9]        # 4e578 <powers.0+0x8b8>
   301cf:	xor    eax,eax
   301d1:	mov    QWORD PTR [rsp+0x10],r10
   301d6:	call   114b0 <wget_debug_printf@plt>
   301db:	mov    rcx,QWORD PTR [rsp+0x10]
   301e0:	lea    rsi,[rsp+0x34]
   301e5:	mov    rdx,r14
   301e8:	lea    rdi,[rsp+0x30]
   301ed:	call   11ad0 <ASN1_TIME_diff@plt>
   301f2:	mov    edx,0x5
   301f7:	lea    rsi,[rip+0x1e3b2]        # 4e5b0 <powers.0+0x8f0>
   301fe:	test   eax,eax
   30200:	je     30220 <check_ocsp_response+0x3c0>
   30202:	cmp    DWORD PTR [rsp+0x30],0xfffffffd
   30207:	jge    30080 <check_ocsp_response+0x220>
   3020d:	mov    edx,0x5
   30212:	lea    rsi,[rip+0x1e3d7]        # 4e5f0 <powers.0+0x930>
   30219:	nop    DWORD PTR [rax+0x0]
   30220:	xor    edi,edi
   30222:	mov    r15d,0x1
   30228:	call   10f90 <dcgettext@plt>
   3022d:	mov    rdi,rax
   30230:	xor    eax,eax
   30232:	call   11ea0 <wget_error_printf@plt>
   30237:	mov    rdi,r14
   3023a:	call   12380 <ASN1_STRING_free@plt>
   3023f:	jmp    30157 <check_ocsp_response+0x2f7>
   30244:	nop    DWORD PTR [rax+0x0]
   30248:	add    eax,0x1
   3024b:	cmp    eax,0x9
   3024e:	ja     30306 <check_ocsp_response+0x4a6>
   30254:	lea    rdx,[rip+0x1ecb1]        # 4ef0c <powers.0+0x124c>
   3025b:	movsxd rax,DWORD PTR [rdx+rax*4]
   3025f:	add    rax,rdx
   30262:	notrack jmp rax
   30265:	lea    rcx,[rip+0x1de59]        # 4e0c5 <powers.0+0x405>
   3026c:	nop    DWORD PTR [rax+0x0]
   30270:	lea    r12,[rsp+0x50]
   30275:	lea    rdx,[rip+0x1df9a]        # 4e216 <powers.0+0x556>
   3027c:	mov    esi,0x40
   30281:	xor    eax,eax
   30283:	mov    rdi,r12
   30286:	mov    r15d,0x1
   3028c:	call   119f0 <wget_snprintf@plt>
   30291:	mov    rsi,r12
   30294:	lea    rdi,[rip+0x1df88]        # 4e223 <powers.0+0x563>
   3029b:	xor    eax,eax
   3029d:	call   114b0 <wget_debug_printf@plt>
   302a2:	mov    rsi,QWORD PTR [rsp+0x38]
   302a7:	lea    rdi,[rip+0x1e262]        # 4e510 <powers.0+0x850>
   302ae:	call   2fd90 <print_openssl_time>
   302b3:	jmp    30157 <check_ocsp_response+0x2f7>
   302b8:	lea    rcx,[rip+0x1de80]        # 4e13f <powers.0+0x47f>
   302bf:	jmp    30270 <check_ocsp_response+0x410>
   302c1:	lea    rcx,[rip+0x1de66]        # 4e12e <powers.0+0x46e>
   302c8:	jmp    30270 <check_ocsp_response+0x410>
   302ca:	lea    rcx,[rip+0x1de46]        # 4e117 <powers.0+0x457>
   302d1:	jmp    30270 <check_ocsp_response+0x410>
   302d3:	lea    rcx,[rip+0x1de32]        # 4e10c <powers.0+0x44c>
   302da:	jmp    30270 <check_ocsp_response+0x410>
   302dc:	lea    rcx,[rip+0x1de15]        # 4e0f8 <powers.0+0x438>
   302e3:	jmp    30270 <check_ocsp_response+0x410>
   302e5:	lea    rcx,[rip+0x1ddfe]        # 4e0ea <powers.0+0x42a>
   302ec:	jmp    30270 <check_ocsp_response+0x410>
   302ee:	lea    rcx,[rip+0x1dde6]        # 4e0db <powers.0+0x41b>
   302f5:	jmp    30270 <check_ocsp_response+0x410>
   302fa:	lea    rcx,[rip+0x1ddce]        # 4e0cf <powers.0+0x40f>
   30301:	jmp    30270 <check_ocsp_response+0x410>
   30306:	lea    rcx,[rip+0x1de42]        # 4e14f <powers.0+0x48f>
   3030d:	jmp    30270 <check_ocsp_response+0x410>
   30312:	nop    WORD PTR [rax+rax*1+0x0]
   30318:	lea    rsi,[rip+0x1df74]        # 4e293 <powers.0+0x5d3>
   3031f:	lea    rdi,[rip+0x1defd]        # 4e223 <powers.0+0x563>
   30326:	xor    eax,eax
   30328:	call   114b0 <wget_debug_printf@plt>
   3032d:	jmp    2ffb9 <check_ocsp_response+0x159>
   30332:	nop    WORD PTR [rax+rax*1+0x0]
   30338:	mov    edx,0x5
   3033d:	lea    rsi,[rip+0x1e324]        # 4e668 <powers.0+0x9a8>
   30344:	jmp    30220 <check_ocsp_response+0x3c0>
   30349:	call   11760 <__stack_chk_fail@plt>
   3034e:	mov    edx,0x5
   30353:	lea    rsi,[rip+0x1dee3]        # 4e23d <powers.0+0x57d>
   3035a:	xor    edi,edi
   3035c:	mov    r15d,0x1
   30362:	call   10f90 <dcgettext@plt>
   30367:	mov    rdi,rax
   3036a:	xor    eax,eax
   3036c:	call   11ea0 <wget_error_printf@plt>
   30371:	jmp    30157 <check_ocsp_response+0x2f7>
   30376:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000030380 <ocsp_resp_cb>:
   30380:	endbr64 
   30384:	push   r13
   30386:	push   r12
   30388:	push   rbp
   30389:	mov    rbp,rdi
   3038c:	push   rbx
   3038d:	sub    rsp,0x18
   30391:	mov    esi,DWORD PTR [rip+0x472d1]        # 77668 <ssl_userdata_idx>
   30397:	mov    rax,QWORD PTR fs:0x28
   303a0:	mov    QWORD PTR [rsp+0x8],rax
   303a5:	xor    eax,eax
   303a7:	mov    QWORD PTR [rsp],0x0
   303af:	call   10940 <SSL_get_ex_data@plt>
   303b4:	mov    edx,0x5
   303b9:	lea    rsi,[rip+0x1e2d0]        # 4e690 <powers.0+0x9d0>
   303c0:	test   rax,rax
   303c3:	je     30488 <ocsp_resp_cb+0x108>
   303c9:	mov    r13,rsp
   303cc:	xor    edx,edx
   303ce:	mov    esi,0x46
   303d3:	mov    rdi,rbp
   303d6:	mov    rcx,r13
   303d9:	mov    rbx,rax
   303dc:	call   10a40 <SSL_ctrl@plt>
   303e1:	mov    r12,rax
   303e4:	cmp    rax,0xffffffffffffffff
   303e8:	je     304a0 <ocsp_resp_cb+0x120>
   303ee:	mov    rsi,r13
   303f1:	mov    rdx,rax
   303f4:	xor    edi,edi
   303f6:	call   117a0 <d2i_OCSP_RESPONSE@plt>
   303fb:	mov    edx,0x5
   30400:	lea    rsi,[rip+0x1e2f9]        # 4e700 <powers.0+0xa40>
   30407:	mov    r13,rax
   3040a:	test   rax,rax
   3040d:	je     30488 <ocsp_resp_cb+0x108>
   3040f:	mov    rdi,rbp
   30412:	call   10640 <SSL_get_peer_cert_chain@plt>
   30417:	mov    rsi,rax
   3041a:	test   rax,rax
   3041d:	je     30478 <ocsp_resp_cb+0xf8>
   3041f:	mov    r9,QWORD PTR [rbx+0x8]
   30423:	mov    rdx,QWORD PTR [rbx]
   30426:	mov    rdi,r13
   30429:	xor    ecx,ecx
   3042b:	lea    r8,[rip+0xfffffffffffff88e]        # 2fcc0 <ocsp_stapled_responses_add_single>
   30432:	call   2fe60 <check_ocsp_response>
   30437:	mov    rdi,r13
   3043a:	cmp    eax,0xffffffff
   3043d:	je     304b8 <ocsp_resp_cb+0x138>
   3043f:	call   11cf0 <OCSP_RESPONSE_free@plt>
   30444:	xor    eax,eax
   30446:	mov    rsi,r12
   30449:	lea    rdi,[rip+0x1e350]        # 4e7a0 <powers.0+0xae0>
   30450:	call   114b0 <wget_debug_printf@plt>
   30455:	mov    eax,0x1
   3045a:	mov    rdx,QWORD PTR [rsp+0x8]
   3045f:	sub    rdx,QWORD PTR fs:0x28
   30468:	jne    304cb <ocsp_resp_cb+0x14b>
   3046a:	add    rsp,0x18
   3046e:	pop    rbx
   3046f:	pop    rbp
   30470:	pop    r12
   30472:	pop    r13
   30474:	ret    
   30475:	nop    DWORD PTR [rax]
   30478:	mov    edx,0x5
   3047d:	lea    rsi,[rip+0x1e2bc]        # 4e740 <powers.0+0xa80>
   30484:	nop    DWORD PTR [rax+0x0]
   30488:	xor    edi,edi
   3048a:	call   10f90 <dcgettext@plt>
   3048f:	mov    rdi,rax
   30492:	xor    eax,eax
   30494:	call   11ea0 <wget_error_printf@plt>
   30499:	xor    eax,eax
   3049b:	jmp    3045a <ocsp_resp_cb+0xda>
   3049d:	nop    DWORD PTR [rax]
   304a0:	xor    eax,eax
   304a2:	lea    rdi,[rip+0x1e21f]        # 4e6c8 <powers.0+0xa08>
   304a9:	call   114b0 <wget_debug_printf@plt>
   304ae:	mov    eax,0x1
   304b3:	jmp    3045a <ocsp_resp_cb+0xda>
   304b5:	nop    DWORD PTR [rax]
   304b8:	call   11cf0 <OCSP_RESPONSE_free@plt>
   304bd:	mov    edx,0x5
   304c2:	lea    rsi,[rip+0x1e29f]        # 4e768 <powers.0+0xaa8>
   304c9:	jmp    30488 <ocsp_resp_cb+0x108>
   304cb:	call   11760 <__stack_chk_fail@plt>

00000000000304d0 <openssl_load_trust_file>:
   304d0:	push   r14
   304d2:	mov    r14,rdx
   304d5:	mov    edx,0x100
   304da:	push   r13
   304dc:	mov    r13,rsi
   304df:	push   r12
   304e1:	mov    r12,rdi
   304e4:	push   rbp
   304e5:	push   rbx
   304e6:	sub    rsp,0x130
   304ed:	mov    rax,QWORD PTR fs:0x28
   304f6:	mov    QWORD PTR [rsp+0x128],rax
   304fe:	xor    eax,eax
   30500:	mov    rbp,rsp
   30503:	lea    rsi,[rsp+0x20]
   30508:	mov    rdi,rbp
   3050b:	call   108d0 <wget_buffer_init@plt>
   30510:	mov    rcx,r14
   30513:	mov    rdx,r13
   30516:	mov    rdi,rbp
   30519:	lea    rsi,[rip+0x1c1e1]        # 4c701 <maybe+0x461>
   30520:	xor    eax,eax
   30522:	call   108c0 <wget_buffer_printf@plt>
   30527:	mov    rsi,QWORD PTR [rsp]
   3052b:	xor    edx,edx
   3052d:	mov    rdi,r12
   30530:	call   119c0 <SSL_CTX_load_verify_locations@plt>
   30535:	mov    rdi,rbp
   30538:	mov    ebx,eax
   3053a:	call   11300 <wget_buffer_deinit@plt>
   3053f:	cmp    ebx,0x1
   30542:	sbb    eax,eax
   30544:	mov    rdx,QWORD PTR [rsp+0x128]
   3054c:	sub    rdx,QWORD PTR fs:0x28
   30555:	jne    30567 <openssl_load_trust_file+0x97>
   30557:	add    rsp,0x130
   3055e:	pop    rbx
   3055f:	pop    rbp
   30560:	pop    r12
   30562:	pop    r13
   30564:	pop    r14
   30566:	ret    
   30567:	call   11760 <__stack_chk_fail@plt>
   3056c:	nop    DWORD PTR [rax+0x0]

0000000000030570 <_ocsp_stapled_response_compare_func>:
   30570:	endbr64 
   30574:	mov    rsi,QWORD PTR [rsi+0x8]
   30578:	jmp    11790 <OCSP_id_cmp@plt>
   3057d:	nop    DWORD PTR [rax]

0000000000030580 <compute_cert_fingerprint>:
   30580:	push   r15
   30582:	push   r14
   30584:	push   r13
   30586:	push   r12
   30588:	push   rbp
   30589:	mov    rbp,rdi
   3058c:	push   rbx
   3058d:	sub    rsp,0x18
   30591:	mov    rax,QWORD PTR fs:0x28
   3059a:	mov    QWORD PTR [rsp+0x8],rax
   3059f:	xor    eax,eax
   305a1:	call   117e0 <EVP_MD_CTX_new@plt>
   305a6:	mov    rsi,rsp
   305a9:	mov    rdi,rbp
   305ac:	mov    QWORD PTR [rsp],0x0
   305b4:	mov    r12,rax
   305b7:	call   110c0 <i2d_X509@plt>
   305bc:	test   eax,eax
   305be:	js     30609 <compute_cert_fingerprint+0x89>
   305c0:	mov    ebx,eax
   305c2:	call   122f0 <EVP_sha256@plt>
   305c7:	mov    rdi,rax
   305ca:	call   10a20 <EVP_MD_get_size@plt>
   305cf:	mov    r14,QWORD PTR [rip+0x459fa]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   305d6:	movsxd r15,eax
   305d9:	mov    rdi,r15
   305dc:	call   QWORD PTR [r14]
   305df:	mov    rbp,rax
   305e2:	test   rax,rax
   305e5:	je     30609 <compute_cert_fingerprint+0x89>
   305e7:	call   122f0 <EVP_sha256@plt>
   305ec:	xor    edx,edx
   305ee:	mov    rdi,r12
   305f1:	mov    rsi,rax
   305f4:	call   11140 <EVP_DigestInit_ex@plt>
   305f9:	test   eax,eax
   305fb:	jne    30660 <compute_cert_fingerprint+0xe0>
   305fd:	mov    rax,QWORD PTR [rip+0x459e4]        # 75fe8 <wget_free@@Base-0x1328>
   30604:	mov    rdi,rbp
   30607:	call   QWORD PTR [rax]
   30609:	mov    rdi,QWORD PTR [rsp]
   3060d:	test   rdi,rdi
   30610:	je     30623 <compute_cert_fingerprint+0xa3>
   30612:	mov    edx,0x470
   30617:	lea    rsi,[rip+0x1dc7a]        # 4e298 <powers.0+0x5d8>
   3061e:	call   10f10 <CRYPTO_free@plt>
   30623:	test   r12,r12
   30626:	je     30633 <compute_cert_fingerprint+0xb3>
   30628:	mov    rdi,r12
   3062b:	xor    r12d,r12d
   3062e:	call   12420 <EVP_MD_CTX_free@plt>
   30633:	mov    rax,QWORD PTR [rsp+0x8]
   30638:	sub    rax,QWORD PTR fs:0x28
   30641:	jne    306e9 <compute_cert_fingerprint+0x169>
   30647:	add    rsp,0x18
   3064b:	mov    rax,r12
   3064e:	pop    rbx
   3064f:	pop    rbp
   30650:	pop    r12
   30652:	pop    r13
   30654:	pop    r14
   30656:	pop    r15
   30658:	ret    
   30659:	nop    DWORD PTR [rax+0x0]
   30660:	mov    rsi,QWORD PTR [rsp]
   30664:	movsxd rdx,ebx
   30667:	mov    rdi,r12
   3066a:	call   12670 <EVP_DigestUpdate@plt>
   3066f:	test   eax,eax
   30671:	je     305fd <compute_cert_fingerprint+0x7d>
   30673:	xor    edx,edx
   30675:	mov    rsi,rbp
   30678:	mov    rdi,r12
   3067b:	call   10ed0 <EVP_DigestFinal_ex@plt>
   30680:	test   eax,eax
   30682:	je     305fd <compute_cert_fingerprint+0x7d>
   30688:	mov    rdi,QWORD PTR [rsp]
   3068c:	mov    edx,0x45c
   30691:	lea    r13d,[r15+r15*1+0x1]
   30696:	lea    rsi,[rip+0x1dbfb]        # 4e298 <powers.0+0x5d8>
   3069d:	movsxd r13,r13d
   306a0:	call   10f10 <CRYPTO_free@plt>
   306a5:	mov    rdi,r12
   306a8:	mov    QWORD PTR [rsp],0x0
   306b0:	call   12420 <EVP_MD_CTX_free@plt>
   306b5:	mov    rdi,r13
   306b8:	call   QWORD PTR [r14]
   306bb:	mov    r12,rax
   306be:	test   rax,rax
   306c1:	je     305fd <compute_cert_fingerprint+0x7d>
   306c7:	mov    rdx,rax
   306ca:	mov    rdi,rbp
   306cd:	mov    rcx,r13
   306d0:	mov    rsi,r15
   306d3:	call   11a80 <wget_memtohex@plt>
   306d8:	mov    rax,QWORD PTR [rip+0x45909]        # 75fe8 <wget_free@@Base-0x1328>
   306df:	mov    rdi,rbp
   306e2:	call   QWORD PTR [rax]
   306e4:	jmp    30633 <compute_cert_fingerprint+0xb3>
   306e9:	call   11760 <__stack_chk_fail@plt>
   306ee:	xchg   ax,ax

00000000000306f0 <tls_exit>:
   306f0:	endbr64 
   306f4:	cmp    QWORD PTR [rip+0x46f7c],0x0        # 77678 <mutex>
   306fc:	je     30728 <tls_exit+0x38>
   306fe:	sub    rsp,0x8
   30702:	lea    rdi,[rip+0x46f6f]        # 77678 <mutex>
   30709:	call   11e70 <wget_thread_mutex_destroy@plt>
   3070e:	mov    esi,DWORD PTR [rip+0x46f54]        # 77668 <ssl_userdata_idx>
   30714:	mov    edi,0xd
   30719:	add    rsp,0x8
   3071d:	jmp    112f0 <CRYPTO_free_ex_index@plt>
   30722:	nop    WORD PTR [rax+rax*1+0x0]
   30728:	ret    
   30729:	nop    DWORD PTR [rax+0x0]

0000000000030730 <ssl_transfer.part.0>:
   30730:	push   r15
   30732:	mov    r15d,edx
   30735:	push   r14
   30737:	push   r13
   30739:	mov    r13d,r8d
   3073c:	push   r12
   3073e:	mov    r12,rcx
   30741:	push   rbp
   30742:	mov    ebp,edi
   30744:	mov    rdi,rsi
   30747:	push   rbx
   30748:	mov    rbx,rsi
   3074b:	sub    rsp,0x18
   3074f:	mov    DWORD PTR [rsp+0xc],edx
   30753:	call   124e0 <SSL_get_fd@plt>
   30758:	test   eax,eax
   3075a:	js     3082d <ssl_transfer.part.0+0xfd>
   30760:	test   r15d,r15d
   30763:	mov    r14d,eax
   30766:	mov    eax,r15d
   30769:	mov    r15d,0xffffffff
   3076f:	cmovns r15d,eax
   30773:	mov    edx,ebp
   30775:	jne    307cf <ssl_transfer.part.0+0x9f>
   30777:	nop    WORD PTR [rax+rax*1+0x0]
   30780:	cmp    ebp,0x1
   30783:	je     307f8 <ssl_transfer.part.0+0xc8>
   30785:	mov    edx,r13d
   30788:	mov    rsi,r12
   3078b:	mov    rdi,rbx
   3078e:	call   126a0 <SSL_write@plt>
   30793:	test   eax,eax
   30795:	js     307b0 <ssl_transfer.part.0+0x80>
   30797:	add    rsp,0x18
   3079b:	pop    rbx
   3079c:	pop    rbp
   3079d:	pop    r12
   3079f:	pop    r13
   307a1:	pop    r14
   307a3:	pop    r15
   307a5:	ret    
   307a6:	cs nop WORD PTR [rax+rax*1+0x0]
   307b0:	mov    esi,eax
   307b2:	mov    rdi,rbx
   307b5:	call   10470 <SSL_get_error@plt>
   307ba:	sub    eax,0x2
   307bd:	cmp    eax,0x1
   307c0:	ja     30819 <ssl_transfer.part.0+0xe9>
   307c2:	mov    eax,DWORD PTR [rsp+0xc]
   307c6:	mov    edx,0x3
   307cb:	test   eax,eax
   307cd:	je     30808 <ssl_transfer.part.0+0xd8>
   307cf:	mov    esi,r15d
   307d2:	mov    edi,r14d
   307d5:	call   11470 <wget_ready_2_transfer@plt>
   307da:	test   eax,eax
   307dc:	js     30797 <ssl_transfer.part.0+0x67>
   307de:	jne    30780 <ssl_transfer.part.0+0x50>
   307e0:	add    rsp,0x18
   307e4:	mov    eax,0xfffffffc
   307e9:	pop    rbx
   307ea:	pop    rbp
   307eb:	pop    r12
   307ed:	pop    r13
   307ef:	pop    r14
   307f1:	pop    r15
   307f3:	ret    
   307f4:	nop    DWORD PTR [rax+0x0]
   307f8:	mov    edx,r13d
   307fb:	mov    rsi,r12
   307fe:	mov    rdi,rbx
   30801:	call   10500 <SSL_read@plt>
   30806:	jmp    30793 <ssl_transfer.part.0+0x63>
   30808:	add    rsp,0x18
   3080c:	xor    eax,eax
   3080e:	pop    rbx
   3080f:	pop    rbp
   30810:	pop    r12
   30812:	pop    r13
   30814:	pop    r14
   30816:	pop    r15
   30818:	ret    
   30819:	add    rsp,0x18
   3081d:	mov    eax,0xfffffffa
   30822:	pop    rbx
   30823:	pop    rbp
   30824:	pop    r12
   30826:	pop    r13
   30828:	pop    r14
   3082a:	pop    r15
   3082c:	ret    
   3082d:	mov    eax,0xffffffff
   30832:	jmp    30797 <ssl_transfer.part.0+0x67>
   30837:	nop    WORD PTR [rax+rax*1+0x0]

0000000000030840 <wget_ssl_set_config_string>:
   30840:	endbr64 
   30844:	push   rbp
   30845:	mov    ebp,edi
   30847:	cmp    edi,0x12
   3084a:	ja     30860 <wget_ssl_set_config_string+0x20>
   3084c:	lea    rdx,[rip+0x1e6e1]        # 4ef34 <powers.0+0x1274>
   30853:	mov    eax,edi
   30855:	movsxd rax,DWORD PTR [rdx+rax*4]
   30859:	add    rax,rdx
   3085c:	notrack jmp rax
   3085f:	nop
   30860:	lea    rsi,[rip+0x1df79]        # 4e7e0 <powers.0+0xb20>
   30867:	xor    edi,edi
   30869:	mov    edx,0x5
   3086e:	call   10f90 <dcgettext@plt>
   30873:	mov    esi,ebp
   30875:	pop    rbp
   30876:	mov    rdi,rax
   30879:	xor    eax,eax
   3087b:	jmp    11ea0 <wget_error_printf@plt>
   30880:	mov    QWORD PTR [rip+0x46b19],rsi        # 773a0 <config>
   30887:	pop    rbp
   30888:	ret    
   30889:	nop    DWORD PTR [rax+0x0]
   30890:	mov    QWORD PTR [rip+0x46b11],rsi        # 773a8 <config+0x8>
   30897:	pop    rbp
   30898:	ret    
   30899:	nop    DWORD PTR [rax+0x0]
   308a0:	mov    QWORD PTR [rip+0x46b09],rsi        # 773b0 <config+0x10>
   308a7:	pop    rbp
   308a8:	ret    
   308a9:	nop    DWORD PTR [rax+0x0]
   308b0:	mov    QWORD PTR [rip+0x46b01],rsi        # 773b8 <config+0x18>
   308b7:	pop    rbp
   308b8:	ret    
   308b9:	nop    DWORD PTR [rax+0x0]
   308c0:	mov    QWORD PTR [rip+0x46af9],rsi        # 773c0 <config+0x20>
   308c7:	pop    rbp
   308c8:	ret    
   308c9:	nop    DWORD PTR [rax+0x0]
   308d0:	mov    QWORD PTR [rip+0x46af1],rsi        # 773c8 <config+0x28>
   308d7:	pop    rbp
   308d8:	ret    
   308d9:	nop    DWORD PTR [rax+0x0]
   308e0:	mov    QWORD PTR [rip+0x46ae9],rsi        # 773d0 <config+0x30>
   308e7:	pop    rbp
   308e8:	ret    
   308e9:	nop    DWORD PTR [rax+0x0]
   308f0:	mov    QWORD PTR [rip+0x46ae1],rsi        # 773d8 <config+0x38>
   308f7:	pop    rbp
   308f8:	ret    
   308f9:	nop    DWORD PTR [rax+0x0]

0000000000030900 <wget_ssl_set_config_object>:
   30900:	endbr64 
   30904:	cmp    edi,0x13
   30907:	je     30940 <wget_ssl_set_config_object+0x40>
   30909:	push   rbp
   3090a:	mov    ebp,edi
   3090c:	cmp    edi,0x14
   3090f:	je     30960 <wget_ssl_set_config_object+0x60>
   30911:	cmp    edi,0x11
   30914:	je     30950 <wget_ssl_set_config_object+0x50>
   30916:	lea    rsi,[rip+0x1dec3]        # 4e7e0 <powers.0+0xb20>
   3091d:	xor    edi,edi
   3091f:	mov    edx,0x5
   30924:	call   10f90 <dcgettext@plt>
   30929:	mov    esi,ebp
   3092b:	pop    rbp
   3092c:	mov    rdi,rax
   3092f:	xor    eax,eax
   30931:	jmp    11ea0 <wget_error_printf@plt>
   30936:	cs nop WORD PTR [rax+rax*1+0x0]
   30940:	mov    QWORD PTR [rip+0x46aa9],rsi        # 773f0 <config+0x50>
   30947:	ret    
   30948:	nop    DWORD PTR [rax+rax*1+0x0]
   30950:	mov    QWORD PTR [rip+0x46a89],rsi        # 773e0 <config+0x40>
   30957:	pop    rbp
   30958:	ret    
   30959:	nop    DWORD PTR [rax+0x0]
   30960:	mov    QWORD PTR [rip+0x46a91],rsi        # 773f8 <config+0x58>
   30967:	pop    rbp
   30968:	ret    
   30969:	nop    DWORD PTR [rax+0x0]

0000000000030970 <wget_ssl_set_config_int>:
   30970:	endbr64 
   30974:	lea    eax,[rdi-0x6]
   30977:	push   rbp
   30978:	mov    ebp,edi
   3097a:	cmp    eax,0x11
   3097d:	ja     309b0 <wget_ssl_set_config_int+0x40>
   3097f:	lea    rdx,[rip+0x1e5fa]        # 4ef80 <powers.0+0x12c0>
   30986:	movsxd rax,DWORD PTR [rdx+rax*4]
   3098a:	add    rax,rdx
   3098d:	notrack jmp rax
   30990:	test   esi,esi
   30992:	movzx  eax,BYTE PTR [rip+0x46a6a]        # 77403 <config+0x63>
   30999:	setne  dl
   3099c:	shl    edx,0x6
   3099f:	and    eax,0xffffffbf
   309a2:	or     eax,edx
   309a4:	mov    BYTE PTR [rip+0x46a59],al        # 77403 <config+0x63>
   309aa:	pop    rbp
   309ab:	ret    
   309ac:	nop    DWORD PTR [rax+0x0]
   309b0:	lea    rsi,[rip+0x1de29]        # 4e7e0 <powers.0+0xb20>
   309b7:	xor    edi,edi
   309b9:	mov    edx,0x5
   309be:	call   10f90 <dcgettext@plt>
   309c3:	mov    esi,ebp
   309c5:	pop    rbp
   309c6:	mov    rdi,rax
   309c9:	xor    eax,eax
   309cb:	jmp    11ea0 <wget_error_printf@plt>
   309d0:	mov    BYTE PTR [rip+0x46a29],sil        # 77400 <config+0x60>
   309d7:	pop    rbp
   309d8:	ret    
   309d9:	nop    DWORD PTR [rax+0x0]
   309e0:	mov    BYTE PTR [rip+0x46a1a],sil        # 77401 <config+0x61>
   309e7:	pop    rbp
   309e8:	ret    
   309e9:	nop    DWORD PTR [rax+0x0]
   309f0:	mov    BYTE PTR [rip+0x46a0b],sil        # 77402 <config+0x62>
   309f7:	pop    rbp
   309f8:	ret    
   309f9:	nop    DWORD PTR [rax+0x0]
   30a00:	movzx  eax,BYTE PTR [rip+0x469fc]        # 77403 <config+0x63>
   30a07:	test   esi,esi
   30a09:	pop    rbp
   30a0a:	setne  dl
   30a0d:	and    eax,0xfffffffe
   30a10:	or     eax,edx
   30a12:	mov    BYTE PTR [rip+0x469eb],al        # 77403 <config+0x63>
   30a18:	ret    
   30a19:	nop    DWORD PTR [rax+0x0]
   30a20:	test   esi,esi
   30a22:	movzx  eax,BYTE PTR [rip+0x469da]        # 77403 <config+0x63>
   30a29:	pop    rbp
   30a2a:	setne  dl
   30a2d:	add    edx,edx
   30a2f:	and    eax,0xfffffffd
   30a32:	or     eax,edx
   30a34:	mov    BYTE PTR [rip+0x469c9],al        # 77403 <config+0x63>
   30a3a:	ret    
   30a3b:	nop    DWORD PTR [rax+rax*1+0x0]
   30a40:	test   esi,esi
   30a42:	movzx  eax,BYTE PTR [rip+0x469ba]        # 77403 <config+0x63>
   30a49:	pop    rbp
   30a4a:	setne  dl
   30a4d:	shl    edx,0x2
   30a50:	and    eax,0xfffffffb
   30a53:	or     eax,edx
   30a55:	mov    BYTE PTR [rip+0x469a8],al        # 77403 <config+0x63>
   30a5b:	ret    
   30a5c:	nop    DWORD PTR [rax+0x0]
   30a60:	test   esi,esi
   30a62:	movzx  eax,BYTE PTR [rip+0x4699a]        # 77403 <config+0x63>
   30a69:	pop    rbp
   30a6a:	setne  dl
   30a6d:	shl    edx,0x5
   30a70:	and    eax,0xffffffdf
   30a73:	or     eax,edx
   30a75:	mov    BYTE PTR [rip+0x46988],al        # 77403 <config+0x63>
   30a7b:	ret    
   30a7c:	nop    DWORD PTR [rax+0x0]
   30a80:	test   esi,esi
   30a82:	movzx  eax,BYTE PTR [rip+0x4697a]        # 77403 <config+0x63>
   30a89:	pop    rbp
   30a8a:	setne  dl
   30a8d:	shl    edx,0x3
   30a90:	and    eax,0xfffffff7
   30a93:	or     eax,edx
   30a95:	mov    BYTE PTR [rip+0x46968],al        # 77403 <config+0x63>
   30a9b:	ret    
   30a9c:	nop    DWORD PTR [rax+0x0]
   30aa0:	test   esi,esi
   30aa2:	movzx  eax,BYTE PTR [rip+0x4695a]        # 77403 <config+0x63>
   30aa9:	pop    rbp
   30aaa:	setne  dl
   30aad:	shl    edx,0x4
   30ab0:	and    eax,0xffffffef
   30ab3:	or     eax,edx
   30ab5:	mov    BYTE PTR [rip+0x46948],al        # 77403 <config+0x63>
   30abb:	ret    
   30abc:	nop    DWORD PTR [rax+0x0]

0000000000030ac0 <wget_ssl_init>:
   30ac0:	endbr64 
   30ac4:	push   r15
   30ac6:	push   r14
   30ac8:	push   r13
   30aca:	push   r12
   30acc:	push   rbp
   30acd:	push   rbx
   30ace:	sub    rsp,0x18
   30ad2:	mov    rdi,QWORD PTR [rip+0x46b9f]        # 77678 <mutex>
   30ad9:	call   12040 <wget_thread_mutex_lock@plt>
   30ade:	mov    r12d,DWORD PTR [rip+0x46b9b]        # 77680 <init>
   30ae5:	test   r12d,r12d
   30ae8:	je     30b08 <wget_ssl_init+0x48>
   30aea:	mov    rdi,QWORD PTR [rip+0x46b87]        # 77678 <mutex>
   30af1:	add    rsp,0x18
   30af5:	pop    rbx
   30af6:	pop    rbp
   30af7:	pop    r12
   30af9:	pop    r13
   30afb:	pop    r14
   30afd:	pop    r15
   30aff:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   30b04:	nop    DWORD PTR [rax+0x0]
   30b08:	call   10be0 <TLS_client_method@plt>
   30b0d:	mov    rdi,rax
   30b10:	call   11d40 <SSL_CTX_new@plt>
   30b15:	mov    QWORD PTR [rip+0x46b54],rax        # 77670 <_ctx>
   30b1c:	mov    rbp,rax
   30b1f:	test   rax,rax
   30b22:	je     30cc8 <wget_ssl_init+0x208>
   30b28:	test   BYTE PTR [rip+0x468d4],0x1        # 77403 <config+0x63>
   30b2f:	je     30cf0 <wget_ssl_init+0x230>
   30b35:	mov    rdi,rax
   30b38:	call   12530 <SSL_CTX_get_cert_store@plt>
   30b3d:	mov    r13,rax
   30b40:	test   rax,rax
   30b43:	je     30f75 <wget_ssl_init+0x4b5>
   30b49:	mov    r14,QWORD PTR [rip+0x46858]        # 773a8 <config+0x8>
   30b50:	test   r14,r14
   30b53:	je     30b5f <wget_ssl_init+0x9f>
   30b55:	cmp    BYTE PTR [r14],0x0
   30b59:	jne    30db0 <wget_ssl_init+0x2f0>
   30b5f:	mov    r12,QWORD PTR [rip+0x4684a]        # 773b0 <config+0x10>
   30b66:	test   r12,r12
   30b69:	je     30b8d <wget_ssl_init+0xcd>
   30b6b:	lea    rsi,[rip+0x1d734]        # 4e2a6 <powers.0+0x5e6>
   30b72:	mov    rdi,r12
   30b75:	call   103f0 <wget_strcmp@plt>
   30b7a:	test   eax,eax
   30b7c:	je     30eb8 <wget_ssl_init+0x3f8>
   30b82:	cmp    BYTE PTR [r12],0x0
   30b87:	jne    30e70 <wget_ssl_init+0x3b0>
   30b8d:	test   BYTE PTR [rip+0x4686f],0x20        # 77403 <config+0x63>
   30b94:	jne    30d90 <wget_ssl_init+0x2d0>
   30b9a:	xor    ecx,ecx
   30b9c:	mov    edx,0x303
   30ba1:	mov    esi,0x7b
   30ba6:	mov    rdi,rbp
   30ba9:	mov    r12,QWORD PTR [rip+0x467f0]        # 773a0 <config>
   30bb0:	call   11410 <SSL_CTX_ctrl@plt>
   30bb5:	xor    ecx,ecx
   30bb7:	mov    edx,0x304
   30bbc:	mov    rdi,rbp
   30bbf:	mov    esi,0x7c
   30bc4:	call   11410 <SSL_CTX_ctrl@plt>
   30bc9:	lea    rsi,[rip+0x1d6e2]        # 4e2b2 <powers.0+0x5f2>
   30bd0:	mov    rdi,r12
   30bd3:	call   12590 <wget_strcasecmp_ascii@plt>
   30bd8:	xor    ecx,ecx
   30bda:	mov    edx,0x300
   30bdf:	test   eax,eax
   30be1:	je     30d40 <wget_ssl_init+0x280>
   30be7:	lea    rsi,[rip+0x1d6c8]        # 4e2b6 <powers.0+0x5f6>
   30bee:	mov    rdi,r12
   30bf1:	call   12590 <wget_strcasecmp_ascii@plt>
   30bf6:	xor    ecx,ecx
   30bf8:	mov    edx,0x301
   30bfd:	test   eax,eax
   30bff:	je     30d40 <wget_ssl_init+0x280>
   30c05:	lea    rsi,[rip+0x1d6b0]        # 4e2bc <powers.0+0x5fc>
   30c0c:	mov    rdi,r12
   30c0f:	call   12590 <wget_strcasecmp_ascii@plt>
   30c14:	xor    ecx,ecx
   30c16:	mov    edx,0x302
   30c1b:	test   eax,eax
   30c1d:	je     30d40 <wget_ssl_init+0x280>
   30c23:	lea    rsi,[rip+0x1d69a]        # 4e2c4 <powers.0+0x604>
   30c2a:	mov    rdi,r12
   30c2d:	call   12590 <wget_strcasecmp_ascii@plt>
   30c32:	test   eax,eax
   30c34:	je     30d38 <wget_ssl_init+0x278>
   30c3a:	lea    rsi,[rip+0x1d68b]        # 4e2cc <powers.0+0x60c>
   30c41:	mov    rdi,r12
   30c44:	call   12590 <wget_strcasecmp_ascii@plt>
   30c49:	lea    rsi,[rip+0x1dc08]        # 4e858 <powers.0+0xb98>
   30c50:	test   eax,eax
   30c52:	je     30d5d <wget_ssl_init+0x29d>
   30c58:	test   r12,r12
   30c5b:	je     30d56 <wget_ssl_init+0x296>
   30c61:	lea    rsi,[rip+0x1d668]        # 4e2d0 <powers.0+0x610>
   30c68:	mov    rdi,r12
   30c6b:	call   12590 <wget_strcasecmp_ascii@plt>
   30c70:	test   eax,eax
   30c72:	je     30d56 <wget_ssl_init+0x296>
   30c78:	lea    rsi,[rip+0x1d656]        # 4e2d5 <powers.0+0x615>
   30c7f:	mov    rdi,r12
   30c82:	call   12590 <wget_strcasecmp_ascii@plt>
   30c87:	mov    rsi,r12
   30c8a:	test   eax,eax
   30c8c:	jne    30d5d <wget_ssl_init+0x29d>
   30c92:	jmp    30d56 <wget_ssl_init+0x296>
   30c97:	mov    rbp,QWORD PTR [rip+0x4672a]        # 773c8 <config+0x28>
   30c9e:	mov    edx,0x5
   30ca3:	lea    rsi,[rip+0x1dcfe]        # 4e9a8 <powers.0+0xce8>
   30caa:	xor    edi,edi
   30cac:	call   10f90 <dcgettext@plt>
   30cb1:	mov    edx,0xffffffff
   30cb6:	mov    rdi,rax
   30cb9:	mov    rsi,rbp
   30cbc:	xor    eax,eax
   30cbe:	call   11ea0 <wget_error_printf@plt>
   30cc3:	nop    DWORD PTR [rax+rax*1+0x0]
   30cc8:	xor    edi,edi
   30cca:	mov    edx,0x5
   30ccf:	lea    rsi,[rip+0x1d61c]        # 4e2f2 <powers.0+0x632>
   30cd6:	call   10f90 <dcgettext@plt>
   30cdb:	mov    rdi,rax
   30cde:	xor    eax,eax
   30ce0:	call   11ea0 <wget_error_printf@plt>
   30ce5:	jmp    30aea <wget_ssl_init+0x2a>
   30cea:	nop    WORD PTR [rax+rax*1+0x0]
   30cf0:	mov    rdi,rax
   30cf3:	xor    edx,edx
   30cf5:	xor    esi,esi
   30cf7:	call   10790 <SSL_CTX_set_verify@plt>
   30cfc:	xor    edi,edi
   30cfe:	mov    edx,0x5
   30d03:	lea    rsi,[rip+0x1db76]        # 4e880 <powers.0+0xbc0>
   30d0a:	call   10f90 <dcgettext@plt>
   30d0f:	mov    rdi,rax
   30d12:	xor    eax,eax
   30d14:	call   112a0 <wget_info_printf@plt>
   30d19:	lea    rdi,[rip+0x1d5bd]        # 4e2dd <powers.0+0x61d>
   30d20:	xor    eax,eax
   30d22:	add    DWORD PTR [rip+0x46957],0x1        # 77680 <init>
   30d29:	call   114b0 <wget_debug_printf@plt>
   30d2e:	jmp    30aea <wget_ssl_init+0x2a>
   30d33:	nop    DWORD PTR [rax+rax*1+0x0]
   30d38:	xor    ecx,ecx
   30d3a:	mov    edx,0x304
   30d3f:	nop
   30d40:	mov    esi,0x7b
   30d45:	mov    rdi,rbp
   30d48:	call   11410 <SSL_CTX_ctrl@plt>
   30d4d:	test   rax,rax
   30d50:	je     30cc8 <wget_ssl_init+0x208>
   30d56:	lea    rsi,[rip+0x1dadb]        # 4e838 <powers.0+0xb78>
   30d5d:	mov    rdi,rbp
   30d60:	call   11540 <SSL_CTX_set_cipher_list@plt>
   30d65:	test   eax,eax
   30d67:	jne    30d19 <wget_ssl_init+0x259>
   30d69:	xor    edi,edi
   30d6b:	mov    edx,0x5
   30d70:	lea    rsi,[rip+0x1dc89]        # 4ea00 <powers.0+0xd40>
   30d77:	call   10f90 <dcgettext@plt>
   30d7c:	mov    rsi,r12
   30d7f:	mov    rdi,rax
   30d82:	xor    eax,eax
   30d84:	call   11ea0 <wget_error_printf@plt>
   30d89:	jmp    30cc8 <wget_ssl_init+0x208>
   30d8e:	xchg   ax,ax
   30d90:	lea    rdx,[rip+0xfffffffffffff5e9]        # 30380 <ocsp_resp_cb>
   30d97:	mov    esi,0x3f
   30d9c:	mov    rdi,rbp
   30d9f:	call   11ec0 <SSL_CTX_callback_ctrl@plt>
   30da4:	jmp    30b9a <wget_ssl_init+0xda>
   30da9:	nop    DWORD PTR [rax+0x0]
   30db0:	lea    rsi,[rip+0x1d4ef]        # 4e2a6 <powers.0+0x5e6>
   30db7:	mov    rdi,r14
   30dba:	call   11c60 <strcmp@plt>
   30dbf:	test   eax,eax
   30dc1:	jne    30dfb <wget_ssl_init+0x33b>
   30dc3:	mov    rdi,rbp
   30dc6:	call   11730 <SSL_CTX_set_default_verify_paths@plt>
   30dcb:	test   eax,eax
   30dcd:	jne    30ef6 <wget_ssl_init+0x436>
   30dd3:	call   11d70 <wget_ssl_default_cert_dir@plt>
   30dd8:	lea    rsi,[rip+0x1db11]        # 4e8f0 <powers.0+0xc30>
   30ddf:	xor    edi,edi
   30de1:	mov    edx,0x5
   30de6:	mov    r14,rax
   30de9:	call   10f90 <dcgettext@plt>
   30dee:	mov    rsi,r14
   30df1:	mov    rdi,rax
   30df4:	xor    eax,eax
   30df6:	call   112a0 <wget_info_printf@plt>
   30dfb:	mov    rdi,r14
   30dfe:	call   11e60 <opendir@plt>
   30e03:	mov    r15,rax
   30e06:	test   rax,rax
   30e09:	je     30f53 <wget_ssl_init+0x493>
   30e0f:	lea    rbx,[rip+0x1d497]        # 4e2ad <powers.0+0x5ed>
   30e16:	cs nop WORD PTR [rax+rax*1+0x0]
   30e20:	mov    rdi,r15
   30e23:	call   11f70 <readdir@plt>
   30e28:	test   rax,rax
   30e2b:	je     30ed8 <wget_ssl_init+0x418>
   30e31:	cmp    BYTE PTR [rax+0x13],0x2e
   30e35:	je     30e20 <wget_ssl_init+0x360>
   30e37:	lea    rdx,[rax+0x13]
   30e3b:	mov    rsi,rbx
   30e3e:	mov    rdi,rdx
   30e41:	mov    QWORD PTR [rsp+0x8],rdx
   30e46:	call   11f90 <wget_match_tail_nocase@plt>
   30e4b:	mov    rdx,QWORD PTR [rsp+0x8]
   30e50:	test   eax,eax
   30e52:	je     30e20 <wget_ssl_init+0x360>
   30e54:	mov    rsi,r14
   30e57:	mov    rdi,rbp
   30e5a:	call   304d0 <openssl_load_trust_file>
   30e5f:	cmp    eax,0x1
   30e62:	adc    r12d,0x0
   30e66:	jmp    30e20 <wget_ssl_init+0x360>
   30e68:	nop    DWORD PTR [rax+rax*1+0x0]
   30e70:	xor    edx,edx
   30e72:	mov    rsi,r12
   30e75:	mov    rdi,rbp
   30e78:	call   119c0 <SSL_CTX_load_verify_locations@plt>
   30e7d:	test   eax,eax
   30e7f:	jne    30b8d <wget_ssl_init+0xcd>
   30e85:	mov    r12,QWORD PTR [rip+0x46524]        # 773b0 <config+0x10>
   30e8c:	xor    edi,edi
   30e8e:	mov    edx,0x5
   30e93:	lea    rsi,[rip+0x1db36]        # 4e9d0 <powers.0+0xd10>
   30e9a:	call   10f90 <dcgettext@plt>
   30e9f:	mov    rdi,rax
   30ea2:	mov    rsi,r12
   30ea5:	xor    eax,eax
   30ea7:	call   11ea0 <wget_error_printf@plt>
   30eac:	jmp    30b8d <wget_ssl_init+0xcd>
   30eb1:	nop    DWORD PTR [rax+0x0]
   30eb8:	call   12140 <wget_ssl_default_ca_bundle_path@plt>
   30ebd:	mov    QWORD PTR [rip+0x464ec],rax        # 773b0 <config+0x10>
   30ec4:	mov    r12,rax
   30ec7:	test   rax,rax
   30eca:	jne    30b82 <wget_ssl_init+0xc2>
   30ed0:	jmp    30b8d <wget_ssl_init+0xcd>
   30ed5:	nop    DWORD PTR [rax]
   30ed8:	mov    rdi,r15
   30edb:	call   120b0 <closedir@plt>
   30ee0:	test   r12d,r12d
   30ee3:	je     30f53 <wget_ssl_init+0x493>
   30ee5:	mov    esi,r12d
   30ee8:	lea    rdi,[rip+0x1da91]        # 4e980 <powers.0+0xcc0>
   30eef:	xor    eax,eax
   30ef1:	call   114b0 <wget_debug_printf@plt>
   30ef6:	mov    r12,QWORD PTR [rip+0x464cb]        # 773c8 <config+0x28>
   30efd:	test   r12,r12
   30f00:	je     30f3f <wget_ssl_init+0x47f>
   30f02:	call   11930 <X509_LOOKUP_file@plt>
   30f07:	mov    rdi,r13
   30f0a:	mov    rsi,rax
   30f0d:	call   113d0 <X509_STORE_add_lookup@plt>
   30f12:	mov    edx,0x1
   30f17:	mov    rsi,r12
   30f1a:	mov    rdi,rax
   30f1d:	call   12680 <X509_load_crl_file@plt>
   30f22:	test   eax,eax
   30f24:	je     30c97 <wget_ssl_init+0x1d7>
   30f2a:	mov    esi,0x200c
   30f2f:	mov    rdi,r13
   30f32:	call   110a0 <X509_STORE_set_flags@plt>
   30f37:	test   eax,eax
   30f39:	je     30c97 <wget_ssl_init+0x1d7>
   30f3f:	xor    edx,edx
   30f41:	mov    esi,0x3
   30f46:	mov    rdi,rbp
   30f49:	call   10790 <SSL_CTX_set_verify@plt>
   30f4e:	jmp    30b5f <wget_ssl_init+0x9f>
   30f53:	xor    edi,edi
   30f55:	mov    edx,0x5
   30f5a:	lea    rsi,[rip+0x1d9df]        # 4e940 <powers.0+0xc80>
   30f61:	call   10f90 <dcgettext@plt>
   30f66:	mov    rsi,r14
   30f69:	mov    rdi,rax
   30f6c:	xor    eax,eax
   30f6e:	call   11ea0 <wget_error_printf@plt>
   30f73:	jmp    30ef6 <wget_ssl_init+0x436>
   30f75:	xor    edi,edi
   30f77:	mov    edx,0x5
   30f7c:	lea    rsi,[rip+0x1d945]        # 4e8c8 <powers.0+0xc08>
   30f83:	call   10f90 <dcgettext@plt>
   30f88:	mov    rdi,rax
   30f8b:	xor    eax,eax
   30f8d:	call   11ea0 <wget_error_printf@plt>
   30f92:	jmp    30cc8 <wget_ssl_init+0x208>
   30f97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000030fa0 <wget_ssl_deinit>:
   30fa0:	endbr64 
   30fa4:	sub    rsp,0x8
   30fa8:	mov    rdi,QWORD PTR [rip+0x466c9]        # 77678 <mutex>
   30faf:	call   12040 <wget_thread_mutex_lock@plt>
   30fb4:	mov    eax,DWORD PTR [rip+0x466c6]        # 77680 <init>
   30fba:	cmp    eax,0x1
   30fbd:	je     30fe0 <wget_ssl_deinit+0x40>
   30fbf:	test   eax,eax
   30fc1:	jle    30fcc <wget_ssl_deinit+0x2c>
   30fc3:	sub    eax,0x1
   30fc6:	mov    DWORD PTR [rip+0x466b4],eax        # 77680 <init>
   30fcc:	mov    rdi,QWORD PTR [rip+0x466a5]        # 77678 <mutex>
   30fd3:	add    rsp,0x8
   30fd7:	jmp    117c0 <wget_thread_mutex_unlock@plt>
   30fdc:	nop    DWORD PTR [rax+0x0]
   30fe0:	mov    rdi,QWORD PTR [rip+0x46689]        # 77670 <_ctx>
   30fe7:	call   10560 <SSL_CTX_free@plt>
   30fec:	mov    eax,DWORD PTR [rip+0x4668e]        # 77680 <init>
   30ff2:	jmp    30fbf <wget_ssl_deinit+0x1f>
   30ff4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   30fff:	nop

0000000000031000 <wget_ssl_open>:
   31000:	endbr64 
   31004:	push   r15
   31006:	pxor   xmm0,xmm0
   3100a:	push   r14
   3100c:	push   r13
   3100e:	push   r12
   31010:	push   rbp
   31011:	push   rbx
   31012:	sub    rsp,0x108
   31019:	mov    rax,QWORD PTR fs:0x28
   31022:	mov    QWORD PTR [rsp+0xf8],rax
   3102a:	xor    eax,eax
   3102c:	movaps XMMWORD PTR [rsp+0xb0],xmm0
   31034:	mov    QWORD PTR [rsp+0xc0],0x0
   31040:	mov    DWORD PTR [rsp+0xb8],0xffffffff
   3104b:	movaps XMMWORD PTR [rsp+0xa0],xmm0
   31053:	test   rdi,rdi
   31056:	je     320a4 <wget_ssl_open+0x10a4>
   3105c:	mov    rbp,rdi
   3105f:	mov    edi,DWORD PTR [rdi+0x48]
   31062:	test   edi,edi
   31064:	js     320a4 <wget_ssl_open+0x10a4>
   3106a:	mov    esi,DWORD PTR [rip+0x46610]        # 77680 <init>
   31070:	test   esi,esi
   31072:	je     31380 <wget_ssl_open+0x380>
   31078:	mov    rdi,QWORD PTR [rip+0x465f1]        # 77670 <_ctx>
   3107f:	call   115d0 <SSL_new@plt>
   31084:	mov    r15,rax
   31087:	test   rax,rax
   3108a:	je     31390 <wget_ssl_open+0x390>
   31090:	mov    esi,DWORD PTR [rbp+0x48]
   31093:	mov    rdi,rax
   31096:	call   10df0 <SSL_set_fd@plt>
   3109b:	test   eax,eax
   3109d:	je     12820 <wget_ssl_open.cold>
   310a3:	mov    rax,QWORD PTR [rip+0x44f26]        # 75fd0 <wget_malloc_fn@@Base-0x1358>
   310aa:	mov    edi,0x10
   310af:	call   QWORD PTR [rax]
   310b1:	mov    QWORD PTR [rsp],rax
   310b5:	mov    rbx,rax
   310b8:	test   rax,rax
   310bb:	je     12820 <wget_ssl_open.cold>
   310c1:	mov    QWORD PTR [rax+0x8],0x0
   310c9:	mov    rdi,QWORD PTR [rip+0x465a0]        # 77670 <_ctx>
   310d0:	call   12530 <SSL_CTX_get_cert_store@plt>
   310d5:	mov    QWORD PTR [rsp+0x28],rax
   310da:	test   rax,rax
   310dd:	je     31788 <wget_ssl_open+0x788>
   310e3:	mov    QWORD PTR [rbx],rax
   310e6:	lea    rsi,[rip+0xfffffffffffff483]        # 30570 <_ocsp_stapled_response_compare_func>
   310ed:	mov    edi,0x5
   310f2:	call   11f00 <wget_vector_create@plt>
   310f7:	mov    rbx,rax
   310fa:	test   rax,rax
   310fd:	je     3111e <wget_ssl_open+0x11e>
   310ff:	movss  xmm0,DWORD PTR [rip+0x1dec1]        # 4efc8 <powers.0+0x1308>
   31107:	mov    rdi,rax
   3110a:	call   125f0 <wget_vector_set_resize_factor@plt>
   3110f:	lea    rsi,[rip+0xffffffffffffec4a]        # 2fd60 <_ocsp_stapled_response_destroy_func>
   31116:	mov    rdi,rbx
   31119:	call   120e0 <wget_vector_set_destructor@plt>
   3111e:	mov    rax,QWORD PTR [rsp]
   31122:	mov    esi,DWORD PTR [rip+0x46540]        # 77668 <ssl_userdata_idx>
   31128:	mov    rdi,r15
   3112b:	mov    QWORD PTR [rax+0x8],rbx
   3112f:	mov    rdx,rax
   31132:	call   107e0 <SSL_set_ex_data@plt>
   31137:	cmp    QWORD PTR [rip+0x46561],0x0        # 776a0 <tls_stats_callback>
   3113f:	mov    QWORD PTR [rsp+0x20],0x0
   31148:	je     31157 <wget_ssl_open+0x157>
   3114a:	lea    rax,[rsp+0xa0]
   31152:	mov    QWORD PTR [rsp+0x20],rax
   31157:	test   BYTE PTR [rip+0x462a5],0x2        # 77403 <config+0x63>
   3115e:	jne    313a0 <wget_ssl_open+0x3a0>
   31164:	mov    esi,0x20
   31169:	mov    rdi,r15
   3116c:	call   118f0 <SSL_set_hostflags@plt>
   31171:	xor    edi,edi
   31173:	mov    edx,0x5
   31178:	lea    rsi,[rip+0x1d8c9]        # 4ea48 <powers.0+0xd88>
   3117f:	call   10f90 <dcgettext@plt>
   31184:	mov    rdi,rax
   31187:	xor    eax,eax
   31189:	call   112a0 <wget_info_printf@plt>
   3118e:	test   BYTE PTR [rip+0x4626e],0x20        # 77403 <config+0x63>
   31195:	jne    318c0 <wget_ssl_open+0x8c0>
   3119b:	mov    rcx,QWORD PTR [rbp+0x28]
   3119f:	test   rcx,rcx
   311a2:	je     311bc <wget_ssl_open+0x1bc>
   311a4:	xor    edx,edx
   311a6:	mov    esi,0x37
   311ab:	mov    rdi,r15
   311ae:	call   10a40 <SSL_ctrl@plt>
   311b3:	test   rax,rax
   311b6:	je     31979 <wget_ssl_open+0x979>
   311bc:	mov    r14,QWORD PTR [rip+0x46215]        # 773d8 <config+0x38>
   311c3:	test   r14,r14
   311c6:	je     312a4 <wget_ssl_open+0x2a4>
   311cc:	lea    r12,[rsp+0x80]
   311d4:	lea    rsi,[rsp+0xd0]
   311dc:	mov    edx,0x20
   311e1:	mov    rdi,r12
   311e4:	call   108d0 <wget_buffer_init@plt>
   311e9:	cmp    BYTE PTR [r14],0x0
   311ed:	jne    31230 <wget_ssl_open+0x230>
   311ef:	jmp    3126e <wget_ssl_open+0x26e>
   311f1:	nop    DWORD PTR [rax+0x0]
   311f8:	lea    rdi,[rip+0x1d166]        # 4e365 <powers.0+0x6a5>
   311ff:	xor    eax,eax
   31201:	call   114b0 <wget_debug_printf@plt>
   31206:	mov    esi,r13d
   31209:	mov    edx,0x1
   3120e:	mov    rdi,r12
   31211:	and    esi,0x7f
   31214:	call   11ef0 <wget_buffer_memset_append@plt>
   31219:	mov    rdx,r13
   3121c:	mov    rsi,r14
   3121f:	mov    rdi,r12
   31222:	call   10ea0 <wget_buffer_memcat@plt>
   31227:	cmp    BYTE PTR [rbx],0x0
   3122a:	lea    r14,[rbx+0x1]
   3122e:	je     3126e <wget_ssl_open+0x26e>
   31230:	mov    esi,0x2c
   31235:	mov    rdi,r14
   31238:	call   11030 <strchrnul@plt>
   3123d:	mov    rbx,rax
   31240:	cmp    rax,r14
   31243:	je     31227 <wget_ssl_open+0x227>
   31245:	mov    r13,rax
   31248:	mov    rdx,r14
   3124b:	sub    r13,r14
   3124e:	mov    esi,r13d
   31251:	cmp    r13,0x40
   31255:	jle    311f8 <wget_ssl_open+0x1f8>
   31257:	xor    eax,eax
   31259:	lea    rdi,[rip+0x1d0e8]        # 4e348 <powers.0+0x688>
   31260:	lea    r14,[rbx+0x1]
   31264:	call   114b0 <wget_debug_printf@plt>
   31269:	cmp    BYTE PTR [rbx],0x0
   3126c:	jne    31230 <wget_ssl_open+0x230>
   3126e:	mov    rdx,QWORD PTR [rsp+0x88]
   31276:	test   rdx,rdx
   31279:	jne    319af <wget_ssl_open+0x9af>
   3127f:	mov    rdi,r12
   31282:	call   11300 <wget_buffer_deinit@plt>
   31287:	xor    edi,edi
   31289:	mov    edx,0x5
   3128e:	lea    rsi,[rip+0x1d8a3]        # 4eb38 <powers.0+0xe78>
   31295:	call   10f90 <dcgettext@plt>
   3129a:	mov    rdi,rax
   3129d:	xor    eax,eax
   3129f:	call   11ea0 <wget_error_printf@plt>
   312a4:	mov    rdi,QWORD PTR [rip+0x46145]        # 773f0 <config+0x50>
   312ab:	mov    r14,QWORD PTR [rbp+0x28]
   312af:	mov    QWORD PTR [rsp+0x78],0x0
   312b8:	test   rdi,rdi
   312bb:	je     313c0 <wget_ssl_open+0x3c0>
   312c1:	lea    r12,[rsp+0x80]
   312c9:	lea    r13,[rsp+0x78]
   312ce:	mov    rsi,r14
   312d1:	mov    rcx,r12
   312d4:	mov    rdx,r13
   312d7:	call   12550 <wget_tls_session_get@plt>
   312dc:	test   eax,eax
   312de:	jne    313c0 <wget_ssl_open+0x3c0>
   312e4:	cmp    QWORD PTR [rsp+0x78],0x0
   312ea:	je     313c0 <wget_ssl_open+0x3c0>
   312f0:	mov    rsi,r14
   312f3:	lea    rdi,[rip+0x1d85e]        # 4eb58 <powers.0+0xe98>
   312fa:	call   114b0 <wget_debug_printf@plt>
   312ff:	mov    rdx,QWORD PTR [rsp+0x80]
   31307:	mov    rsi,r13
   3130a:	xor    edi,edi
   3130c:	call   11a90 <d2i_SSL_SESSION@plt>
   31311:	mov    edx,0x5
   31316:	lea    rsi,[rip+0x1d86b]        # 4eb88 <powers.0+0xec8>
   3131d:	mov    r12,rax
   31320:	test   rax,rax
   31323:	je     31350 <wget_ssl_open+0x350>
   31325:	mov    rdi,rax
   31328:	call   11cd0 <SSL_SESSION_is_resumable@plt>
   3132d:	test   eax,eax
   3132f:	je     31361 <wget_ssl_open+0x361>
   31331:	mov    rsi,r12
   31334:	mov    rdi,r15
   31337:	call   11250 <SSL_set_session@plt>
   3133c:	test   eax,eax
   3133e:	jne    3195e <wget_ssl_open+0x95e>
   31344:	mov    edx,0x5
   31349:	lea    rsi,[rip+0x1d868]        # 4ebb8 <powers.0+0xef8>
   31350:	xor    edi,edi
   31352:	call   10f90 <dcgettext@plt>
   31357:	mov    rdi,rax
   3135a:	xor    eax,eax
   3135c:	call   11ea0 <wget_error_printf@plt>
   31361:	xor    edi,edi
   31363:	mov    edx,0x5
   31368:	lea    rsi,[rip+0x1d8d9]        # 4ec48 <powers.0+0xf88>
   3136f:	call   10f90 <dcgettext@plt>
   31374:	mov    rdi,rax
   31377:	xor    eax,eax
   31379:	call   11ea0 <wget_error_printf@plt>
   3137e:	jmp    313e4 <wget_ssl_open+0x3e4>
   31380:	call   11190 <wget_ssl_init@plt>
   31385:	jmp    31078 <wget_ssl_open+0x78>
   3138a:	nop    WORD PTR [rax+rax*1+0x0]
   31390:	mov    rax,QWORD PTR ds:0x8
   31398:	ud2    
   3139a:	nop    WORD PTR [rax+rax*1+0x0]
   313a0:	mov    rsi,QWORD PTR [rbp+0x28]
   313a4:	mov    rdi,r15
   313a7:	call   10700 <SSL_set1_host@plt>
   313ac:	mov    esi,0x4
   313b1:	mov    rdi,r15
   313b4:	call   118f0 <SSL_set_hostflags@plt>
   313b9:	jmp    3118e <wget_ssl_open+0x18e>
   313be:	xchg   ax,ax
   313c0:	lea    rdi,[rip+0x1d841]        # 4ec08 <powers.0+0xf48>
   313c7:	xor    eax,eax
   313c9:	call   114b0 <wget_debug_printf@plt>
   313ce:	jmp    313e4 <wget_ssl_open+0x3e4>
   313d0:	mov    rdi,r15
   313d3:	call   10470 <SSL_get_error@plt>
   313d8:	lea    edx,[rax-0x2]
   313db:	cmp    edx,0x1
   313de:	ja     31800 <wget_ssl_open+0x800>
   313e4:	mov    esi,DWORD PTR [rbp+0x50]
   313e7:	test   esi,esi
   313e9:	je     31406 <wget_ssl_open+0x406>
   313eb:	mov    edi,DWORD PTR [rbp+0x48]
   313ee:	mov    edx,0x3
   313f3:	call   11470 <wget_ready_2_transfer@plt>
   313f8:	test   eax,eax
   313fa:	je     31ff7 <wget_ssl_open+0xff7>
   31400:	js     3199b <wget_ssl_open+0x99b>
   31406:	mov    rdi,r15
   31409:	call   11cb0 <SSL_connect@plt>
   3140e:	mov    esi,eax
   31410:	test   eax,eax
   31412:	jle    313d0 <wget_ssl_open+0x3d0>
   31414:	mov    rdi,r15
   31417:	call   107f0 <SSL_session_reused@plt>
   3141c:	lea    rsi,[rip+0x1ceed]        # 4e310 <powers.0+0x650>
   31423:	lea    rdi,[rip+0x1cf4f]        # 4e379 <powers.0+0x6b9>
   3142a:	test   eax,eax
   3142c:	mov    DWORD PTR [rsp+0x5c],eax
   31430:	lea    rax,[rip+0x1d5f1]        # 4ea28 <powers.0+0xd68>
   31437:	cmove  rsi,rax
   3143b:	xor    eax,eax
   3143d:	call   114b0 <wget_debug_printf@plt>
   31442:	cmp    QWORD PTR [rip+0x45fae],0x0        # 773f8 <config+0x58>
   3144a:	je     3158e <wget_ssl_open+0x58e>
   31450:	mov    rdi,r15
   31453:	mov    r14,QWORD PTR [rbp+0x28]
   31457:	xor    r13d,r13d
   3145a:	lea    r12,[rsp+0x80]
   31462:	call   11210 <SSL_get0_verified_chain@plt>
   31467:	mov    rdi,rax
   3146a:	mov    rbx,rax
   3146d:	call   10bd0 <OPENSSL_sk_num@plt>
   31472:	mov    DWORD PTR [rsp+0xc],0x0
   3147a:	test   eax,eax
   3147c:	je     32082 <wget_ssl_open+0x1082>
   31482:	mov    QWORD PTR [rsp+0x10],r15
   31487:	mov    r15d,r13d
   3148a:	mov    r13d,eax
   3148d:	jmp    314e1 <wget_ssl_open+0x4e1>
   3148f:	nop
   31490:	cmp    eax,0xfffffffe
   31493:	je     317c0 <wget_ssl_open+0x7c0>
   31499:	mov    edx,eax
   3149b:	mov    rsi,r14
   3149e:	lea    rdi,[rip+0x1d87b]        # 4ed20 <powers.0+0x1060>
   314a5:	xor    eax,eax
   314a7:	call   114b0 <wget_debug_printf@plt>
   314ac:	mov    DWORD PTR [rbp+0x64],0x3
   314b3:	mov    rdi,QWORD PTR [rsp+0x80]
   314bb:	mov    edx,0x216
   314c0:	lea    rsi,[rip+0x1cdd1]        # 4e298 <powers.0+0x5d8>
   314c7:	call   10f10 <CRYPTO_free@plt>
   314cc:	mov    DWORD PTR [rsp+0xc],0x1
   314d4:	add    r15d,0x1
   314d8:	cmp    r13d,r15d
   314db:	je     32071 <wget_ssl_open+0x1071>
   314e1:	mov    esi,r15d
   314e4:	mov    rdi,rbx
   314e7:	call   11a60 <OPENSSL_sk_value@plt>
   314ec:	mov    QWORD PTR [rsp+0x80],0x0
   314f8:	mov    rdi,rax
   314fb:	call   115f0 <X509_get0_pubkey@plt>
   31500:	mov    rsi,r12
   31503:	mov    rdi,rax
   31506:	call   11450 <i2d_PUBKEY@plt>
   3150b:	test   eax,eax
   3150d:	jle    314d4 <wget_ssl_open+0x4d4>
   3150f:	mov    rdx,QWORD PTR [rsp+0x80]
   31517:	mov    rdi,QWORD PTR [rip+0x45eda]        # 773f8 <config+0x58>
   3151e:	movsxd rcx,eax
   31521:	mov    rsi,r14
   31524:	call   11350 <wget_hpkp_db_check_pubkey@plt>
   31529:	test   eax,eax
   3152b:	je     31558 <wget_ssl_open+0x558>
   3152d:	cmp    eax,0x1
   31530:	jne    31490 <wget_ssl_open+0x490>
   31536:	mov    rsi,r14
   31539:	lea    rdi,[rip+0x1d758]        # 4ec98 <powers.0+0xfd8>
   31540:	xor    eax,eax
   31542:	call   114b0 <wget_debug_printf@plt>
   31547:	mov    DWORD PTR [rbp+0x64],0x1
   3154e:	jmp    314b3 <wget_ssl_open+0x4b3>
   31553:	nop    DWORD PTR [rax+rax*1+0x0]
   31558:	mov    rsi,r14
   3155b:	lea    rdi,[rip+0x1d766]        # 4ecc8 <powers.0+0x1008>
   31562:	xor    eax,eax
   31564:	mov    r15,QWORD PTR [rsp+0x10]
   31569:	call   114b0 <wget_debug_printf@plt>
   3156e:	mov    DWORD PTR [rbp+0x64],0x0
   31575:	mov    rdi,QWORD PTR [rsp+0x80]
   3157d:	mov    edx,0x216
   31582:	lea    rsi,[rip+0x1cd0f]        # 4e298 <powers.0+0x5d8>
   31589:	call   10f10 <CRYPTO_free@plt>
   3158e:	mov    rax,QWORD PTR [rsp]
   31592:	mov    rax,QWORD PTR [rax+0x8]
   31596:	mov    QWORD PTR [rsp+0x18],rax
   3159b:	test   BYTE PTR [rip+0x45e61],0x8        # 77403 <config+0x63>
   315a2:	jne    319d4 <wget_ssl_open+0x9d4>
   315a8:	mov    rax,QWORD PTR [rip+0x44a39]        # 75fe8 <wget_free@@Base-0x1328>
   315af:	mov    QWORD PTR [rsp+0x10],rax
   315b4:	mov    rax,QWORD PTR [rsp]
   315b8:	cmp    QWORD PTR [rax+0x8],0x0
   315bd:	je     315c8 <wget_ssl_open+0x5c8>
   315bf:	lea    rdi,[rax+0x8]
   315c3:	call   125e0 <wget_vector_free@plt>
   315c8:	mov    rdi,r15
   315cb:	mov    r12,QWORD PTR [rbp+0x28]
   315cf:	mov    QWORD PTR [rsp+0x80],0x0
   315db:	call   11c10 <SSL_get_session@plt>
   315e0:	mov    rdi,rax
   315e3:	test   rax,rax
   315e6:	je     3160b <wget_ssl_open+0x60b>
   315e8:	cmp    QWORD PTR [rip+0x45e00],0x0        # 773f0 <config+0x50>
   315f0:	je     3160b <wget_ssl_open+0x60b>
   315f2:	lea    rsi,[rsp+0x80]
   315fa:	call   10610 <i2d_SSL_SESSION@plt>
   315ff:	movsxd rcx,eax
   31602:	test   rcx,rcx
   31605:	jne    3190e <wget_ssl_open+0x90e>
   3160b:	lea    rdi,[rip+0x1ce0a]        # 4e41c <powers.0+0x75c>
   31612:	xor    eax,eax
   31614:	call   114b0 <wget_debug_printf@plt>
   31619:	cmp    QWORD PTR [rip+0x45db7],0x0        # 773d8 <config+0x38>
   31621:	je     316b8 <wget_ssl_open+0x6b8>
   31627:	lea    rdx,[rsp+0x78]
   3162c:	lea    rsi,[rsp+0x80]
   31634:	mov    rdi,r15
   31637:	call   10ce0 <SSL_get0_alpn_selected@plt>
   3163c:	mov    rdx,QWORD PTR [rsp+0x80]
   31644:	test   rdx,rdx
   31647:	je     316b8 <wget_ssl_open+0x6b8>
   31649:	mov    esi,DWORD PTR [rsp+0x78]
   3164d:	test   esi,esi
   3164f:	je     316b8 <wget_ssl_open+0x6b8>
   31651:	lea    rdi,[rip+0x1d870]        # 4eec8 <powers.0+0x1208>
   31658:	xor    eax,eax
   3165a:	call   114b0 <wget_debug_printf@plt>
   3165f:	mov    rbx,QWORD PTR [rsp+0x20]
   31664:	test   rbx,rbx
   31667:	je     3167e <wget_ssl_open+0x67e>
   31669:	mov    esi,DWORD PTR [rsp+0x78]
   3166d:	mov    rdi,QWORD PTR [rsp+0x80]
   31675:	call   126b0 <wget_strmemdup@plt>
   3167a:	mov    QWORD PTR [rbx+0x8],rax
   3167e:	cmp    DWORD PTR [rsp+0x78],0x2
   31683:	jne    316b8 <wget_ssl_open+0x6b8>
   31685:	mov    rax,QWORD PTR [rsp+0x80]
   3168d:	cmp    BYTE PTR [rax],0x68
   31690:	jne    316b8 <wget_ssl_open+0x6b8>
   31692:	cmp    BYTE PTR [rax+0x1],0x32
   31696:	jne    316b8 <wget_ssl_open+0x6b8>
   31698:	mov    rax,QWORD PTR [rsp+0x20]
   3169d:	mov    DWORD PTR [rbp+0x60],0x1
   316a4:	test   rax,rax
   316a7:	je     3173f <wget_ssl_open+0x73f>
   316ad:	mov    BYTE PTR [rax+0x20],0x1
   316b1:	nop    DWORD PTR [rax+0x0]
   316b8:	mov    rbx,QWORD PTR [rsp+0x20]
   316bd:	test   rbx,rbx
   316c0:	je     3173f <wget_ssl_open+0x73f>
   316c2:	mov    rdi,r15
   316c5:	call   10bf0 <SSL_version@plt>
   316ca:	mov    rdi,r15
   316cd:	lea    edx,[rax-0x300]
   316d3:	sub    eax,0x2ff
   316d8:	cmp    edx,0x5
   316db:	mov    edx,0xffffffff
   316e0:	cmovae eax,edx
   316e3:	mov    DWORD PTR [rbx+0x18],eax
   316e6:	mov    rax,QWORD PTR [rbp+0x28]
   316ea:	mov    QWORD PTR [rbx],rax
   316ed:	mov    eax,DWORD PTR [rsp+0x5c]
   316f1:	test   eax,eax
   316f3:	setne  BYTE PTR [rbx+0x24]
   316f7:	call   11210 <SSL_get0_verified_chain@plt>
   316fc:	mov    rdi,rax
   316ff:	call   10bd0 <OPENSSL_sk_num@plt>
   31704:	mov    rdi,rbx
   31707:	mov    rsi,QWORD PTR [rip+0x45f8a]        # 77698 <tls_stats_ctx>
   3170e:	mov    DWORD PTR [rbx+0x1c],eax
   31711:	call   QWORD PTR [rip+0x45f89]        # 776a0 <tls_stats_callback>
   31717:	mov    rdi,QWORD PTR [rbx+0x8]
   3171b:	test   rdi,rdi
   3171e:	je     3172f <wget_ssl_open+0x72f>
   31720:	mov    rax,QWORD PTR [rsp+0x10]
   31725:	call   QWORD PTR [rax]
   31727:	mov    QWORD PTR [rbx+0x8],0x0
   3172f:	mov    rdi,rbp
   31732:	call   11150 <wget_tcp_get_tcp_fastopen@plt>
   31737:	mov    rcx,QWORD PTR [rsp+0x20]
   3173c:	mov    BYTE PTR [rcx+0x22],al
   3173f:	mov    rax,QWORD PTR [rsp+0x10]
   31744:	mov    rdi,QWORD PTR [rsp]
   31748:	mov    QWORD PTR [rbp+0x0],r15
   3174c:	xor    r12d,r12d
   3174f:	call   QWORD PTR [rax]
   31751:	nop    DWORD PTR [rax+0x0]
   31758:	mov    rax,QWORD PTR [rsp+0xf8]
   31760:	sub    rax,QWORD PTR fs:0x28
   31769:	jne    32124 <wget_ssl_open+0x1124>
   3176f:	add    rsp,0x108
   31776:	mov    eax,r12d
   31779:	pop    rbx
   3177a:	pop    rbp
   3177b:	pop    r12
   3177d:	pop    r13
   3177f:	pop    r14
   31781:	pop    r15
   31783:	ret    
   31784:	nop    DWORD PTR [rax+0x0]
   31788:	mov    rax,QWORD PTR [rsp]
   3178c:	cmp    QWORD PTR [rax+0x8],0x0
   31791:	je     32129 <wget_ssl_open+0x1129>
   31797:	mov    rbx,QWORD PTR [rsp]
   3179b:	mov    r12d,0xffffffff
   317a1:	lea    rdi,[rbx+0x8]
   317a5:	call   125e0 <wget_vector_free@plt>
   317aa:	mov    rax,QWORD PTR [rip+0x44837]        # 75fe8 <wget_free@@Base-0x1328>
   317b1:	mov    rdi,rbx
   317b4:	call   QWORD PTR [rax]
   317b6:	mov    rdi,r15
   317b9:	call   10d00 <SSL_free@plt>
   317be:	jmp    31758 <wget_ssl_open+0x758>
   317c0:	mov    rsi,r14
   317c3:	lea    rdi,[rip+0x1d526]        # 4ecf0 <powers.0+0x1030>
   317ca:	xor    eax,eax
   317cc:	call   114b0 <wget_debug_printf@plt>
   317d1:	mov    DWORD PTR [rbp+0x64],0x2
   317d8:	mov    rdi,QWORD PTR [rsp+0x80]
   317e0:	mov    edx,0x216
   317e5:	lea    rsi,[rip+0x1caac]        # 4e298 <powers.0+0x5d8>
   317ec:	call   10f10 <CRYPTO_free@plt>
   317f1:	jmp    314d4 <wget_ssl_open+0x4d4>
   317f6:	cs nop WORD PTR [rax+rax*1+0x0]
   31800:	cmp    eax,0x1
   31803:	jne    31838 <wget_ssl_open+0x838>
   31805:	call   10490 <ERR_peek_last_error@plt>
   3180a:	mov    rdi,rax
   3180d:	call   125a0 <ERR_reason_error_string@plt>
   31812:	lea    rsi,[rip+0x1d457]        # 4ec70 <powers.0+0xfb0>
   31819:	xor    edi,edi
   3181b:	mov    edx,0x5
   31820:	mov    rbp,rax
   31823:	call   10f90 <dcgettext@plt>
   31828:	mov    rsi,rbp
   3182b:	mov    rdi,rax
   3182e:	xor    eax,eax
   31830:	call   11ea0 <wget_error_printf@plt>
   31835:	nop    DWORD PTR [rax]
   31838:	call   10490 <ERR_peek_last_error@plt>
   3183d:	mov    ecx,eax
   3183f:	mov    edx,eax
   31841:	and    ecx,0x7fffffff
   31847:	and    edx,0x7fffff
   3184d:	test   eax,0x80000000
   31852:	mov    eax,ecx
   31854:	cmove  eax,edx
   31857:	cmp    eax,0x86
   3185c:	je     32047 <wget_ssl_open+0x1047>
   31862:	mov    rax,QWORD PTR [rip+0x4477f]        # 75fe8 <wget_free@@Base-0x1328>
   31869:	mov    r12d,0xfffffffa
   3186f:	mov    QWORD PTR [rsp+0x10],rax
   31874:	mov    rax,QWORD PTR [rsp]
   31878:	cmp    QWORD PTR [rax+0x8],0x0
   3187d:	jne    3213f <wget_ssl_open+0x113f>
   31883:	mov    rax,QWORD PTR [rsp+0x10]
   31888:	mov    rbx,QWORD PTR [rsp+0x20]
   3188d:	mov    rax,QWORD PTR [rax]
   31890:	test   rbx,rbx
   31893:	je     318a8 <wget_ssl_open+0x8a8>
   31895:	mov    rdi,QWORD PTR [rbx+0x8]
   31899:	test   rdi,rdi
   3189c:	je     318a8 <wget_ssl_open+0x8a8>
   3189e:	call   rax
   318a0:	mov    QWORD PTR [rbx+0x8],0x0
   318a8:	mov    rax,QWORD PTR [rsp+0x10]
   318ad:	mov    rdi,QWORD PTR [rsp]
   318b1:	call   QWORD PTR [rax]
   318b3:	jmp    317b6 <wget_ssl_open+0x7b6>
   318b8:	nop    DWORD PTR [rax+rax*1+0x0]
   318c0:	xor    ecx,ecx
   318c2:	mov    edx,0x1
   318c7:	mov    esi,0x41
   318cc:	mov    rdi,r15
   318cf:	call   10a40 <SSL_ctrl@plt>
   318d4:	test   rax,rax
   318d7:	je     318ec <wget_ssl_open+0x8ec>
   318d9:	lea    rdi,[rip+0x1d1c0]        # 4eaa0 <powers.0+0xde0>
   318e0:	xor    eax,eax
   318e2:	call   114b0 <wget_debug_printf@plt>
   318e7:	jmp    3119b <wget_ssl_open+0x19b>
   318ec:	xor    edi,edi
   318ee:	mov    edx,0x5
   318f3:	lea    rsi,[rip+0x1d1de]        # 4ead8 <powers.0+0xe18>
   318fa:	call   10f90 <dcgettext@plt>
   318ff:	mov    rdi,rax
   31902:	xor    eax,eax
   31904:	call   11ea0 <wget_error_printf@plt>
   31909:	jmp    3119b <wget_ssl_open+0x19b>
   3190e:	mov    rdx,QWORD PTR [rsp+0x80]
   31916:	mov    rdi,r12
   31919:	mov    esi,0xfd20
   3191e:	call   10a00 <wget_tls_session_new@plt>
   31923:	mov    rdi,QWORD PTR [rip+0x45ac6]        # 773f0 <config+0x50>
   3192a:	mov    rsi,rax
   3192d:	call   10760 <wget_tls_session_db_add@plt>
   31932:	mov    rdi,QWORD PTR [rsp+0x80]
   3193a:	mov    edx,0x59d
   3193f:	lea    rsi,[rip+0x1c952]        # 4e298 <powers.0+0x5d8>
   31946:	call   10f10 <CRYPTO_free@plt>
   3194b:	lea    rdi,[rip+0x1caaf]        # 4e401 <powers.0+0x741>
   31952:	xor    eax,eax
   31954:	call   114b0 <wget_debug_printf@plt>
   31959:	jmp    31619 <wget_ssl_open+0x619>
   3195e:	mov    rdi,r12
   31961:	call   124f0 <SSL_SESSION_free@plt>
   31966:	lea    rdi,[rip+0x1d273]        # 4ebe0 <powers.0+0xf20>
   3196d:	xor    eax,eax
   3196f:	call   114b0 <wget_debug_printf@plt>
   31974:	jmp    313e4 <wget_ssl_open+0x3e4>
   31979:	xor    edi,edi
   3197b:	mov    edx,0x5
   31980:	lea    rsi,[rip+0x1c9ab]        # 4e332 <powers.0+0x672>
   31987:	call   10f90 <dcgettext@plt>
   3198c:	mov    rdi,rax
   3198f:	xor    eax,eax
   31991:	call   11ea0 <wget_error_printf@plt>
   31996:	jmp    311bc <wget_ssl_open+0x1bc>
   3199b:	mov    r12d,eax
   3199e:	mov    rax,QWORD PTR [rip+0x44643]        # 75fe8 <wget_free@@Base-0x1328>
   319a5:	mov    QWORD PTR [rsp+0x10],rax
   319aa:	jmp    31874 <wget_ssl_open+0x874>
   319af:	mov    rsi,QWORD PTR [rsp+0x80]
   319b7:	mov    rdi,r15
   319ba:	call   11fe0 <SSL_set_alpn_protos@plt>
   319bf:	test   eax,eax
   319c1:	jne    3205e <wget_ssl_open+0x105e>
   319c7:	mov    rdi,r12
   319ca:	call   11300 <wget_buffer_deinit@plt>
   319cf:	jmp    312a4 <wget_ssl_open+0x2a4>
   319d4:	mov    rax,QWORD PTR [rbp+0x28]
   319d8:	mov    rdi,r15
   319db:	mov    QWORD PTR [rsp+0x68],rax
   319e0:	call   11210 <SSL_get0_verified_chain@plt>
   319e5:	mov    rdi,rax
   319e8:	mov    r14,rax
   319eb:	call   10bd0 <OPENSSL_sk_num@plt>
   319f0:	mov    DWORD PTR [rsp+0x4c],eax
   319f4:	test   eax,eax
   319f6:	je     320eb <wget_ssl_open+0x10eb>
   319fc:	mov    rax,QWORD PTR [rip+0x445e5]        # 75fe8 <wget_free@@Base-0x1328>
   31a03:	mov    DWORD PTR [rsp+0x60],0x0
   31a0b:	mov    DWORD PTR [rsp+0x58],0x0
   31a13:	mov    DWORD PTR [rsp+0x64],0x0
   31a1b:	mov    DWORD PTR [rsp+0xc],0x0
   31a23:	mov    QWORD PTR [rsp+0x10],rax
   31a28:	mov    QWORD PTR [rsp+0x38],r15
   31a2d:	mov    QWORD PTR [rsp+0x50],rbp
   31a32:	nop    WORD PTR [rax+rax*1+0x0]
   31a38:	mov    ebx,DWORD PTR [rsp+0xc]
   31a3c:	mov    rdi,r14
   31a3f:	mov    esi,ebx
   31a41:	call   11a60 <OPENSSL_sk_value@plt>
   31a46:	mov    rdi,r14
   31a49:	mov    rbp,rax
   31a4c:	call   10bd0 <OPENSSL_sk_num@plt>
   31a51:	sub    eax,0x1
   31a54:	mov    r13d,eax
   31a57:	je     31e10 <wget_ssl_open+0xe10>
   31a5d:	xor    r12d,r12d
   31a60:	jmp    31a99 <wget_ssl_open+0xa99>
   31a62:	nop    WORD PTR [rax+rax*1+0x0]
   31a68:	add    ebx,0x1
   31a6b:	mov    esi,ebx
   31a6d:	mov    rdi,r14
   31a70:	call   11a60 <OPENSSL_sk_value@plt>
   31a75:	mov    r15,rax
   31a78:	test   rax,rax
   31a7b:	je     31a8c <wget_ssl_open+0xa8c>
   31a7d:	mov    rsi,rbp
   31a80:	mov    rdi,rax
   31a83:	call   11390 <X509_check_issued@plt>
   31a88:	test   eax,eax
   31a8a:	je     31aa8 <wget_ssl_open+0xaa8>
   31a8c:	add    r12d,0x1
   31a90:	cmp    r12d,r13d
   31a93:	je     31e10 <wget_ssl_open+0xe10>
   31a99:	cmp    ebx,r13d
   31a9c:	jne    31a68 <wget_ssl_open+0xa68>
   31a9e:	xor    esi,esi
   31aa0:	xor    ebx,ebx
   31aa2:	jmp    31a6d <wget_ssl_open+0xa6d>
   31aa4:	nop    DWORD PTR [rax+0x0]
   31aa8:	mov    rdx,r15
   31aab:	xor    edi,edi
   31aad:	mov    rsi,rbp
   31ab0:	mov    r12,QWORD PTR [rip+0x45929]        # 773e0 <config+0x40>
   31ab7:	call   11370 <OCSP_cert_to_id@plt>
   31abc:	mov    rdi,QWORD PTR [rsp+0x18]
   31ac1:	mov    rsi,rax
   31ac4:	mov    r13,rax
   31ac7:	call   12000 <wget_vector_find@plt>
   31acc:	mov    rdi,r13
   31acf:	mov    ebx,eax
   31ad1:	call   10b40 <OCSP_CERTID_free@plt>
   31ad6:	mov    rdi,QWORD PTR [rsp+0x18]
   31adb:	mov    esi,ebx
   31add:	call   10c00 <wget_vector_get@plt>
   31ae2:	test   rax,rax
   31ae5:	je     31af2 <wget_ssl_open+0xaf2>
   31ae7:	mov    eax,DWORD PTR [rax]
   31ae9:	cmp    eax,0x1
   31aec:	jbe    31ed0 <wget_ssl_open+0xed0>
   31af2:	test   r12,r12
   31af5:	je     31b2d <wget_ssl_open+0xb2d>
   31af7:	mov    rdi,rbp
   31afa:	call   30580 <compute_cert_fingerprint>
   31aff:	mov    r13,rax
   31b02:	test   rax,rax
   31b05:	je     31d4a <wget_ssl_open+0xd4a>
   31b0b:	mov    rdi,r12
   31b0e:	lea    rdx,[rsp+0x74]
   31b13:	mov    rsi,rax
   31b16:	call   10d30 <wget_ocsp_fingerprint_in_cache@plt>
   31b1b:	mov    rdi,r13
   31b1e:	test   al,al
   31b20:	mov    rax,QWORD PTR [rsp+0x10]
   31b25:	jne    31fcd <wget_ssl_open+0xfcd>
   31b2b:	call   QWORD PTR [rax]
   31b2d:	mov    rsi,QWORD PTR [rip+0x4589c]        # 773d0 <config+0x30>
   31b34:	xor    ebx,ebx
   31b36:	test   rsi,rsi
   31b39:	je     31f40 <wget_ssl_open+0xf40>
   31b3f:	lea    rdi,[rip+0x1d2fa]        # 4ee40 <powers.0+0x1180>
   31b46:	xor    eax,eax
   31b48:	call   114b0 <wget_debug_printf@plt>
   31b4d:	movzx  r13d,BYTE PTR [rip+0x458ae]        # 77403 <config+0x63>
   31b55:	mov    eax,r13d
   31b58:	shr    r13b,0x4
   31b5c:	shr    al,0x6
   31b5f:	and    eax,0x1
   31b62:	mov    BYTE PTR [rsp+0x4b],al
   31b66:	mov    eax,r13d
   31b69:	mov    r13,QWORD PTR [rip+0x45860]        # 773d0 <config+0x30>
   31b70:	and    eax,0x1
   31b73:	test   r13,r13
   31b76:	mov    DWORD PTR [rsp+0x30],eax
   31b7a:	cmove  r13,rbx
   31b7e:	call   116f0 <EVP_sha1@plt>
   31b83:	mov    rdx,r15
   31b86:	mov    rsi,rbp
   31b89:	mov    rdi,rax
   31b8c:	call   11370 <OCSP_cert_to_id@plt>
   31b91:	mov    QWORD PTR [rsp+0x80],0x0
   31b9d:	mov    r15,rax
   31ba0:	call   106c0 <OCSP_REQUEST_new@plt>
   31ba5:	mov    r12,rax
   31ba8:	test   rax,rax
   31bab:	je     31dc4 <wget_ssl_open+0xdc4>
   31bb1:	mov    rsi,r15
   31bb4:	mov    rdi,rax
   31bb7:	call   11d50 <OCSP_request_add0_id@plt>
   31bbc:	test   rax,rax
   31bbf:	je     31e90 <wget_ssl_open+0xe90>
   31bc5:	test   BYTE PTR [rip+0x45837],0x40        # 77403 <config+0x63>
   31bcc:	je     31be2 <wget_ssl_open+0xbe2>
   31bce:	xor    edx,edx
   31bd0:	xor    esi,esi
   31bd2:	mov    rdi,r12
   31bd5:	call   11be0 <OCSP_request_add1_nonce@plt>
   31bda:	test   eax,eax
   31bdc:	je     31e90 <wget_ssl_open+0xe90>
   31be2:	lea    r10,[rsp+0x80]
   31bea:	mov    rdi,r12
   31bed:	mov    rsi,r10
   31bf0:	mov    QWORD PTR [rsp+0x40],r10
   31bf5:	call   11a40 <i2d_OCSP_REQUEST@plt>
   31bfa:	mov    rdx,QWORD PTR [rsp+0x80]
   31c02:	cdqe   
   31c04:	test   rax,rax
   31c07:	je     31e90 <wget_ssl_open+0xe90>
   31c0d:	test   rdx,rdx
   31c10:	mov    r10,QWORD PTR [rsp+0x40]
   31c15:	je     31e90 <wget_ssl_open+0xe90>
   31c1b:	mov    QWORD PTR [rsp+0x40],r10
   31c20:	sub    rsp,0x8
   31c24:	mov    rsi,r13
   31c27:	mov    edi,0x7d0
   31c2c:	push   0x0
   31c2e:	lea    r9,[rip+0x1c778]        # 4e3ad <powers.0+0x6ed>
   31c35:	mov    r8d,0x7d4
   31c3b:	lea    rcx,[rip+0x1c77b]        # 4e3bd <powers.0+0x6fd>
   31c42:	push   rax
   31c43:	lea    rax,[rip+0x1c778]        # 4e3c2 <powers.0+0x702>
   31c4a:	push   rdx
   31c4b:	mov    edx,0x7e0
   31c50:	push   0x7e1
   31c55:	push   0x5
   31c57:	push   0x7da
   31c5c:	push   rax
   31c5d:	lea    rax,[rip+0x1a4cc]        # 4c130 <__func__.0+0x50>
   31c64:	push   rax
   31c65:	lea    rax,[rip+0x1c76f]        # 4e3db <powers.0+0x71b>
   31c6c:	push   0x7d4
   31c71:	push   rax
   31c72:	lea    rax,[rip+0x1c766]        # 4e3df <powers.0+0x71f>
   31c79:	push   rax
   31c7a:	lea    rax,[rip+0x1ad63]        # 4c9e4 <__func__.5+0x34>
   31c81:	push   0x7d4
   31c86:	push   rax
   31c87:	xor    eax,eax
   31c89:	call   12470 <wget_http_get@plt>
   31c8e:	add    rsp,0x70
   31c92:	mov    rdi,QWORD PTR [rsp+0x80]
   31c9a:	mov    edx,0x2fc
   31c9f:	mov    r15,rax
   31ca2:	lea    rsi,[rip+0x1c5ef]        # 4e298 <powers.0+0x5d8>
   31ca9:	call   10f10 <CRYPTO_free@plt>
   31cae:	test   r15,r15
   31cb1:	je     31e90 <wget_ssl_open+0xe90>
   31cb7:	mov    rax,QWORD PTR [r15+0x60]
   31cbb:	mov    rsi,QWORD PTR [rsp+0x40]
   31cc0:	xor    edi,edi
   31cc2:	mov    QWORD PTR [rsp+0x78],r15
   31cc7:	mov    rdx,QWORD PTR [rax]
   31cca:	mov    QWORD PTR [rsp+0x80],rdx
   31cd2:	mov    rdx,QWORD PTR [rax+0x8]
   31cd6:	call   117a0 <d2i_OCSP_RESPONSE@plt>
   31cdb:	mov    r15,rax
   31cde:	test   rax,rax
   31ce1:	je     31e81 <wget_ssl_open+0xe81>
   31ce7:	mov    ecx,DWORD PTR [rsp+0x30]
   31ceb:	mov    rdx,QWORD PTR [rsp+0x28]
   31cf0:	xor    r9d,r9d
   31cf3:	xor    r8d,r8d
   31cf6:	mov    rsi,r14
   31cf9:	mov    rdi,rax
   31cfc:	call   2fe60 <check_ocsp_response>
   31d01:	mov    r13d,eax
   31d04:	test   eax,eax
   31d06:	jne    31da0 <wget_ssl_open+0xda0>
   31d0c:	cmp    BYTE PTR [rsp+0x4b],0x0
   31d11:	jne    31f00 <wget_ssl_open+0xf00>
   31d17:	lea    rdi,[rsp+0x78]
   31d1c:	call   11310 <wget_http_free_response@plt>
   31d21:	mov    rdi,r15
   31d24:	call   11cf0 <OCSP_RESPONSE_free@plt>
   31d29:	mov    rdi,r12
   31d2c:	call   10870 <OCSP_REQUEST_free@plt>
   31d31:	add    DWORD PTR [rsp+0x58],0x1
   31d36:	mov    rdi,rbp
   31d39:	call   30580 <compute_cert_fingerprint>
   31d3e:	mov    rbp,rax
   31d41:	test   rax,rax
   31d44:	jne    31ea0 <wget_ssl_open+0xea0>
   31d4a:	lea    rsi,[rip+0x1d007]        # 4ed58 <powers.0+0x1098>
   31d51:	xor    edi,edi
   31d53:	mov    edx,0x5
   31d58:	mov    r15,QWORD PTR [rsp+0x38]
   31d5d:	call   10f90 <dcgettext@plt>
   31d62:	mov    esi,DWORD PTR [rsp+0xc]
   31d66:	mov    rdi,rax
   31d69:	xor    eax,eax
   31d6b:	call   11ea0 <wget_error_printf@plt>
   31d70:	mov    edx,0x5
   31d75:	lea    rsi,[rip+0x1d114]        # 4ee90 <powers.0+0x11d0>
   31d7c:	xor    edi,edi
   31d7e:	mov    r12d,0xfffffffa
   31d84:	call   10f90 <dcgettext@plt>
   31d89:	mov    rdi,rax
   31d8c:	xor    eax,eax
   31d8e:	call   11ea0 <wget_error_printf@plt>
   31d93:	jmp    31874 <wget_ssl_open+0x874>
   31d98:	nop    DWORD PTR [rax+rax*1+0x0]
   31da0:	lea    rdi,[rsp+0x78]
   31da5:	call   11310 <wget_http_free_response@plt>
   31daa:	mov    rdi,r15
   31dad:	call   11cf0 <OCSP_RESPONSE_free@plt>
   31db2:	mov    rdi,r12
   31db5:	call   10870 <OCSP_REQUEST_free@plt>
   31dba:	cmp    r13d,0x1
   31dbe:	je     31fbd <wget_ssl_open+0xfbd>
   31dc4:	mov    rdi,rbp
   31dc7:	add    DWORD PTR [rsp+0x60],0x1
   31dcc:	call   30580 <compute_cert_fingerprint>
   31dd1:	mov    rbp,rax
   31dd4:	test   rax,rax
   31dd7:	je     31d4a <wget_ssl_open+0xd4a>
   31ddd:	mov    r15,QWORD PTR [rsp+0x10]
   31de2:	mov    rdi,rbp
   31de5:	call   QWORD PTR [r15]
   31de8:	test   rbx,rbx
   31deb:	je     31df3 <wget_ssl_open+0xdf3>
   31ded:	mov    rdi,rbx
   31df0:	call   QWORD PTR [r15]
   31df3:	add    DWORD PTR [rsp+0xc],0x1
   31df8:	mov    eax,DWORD PTR [rsp+0xc]
   31dfc:	cmp    DWORD PTR [rsp+0x4c],eax
   31e00:	jne    31a38 <wget_ssl_open+0xa38>
   31e06:	cs nop WORD PTR [rax+rax*1+0x0]
   31e10:	mov    rax,QWORD PTR [rip+0x45879]        # 77690 <ocsp_stats_callback>
   31e17:	mov    r15,QWORD PTR [rsp+0x38]
   31e1c:	mov    rbp,QWORD PTR [rsp+0x50]
   31e21:	test   rax,rax
   31e24:	je     31e70 <wget_ssl_open+0xe70>
   31e26:	mov    rcx,QWORD PTR [rsp+0x68]
   31e2b:	mov    rsi,QWORD PTR [rip+0x45856]        # 77688 <ocsp_stats_ctx>
   31e32:	mov    DWORD PTR [rsp+0x94],0x0
   31e3d:	lea    rdi,[rsp+0x80]
   31e45:	mov    QWORD PTR [rsp+0x80],rcx
   31e4d:	mov    ecx,DWORD PTR [rsp+0x58]
   31e51:	mov    DWORD PTR [rsp+0x88],ecx
   31e58:	mov    ecx,DWORD PTR [rsp+0x64]
   31e5c:	mov    DWORD PTR [rsp+0x8c],ecx
   31e63:	mov    ecx,DWORD PTR [rsp+0x60]
   31e67:	mov    DWORD PTR [rsp+0x90],ecx
   31e6e:	call   rax
   31e70:	mov    edx,DWORD PTR [rsp+0x64]
   31e74:	test   edx,edx
   31e76:	je     315b4 <wget_ssl_open+0x5b4>
   31e7c:	jmp    31d70 <wget_ssl_open+0xd70>
   31e81:	lea    rdi,[rsp+0x78]
   31e86:	call   11310 <wget_http_free_response@plt>
   31e8b:	nop    DWORD PTR [rax+rax*1+0x0]
   31e90:	mov    rdi,r12
   31e93:	call   10870 <OCSP_REQUEST_free@plt>
   31e98:	jmp    31dc4 <wget_ssl_open+0xdc4>
   31e9d:	nop    DWORD PTR [rax]
   31ea0:	xor    edi,edi
   31ea2:	call   11480 <time@plt>
   31ea7:	mov    ecx,r13d
   31eaa:	mov    rdi,QWORD PTR [rip+0x4552f]        # 773e0 <config+0x40>
   31eb1:	mov    rsi,rbp
   31eb4:	xor    ecx,0x1
   31eb7:	lea    rdx,[rax+0xe10]
   31ebe:	call   12440 <wget_ocsp_db_add_fingerprint@plt>
   31ec3:	jmp    31ddd <wget_ssl_open+0xddd>
   31ec8:	nop    DWORD PTR [rax+rax*1+0x0]
   31ed0:	mov    DWORD PTR [rsp+0x74],eax
   31ed4:	lea    rdx,[rip+0x1c448]        # 4e323 <powers.0+0x663>
   31edb:	mov    esi,DWORD PTR [rsp+0xc]
   31edf:	test   eax,eax
   31ee1:	je     31fdf <wget_ssl_open+0xfdf>
   31ee7:	lea    rdi,[rip+0x1cea2]        # 4ed90 <powers.0+0x10d0>
   31eee:	xor    eax,eax
   31ef0:	call   114b0 <wget_debug_printf@plt>
   31ef5:	add    DWORD PTR [rsp+0x64],0x1
   31efa:	jmp    31df3 <wget_ssl_open+0xdf3>
   31eff:	nop
   31f00:	mov    rdi,r15
   31f03:	call   10990 <OCSP_response_get1_basic@plt>
   31f08:	test   rax,rax
   31f0b:	je     320af <wget_ssl_open+0x10af>
   31f11:	mov    rsi,rax
   31f14:	mov    rdi,r12
   31f17:	mov    QWORD PTR [rsp+0x30],rax
   31f1c:	call   11c80 <OCSP_check_nonce@plt>
   31f21:	mov    r8,QWORD PTR [rsp+0x30]
   31f26:	test   eax,eax
   31f28:	je     31f7c <wget_ssl_open+0xf7c>
   31f2a:	mov    rdi,r8
   31f2d:	call   10770 <OCSP_BASICRESP_free@plt>
   31f32:	jmp    31d17 <wget_ssl_open+0xd17>
   31f37:	nop    WORD PTR [rax+rax*1+0x0]
   31f40:	mov    rdi,rbp
   31f43:	call   10550 <X509_get1_ocsp@plt>
   31f48:	mov    r12,rax
   31f4b:	test   rax,rax
   31f4e:	je     31f60 <wget_ssl_open+0xf60>
   31f50:	mov    rdi,rax
   31f53:	call   10bd0 <OPENSSL_sk_num@plt>
   31f58:	test   eax,eax
   31f5a:	jg     3200e <wget_ssl_open+0x100e>
   31f60:	mov    esi,DWORD PTR [rsp+0xc]
   31f64:	lea    rdi,[rip+0x1ce7d]        # 4ede8 <powers.0+0x1128>
   31f6b:	xor    eax,eax
   31f6d:	call   114b0 <wget_debug_printf@plt>
   31f72:	add    DWORD PTR [rsp+0x60],0x1
   31f77:	jmp    31df3 <wget_ssl_open+0xdf3>
   31f7c:	mov    edx,0x5
   31f81:	lea    rsi,[rip+0x1c45e]        # 4e3e6 <powers.0+0x726>
   31f88:	xor    edi,edi
   31f8a:	call   10f90 <dcgettext@plt>
   31f8f:	mov    rdi,rax
   31f92:	xor    eax,eax
   31f94:	call   11ea0 <wget_error_printf@plt>
   31f99:	mov    rdi,QWORD PTR [rsp+0x30]
   31f9e:	call   10770 <OCSP_BASICRESP_free@plt>
   31fa3:	lea    rdi,[rsp+0x78]
   31fa8:	call   11310 <wget_http_free_response@plt>
   31fad:	mov    rdi,r15
   31fb0:	call   11cf0 <OCSP_RESPONSE_free@plt>
   31fb5:	mov    rdi,r12
   31fb8:	call   10870 <OCSP_REQUEST_free@plt>
   31fbd:	add    DWORD PTR [rsp+0x64],0x1
   31fc2:	mov    r13d,0x1
   31fc8:	jmp    31d36 <wget_ssl_open+0xd36>
   31fcd:	call   QWORD PTR [rax]
   31fcf:	mov    eax,DWORD PTR [rsp+0x74]
   31fd3:	lea    rdx,[rip+0x1c351]        # 4e32b <powers.0+0x66b>
   31fda:	jmp    31edb <wget_ssl_open+0xedb>
   31fdf:	lea    rdi,[rip+0x1cdda]        # 4edc0 <powers.0+0x1100>
   31fe6:	xor    eax,eax
   31fe8:	call   114b0 <wget_debug_printf@plt>
   31fed:	add    DWORD PTR [rsp+0x58],0x1
   31ff2:	jmp    31df3 <wget_ssl_open+0xdf3>
   31ff7:	mov    rax,QWORD PTR [rip+0x43fea]        # 75fe8 <wget_free@@Base-0x1328>
   31ffe:	mov    r12d,0xfffffffc
   32004:	mov    QWORD PTR [rsp+0x10],rax
   32009:	jmp    31874 <wget_ssl_open+0x874>
   3200e:	xor    esi,esi
   32010:	mov    rdi,r12
   32013:	call   11a60 <OPENSSL_sk_value@plt>
   32018:	mov    rdi,rax
   3201b:	call   127b0 <wget_strdup@plt>
   32020:	mov    rdi,r12
   32023:	mov    rbx,rax
   32026:	call   116a0 <X509_email_free@plt>
   3202b:	test   rbx,rbx
   3202e:	je     31f60 <wget_ssl_open+0xf60>
   32034:	mov    rsi,QWORD PTR [rip+0x45395]        # 773d0 <config+0x30>
   3203b:	test   rsi,rsi
   3203e:	cmove  rsi,rbx
   32042:	jmp    31b3f <wget_ssl_open+0xb3f>
   32047:	mov    rax,QWORD PTR [rip+0x43f9a]        # 75fe8 <wget_free@@Base-0x1328>
   3204e:	mov    r12d,0xfffffff9
   32054:	mov    QWORD PTR [rsp+0x10],rax
   32059:	jmp    31874 <wget_ssl_open+0x874>
   3205e:	lea    rdi,[rip+0x1caa3]        # 4eb08 <powers.0+0xe48>
   32065:	xor    eax,eax
   32067:	call   114b0 <wget_debug_printf@plt>
   3206c:	jmp    3127f <wget_ssl_open+0x27f>
   32071:	mov    ecx,DWORD PTR [rsp+0xc]
   32075:	mov    r15,QWORD PTR [rsp+0x10]
   3207a:	test   ecx,ecx
   3207c:	jne    3158e <wget_ssl_open+0x58e>
   32082:	xor    edi,edi
   32084:	mov    edx,0x5
   32089:	lea    rsi,[rip+0x1c300]        # 4e390 <powers.0+0x6d0>
   32090:	call   10f90 <dcgettext@plt>
   32095:	mov    rdi,rax
   32098:	xor    eax,eax
   3209a:	call   11ea0 <wget_error_printf@plt>
   3209f:	jmp    31862 <wget_ssl_open+0x862>
   320a4:	mov    r12d,0xfffffffd
   320aa:	jmp    31758 <wget_ssl_open+0x758>
   320af:	mov    edx,0x5
   320b4:	lea    rsi,[rip+0x1cdad]        # 4ee68 <powers.0+0x11a8>
   320bb:	xor    edi,edi
   320bd:	call   10f90 <dcgettext@plt>
   320c2:	mov    rdi,rax
   320c5:	xor    eax,eax
   320c7:	call   11ea0 <wget_error_printf@plt>
   320cc:	lea    rdi,[rsp+0x78]
   320d1:	call   11310 <wget_http_free_response@plt>
   320d6:	mov    rdi,r15
   320d9:	call   11cf0 <OCSP_RESPONSE_free@plt>
   320de:	mov    rdi,r12
   320e1:	call   10870 <OCSP_REQUEST_free@plt>
   320e6:	jmp    31dc4 <wget_ssl_open+0xdc4>
   320eb:	mov    rax,QWORD PTR [rip+0x4559e]        # 77690 <ocsp_stats_callback>
   320f2:	test   rax,rax
   320f5:	je     315a8 <wget_ssl_open+0x5a8>
   320fb:	mov    rcx,QWORD PTR [rip+0x43ee6]        # 75fe8 <wget_free@@Base-0x1328>
   32102:	mov    DWORD PTR [rsp+0x64],0x0
   3210a:	mov    DWORD PTR [rsp+0x58],0x0
   32112:	mov    DWORD PTR [rsp+0x60],0x0
   3211a:	mov    QWORD PTR [rsp+0x10],rcx
   3211f:	jmp    31e26 <wget_ssl_open+0xe26>
   32124:	call   11760 <__stack_chk_fail@plt>
   32129:	mov    rax,QWORD PTR [rip+0x43eb8]        # 75fe8 <wget_free@@Base-0x1328>
   32130:	mov    rdi,QWORD PTR [rsp]
   32134:	or     r12d,0xffffffff
   32138:	call   QWORD PTR [rax]
   3213a:	jmp    317b6 <wget_ssl_open+0x7b6>
   3213f:	lea    rdi,[rax+0x8]
   32143:	call   125e0 <wget_vector_free@plt>
   32148:	jmp    31883 <wget_ssl_open+0x883>
   3214d:	nop    DWORD PTR [rax]

0000000000032150 <wget_ssl_close>:
   32150:	endbr64 
   32154:	test   rdi,rdi
   32157:	je     32198 <wget_ssl_close+0x48>
   32159:	push   rbp
   3215a:	push   rbx
   3215b:	mov    rbx,rdi
   3215e:	sub    rsp,0x8
   32162:	mov    rbp,QWORD PTR [rdi]
   32165:	test   rbp,rbp
   32168:	je     3218b <wget_ssl_close+0x3b>
   3216a:	nop    WORD PTR [rax+rax*1+0x0]
   32170:	mov    rdi,rbp
   32173:	call   11780 <SSL_shutdown@plt>
   32178:	test   eax,eax
   3217a:	je     32170 <wget_ssl_close+0x20>
   3217c:	mov    rdi,rbp
   3217f:	call   10d00 <SSL_free@plt>
   32184:	mov    QWORD PTR [rbx],0x0
   3218b:	add    rsp,0x8
   3218f:	pop    rbx
   32190:	pop    rbp
   32191:	ret    
   32192:	nop    WORD PTR [rax+rax*1+0x0]
   32198:	ret    
   32199:	nop    DWORD PTR [rax+0x0]

00000000000321a0 <wget_ssl_read_timeout>:
   321a0:	endbr64 
   321a4:	push   r12
   321a6:	mov    r8,rdx
   321a9:	xor    r12d,r12d
   321ac:	push   rbp
   321ad:	sub    rsp,0x8
   321b1:	test   edx,edx
   321b3:	je     321cf <wget_ssl_read_timeout+0x2f>
   321b5:	mov    edx,ecx
   321b7:	mov    rcx,rsi
   321ba:	mov    rsi,rdi
   321bd:	mov    edi,0x1
   321c2:	call   30730 <ssl_transfer.part.0>
   321c7:	movsxd r12,eax
   321ca:	cmp    eax,0xfffffffa
   321cd:	je     321e0 <wget_ssl_read_timeout+0x40>
   321cf:	add    rsp,0x8
   321d3:	mov    rax,r12
   321d6:	pop    rbp
   321d7:	pop    r12
   321d9:	ret    
   321da:	nop    WORD PTR [rax+rax*1+0x0]
   321e0:	call   10490 <ERR_peek_last_error@plt>
   321e5:	mov    r12,0xffffffffffffffff
   321ec:	mov    rdi,rax
   321ef:	call   125a0 <ERR_reason_error_string@plt>
   321f4:	mov    rbp,rax
   321f7:	test   rax,rax
   321fa:	je     321cf <wget_ssl_read_timeout+0x2f>
   321fc:	mov    edx,0x5
   32201:	lea    rsi,[rip+0x1c22a]        # 4e432 <powers.0+0x772>
   32208:	xor    edi,edi
   3220a:	call   10f90 <dcgettext@plt>
   3220f:	mov    rsi,rbp
   32212:	mov    rdi,rax
   32215:	xor    eax,eax
   32217:	call   11ea0 <wget_error_printf@plt>
   3221c:	add    rsp,0x8
   32220:	mov    rax,r12
   32223:	pop    rbp
   32224:	pop    r12
   32226:	ret    
   32227:	nop    WORD PTR [rax+rax*1+0x0]

0000000000032230 <wget_ssl_write_timeout>:
   32230:	endbr64 
   32234:	mov    r8,rdx
   32237:	xor    eax,eax
   32239:	test   edx,edx
   3223b:	je     322a0 <wget_ssl_write_timeout+0x70>
   3223d:	push   rbp
   3223e:	mov    edx,ecx
   32240:	mov    rcx,rsi
   32243:	mov    rsi,rdi
   32246:	mov    edi,0x2
   3224b:	call   30730 <ssl_transfer.part.0>
   32250:	cmp    eax,0xfffffffa
   32253:	je     32260 <wget_ssl_write_timeout+0x30>
   32255:	cdqe   
   32257:	pop    rbp
   32258:	ret    
   32259:	nop    DWORD PTR [rax+0x0]
   32260:	call   10490 <ERR_peek_last_error@plt>
   32265:	mov    rdi,rax
   32268:	call   125a0 <ERR_reason_error_string@plt>
   3226d:	mov    edx,0x5
   32272:	lea    rsi,[rip+0x1c1cd]        # 4e446 <powers.0+0x786>
   32279:	xor    edi,edi
   3227b:	mov    rbp,rax
   3227e:	call   10f90 <dcgettext@plt>
   32283:	mov    rsi,rbp
   32286:	mov    rdi,rax
   32289:	xor    eax,eax
   3228b:	call   11ea0 <wget_error_printf@plt>
   32290:	mov    rax,0xffffffffffffffff
   32297:	pop    rbp
   32298:	ret    
   32299:	nop    DWORD PTR [rax+0x0]
   322a0:	ret    
   322a1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   322ac:	nop    DWORD PTR [rax+0x0]

00000000000322b0 <wget_ssl_set_stats_callback_tls>:
   322b0:	endbr64 
   322b4:	mov    QWORD PTR [rip+0x453e5],rdi        # 776a0 <tls_stats_callback>
   322bb:	mov    QWORD PTR [rip+0x453d6],rsi        # 77698 <tls_stats_ctx>
   322c2:	ret    
   322c3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   322ce:	xchg   ax,ax

00000000000322d0 <wget_ssl_set_stats_callback_ocsp>:
   322d0:	endbr64 
   322d4:	mov    QWORD PTR [rip+0x453b5],rdi        # 77690 <ocsp_stats_callback>
   322db:	mov    QWORD PTR [rip+0x453a6],rsi        # 77688 <ocsp_stats_ctx>
   322e2:	ret    
   322e3:	cs nop WORD PTR [rax+rax*1+0x0]
   322ed:	nop    DWORD PTR [rax]

00000000000322f0 <wget_ssl_default_cert_dir>:
   322f0:	endbr64 
   322f4:	lea    rax,[rip+0x1ccd1]        # 4efcc <powers.0+0x130c>
   322fb:	ret    
   322fc:	nop    DWORD PTR [rax+0x0]

0000000000032300 <wget_ssl_default_ca_bundle_path>:
   32300:	endbr64 
   32304:	xor    eax,eax
   32306:	ret    
   32307:	nop    WORD PTR [rax+rax*1+0x0]

0000000000032310 <yy_get_previous_state>:
   32310:	push   r15
   32312:	push   r14
   32314:	push   r13
   32316:	push   r12
   32318:	push   rbp
   32319:	push   rbx
   3231a:	mov    r10,QWORD PTR [rdi+0x80]
   32321:	mov    r13,QWORD PTR [rdi+0x40]
   32325:	mov    r12d,DWORD PTR [rdi+0x4c]
   32329:	cmp    r10,r13
   3232c:	jae    323dc <yy_get_previous_state+0xcc>
   32332:	mov    rbp,rdi
   32335:	lea    r15,[rip+0x25364]        # 576a0 <yy_accept>
   3233c:	lea    r8,[rip+0x248fd]        # 56c40 <yy_base>
   32343:	lea    rdi,[rip+0x1cf76]        # 4f2c0 <yy_chk>
   3234a:	lea    r14,[rip+0x207af]        # 52b00 <yy_nxt>
   32351:	lea    r9,[rip+0x23fe8]        # 56340 <yy_def>
   32358:	lea    r11,[rip+0x251e1]        # 57540 <yy_meta>
   3235f:	nop
   32360:	movzx  eax,BYTE PTR [r10]
   32364:	test   al,al
   32366:	je     323f0 <yy_get_previous_state+0xe0>
   3236c:	lea    rbx,[rip+0x2522d]        # 575a0 <yy_ec>
   32373:	movzx  esi,BYTE PTR [rbx+rax*1]
   32377:	mov    ebx,esi
   32379:	movsxd rdx,r12d
   3237c:	cmp    WORD PTR [r15+rdx*2],0x0
   32382:	je     3238b <yy_get_previous_state+0x7b>
   32384:	mov    DWORD PTR [rbp+0x68],edx
   32387:	mov    QWORD PTR [rbp+0x70],r10
   3238b:	movsx  eax,WORD PTR [r8+rdx*2]
   32390:	add    eax,esi
   32392:	cdqe   
   32394:	movsx  ecx,WORD PTR [rdi+rax*2]
   32398:	cmp    ecx,r12d
   3239b:	je     323cb <yy_get_previous_state+0xbb>
   3239d:	nop    DWORD PTR [rax]
   323a0:	movsx  edx,WORD PTR [r9+rdx*2]
   323a5:	mov    ecx,edx
   323a7:	cmp    dx,0x44e
   323ac:	jle    323b6 <yy_get_previous_state+0xa6>
   323ae:	movsxd rsi,esi
   323b1:	movzx  ebx,BYTE PTR [r11+rsi*1]
   323b6:	movsxd rdx,edx
   323b9:	movzx  esi,bl
   323bc:	movsx  eax,WORD PTR [r8+rdx*2]
   323c1:	add    eax,esi
   323c3:	cdqe   
   323c5:	cmp    cx,WORD PTR [rdi+rax*2]
   323c9:	jne    323a0 <yy_get_previous_state+0x90>
   323cb:	movsx  eax,WORD PTR [r14+rax*2]
   323d0:	add    r10,0x1
   323d4:	mov    r12d,eax
   323d7:	cmp    r10,r13
   323da:	jne    32360 <yy_get_previous_state+0x50>
   323dc:	pop    rbx
   323dd:	mov    eax,r12d
   323e0:	pop    rbp
   323e1:	pop    r12
   323e3:	pop    r13
   323e5:	pop    r14
   323e7:	pop    r15
   323e9:	ret    
   323ea:	nop    WORD PTR [rax+rax*1+0x0]
   323f0:	mov    esi,0x1
   323f5:	mov    ebx,0x1
   323fa:	jmp    32379 <yy_get_previous_state+0x69>
   323ff:	nop

0000000000032400 <yyensure_buffer_stack>:
   32400:	push   rbp
   32401:	push   rbx
   32402:	mov    rbx,rdi
   32405:	sub    rsp,0x8
   32409:	mov    rdi,QWORD PTR [rdi+0x28]
   3240d:	test   rdi,rdi
   32410:	je     32478 <yyensure_buffer_stack+0x78>
   32412:	mov    rax,QWORD PTR [rbx+0x20]
   32416:	lea    rdx,[rax-0x1]
   3241a:	cmp    QWORD PTR [rbx+0x18],rdx
   3241e:	jae    32430 <yyensure_buffer_stack+0x30>
   32420:	add    rsp,0x8
   32424:	pop    rbx
   32425:	pop    rbp
   32426:	ret    
   32427:	nop    WORD PTR [rax+rax*1+0x0]
   32430:	lea    rbp,[rax+0x8]
   32434:	mov    rdx,rbx
   32437:	lea    rsi,[rbp*8+0x0]
   3243f:	call   17570 <yyrealloc>
   32444:	mov    QWORD PTR [rbx+0x28],rax
   32448:	test   rax,rax
   3244b:	je     324ac <yyensure_buffer_stack+0xac>
   3244d:	mov    rdx,QWORD PTR [rbx+0x20]
   32451:	pxor   xmm0,xmm0
   32455:	lea    rax,[rax+rdx*8]
   32459:	movups XMMWORD PTR [rax],xmm0
   3245c:	movups XMMWORD PTR [rax+0x10],xmm0
   32460:	movups XMMWORD PTR [rax+0x20],xmm0
   32464:	movups XMMWORD PTR [rax+0x30],xmm0
   32468:	mov    QWORD PTR [rbx+0x20],rbp
   3246c:	add    rsp,0x8
   32470:	pop    rbx
   32471:	pop    rbp
   32472:	ret    
   32473:	nop    DWORD PTR [rax+rax*1+0x0]
   32478:	mov    rsi,rbx
   3247b:	mov    edi,0x8
   32480:	call   17560 <yyalloc>
   32485:	mov    QWORD PTR [rbx+0x28],rax
   32489:	test   rax,rax
   3248c:	je     324ac <yyensure_buffer_stack+0xac>
   3248e:	mov    QWORD PTR [rax],0x0
   32495:	mov    QWORD PTR [rbx+0x20],0x1
   3249d:	mov    QWORD PTR [rbx+0x18],0x0
   324a5:	add    rsp,0x8
   324a9:	pop    rbx
   324aa:	pop    rbp
   324ab:	ret    
   324ac:	lea    rdi,[rip+0x1cb2d]        # 4efe0 <powers.0+0x1320>
   324b3:	xor    eax,eax
   324b5:	call   10580 <wget_error_printf_exit@plt>
   324ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000000324c0 <yy_switch_to_buffer>:
   324c0:	endbr64 
   324c4:	push   rbp
   324c5:	mov    rbp,rdi
   324c8:	mov    rdi,rsi
   324cb:	push   rbx
   324cc:	mov    rbx,rsi
   324cf:	sub    rsp,0x8
   324d3:	call   32400 <yyensure_buffer_stack>
   324d8:	mov    rax,QWORD PTR [rbx+0x28]
   324dc:	test   rax,rax
   324df:	je     32558 <yy_switch_to_buffer+0x98>
   324e1:	mov    rdx,QWORD PTR [rbx+0x18]
   324e5:	lea    rax,[rax+rdx*8]
   324e9:	mov    rdx,QWORD PTR [rax]
   324ec:	cmp    rdx,rbp
   324ef:	je     3254a <yy_switch_to_buffer+0x8a>
   324f1:	test   rdx,rdx
   324f4:	je     3251d <yy_switch_to_buffer+0x5d>
   324f6:	mov    rax,QWORD PTR [rbx+0x40]
   324fa:	movzx  edx,BYTE PTR [rbx+0x30]
   324fe:	mov    BYTE PTR [rax],dl
   32500:	mov    rdx,QWORD PTR [rbx+0x18]
   32504:	mov    rax,QWORD PTR [rbx+0x28]
   32508:	mov    rcx,QWORD PTR [rbx+0x40]
   3250c:	lea    rax,[rax+rdx*8]
   32510:	mov    rdx,QWORD PTR [rax]
   32513:	mov    QWORD PTR [rdx+0x10],rcx
   32517:	mov    ecx,DWORD PTR [rbx+0x34]
   3251a:	mov    DWORD PTR [rdx+0x1c],ecx
   3251d:	mov    QWORD PTR [rax],rbp
   32520:	mov    eax,DWORD PTR [rbp+0x1c]
   32523:	mov    rdx,QWORD PTR [rbp+0x0]
   32527:	mov    DWORD PTR [rbx+0x34],eax
   3252a:	mov    rax,QWORD PTR [rbp+0x10]
   3252e:	mov    QWORD PTR [rbx+0x8],rdx
   32532:	mov    QWORD PTR [rbx+0x40],rax
   32536:	mov    QWORD PTR [rbx+0x80],rax
   3253d:	movzx  eax,BYTE PTR [rax]
   32540:	mov    DWORD PTR [rbx+0x50],0x1
   32547:	mov    BYTE PTR [rbx+0x30],al
   3254a:	add    rsp,0x8
   3254e:	pop    rbx
   3254f:	pop    rbp
   32550:	ret    
   32551:	nop    DWORD PTR [rax+0x0]
   32558:	test   rbp,rbp
   3255b:	je     3254a <yy_switch_to_buffer+0x8a>
   3255d:	mov    rax,QWORD PTR [rbx+0x18]
   32561:	shl    rax,0x3
   32565:	jmp    3251d <yy_switch_to_buffer+0x5d>
   32567:	nop    WORD PTR [rax+rax*1+0x0]

0000000000032570 <yy_delete_buffer>:
   32570:	endbr64 
   32574:	test   rdi,rdi
   32577:	je     325d0 <yy_delete_buffer+0x60>
   32579:	mov    rax,QWORD PTR [rsi+0x28]
   3257d:	push   rbp
   3257e:	mov    rbp,rdi
   32581:	test   rax,rax
   32584:	je     32593 <yy_delete_buffer+0x23>
   32586:	mov    rdx,QWORD PTR [rsi+0x18]
   3258a:	lea    rax,[rax+rdx*8]
   3258e:	cmp    rdi,QWORD PTR [rax]
   32591:	je     325a8 <yy_delete_buffer+0x38>
   32593:	mov    eax,DWORD PTR [rbp+0x20]
   32596:	test   eax,eax
   32598:	jne    325b6 <yy_delete_buffer+0x46>
   3259a:	mov    rdi,rbp
   3259d:	pop    rbp
   3259e:	jmp    10430 <free@plt>
   325a3:	nop    DWORD PTR [rax+rax*1+0x0]
   325a8:	mov    QWORD PTR [rax],0x0
   325af:	mov    eax,DWORD PTR [rbp+0x20]
   325b2:	test   eax,eax
   325b4:	je     3259a <yy_delete_buffer+0x2a>
   325b6:	mov    rdi,QWORD PTR [rbp+0x8]
   325ba:	call   10430 <free@plt>
   325bf:	mov    rdi,rbp
   325c2:	pop    rbp
   325c3:	jmp    10430 <free@plt>
   325c8:	nop    DWORD PTR [rax+rax*1+0x0]
   325d0:	ret    
   325d1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   325dc:	nop    DWORD PTR [rax+0x0]

00000000000325e0 <yy_flush_buffer>:
   325e0:	endbr64 
   325e4:	test   rdi,rdi
   325e7:	je     32628 <yy_flush_buffer+0x48>
   325e9:	mov    rax,QWORD PTR [rdi+0x8]
   325ed:	mov    DWORD PTR [rdi+0x1c],0x0
   325f4:	mov    BYTE PTR [rax],0x0
   325f7:	mov    rax,QWORD PTR [rdi+0x8]
   325fb:	mov    BYTE PTR [rax+0x1],0x0
   325ff:	mov    rdx,QWORD PTR [rdi+0x8]
   32603:	mov    rax,QWORD PTR [rsi+0x28]
   32607:	mov    DWORD PTR [rdi+0x28],0x1
   3260e:	mov    QWORD PTR [rdi+0x10],rdx
   32612:	mov    DWORD PTR [rdi+0x38],0x0
   32619:	test   rax,rax
   3261c:	je     32628 <yy_flush_buffer+0x48>
   3261e:	mov    rcx,QWORD PTR [rsi+0x18]
   32622:	cmp    rdi,QWORD PTR [rax+rcx*8]
   32626:	je     32630 <yy_flush_buffer+0x50>
   32628:	ret    
   32629:	nop    DWORD PTR [rax+0x0]
   32630:	mov    eax,DWORD PTR [rdi+0x1c]
   32633:	mov    QWORD PTR [rsi+0x40],rdx
   32637:	mov    QWORD PTR [rsi+0x80],rdx
   3263e:	mov    DWORD PTR [rsi+0x34],eax
   32641:	mov    rax,QWORD PTR [rdi]
   32644:	mov    QWORD PTR [rsi+0x8],rax
   32648:	movzx  eax,BYTE PTR [rdx]
   3264b:	mov    BYTE PTR [rsi+0x30],al
   3264e:	ret    
   3264f:	nop

0000000000032650 <yy_create_buffer>:
   32650:	endbr64 
   32654:	push   r13
   32656:	mov    r13,rdx
   32659:	push   r12
   3265b:	push   rbp
   3265c:	mov    rbp,rdi
   3265f:	mov    edi,0x40
   32664:	push   rbx
   32665:	mov    ebx,esi
   32667:	mov    rsi,rdx
   3266a:	sub    rsp,0x8
   3266e:	call   17560 <yyalloc>
   32673:	test   rax,rax
   32676:	je     326fc <yy_create_buffer+0xac>
   3267c:	mov    DWORD PTR [rax+0x18],ebx
   3267f:	lea    edi,[rbx+0x2]
   32682:	mov    rsi,r13
   32685:	mov    r12,rax
   32688:	movsxd rdi,edi
   3268b:	call   17560 <yyalloc>
   32690:	mov    QWORD PTR [r12+0x8],rax
   32695:	test   rax,rax
   32698:	je     326fc <yy_create_buffer+0xac>
   3269a:	mov    DWORD PTR [r12+0x20],0x1
   326a3:	call   104b0 <__errno_location@plt>
   326a8:	mov    rsi,r13
   326ab:	mov    rdi,r12
   326ae:	mov    r9d,DWORD PTR [rax]
   326b1:	mov    r8,rax
   326b4:	call   325e0 <yy_flush_buffer>
   326b9:	mov    rax,QWORD PTR [r13+0x28]
   326bd:	mov    QWORD PTR [r12],rbp
   326c1:	mov    DWORD PTR [r12+0x34],0x1
   326ca:	test   rax,rax
   326cd:	je     326d9 <yy_create_buffer+0x89>
   326cf:	mov    rdx,QWORD PTR [r13+0x18]
   326d3:	cmp    r12,QWORD PTR [rax+rdx*8]
   326d7:	je     326e2 <yy_create_buffer+0x92>
   326d9:	mov    QWORD PTR [r12+0x2c],0x1
   326e2:	mov    DWORD PTR [r12+0x24],0x0
   326eb:	mov    rax,r12
   326ee:	mov    DWORD PTR [r8],r9d
   326f1:	add    rsp,0x8
   326f5:	pop    rbx
   326f6:	pop    rbp
   326f7:	pop    r12
   326f9:	pop    r13
   326fb:	ret    
   326fc:	lea    rdi,[rip+0x1c915]        # 4f018 <powers.0+0x1358>
   32703:	xor    eax,eax
   32705:	call   10580 <wget_error_printf_exit@plt>
   3270a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000032710 <yyrestart>:
   32710:	endbr64 
   32714:	push   r12
   32716:	mov    r12,rdi
   32719:	push   rbp
   3271a:	mov    rbp,rsi
   3271d:	push   rbx
   3271e:	mov    rax,QWORD PTR [rsi+0x28]
   32722:	test   rax,rax
   32725:	je     327c0 <yyrestart+0xb0>
   3272b:	mov    rdx,QWORD PTR [rsi+0x18]
   3272f:	mov    rbx,QWORD PTR [rax+rdx*8]
   32733:	test   rbx,rbx
   32736:	je     327c0 <yyrestart+0xb0>
   3273c:	call   104b0 <__errno_location@plt>
   32741:	mov    rsi,rbp
   32744:	mov    rdi,rbx
   32747:	mov    r9d,DWORD PTR [rax]
   3274a:	mov    r8,rax
   3274d:	call   325e0 <yy_flush_buffer>
   32752:	mov    rax,QWORD PTR [rbp+0x28]
   32756:	mov    QWORD PTR [rbx],r12
   32759:	mov    DWORD PTR [rbx+0x34],0x1
   32760:	test   rax,rax
   32763:	je     327b0 <yyrestart+0xa0>
   32765:	mov    rdx,QWORD PTR [rbp+0x18]
   32769:	mov    rdx,QWORD PTR [rax+rdx*8]
   3276d:	cmp    rbx,rdx
   32770:	je     3277a <yyrestart+0x6a>
   32772:	mov    QWORD PTR [rbx+0x2c],0x1
   3277a:	mov    DWORD PTR [rbx+0x24],0x0
   32781:	mov    DWORD PTR [r8],r9d
   32784:	mov    eax,DWORD PTR [rdx+0x1c]
   32787:	pop    rbx
   32788:	mov    DWORD PTR [rbp+0x34],eax
   3278b:	mov    rax,QWORD PTR [rdx+0x10]
   3278f:	mov    rdx,QWORD PTR [rdx]
   32792:	mov    QWORD PTR [rbp+0x40],rax
   32796:	mov    QWORD PTR [rbp+0x80],rax
   3279d:	mov    QWORD PTR [rbp+0x8],rdx
   327a1:	movzx  eax,BYTE PTR [rax]
   327a4:	mov    BYTE PTR [rbp+0x30],al
   327a7:	pop    rbp
   327a8:	pop    r12
   327aa:	ret    
   327ab:	nop    DWORD PTR [rax+rax*1+0x0]
   327b0:	mov    rax,QWORD PTR [rbp+0x18]
   327b4:	mov    rdx,QWORD PTR [rax*8+0x0]
   327bc:	jmp    32772 <yyrestart+0x62>
   327be:	xchg   ax,ax
   327c0:	mov    rdi,rbp
   327c3:	call   32400 <yyensure_buffer_stack>
   327c8:	mov    rdx,QWORD PTR [rbp+0x18]
   327cc:	mov    rax,QWORD PTR [rbp+0x28]
   327d0:	mov    esi,0x4000
   327d5:	mov    rdi,QWORD PTR [rbp+0x8]
   327d9:	lea    rbx,[rax+rdx*8]
   327dd:	mov    rdx,rbp
   327e0:	call   32650 <yy_create_buffer>
   327e5:	mov    QWORD PTR [rbx],rax
   327e8:	mov    rax,QWORD PTR [rbp+0x28]
   327ec:	test   rax,rax
   327ef:	je     1282a <yyrestart.cold>
   327f5:	mov    rdx,QWORD PTR [rbp+0x18]
   327f9:	mov    rbx,QWORD PTR [rax+rdx*8]
   327fd:	jmp    3273c <yyrestart+0x2c>
   32802:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3280d:	nop    DWORD PTR [rax]

0000000000032810 <yylex>:
   32810:	endbr64 
   32814:	push   r15
   32816:	push   r14
   32818:	mov    r14,rdi
   3281b:	push   r13
   3281d:	push   r12
   3281f:	push   rbp
   32820:	push   rbx
   32821:	sub    rsp,0x48
   32825:	mov    r10d,DWORD PTR [rdi+0x48]
   32829:	test   r10d,r10d
   3282c:	je     3296d <yylex+0x15d>
   32832:	mov    r13,QWORD PTR [rdi+0x40]
   32836:	movzx  eax,BYTE PTR [rdi+0x30]
   3283a:	lea    r9,[rip+0x24d5f]        # 575a0 <yy_ec>
   32841:	lea    r12,[rip+0x24e58]        # 576a0 <yy_accept>
   32848:	lea    rbp,[rip+0x243f1]        # 56c40 <yy_base>
   3284f:	lea    rbx,[rip+0x1ca6a]        # 4f2c0 <yy_chk>
   32856:	lea    r10,[rip+0x202a3]        # 52b00 <yy_nxt>
   3285d:	lea    r11,[rip+0x23adc]        # 56340 <yy_def>
   32864:	lea    r15,[rip+0x24cd5]        # 57540 <yy_meta>
   3286b:	mov    rdi,r14
   3286e:	mov    BYTE PTR [r13+0x0],al
   32872:	mov    ecx,DWORD PTR [r14+0x4c]
   32876:	mov    r14,r13
   32879:	mov    r8,rdi
   3287c:	nop    DWORD PTR [rax+0x0]
   32880:	movsxd rdx,ecx
   32883:	movzx  esi,BYTE PTR [r9+rax*1]
   32888:	cmp    WORD PTR [r12+rdx*2],0x0
   3288e:	je     32898 <yylex+0x88>
   32890:	mov    DWORD PTR [r8+0x68],edx
   32894:	mov    QWORD PTR [r8+0x70],r13
   32898:	movsx  eax,WORD PTR [rbp+rdx*2+0x0]
   3289d:	add    eax,esi
   3289f:	cdqe   
   328a1:	movsx  edi,WORD PTR [rbx+rax*2]
   328a5:	cmp    ecx,edi
   328a7:	je     328d8 <yylex+0xc8>
   328a9:	nop    DWORD PTR [rax+0x0]
   328b0:	movsx  edx,WORD PTR [r11+rdx*2]
   328b5:	mov    ecx,edx
   328b7:	cmp    dx,0x44e
   328bc:	jle    328c6 <yylex+0xb6>
   328be:	movsxd rsi,esi
   328c1:	movzx  esi,BYTE PTR [r15+rsi*1]
   328c6:	movsxd rdx,edx
   328c9:	movsx  eax,WORD PTR [rbp+rdx*2+0x0]
   328ce:	add    eax,esi
   328d0:	cdqe   
   328d2:	cmp    cx,WORD PTR [rbx+rax*2]
   328d6:	jne    328b0 <yylex+0xa0>
   328d8:	movsx  eax,WORD PTR [r10+rax*2]
   328dd:	add    r13,0x1
   328e1:	mov    ecx,eax
   328e3:	cmp    eax,0x44e
   328e8:	je     328f8 <yylex+0xe8>
   328ea:	movzx  eax,BYTE PTR [r13+0x0]
   328ef:	jmp    32880 <yylex+0x70>
   328f1:	nop    DWORD PTR [rax+0x0]
   328f8:	mov    r13,QWORD PTR [r8+0x70]
   328fc:	mov    eax,DWORD PTR [r8+0x68]
   32900:	mov    rdi,r13
   32903:	mov    r13,r14
   32906:	mov    r14,rdi
   32909:	mov    rdx,r14
   3290c:	mov    QWORD PTR [r8+0x80],r13
   32913:	cdqe   
   32915:	sub    rdx,r13
   32918:	mov    QWORD PTR [rsp+0x8],r13
   3291d:	movsx  eax,WORD PTR [r12+rax*2]
   32922:	mov    DWORD PTR [r8+0x38],edx
   32926:	movzx  edx,BYTE PTR [r14]
   3292a:	mov    QWORD PTR [rsp],r14
   3292e:	mov    BYTE PTR [r8+0x30],dl
   32932:	mov    BYTE PTR [r14],0x0
   32936:	mov    QWORD PTR [r8+0x40],r14
   3293a:	mov    r14,r8
   3293d:	cmp    eax,0x2b
   32940:	ja     3304c <yylex+0x83c>
   32946:	lea    rdi,[rip+0x1c8b3]        # 4f200 <powers.0+0x1540>
   3294d:	mov    edx,eax
   3294f:	movsxd rdx,DWORD PTR [rdi+rdx*4]
   32953:	add    rdx,rdi
   32956:	notrack jmp rdx
   32959:	mov    eax,0x11
   3295e:	add    rsp,0x48
   32962:	pop    rbx
   32963:	pop    rbp
   32964:	pop    r12
   32966:	pop    r13
   32968:	pop    r14
   3296a:	pop    r15
   3296c:	ret    
   3296d:	mov    r9d,DWORD PTR [rdi+0x4c]
   32971:	mov    DWORD PTR [rdi+0x48],0x1
   32978:	test   r9d,r9d
   3297b:	jne    32984 <yylex+0x174>
   3297d:	mov    DWORD PTR [rdi+0x4c],0x1
   32984:	cmp    QWORD PTR [r14+0x8],0x0
   32989:	je     32a2a <yylex+0x21a>
   3298f:	cmp    QWORD PTR [r14+0x10],0x0
   32994:	je     32a0d <yylex+0x1fd>
   32996:	mov    rax,QWORD PTR [r14+0x28]
   3299a:	test   rax,rax
   3299d:	je     329d7 <yylex+0x1c7>
   3299f:	mov    rdx,QWORD PTR [r14+0x18]
   329a3:	mov    rax,QWORD PTR [rax+rdx*8]
   329a7:	test   rax,rax
   329aa:	je     329d7 <yylex+0x1c7>
   329ac:	mov    edx,DWORD PTR [rax+0x1c]
   329af:	mov    r13,QWORD PTR [rax+0x10]
   329b3:	mov    rax,QWORD PTR [rax]
   329b6:	mov    DWORD PTR [r14+0x34],edx
   329ba:	mov    QWORD PTR [r14+0x40],r13
   329be:	mov    QWORD PTR [r14+0x80],r13
   329c5:	mov    QWORD PTR [r14+0x8],rax
   329c9:	movzx  eax,BYTE PTR [r13+0x0]
   329ce:	mov    BYTE PTR [r14+0x30],al
   329d2:	jmp    3283a <yylex+0x2a>
   329d7:	mov    rdi,r14
   329da:	call   32400 <yyensure_buffer_stack>
   329df:	mov    rdx,QWORD PTR [r14+0x18]
   329e3:	mov    rax,QWORD PTR [r14+0x28]
   329e7:	mov    esi,0x4000
   329ec:	mov    rdi,QWORD PTR [r14+0x8]
   329f0:	lea    rbx,[rax+rdx*8]
   329f4:	mov    rdx,r14
   329f7:	call   32650 <yy_create_buffer>
   329fc:	mov    rdx,QWORD PTR [r14+0x18]
   32a00:	mov    QWORD PTR [rbx],rax
   32a03:	mov    rax,QWORD PTR [r14+0x28]
   32a07:	mov    rax,QWORD PTR [rax+rdx*8]
   32a0b:	jmp    329ac <yylex+0x19c>
   32a0d:	mov    rax,QWORD PTR [rip+0x43524]        # 75f38 <stdout@GLIBC_2.2.5>
   32a14:	mov    rax,QWORD PTR [rax]
   32a17:	mov    QWORD PTR [r14+0x10],rax
   32a1b:	mov    rax,QWORD PTR [r14+0x28]
   32a1f:	test   rax,rax
   32a22:	jne    3299f <yylex+0x18f>
   32a28:	jmp    329d7 <yylex+0x1c7>
   32a2a:	mov    rax,QWORD PTR [rip+0x43557]        # 75f88 <stdin@GLIBC_2.2.5>
   32a31:	cmp    QWORD PTR [r14+0x10],0x0
   32a36:	mov    rax,QWORD PTR [rax]
   32a39:	mov    QWORD PTR [r14+0x8],rax
   32a3d:	jne    32996 <yylex+0x186>
   32a43:	jmp    32a0d <yylex+0x1fd>
   32a45:	mov    eax,0x12
   32a4a:	jmp    3295e <yylex+0x14e>
   32a4f:	mov    eax,0x14
   32a54:	jmp    3295e <yylex+0x14e>
   32a59:	mov    eax,0x18
   32a5e:	jmp    3295e <yylex+0x14e>
   32a63:	mov    eax,0x13
   32a68:	jmp    3295e <yylex+0x14e>
   32a6d:	movzx  eax,BYTE PTR [r14+0x30]
   32a72:	mov    r13,QWORD PTR [r14+0x40]
   32a76:	jmp    3286b <yylex+0x5b>
   32a7b:	mov    rcx,QWORD PTR [r14+0x10]
   32a7f:	movsxd rsi,DWORD PTR [r14+0x38]
   32a83:	mov    edx,0x1
   32a88:	mov    rdi,QWORD PTR [r14+0x80]
   32a8f:	call   12730 <fwrite@plt>
   32a94:	mov    r13,QWORD PTR [r14+0x40]
   32a98:	movzx  eax,BYTE PTR [r14+0x30]
   32a9d:	lea    r9,[rip+0x24afc]        # 575a0 <yy_ec>
   32aa4:	lea    r10,[rip+0x20055]        # 52b00 <yy_nxt>
   32aab:	lea    r11,[rip+0x2388e]        # 56340 <yy_def>
   32ab2:	jmp    3286b <yylex+0x5b>
   32ab7:	mov    eax,0x16
   32abc:	jmp    3295e <yylex+0x14e>
   32ac1:	mov    eax,0x15
   32ac6:	jmp    3295e <yylex+0x14e>
   32acb:	mov    eax,0x10
   32ad0:	jmp    3295e <yylex+0x14e>
   32ad5:	mov    eax,0xf
   32ada:	jmp    3295e <yylex+0x14e>
   32adf:	mov    eax,0xe
   32ae4:	jmp    3295e <yylex+0x14e>
   32ae9:	mov    eax,0xd
   32aee:	jmp    3295e <yylex+0x14e>
   32af3:	mov    eax,0x1b
   32af8:	jmp    3295e <yylex+0x14e>
   32afd:	mov    r8,r14
   32b00:	mov    r14,QWORD PTR [rsp]
   32b04:	mov    r13,QWORD PTR [rsp+0x8]
   32b09:	movzx  eax,BYTE PTR [r8+0x30]
   32b0e:	mov    BYTE PTR [r14],al
   32b11:	mov    r14,QWORD PTR [r8+0x70]
   32b15:	mov    eax,DWORD PTR [r8+0x68]
   32b19:	jmp    32909 <yylex+0xf9>
   32b1e:	xor    eax,eax
   32b20:	jmp    3295e <yylex+0x14e>
   32b25:	mov    eax,0xc
   32b2a:	jmp    3295e <yylex+0x14e>
   32b2f:	mov    eax,0x5
   32b34:	jmp    3295e <yylex+0x14e>
   32b39:	mov    rdi,QWORD PTR [rsp]
   32b3d:	mov    rax,rdi
   32b40:	sub    rax,QWORD PTR [r14+0x80]
   32b47:	sub    eax,0x1
   32b4a:	mov    DWORD PTR [rsp+0x24],eax
   32b4e:	movzx  eax,BYTE PTR [r14+0x30]
   32b53:	mov    BYTE PTR [rdi],al
   32b55:	mov    rsi,QWORD PTR [r14+0x18]
   32b59:	mov    rdi,QWORD PTR [r14+0x28]
   32b5d:	mov    rcx,QWORD PTR [rdi+rsi*8]
   32b61:	mov    r8d,DWORD PTR [rcx+0x38]
   32b65:	test   r8d,r8d
   32b68:	je     32e62 <yylex+0x652>
   32b6e:	movsxd rax,DWORD PTR [r14+0x34]
   32b72:	mov    rdx,QWORD PTR [r14+0x40]
   32b76:	mov    r13,QWORD PTR [rcx+0x8]
   32b7a:	mov    r8,QWORD PTR [r14+0x80]
   32b81:	mov    QWORD PTR [rsp+0x10],rdx
   32b86:	lea    rdx,[r13+rax*1+0x0]
   32b8b:	cmp    QWORD PTR [rsp+0x10],rdx
   32b90:	jbe    32f61 <yylex+0x751>
   32b96:	lea    rax,[r13+rax*1+0x1]
   32b9b:	cmp    QWORD PTR [rsp+0x10],rax
   32ba0:	ja     3305a <yylex+0x84a>
   32ba6:	mov    rax,QWORD PTR [rsp+0x10]
   32bab:	mov    edx,DWORD PTR [rcx+0x34]
   32bae:	sub    rax,r8
   32bb1:	test   edx,edx
   32bb3:	jne    32cb5 <yylex+0x4a5>
   32bb9:	cmp    rax,0x1
   32bbd:	jne    32c6e <yylex+0x45e>
   32bc3:	mov    eax,DWORD PTR [r14+0x4c]
   32bc7:	mov    DWORD PTR [r14+0x50],0x0
   32bcf:	mov    QWORD PTR [r14+0x40],r8
   32bd3:	lea    edx,[rax-0x1]
   32bd6:	mov    eax,edx
   32bd8:	shr    eax,0x1f
   32bdb:	add    eax,edx
   32bdd:	sar    eax,1
   32bdf:	add    eax,0x2b
   32be2:	jmp    3293d <yylex+0x12d>
   32be7:	mov    eax,0x17
   32bec:	jmp    3295e <yylex+0x14e>
   32bf1:	mov    eax,0x2
   32bf6:	jmp    3295e <yylex+0x14e>
   32bfb:	mov    rax,QWORD PTR [r14+0x80]
   32c02:	movsx  eax,BYTE PTR [rax]
   32c05:	jmp    3295e <yylex+0x14e>
   32c0a:	mov    eax,0x1a
   32c0f:	jmp    3295e <yylex+0x14e>
   32c14:	mov    eax,0x19
   32c19:	jmp    3295e <yylex+0x14e>
   32c1e:	mov    eax,0xb
   32c23:	jmp    3295e <yylex+0x14e>
   32c28:	mov    eax,0xa
   32c2d:	jmp    3295e <yylex+0x14e>
   32c32:	mov    eax,0x9
   32c37:	jmp    3295e <yylex+0x14e>
   32c3c:	mov    eax,0x8
   32c41:	jmp    3295e <yylex+0x14e>
   32c46:	mov    eax,0x7
   32c4b:	jmp    3295e <yylex+0x14e>
   32c50:	mov    eax,0x6
   32c55:	jmp    3295e <yylex+0x14e>
   32c5a:	mov    eax,0x4
   32c5f:	jmp    3295e <yylex+0x14e>
   32c64:	mov    eax,0x3
   32c69:	jmp    3295e <yylex+0x14e>
   32c6e:	mov    r8,r14
   32c71:	mov    rdx,QWORD PTR [rdi+rsi*8]
   32c75:	movsxd rax,DWORD PTR [r8+0x34]
   32c79:	mov    rdi,r8
   32c7c:	mov    QWORD PTR [rsp],r8
   32c80:	add    rax,QWORD PTR [rdx+0x8]
   32c84:	mov    QWORD PTR [r8+0x40],rax
   32c88:	mov    r14,rax
   32c8b:	call   32310 <yy_get_previous_state>
   32c90:	mov    r8,QWORD PTR [rsp]
   32c94:	lea    r9,[rip+0x24905]        # 575a0 <yy_ec>
   32c9b:	lea    r10,[rip+0x1fe5e]        # 52b00 <yy_nxt>
   32ca2:	lea    r11,[rip+0x23697]        # 56340 <yy_def>
   32ca9:	mov    r13,QWORD PTR [r8+0x80]
   32cb0:	jmp    32909 <yylex+0xf9>
   32cb5:	lea    edx,[rax-0x1]
   32cb8:	mov    DWORD PTR [rsp+0x10],edx
   32cbc:	test   edx,edx
   32cbe:	jle    32ce7 <yylex+0x4d7>
   32cc0:	lea    edx,[rax-0x2]
   32cc3:	xor    eax,eax
   32cc5:	movzx  ecx,BYTE PTR [r8+rax*1]
   32cca:	mov    BYTE PTR [r13+rax*1+0x0],cl
   32ccf:	mov    rcx,rax
   32cd2:	add    rax,0x1
   32cd6:	cmp    rdx,rcx
   32cd9:	jne    32cc5 <yylex+0x4b5>
   32cdb:	mov    rsi,QWORD PTR [r14+0x18]
   32cdf:	mov    rdi,QWORD PTR [r14+0x28]
   32ce3:	mov    rcx,QWORD PTR [rdi+rsi*8]
   32ce7:	cmp    DWORD PTR [rcx+0x38],0x2
   32ceb:	je     32e7d <yylex+0x66d>
   32cf1:	mov    eax,DWORD PTR [rsp+0x10]
   32cf5:	not    eax
   32cf7:	add    eax,DWORD PTR [rcx+0x18]
   32cfa:	test   eax,eax
   32cfc:	jg     32da9 <yylex+0x599>
   32d02:	mov    rax,r14
   32d05:	mov    rdx,QWORD PTR [r14+0x40]
   32d09:	mov    r14,rcx
   32d0c:	mov    rcx,rax
   32d0f:	jmp    32d65 <yylex+0x555>
   32d11:	mov    eax,DWORD PTR [r14+0x18]
   32d15:	test   eax,eax
   32d17:	jle    32d90 <yylex+0x580>
   32d19:	add    eax,eax
   32d1b:	mov    DWORD PTR [r14+0x18],eax
   32d1f:	add    eax,0x2
   32d22:	mov    rdx,rcx
   32d25:	movsxd rsi,eax
   32d28:	mov    QWORD PTR [rsp+0x18],rcx
   32d2d:	call   17570 <yyrealloc>
   32d32:	mov    rcx,QWORD PTR [rsp+0x18]
   32d37:	test   rax,rax
   32d3a:	mov    QWORD PTR [r14+0x8],rax
   32d3e:	je     32d7f <yylex+0x56f>
   32d40:	movsxd r13,r13d
   32d43:	mov    rsi,QWORD PTR [rcx+0x18]
   32d47:	lea    rdx,[rax+r13*1]
   32d4b:	mov    rax,QWORD PTR [rcx+0x28]
   32d4f:	mov    QWORD PTR [rcx+0x40],rdx
   32d53:	mov    r14,QWORD PTR [rax+rsi*8]
   32d57:	mov    eax,DWORD PTR [rsp+0x10]
   32d5b:	not    eax
   32d5d:	add    eax,DWORD PTR [r14+0x18]
   32d61:	test   eax,eax
   32d63:	jg     32da0 <yylex+0x590>
   32d65:	mov    rdi,QWORD PTR [r14+0x8]
   32d69:	sub    rdx,rdi
   32d6c:	mov    r13,rdx
   32d6f:	mov    edx,DWORD PTR [r14+0x20]
   32d73:	test   edx,edx
   32d75:	jne    32d11 <yylex+0x501>
   32d77:	mov    QWORD PTR [r14+0x8],0x0
   32d7f:	lea    rdi,[rip+0x1c2fa]        # 4f080 <powers.0+0x13c0>
   32d86:	xor    eax,eax
   32d88:	call   10580 <wget_error_printf_exit@plt>
   32d8d:	nop    DWORD PTR [rax]
   32d90:	lea    edx,[rax+0x7]
   32d93:	cmovns edx,eax
   32d96:	sar    edx,0x3
   32d99:	add    eax,edx
   32d9b:	jmp    32d1b <yylex+0x50b>
   32da0:	mov    rdi,rcx
   32da3:	mov    rcx,r14
   32da6:	mov    r14,rdi
   32da9:	mov    edx,0x2000
   32dae:	cmp    eax,edx
   32db0:	cmovle edx,eax
   32db3:	mov    eax,DWORD PTR [rcx+0x24]
   32db6:	mov    DWORD PTR [rsp+0x28],edx
   32dba:	mov    DWORD PTR [rsp+0x18],eax
   32dbe:	test   eax,eax
   32dc0:	je     33100 <yylex+0x8f0>
   32dc6:	xor    edx,edx
   32dc8:	mov    rax,r14
   32dcb:	movsxd r13,DWORD PTR [rsp+0x10]
   32dd0:	mov    r14d,edx
   32dd3:	mov    rdx,rax
   32dd6:	mov    rdi,QWORD PTR [rdx+0x8]
   32dda:	mov    QWORD PTR [rsp+0x18],rdx
   32ddf:	call   10810 <getc@plt>
   32de4:	mov    rdx,QWORD PTR [rsp+0x18]
   32de9:	lea    r9,[rip+0x247b0]        # 575a0 <yy_ec>
   32df0:	lea    r10,[rip+0x1fd09]        # 52b00 <yy_nxt>
   32df7:	cmp    eax,0xffffffff
   32dfa:	lea    r11,[rip+0x2353f]        # 56340 <yy_def>
   32e01:	je     330bb <yylex+0x8ab>
   32e07:	mov    rsi,QWORD PTR [rdx+0x18]
   32e0b:	mov    rcx,QWORD PTR [rdx+0x28]
   32e0f:	add    r14d,0x1
   32e13:	mov    rcx,QWORD PTR [rcx+rsi*8]
   32e17:	mov    rdi,QWORD PTR [rcx+0x8]
   32e1b:	add    rdi,r13
   32e1e:	mov    rcx,rdi
   32e21:	cmp    eax,0xa
   32e24:	je     331d1 <yylex+0x9c1>
   32e2a:	mov    BYTE PTR [rcx],al
   32e2c:	add    r13,0x1
   32e30:	cmp    DWORD PTR [rsp+0x28],r14d
   32e35:	jne    32dd6 <yylex+0x5c6>
   32e37:	mov    rax,rdx
   32e3a:	mov    edx,r14d
   32e3d:	mov    r14,rax
   32e40:	mov    DWORD PTR [r14+0x34],edx
   32e44:	mov    rsi,QWORD PTR [r14+0x18]
   32e48:	mov    rdi,QWORD PTR [r14+0x28]
   32e4c:	mov    DWORD PTR [rsp+0x18],0x0
   32e54:	mov    r13,QWORD PTR [rdi+rsi*8]
   32e58:	mov    DWORD PTR [r13+0x1c],edx
   32e5c:	test   edx,edx
   32e5e:	jne    32eb0 <yylex+0x6a0>
   32e60:	jmp    32e8c <yylex+0x67c>
   32e62:	mov    rdx,QWORD PTR [r14+0x8]
   32e66:	movsxd rax,DWORD PTR [rcx+0x1c]
   32e6a:	mov    DWORD PTR [r14+0x34],eax
   32e6e:	mov    QWORD PTR [rcx],rdx
   32e71:	mov    DWORD PTR [rcx+0x38],0x1
   32e78:	jmp    32b72 <yylex+0x362>
   32e7d:	mov    DWORD PTR [r14+0x34],0x0
   32e85:	mov    DWORD PTR [rcx+0x1c],0x0
   32e8c:	mov    eax,DWORD PTR [rsp+0x10]
   32e90:	test   eax,eax
   32e92:	je     33070 <yylex+0x860>
   32e98:	mov    r13,QWORD PTR [rdi+rsi*8]
   32e9c:	mov    edx,DWORD PTR [r14+0x34]
   32ea0:	mov    DWORD PTR [rsp+0x18],0x2
   32ea8:	mov    DWORD PTR [r13+0x38],0x2
   32eb0:	mov    eax,DWORD PTR [rsp+0x10]
   32eb4:	mov    rdi,QWORD PTR [r13+0x8]
   32eb8:	lea    ecx,[rax+rdx*1]
   32ebb:	cmp    ecx,DWORD PTR [r13+0x18]
   32ebf:	jg     32ff0 <yylex+0x7e0>
   32ec5:	mov    DWORD PTR [r14+0x34],ecx
   32ec9:	movsxd rcx,ecx
   32ecc:	mov    BYTE PTR [rdi+rcx*1],0x0
   32ed0:	mov    rax,QWORD PTR [r14+0x28]
   32ed4:	mov    rdx,QWORD PTR [r14+0x18]
   32ed8:	mov    rdx,QWORD PTR [rax+rdx*8]
   32edc:	movsxd rax,DWORD PTR [r14+0x34]
   32ee0:	mov    rdx,QWORD PTR [rdx+0x8]
   32ee4:	mov    BYTE PTR [rdx+rax*1+0x1],0x0
   32ee9:	mov    rsi,QWORD PTR [r14+0x18]
   32eed:	mov    rdi,QWORD PTR [r14+0x28]
   32ef1:	mov    rax,QWORD PTR [rdi+rsi*8]
   32ef5:	mov    r8,QWORD PTR [rax+0x8]
   32ef9:	mov    eax,DWORD PTR [rsp+0x18]
   32efd:	mov    QWORD PTR [r14+0x80],r8
   32f04:	cmp    eax,0x1
   32f07:	je     32bc3 <yylex+0x3b3>
   32f0d:	mov    QWORD PTR [rsp],r8
   32f11:	mov    r8,r14
   32f14:	cmp    eax,0x2
   32f17:	je     32c71 <yylex+0x461>
   32f1d:	movsxd r13,DWORD PTR [rsp+0x24]
   32f22:	add    r13,QWORD PTR [rsp]
   32f26:	mov    rdi,r14
   32f29:	mov    QWORD PTR [rsp+0x8],r14
   32f2e:	mov    QWORD PTR [r14+0x40],r13
   32f32:	call   32310 <yy_get_previous_state>
   32f37:	mov    r8,QWORD PTR [rsp+0x8]
   32f3c:	lea    r9,[rip+0x2465d]        # 575a0 <yy_ec>
   32f43:	lea    r10,[rip+0x1fbb6]        # 52b00 <yy_nxt>
   32f4a:	mov    ecx,eax
   32f4c:	lea    r11,[rip+0x233ed]        # 56340 <yy_def>
   32f53:	movzx  eax,BYTE PTR [r13+0x0]
   32f58:	mov    r14,QWORD PTR [rsp]
   32f5c:	jmp    32880 <yylex+0x70>
   32f61:	movsxd r13,DWORD PTR [rsp+0x24]
   32f66:	mov    rdi,r14
   32f69:	mov    QWORD PTR [rsp],r8
   32f6d:	mov    QWORD PTR [rsp+0x8],r14
   32f72:	add    r13,r8
   32f75:	mov    QWORD PTR [r14+0x40],r13
   32f79:	call   32310 <yy_get_previous_state>
   32f7e:	mov    r8,QWORD PTR [rsp+0x8]
   32f83:	lea    r9,[rip+0x24616]        # 575a0 <yy_ec>
   32f8a:	lea    r10,[rip+0x1fb6f]        # 52b00 <yy_nxt>
   32f91:	movsxd rdx,eax
   32f94:	lea    r11,[rip+0x233a5]        # 56340 <yy_def>
   32f9b:	cmp    WORD PTR [r12+rdx*2],0x0
   32fa1:	mov    rcx,rdx
   32fa4:	je     32fb8 <yylex+0x7a8>
   32fa6:	mov    DWORD PTR [r8+0x68],edx
   32faa:	mov    QWORD PTR [r8+0x70],r13
   32fae:	jmp    32fb8 <yylex+0x7a8>
   32fb0:	movsx  rdx,WORD PTR [r11+rdx*2]
   32fb5:	mov    rcx,rdx
   32fb8:	movsx  eax,WORD PTR [rbp+rdx*2+0x0]
   32fbd:	add    eax,0x1
   32fc0:	cdqe   
   32fc2:	movsx  esi,WORD PTR [rbx+rax*2]
   32fc6:	cmp    ecx,esi
   32fc8:	jne    32fb0 <yylex+0x7a0>
   32fca:	movsx  ecx,WORD PTR [r10+rax*2]
   32fcf:	cmp    ecx,0x44e
   32fd5:	je     32fdf <yylex+0x7cf>
   32fd7:	test   ecx,ecx
   32fd9:	jne    330ae <yylex+0x89e>
   32fdf:	mov    r14,QWORD PTR [r8+0x70]
   32fe3:	mov    eax,DWORD PTR [r8+0x68]
   32fe7:	mov    r13,QWORD PTR [rsp]
   32feb:	jmp    32909 <yylex+0xf9>
   32ff0:	sar    edx,1
   32ff2:	add    ecx,edx
   32ff4:	mov    rdx,r14
   32ff7:	movsxd rsi,ecx
   32ffa:	mov    DWORD PTR [rsp+0x28],ecx
   32ffe:	call   17570 <yyrealloc>
   33003:	mov    rdx,QWORD PTR [r14+0x18]
   33007:	mov    ecx,DWORD PTR [rsp+0x28]
   3300b:	lea    r9,[rip+0x2458e]        # 575a0 <yy_ec>
   33012:	mov    QWORD PTR [r13+0x8],rax
   33016:	mov    rax,QWORD PTR [r14+0x28]
   3301a:	lea    r10,[rip+0x1fadf]        # 52b00 <yy_nxt>
   33021:	lea    r11,[rip+0x23318]        # 56340 <yy_def>
   33028:	mov    rax,QWORD PTR [rax+rdx*8]
   3302c:	mov    rdi,QWORD PTR [rax+0x8]
   33030:	test   rdi,rdi
   33033:	je     331e2 <yylex+0x9d2>
   33039:	sub    ecx,0x2
   3303c:	mov    DWORD PTR [rax+0x18],ecx
   3303f:	mov    ecx,DWORD PTR [rsp+0x10]
   33043:	add    ecx,DWORD PTR [r14+0x34]
   33047:	jmp    32ec5 <yylex+0x6b5>
   3304c:	lea    rdi,[rip+0x1c08d]        # 4f0e0 <powers.0+0x1420>
   33053:	xor    eax,eax
   33055:	call   10580 <wget_error_printf_exit@plt>
   3305a:	lea    rdi,[rip+0x1bfe7]        # 4f048 <powers.0+0x1388>
   33061:	xor    eax,eax
   33063:	call   10580 <wget_error_printf_exit@plt>
   33068:	nop    DWORD PTR [rax+rax*1+0x0]
   33070:	mov    rdi,QWORD PTR [r14+0x8]
   33074:	mov    rsi,r14
   33077:	call   32710 <yyrestart>
   3307c:	mov    rcx,QWORD PTR [r14+0x18]
   33080:	mov    rax,QWORD PTR [r14+0x28]
   33084:	mov    DWORD PTR [rsp+0x18],0x1
   3308c:	mov    edx,DWORD PTR [r14+0x34]
   33090:	lea    r9,[rip+0x24509]        # 575a0 <yy_ec>
   33097:	lea    r10,[rip+0x1fa62]        # 52b00 <yy_nxt>
   3309e:	mov    r13,QWORD PTR [rax+rcx*8]
   330a2:	lea    r11,[rip+0x23297]        # 56340 <yy_def>
   330a9:	jmp    32eb0 <yylex+0x6a0>
   330ae:	add    r13,0x1
   330b2:	mov    QWORD PTR [r8+0x40],r13
   330b6:	jmp    32f53 <yylex+0x743>
   330bb:	mov    rdi,QWORD PTR [rdx+0x8]
   330bf:	mov    DWORD PTR [rsp+0x18],r14d
   330c4:	mov    r14,rdx
   330c7:	call   12580 <ferror@plt>
   330cc:	mov    edx,DWORD PTR [rsp+0x18]
   330d0:	lea    r9,[rip+0x244c9]        # 575a0 <yy_ec>
   330d7:	lea    r10,[rip+0x1fa22]        # 52b00 <yy_nxt>
   330de:	test   eax,eax
   330e0:	lea    r11,[rip+0x23259]        # 56340 <yy_def>
   330e7:	je     32e40 <yylex+0x630>
   330ed:	lea    rdi,[rip+0x1c0cf]        # 4f1c3 <powers.0+0x1503>
   330f4:	xor    eax,eax
   330f6:	call   10580 <wget_error_printf_exit@plt>
   330fb:	nop    DWORD PTR [rax+rax*1+0x0]
   33100:	mov    QWORD PTR [rsp+0x38],rcx
   33105:	call   104b0 <__errno_location@plt>
   3310a:	mov    rcx,QWORD PTR [rsp+0x38]
   3310f:	mov    DWORD PTR [rax],0x0
   33115:	mov    r13,rax
   33118:	movsxd rax,DWORD PTR [rsp+0x28]
   3311d:	mov    QWORD PTR [rsp+0x28],rax
   33122:	movsxd rax,DWORD PTR [rsp+0x10]
   33127:	mov    QWORD PTR [rsp+0x30],rax
   3312c:	jmp    3317a <yylex+0x96a>
   3312e:	xchg   ax,ax
   33130:	mov    rdi,QWORD PTR [r14+0x8]
   33134:	call   12580 <ferror@plt>
   33139:	lea    r9,[rip+0x24460]        # 575a0 <yy_ec>
   33140:	lea    r10,[rip+0x1f9b9]        # 52b00 <yy_nxt>
   33147:	test   eax,eax
   33149:	lea    r11,[rip+0x231f0]        # 56340 <yy_def>
   33150:	je     331f0 <yylex+0x9e0>
   33156:	cmp    DWORD PTR [r13+0x0],0x4
   3315b:	jne    330ed <yylex+0x8dd>
   3315d:	mov    DWORD PTR [r13+0x0],0x0
   33165:	mov    rdi,QWORD PTR [r14+0x8]
   33169:	call   10680 <clearerr@plt>
   3316e:	mov    rdx,QWORD PTR [r14+0x18]
   33172:	mov    rax,QWORD PTR [r14+0x28]
   33176:	mov    rcx,QWORD PTR [rax+rdx*8]
   3317a:	mov    r8,QWORD PTR [r14+0x8]
   3317e:	mov    rdx,QWORD PTR [rsp+0x28]
   33183:	mov    esi,0x1
   33188:	mov    rdi,QWORD PTR [rsp+0x30]
   3318d:	add    rdi,QWORD PTR [rcx+0x8]
   33191:	mov    rcx,r8
   33194:	call   11e20 <fread@plt>
   33199:	lea    r9,[rip+0x24400]        # 575a0 <yy_ec>
   331a0:	lea    r10,[rip+0x1f959]        # 52b00 <yy_nxt>
   331a7:	test   eax,eax
   331a9:	mov    DWORD PTR [r14+0x34],eax
   331ad:	mov    edx,eax
   331af:	lea    r11,[rip+0x2318a]        # 56340 <yy_def>
   331b6:	je     33130 <yylex+0x920>
   331bc:	mov    rsi,QWORD PTR [r14+0x18]
   331c0:	mov    rcx,QWORD PTR [r14+0x28]
   331c4:	mov    r13,QWORD PTR [rcx+rsi*8]
   331c8:	mov    DWORD PTR [r13+0x1c],eax
   331cc:	jmp    32eb0 <yylex+0x6a0>
   331d1:	mov    rax,rdx
   331d4:	mov    BYTE PTR [rdi],0xa
   331d7:	mov    edx,r14d
   331da:	mov    r14,rax
   331dd:	jmp    32e40 <yylex+0x630>
   331e2:	lea    rdi,[rip+0x1bec7]        # 4f0b0 <powers.0+0x13f0>
   331e9:	xor    eax,eax
   331eb:	call   10580 <wget_error_printf_exit@plt>
   331f0:	mov    edx,DWORD PTR [r14+0x34]
   331f4:	jmp    32e44 <yylex+0x634>
   331f9:	nop    DWORD PTR [rax+0x0]

0000000000033200 <yypush_buffer_state>:
   33200:	endbr64 
   33204:	test   rdi,rdi
   33207:	je     332b8 <yypush_buffer_state+0xb8>
   3320d:	push   rbp
   3320e:	mov    rbp,rdi
   33211:	mov    rdi,rsi
   33214:	push   rbx
   33215:	mov    rbx,rsi
   33218:	sub    rsp,0x8
   3321c:	call   32400 <yyensure_buffer_stack>
   33221:	mov    rax,QWORD PTR [rbx+0x28]
   33225:	test   rax,rax
   33228:	je     332a8 <yypush_buffer_state+0xa8>
   3322a:	mov    rdx,QWORD PTR [rbx+0x18]
   3322e:	lea    rax,[rax+rdx*8]
   33232:	cmp    QWORD PTR [rax],0x0
   33236:	je     33270 <yypush_buffer_state+0x70>
   33238:	mov    rax,QWORD PTR [rbx+0x40]
   3323c:	movzx  edx,BYTE PTR [rbx+0x30]
   33240:	mov    BYTE PTR [rax],dl
   33242:	mov    rcx,QWORD PTR [rbx+0x28]
   33246:	mov    rdx,QWORD PTR [rbx+0x18]
   3324a:	mov    rdi,QWORD PTR [rbx+0x40]
   3324e:	lea    rax,[rcx+rdx*8]
   33252:	mov    rsi,QWORD PTR [rax]
   33255:	mov    QWORD PTR [rsi+0x10],rdi
   33259:	mov    edi,DWORD PTR [rbx+0x34]
   3325c:	mov    DWORD PTR [rsi+0x1c],edi
   3325f:	test   rcx,rcx
   33262:	je     33270 <yypush_buffer_state+0x70>
   33264:	lea    rax,[rdx+0x1]
   33268:	mov    QWORD PTR [rbx+0x18],rax
   3326c:	lea    rax,[rcx+rax*8]
   33270:	mov    QWORD PTR [rax],rbp
   33273:	mov    eax,DWORD PTR [rbp+0x1c]
   33276:	mov    rdx,QWORD PTR [rbp+0x0]
   3327a:	mov    DWORD PTR [rbx+0x34],eax
   3327d:	mov    rax,QWORD PTR [rbp+0x10]
   33281:	mov    QWORD PTR [rbx+0x8],rdx
   33285:	mov    QWORD PTR [rbx+0x40],rax
   33289:	mov    QWORD PTR [rbx+0x80],rax
   33290:	movzx  eax,BYTE PTR [rax]
   33293:	mov    DWORD PTR [rbx+0x50],0x1
   3329a:	mov    BYTE PTR [rbx+0x30],al
   3329d:	add    rsp,0x8
   332a1:	pop    rbx
   332a2:	pop    rbp
   332a3:	ret    
   332a4:	nop    DWORD PTR [rax+0x0]
   332a8:	mov    rax,QWORD PTR [rbx+0x18]
   332ac:	shl    rax,0x3
   332b0:	jmp    33270 <yypush_buffer_state+0x70>
   332b2:	nop    WORD PTR [rax+rax*1+0x0]
   332b8:	ret    
   332b9:	nop    DWORD PTR [rax+0x0]

00000000000332c0 <yypop_buffer_state>:
   332c0:	endbr64 
   332c4:	mov    rax,QWORD PTR [rdi+0x28]
   332c8:	test   rax,rax
   332cb:	je     33340 <yypop_buffer_state+0x80>
   332cd:	push   rbx
   332ce:	mov    rdx,QWORD PTR [rdi+0x18]
   332d2:	mov    rbx,rdi
   332d5:	mov    rdi,QWORD PTR [rax+rdx*8]
   332d9:	test   rdi,rdi
   332dc:	je     3333e <yypop_buffer_state+0x7e>
   332de:	mov    rsi,rbx
   332e1:	call   32570 <yy_delete_buffer>
   332e6:	mov    rdx,QWORD PTR [rbx+0x28]
   332ea:	mov    rax,QWORD PTR [rbx+0x18]
   332ee:	mov    QWORD PTR [rdx+rax*8],0x0
   332f6:	test   rax,rax
   332f9:	je     33303 <yypop_buffer_state+0x43>
   332fb:	sub    rax,0x1
   332ff:	mov    QWORD PTR [rbx+0x18],rax
   33303:	test   rdx,rdx
   33306:	je     3333e <yypop_buffer_state+0x7e>
   33308:	mov    rax,QWORD PTR [rbx+0x18]
   3330c:	mov    rax,QWORD PTR [rdx+rax*8]
   33310:	test   rax,rax
   33313:	je     3333e <yypop_buffer_state+0x7e>
   33315:	mov    edx,DWORD PTR [rax+0x1c]
   33318:	mov    DWORD PTR [rbx+0x34],edx
   3331b:	mov    rdx,QWORD PTR [rax+0x10]
   3331f:	mov    rax,QWORD PTR [rax]
   33322:	mov    QWORD PTR [rbx+0x40],rdx
   33326:	mov    QWORD PTR [rbx+0x80],rdx
   3332d:	mov    QWORD PTR [rbx+0x8],rax
   33331:	movzx  eax,BYTE PTR [rdx]
   33334:	mov    DWORD PTR [rbx+0x50],0x1
   3333b:	mov    BYTE PTR [rbx+0x30],al
   3333e:	pop    rbx
   3333f:	ret    
   33340:	ret    
   33341:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3334c:	nop    DWORD PTR [rax+0x0]

0000000000033350 <yy_scan_buffer>:
   33350:	endbr64 
   33354:	push   r13
   33356:	push   r12
   33358:	push   rbp
   33359:	push   rbx
   3335a:	sub    rsp,0x8
   3335e:	cmp    rsi,0x1
   33362:	jbe    333e0 <yy_scan_buffer+0x90>
   33364:	cmp    BYTE PTR [rdi+rsi*1-0x2],0x0
   33369:	mov    rbp,rdi
   3336c:	mov    rbx,rsi
   3336f:	jne    333e0 <yy_scan_buffer+0x90>
   33371:	cmp    BYTE PTR [rdi+rsi*1-0x1],0x0
   33376:	jne    333e0 <yy_scan_buffer+0x90>
   33378:	mov    rsi,rdx
   3337b:	mov    edi,0x40
   33380:	mov    r13,rdx
   33383:	call   17560 <yyalloc>
   33388:	mov    r12,rax
   3338b:	test   rax,rax
   3338e:	je     333f1 <yy_scan_buffer+0xa1>
   33390:	sub    ebx,0x2
   33393:	mov    QWORD PTR [rax+0x8],rbp
   33397:	mov    rsi,r13
   3339a:	mov    rdi,rax
   3339d:	mov    DWORD PTR [rax+0x18],ebx
   333a0:	mov    QWORD PTR [rax+0x10],rbp
   333a4:	mov    DWORD PTR [rax+0x1c],ebx
   333a7:	mov    QWORD PTR [rax],0x0
   333ae:	mov    QWORD PTR [rax+0x20],0x0
   333b6:	mov    DWORD PTR [rax+0x28],0x1
   333bd:	mov    QWORD PTR [rax+0x34],0x0
   333c5:	call   324c0 <yy_switch_to_buffer>
   333ca:	add    rsp,0x8
   333ce:	mov    rax,r12
   333d1:	pop    rbx
   333d2:	pop    rbp
   333d3:	pop    r12
   333d5:	pop    r13
   333d7:	ret    
   333d8:	nop    DWORD PTR [rax+rax*1+0x0]
   333e0:	add    rsp,0x8
   333e4:	xor    r12d,r12d
   333e7:	pop    rbx
   333e8:	mov    rax,r12
   333eb:	pop    rbp
   333ec:	pop    r12
   333ee:	pop    r13
   333f0:	ret    
   333f1:	lea    rdi,[rip+0x1bd20]        # 4f118 <powers.0+0x1458>
   333f8:	xor    eax,eax
   333fa:	call   10580 <wget_error_printf_exit@plt>
   333ff:	nop

0000000000033400 <yy_scan_bytes>:
   33400:	endbr64 
   33404:	push   r13
   33406:	mov    r13,rdx
   33409:	push   r12
   3340b:	lea    r12d,[rsi+0x2]
   3340f:	push   rbp
   33410:	movsxd r12,r12d
   33413:	mov    ebp,esi
   33415:	mov    rsi,rdx
   33418:	push   rbx
   33419:	mov    rbx,rdi
   3341c:	mov    rdi,r12
   3341f:	sub    rsp,0x8
   33423:	call   17560 <yyalloc>
   33428:	test   rax,rax
   3342b:	je     3347c <yy_scan_bytes+0x7c>
   3342d:	mov    rdi,rax
   33430:	xor    ecx,ecx
   33432:	movsxd rax,ebp
   33435:	test   ebp,ebp
   33437:	jle    33451 <yy_scan_bytes+0x51>
   33439:	nop    DWORD PTR [rax+0x0]
   33440:	movzx  esi,BYTE PTR [rbx+rcx*1]
   33444:	mov    BYTE PTR [rdi+rcx*1],sil
   33448:	add    rcx,0x1
   3344c:	cmp    rcx,rax
   3344f:	jne    33440 <yy_scan_bytes+0x40>
   33451:	mov    BYTE PTR [rdi+rax*1+0x1],0x0
   33456:	mov    rdx,r13
   33459:	mov    rsi,r12
   3345c:	mov    BYTE PTR [rdi+rax*1],0x0
   33460:	call   33350 <yy_scan_buffer>
   33465:	test   rax,rax
   33468:	je     3348a <yy_scan_bytes+0x8a>
   3346a:	mov    DWORD PTR [rax+0x20],0x1
   33471:	add    rsp,0x8
   33475:	pop    rbx
   33476:	pop    rbp
   33477:	pop    r12
   33479:	pop    r13
   3347b:	ret    
   3347c:	lea    rdi,[rip+0x1bcc5]        # 4f148 <powers.0+0x1488>
   33483:	xor    eax,eax
   33485:	call   10580 <wget_error_printf_exit@plt>
   3348a:	lea    rdi,[rip+0x1bd4f]        # 4f1e0 <powers.0+0x1520>
   33491:	call   10580 <wget_error_printf_exit@plt>
   33496:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000334a0 <yy_scan_string>:
   334a0:	endbr64 
   334a4:	push   r12
   334a6:	mov    r12,rsi
   334a9:	push   rbp
   334aa:	mov    rbp,rdi
   334ad:	sub    rsp,0x8
   334b1:	call   10ab0 <strlen@plt>
   334b6:	add    rsp,0x8
   334ba:	mov    rdx,r12
   334bd:	mov    rdi,rbp
   334c0:	mov    esi,eax
   334c2:	pop    rbp
   334c3:	pop    r12
   334c5:	jmp    33400 <yy_scan_bytes>
   334ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000000334d0 <yyget_extra>:
   334d0:	endbr64 
   334d4:	mov    rax,QWORD PTR [rdi]
   334d7:	ret    
   334d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000334e0 <yyget_lineno>:
   334e0:	endbr64 
   334e4:	mov    rax,QWORD PTR [rdi+0x28]
   334e8:	test   rax,rax
   334eb:	je     33500 <yyget_lineno+0x20>
   334ed:	mov    rdx,QWORD PTR [rdi+0x18]
   334f1:	mov    rax,QWORD PTR [rax+rdx*8]
   334f5:	test   rax,rax
   334f8:	je     33500 <yyget_lineno+0x20>
   334fa:	mov    eax,DWORD PTR [rax+0x2c]
   334fd:	ret    
   334fe:	xchg   ax,ax
   33500:	xor    eax,eax
   33502:	ret    
   33503:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3350e:	xchg   ax,ax

0000000000033510 <yyget_column>:
   33510:	endbr64 
   33514:	mov    rax,QWORD PTR [rdi+0x28]
   33518:	test   rax,rax
   3351b:	je     33530 <yyget_column+0x20>
   3351d:	mov    rdx,QWORD PTR [rdi+0x18]
   33521:	mov    rax,QWORD PTR [rax+rdx*8]
   33525:	test   rax,rax
   33528:	je     33530 <yyget_column+0x20>
   3352a:	mov    eax,DWORD PTR [rax+0x30]
   3352d:	ret    
   3352e:	xchg   ax,ax
   33530:	xor    eax,eax
   33532:	ret    
   33533:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3353e:	xchg   ax,ax

0000000000033540 <yyget_in>:
   33540:	endbr64 
   33544:	mov    rax,QWORD PTR [rdi+0x8]
   33548:	ret    
   33549:	nop    DWORD PTR [rax+0x0]

0000000000033550 <yyget_out>:
   33550:	endbr64 
   33554:	mov    rax,QWORD PTR [rdi+0x10]
   33558:	ret    
   33559:	nop    DWORD PTR [rax+0x0]

0000000000033560 <yyget_leng>:
   33560:	endbr64 
   33564:	mov    eax,DWORD PTR [rdi+0x38]
   33567:	ret    
   33568:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000033570 <yyget_text>:
   33570:	endbr64 
   33574:	mov    rax,QWORD PTR [rdi+0x80]
   3357b:	ret    
   3357c:	nop    DWORD PTR [rax+0x0]

0000000000033580 <yyset_extra>:
   33580:	endbr64 
   33584:	mov    QWORD PTR [rsi],rdi
   33587:	ret    
   33588:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000033590 <yyset_lineno>:
   33590:	endbr64 
   33594:	mov    rax,QWORD PTR [rsi+0x28]
   33598:	test   rax,rax
   3359b:	je     335ae <yyset_lineno+0x1e>
   3359d:	mov    rdx,QWORD PTR [rsi+0x18]
   335a1:	mov    rax,QWORD PTR [rax+rdx*8]
   335a5:	test   rax,rax
   335a8:	je     335ae <yyset_lineno+0x1e>
   335aa:	mov    DWORD PTR [rax+0x2c],edi
   335ad:	ret    
   335ae:	push   rax
   335af:	lea    rdi,[rip+0x1bbc2]        # 4f178 <powers.0+0x14b8>
   335b6:	xor    eax,eax
   335b8:	call   10580 <wget_error_printf_exit@plt>
   335bd:	nop    DWORD PTR [rax]

00000000000335c0 <yyset_column>:
   335c0:	endbr64 
   335c4:	mov    rax,QWORD PTR [rsi+0x28]
   335c8:	test   rax,rax
   335cb:	je     335de <yyset_column+0x1e>
   335cd:	mov    rdx,QWORD PTR [rsi+0x18]
   335d1:	mov    rax,QWORD PTR [rax+rdx*8]
   335d5:	test   rax,rax
   335d8:	je     335de <yyset_column+0x1e>
   335da:	mov    DWORD PTR [rax+0x30],edi
   335dd:	ret    
   335de:	push   rax
   335df:	lea    rdi,[rip+0x1bbba]        # 4f1a0 <powers.0+0x14e0>
   335e6:	xor    eax,eax
   335e8:	call   10580 <wget_error_printf_exit@plt>
   335ed:	nop    DWORD PTR [rax]

00000000000335f0 <yyset_in>:
   335f0:	endbr64 
   335f4:	mov    QWORD PTR [rsi+0x8],rdi
   335f8:	ret    
   335f9:	nop    DWORD PTR [rax+0x0]

0000000000033600 <yyset_out>:
   33600:	endbr64 
   33604:	mov    QWORD PTR [rsi+0x10],rdi
   33608:	ret    
   33609:	nop    DWORD PTR [rax+0x0]

0000000000033610 <yyget_debug>:
   33610:	endbr64 
   33614:	mov    eax,DWORD PTR [rdi+0x7c]
   33617:	ret    
   33618:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000033620 <yyset_debug>:
   33620:	endbr64 
   33624:	mov    DWORD PTR [rsi+0x7c],edi
   33627:	ret    
   33628:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000033630 <yylex_init>:
   33630:	endbr64 
   33634:	push   rbx
   33635:	test   rdi,rdi
   33638:	je     336e8 <yylex_init+0xb8>
   3363e:	mov    rbx,rdi
   33641:	xor    esi,esi
   33643:	mov    edi,0x90
   33648:	call   17560 <yyalloc>
   3364d:	mov    QWORD PTR [rbx],rax
   33650:	test   rax,rax
   33653:	je     336d0 <yylex_init+0xa0>
   33655:	lea    rdi,[rax+0x8]
   33659:	mov    QWORD PTR [rax],0x0
   33660:	mov    QWORD PTR [rax+0x88],0x0
   3366b:	and    rdi,0xfffffffffffffff8
   3366f:	sub    rax,rdi
   33672:	lea    ecx,[rax+0x90]
   33678:	xor    eax,eax
   3367a:	shr    ecx,0x3
   3367d:	rep stos QWORD PTR es:[rdi],rax
   33680:	mov    rax,QWORD PTR [rbx]
   33683:	mov    QWORD PTR [rax+0x28],0x0
   3368b:	mov    QWORD PTR [rax+0x18],0x0
   33693:	mov    QWORD PTR [rax+0x20],0x0
   3369b:	mov    QWORD PTR [rax+0x40],0x0
   336a3:	mov    QWORD PTR [rax+0x48],0x0
   336ab:	mov    QWORD PTR [rax+0x54],0x0
   336b3:	mov    QWORD PTR [rax+0x60],0x0
   336bb:	mov    QWORD PTR [rax+0x8],0x0
   336c3:	mov    QWORD PTR [rax+0x10],0x0
   336cb:	xor    eax,eax
   336cd:	pop    rbx
   336ce:	ret    
   336cf:	nop
   336d0:	call   104b0 <__errno_location@plt>
   336d5:	mov    DWORD PTR [rax],0xc
   336db:	mov    eax,0x1
   336e0:	pop    rbx
   336e1:	ret    
   336e2:	nop    WORD PTR [rax+rax*1+0x0]
   336e8:	call   104b0 <__errno_location@plt>
   336ed:	mov    DWORD PTR [rax],0x16
   336f3:	mov    eax,0x1
   336f8:	pop    rbx
   336f9:	ret    
   336fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000033700 <yylex_init_extra>:
   33700:	endbr64 
   33704:	push   rbp
   33705:	push   rbx
   33706:	sub    rsp,0xa8
   3370d:	mov    rax,QWORD PTR fs:0x28
   33716:	mov    QWORD PTR [rsp+0x98],rax
   3371e:	xor    eax,eax
   33720:	mov    QWORD PTR [rsp],rdi
   33724:	test   rsi,rsi
   33727:	je     33808 <yylex_init_extra+0x108>
   3372d:	mov    rbx,rsi
   33730:	mov    rbp,rdi
   33733:	mov    rsi,rsp
   33736:	mov    edi,0x90
   3373b:	call   17560 <yyalloc>
   33740:	mov    QWORD PTR [rbx],rax
   33743:	test   rax,rax
   33746:	je     337f0 <yylex_init_extra+0xf0>
   3374c:	lea    rdi,[rax+0x8]
   33750:	mov    QWORD PTR [rax],0x0
   33757:	mov    QWORD PTR [rax+0x88],0x0
   33762:	and    rdi,0xfffffffffffffff8
   33766:	sub    rax,rdi
   33769:	lea    ecx,[rax+0x90]
   3376f:	xor    eax,eax
   33771:	shr    ecx,0x3
   33774:	rep stos QWORD PTR es:[rdi],rax
   33777:	mov    rax,QWORD PTR [rbx]
   3377a:	mov    QWORD PTR [rax],rbp
   3377d:	mov    rax,QWORD PTR [rbx]
   33780:	mov    QWORD PTR [rax+0x28],0x0
   33788:	mov    QWORD PTR [rax+0x18],0x0
   33790:	mov    QWORD PTR [rax+0x20],0x0
   33798:	mov    QWORD PTR [rax+0x40],0x0
   337a0:	mov    QWORD PTR [rax+0x48],0x0
   337a8:	mov    QWORD PTR [rax+0x54],0x0
   337b0:	mov    QWORD PTR [rax+0x60],0x0
   337b8:	mov    QWORD PTR [rax+0x8],0x0
   337c0:	mov    QWORD PTR [rax+0x10],0x0
   337c8:	xor    eax,eax
   337ca:	mov    rdx,QWORD PTR [rsp+0x98]
   337d2:	sub    rdx,QWORD PTR fs:0x28
   337db:	jne    3381a <yylex_init_extra+0x11a>
   337dd:	add    rsp,0xa8
   337e4:	pop    rbx
   337e5:	pop    rbp
   337e6:	ret    
   337e7:	nop    WORD PTR [rax+rax*1+0x0]
   337f0:	call   104b0 <__errno_location@plt>
   337f5:	mov    DWORD PTR [rax],0xc
   337fb:	mov    eax,0x1
   33800:	jmp    337ca <yylex_init_extra+0xca>
   33802:	nop    WORD PTR [rax+rax*1+0x0]
   33808:	call   104b0 <__errno_location@plt>
   3380d:	mov    DWORD PTR [rax],0x16
   33813:	mov    eax,0x1
   33818:	jmp    337ca <yylex_init_extra+0xca>
   3381a:	call   11760 <__stack_chk_fail@plt>
   3381f:	nop

0000000000033820 <yylex_destroy>:
   33820:	endbr64 
   33824:	push   rbp
   33825:	mov    rbp,rdi
   33828:	mov    rdi,QWORD PTR [rdi+0x28]
   3382c:	test   rdi,rdi
   3382f:	jne    33864 <yylex_destroy+0x44>
   33831:	jmp    33890 <yylex_destroy+0x70>
   33833:	nop    DWORD PTR [rax+rax*1+0x0]
   33838:	mov    rdi,r8
   3383b:	mov    rsi,rbp
   3383e:	call   32570 <yy_delete_buffer>
   33843:	mov    rdx,QWORD PTR [rbp+0x18]
   33847:	mov    rax,QWORD PTR [rbp+0x28]
   3384b:	mov    rdi,rbp
   3384e:	mov    QWORD PTR [rax+rdx*8],0x0
   33856:	call   332c0 <yypop_buffer_state>
   3385b:	mov    rdi,QWORD PTR [rbp+0x28]
   3385f:	test   rdi,rdi
   33862:	je     33890 <yylex_destroy+0x70>
   33864:	mov    rax,QWORD PTR [rbp+0x18]
   33868:	mov    r8,QWORD PTR [rdi+rax*8]
   3386c:	test   r8,r8
   3386f:	jne    33838 <yylex_destroy+0x18>
   33871:	call   10430 <free@plt>
   33876:	mov    rdi,QWORD PTR [rbp+0x60]
   3387a:	call   10430 <free@plt>
   3387f:	mov    rdi,rbp
   33882:	call   10430 <free@plt>
   33887:	xor    eax,eax
   33889:	pop    rbp
   3388a:	ret    
   3388b:	nop    DWORD PTR [rax+rax*1+0x0]
   33890:	xor    edi,edi
   33892:	jmp    33871 <yylex_destroy+0x51>
   33894:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3389f:	nop

00000000000338a0 <yyfree>:
   338a0:	endbr64 
   338a4:	jmp    10430 <free@plt>
   338a9:	nop    DWORD PTR [rax+0x0]

00000000000338b0 <openat_proc_name>:
   338b0:	endbr64 
   338b4:	push   r14
   338b6:	push   r13
   338b8:	push   r12
   338ba:	push   rbp
   338bb:	push   rbx
   338bc:	mov    rbx,rdi
   338bf:	sub    rsp,0x30
   338c3:	mov    rax,QWORD PTR fs:0x28
   338cc:	mov    QWORD PTR [rsp+0x28],rax
   338d1:	xor    eax,eax
   338d3:	cmp    BYTE PTR [rdx],0x0
   338d6:	je     339a0 <openat_proc_name+0xf0>
   338dc:	mov    eax,DWORD PTR [rip+0x43dc6]        # 776a8 <proc_status.0>
   338e2:	mov    r12d,esi
   338e5:	mov    rbp,rdx
   338e8:	test   eax,eax
   338ea:	je     33978 <openat_proc_name+0xc8>
   338f0:	test   eax,eax
   338f2:	js     3396d <openat_proc_name+0xbd>
   338f4:	mov    rdi,rbp
   338f7:	call   10ab0 <strlen@plt>
   338fc:	lea    rdi,[rax+0x1b]
   33900:	cmp    rdi,0xfc0
   33907:	ja     33960 <openat_proc_name+0xb0>
   33909:	mov    r8d,r12d
   3390c:	lea    rcx,[rip+0x24650]        # 57f63 <yy_accept+0x8c3>
   33913:	mov    rdi,rbx
   33916:	xor    eax,eax
   33918:	mov    rdx,0xffffffffffffffff
   3391f:	mov    esi,0x1
   33924:	call   10dd0 <__sprintf_chk@plt>
   33929:	mov    rsi,rbp
   3392c:	movsxd rdi,eax
   3392f:	add    rdi,rbx
   33932:	call   114e0 <strcpy@plt>
   33937:	mov    rax,rbx
   3393a:	mov    rdx,QWORD PTR [rsp+0x28]
   3393f:	sub    rdx,QWORD PTR fs:0x28
   33948:	jne    339ff <openat_proc_name+0x14f>
   3394e:	add    rsp,0x30
   33952:	pop    rbx
   33953:	pop    rbp
   33954:	pop    r12
   33956:	pop    r13
   33958:	pop    r14
   3395a:	ret    
   3395b:	nop    DWORD PTR [rax+rax*1+0x0]
   33960:	call   11af0 <malloc@plt>
   33965:	mov    rbx,rax
   33968:	test   rax,rax
   3396b:	jne    33909 <openat_proc_name+0x59>
   3396d:	xor    eax,eax
   3396f:	jmp    3393a <openat_proc_name+0x8a>
   33971:	nop    DWORD PTR [rax+0x0]
   33978:	mov    esi,0x90900
   3397d:	lea    rdi,[rip+0x245ba]        # 57f3e <yy_accept+0x89e>
   33984:	call   11070 <open@plt>
   33989:	mov    r13d,eax
   3398c:	test   eax,eax
   3398e:	jns    339b0 <openat_proc_name+0x100>
   33990:	mov    DWORD PTR [rip+0x43d0e],0xffffffff        # 776a8 <proc_status.0>
   3399a:	xor    eax,eax
   3399c:	jmp    3393a <openat_proc_name+0x8a>
   3399e:	xchg   ax,ax
   339a0:	mov    BYTE PTR [rdi],0x0
   339a3:	mov    rax,rdi
   339a6:	jmp    3393a <openat_proc_name+0x8a>
   339a8:	nop    DWORD PTR [rax+rax*1+0x0]
   339b0:	mov    r14,rsp
   339b3:	mov    r8d,eax
   339b6:	lea    rcx,[rip+0x2458f]        # 57f4c <yy_accept+0x8ac>
   339bd:	xor    eax,eax
   339bf:	mov    edx,0x20
   339c4:	mov    esi,0x1
   339c9:	mov    rdi,r14
   339cc:	call   10dd0 <__sprintf_chk@plt>
   339d1:	xor    esi,esi
   339d3:	mov    rdi,r14
   339d6:	call   12200 <access@plt>
   339db:	mov    edi,r13d
   339de:	cmp    eax,0x1
   339e1:	sbb    eax,eax
   339e3:	and    eax,0x2
   339e6:	sub    eax,0x1
   339e9:	mov    DWORD PTR [rip+0x43cb9],eax        # 776a8 <proc_status.0>
   339ef:	call   12740 <close@plt>
   339f4:	mov    eax,DWORD PTR [rip+0x43cae]        # 776a8 <proc_status.0>
   339fa:	jmp    338f0 <openat_proc_name+0x40>
   339ff:	call   11760 <__stack_chk_fail@plt>
   33a04:	cs nop WORD PTR [rax+rax*1+0x0]
   33a0e:	xchg   ax,ax

0000000000033a10 <last_component>:
   33a10:	endbr64 
   33a14:	movzx  edx,BYTE PTR [rdi]
   33a17:	mov    rax,rdi
   33a1a:	cmp    dl,0x2f
   33a1d:	jne    33a2d <last_component+0x1d>
   33a1f:	nop
   33a20:	movzx  edx,BYTE PTR [rax+0x1]
   33a24:	add    rax,0x1
   33a28:	cmp    dl,0x2f
   33a2b:	je     33a20 <last_component+0x10>
   33a2d:	test   dl,dl
   33a2f:	je     33a6c <last_component+0x5c>
   33a31:	mov    rcx,rax
   33a34:	xor    esi,esi
   33a36:	jmp    33a56 <last_component+0x46>
   33a38:	nop    DWORD PTR [rax+rax*1+0x0]
   33a40:	test   sil,sil
   33a43:	je     33a4a <last_component+0x3a>
   33a45:	mov    rax,rcx
   33a48:	xor    esi,esi
   33a4a:	movzx  edx,BYTE PTR [rcx+0x1]
   33a4e:	add    rcx,0x1
   33a52:	test   dl,dl
   33a54:	je     33a6c <last_component+0x5c>
   33a56:	cmp    dl,0x2f
   33a59:	jne    33a40 <last_component+0x30>
   33a5b:	movzx  edx,BYTE PTR [rcx+0x1]
   33a5f:	add    rcx,0x1
   33a63:	mov    esi,0x1
   33a68:	test   dl,dl
   33a6a:	jne    33a56 <last_component+0x46>
   33a6c:	ret    
   33a6d:	nop    DWORD PTR [rax]

0000000000033a70 <base_len>:
   33a70:	endbr64 
   33a74:	push   rbx
   33a75:	mov    rbx,rdi
   33a78:	call   10ab0 <strlen@plt>
   33a7d:	cmp    rax,0x1
   33a81:	jbe    33a8e <base_len+0x1e>
   33a83:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
   33a88:	lea    rdx,[rax-0x1]
   33a8c:	je     33a90 <base_len+0x20>
   33a8e:	pop    rbx
   33a8f:	ret    
   33a90:	mov    rax,rdx
   33a93:	jmp    33a7d <base_len+0xd>
   33a95:	cs nop WORD PTR [rax+rax*1+0x0]
   33a9f:	nop

0000000000033aa0 <__gl_setmode>:
   33aa0:	endbr64 
   33aa4:	xor    eax,eax
   33aa6:	ret    
   33aa7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000033ab0 <set_binary_mode>:
   33ab0:	endbr64 
   33ab4:	xor    eax,eax
   33ab6:	ret    
   33ab7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000033ac0 <rotl64>:
   33ac0:	endbr64 
   33ac4:	mov    rax,rdi
   33ac7:	mov    ecx,esi
   33ac9:	rol    rax,cl
   33acc:	ret    
   33acd:	nop    DWORD PTR [rax]

0000000000033ad0 <rotr64>:
   33ad0:	endbr64 
   33ad4:	mov    rax,rdi
   33ad7:	mov    ecx,esi
   33ad9:	ror    rax,cl
   33adc:	ret    
   33add:	nop    DWORD PTR [rax]

0000000000033ae0 <rotl32>:
   33ae0:	endbr64 
   33ae4:	mov    eax,edi
   33ae6:	mov    ecx,esi
   33ae8:	rol    eax,cl
   33aea:	ret    
   33aeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000033af0 <rotr32>:
   33af0:	endbr64 
   33af4:	mov    eax,edi
   33af6:	mov    ecx,esi
   33af8:	ror    eax,cl
   33afa:	ret    
   33afb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000033b00 <rotl_sz>:
   33b00:	endbr64 
   33b04:	mov    rax,rdi
   33b07:	mov    ecx,esi
   33b09:	rol    rax,cl
   33b0c:	ret    
   33b0d:	nop    DWORD PTR [rax]

0000000000033b10 <rotr_sz>:
   33b10:	endbr64 
   33b14:	mov    rax,rdi
   33b17:	mov    ecx,esi
   33b19:	ror    rax,cl
   33b1c:	ret    
   33b1d:	nop    DWORD PTR [rax]

0000000000033b20 <rotl16>:
   33b20:	endbr64 
   33b24:	mov    eax,edi
   33b26:	mov    ecx,esi
   33b28:	rol    ax,cl
   33b2b:	ret    
   33b2c:	nop    DWORD PTR [rax+0x0]

0000000000033b30 <rotr16>:
   33b30:	endbr64 
   33b34:	mov    eax,edi
   33b36:	mov    ecx,esi
   33b38:	ror    ax,cl
   33b3b:	ret    
   33b3c:	nop    DWORD PTR [rax+0x0]

0000000000033b40 <rotl8>:
   33b40:	endbr64 
   33b44:	mov    eax,edi
   33b46:	mov    ecx,esi
   33b48:	rol    al,cl
   33b4a:	ret    
   33b4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000033b50 <rotr8>:
   33b50:	endbr64 
   33b54:	mov    eax,edi
   33b56:	mov    ecx,esi
   33b58:	ror    al,cl
   33b5a:	ret    
   33b5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000033b60 <btoc32>:
   33b60:	endbr64 
   33b64:	jmp    33b70 <rpl_btowc>
   33b69:	nop    DWORD PTR [rax+0x0]

0000000000033b70 <rpl_btowc>:
   33b70:	endbr64 
   33b74:	push   r12
   33b76:	mov    r12d,0xffffffff
   33b7c:	sub    rsp,0x20
   33b80:	mov    rax,QWORD PTR fs:0x28
   33b89:	mov    QWORD PTR [rsp+0x18],rax
   33b8e:	xor    eax,eax
   33b90:	cmp    edi,0xffffffff
   33b93:	je     33bc6 <rpl_btowc+0x56>
   33b95:	mov    BYTE PTR [rsp+0x17],dil
   33b9a:	lea    rcx,[rsp+0xc]
   33b9f:	lea    rsi,[rsp+0x17]
   33ba4:	mov    edx,0x1
   33ba9:	mov    QWORD PTR [rsp+0xc],0x0
   33bb2:	lea    rdi,[rsp+0x8]
   33bb7:	call   44c00 <rpl_mbrtowc>
   33bbc:	cmp    rax,0xfffffffffffffffe
   33bc0:	cmovb  r12d,DWORD PTR [rsp+0x8]
   33bc6:	mov    rax,QWORD PTR [rsp+0x18]
   33bcb:	sub    rax,QWORD PTR fs:0x28
   33bd4:	jne    33be0 <rpl_btowc+0x70>
   33bd6:	add    rsp,0x20
   33bda:	mov    eax,r12d
   33bdd:	pop    r12
   33bdf:	ret    
   33be0:	call   11760 <__stack_chk_fail@plt>
   33be5:	cs nop WORD PTR [rax+rax*1+0x0]
   33bef:	nop

0000000000033bf0 <c_isalnum>:
   33bf0:	endbr64 
   33bf4:	cmp    edi,0x5a
   33bf7:	jg     33c10 <c_isalnum+0x20>
   33bf9:	mov    eax,0x1
   33bfe:	cmp    edi,0x40
   33c01:	jg     33c19 <c_isalnum+0x29>
   33c03:	sub    edi,0x30
   33c06:	cmp    edi,0x9
   33c09:	setbe  al
   33c0c:	ret    
   33c0d:	nop    DWORD PTR [rax]
   33c10:	sub    edi,0x61
   33c13:	cmp    edi,0x19
   33c16:	setbe  al
   33c19:	ret    
   33c1a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000033c20 <c_isalpha>:
   33c20:	endbr64 
   33c24:	cmp    edi,0x5a
   33c27:	jg     33c30 <c_isalpha+0x10>
   33c29:	cmp    edi,0x40
   33c2c:	setg   al
   33c2f:	ret    
   33c30:	sub    edi,0x61
   33c33:	cmp    edi,0x19
   33c36:	setbe  al
   33c39:	ret    
   33c3a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000033c40 <c_isascii>:
   33c40:	endbr64 
   33c44:	cmp    edi,0x7f
   33c47:	setbe  al
   33c4a:	ret    
   33c4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000033c50 <c_isblank>:
   33c50:	endbr64 
   33c54:	cmp    edi,0x20
   33c57:	sete   al
   33c5a:	cmp    edi,0x9
   33c5d:	sete   dl
   33c60:	or     eax,edx
   33c62:	ret    
   33c63:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   33c6e:	xchg   ax,ax

0000000000033c70 <c_iscntrl>:
   33c70:	endbr64 
   33c74:	cmp    edi,0x1f
   33c77:	jg     33c88 <c_iscntrl+0x18>
   33c79:	not    edi
   33c7b:	shr    edi,0x1f
   33c7e:	mov    eax,edi
   33c80:	ret    
   33c81:	nop    DWORD PTR [rax+0x0]
   33c88:	cmp    edi,0x7f
   33c8b:	sete   al
   33c8e:	ret    
   33c8f:	nop

0000000000033c90 <c_isdigit>:
   33c90:	endbr64 
   33c94:	sub    edi,0x30
   33c97:	cmp    edi,0x9
   33c9a:	setbe  al
   33c9d:	ret    
   33c9e:	xchg   ax,ax

0000000000033ca0 <c_isgraph>:
   33ca0:	endbr64 
   33ca4:	sub    edi,0x21
   33ca7:	cmp    edi,0x5d
   33caa:	setbe  al
   33cad:	ret    
   33cae:	xchg   ax,ax

0000000000033cb0 <c_islower>:
   33cb0:	endbr64 
   33cb4:	sub    edi,0x61
   33cb7:	cmp    edi,0x19
   33cba:	setbe  al
   33cbd:	ret    
   33cbe:	xchg   ax,ax

0000000000033cc0 <c_isprint>:
   33cc0:	endbr64 
   33cc4:	sub    edi,0x20
   33cc7:	cmp    edi,0x5e
   33cca:	setbe  al
   33ccd:	ret    
   33cce:	xchg   ax,ax

0000000000033cd0 <c_ispunct>:
   33cd0:	endbr64 
   33cd4:	cmp    edi,0x60
   33cd7:	jg     33cf0 <c_ispunct+0x20>
   33cd9:	cmp    edi,0x5a
   33cdc:	jg     33d10 <c_ispunct+0x40>
   33cde:	cmp    edi,0x2f
   33ce1:	jg     33d00 <c_ispunct+0x30>
   33ce3:	cmp    edi,0x20
   33ce6:	setg   al
   33ce9:	ret    
   33cea:	nop    WORD PTR [rax+rax*1+0x0]
   33cf0:	sub    edi,0x7b
   33cf3:	cmp    edi,0x3
   33cf6:	setbe  al
   33cf9:	ret    
   33cfa:	nop    WORD PTR [rax+rax*1+0x0]
   33d00:	sub    edi,0x3a
   33d03:	cmp    edi,0x6
   33d06:	setbe  al
   33d09:	ret    
   33d0a:	nop    WORD PTR [rax+rax*1+0x0]
   33d10:	mov    eax,0x1
   33d15:	ret    
   33d16:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000033d20 <c_isspace>:
   33d20:	endbr64 
   33d24:	cmp    edi,0xd
   33d27:	jg     33d30 <c_isspace+0x10>
   33d29:	cmp    edi,0x8
   33d2c:	setg   al
   33d2f:	ret    
   33d30:	cmp    edi,0x20
   33d33:	sete   al
   33d36:	ret    
   33d37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000033d40 <c_isupper>:
   33d40:	endbr64 
   33d44:	sub    edi,0x41
   33d47:	cmp    edi,0x19
   33d4a:	setbe  al
   33d4d:	ret    
   33d4e:	xchg   ax,ax

0000000000033d50 <c_isxdigit>:
   33d50:	endbr64 
   33d54:	lea    ecx,[rdi-0x30]
   33d57:	cmp    ecx,0x36
   33d5a:	ja     33d70 <c_isxdigit+0x20>
   33d5c:	movabs rax,0x7e0000007e03ff
   33d66:	shr    rax,cl
   33d69:	and    eax,0x1
   33d6c:	ret    
   33d6d:	nop    DWORD PTR [rax]
   33d70:	xor    eax,eax
   33d72:	ret    
   33d73:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   33d7e:	xchg   ax,ax

0000000000033d80 <c_tolower>:
   33d80:	endbr64 
   33d84:	lea    ecx,[rdi-0x41]
   33d87:	mov    eax,edi
   33d89:	lea    edx,[rdi+0x20]
   33d8c:	cmp    ecx,0x1a
   33d8f:	cmovb  eax,edx
   33d92:	ret    
   33d93:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   33d9e:	xchg   ax,ax

0000000000033da0 <c_toupper>:
   33da0:	endbr64 
   33da4:	lea    ecx,[rdi-0x61]
   33da7:	mov    eax,edi
   33da9:	lea    edx,[rdi-0x20]
   33dac:	cmp    ecx,0x1a
   33daf:	cmovb  eax,edx
   33db2:	ret    
   33db3:	cs nop WORD PTR [rax+rax*1+0x0]
   33dbd:	nop    DWORD PTR [rax]

0000000000033dc0 <c_strcasecmp>:
   33dc0:	endbr64 
   33dc4:	cmp    rdi,rsi
   33dc7:	je     33e20 <c_strcasecmp+0x60>
   33dc9:	push   rbx
   33dca:	xor    edx,edx
   33dcc:	jmp    33df1 <c_strcasecmp+0x31>
   33dce:	xchg   ax,ax
   33dd0:	add    eax,0x20
   33dd3:	add    r8d,0x20
   33dd7:	cmp    r10d,0x19
   33ddb:	ja     33de8 <c_strcasecmp+0x28>
   33ddd:	lea    ebx,[r9+0x20]
   33de1:	add    ecx,0x20
   33de4:	test   eax,eax
   33de6:	je     33e1b <c_strcasecmp+0x5b>
   33de8:	add    rdx,0x1
   33dec:	cmp    r8b,cl
   33def:	jne    33e1b <c_strcasecmp+0x5b>
   33df1:	movzx  eax,BYTE PTR [rdi+rdx*1]
   33df5:	movzx  r9d,BYTE PTR [rsi+rdx*1]
   33dfa:	lea    r11d,[rax-0x41]
   33dfe:	mov    r8d,eax
   33e01:	mov    ecx,r9d
   33e04:	mov    ebx,r9d
   33e07:	lea    r10d,[r9-0x41]
   33e0b:	cmp    r11d,0x19
   33e0f:	jbe    33dd0 <c_strcasecmp+0x10>
   33e11:	cmp    r10d,0x19
   33e15:	jbe    33ddd <c_strcasecmp+0x1d>
   33e17:	test   eax,eax
   33e19:	jne    33de8 <c_strcasecmp+0x28>
   33e1b:	sub    eax,ebx
   33e1d:	pop    rbx
   33e1e:	ret    
   33e1f:	nop
   33e20:	xor    eax,eax
   33e22:	ret    
   33e23:	cs nop WORD PTR [rax+rax*1+0x0]
   33e2d:	nop    DWORD PTR [rax]

0000000000033e30 <c_strncasecmp>:
   33e30:	endbr64 
   33e34:	cmp    rdi,rsi
   33e37:	je     33ea0 <c_strncasecmp+0x70>
   33e39:	test   rdx,rdx
   33e3c:	je     33ea0 <c_strncasecmp+0x70>
   33e3e:	sub    rdx,0x1
   33e42:	xor    ecx,ecx
   33e44:	jmp    33e5d <c_strncasecmp+0x2d>
   33e46:	cs nop WORD PTR [rax+rax*1+0x0]
   33e50:	test   eax,eax
   33e52:	je     33e94 <c_strncasecmp+0x64>
   33e54:	add    rcx,0x1
   33e58:	cmp    r9b,r8b
   33e5b:	jne    33e94 <c_strncasecmp+0x64>
   33e5d:	movzx  eax,BYTE PTR [rdi+rcx*1]
   33e61:	lea    r8d,[rax-0x41]
   33e65:	mov    r9d,eax
   33e68:	cmp    r8d,0x19
   33e6c:	ja     33e75 <c_strncasecmp+0x45>
   33e6e:	add    eax,0x20
   33e71:	add    r9d,0x20
   33e75:	movzx  r10d,BYTE PTR [rsi+rcx*1]
   33e7a:	lea    r11d,[r10-0x41]
   33e7e:	mov    r8d,r10d
   33e81:	cmp    r11d,0x19
   33e85:	ja     33e8f <c_strncasecmp+0x5f>
   33e87:	add    r10d,0x20
   33e8b:	add    r8d,0x20
   33e8f:	cmp    rcx,rdx
   33e92:	jne    33e50 <c_strncasecmp+0x20>
   33e94:	sub    eax,r10d
   33e97:	ret    
   33e98:	nop    DWORD PTR [rax+rax*1+0x0]
   33ea0:	xor    eax,eax
   33ea2:	ret    
   33ea3:	cs nop WORD PTR [rax+rax*1+0x0]
   33ead:	nop    DWORD PTR [rax]

0000000000033eb0 <critical_factorization.part.0>:
   33eb0:	push   r13
   33eb2:	mov    r10,rdx
   33eb5:	push   r12
   33eb7:	push   rbp
   33eb8:	push   rbx
   33eb9:	cmp    rsi,0x1
   33ebd:	jbe    34040 <critical_factorization.part.0+0x190>
   33ec3:	mov    r9,rsi
   33ec6:	xor    ebx,ebx
   33ec8:	mov    r12d,0x1
   33ece:	mov    r11d,0x1
   33ed4:	mov    rax,0xffffffffffffffff
   33edb:	mov    esi,0x1
   33ee0:	jmp    33f00 <critical_factorization.part.0+0x50>
   33ee2:	nop    WORD PTR [rax+rax*1+0x0]
   33ee8:	mov    r12,rsi
   33eeb:	mov    rbx,rsi
   33eee:	mov    r11d,0x1
   33ef4:	sub    r12,rax
   33ef7:	lea    rsi,[rbx+r11*1]
   33efb:	cmp    rsi,r9
   33efe:	jae    33f54 <critical_factorization.part.0+0xa4>
   33f00:	movzx  edx,BYTE PTR [rdi+rsi*1]
   33f04:	mov    ecx,edx
   33f06:	sub    edx,0x41
   33f09:	cmp    edx,0x1a
   33f0c:	lea    r8d,[rcx+0x20]
   33f10:	lea    rdx,[rdi+rax*1]
   33f14:	cmovb  ecx,r8d
   33f18:	movzx  r8d,BYTE PTR [rdx+r11*1]
   33f1d:	mov    edx,r8d
   33f20:	sub    r8d,0x41
   33f24:	lea    ebp,[rdx+0x20]
   33f27:	cmp    r8d,0x1a
   33f2b:	cmovb  edx,ebp
   33f2e:	cmp    cl,dl
   33f30:	jb     33ee8 <critical_factorization.part.0+0x38>
   33f32:	je     34000 <critical_factorization.part.0+0x150>
   33f38:	mov    rax,rbx
   33f3b:	mov    r11d,0x1
   33f41:	add    rbx,0x1
   33f45:	mov    r12d,0x1
   33f4b:	lea    rsi,[rbx+r11*1]
   33f4f:	cmp    rsi,r9
   33f52:	jb     33f00 <critical_factorization.part.0+0x50>
   33f54:	mov    QWORD PTR [r10],r12
   33f57:	xor    ebx,ebx
   33f59:	mov    ebp,0x1
   33f5e:	mov    r11d,0x1
   33f64:	mov    r12,0xffffffffffffffff
   33f6b:	mov    esi,0x1
   33f70:	jmp    33f90 <critical_factorization.part.0+0xe0>
   33f72:	nop    WORD PTR [rax+rax*1+0x0]
   33f78:	mov    rbp,rsi
   33f7b:	mov    rbx,rsi
   33f7e:	mov    r11d,0x1
   33f84:	sub    rbp,r12
   33f87:	lea    rsi,[rbx+r11*1]
   33f8b:	cmp    r9,rsi
   33f8e:	jbe    33fe1 <critical_factorization.part.0+0x131>
   33f90:	movzx  edx,BYTE PTR [rdi+rsi*1]
   33f94:	mov    ecx,edx
   33f96:	sub    edx,0x41
   33f99:	cmp    edx,0x1a
   33f9c:	lea    r8d,[rcx+0x20]
   33fa0:	lea    rdx,[rdi+r12*1]
   33fa4:	cmovb  ecx,r8d
   33fa8:	movzx  r8d,BYTE PTR [rdx+r11*1]
   33fad:	mov    edx,r8d
   33fb0:	sub    r8d,0x41
   33fb4:	lea    r13d,[rdx+0x20]
   33fb8:	cmp    r8d,0x1a
   33fbc:	cmovb  edx,r13d
   33fc0:	cmp    cl,dl
   33fc2:	ja     33f78 <critical_factorization.part.0+0xc8>
   33fc4:	je     34010 <critical_factorization.part.0+0x160>
   33fc6:	mov    r12,rbx
   33fc9:	mov    r11d,0x1
   33fcf:	add    rbx,0x1
   33fd3:	mov    ebp,0x1
   33fd8:	lea    rsi,[rbx+r11*1]
   33fdc:	cmp    r9,rsi
   33fdf:	ja     33f90 <critical_factorization.part.0+0xe0>
   33fe1:	add    r12,0x1
   33fe5:	add    rax,0x1
   33fe9:	cmp    r12,rax
   33fec:	jb     33ff4 <critical_factorization.part.0+0x144>
   33fee:	mov    QWORD PTR [r10],rbp
   33ff1:	mov    rax,r12
   33ff4:	pop    rbx
   33ff5:	pop    rbp
   33ff6:	pop    r12
   33ff8:	pop    r13
   33ffa:	ret    
   33ffb:	nop    DWORD PTR [rax+rax*1+0x0]
   34000:	cmp    r12,r11
   34003:	je     34020 <critical_factorization.part.0+0x170>
   34005:	add    r11,0x1
   34009:	jmp    33ef7 <critical_factorization.part.0+0x47>
   3400e:	xchg   ax,ax
   34010:	cmp    rbp,r11
   34013:	je     34030 <critical_factorization.part.0+0x180>
   34015:	add    r11,0x1
   34019:	jmp    33f87 <critical_factorization.part.0+0xd7>
   3401e:	xchg   ax,ax
   34020:	add    rbx,r12
   34023:	mov    r11d,0x1
   34029:	jmp    33ef7 <critical_factorization.part.0+0x47>
   3402e:	xchg   ax,ax
   34030:	add    rbx,rbp
   34033:	mov    r11d,0x1
   34039:	jmp    33f87 <critical_factorization.part.0+0xd7>
   3403e:	xchg   ax,ax
   34040:	xor    r12d,r12d
   34043:	mov    ebp,0x1
   34048:	jmp    33fee <critical_factorization.part.0+0x13e>
   3404a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000034050 <two_way_long_needle>:
   34050:	push   r15
   34052:	push   r14
   34054:	push   r13
   34056:	mov    r13,rdx
   34059:	push   r12
   3405b:	mov    r12,rsi
   3405e:	push   rbp
   3405f:	mov    rbp,rdi
   34062:	push   rbx
   34063:	mov    rbx,rcx
   34066:	sub    rsp,0x858
   3406d:	mov    rax,QWORD PTR fs:0x28
   34076:	mov    QWORD PTR [rsp+0x848],rax
   3407e:	xor    eax,eax
   34080:	cmp    rcx,0x2
   34084:	jbe    34438 <two_way_long_needle+0x3e8>
   3408a:	lea    rdx,[rsp+0x38]
   3408f:	mov    rsi,rcx
   34092:	mov    rdi,r13
   34095:	call   33eb0 <critical_factorization.part.0>
   3409a:	mov    QWORD PTR [rsp],rax
   3409e:	mov    rax,QWORD PTR [rsp+0x38]
   340a3:	mov    QWORD PTR [rsp+0x10],rax
   340a8:	lea    rax,[rsp+0x40]
   340ad:	lea    rdx,[rsp+0x840]
   340b5:	nop    DWORD PTR [rax]
   340b8:	mov    QWORD PTR [rax],rbx
   340bb:	add    rax,0x8
   340bf:	cmp    rdx,rax
   340c2:	jne    340b8 <two_way_long_needle+0x68>
   340c4:	mov    rax,QWORD PTR [rsp+0x10]
   340c9:	lea    r9,[r13+rax*1+0x0]
   340ce:	test   rbx,rbx
   340d1:	je     34221 <two_way_long_needle+0x1d1>
   340d7:	lea    rcx,[rbx-0x1]
   340db:	lea    r10,[rbx+r13*1]
   340df:	mov    rdx,r13
   340e2:	lea    rdi,[r13+rcx*1+0x0]
   340e7:	nop    WORD PTR [rax+rax*1+0x0]
   340f0:	movzx  eax,BYTE PTR [rdx]
   340f3:	lea    r8d,[rax-0x41]
   340f7:	lea    esi,[rax+0x20]
   340fa:	cmp    r8d,0x1a
   340fe:	cmovb  eax,esi
   34101:	mov    rsi,rdi
   34104:	sub    rsi,rdx
   34107:	add    rdx,0x1
   3410b:	cdqe   
   3410d:	mov    QWORD PTR [rsp+rax*8+0x40],rsi
   34112:	cmp    r10,rdx
   34115:	jne    340f0 <two_way_long_needle+0xa0>
   34117:	mov    rdx,QWORD PTR [rsp]
   3411b:	mov    rsi,r9
   3411e:	mov    rdi,r13
   34121:	mov    QWORD PTR [rsp+0x8],rcx
   34126:	call   33e30 <c_strncasecmp>
   3412b:	test   eax,eax
   3412d:	je     342bf <two_way_long_needle+0x26f>
   34133:	mov    rcx,QWORD PTR [rsp]
   34137:	mov    rax,rbx
   3413a:	lea    r14,[rbx-0x1]
   3413e:	mov    rdi,r12
   34141:	mov    r12,rbp
   34144:	mov    rbp,rbx
   34147:	mov    rbx,r14
   3414a:	mov    r14,r13
   3414d:	sub    rax,rcx
   34150:	cmp    rax,rcx
   34153:	cmovb  rax,rcx
   34157:	xor    r15d,r15d
   3415a:	add    rax,0x1
   3415e:	mov    QWORD PTR [rsp+0x10],rax
   34163:	mov    eax,0x1
   34168:	sub    rax,rcx
   3416b:	mov    QWORD PTR [rsp+0x8],rax
   34170:	jmp    3417e <two_way_long_needle+0x12e>
   34172:	nop    WORD PTR [rax+rax*1+0x0]
   34178:	add    r15,rax
   3417b:	mov    rdi,r13
   3417e:	lea    r13,[r15+rbp*1]
   34182:	xor    esi,esi
   34184:	mov    rdx,r13
   34187:	sub    rdx,rdi
   3418a:	add    rdi,r12
   3418d:	call   11750 <memchr@plt>
   34192:	test   rax,rax
   34195:	jne    34238 <two_way_long_needle+0x1e8>
   3419b:	test   r13,r13
   3419e:	je     34238 <two_way_long_needle+0x1e8>
   341a4:	movzx  eax,BYTE PTR [r12+r13*1-0x1]
   341aa:	lea    esi,[rax-0x41]
   341ad:	lea    edx,[rax+0x20]
   341b0:	cmp    esi,0x1a
   341b3:	cmovb  eax,edx
   341b6:	cdqe   
   341b8:	mov    rax,QWORD PTR [rsp+rax*8+0x40]
   341bd:	test   rax,rax
   341c0:	jne    34178 <two_way_long_needle+0x128>
   341c2:	mov    rax,QWORD PTR [rsp]
   341c6:	lea    rdi,[r12+r15*1]
   341ca:	mov    rsi,rax
   341cd:	cmp    rbx,rax
   341d0:	ja     341e9 <two_way_long_needle+0x199>
   341d2:	jmp    34268 <two_way_long_needle+0x218>
   341d7:	nop    WORD PTR [rax+rax*1+0x0]
   341e0:	add    rsi,0x1
   341e4:	cmp    rbx,rsi
   341e7:	jbe    34268 <two_way_long_needle+0x218>
   341e9:	movzx  eax,BYTE PTR [r14+rsi*1]
   341ee:	lea    r9d,[rax-0x41]
   341f2:	lea    edx,[rax+0x20]
   341f5:	cmp    r9d,0x1a
   341f9:	cmovb  eax,edx
   341fc:	movzx  edx,BYTE PTR [rdi+rsi*1]
   34200:	lea    r10d,[rdx-0x41]
   34204:	lea    r9d,[rdx+0x20]
   34208:	cmp    r10d,0x1a
   3420c:	cmovb  edx,r9d
   34210:	cmp    edx,eax
   34212:	je     341e0 <two_way_long_needle+0x190>
   34214:	add    r15,QWORD PTR [rsp+0x8]
   34219:	add    r15,rsi
   3421c:	jmp    3417b <two_way_long_needle+0x12b>
   34221:	mov    rdx,QWORD PTR [rsp]
   34225:	mov    rsi,r9
   34228:	mov    rdi,r13
   3422b:	call   33e30 <c_strncasecmp>
   34230:	test   eax,eax
   34232:	jne    34133 <two_way_long_needle+0xe3>
   34238:	xor    eax,eax
   3423a:	mov    rdx,QWORD PTR [rsp+0x848]
   34242:	sub    rdx,QWORD PTR fs:0x28
   3424b:	jne    3446d <two_way_long_needle+0x41d>
   34251:	add    rsp,0x858
   34258:	pop    rbx
   34259:	pop    rbp
   3425a:	pop    r12
   3425c:	pop    r13
   3425e:	pop    r14
   34260:	pop    r15
   34262:	ret    
   34263:	nop    DWORD PTR [rax+rax*1+0x0]
   34268:	mov    rax,QWORD PTR [rsp]
   3426c:	lea    rsi,[rax-0x1]
   34270:	test   rax,rax
   34273:	jne    3428a <two_way_long_needle+0x23a>
   34275:	jmp    34465 <two_way_long_needle+0x415>
   3427a:	nop    WORD PTR [rax+rax*1+0x0]
   34280:	sub    rsi,0x1
   34284:	jb     34465 <two_way_long_needle+0x415>
   3428a:	movzx  eax,BYTE PTR [r14+rsi*1]
   3428f:	lea    r9d,[rax-0x41]
   34293:	lea    edx,[rax+0x20]
   34296:	cmp    r9d,0x1a
   3429a:	cmovb  eax,edx
   3429d:	movzx  edx,BYTE PTR [rdi+rsi*1]
   342a1:	lea    r10d,[rdx-0x41]
   342a5:	lea    r9d,[rdx+0x20]
   342a9:	cmp    r10d,0x1a
   342ad:	cmovb  edx,r9d
   342b1:	cmp    edx,eax
   342b3:	je     34280 <two_way_long_needle+0x230>
   342b5:	add    r15,QWORD PTR [rsp+0x10]
   342ba:	jmp    3417b <two_way_long_needle+0x12b>
   342bf:	mov    rdi,QWORD PTR [rsp]
   342c3:	mov    eax,0x1
   342c8:	xor    r9d,r9d
   342cb:	xor    r15d,r15d
   342ce:	mov    rcx,QWORD PTR [rsp+0x8]
   342d3:	mov    QWORD PTR [rsp+0x8],rbx
   342d8:	sub    rax,rdi
   342db:	mov    QWORD PTR [rsp+0x20],rax
   342e0:	lea    rax,[rdi-0x1]
   342e4:	mov    rdi,r12
   342e7:	mov    r12,rcx
   342ea:	mov    QWORD PTR [rsp+0x28],rax
   342ef:	mov    rax,rbx
   342f2:	sub    rax,QWORD PTR [rsp+0x10]
   342f7:	mov    rbx,rbp
   342fa:	mov    QWORD PTR [rsp+0x18],rax
   342ff:	mov    rbp,r9
   34302:	jmp    34320 <two_way_long_needle+0x2d0>
   34304:	nop    DWORD PTR [rax+0x0]
   34308:	cmp    rax,QWORD PTR [rsp+0x10]
   3430d:	jae    34318 <two_way_long_needle+0x2c8>
   3430f:	test   rbp,rbp
   34312:	cmovne rax,QWORD PTR [rsp+0x18]
   34318:	add    r15,rax
   3431b:	xor    ebp,ebp
   3431d:	mov    rdi,r14
   34320:	mov    rax,QWORD PTR [rsp+0x8]
   34325:	xor    esi,esi
   34327:	lea    r14,[r15+rax*1]
   3432b:	mov    rdx,r14
   3432e:	sub    rdx,rdi
   34331:	add    rdi,rbx
   34334:	call   11750 <memchr@plt>
   34339:	test   rax,rax
   3433c:	jne    34238 <two_way_long_needle+0x1e8>
   34342:	test   r14,r14
   34345:	je     34238 <two_way_long_needle+0x1e8>
   3434b:	movzx  eax,BYTE PTR [rbx+r14*1-0x1]
   34351:	lea    esi,[rax-0x41]
   34354:	lea    edx,[rax+0x20]
   34357:	cmp    esi,0x1a
   3435a:	cmovb  eax,edx
   3435d:	cdqe   
   3435f:	mov    rax,QWORD PTR [rsp+rax*8+0x40]
   34364:	test   rax,rax
   34367:	jne    34308 <two_way_long_needle+0x2b8>
   34369:	mov    rax,QWORD PTR [rsp]
   3436d:	lea    rdi,[rbx+r15*1]
   34371:	cmp    rbp,rax
   34374:	mov    rsi,rax
   34377:	cmovae rsi,rbp
   3437b:	cmp    rsi,r12
   3437e:	jb     34391 <two_way_long_needle+0x341>
   34380:	jmp    343d0 <two_way_long_needle+0x380>
   34382:	nop    WORD PTR [rax+rax*1+0x0]
   34388:	add    rsi,0x1
   3438c:	cmp    rsi,r12
   3438f:	je     343d0 <two_way_long_needle+0x380>
   34391:	movzx  eax,BYTE PTR [r13+rsi*1+0x0]
   34397:	lea    ecx,[rax-0x41]
   3439a:	lea    edx,[rax+0x20]
   3439d:	cmp    ecx,0x1a
   343a0:	cmovb  eax,edx
   343a3:	movzx  edx,BYTE PTR [rdi+rsi*1]
   343a7:	lea    r8d,[rdx-0x41]
   343ab:	lea    ecx,[rdx+0x20]
   343ae:	cmp    r8d,0x1a
   343b2:	cmovb  edx,ecx
   343b5:	cmp    edx,eax
   343b7:	je     34388 <two_way_long_needle+0x338>
   343b9:	add    r15,QWORD PTR [rsp+0x20]
   343be:	xor    ebp,ebp
   343c0:	add    r15,rsi
   343c3:	jmp    3431d <two_way_long_needle+0x2cd>
   343c8:	nop    DWORD PTR [rax+rax*1+0x0]
   343d0:	mov    rsi,QWORD PTR [rsp+0x28]
   343d5:	mov    r11,QWORD PTR [rsp]
   343d9:	lea    rdi,[rbx+r15*1]
   343dd:	cmp    rbp,QWORD PTR [rsp]
   343e1:	jb     343f4 <two_way_long_needle+0x3a4>
   343e3:	jmp    34420 <two_way_long_needle+0x3d0>
   343e5:	nop    DWORD PTR [rax]
   343e8:	lea    rax,[rsi-0x1]
   343ec:	cmp    rbp,rsi
   343ef:	je     34457 <two_way_long_needle+0x407>
   343f1:	mov    rsi,rax
   343f4:	movzx  eax,BYTE PTR [r13+rsi*1+0x0]
   343fa:	lea    r11,[rsi+0x1]
   343fe:	lea    ecx,[rax-0x41]
   34401:	lea    edx,[rax+0x20]
   34404:	cmp    ecx,0x1a
   34407:	cmovb  eax,edx
   3440a:	movzx  edx,BYTE PTR [rdi+rsi*1]
   3440e:	lea    r8d,[rdx-0x41]
   34412:	lea    ecx,[rdx+0x20]
   34415:	cmp    r8d,0x1a
   34419:	cmovb  edx,ecx
   3441c:	cmp    edx,eax
   3441e:	je     343e8 <two_way_long_needle+0x398>
   34420:	lea    r9,[rbp+0x1]
   34424:	cmp    r9,r11
   34427:	ja     3445c <two_way_long_needle+0x40c>
   34429:	mov    rbp,QWORD PTR [rsp+0x18]
   3442e:	add    r15,QWORD PTR [rsp+0x10]
   34433:	jmp    3431d <two_way_long_needle+0x2cd>
   34438:	mov    QWORD PTR [rsp+0x38],0x1
   34441:	lea    rax,[rcx-0x1]
   34445:	mov    QWORD PTR [rsp],rax
   34449:	mov    QWORD PTR [rsp+0x10],0x1
   34452:	jmp    340a8 <two_way_long_needle+0x58>
   34457:	mov    r11,rbp
   3445a:	jmp    34420 <two_way_long_needle+0x3d0>
   3445c:	lea    rax,[rbx+r15*1]
   34460:	jmp    3423a <two_way_long_needle+0x1ea>
   34465:	mov    rax,rdi
   34468:	jmp    3423a <two_way_long_needle+0x1ea>
   3446d:	call   11760 <__stack_chk_fail@plt>
   34472:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3447d:	nop    DWORD PTR [rax]

0000000000034480 <c_strcasestr>:
   34480:	endbr64 
   34484:	push   r15
   34486:	push   r14
   34488:	mov    r14,rdi
   3448b:	push   r13
   3448d:	push   r12
   3448f:	push   rbp
   34490:	push   rbx
   34491:	sub    rsp,0x48
   34495:	movzx  edx,BYTE PTR [rsi]
   34498:	mov    rax,QWORD PTR fs:0x28
   344a1:	mov    QWORD PTR [rsp+0x38],rax
   344a6:	xor    eax,eax
   344a8:	movzx  eax,BYTE PTR [rdi]
   344ab:	test   al,al
   344ad:	je     34861 <c_strcasestr+0x3e1>
   344b3:	mov    r13,rsi
   344b6:	mov    r12,rsi
   344b9:	mov    rsi,rdi
   344bc:	mov    edi,0x1
   344c1:	jmp    344fa <c_strcasestr+0x7a>
   344c3:	nop    DWORD PTR [rax+rax*1+0x0]
   344c8:	lea    r8d,[rax-0x41]
   344cc:	add    rsi,0x1
   344d0:	lea    ecx,[rax+0x20]
   344d3:	cmp    r8d,0x1a
   344d7:	lea    r8d,[rdx-0x41]
   344db:	cmovb  eax,ecx
   344de:	add    r12,0x1
   344e2:	lea    ecx,[rdx+0x20]
   344e5:	cmp    r8d,0x1a
   344e9:	cmovb  edx,ecx
   344ec:	cmp    edx,eax
   344ee:	sete   al
   344f1:	and    edi,eax
   344f3:	movzx  eax,BYTE PTR [rsi]
   344f6:	test   al,al
   344f8:	je     34560 <c_strcasestr+0xe0>
   344fa:	movzx  edx,BYTE PTR [r12]
   344ff:	test   dl,dl
   34501:	jne    344c8 <c_strcasestr+0x48>
   34503:	test   dil,dil
   34506:	jne    34590 <c_strcasestr+0x110>
   3450c:	sub    r12,r13
   3450f:	lea    rax,[r14+0x1]
   34513:	mov    QWORD PTR [rsp],rax
   34517:	lea    rbp,[r12-0x1]
   3451c:	cmp    r12,0x1f
   34520:	jbe    34598 <c_strcasestr+0x118>
   34522:	mov    rax,QWORD PTR [rsp+0x38]
   34527:	sub    rax,QWORD PTR fs:0x28
   34530:	jne    3488c <c_strcasestr+0x40c>
   34536:	mov    rdi,QWORD PTR [rsp]
   3453a:	add    rsp,0x48
   3453e:	mov    rcx,r12
   34541:	mov    rdx,r13
   34544:	pop    rbx
   34545:	mov    rsi,rbp
   34548:	pop    rbp
   34549:	pop    r12
   3454b:	pop    r13
   3454d:	pop    r14
   3454f:	pop    r15
   34551:	jmp    34050 <two_way_long_needle>
   34556:	cs nop WORD PTR [rax+rax*1+0x0]
   34560:	cmp    BYTE PTR [r12],0x0
   34565:	je     34503 <c_strcasestr+0x83>
   34567:	xor    eax,eax
   34569:	mov    rdx,QWORD PTR [rsp+0x38]
   3456e:	sub    rdx,QWORD PTR fs:0x28
   34577:	jne    3488c <c_strcasestr+0x40c>
   3457d:	add    rsp,0x48
   34581:	pop    rbx
   34582:	pop    rbp
   34583:	pop    r12
   34585:	pop    r13
   34587:	pop    r14
   34589:	pop    r15
   3458b:	ret    
   3458c:	nop    DWORD PTR [rax+0x0]
   34590:	mov    rax,r14
   34593:	jmp    34569 <c_strcasestr+0xe9>
   34595:	nop    DWORD PTR [rax]
   34598:	cmp    r12,0x2
   3459c:	jbe    34847 <c_strcasestr+0x3c7>
   345a2:	lea    rdx,[rsp+0x30]
   345a7:	mov    rsi,r12
   345aa:	mov    rdi,r13
   345ad:	call   33eb0 <critical_factorization.part.0>
   345b2:	mov    r8,rax
   345b5:	mov    rax,QWORD PTR [rsp+0x30]
   345ba:	mov    QWORD PTR [rsp+0x18],rax
   345bf:	mov    rax,QWORD PTR [rsp+0x18]
   345c4:	mov    rdx,r8
   345c7:	mov    rdi,r13
   345ca:	mov    QWORD PTR [rsp+0x8],r8
   345cf:	lea    rsi,[r13+rax*1+0x0]
   345d4:	call   33e30 <c_strncasecmp>
   345d9:	mov    r8,QWORD PTR [rsp+0x8]
   345de:	test   eax,eax
   345e0:	jne    3473d <c_strcasestr+0x2bd>
   345e6:	mov    eax,0x1
   345eb:	mov    QWORD PTR [rsp+0x8],r14
   345f0:	xor    r15d,r15d
   345f3:	mov    rdi,rbp
   345f6:	sub    rax,r8
   345f9:	mov    rbp,r15
   345fc:	mov    rbx,r8
   345ff:	mov    QWORD PTR [rsp+0x10],rax
   34604:	lea    rax,[r8-0x1]
   34608:	mov    QWORD PTR [rsp+0x20],rax
   3460d:	mov    rax,r12
   34610:	sub    rax,QWORD PTR [rsp+0x18]
   34615:	mov    QWORD PTR [rsp+0x28],rax
   3461a:	nop    WORD PTR [rax+rax*1+0x0]
   34620:	lea    r14,[r12+rbp*1]
   34624:	xor    esi,esi
   34626:	mov    rdx,r14
   34629:	sub    rdx,rdi
   3462c:	add    rdi,QWORD PTR [rsp]
   34630:	call   11750 <memchr@plt>
   34635:	test   r14,r14
   34638:	je     34567 <c_strcasestr+0xe7>
   3463e:	test   rax,rax
   34641:	jne    34567 <c_strcasestr+0xe7>
   34647:	cmp    r15,rbx
   3464a:	mov    rcx,rbx
   3464d:	mov    rax,QWORD PTR [rsp+0x8]
   34652:	cmovae rcx,r15
   34656:	lea    rsi,[rax+rbp*1]
   3465a:	cmp    r12,rcx
   3465d:	ja     34671 <c_strcasestr+0x1f1>
   3465f:	jmp    346c0 <c_strcasestr+0x240>
   34661:	nop    DWORD PTR [rax+0x0]
   34668:	add    rcx,0x1
   3466c:	cmp    r12,rcx
   3466f:	je     346c0 <c_strcasestr+0x240>
   34671:	movzx  eax,BYTE PTR [r13+rcx*1+0x0]
   34677:	lea    edi,[rax-0x41]
   3467a:	lea    edx,[rax+0x20]
   3467d:	cmp    edi,0x1a
   34680:	cmovb  eax,edx
   34683:	movzx  edx,BYTE PTR [rcx+rsi*1+0x1]
   34688:	lea    r8d,[rdx-0x41]
   3468c:	lea    edi,[rdx+0x20]
   3468f:	cmp    r8d,0x1a
   34693:	cmovb  edx,edi
   34696:	cmp    edx,eax
   34698:	je     34668 <c_strcasestr+0x1e8>
   3469a:	cmp    r12,rcx
   3469d:	jbe    346c0 <c_strcasestr+0x240>
   3469f:	mov    rax,QWORD PTR [rsp+0x10]
   346a4:	xor    r15d,r15d
   346a7:	lea    r8,[rax+rbp*1]
   346ab:	lea    rbp,[rcx+r8*1]
   346af:	mov    rdi,r14
   346b2:	jmp    34620 <c_strcasestr+0x1a0>
   346b7:	nop    WORD PTR [rax+rax*1+0x0]
   346c0:	mov    rax,QWORD PTR [rsp+0x8]
   346c5:	mov    rcx,QWORD PTR [rsp+0x20]
   346ca:	mov    r11,rbx
   346cd:	lea    rsi,[rax+rbp*1]
   346d1:	cmp    r15,rbx
   346d4:	jb     346ec <c_strcasestr+0x26c>
   346d6:	jmp    34719 <c_strcasestr+0x299>
   346d8:	nop    DWORD PTR [rax+rax*1+0x0]
   346e0:	lea    rax,[rcx-0x1]
   346e4:	cmp    rcx,r15
   346e7:	je     34738 <c_strcasestr+0x2b8>
   346e9:	mov    rcx,rax
   346ec:	movzx  eax,BYTE PTR [r13+rcx*1+0x0]
   346f2:	lea    r11,[rcx+0x1]
   346f6:	lea    edi,[rax-0x41]
   346f9:	lea    edx,[rax+0x20]
   346fc:	cmp    edi,0x1a
   346ff:	cmovb  eax,edx
   34702:	movzx  edx,BYTE PTR [rcx+rsi*1+0x1]
   34707:	lea    r8d,[rdx-0x41]
   3470b:	lea    edi,[rdx+0x20]
   3470e:	cmp    r8d,0x1a
   34712:	cmovb  edx,edi
   34715:	cmp    edx,eax
   34717:	je     346e0 <c_strcasestr+0x260>
   34719:	add    r15,0x1
   3471d:	cmp    r15,r11
   34720:	ja     3486e <c_strcasestr+0x3ee>
   34726:	mov    r15,QWORD PTR [rsp+0x28]
   3472b:	add    rbp,QWORD PTR [rsp+0x18]
   34730:	jmp    346af <c_strcasestr+0x22f>
   34735:	nop    DWORD PTR [rax]
   34738:	mov    r11,r15
   3473b:	jmp    34719 <c_strcasestr+0x299>
   3473d:	mov    rax,r12
   34740:	mov    ebx,0x1
   34745:	mov    rdi,rbp
   34748:	mov    rbp,r8
   3474b:	sub    rax,r8
   3474e:	cmp    rax,r8
   34751:	cmovb  rax,r8
   34755:	sub    rbx,r8
   34758:	xor    r15d,r15d
   3475b:	mov    QWORD PTR [rsp+0x8],rbx
   34760:	add    rax,0x1
   34764:	mov    QWORD PTR [rsp+0x10],rax
   34769:	mov    rax,r15
   3476c:	mov    r15,r12
   3476f:	mov    r12,rax
   34772:	nop    WORD PTR [rax+rax*1+0x0]
   34778:	lea    rbx,[r15+r12*1]
   3477c:	xor    esi,esi
   3477e:	mov    rdx,rbx
   34781:	sub    rdx,rdi
   34784:	add    rdi,QWORD PTR [rsp]
   34788:	call   11750 <memchr@plt>
   3478d:	test   rax,rax
   34790:	jne    34567 <c_strcasestr+0xe7>
   34796:	test   rbx,rbx
   34799:	je     34567 <c_strcasestr+0xe7>
   3479f:	mov    rsi,rbp
   347a2:	lea    r11,[r14+r12*1]
   347a6:	cmp    r15,rbp
   347a9:	ja     347b9 <c_strcasestr+0x339>
   347ab:	jmp    34800 <c_strcasestr+0x380>
   347ad:	nop    DWORD PTR [rax]
   347b0:	add    rsi,0x1
   347b4:	cmp    r15,rsi
   347b7:	jbe    34800 <c_strcasestr+0x380>
   347b9:	movzx  eax,BYTE PTR [r13+rsi*1+0x0]
   347bf:	lea    edi,[rax-0x41]
   347c2:	lea    edx,[rax+0x20]
   347c5:	cmp    edi,0x1a
   347c8:	cmovb  eax,edx
   347cb:	movzx  edx,BYTE PTR [rsi+r11*1+0x1]
   347d1:	lea    r10d,[rdx-0x41]
   347d5:	lea    edi,[rdx+0x20]
   347d8:	cmp    r10d,0x1a
   347dc:	cmovb  edx,edi
   347df:	cmp    edx,eax
   347e1:	je     347b0 <c_strcasestr+0x330>
   347e3:	cmp    r15,rsi
   347e6:	jbe    34800 <c_strcasestr+0x380>
   347e8:	mov    rax,QWORD PTR [rsp+0x8]
   347ed:	lea    rcx,[rax+r12*1]
   347f1:	lea    r12,[rcx+rsi*1]
   347f5:	mov    rdi,rbx
   347f8:	jmp    34778 <c_strcasestr+0x2f8>
   347fd:	nop    DWORD PTR [rax]
   34800:	lea    rsi,[rbp-0x1]
   34804:	test   rbp,rbp
   34807:	je     34880 <c_strcasestr+0x400>
   34809:	lea    r11,[r14+r12*1]
   3480d:	jmp    34816 <c_strcasestr+0x396>
   3480f:	nop
   34810:	sub    rsi,0x1
   34814:	jb     34880 <c_strcasestr+0x400>
   34816:	movzx  eax,BYTE PTR [r13+rsi*1+0x0]
   3481c:	lea    edi,[rax-0x41]
   3481f:	lea    edx,[rax+0x20]
   34822:	cmp    edi,0x1a
   34825:	cmovb  eax,edx
   34828:	movzx  edx,BYTE PTR [rsi+r11*1+0x1]
   3482e:	lea    r10d,[rdx-0x41]
   34832:	lea    edi,[rdx+0x20]
   34835:	cmp    r10d,0x1a
   34839:	cmovb  edx,edi
   3483c:	cmp    edx,eax
   3483e:	je     34810 <c_strcasestr+0x390>
   34840:	add    r12,QWORD PTR [rsp+0x10]
   34845:	jmp    347f5 <c_strcasestr+0x375>
   34847:	mov    QWORD PTR [rsp+0x30],0x1
   34850:	mov    r8,rbp
   34853:	mov    QWORD PTR [rsp+0x18],0x1
   3485c:	jmp    345bf <c_strcasestr+0x13f>
   34861:	xor    eax,eax
   34863:	test   dl,dl
   34865:	cmove  rax,rdi
   34869:	jmp    34569 <c_strcasestr+0xe9>
   3486e:	mov    rax,QWORD PTR [rsp]
   34872:	add    rax,rbp
   34875:	jmp    34569 <c_strcasestr+0xe9>
   3487a:	nop    WORD PTR [rax+rax*1+0x0]
   34880:	mov    rax,QWORD PTR [rsp]
   34884:	add    rax,r12
   34887:	jmp    34569 <c_strcasestr+0xe9>
   3488c:	call   11760 <__stack_chk_fail@plt>
   34891:	cs nop WORD PTR [rax+rax*1+0x0]
   3489b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000348a0 <c32_apply_type_test>:
   348a0:	endbr64 
   348a4:	jmp    10c40 <iswctype@plt>
   348a9:	nop    DWORD PTR [rax+0x0]

00000000000348b0 <c32_get_type_test>:
   348b0:	endbr64 
   348b4:	jmp    10cc0 <wctype@plt>
   348b9:	nop    DWORD PTR [rax+0x0]

00000000000348c0 <c32isalnum>:
   348c0:	endbr64 
   348c4:	jmp    12190 <iswalnum@plt>
   348c9:	nop    DWORD PTR [rax+0x0]

00000000000348d0 <c32isalpha>:
   348d0:	endbr64 
   348d4:	jmp    12330 <iswalpha@plt>
   348d9:	nop    DWORD PTR [rax+0x0]

00000000000348e0 <c32isblank>:
   348e0:	endbr64 
   348e4:	jmp    11fa0 <iswblank@plt>
   348e9:	nop    DWORD PTR [rax+0x0]

00000000000348f0 <c32iscntrl>:
   348f0:	endbr64 
   348f4:	jmp    12610 <iswcntrl@plt>
   348f9:	nop    DWORD PTR [rax+0x0]

0000000000034900 <c32isdigit>:
   34900:	endbr64 
   34904:	jmp    127d0 <iswdigit@plt>
   34909:	nop    DWORD PTR [rax+0x0]

0000000000034910 <c32isgraph>:
   34910:	endbr64 
   34914:	jmp    10780 <iswgraph@plt>
   34919:	nop    DWORD PTR [rax+0x0]

0000000000034920 <c32islower>:
   34920:	endbr64 
   34924:	jmp    12560 <iswlower@plt>
   34929:	nop    DWORD PTR [rax+0x0]

0000000000034930 <c32isprint>:
   34930:	endbr64 
   34934:	jmp    11b00 <iswprint@plt>
   34939:	nop    DWORD PTR [rax+0x0]

0000000000034940 <c32ispunct>:
   34940:	endbr64 
   34944:	jmp    10c70 <iswpunct@plt>
   34949:	nop    DWORD PTR [rax+0x0]

0000000000034950 <c32isspace>:
   34950:	endbr64 
   34954:	jmp    11120 <iswspace@plt>
   34959:	nop    DWORD PTR [rax+0x0]

0000000000034960 <c32isupper>:
   34960:	endbr64 
   34964:	jmp    12220 <iswupper@plt>
   34969:	nop    DWORD PTR [rax+0x0]

0000000000034970 <c32isxdigit>:
   34970:	endbr64 
   34974:	jmp    12600 <iswxdigit@plt>
   34979:	nop    DWORD PTR [rax+0x0]

0000000000034980 <c32tolower>:
   34980:	endbr64 
   34984:	jmp    11430 <towlower@plt>
   34989:	nop    DWORD PTR [rax+0x0]

0000000000034990 <canonicalize_filename_mode>:
   34990:	endbr64 
   34994:	push   r15
   34996:	mov    r15d,esi
   34999:	push   r14
   3499b:	and    r15d,0x3
   3499f:	push   r13
   349a1:	push   r12
   349a3:	push   rbp
   349a4:	push   rbx
   349a5:	sub    rsp,0xd38
   349ac:	mov    rax,QWORD PTR fs:0x28
   349b5:	mov    QWORD PTR [rsp+0xd28],rax
   349bd:	xor    eax,eax
   349bf:	lea    rax,[rsp+0x100]
   349c7:	mov    QWORD PTR [rsp+0xf8],0x400
   349d3:	mov    QWORD PTR [rsp+0x8],rax
   349d8:	mov    QWORD PTR [rsp+0xf0],rax
   349e0:	lea    rax,[rsp+0x510]
   349e8:	mov    QWORD PTR [rsp+0x18],rax
   349ed:	mov    QWORD PTR [rsp+0x500],rax
   349f5:	lea    rax,[rsp+0x920]
   349fd:	mov    QWORD PTR [rsp+0x10],rax
   34a02:	mov    QWORD PTR [rsp+0x910],rax
   34a0a:	lea    eax,[r15-0x1]
   34a0e:	mov    QWORD PTR [rsp+0x508],0x400
   34a1a:	mov    QWORD PTR [rsp+0x918],0x400
   34a26:	test   eax,r15d
   34a29:	jne    34b20 <canonicalize_filename_mode+0x190>
   34a2f:	mov    rbp,rdi
   34a32:	test   rdi,rdi
   34a35:	je     34b20 <canonicalize_filename_mode+0x190>
   34a3b:	movzx  eax,BYTE PTR [rdi]
   34a3e:	test   al,al
   34a40:	je     34d08 <canonicalize_filename_mode+0x378>
   34a46:	mov    ebx,esi
   34a48:	mov    r12,QWORD PTR [rsp+0x8]
   34a4d:	mov    esi,0x400
   34a52:	lea    r13,[rsp+0xf0]
   34a5a:	cmp    al,0x2f
   34a5c:	je     34b30 <canonicalize_filename_mode+0x1a0>
   34a62:	mov    rdi,r12
   34a65:	call   10c10 <getcwd@plt>
   34a6a:	mov    r14,rax
   34a6d:	test   rax,rax
   34a70:	jne    34e80 <canonicalize_filename_mode+0x4f0>
   34a76:	call   104b0 <__errno_location@plt>
   34a7b:	mov    eax,DWORD PTR [rax]
   34a7d:	cmp    eax,0xc
   34a80:	je     34cfe <canonicalize_filename_mode+0x36e>
   34a86:	cmp    eax,0x22
   34a89:	je     34af8 <canonicalize_filename_mode+0x168>
   34a8b:	mov    rdi,QWORD PTR [rsp+0x910]
   34a93:	cmp    rdi,QWORD PTR [rsp+0x10]
   34a98:	je     34a9f <canonicalize_filename_mode+0x10f>
   34a9a:	call   10430 <free@plt>
   34a9f:	mov    rdi,QWORD PTR [rsp+0x500]
   34aa7:	cmp    rdi,QWORD PTR [rsp+0x18]
   34aac:	je     34ab3 <canonicalize_filename_mode+0x123>
   34aae:	call   10430 <free@plt>
   34ab3:	mov    rdi,QWORD PTR [rsp+0xf0]
   34abb:	cmp    rdi,QWORD PTR [rsp+0x8]
   34ac0:	je     34ac7 <canonicalize_filename_mode+0x137>
   34ac2:	call   10430 <free@plt>
   34ac7:	mov    rax,QWORD PTR [rsp+0xd28]
   34acf:	sub    rax,QWORD PTR fs:0x28
   34ad8:	jne    351fa <canonicalize_filename_mode+0x86a>
   34ade:	add    rsp,0xd38
   34ae5:	mov    rax,r14
   34ae8:	pop    rbx
   34ae9:	pop    rbp
   34aea:	pop    r12
   34aec:	pop    r13
   34aee:	pop    r14
   34af0:	pop    r15
   34af2:	ret    
   34af3:	nop    DWORD PTR [rax+rax*1+0x0]
   34af8:	mov    rdi,r13
   34afb:	call   41200 <gl_scratch_buffer_grow>
   34b00:	test   al,al
   34b02:	je     34cfe <canonicalize_filename_mode+0x36e>
   34b08:	mov    r12,QWORD PTR [rsp+0xf0]
   34b10:	mov    rsi,QWORD PTR [rsp+0xf8]
   34b18:	jmp    34a62 <canonicalize_filename_mode+0xd2>
   34b1d:	nop    DWORD PTR [rax]
   34b20:	call   104b0 <__errno_location@plt>
   34b25:	mov    DWORD PTR [rax],0x16
   34b2b:	xor    r14d,r14d
   34b2e:	jmp    34ab3 <canonicalize_filename_mode+0x123>
   34b30:	mov    BYTE PTR [rsp+0x100],0x2f
   34b38:	lea    r11,[rsp+0x101]
   34b40:	and    ebx,0x4
   34b43:	mov    BYTE PTR [rsp+0x43],0x0
   34b48:	xor    r14d,r14d
   34b4b:	lea    rcx,[rsp+0x910]
   34b53:	mov    DWORD PTR [rsp+0x34],ebx
   34b57:	mov    r13,r14
   34b5a:	mov    r14d,r15d
   34b5d:	mov    DWORD PTR [rsp+0x44],0x0
   34b65:	mov    QWORD PTR [rsp+0x38],rcx
   34b6a:	cmp    al,0x2f
   34b6c:	jne    34df0 <canonicalize_filename_mode+0x460>
   34b72:	nop    WORD PTR [rax+rax*1+0x0]
   34b78:	movzx  edx,BYTE PTR [rbp+0x1]
   34b7c:	add    rbp,0x1
   34b80:	cmp    dl,0x2f
   34b83:	je     34b78 <canonicalize_filename_mode+0x1e8>
   34b85:	test   dl,dl
   34b87:	je     34c18 <canonicalize_filename_mode+0x288>
   34b8d:	mov    QWORD PTR [rsp],rbp
   34b91:	nop    DWORD PTR [rax+0x0]
   34b98:	mov    rbx,rbp
   34b9b:	movzx  eax,BYTE PTR [rbp+0x1]
   34b9f:	add    rbp,0x1
   34ba3:	test   al,al
   34ba5:	je     34bab <canonicalize_filename_mode+0x21b>
   34ba7:	cmp    al,0x2f
   34ba9:	jne    34b98 <canonicalize_filename_mode+0x208>
   34bab:	mov    rcx,rbp
   34bae:	sub    rcx,QWORD PTR [rsp]
   34bb2:	mov    QWORD PTR [rsp+0x20],rcx
   34bb7:	je     34c18 <canonicalize_filename_mode+0x288>
   34bb9:	cmp    rcx,0x1
   34bbd:	je     34c80 <canonicalize_filename_mode+0x2f0>
   34bc3:	cmp    dl,0x2e
   34bc6:	jne    34c85 <canonicalize_filename_mode+0x2f5>
   34bcc:	cmp    QWORD PTR [rsp+0x20],0x2
   34bd2:	jne    34c85 <canonicalize_filename_mode+0x2f5>
   34bd8:	mov    rcx,QWORD PTR [rsp]
   34bdc:	cmp    BYTE PTR [rcx+0x1],0x2e
   34be0:	jne    34c85 <canonicalize_filename_mode+0x2f5>
   34be6:	lea    rdx,[r12+0x1]
   34beb:	cmp    r11,rdx
   34bee:	jbe    34c10 <canonicalize_filename_mode+0x280>
   34bf0:	sub    r11,0x1
   34bf4:	cmp    r11,r12
   34bf7:	jbe    34c10 <canonicalize_filename_mode+0x280>
   34bf9:	cmp    BYTE PTR [r11-0x1],0x2f
   34bfe:	je     34c10 <canonicalize_filename_mode+0x280>
   34c00:	sub    r11,0x1
   34c04:	cmp    r11,r12
   34c07:	jne    34bf9 <canonicalize_filename_mode+0x269>
   34c09:	nop    DWORD PTR [rax+0x0]
   34c10:	test   al,al
   34c12:	jne    34b6a <canonicalize_filename_mode+0x1da>
   34c18:	lea    rax,[r12+0x1]
   34c1d:	mov    r14,r13
   34c20:	lea    r13,[r11+0x1]
   34c24:	cmp    r11,rax
   34c27:	jbe    34c38 <canonicalize_filename_mode+0x2a8>
   34c29:	cmp    BYTE PTR [r11-0x1],0x2f
   34c2e:	lea    r13,[r11+0x1]
   34c32:	je     34de1 <canonicalize_filename_mode+0x451>
   34c38:	test   r14,r14
   34c3b:	je     34c4d <canonicalize_filename_mode+0x2bd>
   34c3d:	mov    rdi,r14
   34c40:	mov    QWORD PTR [rsp],r11
   34c44:	call   43e40 <hash_free>
   34c49:	mov    r11,QWORD PTR [rsp]
   34c4d:	mov    BYTE PTR [r11],0x0
   34c51:	sub    r13,r12
   34c54:	mov    rdi,r13
   34c57:	call   11af0 <malloc@plt>
   34c5c:	mov    rdi,rax
   34c5f:	test   rax,rax
   34c62:	je     34cfe <canonicalize_filename_mode+0x36e>
   34c68:	mov    rdx,r13
   34c6b:	mov    rsi,r12
   34c6e:	call   11220 <memcpy@plt>
   34c73:	mov    r14,rax
   34c76:	jmp    34a8b <canonicalize_filename_mode+0xfb>
   34c7b:	nop    DWORD PTR [rax+rax*1+0x0]
   34c80:	cmp    dl,0x2e
   34c83:	je     34c10 <canonicalize_filename_mode+0x280>
   34c85:	cmp    BYTE PTR [r11-0x1],0x2f
   34c8a:	je     34c94 <canonicalize_filename_mode+0x304>
   34c8c:	mov    BYTE PTR [r11],0x2f
   34c90:	add    r11,0x1
   34c94:	mov    rax,QWORD PTR [rsp+0x20]
   34c99:	lea    rsi,[rsp+0xf0]
   34ca1:	lea    rcx,[rax+0x2]
   34ca5:	mov    rax,QWORD PTR [rsp+0xf8]
   34cad:	add    rax,r12
   34cb0:	sub    rax,r11
   34cb3:	cmp    rax,rcx
   34cb6:	jae    34d2b <canonicalize_filename_mode+0x39b>
   34cb8:	mov    QWORD PTR [rsp+0x28],rbx
   34cbd:	mov    rdx,r12
   34cc0:	mov    rbx,rcx
   34cc3:	mov    r12,rbp
   34cc6:	mov    r15,rsi
   34cc9:	jmp    34cec <canonicalize_filename_mode+0x35c>
   34ccb:	nop    DWORD PTR [rax+rax*1+0x0]
   34cd0:	mov    rax,QWORD PTR [rsp+0xf8]
   34cd8:	mov    rdx,QWORD PTR [rsp+0xf0]
   34ce0:	sub    rax,rbp
   34ce3:	lea    r11,[rdx+rbp*1]
   34ce7:	cmp    rax,rbx
   34cea:	jae    34d20 <canonicalize_filename_mode+0x390>
   34cec:	sub    r11,rdx
   34cef:	mov    rdi,r15
   34cf2:	mov    rbp,r11
   34cf5:	call   41280 <gl_scratch_buffer_grow_preserve>
   34cfa:	test   al,al
   34cfc:	jne    34cd0 <canonicalize_filename_mode+0x340>
   34cfe:	call   48450 <xalloc_die>
   34d03:	nop    DWORD PTR [rax+rax*1+0x0]
   34d08:	call   104b0 <__errno_location@plt>
   34d0d:	mov    DWORD PTR [rax],0x2
   34d13:	jmp    34b2b <canonicalize_filename_mode+0x19b>
   34d18:	nop    DWORD PTR [rax+rax*1+0x0]
   34d20:	mov    rbx,QWORD PTR [rsp+0x28]
   34d25:	mov    rbp,r12
   34d28:	mov    r12,rdx
   34d2b:	mov    rdx,QWORD PTR [rsp+0x20]
   34d30:	mov    rsi,QWORD PTR [rsp]
   34d34:	mov    rdi,r11
   34d37:	call   11940 <mempcpy@plt>
   34d3c:	mov    ecx,DWORD PTR [rsp+0x34]
   34d40:	mov    BYTE PTR [rax],0x0
   34d43:	mov    r11,rax
   34d46:	test   ecx,ecx
   34d48:	je     34eb8 <canonicalize_filename_mode+0x528>
   34d4e:	cmp    r14d,0x2
   34d52:	je     34dd0 <canonicalize_filename_mode+0x440>
   34d54:	movzx  eax,BYTE PTR [rbp+0x0]
   34d58:	cmp    al,0x2f
   34d5a:	jne    34e10 <canonicalize_filename_mode+0x480>
   34d60:	mov    rdx,rbp
   34d63:	nop    DWORD PTR [rax+rax*1+0x0]
   34d68:	mov    rsi,rdx
   34d6b:	movzx  ecx,BYTE PTR [rdx+0x1]
   34d6f:	add    rdx,0x1
   34d73:	cmp    cl,0x2f
   34d76:	je     34d68 <canonicalize_filename_mode+0x3d8>
   34d78:	add    rsi,0x2
   34d7c:	test   cl,cl
   34d7e:	je     34f08 <canonicalize_filename_mode+0x578>
   34d84:	cmp    cl,0x2e
   34d87:	jne    34e10 <canonicalize_filename_mode+0x480>
   34d8d:	movzx  ecx,BYTE PTR [rdx+0x1]
   34d91:	test   cl,cl
   34d93:	je     34f08 <canonicalize_filename_mode+0x578>
   34d99:	cmp    cl,0x2e
   34d9c:	je     34dfb <canonicalize_filename_mode+0x46b>
   34d9e:	cmp    cl,0x2f
   34da1:	jne    34e10 <canonicalize_filename_mode+0x480>
   34da3:	mov    rdx,rsi
   34da6:	jmp    34d68 <canonicalize_filename_mode+0x3d8>
   34da8:	test   al,al
   34daa:	jne    34b6a <canonicalize_filename_mode+0x1da>
   34db0:	xor    edx,edx
   34db2:	mov    ecx,0x200
   34db7:	mov    rsi,r12
   34dba:	mov    edi,0xffffff9c
   34dbf:	mov    QWORD PTR [rsp],r11
   34dc3:	call   120d0 <faccessat@plt>
   34dc8:	mov    r11,QWORD PTR [rsp]
   34dcc:	test   eax,eax
   34dce:	jne    34e2a <canonicalize_filename_mode+0x49a>
   34dd0:	movzx  eax,BYTE PTR [rbx+0x1]
   34dd4:	test   al,al
   34dd6:	jne    34b6a <canonicalize_filename_mode+0x1da>
   34ddc:	jmp    34c18 <canonicalize_filename_mode+0x288>
   34de1:	mov    r13,r11
   34de4:	sub    r11,0x1
   34de8:	jmp    34c38 <canonicalize_filename_mode+0x2a8>
   34ded:	nop    DWORD PTR [rax]
   34df0:	mov    QWORD PTR [rsp],rbp
   34df4:	mov    edx,eax
   34df6:	jmp    34b98 <canonicalize_filename_mode+0x208>
   34dfb:	movzx  edx,BYTE PTR [rdx+0x2]
   34dff:	test   dl,dl
   34e01:	je     34f08 <canonicalize_filename_mode+0x578>
   34e07:	cmp    dl,0x2f
   34e0a:	je     34f08 <canonicalize_filename_mode+0x578>
   34e10:	mov    edx,DWORD PTR [rsp+0x34]
   34e14:	test   edx,edx
   34e16:	jne    34da8 <canonicalize_filename_mode+0x418>
   34e18:	mov    QWORD PTR [rsp],r11
   34e1c:	call   104b0 <__errno_location@plt>
   34e21:	mov    r11,QWORD PTR [rsp]
   34e25:	cmp    DWORD PTR [rax],0x16
   34e28:	je     34dd0 <canonicalize_filename_mode+0x440>
   34e2a:	mov    QWORD PTR [rsp],r11
   34e2e:	cmp    r14d,0x1
   34e32:	jne    34e61 <canonicalize_filename_mode+0x4d1>
   34e34:	call   104b0 <__errno_location@plt>
   34e39:	cmp    DWORD PTR [rax],0x2
   34e3c:	jne    34e61 <canonicalize_filename_mode+0x4d1>
   34e3e:	lea    rsi,[rip+0x182fb]        # 4d140 <__func__.4+0x20>
   34e45:	mov    rdi,rbp
   34e48:	call   10a70 <strspn@plt>
   34e4d:	cmp    BYTE PTR [rbp+rax*1+0x0],0x0
   34e52:	jne    34e61 <canonicalize_filename_mode+0x4d1>
   34e54:	movzx  eax,BYTE PTR [rbx+0x1]
   34e58:	mov    r11,QWORD PTR [rsp]
   34e5c:	jmp    34c10 <canonicalize_filename_mode+0x280>
   34e61:	mov    r14,r13
   34e64:	test   r14,r14
   34e67:	je     34a8b <canonicalize_filename_mode+0xfb>
   34e6d:	mov    rdi,r14
   34e70:	xor    r14d,r14d
   34e73:	call   43e40 <hash_free>
   34e78:	jmp    34a8b <canonicalize_filename_mode+0xfb>
   34e7d:	nop    DWORD PTR [rax]
   34e80:	xor    esi,esi
   34e82:	mov    rdi,r12
   34e85:	call   11a10 <rawmemchr@plt>
   34e8a:	mov    r11,rax
   34e8d:	movzx  eax,BYTE PTR [rbp+0x0]
   34e91:	test   al,al
   34e93:	jne    34b40 <canonicalize_filename_mode+0x1b0>
   34e99:	lea    rax,[r12+0x1]
   34e9e:	lea    r13,[r11+0x1]
   34ea2:	cmp    r11,rax
   34ea5:	jbe    34c4d <canonicalize_filename_mode+0x2bd>
   34eab:	xor    r14d,r14d
   34eae:	jmp    34c29 <canonicalize_filename_mode+0x299>
   34eb3:	nop    DWORD PTR [rax+rax*1+0x0]
   34eb8:	mov    QWORD PTR [rsp+0x20],rbx
   34ebd:	mov    r15,QWORD PTR [rsp+0x38]
   34ec2:	mov    QWORD PTR [rsp+0x28],rax
   34ec7:	mov    QWORD PTR [rsp+0x48],rbp
   34ecc:	nop    DWORD PTR [rax+0x0]
   34ed0:	mov    rax,QWORD PTR [rsp+0x918]
   34ed8:	mov    rbx,QWORD PTR [rsp+0x910]
   34ee0:	mov    rdi,r12
   34ee3:	lea    rbp,[rax-0x1]
   34ee7:	mov    rsi,rbx
   34eea:	mov    rdx,rbp
   34eed:	call   11690 <readlink@plt>
   34ef2:	cmp    rbp,rax
   34ef5:	jg     34f18 <canonicalize_filename_mode+0x588>
   34ef7:	mov    rdi,r15
   34efa:	call   41200 <gl_scratch_buffer_grow>
   34eff:	test   al,al
   34f01:	jne    34ed0 <canonicalize_filename_mode+0x540>
   34f03:	jmp    34cfe <canonicalize_filename_mode+0x36e>
   34f08:	movzx  eax,WORD PTR [rip+0x23066]        # 57f75 <dir_suffix>
   34f0f:	mov    WORD PTR [r11],ax
   34f13:	jmp    34db0 <canonicalize_filename_mode+0x420>
   34f18:	mov    r15,rbx
   34f1b:	mov    r11,QWORD PTR [rsp+0x28]
   34f20:	mov    rbx,QWORD PTR [rsp+0x20]
   34f25:	mov    r10,rax
   34f28:	mov    rbp,QWORD PTR [rsp+0x48]
   34f2d:	test   rax,rax
   34f30:	js     34d4e <canonicalize_filename_mode+0x3be>
   34f36:	cmp    DWORD PTR [rsp+0x44],0x13
   34f3b:	jle    3517d <canonicalize_filename_mode+0x7ed>
   34f41:	mov    rax,QWORD PTR [rsp]
   34f45:	cmp    BYTE PTR [rax],0x0
   34f48:	je     35011 <canonicalize_filename_mode+0x681>
   34f4e:	mov    rdx,rax
   34f51:	lea    r9,[rsp+0x60]
   34f56:	mov    QWORD PTR [rsp+0x58],r10
   34f5b:	lea    rdi,[rip+0x181e2]        # 4d144 <__func__.4+0x24>
   34f62:	sub    rdx,rbp
   34f65:	mov    rsi,r9
   34f68:	mov    QWORD PTR [rsp+0x48],r11
   34f6d:	add    rdx,r11
   34f70:	mov    QWORD PTR [rsp+0x20],r9
   34f75:	mov    BYTE PTR [rdx],0x0
   34f78:	cmp    BYTE PTR [r12],0x0
   34f7d:	cmovne rdi,r12
   34f81:	mov    QWORD PTR [rsp+0x28],rdx
   34f86:	call   11420 <stat@plt>
   34f8b:	test   eax,eax
   34f8d:	jne    34e61 <canonicalize_filename_mode+0x4d1>
   34f93:	mov    rax,QWORD PTR [rsp]
   34f97:	mov    rdx,QWORD PTR [rsp+0x28]
   34f9c:	test   r13,r13
   34f9f:	mov    r9,QWORD PTR [rsp+0x20]
   34fa4:	mov    r11,QWORD PTR [rsp+0x48]
   34fa9:	movzx  eax,BYTE PTR [rax]
   34fac:	mov    r10,QWORD PTR [rsp+0x58]
   34fb1:	mov    BYTE PTR [rdx],al
   34fb3:	je     35187 <canonicalize_filename_mode+0x7f7>
   34fb9:	mov    rsi,QWORD PTR [rsp]
   34fbd:	mov    rdx,r9
   34fc0:	mov    rdi,r13
   34fc3:	mov    QWORD PTR [rsp+0x48],r11
   34fc8:	mov    QWORD PTR [rsp+0x28],r10
   34fcd:	mov    QWORD PTR [rsp+0x20],r9
   34fd2:	call   40920 <seen_file>
   34fd7:	mov    r9,QWORD PTR [rsp+0x20]
   34fdc:	mov    r10,QWORD PTR [rsp+0x28]
   34fe1:	test   al,al
   34fe3:	mov    r11,QWORD PTR [rsp+0x48]
   34fe8:	jne    350b5 <canonicalize_filename_mode+0x725>
   34fee:	mov    rsi,QWORD PTR [rsp]
   34ff2:	mov    rdx,r9
   34ff5:	mov    rdi,r13
   34ff8:	mov    QWORD PTR [rsp+0x28],r11
   34ffd:	mov    QWORD PTR [rsp+0x20],r10
   35002:	call   40890 <record_file>
   35007:	mov    r10,QWORD PTR [rsp+0x20]
   3500c:	mov    r11,QWORD PTR [rsp+0x28]
   35011:	cmp    BYTE PTR [rsp+0x43],0x0
   35016:	mov    BYTE PTR [r15+r10*1],0x0
   3501b:	mov    QWORD PTR [rsp+0x48],r11
   35020:	mov    r9,QWORD PTR [rsp+0x500]
   35028:	je     350d2 <canonicalize_filename_mode+0x742>
   3502e:	mov    rax,rbp
   35031:	mov    rdi,rbp
   35034:	mov    QWORD PTR [rsp+0x28],r10
   35039:	sub    rax,r9
   3503c:	mov    QWORD PTR [rsp+0x20],r9
   35041:	mov    QWORD PTR [rsp+0x50],rax
   35046:	call   10ab0 <strlen@plt>
   3504b:	mov    r10,QWORD PTR [rsp+0x28]
   35050:	mov    r9,QWORD PTR [rsp+0x20]
   35055:	mov    QWORD PTR [rsp],rax
   35059:	mov    r11,QWORD PTR [rsp+0x48]
   3505e:	add    rax,r10
   35061:	cmp    rax,QWORD PTR [rsp+0x508]
   35069:	jb     351ec <canonicalize_filename_mode+0x85c>
   3506f:	lea    rbx,[rsp+0x500]
   35077:	mov    QWORD PTR [rsp+0x48],rbp
   3507c:	mov    QWORD PTR [rsp+0x20],r10
   35081:	mov    rbp,rbx
   35084:	mov    rbx,rax
   35087:	mov    QWORD PTR [rsp+0x28],r11
   3508c:	jmp    350a4 <canonicalize_filename_mode+0x714>
   3508e:	mov    r9,QWORD PTR [rsp+0x500]
   35096:	cmp    QWORD PTR [rsp+0x508],rbx
   3509e:	ja     351d2 <canonicalize_filename_mode+0x842>
   350a4:	mov    rdi,rbp
   350a7:	call   41280 <gl_scratch_buffer_grow_preserve>
   350ac:	test   al,al
   350ae:	jne    3508e <canonicalize_filename_mode+0x6fe>
   350b0:	jmp    34cfe <canonicalize_filename_mode+0x36e>
   350b5:	cmp    r14d,0x2
   350b9:	je     34dd0 <canonicalize_filename_mode+0x440>
   350bf:	call   104b0 <__errno_location@plt>
   350c4:	mov    r14,r13
   350c7:	mov    DWORD PTR [rax],0x28
   350cd:	jmp    34e64 <canonicalize_filename_mode+0x4d4>
   350d2:	mov    rdi,rbp
   350d5:	mov    QWORD PTR [rsp+0x28],r9
   350da:	mov    QWORD PTR [rsp+0x20],r10
   350df:	call   10ab0 <strlen@plt>
   350e4:	mov    r10,QWORD PTR [rsp+0x20]
   350e9:	mov    r9,QWORD PTR [rsp+0x28]
   350ee:	mov    QWORD PTR [rsp],rax
   350f2:	mov    r11,QWORD PTR [rsp+0x48]
   350f7:	add    rax,r10
   350fa:	cmp    rax,QWORD PTR [rsp+0x508]
   35102:	jae    3506f <canonicalize_filename_mode+0x6df>
   35108:	mov    rdx,QWORD PTR [rsp]
   3510c:	lea    rdi,[r9+r10*1]
   35110:	mov    rsi,rbp
   35113:	mov    QWORD PTR [rsp+0x28],r11
   35118:	mov    QWORD PTR [rsp+0x20],r10
   3511d:	add    rdx,0x1
   35121:	mov    QWORD PTR [rsp],r9
   35125:	call   12110 <memmove@plt>
   3512a:	mov    rdx,QWORD PTR [rsp+0x20]
   3512f:	mov    rdi,QWORD PTR [rsp]
   35133:	mov    rsi,r15
   35136:	call   11220 <memcpy@plt>
   3513b:	cmp    BYTE PTR [r15],0x2f
   3513f:	mov    r11,QWORD PTR [rsp+0x28]
   35144:	lea    rdx,[r12+0x1]
   35149:	mov    rbp,rax
   3514c:	je     351ff <canonicalize_filename_mode+0x86f>
   35152:	mov    BYTE PTR [rsp+0x43],0x1
   35157:	movzx  eax,BYTE PTR [rax]
   3515a:	cmp    r11,rdx
   3515d:	jbe    34c10 <canonicalize_filename_mode+0x280>
   35163:	sub    r11,0x1
   35167:	cmp    r11,r12
   3516a:	je     35173 <canonicalize_filename_mode+0x7e3>
   3516c:	cmp    BYTE PTR [r11-0x1],0x2f
   35171:	jne    35163 <canonicalize_filename_mode+0x7d3>
   35173:	mov    BYTE PTR [rsp+0x43],0x1
   35178:	jmp    34c10 <canonicalize_filename_mode+0x280>
   3517d:	add    DWORD PTR [rsp+0x44],0x1
   35182:	jmp    35011 <canonicalize_filename_mode+0x681>
   35187:	lea    r8,[rip+0xf3f2]        # 44580 <triple_free>
   3518e:	lea    rcx,[rip+0xf3ab]        # 44540 <triple_compare_ino_str>
   35195:	xor    esi,esi
   35197:	mov    edi,0x7
   3519c:	lea    rdx,[rip+0xf36d]        # 44510 <triple_hash>
   351a3:	mov    QWORD PTR [rsp+0x28],r9
   351a8:	mov    QWORD PTR [rsp+0x20],r10
   351ad:	call   43c90 <hash_initialize>
   351b2:	mov    r10,QWORD PTR [rsp+0x20]
   351b7:	mov    r9,QWORD PTR [rsp+0x28]
   351bc:	test   rax,rax
   351bf:	mov    r11,QWORD PTR [rsp+0x48]
   351c4:	mov    r13,rax
   351c7:	jne    34fb9 <canonicalize_filename_mode+0x629>
   351cd:	jmp    34cfe <canonicalize_filename_mode+0x36e>
   351d2:	cmp    BYTE PTR [rsp+0x43],0x0
   351d7:	mov    r10,QWORD PTR [rsp+0x20]
   351dc:	mov    r11,QWORD PTR [rsp+0x28]
   351e1:	mov    rbp,QWORD PTR [rsp+0x48]
   351e6:	je     35108 <canonicalize_filename_mode+0x778>
   351ec:	mov    rax,QWORD PTR [rsp+0x50]
   351f1:	lea    rbp,[r9+rax*1]
   351f5:	jmp    35108 <canonicalize_filename_mode+0x778>
   351fa:	call   11760 <__stack_chk_fail@plt>
   351ff:	mov    BYTE PTR [r12],0x2f
   35204:	mov    r11,rdx
   35207:	movzx  eax,BYTE PTR [rax]
   3520a:	mov    BYTE PTR [rsp+0x43],0x1
   3520f:	jmp    34c10 <canonicalize_filename_mode+0x280>
   35214:	cs nop WORD PTR [rax+rax*1+0x0]
   3521e:	xchg   ax,ax

0000000000035220 <chdir_long>:
   35220:	endbr64 
   35224:	push   r15
   35226:	push   r14
   35228:	mov    r14,rdi
   3522b:	push   r13
   3522d:	push   r12
   3522f:	push   rbp
   35230:	push   rbx
   35231:	sub    rsp,0x18
   35235:	call   11dc0 <chdir@plt>
   3523a:	mov    ebx,eax
   3523c:	test   eax,eax
   3523e:	je     3532f <chdir_long+0x10f>
   35244:	call   104b0 <__errno_location@plt>
   35249:	cmp    DWORD PTR [rax],0x24
   3524c:	mov    QWORD PTR [rsp+0x8],rax
   35251:	jne    3532f <chdir_long+0x10f>
   35257:	mov    rdi,r14
   3525a:	lea    r12,[rip+0x17edf]        # 4d140 <__func__.4+0x20>
   35261:	call   10ab0 <strlen@plt>
   35266:	mov    rsi,r12
   35269:	mov    rdi,r14
   3526c:	mov    rbx,rax
   3526f:	lea    r13,[r14+rax*1]
   35273:	call   10a70 <strspn@plt>
   35278:	mov    r15,rax
   3527b:	cmp    rax,0x2
   3527f:	je     35370 <chdir_long+0x150>
   35285:	mov    ebp,0xffffff9c
   3528a:	test   rax,rax
   3528d:	jne    35340 <chdir_long+0x120>
   35293:	mov    rax,r13
   35296:	sub    rax,r14
   35299:	cmp    rax,0xfff
   3529f:	jg     35305 <chdir_long+0xe5>
   352a1:	jmp    353cc <chdir_long+0x1ac>
   352a6:	cs nop WORD PTR [rax+rax*1+0x0]
   352b0:	mov    BYTE PTR [rax],0x0
   352b3:	mov    edx,0x10900
   352b8:	mov    rsi,r14
   352bb:	mov    edi,ebp
   352bd:	xor    eax,eax
   352bf:	call   12640 <openat@plt>
   352c4:	mov    r15d,eax
   352c7:	test   eax,eax
   352c9:	js     35440 <chdir_long+0x220>
   352cf:	test   ebp,ebp
   352d1:	js     352da <chdir_long+0xba>
   352d3:	mov    edi,ebp
   352d5:	call   12740 <close@plt>
   352da:	mov    BYTE PTR [rbx],0x2f
   352dd:	add    rbx,0x1
   352e1:	mov    rsi,r12
   352e4:	mov    rdi,rbx
   352e7:	call   10a70 <strspn@plt>
   352ec:	lea    r14,[rbx+rax*1]
   352f0:	mov    rax,r13
   352f3:	sub    rax,r14
   352f6:	cmp    rax,0xfff
   352fc:	jle    353d0 <chdir_long+0x1b0>
   35302:	mov    ebp,r15d
   35305:	mov    edx,0x1000
   3530a:	mov    esi,0x2f
   3530f:	mov    rdi,r14
   35312:	call   12100 <memrchr@plt>
   35317:	mov    rbx,rax
   3531a:	test   rax,rax
   3531d:	jne    352b0 <chdir_long+0x90>
   3531f:	mov    rax,QWORD PTR [rsp+0x8]
   35324:	mov    ebx,0xffffffff
   35329:	mov    DWORD PTR [rax],0x24
   3532f:	add    rsp,0x18
   35333:	mov    eax,ebx
   35335:	pop    rbx
   35336:	pop    rbp
   35337:	pop    r12
   35339:	pop    r13
   3533b:	pop    r14
   3533d:	pop    r15
   3533f:	ret    
   35340:	mov    edx,0x10900
   35345:	mov    rsi,r12
   35348:	mov    edi,0xffffff9c
   3534d:	xor    eax,eax
   3534f:	call   12640 <openat@plt>
   35354:	mov    ebp,eax
   35356:	test   eax,eax
   35358:	js     35477 <chdir_long+0x257>
   3535e:	add    r14,r15
   35361:	jmp    35293 <chdir_long+0x73>
   35366:	cs nop WORD PTR [rax+rax*1+0x0]
   35370:	lea    rdx,[rbx-0x3]
   35374:	lea    rdi,[r14+0x3]
   35378:	mov    esi,0x2f
   3537d:	mov    ebx,0xffffffff
   35382:	call   11750 <memchr@plt>
   35387:	mov    r15,rax
   3538a:	test   rax,rax
   3538d:	je     3532f <chdir_long+0x10f>
   3538f:	mov    BYTE PTR [rax],0x0
   35392:	mov    edx,0x10900
   35397:	mov    rsi,r14
   3539a:	mov    edi,0xffffff9c
   3539f:	xor    eax,eax
   353a1:	call   12640 <openat@plt>
   353a6:	mov    BYTE PTR [r15],0x2f
   353aa:	mov    ebp,eax
   353ac:	test   eax,eax
   353ae:	js     35477 <chdir_long+0x257>
   353b4:	add    r15,0x1
   353b8:	mov    rsi,r12
   353bb:	mov    rdi,r15
   353be:	call   10a70 <strspn@plt>
   353c3:	lea    r14,[r15+rax*1]
   353c7:	jmp    35293 <chdir_long+0x73>
   353cc:	mov    r15d,ebp
   353cf:	nop
   353d0:	cmp    r13,r14
   353d3:	jbe    35420 <chdir_long+0x200>
   353d5:	mov    edx,0x10900
   353da:	mov    rsi,r14
   353dd:	mov    edi,r15d
   353e0:	xor    eax,eax
   353e2:	call   12640 <openat@plt>
   353e7:	mov    r12d,eax
   353ea:	test   eax,eax
   353ec:	js     35446 <chdir_long+0x226>
   353ee:	test   r15d,r15d
   353f1:	js     353fb <chdir_long+0x1db>
   353f3:	mov    edi,r15d
   353f6:	call   12740 <close@plt>
   353fb:	mov    edi,r12d
   353fe:	call   11b60 <fchdir@plt>
   35403:	test   eax,eax
   35405:	jne    35463 <chdir_long+0x243>
   35407:	mov    edi,r12d
   3540a:	xor    ebx,ebx
   3540c:	call   12740 <close@plt>
   35411:	jmp    3532f <chdir_long+0x10f>
   35416:	cs nop WORD PTR [rax+rax*1+0x0]
   35420:	mov    edi,r15d
   35423:	call   11b60 <fchdir@plt>
   35428:	mov    ebx,eax
   3542a:	test   eax,eax
   3542c:	jne    35446 <chdir_long+0x226>
   3542e:	test   r15d,r15d
   35431:	js     3532f <chdir_long+0x10f>
   35437:	mov    r12d,r15d
   3543a:	jmp    35407 <chdir_long+0x1e7>
   3543c:	nop    DWORD PTR [rax+0x0]
   35440:	mov    BYTE PTR [rbx],0x2f
   35443:	mov    r15d,ebp
   35446:	mov    rax,QWORD PTR [rsp+0x8]
   3544b:	mov    ebx,DWORD PTR [rax]
   3544d:	test   r15d,r15d
   35450:	jns    3546d <chdir_long+0x24d>
   35452:	mov    rax,QWORD PTR [rsp+0x8]
   35457:	mov    DWORD PTR [rax],ebx
   35459:	mov    ebx,0xffffffff
   3545e:	jmp    3532f <chdir_long+0x10f>
   35463:	mov    rax,QWORD PTR [rsp+0x8]
   35468:	mov    r15d,r12d
   3546b:	mov    ebx,DWORD PTR [rax]
   3546d:	mov    edi,r15d
   35470:	call   12740 <close@plt>
   35475:	jmp    35452 <chdir_long+0x232>
   35477:	mov    rax,QWORD PTR [rsp+0x8]
   3547c:	mov    ebx,DWORD PTR [rax]
   3547e:	jmp    35452 <chdir_long+0x232>

0000000000035480 <set_cloexec_flag>:
   35480:	endbr64 
   35484:	push   rbp
   35485:	xor    edx,edx
   35487:	xor    eax,eax
   35489:	mov    ebp,edi
   3548b:	push   rbx
   3548c:	mov    ebx,esi
   3548e:	mov    esi,0x1
   35493:	sub    rsp,0x8
   35497:	call   40550 <rpl_fcntl>
   3549c:	test   eax,eax
   3549e:	js     354e0 <set_cloexec_flag+0x60>
   354a0:	mov    ecx,eax
   354a2:	mov    edx,eax
   354a4:	or     ecx,0x1
   354a7:	and    edx,0xfffffffe
   354aa:	test   bl,bl
   354ac:	cmovne edx,ecx
   354af:	xor    r8d,r8d
   354b2:	cmp    edx,eax
   354b4:	je     354d1 <set_cloexec_flag+0x51>
   354b6:	xor    eax,eax
   354b8:	mov    esi,0x2
   354bd:	mov    edi,ebp
   354bf:	call   40550 <rpl_fcntl>
   354c4:	xor    r8d,r8d
   354c7:	cmp    eax,0xffffffff
   354ca:	sete   r8b
   354ce:	neg    r8d
   354d1:	add    rsp,0x8
   354d5:	mov    eax,r8d
   354d8:	pop    rbx
   354d9:	pop    rbp
   354da:	ret    
   354db:	nop    DWORD PTR [rax+rax*1+0x0]
   354e0:	mov    r8d,0xffffffff
   354e6:	jmp    354d1 <set_cloexec_flag+0x51>
   354e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000354f0 <dup_cloexec>:
   354f0:	endbr64 
   354f4:	xor    edx,edx
   354f6:	mov    esi,0x406
   354fb:	xor    eax,eax
   354fd:	jmp    40550 <rpl_fcntl>
   35502:	cs nop WORD PTR [rax+rax*1+0x0]
   3550c:	nop    DWORD PTR [rax+0x0]

0000000000035510 <concatenated_filename>:
   35510:	endbr64 
   35514:	push   r15
   35516:	push   r14
   35518:	mov    r14,rdx
   3551b:	push   r13
   3551d:	mov    r13,rsi
   35520:	push   r12
   35522:	push   rbp
   35523:	mov    rbp,rdi
   35526:	push   rbx
   35527:	sub    rsp,0x18
   3552b:	movzx  eax,BYTE PTR [rdi]
   3552e:	sub    eax,0x2e
   35531:	mov    r12d,eax
   35534:	jne    3553b <concatenated_filename+0x2b>
   35536:	movzx  r12d,BYTE PTR [rdi+0x1]
   3553b:	mov    rdi,r13
   3553e:	call   10ab0 <strlen@plt>
   35543:	mov    rbx,rax
   35546:	test   r12d,r12d
   35549:	jne    355a0 <concatenated_filename+0x90>
   3554b:	lea    rbp,[rax+0x1]
   3554f:	test   r14,r14
   35552:	je     35650 <concatenated_filename+0x140>
   35558:	mov    rdi,r14
   3555b:	call   10ab0 <strlen@plt>
   35560:	lea    rdi,[rax+rbp*1]
   35564:	call   11af0 <malloc@plt>
   35569:	mov    r12,rax
   3556c:	test   rax,rax
   3556f:	je     35670 <concatenated_filename+0x160>
   35575:	mov    rdi,rax
   35578:	mov    rsi,r13
   3557b:	call   11610 <stpcpy@plt>
   35580:	mov    rdi,rax
   35583:	mov    rsi,r14
   35586:	call   114e0 <strcpy@plt>
   3558b:	add    rsp,0x18
   3558f:	mov    rax,r12
   35592:	pop    rbx
   35593:	pop    rbp
   35594:	pop    r12
   35596:	pop    r13
   35598:	pop    r14
   3559a:	pop    r15
   3559c:	ret    
   3559d:	nop    DWORD PTR [rax]
   355a0:	mov    rdi,rbp
   355a3:	call   10ab0 <strlen@plt>
   355a8:	mov    r15,rax
   355ab:	test   rax,rax
   355ae:	jne    35630 <concatenated_filename+0x120>
   355b4:	mov    DWORD PTR [rsp+0x4],0x0
   355bc:	xor    r12d,r12d
   355bf:	lea    rdx,[rbx+r15*1+0x1]
   355c4:	xor    eax,eax
   355c6:	test   r14,r14
   355c9:	je     355dd <concatenated_filename+0xcd>
   355cb:	mov    rdi,r14
   355ce:	mov    QWORD PTR [rsp+0x8],rdx
   355d3:	call   10ab0 <strlen@plt>
   355d8:	mov    rdx,QWORD PTR [rsp+0x8]
   355dd:	lea    rdi,[r12+rdx*1]
   355e1:	add    rdi,rax
   355e4:	call   11af0 <malloc@plt>
   355e9:	mov    r12,rax
   355ec:	test   rax,rax
   355ef:	je     35670 <concatenated_filename+0x160>
   355f1:	mov    rdi,rax
   355f4:	mov    rdx,r15
   355f7:	mov    rsi,rbp
   355fa:	call   11220 <memcpy@plt>
   355ff:	mov    eax,DWORD PTR [rsp+0x4]
   35603:	lea    rdi,[r12+r15*1]
   35607:	test   eax,eax
   35609:	je     35612 <concatenated_filename+0x102>
   3560b:	mov    BYTE PTR [rdi],0x2f
   3560e:	add    rdi,0x1
   35612:	mov    rsi,r13
   35615:	call   11610 <stpcpy@plt>
   3561a:	mov    rdi,rax
   3561d:	test   r14,r14
   35620:	je     3558b <concatenated_filename+0x7b>
   35626:	jmp    35583 <concatenated_filename+0x73>
   3562b:	nop    DWORD PTR [rax+rax*1+0x0]
   35630:	xor    r12d,r12d
   35633:	cmp    BYTE PTR [rbp+rax*1-0x1],0x2f
   35638:	setne  al
   3563b:	setne  r12b
   3563f:	movzx  eax,al
   35642:	mov    DWORD PTR [rsp+0x4],eax
   35646:	jmp    355bf <concatenated_filename+0xaf>
   3564b:	nop    DWORD PTR [rax+rax*1+0x0]
   35650:	mov    rdi,rbp
   35653:	call   11af0 <malloc@plt>
   35658:	mov    r12,rax
   3565b:	test   rax,rax
   3565e:	je     35670 <concatenated_filename+0x160>
   35660:	mov    rsi,r13
   35663:	mov    rdi,rax
   35666:	call   114e0 <strcpy@plt>
   3566b:	jmp    3558b <concatenated_filename+0x7b>
   35670:	xor    r12d,r12d
   35673:	jmp    3558b <concatenated_filename+0x7b>
   35678:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000035680 <gl_cond_timedwait_func>:
   35680:	endbr64 
   35684:	sub    rsp,0x8
   35688:	call   11eb0 <pthread_cond_timedwait@plt>
   3568d:	cmp    eax,0x6e
   35690:	je     356a8 <gl_cond_timedwait_func+0x28>
   35692:	test   eax,eax
   35694:	jne    1283e <gl_cond_timedwait_func.cold>
   3569a:	xor    eax,eax
   3569c:	add    rsp,0x8
   356a0:	ret    
   356a1:	nop    DWORD PTR [rax+0x0]
   356a8:	mov    eax,0x1
   356ad:	add    rsp,0x8
   356b1:	ret    
   356b2:	cs nop WORD PTR [rax+rax*1+0x0]
   356bc:	nop    DWORD PTR [rax+0x0]

00000000000356c0 <md2_stream>:
   356c0:	endbr64 
   356c4:	push   r15
   356c6:	push   r14
   356c8:	mov    r14,rsi
   356cb:	push   r13
   356cd:	push   r12
   356cf:	mov    r12,rdi
   356d2:	mov    edi,0x8048
   356d7:	push   rbp
   356d8:	push   rbx
   356d9:	sub    rsp,0x68
   356dd:	mov    rax,QWORD PTR fs:0x28
   356e6:	mov    QWORD PTR [rsp+0x58],rax
   356eb:	xor    eax,eax
   356ed:	call   11af0 <malloc@plt>
   356f2:	test   rax,rax
   356f5:	je     357cf <md2_stream+0x10f>
   356fb:	mov    r15,rsp
   356fe:	mov    r13,rax
   35701:	mov    ebx,0x8000
   35706:	mov    rdi,r15
   35709:	call   35860 <md2_init_ctx>
   3570e:	xor    ebp,ebp
   35710:	jmp    35729 <md2_stream+0x69>
   35712:	nop    WORD PTR [rax+rax*1+0x0]
   35718:	mov    rdi,r12
   3571b:	test   rax,rax
   3571e:	je     35760 <md2_stream+0xa0>
   35720:	call   11fc0 <feof@plt>
   35725:	test   eax,eax
   35727:	jne    35769 <md2_stream+0xa9>
   35729:	mov    rdx,rbx
   3572c:	lea    rdi,[r13+rbp*1+0x0]
   35731:	mov    rcx,r12
   35734:	mov    esi,0x1
   35739:	sub    rdx,rbp
   3573c:	call   11e20 <fread@plt>
   35741:	add    rbp,rax
   35744:	cmp    rbp,0x8000
   3574b:	jne    35718 <md2_stream+0x58>
   3574d:	mov    rdx,r15
   35750:	mov    esi,0x8000
   35755:	mov    rdi,r13
   35758:	call   35a80 <md2_process_block>
   3575d:	jmp    3570e <md2_stream+0x4e>
   3575f:	nop
   35760:	call   12580 <ferror@plt>
   35765:	test   eax,eax
   35767:	jne    357c0 <md2_stream+0x100>
   35769:	test   rbp,rbp
   3576c:	jne    357a8 <md2_stream+0xe8>
   3576e:	mov    rsi,r14
   35771:	mov    rdi,r15
   35774:	call   358a0 <md2_finish_ctx>
   35779:	mov    rdi,r13
   3577c:	call   10430 <free@plt>
   35781:	xor    eax,eax
   35783:	mov    rdx,QWORD PTR [rsp+0x58]
   35788:	sub    rdx,QWORD PTR fs:0x28
   35791:	jne    357d6 <md2_stream+0x116>
   35793:	add    rsp,0x68
   35797:	pop    rbx
   35798:	pop    rbp
   35799:	pop    r12
   3579b:	pop    r13
   3579d:	pop    r14
   3579f:	pop    r15
   357a1:	ret    
   357a2:	nop    WORD PTR [rax+rax*1+0x0]
   357a8:	mov    rdx,r15
   357ab:	mov    rsi,rbp
   357ae:	mov    rdi,r13
   357b1:	call   35930 <md2_process_bytes>
   357b6:	jmp    3576e <md2_stream+0xae>
   357b8:	nop    DWORD PTR [rax+rax*1+0x0]
   357c0:	mov    rdi,r13
   357c3:	call   10430 <free@plt>
   357c8:	mov    eax,0x1
   357cd:	jmp    35783 <md2_stream+0xc3>
   357cf:	mov    eax,0x1
   357d4:	jmp    35783 <md2_stream+0xc3>
   357d6:	call   11760 <__stack_chk_fail@plt>
   357db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000357e0 <md2_compress>:
   357e0:	movdqu xmm0,XMMWORD PTR [rdi+0x40]
   357e5:	lea    r8,[rdi+0x10]
   357e9:	mov    rsi,rdi
   357ec:	lea    rcx,[rdi+0x20]
   357f0:	mov    rax,r8
   357f3:	movups XMMWORD PTR [rdi+0x20],xmm0
   357f7:	nop    WORD PTR [rax+rax*1+0x0]
   35800:	movzx  edx,BYTE PTR [rax+0x30]
   35804:	xor    dl,BYTE PTR [rax]
   35806:	add    rax,0x1
   3580a:	mov    BYTE PTR [rax+0x1f],dl
   3580d:	cmp    rax,rcx
   35810:	jne    35800 <md2_compress+0x20>
   35812:	lea    rcx,[rsi+0x40]
   35816:	mov    eax,0x29
   3581b:	xor    edi,edi
   3581d:	lea    rsi,[rip+0x2275c]        # 57f80 <PI_SUBST>
   35824:	nop    DWORD PTR [rax+0x0]
   35828:	mov    rdx,r8
   3582b:	jmp    35837 <md2_compress+0x57>
   3582d:	nop    DWORD PTR [rax]
   35830:	movzx  eax,al
   35833:	movzx  eax,BYTE PTR [rsi+rax*1]
   35837:	xor    al,BYTE PTR [rdx]
   35839:	add    rdx,0x1
   3583d:	mov    BYTE PTR [rdx-0x1],al
   35840:	cmp    rdx,rcx
   35843:	jne    35830 <md2_compress+0x50>
   35845:	add    eax,edi
   35847:	add    rdi,0x1
   3584b:	cmp    rdi,0x12
   3584f:	je     3585a <md2_compress+0x7a>
   35851:	movzx  eax,al
   35854:	movzx  eax,BYTE PTR [rsi+rax*1]
   35858:	jmp    35828 <md2_compress+0x48>
   3585a:	ret    
   3585b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000035860 <md2_init_ctx>:
   35860:	endbr64 
   35864:	pxor   xmm0,xmm0
   35868:	mov    QWORD PTR [rdi+0x50],0x0
   35870:	movups XMMWORD PTR [rdi+0x10],xmm0
   35874:	movups XMMWORD PTR [rdi+0x20],xmm0
   35878:	movups XMMWORD PTR [rdi+0x30],xmm0
   3587c:	movups XMMWORD PTR [rdi],xmm0
   3587f:	movups XMMWORD PTR [rdi+0x40],xmm0
   35883:	ret    
   35884:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3588f:	nop

0000000000035890 <md2_read_ctx>:
   35890:	endbr64 
   35894:	movdqu xmm0,XMMWORD PTR [rdi+0x10]
   35899:	mov    rax,rsi
   3589c:	movups XMMWORD PTR [rsi],xmm0
   3589f:	ret    

00000000000358a0 <md2_finish_ctx>:
   358a0:	endbr64 
   358a4:	push   r12
   358a6:	mov    edx,0x10
   358ab:	mov    r12,rsi
   358ae:	push   rbx
   358af:	mov    rbx,rdi
   358b2:	sub    rsp,0x8
   358b6:	mov    rax,QWORD PTR [rdi+0x50]
   358ba:	sub    rdx,rax
   358bd:	cmp    rax,0xf
   358c1:	ja     358d0 <md2_finish_ctx+0x30>
   358c3:	movzx  esi,dl
   358c6:	lea    rdi,[rdi+rax*1+0x40]
   358cb:	call   10ca0 <memset@plt>
   358d0:	mov    rdi,rbx
   358d3:	call   357e0 <md2_compress>
   358d8:	movzx  eax,BYTE PTR [rbx+0xf]
   358dc:	mov    rdx,rbx
   358df:	lea    rsi,[rbx+0x10]
   358e3:	lea    rcx,[rip+0x22696]        # 57f80 <PI_SUBST>
   358ea:	nop    WORD PTR [rax+rax*1+0x0]
   358f0:	xor    al,BYTE PTR [rdx+0x40]
   358f3:	add    rdx,0x1
   358f7:	movzx  eax,al
   358fa:	movzx  eax,BYTE PTR [rcx+rax*1]
   358fe:	xor    al,BYTE PTR [rdx-0x1]
   35901:	mov    BYTE PTR [rdx-0x1],al
   35904:	cmp    rsi,rdx
   35907:	jne    358f0 <md2_finish_ctx+0x50>
   35909:	movdqu xmm0,XMMWORD PTR [rbx]
   3590d:	mov    rdi,rbx
   35910:	movups XMMWORD PTR [rbx+0x40],xmm0
   35914:	call   357e0 <md2_compress>
   35919:	movdqu xmm1,XMMWORD PTR [rbx+0x10]
   3591e:	mov    rax,r12
   35921:	movups XMMWORD PTR [r12],xmm1
   35926:	add    rsp,0x8
   3592a:	pop    rbx
   3592b:	pop    r12
   3592d:	ret    
   3592e:	xchg   ax,ax

0000000000035930 <md2_process_bytes>:
   35930:	endbr64 
   35934:	test   rsi,rsi
   35937:	je     359f6 <md2_process_bytes+0xc6>
   3593d:	push   r15
   3593f:	mov    r15,rdi
   35942:	push   r14
   35944:	lea    r14,[rip+0x22635]        # 57f80 <PI_SUBST>
   3594b:	push   r13
   3594d:	mov    r13,rdx
   35950:	push   r12
   35952:	mov    r12,rsi
   35955:	push   rbp
   35956:	push   rbx
   35957:	lea    rbx,[rdx+0x40]
   3595b:	sub    rsp,0x8
   3595f:	jmp    3596d <md2_process_bytes+0x3d>
   35961:	nop    DWORD PTR [rax+0x0]
   35968:	test   r12,r12
   3596b:	je     359e7 <md2_process_bytes+0xb7>
   3596d:	mov    ebp,0x10
   35972:	sub    rbp,QWORD PTR [r13+0x50]
   35976:	mov    rdi,QWORD PTR [r13+0x50]
   3597a:	mov    rsi,r15
   3597d:	cmp    rbp,r12
   35980:	cmova  rbp,r12
   35984:	add    rdi,rbx
   35987:	mov    rdx,rbp
   3598a:	add    r15,rbp
   3598d:	sub    r12,rbp
   35990:	call   11220 <memcpy@plt>
   35995:	mov    rax,QWORD PTR [r13+0x50]
   35999:	add    rax,rbp
   3599c:	mov    QWORD PTR [r13+0x50],rax
   359a0:	cmp    rax,0x10
   359a4:	jne    35968 <md2_process_bytes+0x38>
   359a6:	mov    rdi,r13
   359a9:	call   357e0 <md2_compress>
   359ae:	movzx  eax,BYTE PTR [r13+0xf]
   359b3:	mov    rdx,r13
   359b6:	lea    rcx,[r13+0x10]
   359ba:	nop    WORD PTR [rax+rax*1+0x0]
   359c0:	xor    al,BYTE PTR [rdx+0x40]
   359c3:	add    rdx,0x1
   359c7:	movzx  eax,al
   359ca:	movzx  eax,BYTE PTR [r14+rax*1]
   359cf:	xor    al,BYTE PTR [rdx-0x1]
   359d2:	mov    BYTE PTR [rdx-0x1],al
   359d5:	cmp    rcx,rdx
   359d8:	jne    359c0 <md2_process_bytes+0x90>
   359da:	mov    QWORD PTR [r13+0x50],0x0
   359e2:	test   r12,r12
   359e5:	jne    3596d <md2_process_bytes+0x3d>
   359e7:	add    rsp,0x8
   359eb:	pop    rbx
   359ec:	pop    rbp
   359ed:	pop    r12
   359ef:	pop    r13
   359f1:	pop    r14
   359f3:	pop    r15
   359f5:	ret    
   359f6:	ret    
   359f7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000035a00 <md2_buffer>:
   35a00:	endbr64 
   35a04:	push   r12
   35a06:	pxor   xmm0,xmm0
   35a0a:	push   rbp
   35a0b:	mov    rbp,rdx
   35a0e:	sub    rsp,0x68
   35a12:	mov    rax,QWORD PTR fs:0x28
   35a1b:	mov    QWORD PTR [rsp+0x58],rax
   35a20:	xor    eax,eax
   35a22:	mov    r12,rsp
   35a25:	movaps XMMWORD PTR [rsp+0x10],xmm0
   35a2a:	mov    rdx,r12
   35a2d:	movaps XMMWORD PTR [rsp+0x20],xmm0
   35a32:	mov    QWORD PTR [rsp+0x50],0x0
   35a3b:	movaps XMMWORD PTR [rsp+0x30],xmm0
   35a40:	movaps XMMWORD PTR [rsp],xmm0
   35a44:	movaps XMMWORD PTR [rsp+0x40],xmm0
   35a49:	call   35930 <md2_process_bytes>
   35a4e:	mov    rsi,rbp
   35a51:	mov    rdi,r12
   35a54:	call   358a0 <md2_finish_ctx>
   35a59:	mov    rdx,QWORD PTR [rsp+0x58]
   35a5e:	sub    rdx,QWORD PTR fs:0x28
   35a67:	jne    35a71 <md2_buffer+0x71>
   35a69:	add    rsp,0x68
   35a6d:	pop    rbp
   35a6e:	pop    r12
   35a70:	ret    
   35a71:	call   11760 <__stack_chk_fail@plt>
   35a76:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000035a80 <md2_process_block>:
   35a80:	endbr64 
   35a84:	jmp    35930 <md2_process_bytes>
   35a89:	nop    DWORD PTR [rax+0x0]

0000000000035a90 <md5_stream>:
   35a90:	endbr64 
   35a94:	push   r15
   35a96:	push   r14
   35a98:	mov    r14,rsi
   35a9b:	push   r13
   35a9d:	push   r12
   35a9f:	mov    r12,rdi
   35aa2:	mov    edi,0x8048
   35aa7:	push   rbp
   35aa8:	push   rbx
   35aa9:	sub    rsp,0xb8
   35ab0:	mov    rax,QWORD PTR fs:0x28
   35ab9:	mov    QWORD PTR [rsp+0xa8],rax
   35ac1:	xor    eax,eax
   35ac3:	call   11af0 <malloc@plt>
   35ac8:	test   rax,rax
   35acb:	je     35bb8 <md5_stream+0x128>
   35ad1:	mov    r15,rsp
   35ad4:	mov    r13,rax
   35ad7:	mov    ebx,0x8000
   35adc:	mov    rdi,r15
   35adf:	call   35bc0 <md5_init_ctx>
   35ae4:	xor    ebp,ebp
   35ae6:	jmp    35b19 <md5_stream+0x89>
   35ae8:	nop    DWORD PTR [rax+rax*1+0x0]
   35af0:	mov    rdx,rbx
   35af3:	lea    rdi,[r13+rbp*1+0x0]
   35af8:	mov    rcx,r12
   35afb:	mov    esi,0x1
   35b00:	sub    rdx,rbp
   35b03:	call   11e20 <fread@plt>
   35b08:	add    rbp,rax
   35b0b:	cmp    rbp,0x8000
   35b12:	je     35b68 <md5_stream+0xd8>
   35b14:	test   rax,rax
   35b17:	je     35b80 <md5_stream+0xf0>
   35b19:	mov    rdi,r12
   35b1c:	call   11fc0 <feof@plt>
   35b21:	test   eax,eax
   35b23:	je     35af0 <md5_stream+0x60>
   35b25:	test   rbp,rbp
   35b28:	jne    35ba0 <md5_stream+0x110>
   35b2a:	mov    rsi,r14
   35b2d:	mov    rdi,r15
   35b30:	call   36390 <md5_finish_ctx>
   35b35:	mov    rdi,r13
   35b38:	call   10430 <free@plt>
   35b3d:	xor    eax,eax
   35b3f:	mov    rdx,QWORD PTR [rsp+0xa8]
   35b47:	sub    rdx,QWORD PTR fs:0x28
   35b50:	jne    35bb3 <md5_stream+0x123>
   35b52:	add    rsp,0xb8
   35b59:	pop    rbx
   35b5a:	pop    rbp
   35b5b:	pop    r12
   35b5d:	pop    r13
   35b5f:	pop    r14
   35b61:	pop    r15
   35b63:	ret    
   35b64:	nop    DWORD PTR [rax+0x0]
   35b68:	mov    rdx,r15
   35b6b:	mov    esi,0x8000
   35b70:	mov    rdi,r13
   35b73:	call   35c10 <md5_process_block>
   35b78:	jmp    35ae4 <md5_stream+0x54>
   35b7d:	nop    DWORD PTR [rax]
   35b80:	mov    rdi,r12
   35b83:	call   12580 <ferror@plt>
   35b88:	test   eax,eax
   35b8a:	je     35b25 <md5_stream+0x95>
   35b8c:	mov    rdi,r13
   35b8f:	call   10430 <free@plt>
   35b94:	mov    eax,0x1
   35b99:	jmp    35b3f <md5_stream+0xaf>
   35b9b:	nop    DWORD PTR [rax+rax*1+0x0]
   35ba0:	mov    rdx,r15
   35ba3:	mov    rsi,rbp
   35ba6:	mov    rdi,r13
   35ba9:	call   364b0 <md5_process_bytes>
   35bae:	jmp    35b2a <md5_stream+0x9a>
   35bb3:	call   11760 <__stack_chk_fail@plt>
   35bb8:	mov    eax,0x1
   35bbd:	jmp    35b3f <md5_stream+0xaf>
   35bbf:	nop

0000000000035bc0 <md5_init_ctx>:
   35bc0:	endbr64 
   35bc4:	movabs rax,0xefcdab8967452301
   35bce:	mov    QWORD PTR [rdi+0x10],0x0
   35bd6:	mov    QWORD PTR [rdi],rax
   35bd9:	movabs rax,0x1032547698badcfe
   35be3:	mov    QWORD PTR [rdi+0x8],rax
   35be7:	mov    DWORD PTR [rdi+0x18],0x0
   35bee:	ret    
   35bef:	nop

0000000000035bf0 <md5_read_ctx>:
   35bf0:	endbr64 
   35bf4:	mov    edx,DWORD PTR [rdi]
   35bf6:	mov    rax,rsi
   35bf9:	mov    DWORD PTR [rsi],edx
   35bfb:	mov    edx,DWORD PTR [rdi+0x4]
   35bfe:	mov    DWORD PTR [rsi+0x4],edx
   35c01:	mov    edx,DWORD PTR [rdi+0x8]
   35c04:	mov    DWORD PTR [rsi+0x8],edx
   35c07:	mov    edx,DWORD PTR [rdi+0xc]
   35c0a:	mov    DWORD PTR [rsi+0xc],edx
   35c0d:	ret    
   35c0e:	xchg   ax,ax

0000000000035c10 <md5_process_block>:
   35c10:	endbr64 
   35c14:	mov    rax,rsi
   35c17:	push   r15
   35c19:	and    rax,0xfffffffffffffffc
   35c1d:	push   r14
   35c1f:	push   r13
   35c21:	push   r12
   35c23:	push   rbp
   35c24:	push   rbx
   35c25:	mov    rbx,rdi
   35c28:	mov    rdi,rdx
   35c2b:	mov    r11d,DWORD PTR [rdx+0x4]
   35c2f:	lea    rcx,[rbx+rax*1]
   35c33:	mov    eax,DWORD PTR [rdx]
   35c35:	mov    r10d,DWORD PTR [rdx+0x8]
   35c39:	mov    DWORD PTR [rsp-0x18],eax
   35c3d:	mov    eax,DWORD PTR [rdx+0xc]
   35c40:	mov    QWORD PTR [rsp-0x8],rdx
   35c45:	mov    edx,esi
   35c47:	mov    DWORD PTR [rsp-0x20],eax
   35c4b:	xor    eax,eax
   35c4d:	add    edx,DWORD PTR [rdi+0x10]
   35c50:	setb   al
   35c53:	shr    rsi,0x20
   35c57:	add    esi,DWORD PTR [rdi+0x14]
   35c5a:	mov    QWORD PTR [rsp-0x10],rcx
   35c5f:	add    esi,eax
   35c61:	mov    DWORD PTR [rdi+0x10],edx
   35c64:	mov    DWORD PTR [rdi+0x14],esi
   35c67:	cmp    rbx,rcx
   35c6a:	jae    36362 <md5_process_block+0x752>
   35c70:	mov    r15d,r10d
   35c73:	nop    DWORD PTR [rax+rax*1+0x0]
   35c78:	mov    r14d,DWORD PTR [rbx]
   35c7b:	mov    edi,DWORD PTR [rsp-0x20]
   35c7f:	mov    eax,DWORD PTR [rsp-0x18]
   35c83:	mov    esi,DWORD PTR [rbx+0x4]
   35c86:	mov    r8d,DWORD PTR [rbx+0xc]
   35c8a:	mov    r10d,DWORD PTR [rbx+0x14]
   35c8e:	lea    edx,[r14+rax*1-0x28955b88]
   35c96:	mov    eax,edi
   35c98:	lea    ecx,[rsi+rdi*1-0x173848aa]
   35c9f:	mov    DWORD PTR [rsp-0x44],esi
   35ca3:	xor    eax,r15d
   35ca6:	mov    ebp,DWORD PTR [rbx+0x18]
   35ca9:	mov    r13d,DWORD PTR [rbx+0x1c]
   35cad:	mov    DWORD PTR [rsp-0x34],r10d
   35cb2:	and    eax,r11d
   35cb5:	mov    r12d,DWORD PTR [rbx+0x24]
   35cb9:	mov    DWORD PTR [rsp-0x3c],r8d
   35cbe:	xor    eax,edi
   35cc0:	lea    edi,[r8+r11*1-0x3e423112]
   35cc8:	mov    r8d,DWORD PTR [rbx+0x2c]
   35ccc:	add    eax,edx
   35cce:	mov    edx,r11d
   35cd1:	mov    DWORD PTR [rsp-0x2c],r12d
   35cd6:	rol    eax,0x7
   35cd9:	xor    edx,r15d
   35cdc:	mov    DWORD PTR [rsp-0x24],r8d
   35ce1:	add    eax,r11d
   35ce4:	and    edx,eax
   35ce6:	mov    r9d,eax
   35ce9:	xor    edx,r15d
   35cec:	xor    r9d,r11d
   35cef:	add    edx,ecx
   35cf1:	mov    ecx,DWORD PTR [rbx+0x8]
   35cf4:	rol    edx,0xc
   35cf7:	add    edx,eax
   35cf9:	lea    esi,[rcx+r15*1+0x242070db]
   35d01:	mov    DWORD PTR [rsp-0x40],ecx
   35d05:	mov    ecx,r9d
   35d08:	and    ecx,edx
   35d0a:	mov    r9d,eax
   35d0d:	xor    ecx,r11d
   35d10:	xor    r9d,edx
   35d13:	add    ecx,esi
   35d15:	mov    esi,r9d
   35d18:	mov    r9d,DWORD PTR [rbx+0x10]
   35d1c:	ror    ecx,0xf
   35d1f:	add    ecx,edx
   35d21:	mov    DWORD PTR [rsp-0x38],r9d
   35d26:	and    esi,ecx
   35d28:	xor    esi,eax
   35d2a:	add    esi,edi
   35d2c:	lea    edi,[r9+rax*1-0xa83f051]
   35d34:	mov    eax,edx
   35d36:	mov    r9d,DWORD PTR [rbx+0x3c]
   35d3a:	ror    esi,0xa
   35d3d:	xor    eax,ecx
   35d3f:	add    esi,ecx
   35d41:	and    eax,esi
   35d43:	xor    eax,edx
   35d45:	add    eax,edi
   35d47:	lea    edi,[r10+rdx*1+0x4787c62a]
   35d4f:	mov    edx,ecx
   35d51:	mov    r10d,ebp
   35d54:	rol    eax,0x7
   35d57:	xor    edx,esi
   35d59:	mov    DWORD PTR [rsp-0x1c],r10d
   35d5e:	add    eax,esi
   35d60:	and    edx,eax
   35d62:	xor    edx,ecx
   35d64:	add    edx,edi
   35d66:	lea    edi,[rbp+rcx*1-0x57cfb9ed]
   35d6d:	mov    ebp,esi
   35d6f:	xor    ebp,eax
   35d71:	rol    edx,0xc
   35d74:	add    edx,eax
   35d76:	mov    ecx,ebp
   35d78:	mov    ebp,eax
   35d7a:	and    ecx,edx
   35d7c:	xor    ebp,edx
   35d7e:	xor    ecx,esi
   35d80:	add    ecx,edi
   35d82:	lea    edi,[r13+rsi*1-0x2b96aff]
   35d8a:	mov    esi,ebp
   35d8c:	mov    ebp,DWORD PTR [rbx+0x20]
   35d8f:	ror    ecx,0xf
   35d92:	add    ecx,edx
   35d94:	mov    DWORD PTR [rsp-0x30],ebp
   35d98:	and    esi,ecx
   35d9a:	xor    esi,eax
   35d9c:	add    esi,edi
   35d9e:	lea    edi,[rbp+rax*1+0x698098d8]
   35da5:	mov    eax,edx
   35da7:	mov    ebp,DWORD PTR [rbx+0x30]
   35daa:	ror    esi,0xa
   35dad:	xor    eax,ecx
   35daf:	add    esi,ecx
   35db1:	and    eax,esi
   35db3:	xor    eax,edx
   35db5:	add    eax,edi
   35db7:	lea    edi,[r12+rdx*1-0x74bb0851]
   35dbf:	mov    edx,ecx
   35dc1:	mov    r12d,DWORD PTR [rbx+0x38]
   35dc5:	rol    eax,0x7
   35dc8:	xor    edx,esi
   35dca:	add    eax,esi
   35dcc:	and    edx,eax
   35dce:	xor    edx,ecx
   35dd0:	add    edx,edi
   35dd2:	mov    edi,DWORD PTR [rbx+0x28]
   35dd5:	rol    edx,0xc
   35dd8:	mov    DWORD PTR [rsp-0x28],edi
   35ddc:	lea    edi,[rdi+rcx*1-0xa44f]
   35de3:	mov    ecx,esi
   35de5:	add    edx,eax
   35de7:	xor    ecx,eax
   35de9:	and    ecx,edx
   35deb:	xor    ecx,esi
   35ded:	add    ecx,edi
   35def:	lea    edi,[r8+rsi*1-0x76a32842]
   35df7:	mov    esi,eax
   35df9:	mov    r8d,DWORD PTR [rbx+0x34]
   35dfd:	ror    ecx,0xf
   35e00:	xor    esi,edx
   35e02:	add    rbx,0x40
   35e06:	add    ecx,edx
   35e08:	and    esi,ecx
   35e0a:	xor    esi,eax
   35e0c:	add    esi,edi
   35e0e:	lea    edi,[rbp+rax*1+0x6b901122]
   35e15:	mov    eax,edx
   35e17:	ror    esi,0xa
   35e1a:	xor    eax,ecx
   35e1c:	add    esi,ecx
   35e1e:	and    eax,esi
   35e20:	xor    eax,edx
   35e22:	add    eax,edi
   35e24:	lea    edi,[r8+rdx*1-0x2678e6d]
   35e2c:	mov    edx,ecx
   35e2e:	rol    eax,0x7
   35e31:	xor    edx,esi
   35e33:	add    eax,esi
   35e35:	and    edx,eax
   35e37:	xor    edx,ecx
   35e39:	add    edx,edi
   35e3b:	lea    edi,[r12+rcx*1-0x5986bc72]
   35e43:	mov    ecx,esi
   35e45:	rol    edx,0xc
   35e48:	xor    ecx,eax
   35e4a:	add    edx,eax
   35e4c:	and    ecx,edx
   35e4e:	xor    ecx,esi
   35e50:	add    ecx,edi
   35e52:	lea    edi,[r9+rsi*1+0x49b40821]
   35e5a:	mov    esi,eax
   35e5c:	ror    ecx,0xf
   35e5f:	xor    esi,edx
   35e61:	add    ecx,edx
   35e63:	and    esi,ecx
   35e65:	xor    esi,eax
   35e67:	add    esi,edi
   35e69:	mov    edi,DWORD PTR [rsp-0x44]
   35e6d:	ror    esi,0xa
   35e70:	add    esi,ecx
   35e72:	lea    edi,[rdi+rax*1-0x9e1da9e]
   35e79:	mov    eax,ecx
   35e7b:	xor    eax,esi
   35e7d:	and    eax,edx
   35e7f:	xor    eax,ecx
   35e81:	add    eax,edi
   35e83:	lea    edi,[r10+rdx*1-0x3fbf4cc0]
   35e8b:	mov    edx,esi
   35e8d:	rol    eax,0x5
   35e90:	add    eax,esi
   35e92:	xor    edx,eax
   35e94:	and    edx,ecx
   35e96:	xor    edx,esi
   35e98:	add    edx,edi
   35e9a:	mov    edi,DWORD PTR [rsp-0x24]
   35e9e:	rol    edx,0x9
   35ea1:	add    edx,eax
   35ea3:	lea    edi,[rdi+rcx*1+0x265e5a51]
   35eaa:	mov    ecx,eax
   35eac:	xor    ecx,edx
   35eae:	and    ecx,esi
   35eb0:	xor    ecx,eax
   35eb2:	add    ecx,edi
   35eb4:	lea    edi,[r14+rsi*1-0x16493856]
   35ebc:	mov    esi,edx
   35ebe:	rol    ecx,0xe
   35ec1:	add    ecx,edx
   35ec3:	xor    esi,ecx
   35ec5:	and    esi,eax
   35ec7:	xor    esi,edx
   35ec9:	add    esi,edi
   35ecb:	mov    edi,DWORD PTR [rsp-0x34]
   35ecf:	ror    esi,0xc
   35ed2:	add    esi,ecx
   35ed4:	lea    edi,[rdi+rax*1-0x29d0efa3]
   35edb:	mov    eax,ecx
   35edd:	xor    eax,esi
   35edf:	and    eax,edx
   35ee1:	xor    eax,ecx
   35ee3:	add    eax,edi
   35ee5:	mov    edi,DWORD PTR [rsp-0x28]
   35ee9:	rol    eax,0x5
   35eec:	add    eax,esi
   35eee:	lea    edi,[rdi+rdx*1+0x2441453]
   35ef5:	mov    edx,esi
   35ef7:	xor    edx,eax
   35ef9:	and    edx,ecx
   35efb:	xor    edx,esi
   35efd:	add    edx,edi
   35eff:	lea    edi,[r9+rcx*1-0x275e197f]
   35f07:	mov    ecx,eax
   35f09:	rol    edx,0x9
   35f0c:	add    edx,eax
   35f0e:	xor    ecx,edx
   35f10:	and    ecx,esi
   35f12:	xor    ecx,eax
   35f14:	add    ecx,edi
   35f16:	mov    edi,DWORD PTR [rsp-0x38]
   35f1a:	mov    r10d,DWORD PTR [rsp-0x2c]
   35f1f:	rol    ecx,0xe
   35f22:	add    ecx,edx
   35f24:	lea    edi,[rdi+rsi*1-0x182c0438]
   35f2b:	mov    esi,edx
   35f2d:	xor    esi,ecx
   35f2f:	and    esi,eax
   35f31:	xor    esi,edx
   35f33:	add    esi,edi
   35f35:	lea    edi,[r10+rax*1+0x21e1cde6]
   35f3d:	mov    eax,ecx
   35f3f:	mov    r10d,DWORD PTR [rsp-0x30]
   35f44:	ror    esi,0xc
   35f47:	add    esi,ecx
   35f49:	xor    eax,esi
   35f4b:	and    eax,edx
   35f4d:	xor    eax,ecx
   35f4f:	add    eax,edi
   35f51:	lea    edi,[r12+rdx*1-0x3cc8f82a]
   35f59:	mov    edx,esi
   35f5b:	rol    eax,0x5
   35f5e:	add    eax,esi
   35f60:	xor    edx,eax
   35f62:	and    edx,ecx
   35f64:	xor    edx,esi
   35f66:	add    edx,edi
   35f68:	mov    edi,DWORD PTR [rsp-0x3c]
   35f6c:	rol    edx,0x9
   35f6f:	add    edx,eax
   35f71:	lea    edi,[rdi+rcx*1-0xb2af279]
   35f78:	mov    ecx,eax
   35f7a:	xor    ecx,edx
   35f7c:	and    ecx,esi
   35f7e:	lea    esi,[r10+rsi*1+0x455a14ed]
   35f86:	mov    r10d,edx
   35f89:	xor    ecx,eax
   35f8b:	add    ecx,edi
   35f8d:	rol    ecx,0xe
   35f90:	add    ecx,edx
   35f92:	xor    r10d,ecx
   35f95:	mov    edi,r10d
   35f98:	and    edi,eax
   35f9a:	xor    edi,edx
   35f9c:	add    edi,esi
   35f9e:	lea    esi,[r8+rax*1-0x561c16fb]
   35fa6:	mov    eax,ecx
   35fa8:	ror    edi,0xc
   35fab:	add    edi,ecx
   35fad:	xor    eax,edi
   35faf:	lea    r10d,[rbp+rdi*1-0x72d5b376]
   35fb7:	and    eax,edx
   35fb9:	mov    DWORD PTR [rsp-0x14],r10d
   35fbe:	xor    eax,ecx
   35fc0:	add    eax,esi
   35fc2:	mov    esi,DWORD PTR [rsp-0x40]
   35fc6:	rol    eax,0x5
   35fc9:	add    eax,edi
   35fcb:	lea    esi,[rsi+rdx*1-0x3105c08]
   35fd2:	mov    edx,edi
   35fd4:	xor    edx,eax
   35fd6:	and    edx,ecx
   35fd8:	lea    ecx,[r13+rcx*1+0x676f02d9]
   35fe0:	xor    edx,edi
   35fe2:	add    edx,esi
   35fe4:	mov    esi,eax
   35fe6:	rol    edx,0x9
   35fe9:	add    edx,eax
   35feb:	xor    esi,edx
   35fed:	and    esi,edi
   35fef:	xor    esi,eax
   35ff1:	add    esi,ecx
   35ff3:	mov    ecx,edx
   35ff5:	rol    esi,0xe
   35ff8:	add    esi,edx
   35ffa:	xor    ecx,esi
   35ffc:	mov    r10d,ecx
   35fff:	and    r10d,eax
   36002:	mov    edi,r10d
   36005:	mov    r10d,DWORD PTR [rsp-0x34]
   3600a:	xor    edi,edx
   3600c:	add    edi,DWORD PTR [rsp-0x14]
   36010:	ror    edi,0xc
   36013:	lea    eax,[r10+rax*1-0x5c6be]
   3601b:	add    edi,esi
   3601d:	xor    ecx,edi
   3601f:	add    ecx,eax
   36021:	mov    eax,DWORD PTR [rsp-0x30]
   36025:	rol    ecx,0x4
   36028:	lea    eax,[rax+rdx*1-0x788e097f]
   3602f:	mov    edx,esi
   36031:	add    ecx,edi
   36033:	xor    edx,edi
   36035:	xor    edx,ecx
   36037:	add    edx,eax
   36039:	mov    eax,DWORD PTR [rsp-0x24]
   3603d:	rol    edx,0xb
   36040:	lea    eax,[rax+rsi*1+0x6d9d6122]
   36047:	mov    esi,edi
   36049:	add    edx,ecx
   3604b:	xor    esi,ecx
   3604d:	lea    edi,[r12+rdi*1-0x21ac7f4]
   36055:	xor    esi,edx
   36057:	add    esi,eax
   36059:	mov    eax,ecx
   3605b:	rol    esi,0x10
   3605e:	xor    eax,edx
   36060:	add    esi,edx
   36062:	xor    eax,esi
   36064:	mov    r10d,esi
   36067:	add    eax,edi
   36069:	mov    edi,DWORD PTR [rsp-0x44]
   3606d:	ror    eax,0x9
   36070:	lea    edi,[rdi+rcx*1-0x5b4115bc]
   36077:	mov    ecx,edx
   36079:	add    eax,esi
   3607b:	xor    ecx,esi
   3607d:	xor    r10d,eax
   36080:	lea    esi,[r13+rsi*1-0x944b4a0]
   36088:	xor    ecx,eax
   3608a:	add    ecx,edi
   3608c:	mov    edi,DWORD PTR [rsp-0x38]
   36090:	rol    ecx,0x4
   36093:	add    ecx,eax
   36095:	lea    edx,[rdi+rdx*1+0x4bdecfa9]
   3609c:	mov    edi,r10d
   3609f:	xor    edi,ecx
   360a1:	add    edi,edx
   360a3:	mov    edx,eax
   360a5:	rol    edi,0xb
   360a8:	xor    edx,ecx
   360aa:	add    edi,ecx
   360ac:	xor    edx,edi
   360ae:	add    edx,esi
   360b0:	mov    esi,DWORD PTR [rsp-0x28]
   360b4:	rol    edx,0x10
   360b7:	lea    eax,[rsi+rax*1-0x41404390]
   360be:	mov    esi,ecx
   360c0:	add    edx,edi
   360c2:	xor    esi,edi
   360c4:	xor    esi,edx
   360c6:	add    esi,eax
   360c8:	lea    eax,[r8+rcx*1+0x289b7ec6]
   360d0:	mov    ecx,edi
   360d2:	ror    esi,0x9
   360d5:	xor    ecx,edx
   360d7:	lea    edi,[r14+rdi*1-0x155ed806]
   360df:	add    esi,edx
   360e1:	xor    ecx,esi
   360e3:	mov    r10d,esi
   360e6:	add    ecx,eax
   360e8:	mov    eax,edx
   360ea:	rol    ecx,0x4
   360ed:	xor    eax,esi
   360ef:	add    ecx,esi
   360f1:	xor    eax,ecx
   360f3:	xor    r10d,ecx
   360f6:	add    eax,edi
   360f8:	mov    edi,DWORD PTR [rsp-0x3c]
   360fc:	rol    eax,0xb
   360ff:	add    eax,ecx
   36101:	lea    edx,[rdi+rdx*1-0x2b10cf7b]
   36108:	mov    edi,r10d
   3610b:	xor    edi,eax
   3610d:	add    edi,edx
   3610f:	mov    edx,DWORD PTR [rsp-0x1c]
   36113:	rol    edi,0x10
   36116:	lea    edx,[rdx+rsi*1+0x4881d05]
   3611d:	mov    esi,ecx
   3611f:	add    edi,eax
   36121:	xor    esi,eax
   36123:	xor    esi,edi
   36125:	add    esi,edx
   36127:	mov    edx,DWORD PTR [rsp-0x2c]
   3612b:	ror    esi,0x9
   3612e:	lea    ecx,[rdx+rcx*1-0x262b2fc7]
   36135:	mov    edx,eax
   36137:	add    esi,edi
   36139:	xor    edx,edi
   3613b:	lea    eax,[rbp+rax*1-0x1924661b]
   36142:	mov    r10d,esi
   36145:	xor    edx,esi
   36147:	add    edx,ecx
   36149:	mov    ecx,edi
   3614b:	rol    edx,0x4
   3614e:	add    edx,esi
   36150:	xor    ecx,esi
   36152:	xor    ecx,edx
   36154:	xor    r10d,edx
   36157:	add    ecx,eax
   36159:	lea    eax,[r9+rdi*1+0x1fa27cf8]
   36161:	mov    edi,r10d
   36164:	mov    r10d,DWORD PTR [rsp-0x34]
   36169:	rol    ecx,0xb
   3616c:	add    ecx,edx
   3616e:	xor    edi,ecx
   36170:	add    edi,eax
   36172:	mov    eax,DWORD PTR [rsp-0x40]
   36176:	rol    edi,0x10
   36179:	lea    esi,[rax+rsi*1-0x3b53a99b]
   36180:	mov    eax,edx
   36182:	add    edi,ecx
   36184:	xor    eax,ecx
   36186:	xor    eax,edi
   36188:	add    eax,esi
   3618a:	lea    esi,[r14+rdx*1-0xbd6ddbc]
   36192:	mov    edx,ecx
   36194:	mov    r14d,DWORD PTR [rsp-0x44]
   36199:	ror    eax,0x9
   3619c:	not    edx
   3619e:	add    eax,edi
   361a0:	or     edx,eax
   361a2:	xor    edx,edi
   361a4:	add    edx,esi
   361a6:	lea    esi,[r13+rcx*1+0x432aff97]
   361ae:	mov    r13d,edi
   361b1:	rol    edx,0x6
   361b4:	not    r13d
   361b7:	lea    edi,[r12+rdi*1-0x546bdc59]
   361bf:	add    edx,eax
   361c1:	mov    ecx,r13d
   361c4:	or     ecx,edx
   361c6:	mov    r13d,edx
   361c9:	xor    ecx,eax
   361cb:	not    r13d
   361ce:	add    ecx,esi
   361d0:	mov    esi,eax
   361d2:	rol    ecx,0xa
   361d5:	not    esi
   361d7:	add    ecx,edx
   361d9:	or     esi,ecx
   361db:	mov    r12d,ecx
   361de:	xor    esi,edx
   361e0:	not    r12d
   361e3:	add    esi,edi
   361e5:	lea    edi,[r10+rax*1-0x36c5fc7]
   361ed:	mov    eax,r13d
   361f0:	mov    r10d,DWORD PTR [rsp-0x1c]
   361f5:	rol    esi,0xf
   361f8:	add    esi,ecx
   361fa:	or     eax,esi
   361fc:	xor    eax,ecx
   361fe:	add    eax,edi
   36200:	lea    edi,[rbp+rdx*1+0x655b59c3]
   36207:	mov    edx,r12d
   3620a:	mov    ebp,DWORD PTR [rsp-0x3c]
   3620e:	ror    eax,0xb
   36211:	add    eax,esi
   36213:	or     edx,eax
   36215:	xor    edx,esi
   36217:	add    edx,edi
   36219:	lea    edi,[rbp+rcx*1-0x70f3336e]
   36220:	mov    ebp,esi
   36222:	rol    edx,0x6
   36225:	not    ebp
   36227:	add    edx,eax
   36229:	mov    ecx,ebp
   3622b:	or     ecx,edx
   3622d:	mov    ebp,edx
   3622f:	xor    ecx,eax
   36231:	not    ebp
   36233:	add    ecx,edi
   36235:	mov    edi,DWORD PTR [rsp-0x28]
   36239:	rol    ecx,0xa
   3623c:	lea    edi,[rdi+rsi*1-0x100b83]
   36243:	mov    esi,eax
   36245:	add    ecx,edx
   36247:	not    esi
   36249:	or     esi,ecx
   3624b:	xor    esi,edx
   3624d:	add    esi,edi
   3624f:	lea    edi,[r14+rax*1-0x7a7ba22f]
   36257:	mov    eax,ebp
   36259:	mov    r14d,DWORD PTR [rsp-0x30]
   3625e:	rol    esi,0xf
   36261:	mov    ebp,ecx
   36263:	add    esi,ecx
   36265:	not    ebp
   36267:	or     eax,esi
   36269:	xor    eax,ecx
   3626b:	add    eax,edi
   3626d:	lea    edi,[r14+rdx*1+0x6fa87e4f]
   36275:	mov    edx,ebp
   36277:	mov    ebp,esi
   36279:	ror    eax,0xb
   3627c:	not    ebp
   3627e:	mov    r14d,DWORD PTR [rsp-0x24]
   36283:	add    eax,esi
   36285:	or     edx,eax
   36287:	xor    edx,esi
   36289:	add    edx,edi
   3628b:	lea    edi,[r9+rcx*1-0x1d31920]
   36293:	mov    ecx,ebp
   36295:	mov    r9d,DWORD PTR [rsp-0x38]
   3629a:	rol    edx,0x6
   3629d:	add    edx,eax
   3629f:	or     ecx,edx
   362a1:	xor    ecx,eax
   362a3:	add    ecx,edi
   362a5:	lea    edi,[r10+rsi*1-0x5cfebcec]
   362ad:	mov    esi,eax
   362af:	mov    r10d,DWORD PTR [rsp-0x2c]
   362b4:	rol    ecx,0xa
   362b7:	not    esi
   362b9:	lea    eax,[r8+rax*1+0x4e0811a1]
   362c1:	mov    r8d,edx
   362c4:	add    ecx,edx
   362c6:	not    r8d
   362c9:	or     esi,ecx
   362cb:	xor    esi,edx
   362cd:	lea    edx,[r9+rdx*1-0x8ac817e]
   362d5:	mov    r9d,ecx
   362d8:	add    esi,edi
   362da:	mov    edi,r8d
   362dd:	not    r9d
   362e0:	rol    esi,0xf
   362e3:	add    esi,ecx
   362e5:	or     edi,esi
   362e7:	xor    edi,ecx
   362e9:	lea    ecx,[r14+rcx*1-0x42c50dcb]
   362f1:	add    edi,eax
   362f3:	mov    eax,r9d
   362f6:	ror    edi,0xb
   362f9:	add    edi,esi
   362fb:	or     eax,edi
   362fd:	xor    eax,esi
   362ff:	add    eax,edx
   36301:	mov    edx,esi
   36303:	rol    eax,0x6
   36306:	not    edx
   36308:	add    eax,edi
   3630a:	or     edx,eax
   3630c:	xor    edx,edi
   3630e:	add    edx,ecx
   36310:	mov    ecx,DWORD PTR [rsp-0x40]
   36314:	rol    edx,0xa
   36317:	lea    esi,[rcx+rsi*1+0x2ad7d2bb]
   3631e:	mov    ecx,edi
   36320:	add    edx,eax
   36322:	not    ecx
   36324:	lea    edi,[r10+rdi*1-0x14792c6f]
   3632c:	or     ecx,edx
   3632e:	xor    ecx,eax
   36330:	add    ecx,esi
   36332:	mov    esi,eax
   36334:	rol    ecx,0xf
   36337:	not    esi
   36339:	add    ecx,edx
   3633b:	or     esi,ecx
   3633d:	xor    esi,edx
   3633f:	add    esi,edi
   36341:	ror    esi,0xb
   36344:	add    esi,ecx
   36346:	add    DWORD PTR [rsp-0x18],eax
   3634a:	add    r15d,ecx
   3634d:	add    DWORD PTR [rsp-0x20],edx
   36351:	add    r11d,esi
   36354:	cmp    QWORD PTR [rsp-0x10],rbx
   36359:	ja     35c78 <md5_process_block+0x68>
   3635f:	mov    r10d,r15d
   36362:	mov    rax,QWORD PTR [rsp-0x8]
   36367:	mov    ebx,DWORD PTR [rsp-0x18]
   3636b:	mov    DWORD PTR [rax],ebx
   3636d:	mov    ebx,DWORD PTR [rsp-0x20]
   36371:	mov    DWORD PTR [rax+0x4],r11d
   36375:	mov    DWORD PTR [rax+0x8],r10d
   36379:	mov    DWORD PTR [rax+0xc],ebx
   3637c:	pop    rbx
   3637d:	pop    rbp
   3637e:	pop    r12
   36380:	pop    r13
   36382:	pop    r14
   36384:	pop    r15
   36386:	ret    
   36387:	nop    WORD PTR [rax+rax*1+0x0]

0000000000036390 <md5_finish_ctx>:
   36390:	endbr64 
   36394:	push   r12
   36396:	mov    r12,rsi
   36399:	push   rbp
   3639a:	mov    edx,DWORD PTR [rdi+0x18]
   3639d:	mov    rbp,rdi
   363a0:	mov    ecx,DWORD PTR [rbp+0x14]
   363a3:	cmp    edx,0x38
   363a6:	mov    edi,edx
   363a8:	sbb    r8,r8
   363ab:	and    r8,0xffffffffffffffc0
   363af:	sub    r8,0xffffffffffffff80
   363b3:	cmp    edx,0x38
   363b6:	sbb    rax,rax
   363b9:	and    rax,0xffffffffffffffc0
   363bd:	add    rax,0x78
   363c1:	cmp    edx,0x38
   363c4:	sbb    rsi,rsi
   363c7:	and    rsi,0xfffffffffffffff0
   363cb:	add    rsi,0x1f
   363cf:	cmp    edx,0x38
   363d2:	sbb    r9,r9
   363d5:	and    r9,0xfffffffffffffff0
   363d9:	add    r9,0x1e
   363dd:	add    edi,DWORD PTR [rbp+0x10]
   363e0:	mov    DWORD PTR [rbp+0x10],edi
   363e3:	jae    363eb <md5_finish_ctx+0x5b>
   363e5:	add    ecx,0x1
   363e8:	mov    DWORD PTR [rbp+0x14],ecx
   363eb:	lea    r10d,[rdi*8+0x0]
   363f3:	shl    ecx,0x3
   363f6:	shr    edi,0x1d
   363f9:	sub    rax,rdx
   363fc:	mov    DWORD PTR [rbp+r9*4+0x1c],r10d
   36401:	or     ecx,edi
   36403:	lea    r9,[rbp+0x1c]
   36407:	mov    DWORD PTR [rbp+rsi*4+0x1c],ecx
   3640b:	lea    rcx,[r9+rdx*1]
   3640f:	lea    rsi,[rip+0x21c6a]        # 58080 <fillbuf>
   36416:	cmp    rax,0x8
   3641a:	jae    36440 <md5_finish_ctx+0xb0>
   3641c:	test   al,0x4
   3641e:	jne    36490 <md5_finish_ctx+0x100>
   36420:	test   rax,rax
   36423:	je     3646c <md5_finish_ctx+0xdc>
   36425:	movzx  edx,BYTE PTR [rip+0x21c54]        # 58080 <fillbuf>
   3642c:	mov    BYTE PTR [rcx],dl
   3642e:	test   al,0x2
   36430:	je     3646c <md5_finish_ctx+0xdc>
   36432:	movzx  edx,WORD PTR [rsi+rax*1-0x2]
   36437:	mov    WORD PTR [rcx+rax*1-0x2],dx
   3643c:	jmp    3646c <md5_finish_ctx+0xdc>
   3643e:	xchg   ax,ax
   36440:	mov    rdx,QWORD PTR [rip+0x21c39]        # 58080 <fillbuf>
   36447:	lea    rdi,[rcx+0x8]
   3644b:	and    rdi,0xfffffffffffffff8
   3644f:	mov    QWORD PTR [rcx],rdx
   36452:	mov    rdx,QWORD PTR [rsi+rax*1-0x8]
   36457:	mov    QWORD PTR [rcx+rax*1-0x8],rdx
   3645c:	sub    rcx,rdi
   3645f:	sub    rsi,rcx
   36462:	add    rcx,rax
   36465:	shr    rcx,0x3
   36469:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   3646c:	mov    rdx,rbp
   3646f:	mov    rsi,r8
   36472:	mov    rdi,r9
   36475:	call   35c10 <md5_process_block>
   3647a:	mov    rsi,r12
   3647d:	mov    rdi,rbp
   36480:	pop    rbp
   36481:	pop    r12
   36483:	jmp    35bf0 <md5_read_ctx>
   36488:	nop    DWORD PTR [rax+rax*1+0x0]
   36490:	mov    edx,DWORD PTR [rip+0x21bea]        # 58080 <fillbuf>
   36496:	mov    DWORD PTR [rcx],edx
   36498:	mov    edx,DWORD PTR [rsi+rax*1-0x4]
   3649c:	mov    DWORD PTR [rcx+rax*1-0x4],edx
   364a0:	jmp    3646c <md5_finish_ctx+0xdc>
   364a2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   364ad:	nop    DWORD PTR [rax]

00000000000364b0 <md5_process_bytes>:
   364b0:	endbr64 
   364b4:	push   r15
   364b6:	push   r14
   364b8:	mov    r14,rdx
   364bb:	push   r13
   364bd:	push   r12
   364bf:	push   rbp
   364c0:	mov    rbp,rsi
   364c3:	push   rbx
   364c4:	mov    rbx,rdi
   364c7:	sub    rsp,0x18
   364cb:	mov    eax,DWORD PTR [rdx+0x18]
   364ce:	test   eax,eax
   364d0:	jne    36610 <md5_process_bytes+0x160>
   364d6:	cmp    rbp,0x3f
   364da:	jbe    365f3 <md5_process_bytes+0x143>
   364e0:	test   bl,0x3
   364e3:	je     365d8 <md5_process_bytes+0x128>
   364e9:	lea    r12,[r14+0x1c]
   364ed:	cmp    rbp,0x40
   364f1:	je     36778 <md5_process_bytes+0x2c8>
   364f7:	lea    rax,[rbp-0x41]
   364fb:	shr    rax,0x6
   364ff:	mov    r15,rax
   36502:	lea    rax,[rax+0x1]
   36506:	shl    rax,0x6
   3650a:	lea    r13,[rbx+rax*1]
   3650e:	xchg   ax,ax
   36510:	movdqu xmm0,XMMWORD PTR [rbx]
   36514:	mov    rdx,r14
   36517:	mov    esi,0x40
   3651c:	mov    rdi,r12
   3651f:	add    rbx,0x40
   36523:	movups XMMWORD PTR [r12],xmm0
   36528:	movdqu xmm1,XMMWORD PTR [rbx-0x30]
   3652d:	movups XMMWORD PTR [r12+0x10],xmm1
   36533:	movdqu xmm2,XMMWORD PTR [rbx-0x20]
   36538:	movups XMMWORD PTR [r12+0x20],xmm2
   3653e:	movdqu xmm3,XMMWORD PTR [rbx-0x10]
   36543:	movups XMMWORD PTR [r12+0x30],xmm3
   36549:	call   35c10 <md5_process_block>
   3654e:	cmp    rbx,r13
   36551:	jne    36510 <md5_process_bytes+0x60>
   36553:	mov    rax,r15
   36556:	neg    rax
   36559:	shl    rax,0x6
   3655d:	lea    rbp,[rbp+rax*1-0x40]
   36562:	mov    ebx,DWORD PTR [r14+0x18]
   36566:	mov    edx,ebp
   36568:	lea    rcx,[r12+rbx*1]
   3656c:	cmp    ebp,0x8
   3656f:	jae    36660 <md5_process_bytes+0x1b0>
   36575:	test   bpl,0x4
   36579:	jne    36780 <md5_process_bytes+0x2d0>
   3657f:	test   edx,edx
   36581:	je     36593 <md5_process_bytes+0xe3>
   36583:	movzx  eax,BYTE PTR [r13+0x0]
   36588:	mov    BYTE PTR [rcx],al
   3658a:	test   dl,0x2
   3658d:	jne    36794 <md5_process_bytes+0x2e4>
   36593:	add    rbx,rbp
   36596:	cmp    rbx,0x3f
   3659a:	jbe    365bf <md5_process_bytes+0x10f>
   3659c:	mov    rdx,r14
   3659f:	mov    esi,0x40
   365a4:	mov    rdi,r12
   365a7:	sub    rbx,0x40
   365ab:	call   35c10 <md5_process_block>
   365b0:	lea    rsi,[r14+0x5c]
   365b4:	mov    rdx,rbx
   365b7:	mov    rdi,r12
   365ba:	call   11220 <memcpy@plt>
   365bf:	mov    DWORD PTR [r14+0x18],ebx
   365c3:	add    rsp,0x18
   365c7:	pop    rbx
   365c8:	pop    rbp
   365c9:	pop    r12
   365cb:	pop    r13
   365cd:	pop    r14
   365cf:	pop    r15
   365d1:	ret    
   365d2:	nop    WORD PTR [rax+rax*1+0x0]
   365d8:	mov    r12,rbp
   365db:	mov    rdi,rbx
   365de:	mov    rdx,r14
   365e1:	and    ebp,0x3f
   365e4:	and    r12,0xffffffffffffffc0
   365e8:	mov    rsi,r12
   365eb:	add    rbx,r12
   365ee:	call   35c10 <md5_process_block>
   365f3:	test   rbp,rbp
   365f6:	jne    367a4 <md5_process_bytes+0x2f4>
   365fc:	add    rsp,0x18
   36600:	pop    rbx
   36601:	pop    rbp
   36602:	pop    r12
   36604:	pop    r13
   36606:	pop    r14
   36608:	pop    r15
   3660a:	ret    
   3660b:	nop    DWORD PTR [rax+rax*1+0x0]
   36610:	mov    r12d,eax
   36613:	mov    eax,0x80
   36618:	lea    rcx,[rdx+0x1c]
   3661c:	sub    rax,r12
   3661f:	lea    rdi,[rcx+r12*1]
   36623:	mov    QWORD PTR [rsp+0x8],rcx
   36628:	cmp    rax,rsi
   3662b:	cmova  rax,rsi
   3662f:	mov    rsi,rbx
   36632:	mov    rdx,rax
   36635:	mov    r13,rax
   36638:	call   11220 <memcpy@plt>
   3663d:	mov    r15d,DWORD PTR [r14+0x18]
   36641:	mov    rcx,QWORD PTR [rsp+0x8]
   36646:	add    r15d,r13d
   36649:	cmp    r15d,0x40
   3664d:	mov    DWORD PTR [r14+0x18],r15d
   36651:	ja     366b0 <md5_process_bytes+0x200>
   36653:	add    rbx,r13
   36656:	sub    rbp,r13
   36659:	jmp    364d6 <md5_process_bytes+0x26>
   3665e:	xchg   ax,ax
   36660:	mov    rax,QWORD PTR [r13+0x0]
   36664:	lea    rdi,[rcx+0x8]
   36668:	and    rdi,0xfffffffffffffff8
   3666c:	mov    QWORD PTR [rcx],rax
   3666f:	mov    eax,ebp
   36671:	mov    rdx,QWORD PTR [r13+rax*1-0x8]
   36676:	mov    QWORD PTR [rcx+rax*1-0x8],rdx
   3667b:	sub    rcx,rdi
   3667e:	mov    rax,r13
   36681:	mov    rdx,rcx
   36684:	sub    rax,rcx
   36687:	add    edx,ebp
   36689:	and    edx,0xfffffff8
   3668c:	cmp    edx,0x8
   3668f:	jb     36593 <md5_process_bytes+0xe3>
   36695:	and    edx,0xfffffff8
   36698:	xor    ecx,ecx
   3669a:	mov    esi,ecx
   3669c:	add    ecx,0x8
   3669f:	mov    r8,QWORD PTR [rax+rsi*1]
   366a3:	mov    QWORD PTR [rdi+rsi*1],r8
   366a7:	cmp    ecx,edx
   366a9:	jb     3669a <md5_process_bytes+0x1ea>
   366ab:	jmp    36593 <md5_process_bytes+0xe3>
   366b0:	mov    esi,r15d
   366b3:	mov    rdi,rcx
   366b6:	mov    rdx,r14
   366b9:	and    esi,0xffffffc0
   366bc:	call   35c10 <md5_process_block>
   366c1:	mov    rcx,QWORD PTR [rsp+0x8]
   366c6:	mov    esi,r15d
   366c9:	lea    rax,[r12+r13*1]
   366cd:	and    esi,0x3f
   366d0:	and    rax,0xffffffffffffffc0
   366d4:	mov    DWORD PTR [r14+0x18],esi
   366d8:	add    rax,rcx
   366db:	cmp    esi,0x8
   366de:	jae    36710 <md5_process_bytes+0x260>
   366e0:	test   r15b,0x4
   366e4:	jne    3675d <md5_process_bytes+0x2ad>
   366e6:	test   esi,esi
   366e8:	je     36653 <md5_process_bytes+0x1a3>
   366ee:	movzx  edx,BYTE PTR [rax]
   366f1:	and    r15d,0x2
   366f5:	mov    BYTE PTR [r14+0x1c],dl
   366f9:	je     36653 <md5_process_bytes+0x1a3>
   366ff:	mov    edx,esi
   36701:	movzx  eax,WORD PTR [rax+rdx*1-0x2]
   36706:	mov    WORD PTR [rcx+rdx*1-0x2],ax
   3670b:	jmp    36653 <md5_process_bytes+0x1a3>
   36710:	mov    rdx,QWORD PTR [rax]
   36713:	mov    QWORD PTR [r14+0x1c],rdx
   36717:	mov    edx,esi
   36719:	mov    rdi,QWORD PTR [rax+rdx*1-0x8]
   3671e:	mov    QWORD PTR [rcx+rdx*1-0x8],rdi
   36723:	lea    rdi,[r14+0x24]
   36727:	and    rdi,0xfffffffffffffff8
   3672b:	sub    rcx,rdi
   3672e:	mov    rdx,rcx
   36731:	sub    rax,rcx
   36734:	add    edx,esi
   36736:	and    edx,0xfffffff8
   36739:	cmp    edx,0x8
   3673c:	jb     36653 <md5_process_bytes+0x1a3>
   36742:	and    edx,0xfffffff8
   36745:	xor    ecx,ecx
   36747:	mov    esi,ecx
   36749:	add    ecx,0x8
   3674c:	mov    r8,QWORD PTR [rax+rsi*1]
   36750:	mov    QWORD PTR [rdi+rsi*1],r8
   36754:	cmp    ecx,edx
   36756:	jb     36747 <md5_process_bytes+0x297>
   36758:	jmp    36653 <md5_process_bytes+0x1a3>
   3675d:	mov    edx,DWORD PTR [rax]
   3675f:	mov    DWORD PTR [r14+0x1c],edx
   36763:	mov    edx,esi
   36765:	mov    eax,DWORD PTR [rax+rdx*1-0x4]
   36769:	mov    DWORD PTR [rcx+rdx*1-0x4],eax
   3676d:	jmp    36653 <md5_process_bytes+0x1a3>
   36772:	nop    WORD PTR [rax+rax*1+0x0]
   36778:	mov    r13,rbx
   3677b:	jmp    36562 <md5_process_bytes+0xb2>
   36780:	mov    eax,DWORD PTR [r13+0x0]
   36784:	mov    DWORD PTR [rcx],eax
   36786:	mov    eax,DWORD PTR [r13+rdx*1-0x4]
   3678b:	mov    DWORD PTR [rcx+rdx*1-0x4],eax
   3678f:	jmp    36593 <md5_process_bytes+0xe3>
   36794:	movzx  eax,WORD PTR [r13+rdx*1-0x2]
   3679a:	mov    WORD PTR [rcx+rdx*1-0x2],ax
   3679f:	jmp    36593 <md5_process_bytes+0xe3>
   367a4:	lea    r12,[r14+0x1c]
   367a8:	mov    r13,rbx
   367ab:	jmp    36562 <md5_process_bytes+0xb2>

00000000000367b0 <md5_buffer>:
   367b0:	endbr64 
   367b4:	push   r12
   367b6:	push   rbp
   367b7:	mov    rbp,rdx
   367ba:	sub    rsp,0xb8
   367c1:	mov    rax,QWORD PTR fs:0x28
   367ca:	mov    QWORD PTR [rsp+0xa8],rax
   367d2:	movabs rax,0xefcdab8967452301
   367dc:	mov    r12,rsp
   367df:	mov    DWORD PTR [rsp+0x18],0x0
   367e7:	mov    QWORD PTR [rsp+0x10],0x0
   367f0:	mov    rdx,r12
   367f3:	mov    QWORD PTR [rsp],rax
   367f7:	movabs rax,0x1032547698badcfe
   36801:	mov    QWORD PTR [rsp+0x8],rax
   36806:	call   364b0 <md5_process_bytes>
   3680b:	mov    rsi,rbp
   3680e:	mov    rdi,r12
   36811:	call   36390 <md5_finish_ctx>
   36816:	mov    rdx,QWORD PTR [rsp+0xa8]
   3681e:	sub    rdx,QWORD PTR fs:0x28
   36827:	jne    36834 <md5_buffer+0x84>
   36829:	add    rsp,0xb8
   36830:	pop    rbp
   36831:	pop    r12
   36833:	ret    
   36834:	call   11760 <__stack_chk_fail@plt>
   36839:	nop    DWORD PTR [rax+0x0]

0000000000036840 <sha1_stream>:
   36840:	endbr64 
   36844:	push   r15
   36846:	push   r14
   36848:	mov    r14,rsi
   3684b:	push   r13
   3684d:	push   r12
   3684f:	mov    r12,rdi
   36852:	mov    edi,0x8048
   36857:	push   rbp
   36858:	push   rbx
   36859:	sub    rsp,0xb8
   36860:	mov    rax,QWORD PTR fs:0x28
   36869:	mov    QWORD PTR [rsp+0xa8],rax
   36871:	xor    eax,eax
   36873:	call   11af0 <malloc@plt>
   36878:	test   rax,rax
   3687b:	je     36968 <sha1_stream+0x128>
   36881:	mov    r15,rsp
   36884:	mov    r13,rax
   36887:	mov    ebx,0x8000
   3688c:	mov    rdi,r15
   3688f:	call   36970 <sha1_init_ctx>
   36894:	xor    ebp,ebp
   36896:	jmp    368c9 <sha1_stream+0x89>
   36898:	nop    DWORD PTR [rax+rax*1+0x0]
   368a0:	mov    rdx,rbx
   368a3:	lea    rdi,[r13+rbp*1+0x0]
   368a8:	mov    rcx,r12
   368ab:	mov    esi,0x1
   368b0:	sub    rdx,rbp
   368b3:	call   11e20 <fread@plt>
   368b8:	add    rbp,rax
   368bb:	cmp    rbp,0x8000
   368c2:	je     36918 <sha1_stream+0xd8>
   368c4:	test   rax,rax
   368c7:	je     36930 <sha1_stream+0xf0>
   368c9:	mov    rdi,r12
   368cc:	call   11fc0 <feof@plt>
   368d1:	test   eax,eax
   368d3:	je     368a0 <sha1_stream+0x60>
   368d5:	test   rbp,rbp
   368d8:	jne    36950 <sha1_stream+0x110>
   368da:	mov    rsi,r14
   368dd:	mov    rdi,r15
   368e0:	call   37d60 <sha1_finish_ctx>
   368e5:	mov    rdi,r13
   368e8:	call   10430 <free@plt>
   368ed:	xor    eax,eax
   368ef:	mov    rdx,QWORD PTR [rsp+0xa8]
   368f7:	sub    rdx,QWORD PTR fs:0x28
   36900:	jne    36963 <sha1_stream+0x123>
   36902:	add    rsp,0xb8
   36909:	pop    rbx
   3690a:	pop    rbp
   3690b:	pop    r12
   3690d:	pop    r13
   3690f:	pop    r14
   36911:	pop    r15
   36913:	ret    
   36914:	nop    DWORD PTR [rax+0x0]
   36918:	mov    rdx,r15
   3691b:	mov    esi,0x8000
   36920:	mov    rdi,r13
   36923:	call   369e0 <sha1_process_block>
   36928:	jmp    36894 <sha1_stream+0x54>
   3692d:	nop    DWORD PTR [rax]
   36930:	mov    rdi,r12
   36933:	call   12580 <ferror@plt>
   36938:	test   eax,eax
   3693a:	je     368d5 <sha1_stream+0x95>
   3693c:	mov    rdi,r13
   3693f:	call   10430 <free@plt>
   36944:	mov    eax,0x1
   36949:	jmp    368ef <sha1_stream+0xaf>
   3694b:	nop    DWORD PTR [rax+rax*1+0x0]
   36950:	mov    rdx,r15
   36953:	mov    rsi,rbp
   36956:	mov    rdi,r13
   36959:	call   37e90 <sha1_process_bytes>
   3695e:	jmp    368da <sha1_stream+0x9a>
   36963:	call   11760 <__stack_chk_fail@plt>
   36968:	mov    eax,0x1
   3696d:	jmp    368ef <sha1_stream+0xaf>
   3696f:	nop

0000000000036970 <sha1_init_ctx>:
   36970:	endbr64 
   36974:	movabs rax,0xefcdab8967452301
   3697e:	mov    QWORD PTR [rdi+0x18],0x0
   36986:	mov    QWORD PTR [rdi],rax
   36989:	movabs rax,0x1032547698badcfe
   36993:	mov    QWORD PTR [rdi+0x8],rax
   36997:	mov    eax,0xc3d2e1f0
   3699c:	mov    QWORD PTR [rdi+0x10],rax
   369a0:	ret    
   369a1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   369ac:	nop    DWORD PTR [rax+0x0]

00000000000369b0 <sha1_read_ctx>:
   369b0:	endbr64 
   369b4:	mov    edx,DWORD PTR [rdi]
   369b6:	mov    rax,rsi
   369b9:	bswap  edx
   369bb:	mov    DWORD PTR [rsi],edx
   369bd:	mov    edx,DWORD PTR [rdi+0x4]
   369c0:	bswap  edx
   369c2:	mov    DWORD PTR [rsi+0x4],edx
   369c5:	mov    edx,DWORD PTR [rdi+0x8]
   369c8:	bswap  edx
   369ca:	mov    DWORD PTR [rsi+0x8],edx
   369cd:	mov    edx,DWORD PTR [rdi+0xc]
   369d0:	bswap  edx
   369d2:	mov    DWORD PTR [rsi+0xc],edx
   369d5:	mov    edx,DWORD PTR [rdi+0x10]
   369d8:	bswap  edx
   369da:	mov    DWORD PTR [rsi+0x10],edx
   369dd:	ret    
   369de:	xchg   ax,ax

00000000000369e0 <sha1_process_block>:
   369e0:	endbr64 
   369e4:	push   r15
   369e6:	push   r14
   369e8:	push   r13
   369ea:	push   r12
   369ec:	mov    r12,rdi
   369ef:	push   rbp
   369f0:	push   rbx
   369f1:	mov    rbx,rdx
   369f4:	sub    rsp,0xc8
   369fb:	mov    QWORD PTR [rsp+0x60],rdx
   36a00:	mov    rax,QWORD PTR fs:0x28
   36a09:	mov    QWORD PTR [rsp+0xb8],rax
   36a11:	mov    rax,rsi
   36a14:	and    rax,0xfffffffffffffffc
   36a18:	add    rdi,rax
   36a1b:	mov    eax,DWORD PTR [rdx]
   36a1d:	mov    QWORD PTR [rsp+0x58],rdi
   36a22:	mov    DWORD PTR [rsp+0x30],eax
   36a26:	mov    eax,DWORD PTR [rdx+0x4]
   36a29:	mov    DWORD PTR [rsp+0x10],eax
   36a2d:	mov    eax,DWORD PTR [rdx+0x8]
   36a30:	mov    DWORD PTR [rsp+0x14],eax
   36a34:	mov    eax,DWORD PTR [rdx+0xc]
   36a37:	mov    DWORD PTR [rsp+0x18],eax
   36a3b:	mov    eax,DWORD PTR [rdx+0x10]
   36a3e:	mov    edx,esi
   36a40:	mov    DWORD PTR [rsp+0x34],eax
   36a44:	xor    eax,eax
   36a46:	add    edx,DWORD PTR [rbx+0x14]
   36a49:	setb   al
   36a4c:	shr    rsi,0x20
   36a50:	add    esi,DWORD PTR [rbx+0x18]
   36a53:	mov    DWORD PTR [rbx+0x14],edx
   36a56:	add    eax,esi
   36a58:	mov    DWORD PTR [rbx+0x18],eax
   36a5b:	lea    rax,[rsp+0x70]
   36a60:	mov    QWORD PTR [rsp+0x68],rax
   36a65:	cmp    r12,rdi
   36a68:	jae    37d32 <sha1_process_block+0x1352>
   36a6e:	mov    QWORD PTR [rsp+0x50],r12
   36a73:	nop    DWORD PTR [rax+rax*1+0x0]
   36a78:	mov    r12,QWORD PTR [rsp+0x50]
   36a7d:	mov    rcx,QWORD PTR [rsp+0x68]
   36a82:	xor    eax,eax
   36a84:	nop    DWORD PTR [rax+0x0]
   36a88:	mov    edx,DWORD PTR [r12+rax*1]
   36a8c:	bswap  edx
   36a8e:	mov    DWORD PTR [rcx+rax*1],edx
   36a91:	add    rax,0x4
   36a95:	cmp    rax,0x40
   36a99:	jne    36a88 <sha1_process_block+0xa8>
   36a9b:	mov    rax,r12
   36a9e:	mov    ebx,DWORD PTR [rsp+0x30]
   36aa2:	mov    r10d,DWORD PTR [rsp+0x70]
   36aa7:	add    rax,0x40
   36aab:	mov    esi,DWORD PTR [rsp+0x14]
   36aaf:	mov    r14d,DWORD PTR [rsp+0x18]
   36ab4:	mov    QWORD PTR [rsp+0x50],rax
   36ab9:	mov    eax,DWORD PTR [rsp+0x34]
   36abd:	mov    edx,ebx
   36abf:	mov    r8d,ebx
   36ac2:	rol    edx,0x5
   36ac5:	mov    ecx,esi
   36ac7:	mov    r9d,DWORD PTR [rsp+0x74]
   36acc:	ror    r8d,0x2
   36ad0:	lea    eax,[r10+rax*1+0x5a827999]
   36ad8:	xor    ecx,r14d
   36adb:	mov    r11d,DWORD PTR [rsp+0x78]
   36ae0:	mov    r13d,DWORD PTR [rsp+0x80]
   36ae8:	add    eax,edx
   36aea:	mov    edx,DWORD PTR [rsp+0x10]
   36aee:	and    ecx,edx
   36af0:	mov    edi,edx
   36af2:	lea    edx,[r9+r14*1+0x5a827999]
   36afa:	xor    ecx,r14d
   36afd:	ror    edi,0x2
   36b00:	mov    r14d,DWORD PTR [rsp+0x84]
   36b08:	add    ecx,eax
   36b0a:	mov    eax,esi
   36b0c:	xor    eax,edi
   36b0e:	mov    r15d,ecx
   36b11:	and    eax,ebx
   36b13:	rol    r15d,0x5
   36b17:	mov    ebx,DWORD PTR [rsp+0x7c]
   36b1b:	xor    eax,esi
   36b1d:	lea    esi,[r11+rsi*1+0x5a827999]
   36b25:	add    eax,edx
   36b27:	mov    edx,r15d
   36b2a:	mov    r15d,edi
   36b2d:	xor    r15d,r8d
   36b30:	add    edx,eax
   36b32:	mov    eax,r15d
   36b35:	mov    r15d,edx
   36b38:	and    eax,ecx
   36b3a:	rol    r15d,0x5
   36b3e:	xor    eax,edi
   36b40:	ror    ecx,0x2
   36b43:	lea    edi,[rbx+rdi*1+0x5a827999]
   36b4a:	add    esi,eax
   36b4c:	mov    eax,r15d
   36b4f:	mov    r15d,r8d
   36b52:	xor    r15d,ecx
   36b55:	add    eax,esi
   36b57:	mov    esi,r15d
   36b5a:	mov    r15d,eax
   36b5d:	and    esi,edx
   36b5f:	rol    r15d,0x5
   36b63:	xor    esi,r8d
   36b66:	ror    edx,0x2
   36b69:	lea    r8d,[r13+r8*1+0x5a827999]
   36b71:	add    esi,edi
   36b73:	mov    edi,r15d
   36b76:	mov    r15d,ecx
   36b79:	xor    r15d,edx
   36b7c:	add    edi,esi
   36b7e:	mov    esi,r15d
   36b81:	mov    r15d,edi
   36b84:	and    esi,eax
   36b86:	xor    esi,ecx
   36b88:	lea    ecx,[r14+rcx*1+0x5a827999]
   36b90:	add    r8d,esi
   36b93:	rol    r15d,0x5
   36b97:	ror    eax,0x2
   36b9a:	mov    esi,r15d
   36b9d:	mov    r15d,edx
   36ba0:	xor    r15d,eax
   36ba3:	add    esi,r8d
   36ba6:	mov    r8d,r15d
   36ba9:	mov    r15d,eax
   36bac:	and    r8d,edi
   36baf:	ror    edi,0x2
   36bb2:	xor    r8d,edx
   36bb5:	xor    r15d,edi
   36bb8:	add    r8d,ecx
   36bbb:	mov    ecx,esi
   36bbd:	rol    ecx,0x5
   36bc0:	add    ecx,r8d
   36bc3:	mov    r8d,r15d
   36bc6:	mov    r15d,DWORD PTR [rsp+0x88]
   36bce:	and    r8d,esi
   36bd1:	ror    esi,0x2
   36bd4:	lea    edx,[r15+rdx*1+0x5a827999]
   36bdc:	mov    r15d,ecx
   36bdf:	xor    r8d,eax
   36be2:	rol    r15d,0x5
   36be6:	add    r8d,edx
   36be9:	mov    edx,r15d
   36bec:	mov    r15d,edi
   36bef:	xor    r15d,esi
   36bf2:	add    edx,r8d
   36bf5:	mov    r8d,r15d
   36bf8:	mov    r15d,DWORD PTR [rsp+0x8c]
   36c00:	and    r8d,ecx
   36c03:	ror    ecx,0x2
   36c06:	lea    eax,[r15+rax*1+0x5a827999]
   36c0e:	mov    r15d,edx
   36c11:	xor    r8d,edi
   36c14:	rol    r15d,0x5
   36c18:	add    r8d,eax
   36c1b:	mov    eax,r15d
   36c1e:	mov    r15d,esi
   36c21:	xor    r15d,ecx
   36c24:	add    eax,r8d
   36c27:	mov    r8d,r15d
   36c2a:	mov    r15d,DWORD PTR [rsp+0x90]
   36c32:	and    r8d,edx
   36c35:	ror    edx,0x2
   36c38:	lea    edi,[r15+rdi*1+0x5a827999]
   36c40:	mov    r15d,eax
   36c43:	xor    r8d,esi
   36c46:	rol    r15d,0x5
   36c4a:	add    r8d,edi
   36c4d:	mov    edi,r15d
   36c50:	mov    r15d,ecx
   36c53:	add    edi,r8d
   36c56:	xor    r15d,edx
   36c59:	mov    r8d,r15d
   36c5c:	mov    r15d,DWORD PTR [rsp+0x94]
   36c64:	and    r8d,eax
   36c67:	ror    eax,0x2
   36c6a:	lea    esi,[r15+rsi*1+0x5a827999]
   36c72:	mov    r15d,edi
   36c75:	xor    r8d,ecx
   36c78:	rol    r15d,0x5
   36c7c:	add    r8d,esi
   36c7f:	mov    esi,r15d
   36c82:	mov    r15d,edx
   36c85:	xor    r15d,eax
   36c88:	add    esi,r8d
   36c8b:	mov    r8d,r15d
   36c8e:	mov    r15d,DWORD PTR [rsp+0x98]
   36c96:	and    r8d,edi
   36c99:	ror    edi,0x2
   36c9c:	xor    r8d,edx
   36c9f:	lea    ecx,[r15+rcx*1+0x5a827999]
   36ca7:	mov    r15d,eax
   36caa:	add    r8d,ecx
   36cad:	mov    ecx,esi
   36caf:	xor    r15d,edi
   36cb2:	rol    ecx,0x5
   36cb5:	add    ecx,r8d
   36cb8:	mov    r8d,r15d
   36cbb:	mov    r15d,DWORD PTR [rsp+0x9c]
   36cc3:	and    r8d,esi
   36cc6:	ror    esi,0x2
   36cc9:	lea    edx,[r15+rdx*1+0x5a827999]
   36cd1:	mov    r15d,ecx
   36cd4:	xor    r8d,eax
   36cd7:	rol    r15d,0x5
   36cdb:	add    r8d,edx
   36cde:	mov    edx,r15d
   36ce1:	mov    r15d,edi
   36ce4:	xor    r15d,esi
   36ce7:	add    edx,r8d
   36cea:	mov    r8d,r15d
   36ced:	mov    r15d,DWORD PTR [rsp+0xa0]
   36cf5:	and    r8d,ecx
   36cf8:	ror    ecx,0x2
   36cfb:	lea    eax,[r15+rax*1+0x5a827999]
   36d03:	mov    r15d,edx
   36d06:	xor    r8d,edi
   36d09:	rol    r15d,0x5
   36d0d:	add    r8d,eax
   36d10:	mov    eax,r15d
   36d13:	mov    r15d,esi
   36d16:	xor    r15d,ecx
   36d19:	add    eax,r8d
   36d1c:	mov    r8d,r15d
   36d1f:	mov    r15d,DWORD PTR [rsp+0xa4]
   36d27:	and    r8d,edx
   36d2a:	xor    r8d,esi
   36d2d:	lea    edi,[r15+rdi*1+0x5a827999]
   36d35:	mov    r15d,eax
   36d38:	add    r8d,edi
   36d3b:	rol    r15d,0x5
   36d3f:	xor    r10d,r11d
   36d42:	xor    r9d,ebx
   36d45:	ror    edx,0x2
   36d48:	mov    edi,r15d
   36d4b:	mov    r15d,ecx
   36d4e:	xor    r10d,DWORD PTR [rsp+0x90]
   36d56:	xor    r15d,edx
   36d59:	add    edi,r8d
   36d5c:	xor    r10d,DWORD PTR [rsp+0xa4]
   36d64:	xor    r9d,DWORD PTR [rsp+0x94]
   36d6c:	mov    r8d,r15d
   36d6f:	mov    r15d,DWORD PTR [rsp+0xa8]
   36d77:	mov    r12d,r10d
   36d7a:	xor    r9d,DWORD PTR [rsp+0xa8]
   36d82:	rol    r12d,1
   36d85:	and    r8d,eax
   36d88:	ror    eax,0x2
   36d8b:	lea    esi,[r15+rsi*1+0x5a827999]
   36d93:	mov    r15d,edi
   36d96:	xor    r8d,ecx
   36d99:	mov    r10d,eax
   36d9c:	rol    r15d,0x5
   36da0:	add    r8d,esi
   36da3:	rol    r9d,1
   36da6:	mov    esi,r15d
   36da9:	mov    r15d,edx
   36dac:	xor    r15d,eax
   36daf:	add    esi,r8d
   36db2:	mov    r8d,r15d
   36db5:	mov    r15d,DWORD PTR [rsp+0xac]
   36dbd:	and    r8d,edi
   36dc0:	ror    edi,0x2
   36dc3:	xor    r8d,edx
   36dc6:	lea    ecx,[r15+rcx*1+0x5a827999]
   36dce:	xor    r10d,edi
   36dd1:	add    r8d,ecx
   36dd4:	mov    ecx,esi
   36dd6:	lea    edx,[r12+rdx*1+0x5a827999]
   36dde:	rol    ecx,0x5
   36de1:	add    ecx,r8d
   36de4:	mov    r8d,r10d
   36de7:	and    r8d,esi
   36dea:	mov    r10d,ecx
   36ded:	ror    esi,0x2
   36df0:	xor    r8d,eax
   36df3:	rol    r10d,0x5
   36df7:	lea    eax,[r9+rax*1+0x5a827999]
   36dff:	add    r8d,edx
   36e02:	mov    edx,r10d
   36e05:	mov    r10d,edi
   36e08:	add    edx,r8d
   36e0b:	xor    r10d,esi
   36e0e:	xor    r11d,r13d
   36e11:	xor    r13d,DWORD PTR [rsp+0x88]
   36e19:	mov    r8d,r10d
   36e1c:	mov    r10d,edx
   36e1f:	and    r8d,ecx
   36e22:	rol    r10d,0x5
   36e26:	xor    r8d,edi
   36e29:	ror    ecx,0x2
   36e2c:	add    r8d,eax
   36e2f:	mov    eax,r10d
   36e32:	mov    r10d,ebx
   36e35:	add    eax,r8d
   36e38:	mov    r8d,DWORD PTR [rsp+0x98]
   36e40:	xor    r10d,r14d
   36e43:	mov    ebp,eax
   36e45:	xor    r8d,r11d
   36e48:	mov    r11d,esi
   36e4b:	rol    ebp,0x5
   36e4e:	xor    r8d,r15d
   36e51:	xor    r11d,ecx
   36e54:	rol    r8d,1
   36e57:	and    r11d,edx
   36e5a:	ror    edx,0x2
   36e5d:	xor    r11d,esi
   36e60:	lea    edi,[r8+rdi*1+0x5a827999]
   36e68:	add    edi,r11d
   36e6b:	mov    r11d,ecx
   36e6e:	add    ebp,edi
   36e70:	mov    edi,DWORD PTR [rsp+0x9c]
   36e77:	xor    r11d,edx
   36e7a:	and    r11d,eax
   36e7d:	ror    eax,0x2
   36e80:	xor    edi,r10d
   36e83:	xor    r11d,ecx
   36e86:	mov    r10d,edx
   36e89:	xor    edi,r12d
   36e8c:	rol    edi,1
   36e8e:	lea    esi,[rdi+rsi*1+0x5a827999]
   36e95:	add    esi,r11d
   36e98:	mov    r11d,ebp
   36e9b:	rol    r11d,0x5
   36e9f:	add    r11d,esi
   36ea2:	mov    esi,DWORD PTR [rsp+0xa0]
   36ea9:	mov    r15d,r11d
   36eac:	xor    esi,r13d
   36eaf:	xor    esi,r9d
   36eb2:	rol    esi,1
   36eb4:	xor    r10d,eax
   36eb7:	rol    r15d,0x5
   36ebb:	mov    ebx,r10d
   36ebe:	lea    ecx,[rsi+rcx*1+0x6ed9eba1]
   36ec5:	mov    r10d,eax
   36ec8:	xor    ebx,ebp
   36eca:	ror    ebp,0x2
   36ecd:	add    ecx,ebx
   36ecf:	xor    r10d,ebp
   36ed2:	mov    r13d,ebp
   36ed5:	add    r15d,ecx
   36ed8:	mov    ecx,DWORD PTR [rsp+0x8c]
   36edf:	mov    ebx,r10d
   36ee2:	mov    r10d,r15d
   36ee5:	xor    ebx,r11d
   36ee8:	ror    r11d,0x2
   36eec:	xor    ecx,r14d
   36eef:	xor    ecx,DWORD PTR [rsp+0xa4]
   36ef6:	rol    r10d,0x5
   36efa:	xor    r13d,r11d
   36efd:	xor    ecx,r8d
   36f00:	xor    r13d,r15d
   36f03:	ror    r15d,0x2
   36f07:	rol    ecx,1
   36f09:	lea    edx,[rcx+rdx*1+0x6ed9eba1]
   36f10:	add    edx,ebx
   36f12:	mov    ebx,r10d
   36f15:	mov    r10d,DWORD PTR [rsp+0x88]
   36f1d:	xor    r10d,DWORD PTR [rsp+0x90]
   36f25:	add    ebx,edx
   36f27:	mov    edx,DWORD PTR [rsp+0xa8]
   36f2e:	mov    DWORD PTR [rsp+0x28],r12d
   36f33:	xor    edx,r10d
   36f36:	mov    r10d,ebx
   36f39:	xor    edx,edi
   36f3b:	rol    r10d,0x5
   36f3f:	rol    edx,1
   36f41:	mov    r14d,r10d
   36f44:	mov    r10d,DWORD PTR [rsp+0x8c]
   36f4c:	xor    r10d,DWORD PTR [rsp+0x94]
   36f54:	lea    eax,[rdx+rax*1+0x6ed9eba1]
   36f5b:	mov    DWORD PTR [rsp+0xc],edx
   36f5f:	add    eax,r13d
   36f62:	mov    r13d,r11d
   36f65:	add    r14d,eax
   36f68:	mov    eax,DWORD PTR [rsp+0xac]
   36f6f:	xor    r13d,r15d
   36f72:	xor    eax,r10d
   36f75:	mov    r10d,r15d
   36f78:	xor    eax,esi
   36f7a:	rol    eax,1
   36f7c:	xor    r13d,ebx
   36f7f:	ror    ebx,0x2
   36f82:	lea    ebp,[rax+rbp*1+0x6ed9eba1]
   36f89:	xor    r10d,ebx
   36f8c:	add    ebp,r13d
   36f8f:	mov    r13d,r14d
   36f92:	rol    r13d,0x5
   36f96:	add    r13d,ebp
   36f99:	mov    ebp,DWORD PTR [rsp+0x90]
   36fa0:	xor    ebp,DWORD PTR [rsp+0x98]
   36fa7:	xor    ebp,r12d
   36faa:	xor    ebp,ecx
   36fac:	rol    ebp,1
   36fae:	mov    edx,ebp
   36fb0:	mov    ebp,r10d
   36fb3:	xor    ebp,r14d
   36fb6:	lea    r11d,[rdx+r11*1+0x6ed9eba1]
   36fbe:	ror    r14d,0x2
   36fc2:	mov    DWORD PTR [rsp+0x2c],edx
   36fc6:	add    r11d,ebp
   36fc9:	mov    ebp,r13d
   36fcc:	rol    ebp,0x5
   36fcf:	add    ebp,r11d
   36fd2:	mov    r11d,DWORD PTR [rsp+0x94]
   36fda:	xor    r11d,DWORD PTR [rsp+0x9c]
   36fe2:	xor    r11d,r9d
   36fe5:	xor    r11d,DWORD PTR [rsp+0xc]
   36fea:	rol    r11d,1
   36fed:	mov    r12d,r11d
   36ff0:	mov    r11d,ebx
   36ff3:	xor    r11d,r14d
   36ff6:	lea    r15d,[r12+r15*1+0x6ed9eba1]
   36ffe:	xor    r11d,r13d
   37001:	ror    r13d,0x2
   37005:	add    r11d,r15d
   37008:	mov    r15d,ebp
   3700b:	rol    r15d,0x5
   3700f:	add    r15d,r11d
   37012:	mov    r11d,DWORD PTR [rsp+0x98]
   3701a:	xor    r11d,DWORD PTR [rsp+0xa0]
   37022:	xor    r11d,r8d
   37025:	xor    r11d,eax
   37028:	rol    r11d,1
   3702b:	mov    r10d,r11d
   3702e:	mov    r11d,r14d
   37031:	xor    r11d,r13d
   37034:	lea    ebx,[r10+rbx*1+0x6ed9eba1]
   3703c:	mov    DWORD PTR [rsp+0x1c],r10d
   37041:	mov    r10d,DWORD PTR [rsp+0x9c]
   37049:	xor    r11d,ebp
   3704c:	add    ebx,r11d
   3704f:	mov    r11d,r15d
   37052:	rol    r11d,0x5
   37056:	xor    r10d,DWORD PTR [rsp+0xa4]
   3705e:	ror    ebp,0x2
   37061:	add    r11d,ebx
   37064:	mov    ebx,r10d
   37067:	xor    ebx,edi
   37069:	xor    ebx,edx
   3706b:	mov    edx,r11d
   3706e:	rol    ebx,1
   37070:	rol    edx,0x5
   37073:	mov    r10d,ebx
   37076:	mov    ebx,r13d
   37079:	xor    ebx,ebp
   3707b:	lea    r14d,[r10+r14*1+0x6ed9eba1]
   37083:	mov    DWORD PTR [rsp+0x38],r10d
   37088:	xor    ebx,r15d
   3708b:	ror    r15d,0x2
   3708f:	add    ebx,r14d
   37092:	mov    r14d,edx
   37095:	mov    edx,ebp
   37097:	add    r14d,ebx
   3709a:	mov    ebx,DWORD PTR [rsp+0xa0]
   370a1:	xor    edx,r15d
   370a4:	xor    ebx,DWORD PTR [rsp+0xa8]
   370ab:	xor    ebx,esi
   370ad:	xor    ebx,r12d
   370b0:	rol    ebx,1
   370b2:	mov    DWORD PTR [rsp+0x20],ebx
   370b6:	mov    ebx,edx
   370b8:	mov    edx,DWORD PTR [rsp+0x20]
   370bc:	xor    ebx,r11d
   370bf:	ror    r11d,0x2
   370c3:	lea    r13d,[rdx+r13*1+0x6ed9eba1]
   370cb:	add    ebx,r13d
   370ce:	mov    r13d,r14d
   370d1:	rol    r13d,0x5
   370d5:	add    r13d,ebx
   370d8:	mov    ebx,DWORD PTR [rsp+0xa4]
   370df:	xor    ebx,DWORD PTR [rsp+0xac]
   370e6:	xor    ebx,ecx
   370e8:	xor    ebx,DWORD PTR [rsp+0x1c]
   370ec:	mov    edx,ebx
   370ee:	mov    ebx,r15d
   370f1:	rol    edx,1
   370f3:	xor    ebx,r11d
   370f6:	lea    ebp,[rdx+rbp*1+0x6ed9eba1]
   370fd:	xor    ebx,r14d
   37100:	add    ebx,ebp
   37102:	mov    ebp,r13d
   37105:	rol    ebp,0x5
   37108:	add    ebp,ebx
   3710a:	ror    r14d,0x2
   3710e:	mov    ebx,DWORD PTR [rsp+0x28]
   37112:	xor    ebx,DWORD PTR [rsp+0xa8]
   37119:	xor    ebx,DWORD PTR [rsp+0xc]
   3711d:	xor    ebx,r10d
   37120:	rol    ebx,1
   37122:	mov    r10d,ebx
   37125:	mov    ebx,r11d
   37128:	xor    ebx,r14d
   3712b:	lea    r15d,[r10+r15*1+0x6ed9eba1]
   37133:	mov    DWORD PTR [rsp+0x24],r10d
   37138:	xor    ebx,r13d
   3713b:	ror    r13d,0x2
   3713f:	add    r15d,ebx
   37142:	mov    ebx,ebp
   37144:	rol    ebx,0x5
   37147:	add    ebx,r15d
   3714a:	mov    r15d,DWORD PTR [rsp+0xac]
   37152:	xor    r15d,r9d
   37155:	xor    r9d,edi
   37158:	xor    r15d,eax
   3715b:	xor    r15d,DWORD PTR [rsp+0x20]
   37160:	mov    DWORD PTR [rsp+0x48],edx
   37164:	rol    r15d,1
   37167:	mov    r10d,r15d
   3716a:	mov    r15d,r14d
   3716d:	mov    DWORD PTR [rsp+0x3c],r10d
   37172:	xor    r15d,r13d
   37175:	lea    r11d,[r10+r11*1+0x6ed9eba1]
   3717d:	mov    r10d,DWORD PTR [rsp+0x28]
   37182:	xor    r15d,ebp
   37185:	ror    ebp,0x2
   37188:	add    r11d,r15d
   3718b:	xor    r10d,r8d
   3718e:	mov    r15d,ebx
   37191:	xor    r10d,DWORD PTR [rsp+0x2c]
   37196:	xor    r10d,edx
   37199:	rol    r15d,0x5
   3719d:	add    r11d,r15d
   371a0:	mov    r15d,r10d
   371a3:	rol    r15d,1
   371a6:	mov    r10d,r15d
   371a9:	mov    r15d,r13d
   371ac:	xor    r15d,ebp
   371af:	mov    DWORD PTR [rsp+0x40],r10d
   371b4:	lea    r10d,[r10+r14*1+0x6ed9eba1]
   371bc:	xor    r15d,ebx
   371bf:	ror    ebx,0x2
   371c2:	add    r10d,r15d
   371c5:	mov    r15d,r11d
   371c8:	rol    r15d,0x5
   371cc:	add    r10d,r15d
   371cf:	xor    r9d,r12d
   371d2:	xor    r9d,DWORD PTR [rsp+0x24]
   371d7:	xor    r8d,esi
   371da:	mov    r15d,r9d
   371dd:	mov    r9d,ebp
   371e0:	xor    r8d,DWORD PTR [rsp+0x1c]
   371e5:	xor    r8d,DWORD PTR [rsp+0x3c]
   371ea:	xor    r9d,ebx
   371ed:	rol    r15d,1
   371f0:	xor    edi,ecx
   371f2:	xor    edi,DWORD PTR [rsp+0x38]
   371f6:	mov    r14d,r9d
   371f9:	rol    r8d,1
   371fc:	xor    edi,DWORD PTR [rsp+0x40]
   37200:	xor    esi,DWORD PTR [rsp+0xc]
   37204:	xor    r14d,r11d
   37207:	lea    r9d,[r15+r13*1+0x6ed9eba1]
   3720f:	mov    r13d,r10d
   37212:	ror    r11d,0x2
   37216:	add    r9d,r14d
   37219:	rol    r13d,0x5
   3721d:	mov    r14d,r8d
   37220:	xor    esi,DWORD PTR [rsp+0x20]
   37224:	add    r9d,r13d
   37227:	mov    r13d,ebx
   3722a:	lea    r8d,[r8+rbp*1+0x6ed9eba1]
   37232:	xor    esi,r15d
   37235:	xor    r13d,r11d
   37238:	mov    ebp,r9d
   3723b:	xor    r13d,r10d
   3723e:	rol    ebp,0x5
   37241:	add    r8d,r13d
   37244:	ror    r10d,0x2
   37248:	mov    r13d,edi
   3724b:	add    r8d,ebp
   3724e:	mov    ebp,r11d
   37251:	rol    r13d,1
   37254:	xor    ebp,r10d
   37257:	lea    edi,[r13+rbx*1+0x6ed9eba1]
   3725f:	mov    ebx,r10d
   37262:	xor    ebp,r9d
   37265:	ror    r9d,0x2
   37269:	add    edi,ebp
   3726b:	mov    ebp,r8d
   3726e:	rol    ebp,0x5
   37271:	add    edi,ebp
   37273:	mov    ebp,esi
   37275:	rol    ebp,1
   37277:	xor    ecx,eax
   37279:	xor    ebx,r9d
   3727c:	xor    eax,r12d
   3727f:	xor    ecx,edx
   37281:	xor    ebx,r8d
   37284:	ror    r8d,0x2
   37288:	mov    edx,DWORD PTR [rsp+0xc]
   3728c:	xor    ecx,r14d
   3728f:	lea    esi,[rbp+r11*1+0x6ed9eba1]
   37297:	mov    r11d,edi
   3729a:	xor    eax,DWORD PTR [rsp+0x3c]
   3729e:	rol    ecx,1
   372a0:	add    esi,ebx
   372a2:	rol    r11d,0x5
   372a6:	xor    eax,ebp
   372a8:	mov    ebx,ecx
   372aa:	mov    ecx,r9d
   372ad:	add    esi,r11d
   372b0:	xor    ecx,r8d
   372b3:	mov    r11d,ecx
   372b6:	lea    ecx,[rbx+r10*1+0x6ed9eba1]
   372be:	mov    r10d,esi
   372c1:	xor    r11d,edi
   372c4:	rol    r10d,0x5
   372c8:	add    ecx,r11d
   372cb:	mov    r11d,DWORD PTR [rsp+0x2c]
   372d0:	ror    edi,0x2
   372d3:	add    ecx,r10d
   372d6:	mov    r10d,r8d
   372d9:	xor    edx,r11d
   372dc:	xor    edx,DWORD PTR [rsp+0x24]
   372e0:	xor    r10d,edi
   372e3:	xor    edx,r13d
   372e6:	xor    r10d,esi
   372e9:	ror    esi,0x2
   372ec:	rol    edx,1
   372ee:	mov    DWORD PTR [rsp+0x2c],edx
   372f2:	lea    edx,[rdx+r9*1+0x6ed9eba1]
   372fa:	mov    r9d,ecx
   372fd:	add    edx,r10d
   37300:	rol    r9d,0x5
   37304:	add    edx,r9d
   37307:	mov    r9d,eax
   3730a:	rol    r9d,1
   3730d:	mov    r10d,r9d
   37310:	mov    r9d,edi
   37313:	xor    r9d,esi
   37316:	lea    eax,[r10+r8*1+0x6ed9eba1]
   3731e:	xor    r9d,ecx
   37321:	xor    r11d,DWORD PTR [rsp+0x1c]
   37326:	ror    ecx,0x2
   37329:	add    eax,r9d
   3732c:	mov    r9d,edx
   3732f:	rol    r9d,0x5
   37333:	mov    r8d,r9d
   37336:	add    r8d,eax
   37339:	mov    eax,DWORD PTR [rsp+0x40]
   3733d:	xor    eax,r11d
   37340:	mov    r11d,DWORD PTR [rsp+0x38]
   37345:	xor    eax,ebx
   37347:	mov    r9d,eax
   3734a:	xor    r12d,r11d
   3734d:	rol    r9d,1
   37350:	mov    DWORD PTR [rsp+0x44],r9d
   37355:	lea    edi,[r9+rdi*1-0x70e44324]
   3735d:	mov    r9d,r8d
   37360:	rol    r9d,0x5
   37364:	add    edi,r9d
   37367:	mov    r9d,edx
   3736a:	or     r9d,ecx
   3736d:	mov    eax,r9d
   37370:	mov    r9d,edx
   37373:	ror    edx,0x2
   37376:	and    r9d,ecx
   37379:	and    eax,esi
   3737b:	or     eax,r9d
   3737e:	mov    r9d,r8d
   37381:	add    eax,edi
   37383:	mov    edi,r12d
   37386:	or     r9d,edx
   37389:	xor    edi,r15d
   3738c:	xor    edi,DWORD PTR [rsp+0x2c]
   37390:	and    r9d,ecx
   37393:	rol    edi,1
   37395:	mov    r12d,edi
   37398:	mov    edi,r8d
   3739b:	ror    r8d,0x2
   3739f:	and    edi,edx
   373a1:	lea    esi,[r12+rsi*1-0x70e44324]
   373a9:	mov    DWORD PTR [rsp+0x28],r12d
   373ae:	mov    r12d,DWORD PTR [rsp+0x20]
   373b3:	or     edi,r9d
   373b6:	mov    r9d,eax
   373b9:	add    edi,esi
   373bb:	mov    esi,eax
   373bd:	rol    esi,0x5
   373c0:	add    esi,edi
   373c2:	mov    edi,DWORD PTR [rsp+0x1c]
   373c6:	xor    edi,r12d
   373c9:	xor    edi,r14d
   373cc:	xor    edi,r10d
   373cf:	rol    edi,1
   373d1:	and    r9d,r8d
   373d4:	xor    r12d,DWORD PTR [rsp+0x24]
   373d9:	mov    DWORD PTR [rsp+0x38],edi
   373dd:	lea    edi,[rdi+rcx*1-0x70e44324]
   373e4:	mov    ecx,esi
   373e6:	rol    ecx,0x5
   373e9:	add    edi,ecx
   373eb:	mov    ecx,eax
   373ed:	ror    eax,0x2
   373f0:	or     ecx,r8d
   373f3:	and    ecx,edx
   373f5:	or     ecx,r9d
   373f8:	add    ecx,edi
   373fa:	mov    edi,r11d
   373fd:	mov    r11d,DWORD PTR [rsp+0x48]
   37402:	xor    edi,r11d
   37405:	xor    edi,r13d
   37408:	xor    edi,DWORD PTR [rsp+0x44]
   3740c:	mov    r9d,edi
   3740f:	mov    edi,esi
   37411:	rol    r9d,1
   37414:	and    edi,eax
   37416:	mov    DWORD PTR [rsp+0xc],r9d
   3741b:	mov    r9d,esi
   3741e:	ror    esi,0x2
   37421:	or     r9d,eax
   37424:	and    r9d,r8d
   37427:	or     edi,r9d
   3742a:	mov    r9d,DWORD PTR [rsp+0xc]
   3742f:	lea    edx,[r9+rdx*1-0x70e44324]
   37437:	mov    r9d,esi
   3743a:	mov    esi,r12d
   3743d:	add    edi,edx
   3743f:	mov    edx,ecx
   37441:	xor    esi,ebp
   37443:	xor    esi,DWORD PTR [rsp+0x28]
   37447:	rol    edx,0x5
   3744a:	rol    esi,1
   3744c:	mov    r12d,DWORD PTR [rsp+0x3c]
   37451:	add    edx,edi
   37453:	mov    DWORD PTR [rsp+0x48],esi
   37457:	lea    esi,[rsi+r8*1-0x70e44324]
   3745f:	mov    r8d,edx
   37462:	rol    r8d,0x5
   37466:	add    esi,r8d
   37469:	mov    r8d,ecx
   3746c:	or     r8d,r9d
   3746f:	mov    edi,r8d
   37472:	mov    r8d,ecx
   37475:	and    r8d,r9d
   37478:	and    edi,eax
   3747a:	or     edi,r8d
   3747d:	add    edi,esi
   3747f:	ror    ecx,0x2
   37482:	xor    r11d,r12d
   37485:	mov    esi,r11d
   37488:	xor    esi,ebx
   3748a:	xor    esi,DWORD PTR [rsp+0x38]
   3748e:	mov    r8d,esi
   37491:	mov    esi,edx
   37493:	rol    r8d,1
   37496:	and    esi,ecx
   37498:	mov    r11d,r8d
   3749b:	mov    r8d,edx
   3749e:	or     r8d,ecx
   374a1:	lea    eax,[r11+rax*1-0x70e44324]
   374a9:	mov    DWORD PTR [rsp+0x1c],r11d
   374ae:	mov    r11d,DWORD PTR [rsp+0x40]
   374b3:	and    r8d,r9d
   374b6:	or     esi,r8d
   374b9:	mov    r8d,edi
   374bc:	rol    r8d,0x5
   374c0:	add    eax,esi
   374c2:	mov    esi,r8d
   374c5:	mov    r8d,edx
   374c8:	mov    edx,DWORD PTR [rsp+0x24]
   374cc:	add    esi,eax
   374ce:	ror    r8d,0x2
   374d2:	xor    edx,r11d
   374d5:	xor    edx,DWORD PTR [rsp+0x2c]
   374d9:	xor    edx,DWORD PTR [rsp+0xc]
   374dd:	mov    eax,r8d
   374e0:	rol    edx,1
   374e2:	lea    r8d,[rdx+r9*1-0x70e44324]
   374ea:	mov    r9d,esi
   374ed:	mov    DWORD PTR [rsp+0x3c],edx
   374f1:	rol    r9d,0x5
   374f5:	add    r8d,r9d
   374f8:	mov    r9d,edi
   374fb:	or     r9d,eax
   374fe:	mov    edx,r9d
   37501:	mov    r9d,edi
   37504:	ror    edi,0x2
   37507:	and    r9d,eax
   3750a:	and    edx,ecx
   3750c:	or     edx,r9d
   3750f:	mov    r9d,esi
   37512:	add    edx,r8d
   37515:	mov    r8d,r12d
   37518:	or     r9d,edi
   3751b:	xor    r8d,r15d
   3751e:	and    r9d,eax
   37521:	xor    r8d,r10d
   37524:	xor    r8d,DWORD PTR [rsp+0x48]
   37529:	rol    r8d,1
   3752c:	mov    r12d,r8d
   3752f:	mov    r8d,esi
   37532:	and    r8d,edi
   37535:	lea    ecx,[r12+rcx*1-0x70e44324]
   3753d:	mov    DWORD PTR [rsp+0x40],r12d
   37542:	or     r8d,r9d
   37545:	xor    r11d,r14d
   37548:	ror    esi,0x2
   3754b:	xor    r15d,r13d
   3754e:	add    r8d,ecx
   37551:	mov    ecx,edx
   37553:	xor    r15d,DWORD PTR [rsp+0x28]
   37558:	xor    r15d,DWORD PTR [rsp+0x3c]
   3755d:	rol    ecx,0x5
   37560:	rol    r15d,1
   37563:	xor    r14d,ebp
   37566:	xor    r14d,DWORD PTR [rsp+0x38]
   3756b:	add    ecx,r8d
   3756e:	mov    r8d,DWORD PTR [rsp+0x44]
   37573:	xor    r14d,r12d
   37576:	mov    r12d,DWORD PTR [rsp+0x2c]
   3757b:	mov    r9d,ecx
   3757e:	xor    r8d,r11d
   37581:	xor    r8d,DWORD PTR [rsp+0x1c]
   37586:	rol    r9d,0x5
   3758a:	rol    r8d,1
   3758d:	mov    r11d,r8d
   37590:	lea    r8d,[r8+rax*1-0x70e44324]
   37598:	add    r8d,r9d
   3759b:	mov    r9d,edx
   3759e:	mov    DWORD PTR [rsp+0x20],r11d
   375a3:	or     r9d,esi
   375a6:	mov    eax,r9d
   375a9:	mov    r9d,edx
   375ac:	ror    edx,0x2
   375af:	and    r9d,esi
   375b2:	and    eax,edi
   375b4:	lea    edi,[r15+rdi*1-0x70e44324]
   375bc:	or     eax,r9d
   375bf:	mov    r9d,ecx
   375c2:	add    eax,r8d
   375c5:	or     r9d,edx
   375c8:	mov    r8d,ecx
   375cb:	ror    ecx,0x2
   375ce:	and    r9d,esi
   375d1:	and    r8d,edx
   375d4:	or     r8d,r9d
   375d7:	mov    r9d,eax
   375da:	rol    r9d,0x5
   375de:	add    r8d,edi
   375e1:	mov    edi,r9d
   375e4:	mov    r9d,eax
   375e7:	add    edi,r8d
   375ea:	rol    r14d,1
   375ed:	or     r9d,ecx
   375f0:	xor    r13d,ebx
   375f3:	mov    r8d,edi
   375f6:	and    r9d,edx
   375f9:	xor    r13d,DWORD PTR [rsp+0xc]
   375fe:	xor    ebp,r12d
   37601:	rol    r8d,0x5
   37605:	lea    esi,[r14+rsi*1-0x70e44324]
   3760d:	xor    r13d,r11d
   37610:	mov    r11d,edi
   37613:	add    esi,r8d
   37616:	mov    r8d,eax
   37619:	ror    eax,0x2
   3761c:	and    r8d,ecx
   3761f:	and    r11d,eax
   37622:	rol    r13d,1
   37625:	or     r9d,r8d
   37628:	mov    r8d,edi
   3762b:	lea    edx,[r13+rdx*1-0x70e44324]
   37633:	ror    edi,0x2
   37636:	or     r8d,eax
   37639:	add    r9d,esi
   3763c:	mov    esi,r11d
   3763f:	and    r8d,ecx
   37642:	mov    r11d,r9d
   37645:	or     esi,r8d
   37648:	rol    r11d,0x5
   3764c:	add    esi,edx
   3764e:	add    r11d,esi
   37651:	mov    esi,DWORD PTR [rsp+0x48]
   37655:	xor    esi,ebp
   37657:	xor    esi,r15d
   3765a:	rol    esi,1
   3765c:	lea    edx,[rsi+rcx*1-0x70e44324]
   37663:	mov    ecx,r11d
   37666:	rol    ecx,0x5
   37669:	add    edx,ecx
   3766b:	mov    ecx,r9d
   3766e:	or     ecx,edi
   37670:	mov    r8d,ecx
   37673:	mov    ecx,r9d
   37676:	and    ecx,edi
   37678:	and    r8d,eax
   3767b:	or     r8d,ecx
   3767e:	mov    ecx,ebx
   37680:	add    r8d,edx
   37683:	ror    r9d,0x2
   37687:	xor    ecx,r10d
   3768a:	xor    ecx,DWORD PTR [rsp+0x1c]
   3768e:	xor    ecx,r14d
   37691:	xor    r10d,DWORD PTR [rsp+0x28]
   37696:	rol    ecx,1
   37698:	mov    ebp,ecx
   3769a:	mov    ecx,r11d
   3769d:	or     ecx,r9d
   376a0:	lea    eax,[rbp+rax*1-0x70e44324]
   376a7:	mov    DWORD PTR [rsp+0x4c],ebp
   376ab:	mov    ebx,ecx
   376ad:	mov    ecx,r11d
   376b0:	ror    r11d,0x2
   376b4:	and    ecx,r9d
   376b7:	and    ebx,edi
   376b9:	mov    edx,ecx
   376bb:	mov    ecx,r8d
   376be:	or     edx,ebx
   376c0:	rol    ecx,0x5
   376c3:	add    edx,eax
   376c5:	mov    ebx,ecx
   376c7:	add    ebx,edx
   376c9:	mov    edx,r12d
   376cc:	mov    r12d,DWORD PTR [rsp+0x44]
   376d1:	mov    ecx,ebx
   376d3:	xor    edx,r12d
   376d6:	xor    edx,DWORD PTR [rsp+0x3c]
   376da:	rol    ecx,0x5
   376dd:	xor    edx,r13d
   376e0:	rol    edx,1
   376e2:	lea    eax,[rdx+rdi*1-0x70e44324]
   376e9:	add    eax,ecx
   376eb:	mov    ecx,r8d
   376ee:	or     ecx,r11d
   376f1:	mov    edi,ecx
   376f3:	mov    ecx,r8d
   376f6:	ror    r8d,0x2
   376fa:	and    ecx,r11d
   376fd:	and    edi,r9d
   37700:	or     edi,ecx
   37702:	mov    ecx,ebx
   37704:	add    edi,eax
   37706:	mov    eax,DWORD PTR [rsp+0x40]
   3770a:	or     ecx,r8d
   3770d:	mov    ebp,ecx
   3770f:	xor    eax,r10d
   37712:	mov    r10d,ebx
   37715:	and    ebp,r11d
   37718:	xor    eax,esi
   3771a:	and    r10d,r8d
   3771d:	rol    eax,1
   3771f:	or     r10d,ebp
   37722:	ror    ebx,0x2
   37725:	lea    r9d,[rax+r9*1-0x70e44324]
   3772d:	add    r9d,r10d
   37730:	mov    r10d,edi
   37733:	rol    r10d,0x5
   37737:	add    r10d,r9d
   3773a:	mov    r9d,r12d
   3773d:	mov    r12d,DWORD PTR [rsp+0x38]
   37742:	mov    ecx,r10d
   37745:	xor    r9d,r12d
   37748:	xor    r9d,DWORD PTR [rsp+0x20]
   3774d:	xor    r9d,DWORD PTR [rsp+0x4c]
   37752:	rol    ecx,0x5
   37755:	rol    r9d,1
   37758:	lea    r11d,[r9+r11*1-0x70e44324]
   37760:	mov    DWORD PTR [rsp+0x44],r9d
   37765:	add    r11d,ecx
   37768:	mov    ecx,edi
   3776a:	or     ecx,ebx
   3776c:	mov    r9d,ecx
   3776f:	mov    ecx,edi
   37771:	ror    edi,0x2
   37774:	and    ecx,ebx
   37776:	and    r9d,r8d
   37779:	or     r9d,ecx
   3777c:	mov    ecx,r10d
   3777f:	add    r9d,r11d
   37782:	mov    r11d,DWORD PTR [rsp+0x28]
   37787:	xor    r11d,DWORD PTR [rsp+0xc]
   3778c:	or     ecx,edi
   3778e:	xor    r11d,r15d
   37791:	mov    ebp,ecx
   37793:	mov    ecx,r10d
   37796:	ror    r10d,0x2
   3779a:	xor    r11d,edx
   3779d:	and    ecx,edi
   3779f:	and    ebp,ebx
   377a1:	rol    r11d,1
   377a4:	mov    DWORD PTR [rsp+0x24],r11d
   377a9:	mov    r11d,ecx
   377ac:	mov    ecx,r9d
   377af:	or     r11d,ebp
   377b2:	mov    ebp,DWORD PTR [rsp+0x24]
   377b6:	rol    ecx,0x5
   377b9:	lea    r8d,[rbp+r8*1-0x70e44324]
   377c1:	add    r8d,r11d
   377c4:	mov    r11d,ecx
   377c7:	add    r11d,r8d
   377ca:	mov    r8d,r12d
   377cd:	mov    r12d,DWORD PTR [rsp+0x48]
   377d2:	mov    ecx,r11d
   377d5:	xor    r8d,r12d
   377d8:	xor    r8d,r14d
   377db:	xor    r8d,eax
   377de:	rol    r8d,1
   377e1:	rol    ecx,0x5
   377e4:	lea    ebx,[r8+rbx*1-0x70e44324]
   377ec:	mov    DWORD PTR [rsp+0x28],r8d
   377f1:	add    ebx,ecx
   377f3:	mov    ecx,r9d
   377f6:	or     ecx,r10d
   377f9:	mov    r8d,ecx
   377fc:	mov    ecx,r9d
   377ff:	ror    r9d,0x2
   37803:	and    ecx,r10d
   37806:	and    r8d,edi
   37809:	or     r8d,ecx
   3780c:	mov    ecx,r11d
   3780f:	add    r8d,ebx
   37812:	or     ecx,r9d
   37815:	mov    ebx,DWORD PTR [rsp+0xc]
   37819:	xor    ebx,DWORD PTR [rsp+0x1c]
   3781d:	xor    ebx,r13d
   37820:	mov    ebp,ecx
   37822:	xor    ebx,DWORD PTR [rsp+0x44]
   37826:	mov    ecx,r11d
   37829:	rol    ebx,1
   3782b:	and    ecx,r9d
   3782e:	and    ebp,r10d
   37831:	ror    r11d,0x2
   37835:	mov    DWORD PTR [rsp+0xc],ebx
   37839:	mov    ebx,ecx
   3783b:	mov    ecx,r8d
   3783e:	or     ebx,ebp
   37840:	mov    ebp,DWORD PTR [rsp+0xc]
   37844:	rol    ecx,0x5
   37847:	lea    edi,[rbp+rdi*1-0x70e44324]
   3784e:	mov    ebp,DWORD PTR [rsp+0x3c]
   37852:	add    edi,ebx
   37854:	mov    ebx,ecx
   37856:	mov    ecx,r9d
   37859:	add    ebx,edi
   3785b:	mov    edi,r12d
   3785e:	xor    ecx,r11d
   37861:	xor    edi,ebp
   37863:	xor    edi,esi
   37865:	xor    edi,DWORD PTR [rsp+0x24]
   37869:	rol    edi,1
   3786b:	mov    r12d,edi
   3786e:	mov    edi,ecx
   37870:	mov    ecx,ebx
   37872:	xor    edi,r8d
   37875:	rol    ecx,0x5
   37878:	mov    DWORD PTR [rsp+0x2c],r12d
   3787d:	lea    r10d,[r12+r10*1-0x359d3e2a]
   37885:	add    r10d,edi
   37888:	mov    edi,ecx
   3788a:	mov    r12d,DWORD PTR [rsp+0x40]
   3788f:	ror    r8d,0x2
   37893:	add    edi,r10d
   37896:	mov    r10d,DWORD PTR [rsp+0x1c]
   3789b:	xor    r10d,r12d
   3789e:	xor    r10d,DWORD PTR [rsp+0x4c]
   378a3:	xor    r10d,DWORD PTR [rsp+0x28]
   378a8:	xor    r12d,r15d
   378ab:	rol    r10d,1
   378ae:	mov    ecx,r10d
   378b1:	mov    r10d,r11d
   378b4:	xor    r10d,r8d
   378b7:	lea    r9d,[rcx+r9*1-0x359d3e2a]
   378bf:	mov    DWORD PTR [rsp+0x1c],ecx
   378c3:	xor    r10d,ebx
   378c6:	ror    ebx,0x2
   378c9:	add    r9d,r10d
   378cc:	mov    r10d,edi
   378cf:	rol    r10d,0x5
   378d3:	add    r10d,r9d
   378d6:	mov    r9d,DWORD PTR [rsp+0x20]
   378db:	xor    r9d,ebp
   378de:	mov    ebp,ebx
   378e0:	xor    r9d,edx
   378e3:	xor    r9d,DWORD PTR [rsp+0xc]
   378e8:	mov    ecx,r9d
   378eb:	mov    r9d,r8d
   378ee:	rol    ecx,1
   378f0:	xor    r9d,ebx
   378f3:	xor    r9d,edi
   378f6:	lea    r11d,[rcx+r11*1-0x359d3e2a]
   378fe:	add    r11d,r9d
   37901:	mov    r9d,r10d
   37904:	rol    r9d,0x5
   37908:	add    r9d,r11d
   3790b:	mov    r11d,edi
   3790e:	mov    edi,r12d
   37911:	mov    r12d,DWORD PTR [rsp+0x44]
   37916:	ror    r11d,0x2
   3791a:	xor    edi,eax
   3791c:	xor    edi,DWORD PTR [rsp+0x2c]
   37920:	rol    edi,1
   37922:	xor    ebp,r11d
   37925:	xor    ebp,r10d
   37928:	mov    DWORD PTR [rsp+0x38],edi
   3792c:	lea    edi,[rdi+r8*1-0x359d3e2a]
   37934:	ror    r10d,0x2
   37938:	add    edi,ebp
   3793a:	mov    ebp,r9d
   3793d:	rol    ebp,0x5
   37940:	mov    r8d,ebp
   37943:	add    r8d,edi
   37946:	mov    edi,DWORD PTR [rsp+0x20]
   3794a:	mov    DWORD PTR [rsp+0x20],ecx
   3794e:	xor    edi,r14d
   37951:	xor    edi,r12d
   37954:	xor    edi,DWORD PTR [rsp+0x1c]
   37958:	mov    ebp,edi
   3795a:	rol    ebp,1
   3795c:	xor    r15d,r13d
   3795f:	xor    r15d,DWORD PTR [rsp+0x24]
   37964:	xor    r14d,esi
   37967:	mov    edi,ebp
   37969:	mov    DWORD PTR [rsp+0x70],ebp
   3796d:	mov    ebp,r11d
   37970:	xor    r15d,ecx
   37973:	xor    ebp,r10d
   37976:	mov    DWORD PTR [rsp+0x3c],edi
   3797a:	rol    r15d,1
   3797d:	xor    r14d,DWORD PTR [rsp+0x28]
   37982:	xor    ebp,r9d
   37985:	ror    r9d,0x2
   37989:	xor    r14d,DWORD PTR [rsp+0x38]
   3798e:	mov    ecx,r15d
   37991:	lea    edi,[rdi+rbx*1-0x359d3e2a]
   37998:	rol    r14d,1
   3799b:	lea    ebx,[r15+r11*1-0x359d3e2a]
   379a3:	mov    DWORD PTR [rsp+0x74],r15d
   379a8:	add    edi,ebp
   379aa:	mov    ebp,r8d
   379ad:	mov    DWORD PTR [rsp+0x78],r14d
   379b2:	mov    r15d,DWORD PTR [rsp+0x4c]
   379b7:	rol    ebp,0x5
   379ba:	mov    DWORD PTR [rsp+0x40],ecx
   379be:	add    edi,ebp
   379c0:	mov    ebp,r10d
   379c3:	xor    r13d,r15d
   379c6:	xor    r13d,DWORD PTR [rsp+0xc]
   379cb:	xor    ebp,r9d
   379ce:	mov    r11d,edi
   379d1:	xor    r13d,DWORD PTR [rsp+0x3c]
   379d6:	rol    r11d,0x5
   379da:	xor    ebp,r8d
   379dd:	ror    r8d,0x2
   379e1:	add    ebx,ebp
   379e3:	mov    ebp,r9d
   379e6:	rol    r13d,1
   379e9:	xor    ebp,r8d
   379ec:	add    r11d,ebx
   379ef:	lea    ebx,[r14+r10*1-0x359d3e2a]
   379f7:	mov    DWORD PTR [rsp+0x7c],r13d
   379fc:	xor    ebp,edi
   379fe:	mov    r10d,r11d
   37a01:	ror    edi,0x2
   37a04:	add    ebx,ebp
   37a06:	mov    ebp,r8d
   37a09:	rol    r10d,0x5
   37a0d:	xor    ebp,edi
   37a0f:	add    r10d,ebx
   37a12:	lea    ebx,[r13+r9*1-0x359d3e2a]
   37a1a:	xor    ebp,r11d
   37a1d:	xor    esi,edx
   37a1f:	xor    esi,DWORD PTR [rsp+0x2c]
   37a23:	ror    r11d,0x2
   37a27:	add    ebx,ebp
   37a29:	xor    esi,ecx
   37a2b:	mov    r9d,r10d
   37a2e:	mov    ebp,edi
   37a30:	rol    esi,1
   37a32:	xor    ebp,r11d
   37a35:	rol    r9d,0x5
   37a39:	mov    ecx,r15d
   37a3c:	add    r9d,ebx
   37a3f:	xor    ebp,r10d
   37a42:	lea    ebx,[rsi+r8*1-0x359d3e2a]
   37a4a:	xor    ecx,eax
   37a4c:	add    ebx,ebp
   37a4e:	mov    ebp,r9d
   37a51:	xor    ecx,DWORD PTR [rsp+0x1c]
   37a55:	ror    r10d,0x2
   37a59:	rol    ebp,0x5
   37a5c:	xor    ecx,r14d
   37a5f:	xor    edx,r12d
   37a62:	xor    edx,DWORD PTR [rsp+0x20]
   37a66:	mov    r8d,ebp
   37a69:	mov    ebp,r11d
   37a6c:	rol    ecx,1
   37a6e:	xor    edx,r13d
   37a71:	xor    ebp,r10d
   37a74:	add    r8d,ebx
   37a77:	lea    ebx,[rcx+rdi*1-0x359d3e2a]
   37a7e:	rol    edx,1
   37a80:	xor    ebp,r9d
   37a83:	ror    r9d,0x2
   37a87:	mov    r15d,DWORD PTR [rsp+0x24]
   37a8c:	mov    DWORD PTR [rsp+0x80],esi
   37a93:	add    ebx,ebp
   37a95:	mov    ebp,r8d
   37a98:	mov    DWORD PTR [rsp+0x84],ecx
   37a9f:	rol    ebp,0x5
   37aa2:	mov    DWORD PTR [rsp+0x88],edx
   37aa9:	mov    edi,ebp
   37aab:	mov    ebp,r10d
   37aae:	add    edi,ebx
   37ab0:	xor    ebp,r9d
   37ab3:	lea    ebx,[rdx+r11*1-0x359d3e2a]
   37abb:	xor    ebp,r8d
   37abe:	mov    r11d,edi
   37ac1:	add    ebx,ebp
   37ac3:	rol    r11d,0x5
   37ac7:	xor    eax,r15d
   37aca:	xor    eax,DWORD PTR [rsp+0x38]
   37ace:	ror    r8d,0x2
   37ad2:	xor    eax,esi
   37ad4:	mov    ebp,r9d
   37ad7:	add    r11d,ebx
   37ada:	rol    eax,1
   37adc:	xor    ebp,r8d
   37adf:	xor    r12d,DWORD PTR [rsp+0x28]
   37ae4:	xor    ebp,edi
   37ae6:	lea    ebx,[rax+r10*1-0x359d3e2a]
   37aee:	mov    r10d,r11d
   37af1:	ror    edi,0x2
   37af4:	add    ebx,ebp
   37af6:	rol    r10d,0x5
   37afa:	mov    ebp,r8d
   37afd:	mov    DWORD PTR [rsp+0x8c],eax
   37b04:	add    r10d,ebx
   37b07:	mov    ebx,DWORD PTR [rsp+0x3c]
   37b0b:	xor    ebp,edi
   37b0d:	xor    ebp,r11d
   37b10:	ror    r11d,0x2
   37b14:	xor    ebx,r12d
   37b17:	mov    r12d,DWORD PTR [rsp+0xc]
   37b1c:	xor    ebx,ecx
   37b1e:	rol    ebx,1
   37b20:	xor    r15d,r12d
   37b23:	lea    r9d,[rbx+r9*1-0x359d3e2a]
   37b2b:	mov    DWORD PTR [rsp+0x90],ebx
   37b32:	add    r9d,ebp
   37b35:	mov    ebp,r10d
   37b38:	rol    ebp,0x5
   37b3b:	add    ebp,r9d
   37b3e:	mov    r9d,DWORD PTR [rsp+0x40]
   37b43:	xor    r9d,r15d
   37b46:	mov    r15d,edi
   37b49:	xor    r9d,edx
   37b4c:	xor    r15d,r11d
   37b4f:	rol    r9d,1
   37b52:	xor    r15d,r10d
   37b55:	lea    r8d,[r9+r8*1-0x359d3e2a]
   37b5d:	mov    DWORD PTR [rsp+0x94],r9d
   37b65:	add    r8d,r15d
   37b68:	mov    r15d,ebp
   37b6b:	rol    r15d,0x5
   37b6f:	add    r8d,r15d
   37b72:	ror    r10d,0x2
   37b76:	mov    r15d,DWORD PTR [rsp+0x28]
   37b7b:	xor    r15d,DWORD PTR [rsp+0x2c]
   37b80:	xor    r14d,r15d
   37b83:	mov    r15d,r11d
   37b86:	xor    r14d,eax
   37b89:	xor    r15d,r10d
   37b8c:	rol    r14d,1
   37b8f:	xor    r15d,ebp
   37b92:	ror    ebp,0x2
   37b95:	lea    edi,[r14+rdi*1-0x359d3e2a]
   37b9d:	mov    DWORD PTR [rsp+0x98],r14d
   37ba5:	add    edi,r15d
   37ba8:	mov    r15d,r8d
   37bab:	rol    r15d,0x5
   37baf:	add    edi,r15d
   37bb2:	mov    r15d,r12d
   37bb5:	mov    r12d,DWORD PTR [rsp+0x1c]
   37bba:	xor    r15d,r12d
   37bbd:	xor    r15d,r13d
   37bc0:	mov    r13d,r10d
   37bc3:	xor    r15d,ebx
   37bc6:	xor    r13d,ebp
   37bc9:	rol    r15d,1
   37bcc:	mov    ebx,r13d
   37bcf:	mov    r13d,edi
   37bd2:	xor    ebx,r8d
   37bd5:	lea    r11d,[r15+r11*1-0x359d3e2a]
   37bdd:	rol    r13d,0x5
   37be1:	mov    DWORD PTR [rsp+0x9c],r15d
   37be9:	add    r11d,ebx
   37bec:	mov    ebx,DWORD PTR [rsp+0x2c]
   37bf0:	ror    r8d,0x2
   37bf4:	add    r11d,r13d
   37bf7:	mov    r13d,DWORD PTR [rsp+0x20]
   37bfc:	xor    ebx,r13d
   37bff:	xor    ebx,esi
   37c01:	xor    ebx,r9d
   37c04:	mov    r9d,ebp
   37c07:	rol    ebx,1
   37c09:	xor    r9d,r8d
   37c0c:	xor    r9d,edi
   37c0f:	lea    esi,[rbx+r10*1-0x359d3e2a]
   37c17:	mov    r10d,DWORD PTR [rsp+0x38]
   37c1c:	ror    edi,0x2
   37c1f:	add    esi,r9d
   37c22:	mov    r9d,r11d
   37c25:	mov    DWORD PTR [rsp+0xa0],ebx
   37c2c:	rol    r9d,0x5
   37c30:	add    esi,r9d
   37c33:	mov    r9d,r12d
   37c36:	xor    r9d,r10d
   37c39:	xor    r9d,ecx
   37c3c:	mov    ecx,r8d
   37c3f:	xor    r9d,r14d
   37c42:	xor    ecx,edi
   37c44:	rol    r9d,1
   37c47:	xor    ecx,r11d
   37c4a:	ror    r11d,0x2
   37c4e:	mov    DWORD PTR [rsp+0xa4],r9d
   37c56:	lea    r9d,[r9+rbp*1-0x359d3e2a]
   37c5e:	add    ecx,r9d
   37c61:	mov    r9d,esi
   37c64:	rol    r9d,0x5
   37c68:	add    ecx,r9d
   37c6b:	mov    r9d,DWORD PTR [rsp+0x3c]
   37c70:	xor    r9d,r13d
   37c73:	xor    r9d,edx
   37c76:	xor    r9d,r15d
   37c79:	mov    r15d,edi
   37c7c:	xor    r15d,r11d
   37c7f:	rol    r9d,1
   37c82:	mov    edx,r15d
   37c85:	lea    r8d,[r9+r8*1-0x359d3e2a]
   37c8d:	mov    r15d,ecx
   37c90:	mov    DWORD PTR [rsp+0xa8],r9d
   37c98:	xor    edx,esi
   37c9a:	xor    r10d,DWORD PTR [rsp+0x40]
   37c9f:	ror    esi,0x2
   37ca2:	add    DWORD PTR [rsp+0x18],esi
   37ca6:	add    edx,r8d
   37ca9:	mov    r8d,r10d
   37cac:	rol    r15d,0x5
   37cb0:	mov    r14d,DWORD PTR [rsp+0x18]
   37cb5:	xor    r8d,eax
   37cb8:	add    edx,r15d
   37cbb:	add    DWORD PTR [rsp+0x10],edx
   37cbf:	xor    r8d,ebx
   37cc2:	mov    ebx,DWORD PTR [rsp+0x30]
   37cc6:	rol    r8d,1
   37cc9:	lea    eax,[r8+rbx*1-0x359d3e2a]
   37cd1:	mov    ebx,r11d
   37cd4:	mov    DWORD PTR [rsp+0xac],r8d
   37cdc:	xor    ebx,esi
   37cde:	add    eax,edi
   37ce0:	mov    edi,ebx
   37ce2:	mov    ebx,edx
   37ce4:	mov    edx,DWORD PTR [rsp+0x10]
   37ce8:	xor    edi,ecx
   37cea:	rol    ebx,0x5
   37ced:	add    eax,edi
   37cef:	ror    ecx,0x2
   37cf2:	add    DWORD PTR [rsp+0x14],ecx
   37cf6:	lea    ebx,[rax+rbx*1]
   37cf9:	mov    eax,DWORD PTR [rsp+0x14]
   37cfd:	add    DWORD PTR [rsp+0x34],r11d
   37d02:	mov    r10d,ebx
   37d05:	mov    DWORD PTR [rsp+0x30],ebx
   37d09:	mov    rbx,QWORD PTR [rsp+0x60]
   37d0e:	mov    DWORD PTR [rbx+0x8],eax
   37d11:	mov    eax,DWORD PTR [rsp+0x34]
   37d15:	mov    DWORD PTR [rbx],r10d
   37d18:	mov    DWORD PTR [rbx+0x10],eax
   37d1b:	mov    rax,QWORD PTR [rsp+0x50]
   37d20:	mov    DWORD PTR [rbx+0x4],edx
   37d23:	mov    DWORD PTR [rbx+0xc],r14d
   37d27:	cmp    QWORD PTR [rsp+0x58],rax
   37d2c:	ja     36a78 <sha1_process_block+0x98>
   37d32:	mov    rax,QWORD PTR [rsp+0xb8]
   37d3a:	sub    rax,QWORD PTR fs:0x28
   37d43:	jne    37d57 <sha1_process_block+0x1377>
   37d45:	add    rsp,0xc8
   37d4c:	pop    rbx
   37d4d:	pop    rbp
   37d4e:	pop    r12
   37d50:	pop    r13
   37d52:	pop    r14
   37d54:	pop    r15
   37d56:	ret    
   37d57:	call   11760 <__stack_chk_fail@plt>
   37d5c:	nop    DWORD PTR [rax+0x0]

0000000000037d60 <sha1_finish_ctx>:
   37d60:	endbr64 
   37d64:	push   r12
   37d66:	mov    r12,rdi
   37d69:	push   rbp
   37d6a:	mov    rbp,rsi
   37d6d:	sub    rsp,0x8
   37d71:	mov    edx,DWORD PTR [rdi+0x1c]
   37d74:	mov    ecx,DWORD PTR [r12+0x18]
   37d79:	cmp    edx,0x38
   37d7c:	mov    esi,edx
   37d7e:	sbb    r8,r8
   37d81:	and    r8,0xffffffffffffffc0
   37d85:	sub    r8,0xffffffffffffff80
   37d89:	cmp    edx,0x38
   37d8c:	sbb    rax,rax
   37d8f:	and    rax,0xffffffffffffffc0
   37d93:	add    rax,0x78
   37d97:	cmp    edx,0x38
   37d9a:	sbb    rdi,rdi
   37d9d:	and    rdi,0xfffffffffffffff0
   37da1:	add    rdi,0x1f
   37da5:	cmp    edx,0x38
   37da8:	sbb    r9,r9
   37dab:	and    r9,0xfffffffffffffff0
   37daf:	add    r9,0x1e
   37db3:	add    esi,DWORD PTR [r12+0x14]
   37db8:	mov    DWORD PTR [r12+0x14],esi
   37dbd:	jae    37dc7 <sha1_finish_ctx+0x67>
   37dbf:	add    ecx,0x1
   37dc2:	mov    DWORD PTR [r12+0x18],ecx
   37dc7:	mov    r10d,esi
   37dca:	shl    ecx,0x3
   37dcd:	sub    rax,rdx
   37dd0:	shr    r10d,0x1d
   37dd4:	shl    esi,0x3
   37dd7:	or     ecx,r10d
   37dda:	bswap  esi
   37ddc:	bswap  ecx
   37dde:	mov    DWORD PTR [r12+r9*4+0x20],ecx
   37de3:	lea    r9,[r12+0x20]
   37de8:	mov    DWORD PTR [r12+rdi*4+0x20],esi
   37ded:	lea    rcx,[r9+rdx*1]
   37df1:	lea    rsi,[rip+0x202c8]        # 580c0 <fillbuf>
   37df8:	cmp    rax,0x8
   37dfc:	jae    37e20 <sha1_finish_ctx+0xc0>
   37dfe:	test   al,0x4
   37e00:	jne    37e70 <sha1_finish_ctx+0x110>
   37e02:	test   rax,rax
   37e05:	je     37e4c <sha1_finish_ctx+0xec>
   37e07:	movzx  edx,BYTE PTR [rip+0x202b2]        # 580c0 <fillbuf>
   37e0e:	mov    BYTE PTR [rcx],dl
   37e10:	test   al,0x2
   37e12:	je     37e4c <sha1_finish_ctx+0xec>
   37e14:	movzx  edx,WORD PTR [rsi+rax*1-0x2]
   37e19:	mov    WORD PTR [rcx+rax*1-0x2],dx
   37e1e:	jmp    37e4c <sha1_finish_ctx+0xec>
   37e20:	mov    rdx,QWORD PTR [rip+0x20299]        # 580c0 <fillbuf>
   37e27:	lea    rdi,[rcx+0x8]
   37e2b:	and    rdi,0xfffffffffffffff8
   37e2f:	mov    QWORD PTR [rcx],rdx
   37e32:	mov    rdx,QWORD PTR [rsi+rax*1-0x8]
   37e37:	mov    QWORD PTR [rcx+rax*1-0x8],rdx
   37e3c:	sub    rcx,rdi
   37e3f:	sub    rsi,rcx
   37e42:	add    rcx,rax
   37e45:	shr    rcx,0x3
   37e49:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   37e4c:	mov    rdx,r12
   37e4f:	mov    rsi,r8
   37e52:	mov    rdi,r9
   37e55:	call   369e0 <sha1_process_block>
   37e5a:	add    rsp,0x8
   37e5e:	mov    rsi,rbp
   37e61:	mov    rdi,r12
   37e64:	pop    rbp
   37e65:	pop    r12
   37e67:	jmp    369b0 <sha1_read_ctx>
   37e6c:	nop    DWORD PTR [rax+0x0]
   37e70:	mov    edx,DWORD PTR [rip+0x2024a]        # 580c0 <fillbuf>
   37e76:	mov    DWORD PTR [rcx],edx
   37e78:	mov    edx,DWORD PTR [rsi+rax*1-0x4]
   37e7c:	mov    DWORD PTR [rcx+rax*1-0x4],edx
   37e80:	jmp    37e4c <sha1_finish_ctx+0xec>
   37e82:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   37e8d:	nop    DWORD PTR [rax]

0000000000037e90 <sha1_process_bytes>:
   37e90:	endbr64 
   37e94:	push   r15
   37e96:	push   r14
   37e98:	mov    r14,rdx
   37e9b:	push   r13
   37e9d:	push   r12
   37e9f:	push   rbp
   37ea0:	mov    rbp,rsi
   37ea3:	push   rbx
   37ea4:	mov    rbx,rdi
   37ea7:	sub    rsp,0x18
   37eab:	mov    eax,DWORD PTR [rdx+0x1c]
   37eae:	test   eax,eax
   37eb0:	jne    37ff0 <sha1_process_bytes+0x160>
   37eb6:	cmp    rbp,0x3f
   37eba:	jbe    37fd3 <sha1_process_bytes+0x143>
   37ec0:	test   bl,0x3
   37ec3:	je     37fb8 <sha1_process_bytes+0x128>
   37ec9:	lea    r12,[r14+0x20]
   37ecd:	cmp    rbp,0x40
   37ed1:	je     38158 <sha1_process_bytes+0x2c8>
   37ed7:	lea    rax,[rbp-0x41]
   37edb:	shr    rax,0x6
   37edf:	mov    r15,rax
   37ee2:	lea    rax,[rax+0x1]
   37ee6:	shl    rax,0x6
   37eea:	lea    r13,[rbx+rax*1]
   37eee:	xchg   ax,ax
   37ef0:	movdqu xmm0,XMMWORD PTR [rbx]
   37ef4:	mov    rdx,r14
   37ef7:	mov    esi,0x40
   37efc:	mov    rdi,r12
   37eff:	add    rbx,0x40
   37f03:	movups XMMWORD PTR [r12],xmm0
   37f08:	movdqu xmm1,XMMWORD PTR [rbx-0x30]
   37f0d:	movups XMMWORD PTR [r12+0x10],xmm1
   37f13:	movdqu xmm2,XMMWORD PTR [rbx-0x20]
   37f18:	movups XMMWORD PTR [r12+0x20],xmm2
   37f1e:	movdqu xmm3,XMMWORD PTR [rbx-0x10]
   37f23:	movups XMMWORD PTR [r12+0x30],xmm3
   37f29:	call   369e0 <sha1_process_block>
   37f2e:	cmp    rbx,r13
   37f31:	jne    37ef0 <sha1_process_bytes+0x60>
   37f33:	mov    rax,r15
   37f36:	neg    rax
   37f39:	shl    rax,0x6
   37f3d:	lea    rbp,[rbp+rax*1-0x40]
   37f42:	mov    ebx,DWORD PTR [r14+0x1c]
   37f46:	mov    edx,ebp
   37f48:	lea    rcx,[r12+rbx*1]
   37f4c:	cmp    ebp,0x8
   37f4f:	jae    38040 <sha1_process_bytes+0x1b0>
   37f55:	test   bpl,0x4
   37f59:	jne    38160 <sha1_process_bytes+0x2d0>
   37f5f:	test   edx,edx
   37f61:	je     37f73 <sha1_process_bytes+0xe3>
   37f63:	movzx  eax,BYTE PTR [r13+0x0]
   37f68:	mov    BYTE PTR [rcx],al
   37f6a:	test   dl,0x2
   37f6d:	jne    38174 <sha1_process_bytes+0x2e4>
   37f73:	add    rbx,rbp
   37f76:	cmp    rbx,0x3f
   37f7a:	jbe    37f9f <sha1_process_bytes+0x10f>
   37f7c:	mov    rdx,r14
   37f7f:	mov    esi,0x40
   37f84:	mov    rdi,r12
   37f87:	sub    rbx,0x40
   37f8b:	call   369e0 <sha1_process_block>
   37f90:	lea    rsi,[r14+0x60]
   37f94:	mov    rdx,rbx
   37f97:	mov    rdi,r12
   37f9a:	call   11220 <memcpy@plt>
   37f9f:	mov    DWORD PTR [r14+0x1c],ebx
   37fa3:	add    rsp,0x18
   37fa7:	pop    rbx
   37fa8:	pop    rbp
   37fa9:	pop    r12
   37fab:	pop    r13
   37fad:	pop    r14
   37faf:	pop    r15
   37fb1:	ret    
   37fb2:	nop    WORD PTR [rax+rax*1+0x0]
   37fb8:	mov    r12,rbp
   37fbb:	mov    rdi,rbx
   37fbe:	mov    rdx,r14
   37fc1:	and    ebp,0x3f
   37fc4:	and    r12,0xffffffffffffffc0
   37fc8:	mov    rsi,r12
   37fcb:	add    rbx,r12
   37fce:	call   369e0 <sha1_process_block>
   37fd3:	test   rbp,rbp
   37fd6:	jne    38184 <sha1_process_bytes+0x2f4>
   37fdc:	add    rsp,0x18
   37fe0:	pop    rbx
   37fe1:	pop    rbp
   37fe2:	pop    r12
   37fe4:	pop    r13
   37fe6:	pop    r14
   37fe8:	pop    r15
   37fea:	ret    
   37feb:	nop    DWORD PTR [rax+rax*1+0x0]
   37ff0:	mov    r12d,eax
   37ff3:	mov    eax,0x80
   37ff8:	lea    rcx,[rdx+0x20]
   37ffc:	sub    rax,r12
   37fff:	lea    rdi,[rcx+r12*1]
   38003:	mov    QWORD PTR [rsp+0x8],rcx
   38008:	cmp    rax,rsi
   3800b:	cmova  rax,rsi
   3800f:	mov    rsi,rbx
   38012:	mov    rdx,rax
   38015:	mov    r13,rax
   38018:	call   11220 <memcpy@plt>
   3801d:	mov    r15d,DWORD PTR [r14+0x1c]
   38021:	mov    rcx,QWORD PTR [rsp+0x8]
   38026:	add    r15d,r13d
   38029:	cmp    r15d,0x40
   3802d:	mov    DWORD PTR [r14+0x1c],r15d
   38031:	ja     38090 <sha1_process_bytes+0x200>
   38033:	add    rbx,r13
   38036:	sub    rbp,r13
   38039:	jmp    37eb6 <sha1_process_bytes+0x26>
   3803e:	xchg   ax,ax
   38040:	mov    rax,QWORD PTR [r13+0x0]
   38044:	lea    rdi,[rcx+0x8]
   38048:	and    rdi,0xfffffffffffffff8
   3804c:	mov    QWORD PTR [rcx],rax
   3804f:	mov    eax,ebp
   38051:	mov    rdx,QWORD PTR [r13+rax*1-0x8]
   38056:	mov    QWORD PTR [rcx+rax*1-0x8],rdx
   3805b:	sub    rcx,rdi
   3805e:	mov    rax,r13
   38061:	mov    rdx,rcx
   38064:	sub    rax,rcx
   38067:	add    edx,ebp
   38069:	and    edx,0xfffffff8
   3806c:	cmp    edx,0x8
   3806f:	jb     37f73 <sha1_process_bytes+0xe3>
   38075:	and    edx,0xfffffff8
   38078:	xor    ecx,ecx
   3807a:	mov    esi,ecx
   3807c:	add    ecx,0x8
   3807f:	mov    r8,QWORD PTR [rax+rsi*1]
   38083:	mov    QWORD PTR [rdi+rsi*1],r8
   38087:	cmp    ecx,edx
   38089:	jb     3807a <sha1_process_bytes+0x1ea>
   3808b:	jmp    37f73 <sha1_process_bytes+0xe3>
   38090:	mov    esi,r15d
   38093:	mov    rdi,rcx
   38096:	mov    rdx,r14
   38099:	and    esi,0xffffffc0
   3809c:	call   369e0 <sha1_process_block>
   380a1:	mov    rcx,QWORD PTR [rsp+0x8]
   380a6:	mov    esi,r15d
   380a9:	lea    rax,[r12+r13*1]
   380ad:	and    esi,0x3f
   380b0:	and    rax,0xffffffffffffffc0
   380b4:	mov    DWORD PTR [r14+0x1c],esi
   380b8:	add    rax,rcx
   380bb:	cmp    esi,0x8
   380be:	jae    380f0 <sha1_process_bytes+0x260>
   380c0:	test   r15b,0x4
   380c4:	jne    3813d <sha1_process_bytes+0x2ad>
   380c6:	test   esi,esi
   380c8:	je     38033 <sha1_process_bytes+0x1a3>
   380ce:	movzx  edx,BYTE PTR [rax]
   380d1:	and    r15d,0x2
   380d5:	mov    BYTE PTR [r14+0x20],dl
   380d9:	je     38033 <sha1_process_bytes+0x1a3>
   380df:	mov    edx,esi
   380e1:	movzx  eax,WORD PTR [rax+rdx*1-0x2]
   380e6:	mov    WORD PTR [rcx+rdx*1-0x2],ax
   380eb:	jmp    38033 <sha1_process_bytes+0x1a3>
   380f0:	mov    rdx,QWORD PTR [rax]
   380f3:	mov    QWORD PTR [r14+0x20],rdx
   380f7:	mov    edx,esi
   380f9:	mov    rdi,QWORD PTR [rax+rdx*1-0x8]
   380fe:	mov    QWORD PTR [rcx+rdx*1-0x8],rdi
   38103:	lea    rdi,[r14+0x28]
   38107:	and    rdi,0xfffffffffffffff8
   3810b:	sub    rcx,rdi
   3810e:	mov    rdx,rcx
   38111:	sub    rax,rcx
   38114:	add    edx,esi
   38116:	and    edx,0xfffffff8
   38119:	cmp    edx,0x8
   3811c:	jb     38033 <sha1_process_bytes+0x1a3>
   38122:	and    edx,0xfffffff8
   38125:	xor    ecx,ecx
   38127:	mov    esi,ecx
   38129:	add    ecx,0x8
   3812c:	mov    r8,QWORD PTR [rax+rsi*1]
   38130:	mov    QWORD PTR [rdi+rsi*1],r8
   38134:	cmp    ecx,edx
   38136:	jb     38127 <sha1_process_bytes+0x297>
   38138:	jmp    38033 <sha1_process_bytes+0x1a3>
   3813d:	mov    edx,DWORD PTR [rax]
   3813f:	mov    DWORD PTR [r14+0x20],edx
   38143:	mov    edx,esi
   38145:	mov    eax,DWORD PTR [rax+rdx*1-0x4]
   38149:	mov    DWORD PTR [rcx+rdx*1-0x4],eax
   3814d:	jmp    38033 <sha1_process_bytes+0x1a3>
   38152:	nop    WORD PTR [rax+rax*1+0x0]
   38158:	mov    r13,rbx
   3815b:	jmp    37f42 <sha1_process_bytes+0xb2>
   38160:	mov    eax,DWORD PTR [r13+0x0]
   38164:	mov    DWORD PTR [rcx],eax
   38166:	mov    eax,DWORD PTR [r13+rdx*1-0x4]
   3816b:	mov    DWORD PTR [rcx+rdx*1-0x4],eax
   3816f:	jmp    37f73 <sha1_process_bytes+0xe3>
   38174:	movzx  eax,WORD PTR [r13+rdx*1-0x2]
   3817a:	mov    WORD PTR [rcx+rdx*1-0x2],ax
   3817f:	jmp    37f73 <sha1_process_bytes+0xe3>
   38184:	lea    r12,[r14+0x20]
   38188:	mov    r13,rbx
   3818b:	jmp    37f42 <sha1_process_bytes+0xb2>

0000000000038190 <sha1_buffer>:
   38190:	endbr64 
   38194:	push   r12
   38196:	push   rbp
   38197:	mov    rbp,rdx
   3819a:	sub    rsp,0xb8
   381a1:	mov    rax,QWORD PTR fs:0x28
   381aa:	mov    QWORD PTR [rsp+0xa8],rax
   381b2:	movabs rax,0xefcdab8967452301
   381bc:	mov    r12,rsp
   381bf:	mov    QWORD PTR [rsp+0x18],0x0
   381c8:	mov    rdx,r12
   381cb:	mov    QWORD PTR [rsp],rax
   381cf:	movabs rax,0x1032547698badcfe
   381d9:	mov    QWORD PTR [rsp+0x8],rax
   381de:	mov    eax,0xc3d2e1f0
   381e3:	mov    QWORD PTR [rsp+0x10],rax
   381e8:	call   37e90 <sha1_process_bytes>
   381ed:	mov    rsi,rbp
   381f0:	mov    rdi,r12
   381f3:	call   37d60 <sha1_finish_ctx>
   381f8:	mov    rdx,QWORD PTR [rsp+0xa8]
   38200:	sub    rdx,QWORD PTR fs:0x28
   38209:	jne    38216 <sha1_buffer+0x86>
   3820b:	add    rsp,0xb8
   38212:	pop    rbp
   38213:	pop    r12
   38215:	ret    
   38216:	call   11760 <__stack_chk_fail@plt>
   3821b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000038220 <shaxxx_stream.constprop.0>:
   38220:	push   r15
   38222:	push   r14
   38224:	mov    r14,rsi
   38227:	push   r13
   38229:	push   r12
   3822b:	push   rbp
   3822c:	mov    rbp,rdi
   3822f:	mov    edi,0x8048
   38234:	push   rbx
   38235:	mov    rbx,rdx
   38238:	sub    rsp,0xd8
   3823f:	mov    QWORD PTR [rsp+0x8],rcx
   38244:	mov    rax,QWORD PTR fs:0x28
   3824d:	mov    QWORD PTR [rsp+0xc8],rax
   38255:	xor    eax,eax
   38257:	call   11af0 <malloc@plt>
   3825c:	test   rax,rax
   3825f:	je     38348 <shaxxx_stream.constprop.0+0x128>
   38265:	lea    r15,[rsp+0x10]
   3826a:	mov    r12,rax
   3826d:	mov    rdi,r15
   38270:	call   rbx
   38272:	mov    ebx,0x8000
   38277:	xor    r13d,r13d
   3827a:	jmp    382a8 <shaxxx_stream.constprop.0+0x88>
   3827c:	nop    DWORD PTR [rax+0x0]
   38280:	mov    rdx,rbx
   38283:	lea    rdi,[r12+r13*1]
   38287:	mov    rcx,rbp
   3828a:	mov    esi,0x1
   3828f:	sub    rdx,r13
   38292:	call   11e20 <fread@plt>
   38297:	add    r13,rax
   3829a:	cmp    r13,0x8000
   382a1:	je     382f8 <shaxxx_stream.constprop.0+0xd8>
   382a3:	test   rax,rax
   382a6:	je     38310 <shaxxx_stream.constprop.0+0xf0>
   382a8:	mov    rdi,rbp
   382ab:	call   11fc0 <feof@plt>
   382b0:	test   eax,eax
   382b2:	je     38280 <shaxxx_stream.constprop.0+0x60>
   382b4:	test   r13,r13
   382b7:	jne    38330 <shaxxx_stream.constprop.0+0x110>
   382b9:	mov    rsi,r14
   382bc:	mov    rdi,r15
   382bf:	mov    rax,QWORD PTR [rsp+0x8]
   382c4:	call   rax
   382c6:	mov    rdi,r12
   382c9:	call   10430 <free@plt>
   382ce:	xor    eax,eax
   382d0:	mov    rdx,QWORD PTR [rsp+0xc8]
   382d8:	sub    rdx,QWORD PTR fs:0x28
   382e1:	jne    38343 <shaxxx_stream.constprop.0+0x123>
   382e3:	add    rsp,0xd8
   382ea:	pop    rbx
   382eb:	pop    rbp
   382ec:	pop    r12
   382ee:	pop    r13
   382f0:	pop    r14
   382f2:	pop    r15
   382f4:	ret    
   382f5:	nop    DWORD PTR [rax]
   382f8:	mov    rdx,r15
   382fb:	mov    esi,0x8000
   38300:	mov    rdi,r12
   38303:	call   38490 <sha256_process_block>
   38308:	jmp    38277 <shaxxx_stream.constprop.0+0x57>
   3830d:	nop    DWORD PTR [rax]
   38310:	mov    rdi,rbp
   38313:	call   12580 <ferror@plt>
   38318:	test   eax,eax
   3831a:	je     382b4 <shaxxx_stream.constprop.0+0x94>
   3831c:	mov    rdi,r12
   3831f:	call   10430 <free@plt>
   38324:	mov    eax,0x1
   38329:	jmp    382d0 <shaxxx_stream.constprop.0+0xb0>
   3832b:	nop    DWORD PTR [rax+rax*1+0x0]
   38330:	mov    rdx,r15
   38333:	mov    rsi,r13
   38336:	mov    rdi,r12
   38339:	call   3b0e0 <sha256_process_bytes>
   3833e:	jmp    382b9 <shaxxx_stream.constprop.0+0x99>
   38343:	call   11760 <__stack_chk_fail@plt>
   38348:	mov    eax,0x1
   3834d:	jmp    382d0 <shaxxx_stream.constprop.0+0xb0>
   3834f:	nop

0000000000038350 <sha256_stream>:
   38350:	endbr64 
   38354:	lea    rcx,[rip+0x2d05]        # 3b060 <sha256_finish_ctx>
   3835b:	lea    rdx,[rip+0x2e]        # 38390 <sha256_init_ctx>
   38362:	jmp    38220 <shaxxx_stream.constprop.0>
   38367:	nop    WORD PTR [rax+rax*1+0x0]

0000000000038370 <sha224_stream>:
   38370:	endbr64 
   38374:	lea    rcx,[rip+0x2d25]        # 3b0a0 <sha224_finish_ctx>
   3837b:	lea    rdx,[rip+0x5e]        # 383e0 <sha224_init_ctx>
   38382:	jmp    38220 <shaxxx_stream.constprop.0>
   38387:	nop    WORD PTR [rax+rax*1+0x0]

0000000000038390 <sha256_init_ctx>:
   38390:	endbr64 
   38394:	movabs rax,0xbb67ae856a09e667
   3839e:	mov    QWORD PTR [rdi+0x20],0x0
   383a6:	mov    QWORD PTR [rdi],rax
   383a9:	movabs rax,0xa54ff53a3c6ef372
   383b3:	mov    QWORD PTR [rdi+0x8],rax
   383b7:	movabs rax,0x9b05688c510e527f
   383c1:	mov    QWORD PTR [rdi+0x10],rax
   383c5:	movabs rax,0x5be0cd191f83d9ab
   383cf:	mov    QWORD PTR [rdi+0x18],rax
   383d3:	mov    QWORD PTR [rdi+0x28],0x0
   383db:	ret    
   383dc:	nop    DWORD PTR [rax+0x0]

00000000000383e0 <sha224_init_ctx>:
   383e0:	endbr64 
   383e4:	movabs rax,0x367cd507c1059ed8
   383ee:	mov    QWORD PTR [rdi+0x20],0x0
   383f6:	mov    QWORD PTR [rdi],rax
   383f9:	movabs rax,0xf70e59393070dd17
   38403:	mov    QWORD PTR [rdi+0x8],rax
   38407:	movabs rax,0x68581511ffc00b31
   38411:	mov    QWORD PTR [rdi+0x10],rax
   38415:	movabs rax,0xbefa4fa464f98fa7
   3841f:	mov    QWORD PTR [rdi+0x18],rax
   38423:	mov    QWORD PTR [rdi+0x28],0x0
   3842b:	ret    
   3842c:	nop    DWORD PTR [rax+0x0]

0000000000038430 <sha256_read_ctx>:
   38430:	endbr64 
   38434:	mov    rax,rsi
   38437:	xor    edx,edx
   38439:	nop    DWORD PTR [rax+0x0]
   38440:	mov    ecx,DWORD PTR [rdi+rdx*1]
   38443:	bswap  ecx
   38445:	mov    DWORD PTR [rax+rdx*1],ecx
   38448:	add    rdx,0x4
   3844c:	cmp    rdx,0x20
   38450:	jne    38440 <sha256_read_ctx+0x10>
   38452:	ret    
   38453:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3845e:	xchg   ax,ax

0000000000038460 <sha224_read_ctx>:
   38460:	endbr64 
   38464:	mov    rax,rsi
   38467:	xor    edx,edx
   38469:	nop    DWORD PTR [rax+0x0]
   38470:	mov    ecx,DWORD PTR [rdi+rdx*1]
   38473:	bswap  ecx
   38475:	mov    DWORD PTR [rax+rdx*1],ecx
   38478:	add    rdx,0x4
   3847c:	cmp    rdx,0x1c
   38480:	jne    38470 <sha224_read_ctx+0x10>
   38482:	ret    
   38483:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3848e:	xchg   ax,ax

0000000000038490 <sha256_process_block>:
   38490:	endbr64 
   38494:	push   r15
   38496:	mov    rax,rsi
   38499:	mov    rsi,rdx
   3849c:	push   r14
   3849e:	push   r13
   384a0:	push   r12
   384a2:	push   rbp
   384a3:	push   rbx
   384a4:	mov    rbx,rdi
   384a7:	sub    rsp,0xd8
   384ae:	mov    ecx,DWORD PTR [rsi]
   384b0:	mov    QWORD PTR [rsp+0x60],rdi
   384b5:	mov    QWORD PTR [rsp+0x70],rdx
   384ba:	mov    rdx,QWORD PTR fs:0x28
   384c3:	mov    QWORD PTR [rsp+0xc8],rdx
   384cb:	mov    rdx,rax
   384ce:	mov    DWORD PTR [rsp+0x54],ecx
   384d2:	mov    ecx,DWORD PTR [rsi+0x4]
   384d5:	mov    DWORD PTR [rsp+0x30],ecx
   384d9:	mov    ecx,DWORD PTR [rsi+0x8]
   384dc:	mov    DWORD PTR [rsp+0x34],ecx
   384e0:	mov    ecx,DWORD PTR [rsi+0xc]
   384e3:	mov    DWORD PTR [rsp+0x58],ecx
   384e7:	mov    ecx,DWORD PTR [rsi+0x10]
   384ea:	and    rdx,0xfffffffffffffffc
   384ee:	add    rdx,rdi
   384f1:	mov    DWORD PTR [rsp+0x38],ecx
   384f5:	mov    ecx,DWORD PTR [rsi+0x14]
   384f8:	mov    rdi,rdx
   384fb:	mov    QWORD PTR [rsp+0x68],rdx
   38500:	xor    edx,edx
   38502:	mov    DWORD PTR [rsp+0x3c],ecx
   38506:	mov    ecx,DWORD PTR [rsi+0x18]
   38509:	mov    DWORD PTR [rsp+0x40],ecx
   3850d:	mov    ecx,DWORD PTR [rsi+0x1c]
   38510:	mov    DWORD PTR [rsp+0x5c],ecx
   38514:	mov    ecx,eax
   38516:	add    ecx,DWORD PTR [rsi+0x20]
   38519:	setb   dl
   3851c:	shr    rax,0x20
   38520:	add    eax,DWORD PTR [rsi+0x24]
   38523:	mov    DWORD PTR [rsi+0x20],ecx
   38526:	add    eax,edx
   38528:	mov    DWORD PTR [rsi+0x24],eax
   3852b:	lea    rax,[rsp+0x80]
   38533:	mov    QWORD PTR [rsp+0x78],rax
   38538:	cmp    rbx,rdi
   3853b:	jae    3af6e <sha256_process_block+0x2ade>
   38541:	nop    DWORD PTR [rax+0x0]
   38548:	mov    rcx,QWORD PTR [rsp+0x60]
   3854d:	mov    rsi,QWORD PTR [rsp+0x78]
   38552:	xor    eax,eax
   38554:	nop    DWORD PTR [rax+0x0]
   38558:	mov    edx,DWORD PTR [rcx+rax*1]
   3855b:	bswap  edx
   3855d:	mov    DWORD PTR [rsi+rax*1],edx
   38560:	add    rax,0x4
   38564:	cmp    rax,0x40
   38568:	jne    38558 <sha256_process_block+0xc8>
   3856a:	mov    r15d,DWORD PTR [rsp+0x38]
   3856f:	mov    ecx,DWORD PTR [rsp+0x80]
   38576:	mov    esi,DWORD PTR [rsp+0x5c]
   3857a:	mov    r9d,DWORD PTR [rsp+0x3c]
   3857f:	mov    eax,r15d
   38582:	mov    edx,r15d
   38585:	mov    r14d,DWORD PTR [rsp+0x40]
   3858a:	mov    ebx,DWORD PTR [rsp+0x58]
   3858e:	ror    edx,0xb
   38591:	ror    eax,0x6
   38594:	mov    r8d,DWORD PTR [rsp+0x30]
   38599:	mov    r10d,DWORD PTR [rsp+0x34]
   3859e:	xor    eax,edx
   385a0:	mov    edx,r15d
   385a3:	mov    r12d,DWORD PTR [rsp+0x84]
   385ab:	add    QWORD PTR [rsp+0x60],0x40
   385b1:	rol    edx,0x7
   385b4:	xor    eax,edx
   385b6:	lea    edx,[rcx+rsi*1+0x428a2f98]
   385bd:	add    eax,edx
   385bf:	mov    edx,r9d
   385c2:	xor    edx,r14d
   385c5:	and    edx,r15d
   385c8:	xor    edx,r14d
   385cb:	add    eax,edx
   385cd:	lea    esi,[rax+rbx*1]
   385d0:	mov    ebx,DWORD PTR [rsp+0x54]
   385d4:	mov    r11d,esi
   385d7:	mov    ecx,ebx
   385d9:	mov    edx,ebx
   385db:	mov    edi,ebx
   385dd:	ror    r11d,0xb
   385e1:	ror    ecx,0x2
   385e4:	ror    edx,0xd
   385e7:	and    edi,r8d
   385ea:	xor    edx,ecx
   385ec:	mov    ecx,ebx
   385ee:	rol    ecx,0xa
   385f1:	xor    edx,ecx
   385f3:	mov    ecx,ebx
   385f5:	or     ecx,r8d
   385f8:	and    ecx,r10d
   385fb:	or     ecx,edi
   385fd:	mov    edi,esi
   385ff:	add    edx,ecx
   38601:	mov    ecx,r15d
   38604:	ror    edi,0x6
   38607:	xor    ecx,r9d
   3860a:	add    edx,eax
   3860c:	lea    eax,[r12+r14*1+0x71374491]
   38614:	mov    r14d,DWORD PTR [rsp+0x88]
   3861c:	and    ecx,esi
   3861e:	xor    ecx,r9d
   38621:	add    ecx,eax
   38623:	mov    eax,r11d
   38626:	mov    r11d,edx
   38629:	xor    eax,edi
   3862b:	mov    edi,esi
   3862d:	rol    edi,0x7
   38630:	xor    eax,edi
   38632:	mov    edi,edx
   38634:	add    ecx,eax
   38636:	ror    edi,0x2
   38639:	ror    r11d,0xd
   3863d:	lea    ebp,[rcx+r10*1]
   38641:	mov    r10d,r15d
   38644:	mov    eax,r11d
   38647:	mov    r11d,r8d
   3864a:	xor    eax,edi
   3864c:	mov    edi,edx
   3864e:	rol    edi,0xa
   38651:	xor    eax,edi
   38653:	mov    edi,ebx
   38655:	or     edi,edx
   38657:	and    edi,r8d
   3865a:	mov    r8d,ebx
   3865d:	and    r8d,edx
   38660:	or     edi,r8d
   38663:	mov    r8d,ebp
   38666:	add    eax,edi
   38668:	lea    edi,[r14+r9*1-0x4a3f0431]
   38670:	ror    r8d,0x6
   38674:	add    eax,ecx
   38676:	mov    ecx,r15d
   38679:	xor    ecx,esi
   3867b:	and    ecx,ebp
   3867d:	xor    ecx,r15d
   38680:	mov    r15d,eax
   38683:	add    ecx,edi
   38685:	mov    edi,ebp
   38687:	ror    r15d,0xd
   3868b:	ror    edi,0xb
   3868e:	xor    edi,r8d
   38691:	mov    r8d,ebp
   38694:	rol    r8d,0x7
   38698:	xor    edi,r8d
   3869b:	mov    r8d,edx
   3869e:	add    ecx,edi
   386a0:	mov    edi,eax
   386a2:	and    r8d,eax
   386a5:	lea    r9d,[rcx+r11*1]
   386a9:	ror    edi,0x2
   386ac:	mov    r11d,r15d
   386af:	mov    r15d,DWORD PTR [rsp+0x8c]
   386b7:	xor    r11d,edi
   386ba:	mov    edi,eax
   386bc:	rol    edi,0xa
   386bf:	xor    r11d,edi
   386c2:	mov    edi,edx
   386c4:	or     edi,eax
   386c6:	and    edi,ebx
   386c8:	or     edi,r8d
   386cb:	mov    r8d,r9d
   386ce:	add    r11d,edi
   386d1:	lea    edi,[r15+r10*1-0x164a245b]
   386d9:	add    r11d,ecx
   386dc:	mov    ecx,esi
   386de:	xor    ecx,ebp
   386e0:	ror    r8d,0x6
   386e4:	and    ecx,r9d
   386e7:	xor    ecx,esi
   386e9:	add    ecx,edi
   386eb:	mov    edi,r9d
   386ee:	ror    edi,0xb
   386f1:	xor    edi,r8d
   386f4:	mov    r8d,r9d
   386f7:	rol    r8d,0x7
   386fb:	xor    edi,r8d
   386fe:	mov    r8d,r11d
   38701:	add    ecx,edi
   38703:	ror    r8d,0xd
   38707:	mov    edi,r11d
   3870a:	ror    edi,0x2
   3870d:	mov    r10d,r8d
   38710:	mov    r8d,eax
   38713:	add    ebx,ecx
   38715:	xor    r10d,edi
   38718:	mov    edi,r11d
   3871b:	and    r8d,r11d
   3871e:	rol    edi,0xa
   38721:	xor    r10d,edi
   38724:	mov    edi,eax
   38726:	or     edi,r11d
   38729:	and    edi,edx
   3872b:	or     edi,r8d
   3872e:	add    r10d,edi
   38731:	mov    edi,ebp
   38733:	add    r10d,ecx
   38736:	xor    edi,r9d
   38739:	mov    ecx,DWORD PTR [rsp+0x90]
   38740:	and    edi,ebx
   38742:	mov    r8d,r10d
   38745:	xor    edi,ebp
   38747:	lea    ecx,[rcx+rsi*1+0x3956c25b]
   3874e:	mov    esi,ebx
   38750:	add    edi,ecx
   38752:	mov    ecx,ebx
   38754:	ror    esi,0x6
   38757:	ror    ecx,0xb
   3875a:	xor    ecx,esi
   3875c:	mov    esi,ebx
   3875e:	rol    esi,0x7
   38761:	xor    ecx,esi
   38763:	add    edi,ecx
   38765:	mov    ecx,r10d
   38768:	ror    ecx,0x2
   3876b:	lea    esi,[rdx+rdi*1]
   3876e:	rol    r8d,0xa
   38772:	mov    edx,ecx
   38774:	mov    ecx,r10d
   38777:	ror    ecx,0xd
   3877a:	xor    ecx,edx
   3877c:	xor    ecx,r8d
   3877f:	mov    r8d,r11d
   38782:	or     r8d,r10d
   38785:	mov    edx,r8d
   38788:	mov    r8d,r11d
   3878b:	and    r8d,r10d
   3878e:	and    edx,eax
   38790:	or     edx,r8d
   38793:	mov    r8d,r9d
   38796:	add    ecx,edx
   38798:	xor    r8d,ebx
   3879b:	add    ecx,edi
   3879d:	mov    edi,DWORD PTR [rsp+0x94]
   387a4:	and    r8d,esi
   387a7:	xor    r8d,r9d
   387aa:	lea    edx,[rdi+rbp*1+0x59f111f1]
   387b1:	mov    ebp,esi
   387b3:	mov    edi,esi
   387b5:	ror    ebp,0xb
   387b8:	add    r8d,edx
   387bb:	ror    edi,0x6
   387be:	mov    edx,ebp
   387c0:	mov    ebp,ecx
   387c2:	xor    edx,edi
   387c4:	mov    edi,esi
   387c6:	ror    ebp,0x2
   387c9:	rol    edi,0x7
   387cc:	xor    edx,edi
   387ce:	add    r8d,edx
   387d1:	lea    edi,[rax+r8*1]
   387d5:	mov    eax,ebp
   387d7:	mov    ebp,ecx
   387d9:	ror    ebp,0xd
   387dc:	mov    edx,ebp
   387de:	mov    ebp,ecx
   387e0:	xor    edx,eax
   387e2:	rol    ebp,0xa
   387e5:	xor    edx,ebp
   387e7:	mov    ebp,r10d
   387ea:	or     ebp,ecx
   387ec:	mov    eax,ebp
   387ee:	mov    ebp,r10d
   387f1:	and    ebp,ecx
   387f3:	and    eax,r11d
   387f6:	or     eax,ebp
   387f8:	mov    ebp,edi
   387fa:	add    edx,eax
   387fc:	add    edx,r8d
   387ff:	mov    r8d,ebx
   38802:	xor    r8d,esi
   38805:	rol    ebp,0x7
   38808:	mov    eax,r8d
   3880b:	mov    r8d,DWORD PTR [rsp+0x98]
   38813:	and    eax,edi
   38815:	xor    eax,ebx
   38817:	lea    r8d,[r8+r9*1-0x6dc07d5c]
   3881f:	add    eax,r8d
   38822:	mov    r8d,edi
   38825:	ror    r8d,0x6
   38829:	mov    r9d,r8d
   3882c:	mov    r8d,edi
   3882f:	ror    r8d,0xb
   38833:	xor    r8d,r9d
   38836:	xor    r8d,ebp
   38839:	mov    ebp,edx
   3883b:	add    eax,r8d
   3883e:	mov    r8d,edx
   38841:	rol    ebp,0xa
   38844:	ror    r8d,0x2
   38848:	add    r11d,eax
   3884b:	mov    r9d,r8d
   3884e:	mov    r8d,edx
   38851:	ror    r8d,0xd
   38855:	xor    r8d,r9d
   38858:	xor    r8d,ebp
   3885b:	mov    ebp,ecx
   3885d:	or     ebp,edx
   3885f:	mov    r9d,ebp
   38862:	mov    ebp,ecx
   38864:	and    ebp,edx
   38866:	and    r9d,r10d
   38869:	or     r9d,ebp
   3886c:	mov    ebp,esi
   3886e:	xor    ebp,edi
   38870:	add    r8d,r9d
   38873:	mov    r9d,ebp
   38876:	mov    ebp,DWORD PTR [rsp+0x9c]
   3887d:	add    r8d,eax
   38880:	and    r9d,r11d
   38883:	lea    eax,[rbp+rbx*1-0x54e3a12b]
   3888a:	mov    ebp,r11d
   3888d:	xor    r9d,esi
   38890:	ror    ebp,0x6
   38893:	add    r9d,eax
   38896:	mov    ebx,ebp
   38898:	mov    ebp,r11d
   3889b:	ror    ebp,0xb
   3889e:	mov    eax,ebp
   388a0:	mov    ebp,r11d
   388a3:	xor    eax,ebx
   388a5:	rol    ebp,0x7
   388a8:	xor    eax,ebp
   388aa:	mov    ebp,r8d
   388ad:	add    r9d,eax
   388b0:	add    r10d,r9d
   388b3:	ror    ebp,0x2
   388b6:	mov    ebx,ebp
   388b8:	mov    ebp,r8d
   388bb:	ror    ebp,0xd
   388be:	mov    eax,ebp
   388c0:	mov    ebp,r8d
   388c3:	xor    eax,ebx
   388c5:	rol    ebp,0xa
   388c8:	xor    eax,ebp
   388ca:	mov    ebp,edx
   388cc:	or     ebp,r8d
   388cf:	mov    ebx,ebp
   388d1:	mov    ebp,edx
   388d3:	and    ebp,r8d
   388d6:	and    ebx,ecx
   388d8:	or     ebx,ebp
   388da:	mov    ebp,edi
   388dc:	xor    ebp,r11d
   388df:	add    eax,ebx
   388e1:	add    eax,r9d
   388e4:	mov    r9d,ebp
   388e7:	mov    ebp,DWORD PTR [rsp+0xa0]
   388ee:	and    r9d,r10d
   388f1:	xor    r9d,edi
   388f4:	lea    esi,[rbp+rsi*1-0x27f85568]
   388fb:	mov    ebp,r10d
   388fe:	add    r9d,esi
   38901:	mov    esi,r10d
   38904:	ror    ebp,0x6
   38907:	ror    esi,0xb
   3890a:	xor    esi,ebp
   3890c:	mov    ebp,r10d
   3890f:	rol    ebp,0x7
   38912:	xor    esi,ebp
   38914:	mov    ebp,eax
   38916:	add    r9d,esi
   38919:	mov    esi,eax
   3891b:	ror    ebp,0x2
   3891e:	ror    esi,0xd
   38921:	add    ecx,r9d
   38924:	xor    esi,ebp
   38926:	mov    ebp,eax
   38928:	rol    ebp,0xa
   3892b:	xor    esi,ebp
   3892d:	mov    ebp,r8d
   38930:	or     ebp,eax
   38932:	mov    ebx,ebp
   38934:	mov    ebp,r8d
   38937:	and    ebp,eax
   38939:	and    ebx,edx
   3893b:	or     ebx,ebp
   3893d:	mov    ebp,r11d
   38940:	add    esi,ebx
   38942:	xor    ebp,r10d
   38945:	add    esi,r9d
   38948:	mov    r9d,ebp
   3894b:	mov    ebp,DWORD PTR [rsp+0xa4]
   38952:	and    r9d,ecx
   38955:	xor    r9d,r11d
   38958:	lea    edi,[rbp+rdi*1+0x12835b01]
   3895f:	mov    ebp,ecx
   38961:	add    r9d,edi
   38964:	mov    edi,ecx
   38966:	rol    ebp,0x7
   38969:	ror    edi,0x6
   3896c:	mov    ebx,edi
   3896e:	mov    edi,ecx
   38970:	ror    edi,0xb
   38973:	xor    edi,ebx
   38975:	xor    edi,ebp
   38977:	mov    ebp,esi
   38979:	add    r9d,edi
   3897c:	mov    edi,esi
   3897e:	rol    ebp,0xa
   38981:	ror    edi,0x2
   38984:	add    edx,r9d
   38987:	mov    ebx,edi
   38989:	mov    edi,esi
   3898b:	ror    edi,0xd
   3898e:	xor    edi,ebx
   38990:	xor    edi,ebp
   38992:	mov    ebp,eax
   38994:	or     ebp,esi
   38996:	mov    ebx,ebp
   38998:	mov    ebp,eax
   3899a:	and    ebp,esi
   3899c:	and    ebx,r8d
   3899f:	or     ebx,ebp
   389a1:	mov    ebp,r10d
   389a4:	xor    ebp,ecx
   389a6:	add    edi,ebx
   389a8:	add    edi,r9d
   389ab:	mov    r9d,ebp
   389ae:	mov    ebp,DWORD PTR [rsp+0xa8]
   389b5:	and    r9d,edx
   389b8:	lea    r11d,[rbp+r11*1+0x243185be]
   389c0:	mov    ebp,edx
   389c2:	xor    r9d,r10d
   389c5:	ror    ebp,0x6
   389c8:	add    r9d,r11d
   389cb:	mov    ebx,ebp
   389cd:	mov    ebp,edx
   389cf:	ror    ebp,0xb
   389d2:	mov    r11d,ebp
   389d5:	mov    ebp,edx
   389d7:	xor    r11d,ebx
   389da:	rol    ebp,0x7
   389dd:	xor    r11d,ebp
   389e0:	mov    ebp,edi
   389e2:	ror    ebp,0x2
   389e5:	add    r9d,r11d
   389e8:	mov    r11d,ebp
   389eb:	mov    ebp,edi
   389ed:	add    r8d,r9d
   389f0:	ror    ebp,0xd
   389f3:	mov    ebx,ebp
   389f5:	mov    ebp,edi
   389f7:	xor    ebx,r11d
   389fa:	rol    ebp,0xa
   389fd:	xor    ebx,ebp
   389ff:	mov    ebp,esi
   38a01:	or     ebp,edi
   38a03:	mov    r11d,ebp
   38a06:	mov    ebp,esi
   38a08:	and    ebp,edi
   38a0a:	and    r11d,eax
   38a0d:	or     r11d,ebp
   38a10:	mov    ebp,ecx
   38a12:	xor    ebp,edx
   38a14:	add    ebx,r11d
   38a17:	add    ebx,r9d
   38a1a:	mov    r9d,ebp
   38a1d:	mov    ebp,DWORD PTR [rsp+0xac]
   38a24:	and    r9d,r8d
   38a27:	lea    r10d,[rbp+r10*1+0x550c7dc3]
   38a2f:	mov    ebp,r8d
   38a32:	xor    r9d,ecx
   38a35:	ror    ebp,0x6
   38a38:	add    r9d,r10d
   38a3b:	mov    r11d,ebp
   38a3e:	mov    ebp,r8d
   38a41:	ror    ebp,0xb
   38a44:	mov    r10d,ebp
   38a47:	mov    ebp,r8d
   38a4a:	xor    r10d,r11d
   38a4d:	rol    ebp,0x7
   38a50:	xor    r10d,ebp
   38a53:	mov    ebp,ebx
   38a55:	ror    ebp,0x2
   38a58:	add    r9d,r10d
   38a5b:	mov    r10d,ebp
   38a5e:	mov    ebp,ebx
   38a60:	add    eax,r9d
   38a63:	ror    ebp,0xd
   38a66:	mov    r11d,ebp
   38a69:	mov    ebp,ebx
   38a6b:	xor    r11d,r10d
   38a6e:	rol    ebp,0xa
   38a71:	xor    r11d,ebp
   38a74:	mov    ebp,edi
   38a76:	or     ebp,ebx
   38a78:	mov    r10d,ebp
   38a7b:	mov    ebp,edi
   38a7d:	and    r10d,esi
   38a80:	and    ebp,ebx
   38a82:	or     r10d,ebp
   38a85:	mov    ebp,edx
   38a87:	xor    ebp,r8d
   38a8a:	add    r11d,r10d
   38a8d:	add    r11d,r9d
   38a90:	mov    r9d,ebp
   38a93:	mov    ebp,DWORD PTR [rsp+0xb0]
   38a9a:	and    r9d,eax
   38a9d:	lea    ecx,[rbp+rcx*1+0x72be5d74]
   38aa4:	mov    ebp,eax
   38aa6:	xor    r9d,edx
   38aa9:	ror    ebp,0x6
   38aac:	add    ecx,r9d
   38aaf:	mov    r10d,ebp
   38ab2:	mov    ebp,eax
   38ab4:	ror    ebp,0xb
   38ab7:	mov    r9d,ebp
   38aba:	mov    ebp,eax
   38abc:	xor    r9d,r10d
   38abf:	rol    ebp,0x7
   38ac2:	xor    r9d,ebp
   38ac5:	mov    ebp,r11d
   38ac8:	ror    ebp,0x2
   38acb:	add    ecx,r9d
   38ace:	mov    r9d,ebp
   38ad1:	mov    ebp,r11d
   38ad4:	add    esi,ecx
   38ad6:	ror    ebp,0xd
   38ad9:	mov    r10d,ebp
   38adc:	mov    ebp,r11d
   38adf:	xor    r10d,r9d
   38ae2:	rol    ebp,0xa
   38ae5:	xor    r10d,ebp
   38ae8:	mov    ebp,ebx
   38aea:	or     ebp,r11d
   38aed:	mov    r9d,ebp
   38af0:	mov    ebp,ebx
   38af2:	and    ebp,r11d
   38af5:	and    r9d,edi
   38af8:	or     r9d,ebp
   38afb:	mov    ebp,DWORD PTR [rsp+0xb4]
   38b02:	add    r10d,r9d
   38b05:	add    r10d,ecx
   38b08:	mov    ecx,r8d
   38b0b:	lea    edx,[rbp+rdx*1-0x7f214e02]
   38b12:	mov    ebp,esi
   38b14:	xor    ecx,eax
   38b16:	and    ecx,esi
   38b18:	xor    ecx,r8d
   38b1b:	add    edx,ecx
   38b1d:	mov    ecx,esi
   38b1f:	ror    ecx,0x6
   38b22:	mov    r9d,ecx
   38b25:	mov    ecx,esi
   38b27:	ror    ecx,0xb
   38b2a:	xor    ecx,r9d
   38b2d:	rol    ebp,0x7
   38b30:	xor    ecx,ebp
   38b32:	mov    ebp,r10d
   38b35:	add    edx,ecx
   38b37:	mov    ecx,r10d
   38b3a:	rol    ebp,0xa
   38b3d:	ror    ecx,0x2
   38b40:	add    edi,edx
   38b42:	mov    r9d,ecx
   38b45:	mov    ecx,r10d
   38b48:	ror    ecx,0xd
   38b4b:	xor    ecx,r9d
   38b4e:	xor    ecx,ebp
   38b50:	mov    ebp,r11d
   38b53:	or     ebp,r10d
   38b56:	mov    r9d,ebp
   38b59:	mov    ebp,r11d
   38b5c:	and    ebp,r10d
   38b5f:	and    r9d,ebx
   38b62:	or     r9d,ebp
   38b65:	mov    ebp,eax
   38b67:	xor    ebp,esi
   38b69:	add    ecx,r9d
   38b6c:	add    ecx,edx
   38b6e:	mov    edx,ebp
   38b70:	mov    ebp,DWORD PTR [rsp+0xb8]
   38b77:	and    edx,edi
   38b79:	mov    r13d,ecx
   38b7c:	xor    edx,eax
   38b7e:	lea    r8d,[rbp+r8*1-0x6423f959]
   38b86:	mov    ebp,edi
   38b88:	ror    r13d,0xd
   38b8c:	add    edx,r8d
   38b8f:	mov    r8d,edi
   38b92:	rol    ebp,0x7
   38b95:	ror    r8d,0x6
   38b99:	mov    r9d,r8d
   38b9c:	mov    r8d,edi
   38b9f:	ror    r8d,0xb
   38ba3:	xor    r8d,r9d
   38ba6:	xor    r8d,ebp
   38ba9:	mov    ebp,r10d
   38bac:	add    edx,r8d
   38baf:	mov    r8d,ecx
   38bb2:	ror    r8d,0x2
   38bb6:	add    ebx,edx
   38bb8:	xor    r13d,r8d
   38bbb:	mov    r8d,ecx
   38bbe:	rol    r8d,0xa
   38bc2:	xor    r13d,r8d
   38bc5:	mov    r8d,r10d
   38bc8:	or     r8d,ecx
   38bcb:	and    ebp,ecx
   38bcd:	and    r8d,r11d
   38bd0:	or     r8d,ebp
   38bd3:	mov    ebp,ebx
   38bd5:	add    r13d,r8d
   38bd8:	mov    r8d,esi
   38bdb:	ror    ebp,0xb
   38bde:	xor    r8d,edi
   38be1:	add    r13d,edx
   38be4:	mov    edx,r8d
   38be7:	mov    r8d,DWORD PTR [rsp+0xbc]
   38bef:	and    edx,ebx
   38bf1:	xor    edx,esi
   38bf3:	lea    eax,[r8+rax*1-0x3e640e8c]
   38bfb:	mov    r8d,ebx
   38bfe:	add    edx,eax
   38c00:	ror    r8d,0x6
   38c04:	mov    eax,ebp
   38c06:	mov    ebp,r13d
   38c09:	xor    eax,r8d
   38c0c:	mov    r8d,ebx
   38c0f:	ror    ebp,0xd
   38c12:	rol    r8d,0x7
   38c16:	xor    eax,r8d
   38c19:	mov    r8d,r13d
   38c1c:	add    edx,eax
   38c1e:	ror    r8d,0x2
   38c22:	mov    eax,ebp
   38c24:	mov    ebp,ecx
   38c26:	xor    eax,r8d
   38c29:	mov    r8d,r13d
   38c2c:	and    ebp,r13d
   38c2f:	add    r11d,edx
   38c32:	rol    r8d,0xa
   38c36:	xor    eax,r8d
   38c39:	mov    r8d,ecx
   38c3c:	or     r8d,r13d
   38c3f:	and    r8d,r10d
   38c42:	or     r8d,ebp
   38c45:	mov    ebp,DWORD PTR [rsp+0xb8]
   38c4c:	add    eax,r8d
   38c4f:	mov    r8d,DWORD PTR [rsp+0xb8]
   38c57:	rol    ebp,0xd
   38c5a:	add    eax,edx
   38c5c:	rol    r8d,0xf
   38c60:	mov    edx,ebp
   38c62:	mov    ebp,r12d
   38c65:	xor    edx,r8d
   38c68:	mov    r8d,DWORD PTR [rsp+0xb8]
   38c70:	shr    r8d,0xa
   38c74:	mov    r9d,r8d
   38c77:	mov    r8d,DWORD PTR [rsp+0x80]
   38c7f:	xor    r9d,edx
   38c82:	add    r8d,DWORD PTR [rsp+0xa4]
   38c8a:	rol    ebp,0xe
   38c8d:	add    r9d,r8d
   38c90:	mov    r8d,r12d
   38c93:	mov    edx,ebp
   38c95:	mov    ebp,r13d
   38c98:	ror    r8d,0x7
   38c9c:	and    ebp,eax
   38c9e:	xor    edx,r8d
   38ca1:	mov    r8d,r12d
   38ca4:	shr    r8d,0x3
   38ca8:	xor    edx,r8d
   38cab:	mov    r8d,edi
   38cae:	xor    r8d,ebx
   38cb1:	add    r9d,edx
   38cb4:	mov    edx,r8d
   38cb7:	lea    esi,[rsi+r9*1-0x1b64963f]
   38cbf:	mov    r8d,r11d
   38cc2:	and    edx,r11d
   38cc5:	ror    r8d,0x6
   38cc9:	xor    edx,edi
   38ccb:	add    edx,esi
   38ccd:	mov    esi,r11d
   38cd0:	ror    esi,0xb
   38cd3:	xor    esi,r8d
   38cd6:	mov    r8d,r11d
   38cd9:	rol    r8d,0x7
   38cdd:	xor    esi,r8d
   38ce0:	mov    r8d,eax
   38ce3:	add    edx,esi
   38ce5:	mov    esi,eax
   38ce7:	ror    r8d,0x2
   38ceb:	ror    esi,0xd
   38cee:	add    r10d,edx
   38cf1:	xor    esi,r8d
   38cf4:	mov    r8d,eax
   38cf7:	rol    r8d,0xa
   38cfb:	xor    esi,r8d
   38cfe:	mov    r8d,r13d
   38d01:	or     r8d,eax
   38d04:	and    r8d,ecx
   38d07:	or     r8d,ebp
   38d0a:	add    esi,r8d
   38d0d:	mov    r8d,DWORD PTR [rsp+0xbc]
   38d15:	mov    ebp,DWORD PTR [rsp+0xbc]
   38d1c:	add    esi,edx
   38d1e:	rol    r8d,0xf
   38d22:	rol    ebp,0xd
   38d25:	add    r12d,DWORD PTR [rsp+0xa8]
   38d2d:	mov    edx,ebp
   38d2f:	mov    ebp,r14d
   38d32:	xor    edx,r8d
   38d35:	mov    r8d,DWORD PTR [rsp+0xbc]
   38d3d:	ror    ebp,0x7
   38d40:	shr    r8d,0xa
   38d44:	xor    r8d,edx
   38d47:	add    r8d,r12d
   38d4a:	mov    r12d,r14d
   38d4d:	rol    r12d,0xe
   38d51:	mov    edx,r12d
   38d54:	mov    r12d,eax
   38d57:	xor    edx,ebp
   38d59:	mov    ebp,r14d
   38d5c:	and    r12d,esi
   38d5f:	shr    ebp,0x3
   38d62:	xor    edx,ebp
   38d64:	mov    ebp,ebx
   38d66:	xor    ebp,r11d
   38d69:	add    r8d,edx
   38d6c:	mov    edx,ebp
   38d6e:	lea    edi,[rdi+r8*1-0x1041b87a]
   38d76:	mov    ebp,r10d
   38d79:	and    edx,r10d
   38d7c:	ror    ebp,0x6
   38d7f:	xor    edx,ebx
   38d81:	add    edx,edi
   38d83:	mov    edi,r10d
   38d86:	ror    edi,0xb
   38d89:	xor    edi,ebp
   38d8b:	mov    ebp,r10d
   38d8e:	rol    ebp,0x7
   38d91:	xor    edi,ebp
   38d93:	mov    ebp,esi
   38d95:	add    edx,edi
   38d97:	mov    edi,esi
   38d99:	ror    ebp,0xd
   38d9c:	ror    edi,0x2
   38d9f:	add    ecx,edx
   38da1:	xor    ebp,edi
   38da3:	mov    edi,esi
   38da5:	rol    edi,0xa
   38da8:	xor    ebp,edi
   38daa:	mov    edi,eax
   38dac:	or     edi,esi
   38dae:	and    edi,r13d
   38db1:	or     edi,r12d
   38db4:	mov    r12d,r9d
   38db7:	add    ebp,edi
   38db9:	mov    edi,r9d
   38dbc:	rol    r12d,0xd
   38dc0:	rol    edi,0xf
   38dc3:	add    ebp,edx
   38dc5:	mov    edx,r15d
   38dc8:	xor    r12d,edi
   38dcb:	mov    edi,r9d
   38dce:	rol    edx,0xe
   38dd1:	shr    edi,0xa
   38dd4:	xor    r12d,edi
   38dd7:	mov    edi,r15d
   38dda:	ror    edi,0x7
   38ddd:	xor    edx,edi
   38ddf:	mov    edi,r15d
   38de2:	shr    edi,0x3
   38de5:	xor    edi,edx
   38de7:	mov    edx,DWORD PTR [rsp+0xac]
   38dee:	add    edx,r14d
   38df1:	mov    r14d,esi
   38df4:	add    edi,edx
   38df6:	add    edi,r12d
   38df9:	mov    r12d,r11d
   38dfc:	xor    r12d,r10d
   38dff:	lea    ebx,[rbx+rdi*1+0xfc19dc6]
   38e06:	mov    edx,r12d
   38e09:	mov    r12d,ecx
   38e0c:	and    edx,ecx
   38e0e:	ror    r12d,0x6
   38e12:	xor    edx,r11d
   38e15:	add    edx,ebx
   38e17:	mov    ebx,ecx
   38e19:	ror    ebx,0xb
   38e1c:	xor    ebx,r12d
   38e1f:	mov    r12d,ecx
   38e22:	rol    r12d,0x7
   38e26:	xor    ebx,r12d
   38e29:	mov    r12d,ebp
   38e2c:	add    edx,ebx
   38e2e:	mov    ebx,ebp
   38e30:	ror    r12d,0x2
   38e34:	ror    ebx,0xd
   38e37:	add    r13d,edx
   38e3a:	xor    ebx,r12d
   38e3d:	mov    r12d,ebp
   38e40:	rol    r12d,0xa
   38e44:	xor    ebx,r12d
   38e47:	mov    r12d,esi
   38e4a:	or     r12d,ebp
   38e4d:	and    r12d,eax
   38e50:	and    r14d,ebp
   38e53:	add    r15d,DWORD PTR [rsp+0xb0]
   38e5b:	or     r12d,r14d
   38e5e:	add    ebx,r12d
   38e61:	mov    r12d,r8d
   38e64:	rol    r12d,0xf
   38e68:	add    ebx,edx
   38e6a:	mov    edx,r12d
   38e6d:	mov    r12d,r8d
   38e70:	rol    r12d,0xd
   38e74:	xor    r12d,edx
   38e77:	mov    edx,r8d
   38e7a:	shr    edx,0xa
   38e7d:	xor    r12d,edx
   38e80:	mov    edx,DWORD PTR [rsp+0x90]
   38e87:	ror    edx,0x7
   38e8a:	mov    r14d,edx
   38e8d:	mov    edx,DWORD PTR [rsp+0x90]
   38e94:	rol    edx,0xe
   38e97:	xor    edx,r14d
   38e9a:	mov    r14d,DWORD PTR [rsp+0x90]
   38ea2:	shr    r14d,0x3
   38ea6:	xor    r14d,edx
   38ea9:	add    r14d,r15d
   38eac:	lea    r15d,[r14+r12*1]
   38eb0:	mov    r12d,r10d
   38eb3:	mov    r14d,ebp
   38eb6:	xor    r12d,ecx
   38eb9:	lea    r11d,[r11+r15*1+0x240ca1cc]
   38ec1:	mov    edx,r12d
   38ec4:	mov    r12d,r13d
   38ec7:	and    edx,r13d
   38eca:	ror    r12d,0x6
   38ece:	xor    edx,r10d
   38ed1:	add    edx,r11d
   38ed4:	mov    r11d,r13d
   38ed7:	ror    r11d,0xb
   38edb:	xor    r11d,r12d
   38ede:	mov    r12d,r13d
   38ee1:	rol    r12d,0x7
   38ee5:	xor    r11d,r12d
   38ee8:	mov    r12d,ebx
   38eeb:	add    edx,r11d
   38eee:	mov    r11d,ebx
   38ef1:	ror    r12d,0x2
   38ef5:	ror    r11d,0xd
   38ef9:	add    eax,edx
   38efb:	xor    r11d,r12d
   38efe:	mov    r12d,ebx
   38f01:	rol    r12d,0xa
   38f05:	xor    r11d,r12d
   38f08:	mov    r12d,ebp
   38f0b:	and    r14d,ebx
   38f0e:	or     r12d,ebx
   38f11:	and    r12d,esi
   38f14:	or     r12d,r14d
   38f17:	add    r11d,r12d
   38f1a:	mov    r12d,edi
   38f1d:	rol    r12d,0xf
   38f21:	add    r11d,edx
   38f24:	mov    edx,r12d
   38f27:	mov    r12d,edi
   38f2a:	rol    r12d,0xd
   38f2e:	xor    r12d,edx
   38f31:	mov    edx,edi
   38f33:	shr    edx,0xa
   38f36:	xor    r12d,edx
   38f39:	mov    edx,DWORD PTR [rsp+0x94]
   38f40:	ror    edx,0x7
   38f43:	mov    r14d,edx
   38f46:	mov    edx,DWORD PTR [rsp+0x94]
   38f4d:	rol    edx,0xe
   38f50:	xor    edx,r14d
   38f53:	mov    r14d,DWORD PTR [rsp+0x94]
   38f5b:	shr    r14d,0x3
   38f5f:	xor    r14d,edx
   38f62:	mov    edx,DWORD PTR [rsp+0x90]
   38f69:	add    edx,DWORD PTR [rsp+0xb4]
   38f70:	add    r14d,edx
   38f73:	add    r14d,r12d
   38f76:	mov    r12d,ecx
   38f79:	xor    r12d,r13d
   38f7c:	lea    r10d,[r10+r14*1+0x2de92c6f]
   38f84:	mov    DWORD PTR [rsp+0x1c],r14d
   38f89:	mov    r14d,ebx
   38f8c:	mov    edx,r12d
   38f8f:	mov    r12d,eax
   38f92:	and    edx,eax
   38f94:	ror    r12d,0x6
   38f98:	xor    edx,ecx
   38f9a:	add    edx,r10d
   38f9d:	mov    r10d,eax
   38fa0:	ror    r10d,0xb
   38fa4:	xor    r10d,r12d
   38fa7:	mov    r12d,eax
   38faa:	rol    r12d,0x7
   38fae:	xor    r10d,r12d
   38fb1:	mov    r12d,r11d
   38fb4:	add    edx,r10d
   38fb7:	mov    r10d,r11d
   38fba:	ror    r12d,0x2
   38fbe:	add    esi,edx
   38fc0:	ror    r10d,0xd
   38fc4:	and    r14d,r11d
   38fc7:	xor    r10d,r12d
   38fca:	mov    r12d,r11d
   38fcd:	rol    r12d,0xa
   38fd1:	xor    r10d,r12d
   38fd4:	mov    r12d,ebx
   38fd7:	or     r12d,r11d
   38fda:	and    r12d,ebp
   38fdd:	or     r12d,r14d
   38fe0:	add    r10d,r12d
   38fe3:	mov    r12d,r15d
   38fe6:	rol    r12d,0xf
   38fea:	add    r10d,edx
   38fed:	mov    edx,r12d
   38ff0:	mov    r12d,r15d
   38ff3:	rol    r12d,0xd
   38ff7:	xor    r12d,edx
   38ffa:	mov    edx,r15d
   38ffd:	shr    edx,0xa
   39000:	xor    r12d,edx
   39003:	mov    edx,DWORD PTR [rsp+0x98]
   3900a:	ror    edx,0x7
   3900d:	mov    r14d,edx
   39010:	mov    edx,DWORD PTR [rsp+0x98]
   39017:	rol    edx,0xe
   3901a:	xor    edx,r14d
   3901d:	mov    r14d,DWORD PTR [rsp+0x98]
   39025:	shr    r14d,0x3
   39029:	xor    r14d,edx
   3902c:	mov    edx,DWORD PTR [rsp+0x94]
   39033:	add    edx,DWORD PTR [rsp+0xb8]
   3903a:	add    r14d,edx
   3903d:	mov    edx,r13d
   39040:	xor    edx,eax
   39042:	add    r12d,r14d
   39045:	mov    r14d,r11d
   39048:	and    edx,esi
   3904a:	lea    ecx,[rcx+r12*1+0x4a7484aa]
   39052:	mov    DWORD PTR [rsp+0x4],r12d
   39057:	xor    edx,r13d
   3905a:	add    edx,ecx
   3905c:	mov    ecx,esi
   3905e:	ror    ecx,0x6
   39061:	mov    r12d,ecx
   39064:	mov    ecx,esi
   39066:	ror    ecx,0xb
   39069:	xor    ecx,r12d
   3906c:	mov    r12d,esi
   3906f:	rol    r12d,0x7
   39073:	xor    ecx,r12d
   39076:	add    edx,ecx
   39078:	mov    ecx,r10d
   3907b:	and    r14d,r10d
   3907e:	ror    ecx,0x2
   39081:	add    ebp,edx
   39083:	mov    r12d,ecx
   39086:	mov    ecx,r10d
   39089:	ror    ecx,0xd
   3908c:	xor    ecx,r12d
   3908f:	mov    r12d,r10d
   39092:	rol    r12d,0xa
   39096:	xor    ecx,r12d
   39099:	mov    r12d,r11d
   3909c:	or     r12d,r10d
   3909f:	and    r12d,ebx
   390a2:	or     r12d,r14d
   390a5:	mov    r14d,DWORD PTR [rsp+0x1c]
   390aa:	add    ecx,r12d
   390ad:	add    ecx,edx
   390af:	mov    r12d,r14d
   390b2:	mov    edx,r14d
   390b5:	rol    edx,0xf
   390b8:	rol    r12d,0xd
   390bc:	xor    r12d,edx
   390bf:	mov    edx,r14d
   390c2:	shr    edx,0xa
   390c5:	xor    r12d,edx
   390c8:	mov    edx,DWORD PTR [rsp+0x9c]
   390cf:	ror    edx,0x7
   390d2:	mov    r14d,edx
   390d5:	mov    edx,DWORD PTR [rsp+0x9c]
   390dc:	rol    edx,0xe
   390df:	xor    edx,r14d
   390e2:	mov    r14d,DWORD PTR [rsp+0x9c]
   390ea:	shr    r14d,0x3
   390ee:	xor    r14d,edx
   390f1:	mov    edx,DWORD PTR [rsp+0x98]
   390f8:	add    edx,DWORD PTR [rsp+0xbc]
   390ff:	add    r14d,edx
   39102:	lea    edx,[r14+r12*1]
   39106:	mov    r12d,eax
   39109:	mov    r14d,r10d
   3910c:	xor    r12d,esi
   3910f:	mov    DWORD PTR [rsp+0x20],edx
   39113:	lea    edx,[r13+rdx*1+0x5cb0a9dc]
   3911b:	mov    r13d,ebp
   3911e:	and    r12d,ebp
   39121:	ror    r13d,0x6
   39125:	xor    r12d,eax
   39128:	add    r12d,edx
   3912b:	mov    edx,ebp
   3912d:	ror    edx,0xb
   39130:	xor    edx,r13d
   39133:	mov    r13d,ebp
   39136:	rol    r13d,0x7
   3913a:	and    r14d,ecx
   3913d:	xor    edx,r13d
   39140:	mov    r13d,ecx
   39143:	add    r12d,edx
   39146:	mov    edx,ecx
   39148:	ror    r13d,0x2
   3914c:	ror    edx,0xd
   3914f:	add    ebx,r12d
   39152:	xor    edx,r13d
   39155:	mov    r13d,ecx
   39158:	rol    r13d,0xa
   3915c:	xor    edx,r13d
   3915f:	mov    r13d,r10d
   39162:	or     r13d,ecx
   39165:	and    r13d,r11d
   39168:	or     r13d,r14d
   3916b:	mov    r14d,DWORD PTR [rsp+0x4]
   39170:	add    edx,r13d
   39173:	add    edx,r12d
   39176:	mov    r13d,r14d
   39179:	mov    r12d,r14d
   3917c:	rol    r12d,0xf
   39180:	rol    r13d,0xd
   39184:	xor    r13d,r12d
   39187:	mov    r12d,r14d
   3918a:	shr    r12d,0xa
   3918e:	xor    r13d,r12d
   39191:	mov    r12d,DWORD PTR [rsp+0xa0]
   39199:	ror    r12d,0x7
   3919d:	mov    r14d,r12d
   391a0:	mov    r12d,DWORD PTR [rsp+0xa0]
   391a8:	rol    r12d,0xe
   391ac:	xor    r12d,r14d
   391af:	mov    r14d,DWORD PTR [rsp+0xa0]
   391b7:	shr    r14d,0x3
   391bb:	xor    r12d,r14d
   391be:	add    r12d,DWORD PTR [rsp+0x9c]
   391c6:	mov    r14d,ecx
   391c9:	add    r12d,r9d
   391cc:	add    r13d,r12d
   391cf:	mov    r12d,esi
   391d2:	xor    r12d,ebp
   391d5:	lea    eax,[rax+r13*1+0x76f988da]
   391dd:	mov    DWORD PTR [rsp+0x8],r13d
   391e2:	mov    r13d,ebx
   391e5:	and    r12d,ebx
   391e8:	xor    r12d,esi
   391eb:	add    r12d,eax
   391ee:	mov    eax,ebx
   391f0:	ror    r13d,0x6
   391f4:	and    r14d,edx
   391f7:	ror    eax,0xb
   391fa:	xor    eax,r13d
   391fd:	mov    r13d,ebx
   39200:	rol    r13d,0x7
   39204:	xor    eax,r13d
   39207:	mov    r13d,edx
   3920a:	add    r12d,eax
   3920d:	mov    eax,edx
   3920f:	ror    r13d,0x2
   39213:	ror    eax,0xd
   39216:	add    r11d,r12d
   39219:	xor    eax,r13d
   3921c:	mov    r13d,edx
   3921f:	rol    r13d,0xa
   39223:	xor    eax,r13d
   39226:	mov    r13d,ecx
   39229:	or     r13d,edx
   3922c:	and    r13d,r10d
   3922f:	or     r13d,r14d
   39232:	mov    r14d,DWORD PTR [rsp+0x20]
   39237:	add    eax,r13d
   3923a:	add    eax,r12d
   3923d:	mov    r13d,r14d
   39240:	mov    r12d,r14d
   39243:	rol    r12d,0xf
   39247:	rol    r13d,0xd
   3924b:	xor    r13d,r12d
   3924e:	mov    r12d,r14d
   39251:	shr    r12d,0xa
   39255:	xor    r13d,r12d
   39258:	mov    r12d,DWORD PTR [rsp+0xa4]
   39260:	ror    r12d,0x7
   39264:	mov    r14d,r12d
   39267:	mov    r12d,DWORD PTR [rsp+0xa4]
   3926f:	rol    r12d,0xe
   39273:	xor    r12d,r14d
   39276:	mov    r14d,DWORD PTR [rsp+0xa4]
   3927e:	shr    r14d,0x3
   39282:	xor    r12d,r14d
   39285:	add    r12d,DWORD PTR [rsp+0xa0]
   3928d:	mov    r14d,edx
   39290:	add    r12d,r8d
   39293:	add    r13d,r12d
   39296:	mov    r12d,ebp
   39299:	xor    r12d,ebx
   3929c:	lea    esi,[rsi+r13*1-0x67c1aeae]
   392a4:	mov    DWORD PTR [rsp+0x44],r13d
   392a9:	and    r12d,r11d
   392ac:	and    r14d,eax
   392af:	xor    r12d,ebp
   392b2:	add    r12d,esi
   392b5:	mov    esi,r11d
   392b8:	ror    esi,0x6
   392bb:	mov    r13d,esi
   392be:	mov    esi,r11d
   392c1:	ror    esi,0xb
   392c4:	xor    esi,r13d
   392c7:	mov    r13d,r11d
   392ca:	rol    r13d,0x7
   392ce:	xor    esi,r13d
   392d1:	add    r12d,esi
   392d4:	mov    esi,eax
   392d6:	ror    esi,0x2
   392d9:	add    r10d,r12d
   392dc:	mov    r13d,esi
   392df:	mov    esi,eax
   392e1:	ror    esi,0xd
   392e4:	xor    esi,r13d
   392e7:	mov    r13d,eax
   392ea:	rol    r13d,0xa
   392ee:	xor    esi,r13d
   392f1:	mov    r13d,edx
   392f4:	or     r13d,eax
   392f7:	and    r13d,ecx
   392fa:	or     r13d,r14d
   392fd:	mov    r14d,DWORD PTR [rsp+0x8]
   39302:	add    esi,r13d
   39305:	add    esi,r12d
   39308:	mov    r13d,r14d
   3930b:	mov    r12d,r14d
   3930e:	rol    r12d,0xf
   39312:	rol    r13d,0xd
   39316:	xor    r13d,r12d
   39319:	mov    r12d,r14d
   3931c:	shr    r12d,0xa
   39320:	xor    r13d,r12d
   39323:	mov    r12d,DWORD PTR [rsp+0xa8]
   3932b:	ror    r12d,0x7
   3932f:	mov    r14d,r12d
   39332:	mov    r12d,DWORD PTR [rsp+0xa8]
   3933a:	rol    r12d,0xe
   3933e:	xor    r12d,r14d
   39341:	mov    r14d,DWORD PTR [rsp+0xa8]
   39349:	shr    r14d,0x3
   3934d:	xor    r12d,r14d
   39350:	add    r12d,DWORD PTR [rsp+0xa4]
   39358:	mov    r14d,eax
   3935b:	add    r12d,edi
   3935e:	and    r14d,esi
   39361:	add    r13d,r12d
   39364:	mov    r12d,ebx
   39367:	xor    r12d,r11d
   3936a:	lea    ebp,[rbp+r13*1-0x57ce3993]
   39372:	mov    DWORD PTR [rsp+0xc],r13d
   39377:	and    r12d,r10d
   3937a:	xor    r12d,ebx
   3937d:	add    r12d,ebp
   39380:	mov    ebp,r10d
   39383:	ror    ebp,0x6
   39386:	mov    r13d,ebp
   39389:	mov    ebp,r10d
   3938c:	ror    ebp,0xb
   3938f:	xor    ebp,r13d
   39392:	mov    r13d,r10d
   39395:	rol    r13d,0x7
   39399:	xor    ebp,r13d
   3939c:	add    r12d,ebp
   3939f:	lea    ebp,[rcx+r12*1]
   393a3:	mov    ecx,esi
   393a5:	ror    ecx,0x2
   393a8:	mov    r13d,ecx
   393ab:	mov    ecx,esi
   393ad:	ror    ecx,0xd
   393b0:	xor    ecx,r13d
   393b3:	mov    r13d,esi
   393b6:	rol    r13d,0xa
   393ba:	xor    ecx,r13d
   393bd:	mov    r13d,eax
   393c0:	or     r13d,esi
   393c3:	and    r13d,edx
   393c6:	or     r13d,r14d
   393c9:	mov    r14d,DWORD PTR [rsp+0x44]
   393ce:	add    ecx,r13d
   393d1:	add    ecx,r12d
   393d4:	mov    r13d,r14d
   393d7:	mov    r12d,r14d
   393da:	rol    r12d,0xf
   393de:	rol    r13d,0xd
   393e2:	xor    r13d,r12d
   393e5:	mov    r12d,r14d
   393e8:	shr    r12d,0xa
   393ec:	xor    r13d,r12d
   393ef:	mov    r12d,DWORD PTR [rsp+0xac]
   393f7:	ror    r12d,0x7
   393fb:	mov    r14d,r12d
   393fe:	mov    r12d,DWORD PTR [rsp+0xac]
   39406:	rol    r12d,0xe
   3940a:	xor    r12d,r14d
   3940d:	mov    r14d,DWORD PTR [rsp+0xac]
   39415:	shr    r14d,0x3
   39419:	xor    r12d,r14d
   3941c:	add    r12d,DWORD PTR [rsp+0xa8]
   39424:	mov    r14d,esi
   39427:	add    r12d,r15d
   3942a:	and    r14d,ecx
   3942d:	add    r13d,r12d
   39430:	mov    r12d,r11d
   39433:	xor    r12d,r10d
   39436:	lea    ebx,[rbx+r13*1-0x4ffcd838]
   3943e:	mov    DWORD PTR [rsp+0x48],r13d
   39443:	mov    r13d,ebp
   39446:	and    r12d,ebp
   39449:	ror    r13d,0x6
   3944d:	xor    r12d,r11d
   39450:	add    r12d,ebx
   39453:	mov    ebx,ebp
   39455:	ror    ebx,0xb
   39458:	xor    ebx,r13d
   3945b:	mov    r13d,ebp
   3945e:	rol    r13d,0x7
   39462:	xor    ebx,r13d
   39465:	add    r12d,ebx
   39468:	lea    ebx,[rdx+r12*1]
   3946c:	mov    edx,ecx
   3946e:	ror    edx,0x2
   39471:	mov    r13d,edx
   39474:	mov    edx,ecx
   39476:	ror    edx,0xd
   39479:	xor    edx,r13d
   3947c:	mov    r13d,ecx
   3947f:	rol    r13d,0xa
   39483:	xor    edx,r13d
   39486:	mov    r13d,esi
   39489:	or     r13d,ecx
   3948c:	and    r13d,eax
   3948f:	or     r13d,r14d
   39492:	mov    r14d,DWORD PTR [rsp+0xc]
   39497:	add    edx,r13d
   3949a:	add    edx,r12d
   3949d:	mov    r13d,r14d
   394a0:	mov    r12d,r14d
   394a3:	rol    r12d,0xf
   394a7:	rol    r13d,0xd
   394ab:	xor    r13d,r12d
   394ae:	mov    r12d,r14d
   394b1:	shr    r12d,0xa
   394b5:	xor    r13d,r12d
   394b8:	mov    r12d,DWORD PTR [rsp+0xb0]
   394c0:	ror    r12d,0x7
   394c4:	mov    r14d,r12d
   394c7:	mov    r12d,DWORD PTR [rsp+0xb0]
   394cf:	rol    r12d,0xe
   394d3:	xor    r12d,r14d
   394d6:	mov    r14d,DWORD PTR [rsp+0xb0]
   394de:	shr    r14d,0x3
   394e2:	xor    r12d,r14d
   394e5:	add    r12d,DWORD PTR [rsp+0xac]
   394ed:	add    r12d,DWORD PTR [rsp+0x1c]
   394f2:	mov    r14d,ecx
   394f5:	add    r13d,r12d
   394f8:	mov    r12d,r10d
   394fb:	and    r14d,edx
   394fe:	xor    r12d,ebp
   39501:	lea    r11d,[r11+r13*1-0x40a68039]
   39509:	mov    DWORD PTR [rsp+0x10],r13d
   3950e:	and    r12d,ebx
   39511:	xor    r12d,r10d
   39514:	add    r12d,r11d
   39517:	mov    r11d,ebx
   3951a:	ror    r11d,0x6
   3951e:	mov    r13d,r11d
   39521:	mov    r11d,ebx
   39524:	ror    r11d,0xb
   39528:	xor    r11d,r13d
   3952b:	mov    r13d,ebx
   3952e:	rol    r13d,0x7
   39532:	xor    r11d,r13d
   39535:	add    r12d,r11d
   39538:	lea    r11d,[rax+r12*1]
   3953c:	mov    eax,edx
   3953e:	ror    eax,0x2
   39541:	mov    r13d,eax
   39544:	mov    eax,edx
   39546:	ror    eax,0xd
   39549:	xor    eax,r13d
   3954c:	mov    r13d,edx
   3954f:	rol    r13d,0xa
   39553:	xor    eax,r13d
   39556:	mov    r13d,ecx
   39559:	or     r13d,edx
   3955c:	and    r13d,esi
   3955f:	or     r13d,r14d
   39562:	mov    r14d,DWORD PTR [rsp+0x48]
   39567:	add    eax,r13d
   3956a:	add    eax,r12d
   3956d:	mov    r13d,r14d
   39570:	mov    r12d,r14d
   39573:	rol    r12d,0xf
   39577:	rol    r13d,0xd
   3957b:	xor    r13d,r12d
   3957e:	mov    r12d,r14d
   39581:	shr    r12d,0xa
   39585:	xor    r13d,r12d
   39588:	mov    r12d,DWORD PTR [rsp+0xb4]
   39590:	ror    r12d,0x7
   39594:	mov    r14d,r12d
   39597:	mov    r12d,DWORD PTR [rsp+0xb4]
   3959f:	rol    r12d,0xe
   395a3:	xor    r12d,r14d
   395a6:	mov    r14d,DWORD PTR [rsp+0xb4]
   395ae:	shr    r14d,0x3
   395b2:	xor    r12d,r14d
   395b5:	add    r12d,DWORD PTR [rsp+0xb0]
   395bd:	add    r12d,DWORD PTR [rsp+0x4]
   395c2:	mov    r14d,edx
   395c5:	add    r13d,r12d
   395c8:	mov    r12d,ebp
   395cb:	and    r14d,eax
   395ce:	xor    r12d,ebx
   395d1:	lea    r10d,[r10+r13*1-0x391ff40d]
   395d9:	mov    DWORD PTR [rsp+0x4c],r13d
   395de:	mov    r13d,r11d
   395e1:	and    r12d,r11d
   395e4:	ror    r13d,0x6
   395e8:	xor    r12d,ebp
   395eb:	add    r12d,r10d
   395ee:	mov    r10d,r11d
   395f1:	ror    r10d,0xb
   395f5:	xor    r10d,r13d
   395f8:	mov    r13d,r11d
   395fb:	rol    r13d,0x7
   395ff:	xor    r10d,r13d
   39602:	add    r12d,r10d
   39605:	lea    r10d,[rsi+r12*1]
   39609:	mov    esi,eax
   3960b:	ror    esi,0x2
   3960e:	mov    r13d,esi
   39611:	mov    esi,eax
   39613:	ror    esi,0xd
   39616:	xor    esi,r13d
   39619:	mov    r13d,eax
   3961c:	rol    r13d,0xa
   39620:	xor    esi,r13d
   39623:	mov    r13d,edx
   39626:	or     r13d,eax
   39629:	and    r13d,ecx
   3962c:	or     r13d,r14d
   3962f:	mov    r14d,DWORD PTR [rsp+0x10]
   39634:	add    esi,r13d
   39637:	add    esi,r12d
   3963a:	mov    r13d,r14d
   3963d:	mov    r12d,r14d
   39640:	rol    r12d,0xf
   39644:	rol    r13d,0xd
   39648:	xor    r13d,r12d
   3964b:	mov    r12d,r14d
   3964e:	shr    r12d,0xa
   39652:	xor    r13d,r12d
   39655:	mov    r12d,DWORD PTR [rsp+0xb8]
   3965d:	ror    r12d,0x7
   39661:	mov    r14d,r12d
   39664:	mov    r12d,DWORD PTR [rsp+0xb8]
   3966c:	rol    r12d,0xe
   39670:	xor    r12d,r14d
   39673:	mov    r14d,DWORD PTR [rsp+0xb8]
   3967b:	shr    r14d,0x3
   3967f:	xor    r12d,r14d
   39682:	add    r12d,DWORD PTR [rsp+0xb4]
   3968a:	add    r12d,DWORD PTR [rsp+0x20]
   3968f:	mov    r14d,eax
   39692:	add    r13d,r12d
   39695:	mov    r12d,ebx
   39698:	and    r14d,esi
   3969b:	xor    r12d,r11d
   3969e:	lea    ebp,[rbp+r13*1-0x2a586eb9]
   396a6:	mov    DWORD PTR [rsp+0x14],r13d
   396ab:	and    r12d,r10d
   396ae:	xor    r12d,ebx
   396b1:	add    r12d,ebp
   396b4:	mov    ebp,r10d
   396b7:	ror    ebp,0x6
   396ba:	mov    r13d,ebp
   396bd:	mov    ebp,r10d
   396c0:	ror    ebp,0xb
   396c3:	xor    ebp,r13d
   396c6:	mov    r13d,r10d
   396c9:	rol    r13d,0x7
   396cd:	xor    ebp,r13d
   396d0:	add    r12d,ebp
   396d3:	lea    ebp,[rcx+r12*1]
   396d7:	mov    ecx,esi
   396d9:	ror    ecx,0x2
   396dc:	mov    r13d,ecx
   396df:	mov    ecx,esi
   396e1:	ror    ecx,0xd
   396e4:	xor    ecx,r13d
   396e7:	mov    r13d,esi
   396ea:	rol    r13d,0xa
   396ee:	xor    ecx,r13d
   396f1:	mov    r13d,eax
   396f4:	or     r13d,esi
   396f7:	and    r13d,edx
   396fa:	or     r13d,r14d
   396fd:	mov    r14d,DWORD PTR [rsp+0x4c]
   39702:	add    ecx,r13d
   39705:	add    ecx,r12d
   39708:	mov    r13d,r14d
   3970b:	mov    r12d,r14d
   3970e:	rol    r12d,0xf
   39712:	rol    r13d,0xd
   39716:	xor    r13d,r12d
   39719:	mov    r12d,r14d
   3971c:	shr    r12d,0xa
   39720:	xor    r13d,r12d
   39723:	mov    r12d,DWORD PTR [rsp+0xbc]
   3972b:	ror    r12d,0x7
   3972f:	mov    r14d,r12d
   39732:	mov    r12d,DWORD PTR [rsp+0xbc]
   3973a:	rol    r12d,0xe
   3973e:	xor    r12d,r14d
   39741:	mov    r14d,DWORD PTR [rsp+0xbc]
   39749:	shr    r14d,0x3
   3974d:	xor    r12d,r14d
   39750:	add    r12d,DWORD PTR [rsp+0xb8]
   39758:	add    r12d,DWORD PTR [rsp+0x8]
   3975d:	add    r13d,r12d
   39760:	mov    r12d,r11d
   39763:	xor    r12d,r10d
   39766:	lea    ebx,[rbx+r13*1+0x6ca6351]
   3976e:	mov    DWORD PTR [rsp+0x50],r13d
   39773:	mov    r13d,ebp
   39776:	and    r12d,ebp
   39779:	ror    r13d,0x6
   3977d:	xor    r12d,r11d
   39780:	add    ebx,r12d
   39783:	mov    r12d,ebp
   39786:	ror    r12d,0xb
   3978a:	xor    r12d,r13d
   3978d:	mov    r13d,ebp
   39790:	rol    r13d,0x7
   39794:	xor    r12d,r13d
   39797:	add    ebx,r12d
   3979a:	mov    r12d,esi
   3979d:	add    edx,ebx
   3979f:	and    r12d,ecx
   397a2:	mov    DWORD PTR [rsp+0x24],edx
   397a6:	mov    edx,ecx
   397a8:	ror    edx,0x2
   397ab:	mov    r13d,edx
   397ae:	mov    edx,ecx
   397b0:	ror    edx,0xd
   397b3:	xor    edx,r13d
   397b6:	mov    r13d,ecx
   397b9:	rol    r13d,0xa
   397bd:	xor    edx,r13d
   397c0:	mov    r13d,esi
   397c3:	or     r13d,ecx
   397c6:	and    r13d,eax
   397c9:	or     r13d,r12d
   397cc:	mov    r12d,DWORD PTR [rsp+0x14]
   397d1:	add    edx,r13d
   397d4:	add    edx,ebx
   397d6:	mov    r13d,r12d
   397d9:	mov    ebx,r12d
   397dc:	rol    ebx,0xf
   397df:	rol    r13d,0xd
   397e3:	xor    r13d,ebx
   397e6:	mov    ebx,r12d
   397e9:	mov    r12d,r9d
   397ec:	shr    ebx,0xa
   397ef:	shr    r12d,0x3
   397f3:	xor    r13d,ebx
   397f6:	mov    ebx,r9d
   397f9:	ror    ebx,0x7
   397fc:	mov    r14d,ebx
   397ff:	mov    ebx,r9d
   39802:	rol    ebx,0xe
   39805:	xor    ebx,r14d
   39808:	xor    ebx,r12d
   3980b:	add    ebx,DWORD PTR [rsp+0xbc]
   39812:	add    ebx,DWORD PTR [rsp+0x44]
   39816:	mov    r12d,DWORD PTR [rsp+0x24]
   3981b:	add    r13d,ebx
   3981e:	mov    ebx,r10d
   39821:	xor    ebx,ebp
   39823:	lea    r11d,[r11+r13*1+0x14292967]
   3982b:	mov    DWORD PTR [rsp+0x18],r13d
   39830:	and    ebx,r12d
   39833:	mov    r13d,r12d
   39836:	xor    ebx,r10d
   39839:	ror    r13d,0x6
   3983d:	add    r11d,ebx
   39840:	mov    ebx,r12d
   39843:	ror    ebx,0xb
   39846:	xor    ebx,r13d
   39849:	mov    r13d,r12d
   3984c:	mov    r12d,ecx
   3984f:	rol    r13d,0x7
   39853:	xor    ebx,r13d
   39856:	add    r11d,ebx
   39859:	lea    ebx,[rax+r11*1]
   3985d:	mov    eax,edx
   3985f:	ror    eax,0x2
   39862:	mov    r13d,eax
   39865:	mov    eax,edx
   39867:	ror    eax,0xd
   3986a:	xor    eax,r13d
   3986d:	mov    r13d,edx
   39870:	rol    r13d,0xa
   39874:	xor    eax,r13d
   39877:	mov    r13d,ecx
   3987a:	or     r13d,edx
   3987d:	and    r13d,esi
   39880:	and    r12d,edx
   39883:	or     r13d,r12d
   39886:	mov    r12d,DWORD PTR [rsp+0x50]
   3988b:	add    eax,r13d
   3988e:	add    eax,r11d
   39891:	mov    r13d,r12d
   39894:	mov    r11d,r12d
   39897:	rol    r11d,0xf
   3989b:	rol    r13d,0xd
   3989f:	xor    r13d,r11d
   398a2:	mov    r11d,r12d
   398a5:	mov    r12d,r8d
   398a8:	shr    r11d,0xa
   398ac:	shr    r12d,0x3
   398b0:	xor    r13d,r11d
   398b3:	mov    r11d,r8d
   398b6:	ror    r11d,0x7
   398ba:	mov    r14d,r11d
   398bd:	mov    r11d,r8d
   398c0:	rol    r11d,0xe
   398c4:	xor    r11d,r14d
   398c7:	mov    r14d,DWORD PTR [rsp+0x24]
   398cc:	xor    r11d,r12d
   398cf:	add    r11d,r9d
   398d2:	mov    r9d,r14d
   398d5:	add    r11d,DWORD PTR [rsp+0xc]
   398da:	xor    r9d,ebp
   398dd:	lea    r12d,[r13+r11*1+0x0]
   398e2:	mov    r13d,ebx
   398e5:	and    r9d,ebx
   398e8:	lea    r10d,[r10+r12*1+0x27b70a85]
   398f0:	rol    r13d,0x7
   398f4:	xor    r9d,ebp
   398f7:	add    r10d,r9d
   398fa:	mov    r9d,ebx
   398fd:	ror    r9d,0x6
   39901:	mov    r11d,r9d
   39904:	mov    r9d,ebx
   39907:	ror    r9d,0xb
   3990b:	xor    r9d,r11d
   3990e:	xor    r9d,r13d
   39911:	mov    r13d,eax
   39914:	add    r10d,r9d
   39917:	mov    r9d,eax
   3991a:	rol    r13d,0xa
   3991e:	ror    r9d,0x2
   39922:	add    esi,r10d
   39925:	mov    r11d,r9d
   39928:	mov    r9d,eax
   3992b:	ror    r9d,0xd
   3992f:	xor    r9d,r11d
   39932:	xor    r9d,r13d
   39935:	mov    r13d,edx
   39938:	or     r13d,eax
   3993b:	mov    r11d,r13d
   3993e:	mov    r13d,edx
   39941:	and    r13d,eax
   39944:	and    r11d,ecx
   39947:	or     r11d,r13d
   3994a:	mov    r13d,DWORD PTR [rsp+0x18]
   3994f:	add    r9d,r11d
   39952:	add    r9d,r10d
   39955:	mov    r11d,r13d
   39958:	mov    r10d,r13d
   3995b:	shr    r13d,0xa
   3995f:	rol    r10d,0xf
   39963:	rol    r11d,0xd
   39967:	xor    r11d,r10d
   3996a:	mov    r10d,edi
   3996d:	xor    r11d,r13d
   39970:	mov    r13d,edi
   39973:	rol    r10d,0xe
   39977:	ror    r13d,0x7
   3997b:	xor    r10d,r13d
   3997e:	mov    r13d,edi
   39981:	shr    r13d,0x3
   39985:	xor    r10d,r13d
   39988:	add    r10d,r8d
   3998b:	add    r10d,DWORD PTR [rsp+0x48]
   39990:	lea    r13d,[r11+r10*1]
   39994:	mov    r10d,r14d
   39997:	xor    r10d,ebx
   3999a:	lea    r8d,[rbp+r13*1+0x2e1b2138]
   399a2:	mov    ebp,esi
   399a4:	and    r10d,esi
   399a7:	rol    ebp,0x7
   399aa:	xor    r10d,r14d
   399ad:	add    r10d,r8d
   399b0:	mov    r8d,esi
   399b3:	ror    r8d,0x6
   399b7:	mov    r11d,r8d
   399ba:	mov    r8d,esi
   399bd:	ror    r8d,0xb
   399c1:	xor    r8d,r11d
   399c4:	xor    r8d,ebp
   399c7:	mov    ebp,r9d
   399ca:	add    r10d,r8d
   399cd:	mov    r8d,r9d
   399d0:	ror    r8d,0x2
   399d4:	add    ecx,r10d
   399d7:	mov    r11d,r8d
   399da:	mov    r8d,r9d
   399dd:	ror    r8d,0xd
   399e1:	xor    r8d,r11d
   399e4:	rol    ebp,0xa
   399e7:	xor    r8d,ebp
   399ea:	mov    ebp,eax
   399ec:	or     ebp,r9d
   399ef:	mov    r11d,ebp
   399f2:	mov    ebp,eax
   399f4:	and    ebp,r9d
   399f7:	and    r11d,edx
   399fa:	or     r11d,ebp
   399fd:	mov    ebp,r12d
   39a00:	add    r8d,r11d
   39a03:	rol    ebp,0xf
   39a06:	add    r8d,r10d
   39a09:	mov    r10d,ebp
   39a0c:	mov    ebp,r12d
   39a0f:	rol    ebp,0xd
   39a12:	mov    r11d,ebp
   39a15:	mov    ebp,r12d
   39a18:	xor    r11d,r10d
   39a1b:	shr    ebp,0xa
   39a1e:	mov    r10d,r15d
   39a21:	xor    r11d,ebp
   39a24:	mov    ebp,r15d
   39a27:	rol    r10d,0xe
   39a2b:	ror    ebp,0x7
   39a2e:	xor    r10d,ebp
   39a31:	mov    ebp,r15d
   39a34:	shr    ebp,0x3
   39a37:	xor    r10d,ebp
   39a3a:	mov    ebp,ebx
   39a3c:	xor    ebp,esi
   39a3e:	add    r10d,edi
   39a41:	add    r10d,DWORD PTR [rsp+0x10]
   39a46:	lea    edi,[r11+r10*1]
   39a4a:	mov    r10d,ebp
   39a4d:	mov    ebp,ecx
   39a4f:	and    r10d,ecx
   39a52:	mov    DWORD PTR [rsp+0x24],edi
   39a56:	lea    edi,[r14+rdi*1+0x4d2c6dfc]
   39a5e:	rol    ebp,0x7
   39a61:	xor    r10d,ebx
   39a64:	mov    r14d,DWORD PTR [rsp+0x1c]
   39a69:	add    r10d,edi
   39a6c:	mov    edi,ecx
   39a6e:	ror    edi,0x6
   39a71:	mov    r11d,edi
   39a74:	mov    edi,ecx
   39a76:	ror    edi,0xb
   39a79:	xor    edi,r11d
   39a7c:	xor    edi,ebp
   39a7e:	mov    ebp,r8d
   39a81:	add    r10d,edi
   39a84:	mov    edi,r8d
   39a87:	ror    edi,0x2
   39a8a:	add    edx,r10d
   39a8d:	mov    r11d,edi
   39a90:	mov    edi,r8d
   39a93:	ror    edi,0xd
   39a96:	rol    ebp,0xa
   39a99:	xor    edi,r11d
   39a9c:	xor    edi,ebp
   39a9e:	mov    ebp,r9d
   39aa1:	or     ebp,r8d
   39aa4:	mov    r11d,ebp
   39aa7:	mov    ebp,r9d
   39aaa:	and    ebp,r8d
   39aad:	and    r11d,eax
   39ab0:	or     r11d,ebp
   39ab3:	mov    ebp,r13d
   39ab6:	add    edi,r11d
   39ab9:	rol    ebp,0xf
   39abc:	add    edi,r10d
   39abf:	mov    r10d,ebp
   39ac2:	mov    ebp,r13d
   39ac5:	rol    ebp,0xd
   39ac8:	mov    r11d,ebp
   39acb:	mov    ebp,r13d
   39ace:	xor    r11d,r10d
   39ad1:	shr    ebp,0xa
   39ad4:	mov    r10d,r14d
   39ad7:	xor    r11d,ebp
   39ada:	mov    ebp,r14d
   39add:	rol    r10d,0xe
   39ae1:	ror    ebp,0x7
   39ae4:	xor    r10d,ebp
   39ae7:	mov    ebp,r14d
   39aea:	shr    ebp,0x3
   39aed:	xor    r10d,ebp
   39af0:	mov    ebp,esi
   39af2:	xor    ebp,ecx
   39af4:	add    r10d,r15d
   39af7:	add    r10d,DWORD PTR [rsp+0x4c]
   39afc:	lea    r15d,[r11+r10*1]
   39b00:	mov    r11d,ebp
   39b03:	mov    ebp,edx
   39b05:	ror    ebp,0x6
   39b08:	lea    r10d,[rbx+r15*1+0x53380d13]
   39b10:	and    r11d,edx
   39b13:	mov    ebx,ebp
   39b15:	mov    ebp,edx
   39b17:	xor    r11d,esi
   39b1a:	ror    ebp,0xb
   39b1d:	add    r11d,r10d
   39b20:	mov    r10d,ebp
   39b23:	mov    ebp,edx
   39b25:	xor    r10d,ebx
   39b28:	rol    ebp,0x7
   39b2b:	xor    r10d,ebp
   39b2e:	mov    ebp,edi
   39b30:	add    r11d,r10d
   39b33:	add    eax,r11d
   39b36:	ror    ebp,0x2
   39b39:	mov    ebx,ebp
   39b3b:	mov    ebp,edi
   39b3d:	ror    ebp,0xd
   39b40:	mov    r10d,ebp
   39b43:	mov    ebp,edi
   39b45:	xor    r10d,ebx
   39b48:	rol    ebp,0xa
   39b4b:	xor    r10d,ebp
   39b4e:	mov    ebp,r8d
   39b51:	or     ebp,edi
   39b53:	mov    ebx,ebp
   39b55:	mov    ebp,r8d
   39b58:	and    ebp,edi
   39b5a:	and    ebx,r9d
   39b5d:	or     ebx,ebp
   39b5f:	mov    ebp,DWORD PTR [rsp+0x24]
   39b63:	add    r10d,ebx
   39b66:	add    r10d,r11d
   39b69:	mov    ebx,ebp
   39b6b:	mov    r11d,ebp
   39b6e:	shr    ebp,0xa
   39b71:	rol    r11d,0xf
   39b75:	rol    ebx,0xd
   39b78:	xor    ebx,r11d
   39b7b:	mov    r11d,DWORD PTR [rsp+0x4]
   39b80:	xor    ebx,ebp
   39b82:	mov    ebp,r11d
   39b85:	rol    r11d,0xe
   39b89:	ror    ebp,0x7
   39b8c:	xor    r11d,ebp
   39b8f:	mov    ebp,DWORD PTR [rsp+0x4]
   39b93:	shr    ebp,0x3
   39b96:	xor    r11d,ebp
   39b99:	mov    ebp,ecx
   39b9b:	xor    ebp,edx
   39b9d:	add    r11d,r14d
   39ba0:	add    r11d,DWORD PTR [rsp+0x14]
   39ba5:	mov    r14d,DWORD PTR [rsp+0x20]
   39baa:	add    ebx,r11d
   39bad:	mov    r11d,ebp
   39bb0:	mov    ebp,eax
   39bb2:	and    r11d,eax
   39bb5:	lea    esi,[rsi+rbx*1+0x650a7354]
   39bbc:	mov    DWORD PTR [rsp+0x28],ebx
   39bc0:	xor    r11d,ecx
   39bc3:	add    r11d,esi
   39bc6:	mov    esi,eax
   39bc8:	ror    esi,0x6
   39bcb:	mov    ebx,esi
   39bcd:	mov    esi,eax
   39bcf:	ror    esi,0xb
   39bd2:	xor    esi,ebx
   39bd4:	rol    ebp,0x7
   39bd7:	xor    esi,ebp
   39bd9:	mov    ebp,r10d
   39bdc:	add    r11d,esi
   39bdf:	mov    esi,r10d
   39be2:	rol    ebp,0xa
   39be5:	ror    esi,0x2
   39be8:	add    r9d,r11d
   39beb:	mov    ebx,esi
   39bed:	mov    esi,r10d
   39bf0:	ror    esi,0xd
   39bf3:	xor    esi,ebx
   39bf5:	xor    esi,ebp
   39bf7:	mov    ebp,edi
   39bf9:	or     ebp,r10d
   39bfc:	mov    ebx,ebp
   39bfe:	mov    ebp,edi
   39c00:	and    ebp,r10d
   39c03:	and    ebx,r8d
   39c06:	or     ebx,ebp
   39c08:	mov    ebp,r15d
   39c0b:	add    esi,ebx
   39c0d:	rol    ebp,0xf
   39c10:	add    esi,r11d
   39c13:	mov    r11d,ebp
   39c16:	mov    ebp,r15d
   39c19:	rol    ebp,0xd
   39c1c:	mov    ebx,ebp
   39c1e:	mov    ebp,r15d
   39c21:	xor    ebx,r11d
   39c24:	shr    ebp,0xa
   39c27:	mov    r11d,r14d
   39c2a:	xor    ebx,ebp
   39c2c:	mov    ebp,r14d
   39c2f:	rol    r11d,0xe
   39c33:	ror    ebp,0x7
   39c36:	xor    r11d,ebp
   39c39:	mov    ebp,r14d
   39c3c:	shr    ebp,0x3
   39c3f:	xor    r11d,ebp
   39c42:	add    r11d,DWORD PTR [rsp+0x4]
   39c47:	add    r11d,DWORD PTR [rsp+0x50]
   39c4c:	add    r11d,ebx
   39c4f:	mov    ebp,r11d
   39c52:	mov    r11d,edx
   39c55:	xor    r11d,eax
   39c58:	lea    ecx,[rcx+rbp*1+0x766a0abb]
   39c5f:	mov    DWORD PTR [rsp+0x2c],ebp
   39c63:	mov    ebp,r9d
   39c66:	and    r11d,r9d
   39c69:	xor    r11d,edx
   39c6c:	add    r11d,ecx
   39c6f:	mov    ecx,r9d
   39c72:	ror    ecx,0x6
   39c75:	rol    ebp,0x7
   39c78:	mov    ebx,ecx
   39c7a:	mov    ecx,r9d
   39c7d:	ror    ecx,0xb
   39c80:	xor    ecx,ebx
   39c82:	xor    ecx,ebp
   39c84:	mov    ebp,esi
   39c86:	add    r11d,ecx
   39c89:	mov    ecx,esi
   39c8b:	rol    ebp,0xa
   39c8e:	ror    ecx,0x2
   39c91:	add    r8d,r11d
   39c94:	mov    ebx,ecx
   39c96:	mov    ecx,esi
   39c98:	ror    ecx,0xd
   39c9b:	xor    ecx,ebx
   39c9d:	xor    ecx,ebp
   39c9f:	mov    ebp,r10d
   39ca2:	or     ebp,esi
   39ca4:	mov    ebx,ebp
   39ca6:	mov    ebp,r10d
   39ca9:	and    ebp,esi
   39cab:	and    ebx,edi
   39cad:	or     ebx,ebp
   39caf:	mov    ebp,DWORD PTR [rsp+0x28]
   39cb3:	add    ecx,ebx
   39cb5:	add    ecx,r11d
   39cb8:	mov    ebx,ebp
   39cba:	mov    r11d,ebp
   39cbd:	rol    r11d,0xf
   39cc1:	rol    ebx,0xd
   39cc4:	xor    ebx,r11d
   39cc7:	mov    r11d,ebp
   39cca:	shr    r11d,0xa
   39cce:	xor    ebx,r11d
   39cd1:	mov    r11d,DWORD PTR [rsp+0x8]
   39cd6:	mov    ebp,r11d
   39cd9:	rol    r11d,0xe
   39cdd:	ror    ebp,0x7
   39ce0:	xor    r11d,ebp
   39ce3:	mov    ebp,DWORD PTR [rsp+0x8]
   39ce7:	shr    ebp,0x3
   39cea:	xor    r11d,ebp
   39ced:	mov    ebp,r8d
   39cf0:	add    r11d,r14d
   39cf3:	add    r11d,DWORD PTR [rsp+0x18]
   39cf8:	mov    r14d,DWORD PTR [rsp+0x44]
   39cfd:	add    ebx,r11d
   39d00:	mov    r11d,eax
   39d03:	xor    r11d,r9d
   39d06:	lea    edx,[rdx+rbx*1-0x7e3d36d2]
   39d0d:	mov    DWORD PTR [rsp+0x4],ebx
   39d11:	and    r11d,r8d
   39d14:	rol    ebp,0x7
   39d17:	xor    r11d,eax
   39d1a:	add    r11d,edx
   39d1d:	mov    edx,r8d
   39d20:	ror    edx,0x6
   39d23:	mov    ebx,edx
   39d25:	mov    edx,r8d
   39d28:	ror    edx,0xb
   39d2b:	xor    edx,ebx
   39d2d:	xor    edx,ebp
   39d2f:	mov    ebp,ecx
   39d31:	add    r11d,edx
   39d34:	mov    edx,ecx
   39d36:	rol    ebp,0xa
   39d39:	ror    edx,0x2
   39d3c:	add    edi,r11d
   39d3f:	mov    ebx,edx
   39d41:	mov    edx,ecx
   39d43:	ror    edx,0xd
   39d46:	xor    edx,ebx
   39d48:	xor    edx,ebp
   39d4a:	mov    ebp,esi
   39d4c:	or     ebp,ecx
   39d4e:	mov    ebx,ebp
   39d50:	mov    ebp,esi
   39d52:	and    ebp,ecx
   39d54:	and    ebx,r10d
   39d57:	or     ebx,ebp
   39d59:	mov    ebp,DWORD PTR [rsp+0x2c]
   39d5d:	add    edx,ebx
   39d5f:	add    edx,r11d
   39d62:	mov    ebx,ebp
   39d64:	mov    r11d,ebp
   39d67:	rol    r11d,0xf
   39d6b:	rol    ebx,0xd
   39d6e:	xor    ebx,r11d
   39d71:	mov    r11d,ebp
   39d74:	mov    ebp,r14d
   39d77:	shr    r11d,0xa
   39d7b:	ror    ebp,0x7
   39d7e:	xor    ebx,r11d
   39d81:	mov    r11d,r14d
   39d84:	rol    r11d,0xe
   39d88:	xor    r11d,ebp
   39d8b:	mov    ebp,r14d
   39d8e:	shr    ebp,0x3
   39d91:	xor    r11d,ebp
   39d94:	add    r11d,DWORD PTR [rsp+0x8]
   39d99:	add    r11d,r12d
   39d9c:	add    r11d,ebx
   39d9f:	mov    ebp,r11d
   39da2:	mov    r11d,r9d
   39da5:	xor    r11d,r8d
   39da8:	lea    eax,[rax+rbp*1-0x6d8dd37b]
   39daf:	mov    DWORD PTR [rsp+0x8],ebp
   39db3:	mov    ebp,edi
   39db5:	and    r11d,edi
   39db8:	rol    ebp,0x7
   39dbb:	xor    r11d,r9d
   39dbe:	add    r11d,eax
   39dc1:	mov    eax,edi
   39dc3:	ror    eax,0x6
   39dc6:	mov    ebx,eax
   39dc8:	mov    eax,edi
   39dca:	ror    eax,0xb
   39dcd:	xor    eax,ebx
   39dcf:	xor    eax,ebp
   39dd1:	mov    ebp,edx
   39dd3:	add    r11d,eax
   39dd6:	mov    eax,edx
   39dd8:	rol    ebp,0xa
   39ddb:	ror    eax,0x2
   39dde:	add    r10d,r11d
   39de1:	mov    ebx,eax
   39de3:	mov    eax,edx
   39de5:	ror    eax,0xd
   39de8:	xor    eax,ebx
   39dea:	xor    eax,ebp
   39dec:	mov    ebp,ecx
   39dee:	or     ebp,edx
   39df0:	mov    ebx,ebp
   39df2:	mov    ebp,ecx
   39df4:	and    ebp,edx
   39df6:	and    ebx,esi
   39df8:	or     ebx,ebp
   39dfa:	mov    ebp,DWORD PTR [rsp+0x4]
   39dfe:	add    eax,ebx
   39e00:	add    eax,r11d
   39e03:	mov    ebx,ebp
   39e05:	mov    r11d,ebp
   39e08:	rol    r11d,0xf
   39e0c:	rol    ebx,0xd
   39e0f:	xor    ebx,r11d
   39e12:	mov    r11d,ebp
   39e15:	shr    r11d,0xa
   39e19:	xor    ebx,r11d
   39e1c:	mov    r11d,DWORD PTR [rsp+0xc]
   39e21:	mov    ebp,r11d
   39e24:	rol    r11d,0xe
   39e28:	ror    ebp,0x7
   39e2b:	xor    r11d,ebp
   39e2e:	mov    ebp,DWORD PTR [rsp+0xc]
   39e32:	shr    ebp,0x3
   39e35:	xor    r11d,ebp
   39e38:	mov    ebp,edx
   39e3a:	add    r11d,r14d
   39e3d:	and    ebp,eax
   39e3f:	mov    r14d,DWORD PTR [rsp+0x8]
   39e44:	add    r11d,r13d
   39e47:	add    ebx,r11d
   39e4a:	mov    r11d,r8d
   39e4d:	xor    r11d,edi
   39e50:	lea    r9d,[r9+rbx*1-0x5d40175f]
   39e58:	mov    DWORD PTR [rsp+0x1c],ebx
   39e5c:	and    r11d,r10d
   39e5f:	xor    r11d,r8d
   39e62:	add    r9d,r11d
   39e65:	mov    r11d,r10d
   39e68:	ror    r11d,0x6
   39e6c:	mov    ebx,r11d
   39e6f:	mov    r11d,r10d
   39e72:	ror    r11d,0xb
   39e76:	xor    r11d,ebx
   39e79:	mov    ebx,r10d
   39e7c:	rol    ebx,0x7
   39e7f:	xor    r11d,ebx
   39e82:	add    r9d,r11d
   39e85:	mov    r11d,eax
   39e88:	ror    r11d,0x2
   39e8c:	add    esi,r9d
   39e8f:	mov    ebx,r11d
   39e92:	mov    r11d,eax
   39e95:	ror    r11d,0xd
   39e99:	xor    r11d,ebx
   39e9c:	mov    ebx,eax
   39e9e:	rol    ebx,0xa
   39ea1:	xor    r11d,ebx
   39ea4:	mov    ebx,edx
   39ea6:	or     ebx,eax
   39ea8:	and    ebx,ecx
   39eaa:	or     ebx,ebp
   39eac:	add    r11d,ebx
   39eaf:	mov    ebx,r14d
   39eb2:	add    r11d,r9d
   39eb5:	mov    r9d,r14d
   39eb8:	rol    ebx,0xd
   39ebb:	rol    r9d,0xf
   39ebf:	xor    ebx,r9d
   39ec2:	mov    r9d,r14d
   39ec5:	mov    r14d,DWORD PTR [rsp+0x48]
   39eca:	shr    r9d,0xa
   39ece:	xor    ebx,r9d
   39ed1:	mov    r9d,r14d
   39ed4:	ror    r9d,0x7
   39ed8:	mov    ebp,r9d
   39edb:	mov    r9d,r14d
   39ede:	rol    r9d,0xe
   39ee2:	xor    r9d,ebp
   39ee5:	mov    ebp,r14d
   39ee8:	shr    ebp,0x3
   39eeb:	xor    r9d,ebp
   39eee:	add    r9d,DWORD PTR [rsp+0xc]
   39ef3:	add    r9d,DWORD PTR [rsp+0x24]
   39ef8:	mov    ebp,esi
   39efa:	add    r9d,ebx
   39efd:	rol    ebp,0x7
   39f00:	mov    ebx,r9d
   39f03:	mov    r9d,edi
   39f06:	xor    r9d,r10d
   39f09:	lea    r8d,[r8+rbx*1-0x57e599b5]
   39f11:	mov    DWORD PTR [rsp+0xc],ebx
   39f15:	and    r9d,esi
   39f18:	xor    r9d,edi
   39f1b:	add    r9d,r8d
   39f1e:	mov    r8d,esi
   39f21:	ror    r8d,0x6
   39f25:	mov    ebx,r8d
   39f28:	mov    r8d,esi
   39f2b:	ror    r8d,0xb
   39f2f:	xor    r8d,ebx
   39f32:	xor    r8d,ebp
   39f35:	mov    ebp,r11d
   39f38:	add    r9d,r8d
   39f3b:	mov    r8d,r11d
   39f3e:	rol    ebp,0xa
   39f41:	ror    r8d,0x2
   39f45:	add    ecx,r9d
   39f48:	mov    ebx,r8d
   39f4b:	mov    r8d,r11d
   39f4e:	ror    r8d,0xd
   39f52:	xor    r8d,ebx
   39f55:	xor    r8d,ebp
   39f58:	mov    ebp,eax
   39f5a:	or     ebp,r11d
   39f5d:	mov    ebx,ebp
   39f5f:	mov    ebp,eax
   39f61:	and    ebp,r11d
   39f64:	and    ebx,edx
   39f66:	or     ebx,ebp
   39f68:	mov    ebp,DWORD PTR [rsp+0x1c]
   39f6c:	add    r8d,ebx
   39f6f:	add    r8d,r9d
   39f72:	mov    ebx,ebp
   39f74:	mov    r9d,ebp
   39f77:	rol    r9d,0xf
   39f7b:	rol    ebx,0xd
   39f7e:	xor    ebx,r9d
   39f81:	mov    r9d,ebp
   39f84:	shr    r9d,0xa
   39f88:	xor    ebx,r9d
   39f8b:	mov    r9d,DWORD PTR [rsp+0x10]
   39f90:	mov    ebp,r9d
   39f93:	rol    r9d,0xe
   39f97:	ror    ebp,0x7
   39f9a:	xor    r9d,ebp
   39f9d:	mov    ebp,DWORD PTR [rsp+0x10]
   39fa1:	shr    ebp,0x3
   39fa4:	xor    r9d,ebp
   39fa7:	mov    ebp,ecx
   39fa9:	add    r9d,r14d
   39fac:	rol    ebp,0x7
   39faf:	add    r9d,r15d
   39fb2:	add    r9d,ebx
   39fb5:	mov    r14d,r9d
   39fb8:	mov    r9d,r10d
   39fbb:	xor    r9d,esi
   39fbe:	lea    edi,[rdi+r14*1-0x3db47490]
   39fc6:	mov    DWORD PTR [rsp+0x20],r14d
   39fcb:	mov    r14d,DWORD PTR [rsp+0xc]
   39fd0:	and    r9d,ecx
   39fd3:	xor    r9d,r10d
   39fd6:	add    edi,r9d
   39fd9:	mov    r9d,ecx
   39fdc:	ror    r9d,0x6
   39fe0:	mov    ebx,r9d
   39fe3:	mov    r9d,ecx
   39fe6:	ror    r9d,0xb
   39fea:	xor    r9d,ebx
   39fed:	xor    r9d,ebp
   39ff0:	mov    ebp,r8d
   39ff3:	add    edi,r9d
   39ff6:	mov    r9d,r8d
   39ff9:	rol    ebp,0xa
   39ffc:	ror    r9d,0x2
   3a000:	add    edx,edi
   3a002:	mov    ebx,r9d
   3a005:	mov    r9d,r8d
   3a008:	ror    r9d,0xd
   3a00c:	xor    r9d,ebx
   3a00f:	xor    r9d,ebp
   3a012:	mov    ebp,r11d
   3a015:	or     ebp,r8d
   3a018:	mov    ebx,ebp
   3a01a:	mov    ebp,r11d
   3a01d:	and    ebp,r8d
   3a020:	and    ebx,eax
   3a022:	or     ebx,ebp
   3a024:	add    r9d,ebx
   3a027:	mov    ebx,r14d
   3a02a:	add    r9d,edi
   3a02d:	mov    edi,r14d
   3a030:	rol    ebx,0xd
   3a033:	rol    edi,0xf
   3a036:	xor    ebx,edi
   3a038:	mov    edi,r14d
   3a03b:	mov    r14d,DWORD PTR [rsp+0x4c]
   3a040:	shr    edi,0xa
   3a043:	xor    ebx,edi
   3a045:	mov    edi,r14d
   3a048:	ror    edi,0x7
   3a04b:	mov    ebp,edi
   3a04d:	mov    edi,r14d
   3a050:	rol    edi,0xe
   3a053:	xor    edi,ebp
   3a055:	mov    ebp,r14d
   3a058:	shr    ebp,0x3
   3a05b:	xor    edi,ebp
   3a05d:	add    edi,DWORD PTR [rsp+0x10]
   3a061:	add    edi,DWORD PTR [rsp+0x28]
   3a065:	mov    ebp,edx
   3a067:	add    edi,ebx
   3a069:	rol    ebp,0x7
   3a06c:	mov    ebx,edi
   3a06e:	mov    edi,esi
   3a070:	xor    edi,ecx
   3a072:	lea    r10d,[r10+rbx*1-0x3893ae5d]
   3a07a:	mov    DWORD PTR [rsp+0x10],ebx
   3a07e:	and    edi,edx
   3a080:	xor    edi,esi
   3a082:	add    r10d,edi
   3a085:	mov    edi,edx
   3a087:	ror    edi,0x6
   3a08a:	mov    ebx,edi
   3a08c:	mov    edi,edx
   3a08e:	ror    edi,0xb
   3a091:	xor    edi,ebx
   3a093:	xor    edi,ebp
   3a095:	mov    ebp,r9d
   3a098:	add    r10d,edi
   3a09b:	rol    ebp,0xa
   3a09e:	lea    edi,[rax+r10*1]
   3a0a2:	mov    eax,r9d
   3a0a5:	ror    eax,0x2
   3a0a8:	mov    ebx,eax
   3a0aa:	mov    eax,r9d
   3a0ad:	ror    eax,0xd
   3a0b0:	xor    eax,ebx
   3a0b2:	xor    eax,ebp
   3a0b4:	mov    ebp,r8d
   3a0b7:	or     ebp,r9d
   3a0ba:	mov    ebx,ebp
   3a0bc:	mov    ebp,r8d
   3a0bf:	and    ebp,r9d
   3a0c2:	and    ebx,r11d
   3a0c5:	or     ebx,ebp
   3a0c7:	mov    ebp,DWORD PTR [rsp+0x20]
   3a0cb:	add    eax,ebx
   3a0cd:	add    eax,r10d
   3a0d0:	mov    ebx,ebp
   3a0d2:	mov    r10d,ebp
   3a0d5:	rol    r10d,0xf
   3a0d9:	rol    ebx,0xd
   3a0dc:	xor    ebx,r10d
   3a0df:	mov    r10d,ebp
   3a0e2:	shr    r10d,0xa
   3a0e6:	xor    ebx,r10d
   3a0e9:	mov    r10d,DWORD PTR [rsp+0x14]
   3a0ee:	mov    ebp,r10d
   3a0f1:	rol    r10d,0xe
   3a0f5:	ror    ebp,0x7
   3a0f8:	xor    r10d,ebp
   3a0fb:	mov    ebp,DWORD PTR [rsp+0x14]
   3a0ff:	shr    ebp,0x3
   3a102:	xor    r10d,ebp
   3a105:	mov    ebp,edi
   3a107:	add    r10d,r14d
   3a10a:	add    r10d,DWORD PTR [rsp+0x2c]
   3a10f:	rol    ebp,0x7
   3a112:	lea    r14d,[rbx+r10*1]
   3a116:	mov    r10d,ecx
   3a119:	xor    r10d,edx
   3a11c:	lea    esi,[rsi+r14*1-0x2e6d17e7]
   3a124:	mov    DWORD PTR [rsp+0x44],r14d
   3a129:	and    r10d,edi
   3a12c:	xor    r10d,ecx
   3a12f:	add    r10d,esi
   3a132:	mov    esi,edi
   3a134:	ror    esi,0x6
   3a137:	mov    ebx,esi
   3a139:	mov    esi,edi
   3a13b:	ror    esi,0xb
   3a13e:	xor    esi,ebx
   3a140:	xor    esi,ebp
   3a142:	mov    ebp,eax
   3a144:	add    r10d,esi
   3a147:	mov    esi,eax
   3a149:	rol    ebp,0xa
   3a14c:	ror    esi,0x2
   3a14f:	add    r11d,r10d
   3a152:	mov    ebx,esi
   3a154:	mov    esi,eax
   3a156:	ror    esi,0xd
   3a159:	xor    esi,ebx
   3a15b:	xor    esi,ebp
   3a15d:	mov    ebp,r9d
   3a160:	or     ebp,eax
   3a162:	mov    ebx,ebp
   3a164:	mov    ebp,r9d
   3a167:	and    ebx,r8d
   3a16a:	and    ebp,eax
   3a16c:	or     ebx,ebp
   3a16e:	add    esi,ebx
   3a170:	mov    ebx,DWORD PTR [rsp+0x10]
   3a174:	add    esi,r10d
   3a177:	mov    r14d,ebx
   3a17a:	rol    r14d,0xf
   3a17e:	mov    r10d,r14d
   3a181:	mov    r14d,ebx
   3a184:	rol    ebx,0xd
   3a187:	xor    ebx,r10d
   3a18a:	shr    r14d,0xa
   3a18e:	xor    ebx,r14d
   3a191:	mov    r14d,DWORD PTR [rsp+0x50]
   3a196:	mov    ebp,r14d
   3a199:	mov    r10d,r14d
   3a19c:	ror    ebp,0x7
   3a19f:	rol    r10d,0xe
   3a1a3:	xor    r10d,ebp
   3a1a6:	mov    ebp,r14d
   3a1a9:	shr    ebp,0x3
   3a1ac:	xor    r10d,ebp
   3a1af:	add    r10d,DWORD PTR [rsp+0x14]
   3a1b4:	add    r10d,DWORD PTR [rsp+0x4]
   3a1b9:	mov    ebp,r11d
   3a1bc:	add    ebx,r10d
   3a1bf:	mov    r10d,edx
   3a1c2:	rol    ebp,0x7
   3a1c5:	xor    r10d,edi
   3a1c8:	lea    ecx,[rcx+rbx*1-0x2966f9dc]
   3a1cf:	mov    DWORD PTR [rsp+0x14],ebx
   3a1d3:	and    r10d,r11d
   3a1d6:	xor    r10d,edx
   3a1d9:	add    r10d,ecx
   3a1dc:	mov    ecx,r11d
   3a1df:	ror    ecx,0x6
   3a1e2:	mov    ebx,ecx
   3a1e4:	mov    ecx,r11d
   3a1e7:	ror    ecx,0xb
   3a1ea:	xor    ecx,ebx
   3a1ec:	xor    ecx,ebp
   3a1ee:	mov    ebp,esi
   3a1f0:	add    r10d,ecx
   3a1f3:	mov    ecx,esi
   3a1f5:	ror    ecx,0x2
   3a1f8:	add    r8d,r10d
   3a1fb:	mov    ebx,ecx
   3a1fd:	mov    ecx,esi
   3a1ff:	ror    ecx,0xd
   3a202:	xor    ecx,ebx
   3a204:	rol    ebp,0xa
   3a207:	xor    ecx,ebp
   3a209:	mov    ebp,eax
   3a20b:	or     ebp,esi
   3a20d:	mov    ebx,ebp
   3a20f:	mov    ebp,eax
   3a211:	and    ebp,esi
   3a213:	and    ebx,r9d
   3a216:	or     ebx,ebp
   3a218:	mov    ebp,DWORD PTR [rsp+0x44]
   3a21c:	add    ecx,ebx
   3a21e:	add    ecx,r10d
   3a221:	mov    ebx,ebp
   3a223:	mov    r10d,ebp
   3a226:	rol    r10d,0xf
   3a22a:	rol    ebx,0xd
   3a22d:	xor    ebx,r10d
   3a230:	mov    r10d,ebp
   3a233:	shr    r10d,0xa
   3a237:	xor    ebx,r10d
   3a23a:	mov    r10d,DWORD PTR [rsp+0x18]
   3a23f:	mov    ebp,r10d
   3a242:	rol    r10d,0xe
   3a246:	ror    ebp,0x7
   3a249:	xor    r10d,ebp
   3a24c:	mov    ebp,DWORD PTR [rsp+0x18]
   3a250:	shr    ebp,0x3
   3a253:	xor    r10d,ebp
   3a256:	add    r10d,r14d
   3a259:	add    r10d,DWORD PTR [rsp+0x8]
   3a25e:	lea    r14d,[rbx+r10*1]
   3a262:	mov    r10d,edi
   3a265:	xor    r10d,r11d
   3a268:	lea    edx,[rdx+r14*1-0xbf1ca7b]
   3a270:	mov    ebp,r14d
   3a273:	mov    r14d,ecx
   3a276:	and    r10d,r8d
   3a279:	ror    r14d,0xd
   3a27d:	mov    DWORD PTR [rsp+0x4c],ebp
   3a281:	xor    r10d,edi
   3a284:	add    r10d,edx
   3a287:	mov    edx,r8d
   3a28a:	ror    edx,0x6
   3a28d:	mov    ebx,edx
   3a28f:	mov    edx,r8d
   3a292:	ror    edx,0xb
   3a295:	xor    edx,ebx
   3a297:	mov    ebx,r8d
   3a29a:	rol    ebx,0x7
   3a29d:	xor    edx,ebx
   3a29f:	mov    ebx,esi
   3a2a1:	add    r10d,edx
   3a2a4:	lea    edx,[r9+r10*1]
   3a2a8:	mov    r9d,ecx
   3a2ab:	ror    r9d,0x2
   3a2af:	xor    r14d,r9d
   3a2b2:	mov    r9d,ecx
   3a2b5:	and    ebx,ecx
   3a2b7:	rol    r9d,0xa
   3a2bb:	xor    r14d,r9d
   3a2be:	mov    r9d,esi
   3a2c1:	or     r9d,ecx
   3a2c4:	and    r9d,eax
   3a2c7:	or     r9d,ebx
   3a2ca:	mov    ebx,DWORD PTR [rsp+0x14]
   3a2ce:	add    r14d,r9d
   3a2d1:	add    r14d,r10d
   3a2d4:	mov    r9d,ebx
   3a2d7:	mov    r10d,ebx
   3a2da:	rol    r9d,0xf
   3a2de:	rol    r10d,0xd
   3a2e2:	xor    r10d,r9d
   3a2e5:	mov    r9d,ebx
   3a2e8:	shr    r9d,0xa
   3a2ec:	xor    r10d,r9d
   3a2ef:	mov    r9d,r12d
   3a2f2:	ror    r9d,0x7
   3a2f6:	mov    ebx,r9d
   3a2f9:	mov    r9d,r12d
   3a2fc:	rol    r9d,0xe
   3a300:	xor    r9d,ebx
   3a303:	mov    ebx,r12d
   3a306:	shr    ebx,0x3
   3a309:	xor    r9d,ebx
   3a30c:	add    r9d,DWORD PTR [rsp+0x18]
   3a311:	add    r9d,DWORD PTR [rsp+0x1c]
   3a316:	add    r9d,r10d
   3a319:	mov    ebx,r9d
   3a31c:	mov    r9d,r11d
   3a31f:	xor    r9d,r8d
   3a322:	lea    edi,[rdi+rbx*1+0x106aa070]
   3a329:	mov    DWORD PTR [rsp+0x18],ebx
   3a32d:	mov    ebx,ecx
   3a32f:	and    r9d,edx
   3a332:	xor    r9d,r11d
   3a335:	add    edi,r9d
   3a338:	mov    r9d,edx
   3a33b:	ror    r9d,0x6
   3a33f:	mov    r10d,r9d
   3a342:	mov    r9d,edx
   3a345:	ror    r9d,0xb
   3a349:	xor    r9d,r10d
   3a34c:	mov    r10d,edx
   3a34f:	rol    r10d,0x7
   3a353:	xor    r9d,r10d
   3a356:	mov    r10d,r14d
   3a359:	add    edi,r9d
   3a35c:	mov    r9d,r14d
   3a35f:	add    eax,edi
   3a361:	ror    r9d,0x2
   3a365:	and    ebx,r14d
   3a368:	ror    r10d,0xd
   3a36c:	xor    r10d,r9d
   3a36f:	mov    r9d,r14d
   3a372:	rol    r9d,0xa
   3a376:	xor    r10d,r9d
   3a379:	mov    r9d,ecx
   3a37c:	or     r9d,r14d
   3a37f:	and    r9d,esi
   3a382:	or     r9d,ebx
   3a385:	add    r10d,r9d
   3a388:	mov    r9d,ebp
   3a38b:	add    r10d,edi
   3a38e:	mov    edi,ebp
   3a390:	rol    r9d,0xd
   3a394:	rol    edi,0xf
   3a397:	xor    r9d,edi
   3a39a:	mov    edi,ebp
   3a39c:	mov    ebp,r13d
   3a39f:	shr    edi,0xa
   3a3a2:	shr    ebp,0x3
   3a3a5:	xor    r9d,edi
   3a3a8:	mov    edi,r13d
   3a3ab:	ror    edi,0x7
   3a3ae:	mov    ebx,edi
   3a3b0:	mov    edi,r13d
   3a3b3:	rol    edi,0xe
   3a3b6:	xor    edi,ebx
   3a3b8:	xor    edi,ebp
   3a3ba:	mov    ebp,DWORD PTR [rsp+0x24]
   3a3be:	add    edi,r12d
   3a3c1:	add    edi,DWORD PTR [rsp+0xc]
   3a3c5:	lea    r12d,[r9+rdi*1]
   3a3c9:	mov    edi,r8d
   3a3cc:	xor    edi,edx
   3a3ce:	lea    r9d,[r11+r12*1+0x19a4c116]
   3a3d6:	mov    DWORD PTR [rsp+0x48],r12d
   3a3db:	and    edi,eax
   3a3dd:	mov    DWORD PTR [rsp+0x80],r12d
   3a3e5:	mov    r12d,eax
   3a3e8:	xor    edi,r8d
   3a3eb:	ror    r12d,0x6
   3a3ef:	add    edi,r9d
   3a3f2:	mov    r9d,eax
   3a3f5:	ror    r9d,0xb
   3a3f9:	xor    r9d,r12d
   3a3fc:	mov    r12d,eax
   3a3ff:	rol    r12d,0x7
   3a403:	xor    r9d,r12d
   3a406:	mov    r12d,r10d
   3a409:	add    edi,r9d
   3a40c:	mov    r9d,r10d
   3a40f:	ror    r12d,0x2
   3a413:	ror    r9d,0xd
   3a417:	add    esi,edi
   3a419:	xor    r9d,r12d
   3a41c:	mov    r12d,r10d
   3a41f:	rol    r12d,0xa
   3a423:	xor    r9d,r12d
   3a426:	mov    r12d,r14d
   3a429:	or     r12d,r10d
   3a42c:	mov    r11d,r12d
   3a42f:	mov    r12d,r14d
   3a432:	and    r12d,r10d
   3a435:	and    r11d,ecx
   3a438:	or     r11d,r12d
   3a43b:	add    r9d,r11d
   3a43e:	mov    r11d,DWORD PTR [rsp+0x18]
   3a443:	add    r9d,edi
   3a446:	mov    r12d,r11d
   3a449:	rol    r12d,0xf
   3a44d:	mov    edi,r12d
   3a450:	mov    r12d,r11d
   3a453:	rol    r12d,0xd
   3a457:	xor    r12d,edi
   3a45a:	mov    edi,r11d
   3a45d:	mov    r11d,ebp
   3a460:	shr    edi,0xa
   3a463:	ror    r11d,0x7
   3a467:	xor    r12d,edi
   3a46a:	mov    edi,ebp
   3a46c:	rol    edi,0xe
   3a46f:	xor    edi,r11d
   3a472:	mov    r11d,ebp
   3a475:	shr    r11d,0x3
   3a479:	xor    edi,r11d
   3a47c:	add    edi,r13d
   3a47f:	add    edi,DWORD PTR [rsp+0x20]
   3a483:	mov    r13d,esi
   3a486:	add    r12d,edi
   3a489:	mov    edi,edx
   3a48b:	xor    edi,eax
   3a48d:	lea    r8d,[r8+r12*1+0x1e376c08]
   3a495:	mov    DWORD PTR [rsp+0x84],r12d
   3a49d:	and    edi,esi
   3a49f:	xor    edi,edx
   3a4a1:	add    edi,r8d
   3a4a4:	mov    r8d,esi
   3a4a7:	ror    r8d,0x6
   3a4ab:	mov    r11d,r8d
   3a4ae:	mov    r8d,esi
   3a4b1:	ror    r8d,0xb
   3a4b5:	rol    r13d,0x7
   3a4b9:	xor    r8d,r11d
   3a4bc:	xor    r8d,r13d
   3a4bf:	mov    r13d,r9d
   3a4c2:	add    edi,r8d
   3a4c5:	mov    r8d,r9d
   3a4c8:	rol    r13d,0xa
   3a4cc:	ror    r8d,0x2
   3a4d0:	add    ecx,edi
   3a4d2:	mov    r11d,r8d
   3a4d5:	mov    r8d,r9d
   3a4d8:	ror    r8d,0xd
   3a4dc:	xor    r8d,r11d
   3a4df:	xor    r8d,r13d
   3a4e2:	mov    r13d,r10d
   3a4e5:	or     r13d,r9d
   3a4e8:	mov    r11d,r13d
   3a4eb:	mov    r13d,r10d
   3a4ee:	and    r13d,r9d
   3a4f1:	and    r11d,r14d
   3a4f4:	or     r11d,r13d
   3a4f7:	add    r8d,r11d
   3a4fa:	mov    r11d,DWORD PTR [rsp+0x48]
   3a4ff:	add    r8d,edi
   3a502:	mov    r13d,r11d
   3a505:	mov    edi,r11d
   3a508:	rol    r13d,0xd
   3a50c:	rol    edi,0xf
   3a50f:	mov    ebp,r13d
   3a512:	mov    r13d,r15d
   3a515:	xor    ebp,edi
   3a517:	mov    edi,r11d
   3a51a:	ror    r13d,0x7
   3a51e:	shr    edi,0xa
   3a521:	xor    ebp,edi
   3a523:	mov    edi,r15d
   3a526:	rol    edi,0xe
   3a529:	xor    edi,r13d
   3a52c:	mov    r13d,r15d
   3a52f:	shr    r13d,0x3
   3a533:	xor    edi,r13d
   3a536:	add    edi,DWORD PTR [rsp+0x24]
   3a53a:	add    edi,DWORD PTR [rsp+0x10]
   3a53e:	mov    r13d,ecx
   3a541:	add    ebp,edi
   3a543:	mov    edi,eax
   3a545:	xor    edi,esi
   3a547:	lea    edx,[rdx+rbp*1+0x2748774c]
   3a54e:	mov    DWORD PTR [rsp+0x88],ebp
   3a555:	and    edi,ecx
   3a557:	xor    edi,eax
   3a559:	ror    r13d,0x6
   3a55d:	add    edx,edi
   3a55f:	mov    edi,ecx
   3a561:	ror    edi,0xb
   3a564:	xor    edi,r13d
   3a567:	mov    r13d,ecx
   3a56a:	rol    r13d,0x7
   3a56e:	xor    edi,r13d
   3a571:	mov    r13d,r8d
   3a574:	add    edx,edi
   3a576:	mov    edi,r8d
   3a579:	ror    r13d,0x2
   3a57d:	ror    edi,0xd
   3a580:	add    r14d,edx
   3a583:	xor    edi,r13d
   3a586:	mov    r13d,r8d
   3a589:	rol    r13d,0xa
   3a58d:	xor    edi,r13d
   3a590:	mov    r13d,r9d
   3a593:	or     r13d,r8d
   3a596:	mov    r11d,r13d
   3a599:	mov    r13d,r9d
   3a59c:	and    r13d,r8d
   3a59f:	and    r11d,r10d
   3a5a2:	or     r11d,r13d
   3a5a5:	mov    r13d,r12d
   3a5a8:	add    edi,r11d
   3a5ab:	rol    r13d,0xd
   3a5af:	add    edi,edx
   3a5b1:	mov    edx,r12d
   3a5b4:	mov    ebx,r13d
   3a5b7:	mov    r13d,DWORD PTR [rsp+0x28]
   3a5bc:	rol    edx,0xf
   3a5bf:	xor    ebx,edx
   3a5c1:	mov    edx,r12d
   3a5c4:	mov    r11d,r13d
   3a5c7:	shr    edx,0xa
   3a5ca:	ror    r11d,0x7
   3a5ce:	xor    ebx,edx
   3a5d0:	mov    edx,r13d
   3a5d3:	rol    edx,0xe
   3a5d6:	xor    edx,r11d
   3a5d9:	mov    r11d,r13d
   3a5dc:	mov    r13d,r8d
   3a5df:	shr    r11d,0x3
   3a5e3:	xor    edx,r11d
   3a5e6:	add    edx,r15d
   3a5e9:	mov    r15d,esi
   3a5ec:	add    edx,DWORD PTR [rsp+0x44]
   3a5f0:	add    ebx,edx
   3a5f2:	xor    r15d,ecx
   3a5f5:	and    r13d,edi
   3a5f8:	mov    edx,r15d
   3a5fb:	mov    r15d,r14d
   3a5fe:	lea    eax,[rax+rbx*1+0x34b0bcb5]
   3a605:	mov    DWORD PTR [rsp+0x8c],ebx
   3a60c:	ror    r15d,0x6
   3a610:	and    edx,r14d
   3a613:	mov    r11d,r15d
   3a616:	mov    r15d,r14d
   3a619:	xor    edx,esi
   3a61b:	ror    r15d,0xb
   3a61f:	add    edx,eax
   3a621:	mov    eax,r15d
   3a624:	mov    r15d,r14d
   3a627:	xor    eax,r11d
   3a62a:	rol    r15d,0x7
   3a62e:	xor    eax,r15d
   3a631:	mov    r15d,edi
   3a634:	ror    r15d,0x2
   3a638:	add    edx,eax
   3a63a:	mov    r11d,r15d
   3a63d:	mov    r15d,edi
   3a640:	add    r10d,edx
   3a643:	ror    r15d,0xd
   3a647:	mov    eax,r15d
   3a64a:	mov    r15d,edi
   3a64d:	xor    eax,r11d
   3a650:	rol    r15d,0xa
   3a654:	xor    eax,r15d
   3a657:	mov    r15d,r8d
   3a65a:	or     r15d,edi
   3a65d:	mov    r11d,r15d
   3a660:	mov    r15d,ebp
   3a663:	and    r11d,r9d
   3a666:	rol    r15d,0xf
   3a66a:	or     r11d,r13d
   3a66d:	add    eax,r11d
   3a670:	add    eax,edx
   3a672:	mov    edx,r15d
   3a675:	mov    r15d,ebp
   3a678:	rol    r15d,0xd
   3a67c:	mov    r11d,r15d
   3a67f:	mov    r15d,ebp
   3a682:	xor    r11d,edx
   3a685:	shr    r15d,0xa
   3a689:	xor    r11d,r15d
   3a68c:	mov    r15d,DWORD PTR [rsp+0x2c]
   3a691:	mov    edx,r15d
   3a694:	ror    edx,0x7
   3a697:	mov    r13d,edx
   3a69a:	mov    edx,r15d
   3a69d:	rol    edx,0xe
   3a6a0:	xor    edx,r13d
   3a6a3:	mov    r13d,r15d
   3a6a6:	mov    r15d,ecx
   3a6a9:	shr    r13d,0x3
   3a6ad:	xor    edx,r13d
   3a6b0:	xor    r15d,r14d
   3a6b3:	add    edx,DWORD PTR [rsp+0x28]
   3a6b7:	add    edx,DWORD PTR [rsp+0x14]
   3a6bb:	add    r11d,edx
   3a6be:	mov    edx,r15d
   3a6c1:	mov    r15d,r10d
   3a6c4:	and    edx,r10d
   3a6c7:	lea    esi,[rsi+r11*1+0x391c0cb3]
   3a6cf:	rol    r15d,0x7
   3a6d3:	mov    DWORD PTR [rsp+0x90],r11d
   3a6db:	xor    edx,ecx
   3a6dd:	add    edx,esi
   3a6df:	mov    esi,r10d
   3a6e2:	ror    esi,0x6
   3a6e5:	mov    r13d,esi
   3a6e8:	mov    esi,r10d
   3a6eb:	ror    esi,0xb
   3a6ee:	xor    esi,r13d
   3a6f1:	xor    esi,r15d
   3a6f4:	mov    r15d,eax
   3a6f7:	add    edx,esi
   3a6f9:	mov    esi,eax
   3a6fb:	rol    r15d,0xa
   3a6ff:	ror    esi,0x2
   3a702:	add    r9d,edx
   3a705:	mov    r13d,esi
   3a708:	mov    esi,eax
   3a70a:	ror    esi,0xd
   3a70d:	xor    esi,r13d
   3a710:	xor    esi,r15d
   3a713:	mov    r15d,edi
   3a716:	or     r15d,eax
   3a719:	mov    r13d,r15d
   3a71c:	mov    r15d,edi
   3a71f:	and    r15d,eax
   3a722:	and    r13d,r8d
   3a725:	or     r13d,r15d
   3a728:	mov    r15d,ebx
   3a72b:	add    esi,r13d
   3a72e:	rol    r15d,0xf
   3a732:	add    esi,edx
   3a734:	mov    edx,r15d
   3a737:	mov    r15d,ebx
   3a73a:	rol    r15d,0xd
   3a73e:	mov    r13d,r15d
   3a741:	mov    r15d,ebx
   3a744:	xor    r13d,edx
   3a747:	mov    edx,DWORD PTR [rsp+0x4]
   3a74b:	shr    r15d,0xa
   3a74f:	xor    r13d,r15d
   3a752:	mov    r15d,edx
   3a755:	ror    r15d,0x7
   3a759:	rol    edx,0xe
   3a75c:	xor    edx,r15d
   3a75f:	mov    r15d,DWORD PTR [rsp+0x4]
   3a764:	shr    r15d,0x3
   3a768:	xor    edx,r15d
   3a76b:	add    edx,DWORD PTR [rsp+0x2c]
   3a76f:	add    edx,DWORD PTR [rsp+0x4c]
   3a773:	lea    r15d,[r13+rdx*1+0x0]
   3a778:	mov    edx,r14d
   3a77b:	xor    edx,r10d
   3a77e:	lea    ecx,[rcx+r15*1+0x4ed8aa4a]
   3a786:	mov    DWORD PTR [rsp+0x24],r15d
   3a78b:	and    edx,r9d
   3a78e:	mov    DWORD PTR [rsp+0x94],r15d
   3a796:	mov    r15d,eax
   3a799:	xor    edx,r14d
   3a79c:	and    r15d,esi
   3a79f:	add    edx,ecx
   3a7a1:	mov    ecx,r9d
   3a7a4:	ror    ecx,0x6
   3a7a7:	mov    r13d,ecx
   3a7aa:	mov    ecx,r9d
   3a7ad:	ror    ecx,0xb
   3a7b0:	xor    ecx,r13d
   3a7b3:	mov    r13d,r9d
   3a7b6:	rol    r13d,0x7
   3a7ba:	xor    ecx,r13d
   3a7bd:	add    edx,ecx
   3a7bf:	mov    ecx,esi
   3a7c1:	ror    ecx,0x2
   3a7c4:	add    r8d,edx
   3a7c7:	mov    r13d,ecx
   3a7ca:	mov    ecx,esi
   3a7cc:	ror    ecx,0xd
   3a7cf:	xor    ecx,r13d
   3a7d2:	mov    r13d,esi
   3a7d5:	rol    r13d,0xa
   3a7d9:	xor    ecx,r13d
   3a7dc:	mov    r13d,eax
   3a7df:	or     r13d,esi
   3a7e2:	and    r13d,edi
   3a7e5:	or     r13d,r15d
   3a7e8:	add    ecx,r13d
   3a7eb:	mov    r13d,r11d
   3a7ee:	add    ecx,edx
   3a7f0:	mov    edx,r11d
   3a7f3:	rol    r13d,0xd
   3a7f7:	rol    edx,0xf
   3a7fa:	xor    r13d,edx
   3a7fd:	mov    edx,r11d
   3a800:	shr    edx,0xa
   3a803:	xor    r13d,edx
   3a806:	mov    edx,DWORD PTR [rsp+0x8]
   3a80a:	mov    r15d,edx
   3a80d:	rol    edx,0xe
   3a810:	ror    r15d,0x7
   3a814:	xor    edx,r15d
   3a817:	mov    r15d,DWORD PTR [rsp+0x8]
   3a81c:	shr    r15d,0x3
   3a820:	xor    edx,r15d
   3a823:	add    edx,DWORD PTR [rsp+0x4]
   3a827:	add    edx,DWORD PTR [rsp+0x18]
   3a82b:	mov    r15d,r8d
   3a82e:	add    edx,r13d
   3a831:	mov    r13d,r10d
   3a834:	rol    r15d,0x7
   3a838:	xor    r13d,r9d
   3a83b:	mov    DWORD PTR [rsp+0x4],edx
   3a83f:	and    r13d,r8d
   3a842:	mov    DWORD PTR [rsp+0x98],edx
   3a849:	lea    edx,[r14+rdx*1+0x5b9cca4f]
   3a851:	xor    r13d,r10d
   3a854:	add    r13d,edx
   3a857:	mov    edx,r8d
   3a85a:	ror    edx,0x6
   3a85d:	mov    r14d,edx
   3a860:	mov    edx,r8d
   3a863:	ror    edx,0xb
   3a866:	xor    edx,r14d
   3a869:	xor    edx,r15d
   3a86c:	mov    r15d,ecx
   3a86f:	add    r13d,edx
   3a872:	mov    edx,ecx
   3a874:	rol    r15d,0xa
   3a878:	ror    edx,0x2
   3a87b:	add    edi,r13d
   3a87e:	mov    r14d,edx
   3a881:	mov    edx,ecx
   3a883:	ror    edx,0xd
   3a886:	xor    edx,r14d
   3a889:	xor    edx,r15d
   3a88c:	mov    r15d,esi
   3a88f:	or     r15d,ecx
   3a892:	mov    r14d,r15d
   3a895:	mov    r15d,esi
   3a898:	and    r15d,ecx
   3a89b:	and    r14d,eax
   3a89e:	or     r14d,r15d
   3a8a1:	mov    r15d,DWORD PTR [rsp+0x24]
   3a8a6:	add    edx,r14d
   3a8a9:	add    edx,r13d
   3a8ac:	mov    r14d,r15d
   3a8af:	mov    r13d,r15d
   3a8b2:	rol    r13d,0xf
   3a8b6:	rol    r14d,0xd
   3a8ba:	xor    r14d,r13d
   3a8bd:	mov    r13d,DWORD PTR [rsp+0x1c]
   3a8c2:	shr    r15d,0xa
   3a8c6:	xor    r14d,r15d
   3a8c9:	mov    r15d,r13d
   3a8cc:	rol    r13d,0xe
   3a8d0:	ror    r15d,0x7
   3a8d4:	xor    r13d,r15d
   3a8d7:	mov    r15d,DWORD PTR [rsp+0x1c]
   3a8dc:	shr    r15d,0x3
   3a8e0:	xor    r13d,r15d
   3a8e3:	add    r13d,DWORD PTR [rsp+0x8]
   3a8e8:	add    r13d,DWORD PTR [rsp+0x48]
   3a8ed:	add    r13d,r14d
   3a8f0:	mov    r15d,r13d
   3a8f3:	mov    DWORD PTR [rsp+0x9c],r13d
   3a8fb:	mov    r13d,r9d
   3a8fe:	xor    r13d,r8d
   3a901:	lea    r10d,[r10+r15*1+0x682e6ff3]
   3a909:	mov    DWORD PTR [rsp+0x8],r15d
   3a90e:	mov    r15d,edi
   3a911:	and    r13d,edi
   3a914:	rol    r15d,0x7
   3a918:	xor    r13d,r9d
   3a91b:	add    r10d,r13d
   3a91e:	mov    r13d,edi
   3a921:	ror    r13d,0x6
   3a925:	mov    r14d,r13d
   3a928:	mov    r13d,edi
   3a92b:	ror    r13d,0xb
   3a92f:	xor    r13d,r14d
   3a932:	xor    r13d,r15d
   3a935:	mov    r15d,edx
   3a938:	add    r10d,r13d
   3a93b:	rol    r15d,0xa
   3a93f:	lea    r13d,[rax+r10*1]
   3a943:	mov    eax,edx
   3a945:	ror    eax,0x2
   3a948:	mov    r14d,eax
   3a94b:	mov    eax,edx
   3a94d:	ror    eax,0xd
   3a950:	xor    eax,r14d
   3a953:	xor    eax,r15d
   3a956:	mov    r15d,ecx
   3a959:	or     r15d,edx
   3a95c:	mov    r14d,r15d
   3a95f:	mov    r15d,ecx
   3a962:	and    r15d,edx
   3a965:	and    r14d,esi
   3a968:	or     r14d,r15d
   3a96b:	mov    r15d,DWORD PTR [rsp+0x4]
   3a970:	add    eax,r14d
   3a973:	add    eax,r10d
   3a976:	mov    r14d,r15d
   3a979:	mov    r10d,r15d
   3a97c:	rol    r10d,0xf
   3a980:	rol    r14d,0xd
   3a984:	xor    r14d,r10d
   3a987:	mov    r10d,r15d
   3a98a:	shr    r10d,0xa
   3a98e:	xor    r14d,r10d
   3a991:	mov    r10d,DWORD PTR [rsp+0xc]
   3a996:	mov    r15d,r10d
   3a999:	rol    r10d,0xe
   3a99d:	ror    r15d,0x7
   3a9a1:	xor    r10d,r15d
   3a9a4:	mov    r15d,DWORD PTR [rsp+0xc]
   3a9a9:	shr    r15d,0x3
   3a9ad:	xor    r10d,r15d
   3a9b0:	add    r10d,DWORD PTR [rsp+0x1c]
   3a9b5:	add    r10d,r12d
   3a9b8:	mov    r12d,r8d
   3a9bb:	xor    r12d,edi
   3a9be:	lea    r15d,[r14+r10*1]
   3a9c2:	mov    r14d,edx
   3a9c5:	mov    r10d,r12d
   3a9c8:	mov    r12d,r13d
   3a9cb:	lea    r9d,[r9+r15*1+0x748f82ee]
   3a9d3:	and    r14d,eax
   3a9d6:	and    r10d,r13d
   3a9d9:	ror    r12d,0x6
   3a9dd:	mov    DWORD PTR [rsp+0xa0],r15d
   3a9e5:	xor    r10d,r8d
   3a9e8:	add    r10d,r9d
   3a9eb:	mov    r9d,r13d
   3a9ee:	ror    r9d,0xb
   3a9f2:	xor    r9d,r12d
   3a9f5:	mov    r12d,r13d
   3a9f8:	rol    r12d,0x7
   3a9fc:	xor    r9d,r12d
   3a9ff:	mov    r12d,eax
   3aa02:	add    r10d,r9d
   3aa05:	mov    r9d,eax
   3aa08:	ror    r12d,0x2
   3aa0c:	ror    r9d,0xd
   3aa10:	add    esi,r10d
   3aa13:	xor    r9d,r12d
   3aa16:	mov    r12d,eax
   3aa19:	rol    r12d,0xa
   3aa1d:	xor    r9d,r12d
   3aa20:	mov    r12d,edx
   3aa23:	or     r12d,eax
   3aa26:	and    r12d,ecx
   3aa29:	or     r12d,r14d
   3aa2c:	mov    r14d,DWORD PTR [rsp+0x8]
   3aa31:	add    r9d,r12d
   3aa34:	add    r9d,r10d
   3aa37:	mov    r12d,r14d
   3aa3a:	mov    r10d,r14d
   3aa3d:	rol    r12d,0xf
   3aa41:	rol    r10d,0xd
   3aa45:	xor    r10d,r12d
   3aa48:	mov    r12d,r14d
   3aa4b:	shr    r12d,0xa
   3aa4f:	xor    r10d,r12d
   3aa52:	mov    r12d,DWORD PTR [rsp+0x20]
   3aa57:	mov    r14d,r12d
   3aa5a:	rol    r12d,0xe
   3aa5e:	ror    r14d,0x7
   3aa62:	xor    r12d,r14d
   3aa65:	mov    r14d,DWORD PTR [rsp+0x20]
   3aa6a:	shr    r14d,0x3
   3aa6e:	xor    r12d,r14d
   3aa71:	add    r12d,DWORD PTR [rsp+0xc]
   3aa76:	mov    r14d,eax
   3aa79:	add    r12d,ebp
   3aa7c:	mov    ebp,edi
   3aa7e:	xor    ebp,r13d
   3aa81:	add    r10d,r12d
   3aa84:	and    ebp,esi
   3aa86:	lea    r8d,[r8+r10*1+0x78a5636f]
   3aa8e:	mov    DWORD PTR [rsp+0xa4],r10d
   3aa96:	xor    ebp,edi
   3aa98:	add    ebp,r8d
   3aa9b:	mov    r8d,esi
   3aa9e:	ror    r8d,0x6
   3aaa2:	mov    r12d,r8d
   3aaa5:	mov    r8d,esi
   3aaa8:	ror    r8d,0xb
   3aaac:	xor    r8d,r12d
   3aaaf:	mov    r12d,esi
   3aab2:	rol    r12d,0x7
   3aab6:	xor    r8d,r12d
   3aab9:	add    ebp,r8d
   3aabc:	mov    r8d,r9d
   3aabf:	ror    r8d,0x2
   3aac3:	add    ecx,ebp
   3aac5:	mov    r12d,r8d
   3aac8:	mov    r8d,r9d
   3aacb:	ror    r8d,0xd
   3aacf:	xor    r8d,r12d
   3aad2:	mov    r12d,r9d
   3aad5:	rol    r12d,0xa
   3aad9:	xor    r8d,r12d
   3aadc:	mov    r12d,eax
   3aadf:	or     r12d,r9d
   3aae2:	and    r14d,r9d
   3aae5:	and    r12d,edx
   3aae8:	or     r12d,r14d
   3aaeb:	add    r8d,r12d
   3aaee:	mov    r12d,r15d
   3aaf1:	add    r8d,ebp
   3aaf4:	mov    ebp,r15d
   3aaf7:	rol    r12d,0xd
   3aafb:	rol    ebp,0xf
   3aafe:	xor    r12d,ebp
   3ab01:	mov    ebp,r15d
   3ab04:	shr    ebp,0xa
   3ab07:	xor    r12d,ebp
   3ab0a:	mov    ebp,DWORD PTR [rsp+0x10]
   3ab0e:	mov    r14d,ebp
   3ab11:	rol    ebp,0xe
   3ab14:	ror    r14d,0x7
   3ab18:	xor    ebp,r14d
   3ab1b:	mov    r14d,DWORD PTR [rsp+0x10]
   3ab20:	shr    r14d,0x3
   3ab24:	xor    ebp,r14d
   3ab27:	add    ebp,DWORD PTR [rsp+0x20]
   3ab2b:	mov    r14d,r9d
   3ab2e:	add    ebp,ebx
   3ab30:	lea    ebx,[r12+rbp*1]
   3ab34:	mov    ebp,r13d
   3ab37:	xor    ebp,esi
   3ab39:	lea    edi,[rdi+rbx*1-0x7b3787ec]
   3ab40:	mov    DWORD PTR [rsp+0xa8],ebx
   3ab47:	and    ebp,ecx
   3ab49:	xor    ebp,r13d
   3ab4c:	add    ebp,edi
   3ab4e:	mov    edi,ecx
   3ab50:	ror    edi,0x6
   3ab53:	mov    r12d,edi
   3ab56:	mov    edi,ecx
   3ab58:	ror    edi,0xb
   3ab5b:	xor    edi,r12d
   3ab5e:	mov    r12d,ecx
   3ab61:	rol    r12d,0x7
   3ab65:	xor    edi,r12d
   3ab68:	add    ebp,edi
   3ab6a:	mov    edi,r8d
   3ab6d:	ror    edi,0x2
   3ab70:	add    edx,ebp
   3ab72:	mov    r12d,edi
   3ab75:	mov    edi,r8d
   3ab78:	ror    edi,0xd
   3ab7b:	xor    edi,r12d
   3ab7e:	mov    r12d,r8d
   3ab81:	rol    r12d,0xa
   3ab85:	and    r14d,r8d
   3ab88:	xor    edi,r12d
   3ab8b:	mov    r12d,r9d
   3ab8e:	or     r12d,r8d
   3ab91:	and    r12d,eax
   3ab94:	or     r12d,r14d
   3ab97:	mov    r14d,DWORD PTR [rsp+0x44]
   3ab9c:	add    edi,r12d
   3ab9f:	mov    r12d,r10d
   3aba2:	add    edi,ebp
   3aba4:	mov    ebp,r10d
   3aba7:	rol    r12d,0xf
   3abab:	rol    ebp,0xd
   3abae:	shr    r10d,0xa
   3abb2:	xor    ebp,r12d
   3abb5:	mov    r12d,r14d
   3abb8:	xor    r10d,ebp
   3abbb:	mov    ebp,r14d
   3abbe:	ror    r12d,0x7
   3abc2:	rol    ebp,0xe
   3abc5:	xor    ebp,r12d
   3abc8:	mov    r12d,r14d
   3abcb:	shr    r12d,0x3
   3abcf:	xor    ebp,r12d
   3abd2:	add    ebp,DWORD PTR [rsp+0x10]
   3abd6:	mov    r12d,edx
   3abd9:	add    ebp,r11d
   3abdc:	ror    r12d,0x6
   3abe0:	add    r10d,ebp
   3abe3:	mov    ebp,esi
   3abe5:	xor    ebp,ecx
   3abe7:	lea    r11d,[r13+r10*1-0x7338fdf8]
   3abef:	mov    r13d,r8d
   3abf2:	mov    DWORD PTR [rsp+0xac],r10d
   3abfa:	and    ebp,edx
   3abfc:	xor    ebp,esi
   3abfe:	add    ebp,r11d
   3ac01:	mov    r11d,edx
   3ac04:	ror    r11d,0xb
   3ac08:	xor    r11d,r12d
   3ac0b:	mov    r12d,edx
   3ac0e:	rol    r12d,0x7
   3ac12:	xor    r11d,r12d
   3ac15:	mov    r12d,edi
   3ac18:	add    ebp,r11d
   3ac1b:	mov    r11d,edi
   3ac1e:	add    eax,ebp
   3ac20:	ror    r12d,0x2
   3ac24:	and    r13d,edi
   3ac27:	ror    r11d,0xd
   3ac2b:	xor    r11d,r12d
   3ac2e:	mov    r12d,edi
   3ac31:	rol    r12d,0xa
   3ac35:	xor    r11d,r12d
   3ac38:	mov    r12d,r8d
   3ac3b:	or     r12d,edi
   3ac3e:	and    r12d,r9d
   3ac41:	or     r12d,r13d
   3ac44:	mov    r13d,DWORD PTR [rsp+0x14]
   3ac49:	add    r11d,r12d
   3ac4c:	add    r11d,ebp
   3ac4f:	mov    ebp,ebx
   3ac51:	rol    ebp,0xf
   3ac54:	mov    r12d,ebp
   3ac57:	mov    ebp,ebx
   3ac59:	shr    ebx,0xa
   3ac5c:	rol    ebp,0xd
   3ac5f:	xor    ebp,r12d
   3ac62:	mov    r12d,r13d
   3ac65:	xor    ebx,ebp
   3ac67:	mov    ebp,r13d
   3ac6a:	ror    r12d,0x7
   3ac6e:	rol    ebp,0xe
   3ac71:	xor    ebp,r12d
   3ac74:	mov    r12d,r13d
   3ac77:	mov    r13d,edi
   3ac7a:	shr    r12d,0x3
   3ac7e:	xor    ebp,r12d
   3ac81:	add    ebp,r14d
   3ac84:	add    ebp,DWORD PTR [rsp+0x24]
   3ac88:	mov    r14d,DWORD PTR [rsp+0x4c]
   3ac8d:	add    ebx,ebp
   3ac8f:	mov    ebp,ecx
   3ac91:	xor    ebp,edx
   3ac93:	lea    esi,[rsi+rbx*1-0x6f410006]
   3ac9a:	mov    DWORD PTR [rsp+0xb0],ebx
   3aca1:	and    ebp,eax
   3aca3:	xor    ebp,ecx
   3aca5:	add    ebp,esi
   3aca7:	mov    esi,eax
   3aca9:	ror    esi,0x6
   3acac:	mov    r12d,esi
   3acaf:	mov    esi,eax
   3acb1:	ror    esi,0xb
   3acb4:	xor    esi,r12d
   3acb7:	mov    r12d,eax
   3acba:	rol    r12d,0x7
   3acbe:	xor    esi,r12d
   3acc1:	and    r13d,r11d
   3acc4:	add    ebp,esi
   3acc6:	mov    esi,r11d
   3acc9:	ror    esi,0x2
   3accc:	add    r9d,ebp
   3accf:	mov    r12d,esi
   3acd2:	mov    esi,r11d
   3acd5:	ror    esi,0xd
   3acd8:	xor    esi,r12d
   3acdb:	mov    r12d,r11d
   3acde:	rol    r12d,0xa
   3ace2:	xor    esi,r12d
   3ace5:	mov    r12d,edi
   3ace8:	or     r12d,r11d
   3aceb:	and    r12d,r8d
   3acee:	or     r12d,r13d
   3acf1:	mov    r13d,r11d
   3acf4:	add    esi,r12d
   3acf7:	add    esi,ebp
   3acf9:	mov    ebp,r10d
   3acfc:	rol    ebp,0xf
   3acff:	mov    r12d,ebp
   3ad02:	mov    ebp,r10d
   3ad05:	shr    r10d,0xa
   3ad09:	rol    ebp,0xd
   3ad0c:	xor    ebp,r12d
   3ad0f:	xor    r10d,ebp
   3ad12:	mov    ebp,r14d
   3ad15:	ror    ebp,0x7
   3ad18:	mov    r12d,ebp
   3ad1b:	mov    ebp,r14d
   3ad1e:	rol    ebp,0xe
   3ad21:	xor    ebp,r12d
   3ad24:	mov    r12d,r14d
   3ad27:	shr    r12d,0x3
   3ad2b:	xor    ebp,r12d
   3ad2e:	add    ebp,DWORD PTR [rsp+0x14]
   3ad32:	add    ebp,DWORD PTR [rsp+0x4]
   3ad36:	add    r10d,ebp
   3ad39:	mov    ebp,edx
   3ad3b:	xor    ebp,eax
   3ad3d:	lea    ecx,[rcx+r10*1-0x5baf9315]
   3ad45:	mov    DWORD PTR [rsp+0xb4],r10d
   3ad4d:	and    ebp,r9d
   3ad50:	xor    ebp,edx
   3ad52:	add    ebp,ecx
   3ad54:	mov    ecx,r9d
   3ad57:	ror    ecx,0x6
   3ad5a:	mov    r12d,ecx
   3ad5d:	mov    ecx,r9d
   3ad60:	ror    ecx,0xb
   3ad63:	and    r13d,esi
   3ad66:	xor    ecx,r12d
   3ad69:	mov    r12d,r9d
   3ad6c:	rol    r12d,0x7
   3ad70:	xor    ecx,r12d
   3ad73:	add    ebp,ecx
   3ad75:	mov    ecx,esi
   3ad77:	ror    ecx,0x2
   3ad7a:	add    r8d,ebp
   3ad7d:	mov    r12d,ecx
   3ad80:	mov    ecx,esi
   3ad82:	ror    ecx,0xd
   3ad85:	xor    ecx,r12d
   3ad88:	mov    r12d,esi
   3ad8b:	rol    r12d,0xa
   3ad8f:	xor    ecx,r12d
   3ad92:	mov    r12d,r11d
   3ad95:	or     r12d,esi
   3ad98:	and    r12d,edi
   3ad9b:	or     r12d,r13d
   3ad9e:	mov    r13d,DWORD PTR [rsp+0x18]
   3ada3:	add    ecx,r12d
   3ada6:	add    ecx,ebp
   3ada8:	mov    ebp,ebx
   3adaa:	rol    ebp,0xf
   3adad:	mov    r12d,ebp
   3adb0:	mov    ebp,ebx
   3adb2:	shr    ebx,0xa
   3adb5:	rol    ebp,0xd
   3adb8:	xor    ebp,r12d
   3adbb:	mov    r12d,r13d
   3adbe:	xor    ebx,ebp
   3adc0:	mov    ebp,r13d
   3adc3:	ror    r12d,0x7
   3adc7:	rol    ebp,0xe
   3adca:	xor    ebp,r12d
   3adcd:	mov    r12d,r13d
   3add0:	shr    r12d,0x3
   3add4:	xor    ebp,r12d
   3add7:	mov    r12d,eax
   3adda:	add    ebp,r14d
   3addd:	xor    r12d,r9d
   3ade0:	add    ebp,DWORD PTR [rsp+0x8]
   3ade4:	mov    r14d,DWORD PTR [rsp+0x48]
   3ade9:	add    ebp,ebx
   3adeb:	mov    ebx,r12d
   3adee:	mov    r12d,r8d
   3adf1:	and    ebx,r8d
   3adf4:	lea    edx,[rdx+rbp*1-0x41065c09]
   3adfb:	mov    DWORD PTR [rsp+0xb8],ebp
   3ae02:	mov    ebp,r8d
   3ae05:	xor    ebx,eax
   3ae07:	ror    r12d,0xb
   3ae0b:	add    ebx,edx
   3ae0d:	ror    ebp,0x6
   3ae10:	mov    edx,r12d
   3ae13:	mov    r12d,ecx
   3ae16:	xor    edx,ebp
   3ae18:	mov    ebp,r8d
   3ae1b:	ror    r12d,0xd
   3ae1f:	rol    ebp,0x7
   3ae22:	xor    edx,ebp
   3ae24:	mov    ebp,ecx
   3ae26:	add    ebx,edx
   3ae28:	ror    ebp,0x2
   3ae2b:	mov    edx,r12d
   3ae2e:	mov    r12d,esi
   3ae31:	xor    edx,ebp
   3ae33:	mov    ebp,ecx
   3ae35:	and    r12d,ecx
   3ae38:	add    edi,ebx
   3ae3a:	rol    ebp,0xa
   3ae3d:	xor    edx,ebp
   3ae3f:	mov    ebp,esi
   3ae41:	or     ebp,ecx
   3ae43:	and    ebp,r11d
   3ae46:	or     ebp,r12d
   3ae49:	mov    r12d,r10d
   3ae4c:	add    edx,ebp
   3ae4e:	rol    r12d,0xd
   3ae52:	mov    ebp,r10d
   3ae55:	rol    ebp,0xf
   3ae58:	add    edx,ebx
   3ae5a:	mov    ebx,r12d
   3ae5d:	mov    r12d,r14d
   3ae60:	shr    r10d,0xa
   3ae64:	xor    ebx,ebp
   3ae66:	rol    r12d,0xe
   3ae6a:	mov    ebp,r14d
   3ae6d:	ror    ebp,0x7
   3ae70:	xor    r10d,ebx
   3ae73:	mov    ebx,r12d
   3ae76:	shr    r14d,0x3
   3ae7a:	xor    ebx,ebp
   3ae7c:	mov    ebp,r9d
   3ae7f:	xor    ebx,r14d
   3ae82:	add    ebx,r13d
   3ae85:	add    ebx,r15d
   3ae88:	add    ebx,r10d
   3ae8b:	xor    ebp,r8d
   3ae8e:	add    DWORD PTR [rsp+0x30],edx
   3ae92:	mov    r10d,ebp
   3ae95:	mov    ebp,edi
   3ae97:	mov    DWORD PTR [rsp+0xbc],ebx
   3ae9e:	lea    eax,[rax+rbx*1-0x398e870e]
   3aea5:	ror    ebp,0x6
   3aea8:	and    r10d,edi
   3aeab:	add    DWORD PTR [rsp+0x34],ecx
   3aeaf:	mov    ebx,ebp
   3aeb1:	mov    ebp,edi
   3aeb3:	xor    r10d,r9d
   3aeb6:	ror    ebp,0xb
   3aeb9:	add    eax,r10d
   3aebc:	mov    r10d,ebp
   3aebf:	mov    ebp,edi
   3aec1:	xor    r10d,ebx
   3aec4:	rol    ebp,0x7
   3aec7:	xor    r10d,ebp
   3aeca:	mov    ebp,edx
   3aecc:	ror    ebp,0x2
   3aecf:	add    eax,r10d
   3aed2:	mov    ebx,ebp
   3aed4:	mov    ebp,edx
   3aed6:	add    r11d,eax
   3aed9:	ror    ebp,0xd
   3aedc:	mov    r10d,ebp
   3aedf:	mov    ebp,edx
   3aee1:	xor    r10d,ebx
   3aee4:	rol    ebp,0xa
   3aee7:	xor    r10d,ebp
   3aeea:	mov    ebp,ecx
   3aeec:	or     ebp,edx
   3aeee:	mov    ebx,ebp
   3aef0:	mov    ebp,ecx
   3aef2:	and    ebp,edx
   3aef4:	and    ebx,esi
   3aef6:	mov    edx,DWORD PTR [rsp+0x30]
   3aefa:	or     ebx,ebp
   3aefc:	add    r10d,ebx
   3aeff:	mov    rbx,QWORD PTR [rsp+0x70]
   3af04:	add    r10d,DWORD PTR [rsp+0x54]
   3af09:	lea    ebp,[r10+rax*1]
   3af0d:	mov    DWORD PTR [rbx+0x4],edx
   3af10:	mov    edx,DWORD PTR [rsp+0x34]
   3af14:	mov    rcx,rbx
   3af17:	mov    DWORD PTR [rbx],ebp
   3af19:	mov    DWORD PTR [rbx+0x8],edx
   3af1c:	mov    DWORD PTR [rsp+0x54],ebp
   3af20:	add    DWORD PTR [rsp+0x58],esi
   3af24:	mov    ebx,DWORD PTR [rsp+0x58]
   3af28:	add    DWORD PTR [rsp+0x3c],edi
   3af2c:	mov    eax,DWORD PTR [rsp+0x3c]
   3af30:	add    DWORD PTR [rsp+0x38],r11d
   3af35:	mov    r10d,DWORD PTR [rsp+0x38]
   3af3a:	add    DWORD PTR [rsp+0x40],r8d
   3af3f:	mov    r14d,DWORD PTR [rsp+0x40]
   3af44:	add    DWORD PTR [rsp+0x5c],r9d
   3af49:	mov    DWORD PTR [rcx+0x14],eax
   3af4c:	mov    eax,DWORD PTR [rsp+0x5c]
   3af50:	mov    DWORD PTR [rcx+0xc],ebx
   3af53:	mov    DWORD PTR [rcx+0x1c],eax
   3af56:	mov    rax,QWORD PTR [rsp+0x60]
   3af5b:	mov    DWORD PTR [rcx+0x10],r10d
   3af5f:	mov    DWORD PTR [rcx+0x18],r14d
   3af63:	cmp    QWORD PTR [rsp+0x68],rax
   3af68:	ja     38548 <sha256_process_block+0xb8>
   3af6e:	mov    rax,QWORD PTR [rsp+0xc8]
   3af76:	sub    rax,QWORD PTR fs:0x28
   3af7f:	jne    3af93 <sha256_process_block+0x2b03>
   3af81:	add    rsp,0xd8
   3af88:	pop    rbx
   3af89:	pop    rbp
   3af8a:	pop    r12
   3af8c:	pop    r13
   3af8e:	pop    r14
   3af90:	pop    r15
   3af92:	ret    
   3af93:	call   11760 <__stack_chk_fail@plt>
   3af98:	nop    DWORD PTR [rax+rax*1+0x0]

000000000003afa0 <sha256_conclude_ctx>:
   3afa0:	push   r13
   3afa2:	push   r12
   3afa4:	mov    r12,rdi
   3afa7:	mov    esi,DWORD PTR [r12+0x20]
   3afac:	mov    eax,DWORD PTR [r12+0x24]
   3afb1:	push   rbp
   3afb2:	mov    rcx,QWORD PTR [rdi+0x28]
   3afb6:	cmp    rcx,0x38
   3afba:	sbb    rbp,rbp
   3afbd:	and    rbp,0xffffffffffffffc0
   3afc1:	sub    rbp,0xffffffffffffff80
   3afc5:	cmp    rcx,0x38
   3afc9:	sbb    rdx,rdx
   3afcc:	and    rdx,0xffffffffffffffc0
   3afd0:	add    rdx,0x78
   3afd4:	cmp    rcx,0x38
   3afd8:	sbb    rdi,rdi
   3afdb:	and    rdi,0xfffffffffffffff0
   3afdf:	add    rdi,0x1f
   3afe3:	cmp    rcx,0x38
   3afe7:	sbb    r8,r8
   3afea:	add    esi,ecx
   3afec:	and    r8,0xfffffffffffffff0
   3aff0:	mov    r9d,esi
   3aff3:	mov    DWORD PTR [r12+0x20],esi
   3aff8:	add    r8,0x1e
   3affc:	cmp    r9,rcx
   3afff:	jae    3b009 <sha256_conclude_ctx+0x69>
   3b001:	add    eax,0x1
   3b004:	mov    DWORD PTR [r12+0x24],eax
   3b009:	mov    r9d,esi
   3b00c:	shl    eax,0x3
   3b00f:	lea    r13,[r12+0x30]
   3b014:	sub    rdx,rcx
   3b017:	shr    r9d,0x1d
   3b01b:	shl    esi,0x3
   3b01e:	or     eax,r9d
   3b021:	bswap  esi
   3b023:	bswap  eax
   3b025:	mov    DWORD PTR [r12+r8*4+0x30],eax
   3b02a:	mov    DWORD PTR [r12+rdi*4+0x30],esi
   3b02f:	lea    rdi,[r13+rcx*1+0x0]
   3b034:	lea    rsi,[rip+0x1d0c5]        # 58100 <fillbuf>
   3b03b:	call   11220 <memcpy@plt>
   3b040:	mov    rdx,r12
   3b043:	mov    rsi,rbp
   3b046:	mov    rdi,r13
   3b049:	pop    rbp
   3b04a:	pop    r12
   3b04c:	pop    r13
   3b04e:	jmp    38490 <sha256_process_block>
   3b053:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3b05e:	xchg   ax,ax

000000000003b060 <sha256_finish_ctx>:
   3b060:	endbr64 
   3b064:	push   r12
   3b066:	mov    r12,rsi
   3b069:	push   rbx
   3b06a:	mov    rbx,rdi
   3b06d:	sub    rsp,0x8
   3b071:	call   3afa0 <sha256_conclude_ctx>
   3b076:	xor    edx,edx
   3b078:	nop    DWORD PTR [rax+rax*1+0x0]
   3b080:	mov    ecx,DWORD PTR [rbx+rdx*1]
   3b083:	bswap  ecx
   3b085:	mov    DWORD PTR [r12+rdx*1],ecx
   3b089:	add    rdx,0x4
   3b08d:	cmp    rdx,0x20
   3b091:	jne    3b080 <sha256_finish_ctx+0x20>
   3b093:	add    rsp,0x8
   3b097:	mov    rax,r12
   3b09a:	pop    rbx
   3b09b:	pop    r12
   3b09d:	ret    
   3b09e:	xchg   ax,ax

000000000003b0a0 <sha224_finish_ctx>:
   3b0a0:	endbr64 
   3b0a4:	push   r12
   3b0a6:	mov    r12,rsi
   3b0a9:	push   rbx
   3b0aa:	mov    rbx,rdi
   3b0ad:	sub    rsp,0x8
   3b0b1:	call   3afa0 <sha256_conclude_ctx>
   3b0b6:	xor    edx,edx
   3b0b8:	nop    DWORD PTR [rax+rax*1+0x0]
   3b0c0:	mov    ecx,DWORD PTR [rbx+rdx*1]
   3b0c3:	bswap  ecx
   3b0c5:	mov    DWORD PTR [r12+rdx*1],ecx
   3b0c9:	add    rdx,0x4
   3b0cd:	cmp    rdx,0x1c
   3b0d1:	jne    3b0c0 <sha224_finish_ctx+0x20>
   3b0d3:	add    rsp,0x8
   3b0d7:	mov    rax,r12
   3b0da:	pop    rbx
   3b0db:	pop    r12
   3b0dd:	ret    
   3b0de:	xchg   ax,ax

000000000003b0e0 <sha256_process_bytes>:
   3b0e0:	endbr64 
   3b0e4:	push   r15
   3b0e6:	push   r14
   3b0e8:	push   r13
   3b0ea:	mov    r13,rsi
   3b0ed:	push   r12
   3b0ef:	mov    r12,rdx
   3b0f2:	push   rbp
   3b0f3:	push   rbx
   3b0f4:	mov    rbx,rdi
   3b0f7:	sub    rsp,0x18
   3b0fb:	mov    rbp,QWORD PTR [rdx+0x28]
   3b0ff:	test   rbp,rbp
   3b102:	jne    3b238 <sha256_process_bytes+0x158>
   3b108:	cmp    r13,0x3f
   3b10c:	jbe    3b21c <sha256_process_bytes+0x13c>
   3b112:	test   bl,0x3
   3b115:	je     3b200 <sha256_process_bytes+0x120>
   3b11b:	lea    rbp,[r12+0x30]
   3b120:	cmp    r13,0x40
   3b124:	je     3b3a8 <sha256_process_bytes+0x2c8>
   3b12a:	lea    rax,[r13-0x41]
   3b12e:	shr    rax,0x6
   3b132:	lea    r14,[rax+0x1]
   3b136:	mov    r15,rax
   3b139:	shl    r14,0x6
   3b13d:	add    r14,rbx
   3b140:	movdqu xmm0,XMMWORD PTR [rbx]
   3b144:	mov    rdx,r12
   3b147:	mov    esi,0x40
   3b14c:	mov    rdi,rbp
   3b14f:	add    rbx,0x40
   3b153:	movups XMMWORD PTR [rbp+0x0],xmm0
   3b157:	movdqu xmm1,XMMWORD PTR [rbx-0x30]
   3b15c:	movups XMMWORD PTR [rbp+0x10],xmm1
   3b160:	movdqu xmm2,XMMWORD PTR [rbx-0x20]
   3b165:	movups XMMWORD PTR [rbp+0x20],xmm2
   3b169:	movdqu xmm3,XMMWORD PTR [rbx-0x10]
   3b16e:	movups XMMWORD PTR [rbp+0x30],xmm3
   3b172:	call   38490 <sha256_process_block>
   3b177:	cmp    rbx,r14
   3b17a:	jne    3b140 <sha256_process_bytes+0x60>
   3b17c:	mov    rax,r15
   3b17f:	neg    rax
   3b182:	shl    rax,0x6
   3b186:	lea    r13,[r13+rax*1-0x40]
   3b18b:	mov    rbx,QWORD PTR [r12+0x28]
   3b190:	mov    eax,r13d
   3b193:	lea    rdx,[rbp+rbx*1+0x0]
   3b198:	cmp    r13d,0x8
   3b19c:	jae    3b288 <sha256_process_bytes+0x1a8>
   3b1a2:	test   r13b,0x4
   3b1a6:	jne    3b3b0 <sha256_process_bytes+0x2d0>
   3b1ac:	test   eax,eax
   3b1ae:	je     3b1be <sha256_process_bytes+0xde>
   3b1b0:	movzx  ecx,BYTE PTR [r14]
   3b1b4:	mov    BYTE PTR [rdx],cl
   3b1b6:	test   al,0x2
   3b1b8:	jne    3b3c3 <sha256_process_bytes+0x2e3>
   3b1be:	add    rbx,r13
   3b1c1:	cmp    rbx,0x3f
   3b1c5:	jbe    3b1eb <sha256_process_bytes+0x10b>
   3b1c7:	mov    rdx,r12
   3b1ca:	mov    esi,0x40
   3b1cf:	mov    rdi,rbp
   3b1d2:	sub    rbx,0x40
   3b1d6:	call   38490 <sha256_process_block>
   3b1db:	lea    rsi,[r12+0x70]
   3b1e0:	mov    rdx,rbx
   3b1e3:	mov    rdi,rbp
   3b1e6:	call   11220 <memcpy@plt>
   3b1eb:	mov    QWORD PTR [r12+0x28],rbx
   3b1f0:	add    rsp,0x18
   3b1f4:	pop    rbx
   3b1f5:	pop    rbp
   3b1f6:	pop    r12
   3b1f8:	pop    r13
   3b1fa:	pop    r14
   3b1fc:	pop    r15
   3b1fe:	ret    
   3b1ff:	nop
   3b200:	mov    rbp,r13
   3b203:	mov    rdi,rbx
   3b206:	mov    rdx,r12
   3b209:	and    r13d,0x3f
   3b20d:	and    rbp,0xffffffffffffffc0
   3b211:	mov    rsi,rbp
   3b214:	add    rbx,rbp
   3b217:	call   38490 <sha256_process_block>
   3b21c:	test   r13,r13
   3b21f:	jne    3b3d3 <sha256_process_bytes+0x2f3>
   3b225:	add    rsp,0x18
   3b229:	pop    rbx
   3b22a:	pop    rbp
   3b22b:	pop    r12
   3b22d:	pop    r13
   3b22f:	pop    r14
   3b231:	pop    r15
   3b233:	ret    
   3b234:	nop    DWORD PTR [rax+0x0]
   3b238:	mov    r14d,0x80
   3b23e:	lea    rcx,[rdx+0x30]
   3b242:	sub    r14,rbp
   3b245:	lea    rdi,[rcx+rbp*1]
   3b249:	mov    QWORD PTR [rsp+0x8],rcx
   3b24e:	cmp    r14,rsi
   3b251:	cmova  r14,rsi
   3b255:	mov    rsi,rbx
   3b258:	mov    rdx,r14
   3b25b:	call   11220 <memcpy@plt>
   3b260:	mov    r15,QWORD PTR [r12+0x28]
   3b265:	mov    rcx,QWORD PTR [rsp+0x8]
   3b26a:	add    r15,r14
   3b26d:	cmp    r15,0x40
   3b271:	mov    QWORD PTR [r12+0x28],r15
   3b276:	ja     3b2d8 <sha256_process_bytes+0x1f8>
   3b278:	add    rbx,r14
   3b27b:	sub    r13,r14
   3b27e:	jmp    3b108 <sha256_process_bytes+0x28>
   3b283:	nop    DWORD PTR [rax+rax*1+0x0]
   3b288:	mov    rax,QWORD PTR [r14]
   3b28b:	lea    rsi,[rdx+0x8]
   3b28f:	and    rsi,0xfffffffffffffff8
   3b293:	mov    QWORD PTR [rdx],rax
   3b296:	mov    eax,r13d
   3b299:	mov    rcx,QWORD PTR [r14+rax*1-0x8]
   3b29e:	mov    QWORD PTR [rdx+rax*1-0x8],rcx
   3b2a3:	sub    rdx,rsi
   3b2a6:	lea    eax,[r13+rdx*1+0x0]
   3b2ab:	sub    r14,rdx
   3b2ae:	and    eax,0xfffffff8
   3b2b1:	cmp    eax,0x8
   3b2b4:	jb     3b1be <sha256_process_bytes+0xde>
   3b2ba:	and    eax,0xfffffff8
   3b2bd:	xor    edx,edx
   3b2bf:	mov    ecx,edx
   3b2c1:	add    edx,0x8
   3b2c4:	mov    rdi,QWORD PTR [r14+rcx*1]
   3b2c8:	mov    QWORD PTR [rsi+rcx*1],rdi
   3b2cc:	cmp    edx,eax
   3b2ce:	jb     3b2bf <sha256_process_bytes+0x1df>
   3b2d0:	jmp    3b1be <sha256_process_bytes+0xde>
   3b2d5:	nop    DWORD PTR [rax]
   3b2d8:	mov    rsi,r15
   3b2db:	mov    rdi,rcx
   3b2de:	mov    rdx,r12
   3b2e1:	add    rbp,r14
   3b2e4:	and    rsi,0xffffffffffffffc0
   3b2e8:	and    r15d,0x3f
   3b2ec:	and    rbp,0xffffffffffffffc0
   3b2f0:	call   38490 <sha256_process_block>
   3b2f5:	mov    rcx,QWORD PTR [rsp+0x8]
   3b2fa:	mov    QWORD PTR [r12+0x28],r15
   3b2ff:	lea    rax,[rcx+rbp*1]
   3b303:	cmp    r15d,0x8
   3b307:	jae    3b340 <sha256_process_bytes+0x260>
   3b309:	test   r15b,0x4
   3b30d:	jne    3b38f <sha256_process_bytes+0x2af>
   3b313:	test   r15d,r15d
   3b316:	je     3b278 <sha256_process_bytes+0x198>
   3b31c:	movzx  edx,BYTE PTR [rax]
   3b31f:	mov    BYTE PTR [r12+0x30],dl
   3b324:	test   r15b,0x2
   3b328:	je     3b278 <sha256_process_bytes+0x198>
   3b32e:	movzx  eax,WORD PTR [r15+rax*1-0x2]
   3b334:	mov    WORD PTR [rcx+r15*1-0x2],ax
   3b33a:	jmp    3b278 <sha256_process_bytes+0x198>
   3b33f:	nop
   3b340:	mov    rdx,QWORD PTR [rax]
   3b343:	lea    rsi,[r12+0x38]
   3b348:	and    rsi,0xfffffffffffffff8
   3b34c:	mov    QWORD PTR [r12+0x30],rdx
   3b351:	mov    rdx,QWORD PTR [r15+rax*1-0x8]
   3b356:	mov    QWORD PTR [rcx+r15*1-0x8],rdx
   3b35b:	sub    rcx,rsi
   3b35e:	add    r15d,ecx
   3b361:	sub    rax,rcx
   3b364:	and    r15d,0xfffffff8
   3b368:	cmp    r15d,0x8
   3b36c:	jb     3b278 <sha256_process_bytes+0x198>
   3b372:	and    r15d,0xfffffff8
   3b376:	xor    edx,edx
   3b378:	mov    ecx,edx
   3b37a:	add    edx,0x8
   3b37d:	mov    rdi,QWORD PTR [rax+rcx*1]
   3b381:	mov    QWORD PTR [rsi+rcx*1],rdi
   3b385:	cmp    edx,r15d
   3b388:	jb     3b378 <sha256_process_bytes+0x298>
   3b38a:	jmp    3b278 <sha256_process_bytes+0x198>
   3b38f:	mov    edx,DWORD PTR [rax]
   3b391:	mov    DWORD PTR [r12+0x30],edx
   3b396:	mov    eax,DWORD PTR [r15+rax*1-0x4]
   3b39b:	mov    DWORD PTR [rcx+r15*1-0x4],eax
   3b3a0:	jmp    3b278 <sha256_process_bytes+0x198>
   3b3a5:	nop    DWORD PTR [rax]
   3b3a8:	mov    r14,rbx
   3b3ab:	jmp    3b18b <sha256_process_bytes+0xab>
   3b3b0:	mov    ecx,DWORD PTR [r14]
   3b3b3:	mov    DWORD PTR [rdx],ecx
   3b3b5:	mov    ecx,DWORD PTR [r14+rax*1-0x4]
   3b3ba:	mov    DWORD PTR [rdx+rax*1-0x4],ecx
   3b3be:	jmp    3b1be <sha256_process_bytes+0xde>
   3b3c3:	movzx  ecx,WORD PTR [r14+rax*1-0x2]
   3b3c9:	mov    WORD PTR [rdx+rax*1-0x2],cx
   3b3ce:	jmp    3b1be <sha256_process_bytes+0xde>
   3b3d3:	lea    rbp,[r12+0x30]
   3b3d8:	mov    r14,rbx
   3b3db:	jmp    3b18b <sha256_process_bytes+0xab>

000000000003b3e0 <sha256_buffer>:
   3b3e0:	endbr64 
   3b3e4:	push   r12
   3b3e6:	mov    r12,rdx
   3b3e9:	push   rbx
   3b3ea:	sub    rsp,0xc8
   3b3f1:	mov    rax,QWORD PTR fs:0x28
   3b3fa:	mov    QWORD PTR [rsp+0xb8],rax
   3b402:	movabs rax,0xbb67ae856a09e667
   3b40c:	mov    rbx,rsp
   3b40f:	mov    QWORD PTR [rsp+0x20],0x0
   3b418:	mov    QWORD PTR [rsp+0x28],0x0
   3b421:	mov    rdx,rbx
   3b424:	mov    QWORD PTR [rsp],rax
   3b428:	movabs rax,0xa54ff53a3c6ef372
   3b432:	mov    QWORD PTR [rsp+0x8],rax
   3b437:	movabs rax,0x9b05688c510e527f
   3b441:	mov    QWORD PTR [rsp+0x10],rax
   3b446:	movabs rax,0x5be0cd191f83d9ab
   3b450:	mov    QWORD PTR [rsp+0x18],rax
   3b455:	call   3b0e0 <sha256_process_bytes>
   3b45a:	mov    rdi,rbx
   3b45d:	call   3afa0 <sha256_conclude_ctx>
   3b462:	xor    edx,edx
   3b464:	nop    DWORD PTR [rax+0x0]
   3b468:	mov    ecx,DWORD PTR [rbx+rdx*1]
   3b46b:	bswap  ecx
   3b46d:	mov    DWORD PTR [r12+rdx*1],ecx
   3b471:	add    rdx,0x4
   3b475:	cmp    rdx,0x20
   3b479:	jne    3b468 <sha256_buffer+0x88>
   3b47b:	mov    rax,QWORD PTR [rsp+0xb8]
   3b483:	sub    rax,QWORD PTR fs:0x28
   3b48c:	jne    3b49c <sha256_buffer+0xbc>
   3b48e:	add    rsp,0xc8
   3b495:	mov    rax,r12
   3b498:	pop    rbx
   3b499:	pop    r12
   3b49b:	ret    
   3b49c:	call   11760 <__stack_chk_fail@plt>
   3b4a1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   3b4ac:	nop    DWORD PTR [rax+0x0]

000000000003b4b0 <sha224_buffer>:
   3b4b0:	endbr64 
   3b4b4:	push   r12
   3b4b6:	mov    r12,rdx
   3b4b9:	push   rbx
   3b4ba:	sub    rsp,0xc8
   3b4c1:	mov    rax,QWORD PTR fs:0x28
   3b4ca:	mov    QWORD PTR [rsp+0xb8],rax
   3b4d2:	movabs rax,0x367cd507c1059ed8
   3b4dc:	mov    rbx,rsp
   3b4df:	mov    QWORD PTR [rsp+0x20],0x0
   3b4e8:	mov    QWORD PTR [rsp+0x28],0x0
   3b4f1:	mov    rdx,rbx
   3b4f4:	mov    QWORD PTR [rsp],rax
   3b4f8:	movabs rax,0xf70e59393070dd17
   3b502:	mov    QWORD PTR [rsp+0x8],rax
   3b507:	movabs rax,0x68581511ffc00b31
   3b511:	mov    QWORD PTR [rsp+0x10],rax
   3b516:	movabs rax,0xbefa4fa464f98fa7
   3b520:	mov    QWORD PTR [rsp+0x18],rax
   3b525:	call   3b0e0 <sha256_process_bytes>
   3b52a:	mov    rdi,rbx
   3b52d:	call   3afa0 <sha256_conclude_ctx>
   3b532:	xor    edx,edx
   3b534:	nop    DWORD PTR [rax+0x0]
   3b538:	mov    ecx,DWORD PTR [rbx+rdx*1]
   3b53b:	bswap  ecx
   3b53d:	mov    DWORD PTR [r12+rdx*1],ecx
   3b541:	add    rdx,0x4
   3b545:	cmp    rdx,0x1c
   3b549:	jne    3b538 <sha224_buffer+0x88>
   3b54b:	mov    rax,QWORD PTR [rsp+0xb8]
   3b553:	sub    rax,QWORD PTR fs:0x28
   3b55c:	jne    3b56c <sha224_buffer+0xbc>
   3b55e:	add    rsp,0xc8
   3b565:	mov    rax,r12
   3b568:	pop    rbx
   3b569:	pop    r12
   3b56b:	ret    
   3b56c:	call   11760 <__stack_chk_fail@plt>
   3b571:	cs nop WORD PTR [rax+rax*1+0x0]
   3b57b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000003b580 <shaxxx_stream.constprop.0>:
   3b580:	push   r15
   3b582:	push   r14
   3b584:	mov    r14,rsi
   3b587:	push   r13
   3b589:	push   r12
   3b58b:	push   rbp
   3b58c:	mov    rbp,rdi
   3b58f:	mov    edi,0x8048
   3b594:	push   rbx
   3b595:	mov    rbx,rdx
   3b598:	sub    rsp,0x178
   3b59f:	mov    QWORD PTR [rsp+0x8],rcx
   3b5a4:	mov    rax,QWORD PTR fs:0x28
   3b5ad:	mov    QWORD PTR [rsp+0x168],rax
   3b5b5:	xor    eax,eax
   3b5b7:	call   11af0 <malloc@plt>
   3b5bc:	test   rax,rax
   3b5bf:	je     3b6a8 <shaxxx_stream.constprop.0+0x128>
   3b5c5:	lea    r15,[rsp+0x10]
   3b5ca:	mov    r12,rax
   3b5cd:	mov    rdi,r15
   3b5d0:	call   rbx
   3b5d2:	mov    ebx,0x8000
   3b5d7:	xor    r13d,r13d
   3b5da:	jmp    3b608 <shaxxx_stream.constprop.0+0x88>
   3b5dc:	nop    DWORD PTR [rax+0x0]
   3b5e0:	mov    rdx,rbx
   3b5e3:	lea    rdi,[r12+r13*1]
   3b5e7:	mov    rcx,rbp
   3b5ea:	mov    esi,0x1
   3b5ef:	sub    rdx,r13
   3b5f2:	call   11e20 <fread@plt>
   3b5f7:	add    r13,rax
   3b5fa:	cmp    r13,0x8000
   3b601:	je     3b658 <shaxxx_stream.constprop.0+0xd8>
   3b603:	test   rax,rax
   3b606:	je     3b670 <shaxxx_stream.constprop.0+0xf0>
   3b608:	mov    rdi,rbp
   3b60b:	call   11fc0 <feof@plt>
   3b610:	test   eax,eax
   3b612:	je     3b5e0 <shaxxx_stream.constprop.0+0x60>
   3b614:	test   r13,r13
   3b617:	jne    3b690 <shaxxx_stream.constprop.0+0x110>
   3b619:	mov    rsi,r14
   3b61c:	mov    rdi,r15
   3b61f:	mov    rax,QWORD PTR [rsp+0x8]
   3b624:	call   rax
   3b626:	mov    rdi,r12
   3b629:	call   10430 <free@plt>
   3b62e:	xor    eax,eax
   3b630:	mov    rdx,QWORD PTR [rsp+0x168]
   3b638:	sub    rdx,QWORD PTR fs:0x28
   3b641:	jne    3b6a3 <shaxxx_stream.constprop.0+0x123>
   3b643:	add    rsp,0x178
   3b64a:	pop    rbx
   3b64b:	pop    rbp
   3b64c:	pop    r12
   3b64e:	pop    r13
   3b650:	pop    r14
   3b652:	pop    r15
   3b654:	ret    
   3b655:	nop    DWORD PTR [rax]
   3b658:	mov    rdx,r15
   3b65b:	mov    esi,0x8000
   3b660:	mov    rdi,r12
   3b663:	call   3b870 <sha512_process_block>
   3b668:	jmp    3b5d7 <shaxxx_stream.constprop.0+0x57>
   3b66d:	nop    DWORD PTR [rax]
   3b670:	mov    rdi,rbp
   3b673:	call   12580 <ferror@plt>
   3b678:	test   eax,eax
   3b67a:	je     3b614 <shaxxx_stream.constprop.0+0x94>
   3b67c:	mov    rdi,r12
   3b67f:	call   10430 <free@plt>
   3b684:	mov    eax,0x1
   3b689:	jmp    3b630 <shaxxx_stream.constprop.0+0xb0>
   3b68b:	nop    DWORD PTR [rax+rax*1+0x0]
   3b690:	mov    rdx,r15
   3b693:	mov    rsi,r13
   3b696:	mov    rdi,r12
   3b699:	call   3f820 <sha512_process_bytes>
   3b69e:	jmp    3b619 <shaxxx_stream.constprop.0+0x99>
   3b6a3:	call   11760 <__stack_chk_fail@plt>
   3b6a8:	mov    eax,0x1
   3b6ad:	jmp    3b630 <shaxxx_stream.constprop.0+0xb0>
   3b6af:	nop

000000000003b6b0 <sha512_stream>:
   3b6b0:	endbr64 
   3b6b4:	lea    rcx,[rip+0x40e5]        # 3f7a0 <sha512_finish_ctx>
   3b6bb:	lea    rdx,[rip+0x2e]        # 3b6f0 <sha512_init_ctx>
   3b6c2:	jmp    3b580 <shaxxx_stream.constprop.0>
   3b6c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000003b6d0 <sha384_stream>:
   3b6d0:	endbr64 
   3b6d4:	lea    rcx,[rip+0x4105]        # 3f7e0 <sha384_finish_ctx>
   3b6db:	lea    rdx,[rip+0x9e]        # 3b780 <sha384_init_ctx>
   3b6e2:	jmp    3b580 <shaxxx_stream.constprop.0>
   3b6e7:	nop    WORD PTR [rax+rax*1+0x0]

000000000003b6f0 <sha512_init_ctx>:
   3b6f0:	endbr64 
   3b6f4:	movabs rax,0x6a09e667f3bcc908
   3b6fe:	mov    QWORD PTR [rdi+0x48],0x0
   3b706:	mov    QWORD PTR [rdi],rax
   3b709:	movabs rax,0xbb67ae8584caa73b
   3b713:	mov    QWORD PTR [rdi+0x8],rax
   3b717:	movabs rax,0x3c6ef372fe94f82b
   3b721:	mov    QWORD PTR [rdi+0x10],rax
   3b725:	movabs rax,0xa54ff53a5f1d36f1
   3b72f:	mov    QWORD PTR [rdi+0x18],rax
   3b733:	movabs rax,0x510e527fade682d1
   3b73d:	mov    QWORD PTR [rdi+0x20],rax
   3b741:	movabs rax,0x9b05688c2b3e6c1f
   3b74b:	mov    QWORD PTR [rdi+0x28],rax
   3b74f:	movabs rax,0x1f83d9abfb41bd6b
   3b759:	mov    QWORD PTR [rdi+0x30],rax
   3b75d:	movabs rax,0x5be0cd19137e2179
   3b767:	mov    QWORD PTR [rdi+0x38],rax
   3b76b:	mov    QWORD PTR [rdi+0x40],0x0
   3b773:	mov    QWORD PTR [rdi+0x50],0x0
   3b77b:	ret    
   3b77c:	nop    DWORD PTR [rax+0x0]

000000000003b780 <sha384_init_ctx>:
   3b780:	endbr64 
   3b784:	movabs rax,0xcbbb9d5dc1059ed8
   3b78e:	mov    QWORD PTR [rdi+0x48],0x0
   3b796:	mov    QWORD PTR [rdi],rax
   3b799:	movabs rax,0x629a292a367cd507
   3b7a3:	mov    QWORD PTR [rdi+0x8],rax
   3b7a7:	movabs rax,0x9159015a3070dd17
   3b7b1:	mov    QWORD PTR [rdi+0x10],rax
   3b7b5:	movabs rax,0x152fecd8f70e5939
   3b7bf:	mov    QWORD PTR [rdi+0x18],rax
   3b7c3:	movabs rax,0x67332667ffc00b31
   3b7cd:	mov    QWORD PTR [rdi+0x20],rax
   3b7d1:	movabs rax,0x8eb44a8768581511
   3b7db:	mov    QWORD PTR [rdi+0x28],rax
   3b7df:	movabs rax,0xdb0c2e0d64f98fa7
   3b7e9:	mov    QWORD PTR [rdi+0x30],rax
   3b7ed:	movabs rax,0x47b5481dbefa4fa4
   3b7f7:	mov    QWORD PTR [rdi+0x38],rax
   3b7fb:	mov    QWORD PTR [rdi+0x40],0x0
   3b803:	mov    QWORD PTR [rdi+0x50],0x0
   3b80b:	ret    
   3b80c:	nop    DWORD PTR [rax+0x0]

000000000003b810 <sha512_read_ctx>:
   3b810:	endbr64 
   3b814:	mov    rax,rsi
   3b817:	xor    edx,edx
   3b819:	nop    DWORD PTR [rax+0x0]
   3b820:	mov    rcx,QWORD PTR [rdi+rdx*1]
   3b824:	bswap  rcx
   3b827:	mov    QWORD PTR [rax+rdx*1],rcx
   3b82b:	add    rdx,0x8
   3b82f:	cmp    rdx,0x40
   3b833:	jne    3b820 <sha512_read_ctx+0x10>
   3b835:	ret    
   3b836:	cs nop WORD PTR [rax+rax*1+0x0]

000000000003b840 <sha384_read_ctx>:
   3b840:	endbr64 
   3b844:	mov    rax,rsi
   3b847:	xor    edx,edx
   3b849:	nop    DWORD PTR [rax+0x0]
   3b850:	mov    rcx,QWORD PTR [rdi+rdx*1]
   3b854:	bswap  rcx
   3b857:	mov    QWORD PTR [rax+rdx*1],rcx
   3b85b:	add    rdx,0x8
   3b85f:	cmp    rdx,0x30
   3b863:	jne    3b850 <sha384_read_ctx+0x10>
   3b865:	ret    
   3b866:	cs nop WORD PTR [rax+rax*1+0x0]

000000000003b870 <sha512_process_block>:
   3b870:	endbr64 
   3b874:	push   r15
   3b876:	mov    rax,rsi
   3b879:	mov    rsi,rdx
   3b87c:	mov    rcx,rdi
   3b87f:	push   r14
   3b881:	push   r13
   3b883:	push   r12
   3b885:	push   rbp
   3b886:	push   rbx
   3b887:	sub    rsp,0x178
   3b88e:	mov    QWORD PTR [rsp+0xc0],rdi
   3b896:	mov    QWORD PTR [rsp+0xd0],rdx
   3b89e:	mov    rdx,QWORD PTR fs:0x28
   3b8a7:	mov    QWORD PTR [rsp+0x168],rdx
   3b8af:	mov    rdx,rax
   3b8b2:	and    rdx,0xfffffffffffffff8
   3b8b6:	add    rdx,rdi
   3b8b9:	add    QWORD PTR [rsi+0x40],rax
   3b8bd:	lea    rax,[rsp+0xe0]
   3b8c5:	mov    QWORD PTR [rsp+0xc8],rdx
   3b8cd:	mov    rdi,rdx
   3b8d0:	mov    rdx,QWORD PTR [rsi]
   3b8d3:	mov    QWORD PTR [rsp+0xa8],rdx
   3b8db:	mov    rdx,QWORD PTR [rsi+0x8]
   3b8df:	mov    QWORD PTR [rsp+0x98],rdx
   3b8e7:	mov    rdx,QWORD PTR [rsi+0x10]
   3b8eb:	mov    QWORD PTR [rsp+0xa0],rdx
   3b8f3:	mov    rdx,QWORD PTR [rsi+0x18]
   3b8f7:	mov    QWORD PTR [rsp+0xb0],rdx
   3b8ff:	mov    rdx,QWORD PTR [rsi+0x20]
   3b903:	mov    QWORD PTR [rsp+0x70],rdx
   3b908:	mov    rdx,QWORD PTR [rsi+0x28]
   3b90c:	mov    QWORD PTR [rsp+0x78],rdx
   3b911:	mov    rdx,QWORD PTR [rsi+0x30]
   3b915:	mov    QWORD PTR [rsp+0x80],rdx
   3b91d:	mov    rdx,QWORD PTR [rsi+0x38]
   3b921:	mov    QWORD PTR [rsp+0xb8],rdx
   3b929:	adc    QWORD PTR [rsi+0x48],0x0
   3b92e:	mov    QWORD PTR [rsp+0xd8],rax
   3b936:	cmp    rcx,rdi
   3b939:	jae    3f6ae <sha512_process_block+0x3e3e>
   3b93f:	nop
   3b940:	mov    rcx,QWORD PTR [rsp+0xc0]
   3b948:	mov    rsi,QWORD PTR [rsp+0xd8]
   3b950:	xor    eax,eax
   3b952:	nop    WORD PTR [rax+rax*1+0x0]
   3b958:	mov    rdx,QWORD PTR [rcx+rax*1]
   3b95c:	bswap  rdx
   3b95f:	mov    QWORD PTR [rsi+rax*1],rdx
   3b963:	add    rax,0x8
   3b967:	cmp    rax,0x80
   3b96d:	jne    3b958 <sha512_process_block+0xe8>
   3b96f:	mov    rbp,QWORD PTR [rsp+0x70]
   3b974:	mov    r8,QWORD PTR [rsp+0x78]
   3b979:	mov    rsi,QWORD PTR [rsp+0x80]
   3b981:	mov    rbx,QWORD PTR [rsp+0xa8]
   3b989:	mov    rax,rbp
   3b98c:	mov    rdx,rbp
   3b98f:	mov    r14,QWORD PTR [rsp+0x98]
   3b997:	mov    r10,QWORD PTR [rsp+0xa0]
   3b99f:	ror    rdx,0x12
   3b9a3:	ror    rax,0xe
   3b9a7:	mov    rdi,rbx
   3b9aa:	mov    rcx,rbx
   3b9ad:	xor    rax,rdx
   3b9b0:	mov    rdx,rbp
   3b9b3:	rol    rdi,0x1e
   3b9b7:	and    rcx,r14
   3b9ba:	rol    rdx,0x17
   3b9be:	mov    r13,QWORD PTR [rsp+0xe8]
   3b9c6:	sub    QWORD PTR [rsp+0xc0],0xffffffffffffff80
   3b9cf:	xor    rax,rdx
   3b9d2:	movabs rdx,0x428a2f98d728ae22
   3b9dc:	add    rdx,QWORD PTR [rsp+0xe0]
   3b9e4:	add    rdx,QWORD PTR [rsp+0xb8]
   3b9ec:	add    rax,rdx
   3b9ef:	mov    rdx,r8
   3b9f2:	xor    rdx,rsi
   3b9f5:	and    rdx,rbp
   3b9f8:	xor    rdx,rsi
   3b9fb:	add    rax,rdx
   3b9fe:	mov    rdx,QWORD PTR [rsp+0xb0]
   3ba06:	lea    r11,[rax+rdx*1]
   3ba0a:	mov    rdx,rbx
   3ba0d:	ror    rdx,0x1c
   3ba11:	mov    r9,r11
   3ba14:	mov    r12,r11
   3ba17:	xor    rdi,rdx
   3ba1a:	mov    rdx,rbx
   3ba1d:	ror    r9,0x12
   3ba21:	rol    rdx,0x19
   3ba25:	xor    rdi,rdx
   3ba28:	mov    rdx,rbx
   3ba2b:	or     rdx,r14
   3ba2e:	and    rdx,r10
   3ba31:	or     rdx,rcx
   3ba34:	movabs rcx,0x7137449123ef65cd
   3ba3e:	add    rdi,rdx
   3ba41:	lea    rdx,[r13+rcx*1+0x0]
   3ba46:	mov    rcx,r11
   3ba49:	add    rdi,rax
   3ba4c:	mov    rax,rbp
   3ba4f:	add    rdx,rsi
   3ba52:	ror    rcx,0xe
   3ba56:	xor    rax,r8
   3ba59:	and    rax,r11
   3ba5c:	xor    rax,r8
   3ba5f:	add    rax,rdx
   3ba62:	mov    rdx,r9
   3ba65:	mov    r9,r14
   3ba68:	xor    rdx,rcx
   3ba6b:	mov    rcx,r11
   3ba6e:	rol    rcx,0x17
   3ba72:	xor    rdx,rcx
   3ba75:	mov    rcx,rdi
   3ba78:	ror    rcx,0x1c
   3ba7c:	add    rax,rdx
   3ba7f:	mov    rdx,rcx
   3ba82:	mov    rcx,rdi
   3ba85:	add    r10,rax
   3ba88:	rol    rcx,0x1e
   3ba8c:	mov    r15,r10
   3ba8f:	mov    rsi,rcx
   3ba92:	mov    rcx,rdi
   3ba95:	ror    r15,0x12
   3ba99:	xor    rsi,rdx
   3ba9c:	rol    rcx,0x19
   3baa0:	mov    rdx,rbx
   3baa3:	xor    rsi,rcx
   3baa6:	or     rdx,rdi
   3baa9:	mov    rcx,rbx
   3baac:	and    rcx,rdi
   3baaf:	and    rdx,r14
   3bab2:	mov    r14,QWORD PTR [rsp+0xf0]
   3baba:	or     rdx,rcx
   3babd:	movabs rcx,0xb5c0fbcfec4d3b2f
   3bac7:	add    rsi,rdx
   3baca:	lea    rdx,[r14+rcx*1]
   3bace:	mov    rcx,r10
   3bad1:	add    rsi,rax
   3bad4:	mov    rax,rbp
   3bad7:	add    rdx,r8
   3bada:	ror    rcx,0xe
   3bade:	xor    rax,r11
   3bae1:	and    rax,r10
   3bae4:	xor    rax,rbp
   3bae7:	add    rax,rdx
   3baea:	mov    rdx,r15
   3baed:	mov    r15,rsi
   3baf0:	xor    rdx,rcx
   3baf3:	mov    rcx,r10
   3baf6:	rol    r15,0x19
   3bafa:	rol    rcx,0x17
   3bafe:	xor    rdx,rcx
   3bb01:	mov    rcx,rsi
   3bb04:	ror    rcx,0x1c
   3bb08:	add    rax,rdx
   3bb0b:	mov    rdx,rcx
   3bb0e:	mov    rcx,rsi
   3bb11:	add    r9,rax
   3bb14:	rol    rcx,0x1e
   3bb18:	xor    rcx,rdx
   3bb1b:	xor    rcx,r15
   3bb1e:	mov    r15,rdi
   3bb21:	or     r15,rsi
   3bb24:	xor    r12,r10
   3bb27:	mov    rdx,r15
   3bb2a:	mov    r15,rdi
   3bb2d:	and    r15,rsi
   3bb30:	and    rdx,rbx
   3bb33:	or     rdx,r15
   3bb36:	mov    r15,QWORD PTR [rsp+0xf8]
   3bb3e:	add    rcx,rdx
   3bb41:	mov    rdx,r12
   3bb44:	movabs r12,0xe9b5dba58189dbbc
   3bb4e:	add    rcx,rax
   3bb51:	lea    rax,[r15+r12*1]
   3bb55:	mov    r12,r9
   3bb58:	and    rdx,r9
   3bb5b:	ror    r12,0xe
   3bb5f:	add    rax,rbp
   3bb62:	xor    rdx,r11
   3bb65:	mov    r8,r12
   3bb68:	mov    r12,r9
   3bb6b:	add    rdx,rax
   3bb6e:	ror    r12,0x12
   3bb72:	mov    rax,r12
   3bb75:	mov    r12,r9
   3bb78:	xor    rax,r8
   3bb7b:	rol    r12,0x17
   3bb7f:	xor    rax,r12
   3bb82:	mov    r12,rcx
   3bb85:	ror    r12,0x1c
   3bb89:	add    rdx,rax
   3bb8c:	mov    r8,r12
   3bb8f:	mov    r12,rcx
   3bb92:	add    rbx,rdx
   3bb95:	rol    r12,0x1e
   3bb99:	mov    rax,r12
   3bb9c:	mov    r12,rcx
   3bb9f:	xor    rax,r8
   3bba2:	rol    r12,0x19
   3bba6:	xor    rax,r12
   3bba9:	mov    r12,rsi
   3bbac:	or     r12,rcx
   3bbaf:	mov    r8,r12
   3bbb2:	mov    r12,rsi
   3bbb5:	and    r12,rcx
   3bbb8:	and    r8,rdi
   3bbbb:	or     r8,r12
   3bbbe:	mov    r12,r10
   3bbc1:	xor    r12,r9
   3bbc4:	add    rax,r8
   3bbc7:	mov    r8,r12
   3bbca:	add    rax,rdx
   3bbcd:	movabs r12,0x3956c25bf348b538
   3bbd7:	and    r8,rbx
   3bbda:	xor    r8,r10
   3bbdd:	add    r12,QWORD PTR [rsp+0x100]
   3bbe5:	mov    rdx,r12
   3bbe8:	mov    r12,rbx
   3bbeb:	add    rdx,r11
   3bbee:	ror    r12,0x12
   3bbf2:	mov    r11,rbx
   3bbf5:	add    r8,rdx
   3bbf8:	ror    r11,0xe
   3bbfc:	mov    rdx,r12
   3bbff:	mov    r12,rax
   3bc02:	xor    rdx,r11
   3bc05:	mov    r11,rbx
   3bc08:	rol    r12,0x1e
   3bc0c:	rol    r11,0x17
   3bc10:	xor    rdx,r11
   3bc13:	mov    r11,rax
   3bc16:	add    r8,rdx
   3bc19:	ror    r11,0x1c
   3bc1d:	mov    rdx,r12
   3bc20:	mov    r12,rcx
   3bc23:	xor    rdx,r11
   3bc26:	mov    r11,rax
   3bc29:	and    r12,rax
   3bc2c:	add    rdi,r8
   3bc2f:	rol    r11,0x19
   3bc33:	xor    rdx,r11
   3bc36:	mov    r11,rcx
   3bc39:	or     r11,rax
   3bc3c:	and    r11,rsi
   3bc3f:	or     r11,r12
   3bc42:	mov    r12,rdi
   3bc45:	add    rdx,r11
   3bc48:	mov    r11,r9
   3bc4b:	ror    r12,0x12
   3bc4f:	xor    r11,rbx
   3bc52:	add    rdx,r8
   3bc55:	mov    r8,r11
   3bc58:	movabs r11,0x59f111f1b605d019
   3bc62:	add    r11,QWORD PTR [rsp+0x108]
   3bc6a:	and    r8,rdi
   3bc6d:	add    r11,r10
   3bc70:	mov    r10,r12
   3bc73:	mov    r12,rdx
   3bc76:	xor    r8,r9
   3bc79:	add    r8,r11
   3bc7c:	mov    r11,rdi
   3bc7f:	ror    r11,0xe
   3bc83:	xor    r10,r11
   3bc86:	mov    r11,rdi
   3bc89:	rol    r11,0x17
   3bc8d:	xor    r10,r11
   3bc90:	mov    r11,rdx
   3bc93:	add    r8,r10
   3bc96:	rol    r12,0x1e
   3bc9a:	ror    r11,0x1c
   3bc9e:	mov    r10,r12
   3bca1:	mov    r12,rax
   3bca4:	add    rsi,r8
   3bca7:	xor    r10,r11
   3bcaa:	mov    r11,rdx
   3bcad:	and    r12,rdx
   3bcb0:	rol    r11,0x19
   3bcb4:	xor    r10,r11
   3bcb7:	mov    r11,rax
   3bcba:	or     r11,rdx
   3bcbd:	and    r11,rcx
   3bcc0:	or     r11,r12
   3bcc3:	mov    r12,rsi
   3bcc6:	add    r10,r11
   3bcc9:	mov    r11,rbx
   3bccc:	ror    r12,0x12
   3bcd0:	xor    r11,rdi
   3bcd3:	add    r10,r8
   3bcd6:	mov    r8,r11
   3bcd9:	movabs r11,0x923f82a4af194f9b
   3bce3:	add    r11,QWORD PTR [rsp+0x110]
   3bceb:	and    r8,rsi
   3bcee:	add    r11,r9
   3bcf1:	mov    r9,r12
   3bcf4:	mov    r12,r10
   3bcf7:	xor    r8,rbx
   3bcfa:	rol    r12,0x1e
   3bcfe:	add    r8,r11
   3bd01:	mov    r11,rsi
   3bd04:	ror    r11,0xe
   3bd08:	xor    r9,r11
   3bd0b:	mov    r11,rsi
   3bd0e:	rol    r11,0x17
   3bd12:	xor    r9,r11
   3bd15:	mov    r11,r10
   3bd18:	add    r8,r9
   3bd1b:	ror    r11,0x1c
   3bd1f:	mov    r9,r12
   3bd22:	mov    r12,rdx
   3bd25:	xor    r9,r11
   3bd28:	mov    r11,r10
   3bd2b:	add    rcx,r8
   3bd2e:	rol    r11,0x19
   3bd32:	xor    r9,r11
   3bd35:	mov    r11,rdx
   3bd38:	or     r11,r10
   3bd3b:	and    r11,rax
   3bd3e:	and    r12,r10
   3bd41:	or     r11,r12
   3bd44:	movabs r12,0xab1c5ed5da6d8118
   3bd4e:	add    r12,QWORD PTR [rsp+0x118]
   3bd56:	add    r9,r11
   3bd59:	mov    r11,rdi
   3bd5c:	add    r9,r8
   3bd5f:	mov    r8,r12
   3bd62:	mov    r12,rcx
   3bd65:	xor    r11,rsi
   3bd68:	ror    r12,0xe
   3bd6c:	add    r8,rbx
   3bd6f:	and    r11,rcx
   3bd72:	mov    rbx,r12
   3bd75:	mov    r12,rcx
   3bd78:	xor    r11,rdi
   3bd7b:	ror    r12,0x12
   3bd7f:	add    r11,r8
   3bd82:	mov    r8,r12
   3bd85:	mov    r12,rcx
   3bd88:	xor    r8,rbx
   3bd8b:	rol    r12,0x17
   3bd8f:	xor    r8,r12
   3bd92:	mov    r12,r9
   3bd95:	ror    r12,0x1c
   3bd99:	add    r11,r8
   3bd9c:	mov    rbx,r12
   3bd9f:	mov    r12,r9
   3bda2:	add    rax,r11
   3bda5:	rol    r12,0x1e
   3bda9:	mov    r8,r12
   3bdac:	mov    r12,r9
   3bdaf:	xor    r8,rbx
   3bdb2:	rol    r12,0x19
   3bdb6:	xor    r8,r12
   3bdb9:	mov    r12,r10
   3bdbc:	or     r12,r9
   3bdbf:	mov    rbx,r12
   3bdc2:	mov    r12,r10
   3bdc5:	and    r12,r9
   3bdc8:	and    rbx,rdx
   3bdcb:	or     rbx,r12
   3bdce:	movabs r12,0xd807aa98a3030242
   3bdd8:	add    r8,rbx
   3bddb:	add    r8,r11
   3bdde:	mov    r11,rsi
   3bde1:	xor    r11,rcx
   3bde4:	and    r11,rax
   3bde7:	xor    r11,rsi
   3bdea:	add    r12,QWORD PTR [rsp+0x120]
   3bdf2:	mov    rbx,r12
   3bdf5:	mov    r12,rax
   3bdf8:	add    rbx,rdi
   3bdfb:	mov    rdi,rax
   3bdfe:	rol    r12,0x17
   3be02:	ror    rdi,0xe
   3be06:	add    r11,rbx
   3be09:	mov    rbx,rdi
   3be0c:	mov    rdi,rax
   3be0f:	ror    rdi,0x12
   3be13:	xor    rdi,rbx
   3be16:	xor    rdi,r12
   3be19:	mov    r12,r8
   3be1c:	add    r11,rdi
   3be1f:	mov    rdi,r8
   3be22:	rol    r12,0x19
   3be26:	ror    rdi,0x1c
   3be2a:	add    rdx,r11
   3be2d:	mov    rbx,rdi
   3be30:	mov    rdi,r8
   3be33:	rol    rdi,0x1e
   3be37:	xor    rdi,rbx
   3be3a:	xor    rdi,r12
   3be3d:	mov    r12,r9
   3be40:	or     r12,r8
   3be43:	mov    rbx,r12
   3be46:	mov    r12,r9
   3be49:	and    r12,r8
   3be4c:	and    rbx,r10
   3be4f:	or     rbx,r12
   3be52:	movabs r12,0x12835b0145706fbe
   3be5c:	add    r12,QWORD PTR [rsp+0x128]
   3be64:	add    rdi,rbx
   3be67:	mov    rbx,r12
   3be6a:	mov    r12,rdx
   3be6d:	add    rdi,r11
   3be70:	add    rbx,rsi
   3be73:	mov    r11,rcx
   3be76:	mov    rsi,rdx
   3be79:	ror    r12,0xe
   3be7d:	xor    r11,rax
   3be80:	ror    rsi,0x12
   3be84:	and    r11,rdx
   3be87:	xor    rsi,r12
   3be8a:	mov    r12,rdx
   3be8d:	xor    r11,rcx
   3be90:	rol    r12,0x17
   3be94:	xor    rsi,r12
   3be97:	add    r11,rbx
   3be9a:	mov    r12,rdi
   3be9d:	add    r11,rsi
   3bea0:	mov    rsi,rdi
   3bea3:	ror    r12,0x1c
   3bea7:	rol    rsi,0x1e
   3beab:	add    r10,r11
   3beae:	xor    rsi,r12
   3beb1:	mov    r12,rdi
   3beb4:	rol    r12,0x19
   3beb8:	xor    rsi,r12
   3bebb:	mov    r12,r8
   3bebe:	or     r12,rdi
   3bec1:	mov    rbx,r12
   3bec4:	mov    r12,r8
   3bec7:	and    r12,rdi
   3beca:	and    rbx,r9
   3becd:	or     rbx,r12
   3bed0:	mov    r12,r10
   3bed3:	add    rsi,rbx
   3bed6:	rol    r12,0x17
   3beda:	add    rsi,r11
   3bedd:	mov    r11,rax
   3bee0:	xor    r11,rdx
   3bee3:	mov    rbx,r11
   3bee6:	movabs r11,0x243185be4ee4b28c
   3bef0:	add    r11,QWORD PTR [rsp+0x130]
   3bef8:	and    rbx,r10
   3befb:	add    r11,rcx
   3befe:	mov    rcx,r10
   3bf01:	xor    rbx,rax
   3bf04:	ror    rcx,0xe
   3bf08:	add    r11,rbx
   3bf0b:	mov    rbx,rcx
   3bf0e:	mov    rcx,r10
   3bf11:	ror    rcx,0x12
   3bf15:	xor    rcx,rbx
   3bf18:	xor    rcx,r12
   3bf1b:	mov    r12,rsi
   3bf1e:	add    r11,rcx
   3bf21:	mov    rcx,rsi
   3bf24:	rol    r12,0x19
   3bf28:	ror    rcx,0x1c
   3bf2c:	add    r9,r11
   3bf2f:	mov    rbx,rcx
   3bf32:	mov    rcx,rsi
   3bf35:	rol    rcx,0x1e
   3bf39:	xor    rcx,rbx
   3bf3c:	xor    rcx,r12
   3bf3f:	mov    r12,rdi
   3bf42:	or     r12,rsi
   3bf45:	mov    rbx,r12
   3bf48:	mov    r12,rdi
   3bf4b:	and    rbx,r8
   3bf4e:	and    r12,rsi
   3bf51:	or     rbx,r12
   3bf54:	mov    r12,r9
   3bf57:	add    rcx,rbx
   3bf5a:	ror    r12,0xe
   3bf5e:	add    rcx,r11
   3bf61:	mov    r11,rdx
   3bf64:	xor    r11,r10
   3bf67:	mov    rbx,r11
   3bf6a:	movabs r11,0x550c7dc3d5ffb4e2
   3bf74:	add    r11,QWORD PTR [rsp+0x138]
   3bf7c:	and    rbx,r9
   3bf7f:	add    r11,rax
   3bf82:	xor    rbx,rdx
   3bf85:	add    r11,rbx
   3bf88:	mov    rbx,r12
   3bf8b:	mov    r12,r9
   3bf8e:	ror    r12,0x12
   3bf92:	mov    rax,r12
   3bf95:	mov    r12,r9
   3bf98:	xor    rax,rbx
   3bf9b:	rol    r12,0x17
   3bf9f:	xor    rax,r12
   3bfa2:	mov    r12,rcx
   3bfa5:	ror    r12,0x1c
   3bfa9:	add    r11,rax
   3bfac:	mov    rbx,r12
   3bfaf:	mov    r12,rcx
   3bfb2:	add    r8,r11
   3bfb5:	rol    r12,0x1e
   3bfb9:	mov    rax,r12
   3bfbc:	mov    r12,rcx
   3bfbf:	xor    rax,rbx
   3bfc2:	rol    r12,0x19
   3bfc6:	xor    rax,r12
   3bfc9:	mov    r12,rsi
   3bfcc:	or     r12,rcx
   3bfcf:	mov    rbx,r12
   3bfd2:	mov    r12,rsi
   3bfd5:	and    r12,rcx
   3bfd8:	and    rbx,rdi
   3bfdb:	or     rbx,r12
   3bfde:	mov    r12,r8
   3bfe1:	add    rax,rbx
   3bfe4:	add    rax,r11
   3bfe7:	mov    r11,r10
   3bfea:	xor    r11,r9
   3bfed:	mov    rbp,rax
   3bff0:	mov    rbx,r11
   3bff3:	movabs r11,0x72be5d74f27b896f
   3bffd:	and    rbx,r8
   3c000:	xor    rbx,r10
   3c003:	add    r11,QWORD PTR [rsp+0x140]
   3c00b:	ror    r12,0xe
   3c00f:	add    r11,rdx
   3c012:	add    r11,rbx
   3c015:	mov    rbx,r12
   3c018:	mov    r12,r8
   3c01b:	ror    r12,0x12
   3c01f:	mov    rdx,r12
   3c022:	mov    r12,r8
   3c025:	xor    rdx,rbx
   3c028:	rol    r12,0x17
   3c02c:	xor    rdx,r12
   3c02f:	mov    r12,rax
   3c032:	ror    r12,0x1c
   3c036:	add    r11,rdx
   3c039:	mov    rbx,r12
   3c03c:	mov    r12,rax
   3c03f:	add    rdi,r11
   3c042:	rol    r12,0x1e
   3c046:	mov    rdx,r12
   3c049:	mov    r12,rax
   3c04c:	xor    rdx,rbx
   3c04f:	rol    r12,0x19
   3c053:	xor    rdx,r12
   3c056:	mov    r12,rcx
   3c059:	or     r12,rax
   3c05c:	mov    rbx,r12
   3c05f:	mov    r12,rcx
   3c062:	and    r12,rax
   3c065:	and    rbx,rsi
   3c068:	or     rbx,r12
   3c06b:	mov    r12,rdi
   3c06e:	add    rdx,rbx
   3c071:	rol    r12,0x17
   3c075:	add    rdx,r11
   3c078:	mov    r11,r9
   3c07b:	xor    r11,r8
   3c07e:	mov    rbx,r11
   3c081:	movabs r11,0x80deb1fe3b1696b1
   3c08b:	add    r11,QWORD PTR [rsp+0x148]
   3c093:	and    rbx,rdi
   3c096:	add    r10,r11
   3c099:	mov    r11,rdi
   3c09c:	xor    rbx,r9
   3c09f:	ror    r11,0xe
   3c0a3:	add    r10,rbx
   3c0a6:	mov    rbx,r11
   3c0a9:	mov    r11,rdi
   3c0ac:	ror    r11,0x12
   3c0b0:	xor    r11,rbx
   3c0b3:	xor    r11,r12
   3c0b6:	mov    r12,rdx
   3c0b9:	add    r10,r11
   3c0bc:	mov    r11,rdx
   3c0bf:	rol    r12,0x1e
   3c0c3:	and    rbp,rdx
   3c0c6:	ror    r11,0x1c
   3c0ca:	add    rsi,r10
   3c0cd:	xor    r12,r11
   3c0d0:	mov    r11,rdx
   3c0d3:	rol    r11,0x19
   3c0d7:	xor    r12,r11
   3c0da:	mov    r11,rax
   3c0dd:	or     r11,rdx
   3c0e0:	and    r11,rcx
   3c0e3:	or     r11,rbp
   3c0e6:	add    r12,r11
   3c0e9:	mov    r11,r8
   3c0ec:	xor    r11,rdi
   3c0ef:	add    r12,r10
   3c0f2:	movabs r10,0x9bdc06a725c71235
   3c0fc:	add    r10,QWORD PTR [rsp+0x150]
   3c104:	and    r11,rsi
   3c107:	add    r9,r10
   3c10a:	mov    r10,rsi
   3c10d:	xor    r11,r8
   3c110:	ror    r10,0x12
   3c114:	add    r9,r11
   3c117:	mov    r11,rsi
   3c11a:	ror    r11,0xe
   3c11e:	xor    r10,r11
   3c121:	mov    r11,rsi
   3c124:	rol    r11,0x17
   3c128:	xor    r10,r11
   3c12b:	mov    r11,r12
   3c12e:	ror    r11,0x1c
   3c132:	add    r9,r10
   3c135:	mov    r10,r11
   3c138:	mov    r11,r12
   3c13b:	add    rcx,r9
   3c13e:	rol    r11,0x1e
   3c142:	mov    rbp,r11
   3c145:	mov    r11,r12
   3c148:	xor    rbp,r10
   3c14b:	rol    r11,0x19
   3c14f:	xor    rbp,r11
   3c152:	mov    r11,rdx
   3c155:	or     r11,r12
   3c158:	mov    r10,r11
   3c15b:	mov    r11,rdx
   3c15e:	and    r10,rax
   3c161:	and    r11,r12
   3c164:	or     r10,r11
   3c167:	mov    r11,rdi
   3c16a:	xor    r11,rsi
   3c16d:	add    rbp,r10
   3c170:	mov    r10,r11
   3c173:	add    rbp,r9
   3c176:	mov    r11,rcx
   3c179:	movabs r9,0xc19bf174cf692694
   3c183:	and    r10,rcx
   3c186:	add    r9,QWORD PTR [rsp+0x158]
   3c18e:	ror    r11,0xe
   3c192:	xor    r10,rdi
   3c195:	add    r9,r8
   3c198:	add    r9,r10
   3c19b:	mov    r10,r11
   3c19e:	mov    r11,rcx
   3c1a1:	ror    r11,0x12
   3c1a5:	mov    r8,r11
   3c1a8:	mov    r11,rcx
   3c1ab:	xor    r8,r10
   3c1ae:	rol    r11,0x17
   3c1b2:	xor    r8,r11
   3c1b5:	mov    r11,rbp
   3c1b8:	ror    r11,0x1c
   3c1bc:	add    r9,r8
   3c1bf:	mov    r10,r11
   3c1c2:	mov    r11,rbp
   3c1c5:	add    rax,r9
   3c1c8:	rol    r11,0x1e
   3c1cc:	mov    r8,r11
   3c1cf:	mov    r11,rbp
   3c1d2:	xor    r8,r10
   3c1d5:	rol    r11,0x19
   3c1d9:	xor    r8,r11
   3c1dc:	mov    r11,r12
   3c1df:	or     r11,rbp
   3c1e2:	mov    r10,r11
   3c1e5:	mov    r11,r12
   3c1e8:	and    r11,rbp
   3c1eb:	and    r10,rdx
   3c1ee:	or     r10,r11
   3c1f1:	mov    r11,QWORD PTR [rsp+0x150]
   3c1f9:	add    r8,r10
   3c1fc:	ror    r11,0x13
   3c200:	add    r8,r9
   3c203:	mov    r10,r11
   3c206:	mov    r11,QWORD PTR [rsp+0x150]
   3c20e:	rol    r11,0x3
   3c212:	mov    r9,r11
   3c215:	mov    r11,QWORD PTR [rsp+0x150]
   3c21d:	xor    r9,r10
   3c220:	shr    r11,0x6
   3c224:	mov    rbx,r11
   3c227:	mov    r11,QWORD PTR [rsp+0xe0]
   3c22f:	add    r11,QWORD PTR [rsp+0x128]
   3c237:	xor    rbx,r9
   3c23a:	add    rbx,r11
   3c23d:	mov    r11,r13
   3c240:	ror    r11,1
   3c243:	mov    r10,r11
   3c246:	mov    r11,r13
   3c249:	ror    r11,0x8
   3c24d:	mov    r9,r11
   3c250:	mov    r11,r13
   3c253:	xor    r9,r10
   3c256:	shr    r11,0x7
   3c25a:	xor    r9,r11
   3c25d:	mov    r11,rsi
   3c260:	add    rbx,r9
   3c263:	xor    r11,rcx
   3c266:	movabs r9,0xe49b69c19ef14ad2
   3c270:	add    r9,rbx
   3c273:	mov    r10,r11
   3c276:	mov    r11,rax
   3c279:	and    r10,rax
   3c27c:	add    r9,rdi
   3c27f:	mov    rdi,rax
   3c282:	rol    r11,0x17
   3c286:	xor    r10,rsi
   3c289:	ror    rdi,0xe
   3c28d:	add    r9,r10
   3c290:	mov    r10,rdi
   3c293:	mov    rdi,rax
   3c296:	ror    rdi,0x12
   3c29a:	xor    rdi,r10
   3c29d:	xor    rdi,r11
   3c2a0:	mov    r11,r8
   3c2a3:	add    r9,rdi
   3c2a6:	mov    rdi,r8
   3c2a9:	rol    r11,0x19
   3c2ad:	ror    rdi,0x1c
   3c2b1:	add    rdx,r9
   3c2b4:	mov    r10,rdi
   3c2b7:	mov    rdi,r8
   3c2ba:	rol    rdi,0x1e
   3c2be:	xor    rdi,r10
   3c2c1:	xor    rdi,r11
   3c2c4:	mov    r11,rbp
   3c2c7:	or     r11,r8
   3c2ca:	mov    r10,r11
   3c2cd:	mov    r11,rbp
   3c2d0:	and    r11,r8
   3c2d3:	and    r10,r12
   3c2d6:	or     r10,r11
   3c2d9:	mov    r11,QWORD PTR [rsp+0x158]
   3c2e1:	add    rdi,r10
   3c2e4:	ror    r11,0x13
   3c2e8:	add    rdi,r9
   3c2eb:	mov    r10,r11
   3c2ee:	mov    r11,QWORD PTR [rsp+0x158]
   3c2f6:	add    r13,QWORD PTR [rsp+0x130]
   3c2fe:	rol    r11,0x3
   3c302:	mov    r9,r11
   3c305:	mov    r11,QWORD PTR [rsp+0x158]
   3c30d:	xor    r9,r10
   3c310:	shr    r11,0x6
   3c314:	xor    r11,r9
   3c317:	add    r11,r13
   3c31a:	mov    r13,r14
   3c31d:	ror    r13,1
   3c320:	mov    r10,r13
   3c323:	mov    r13,r14
   3c326:	ror    r13,0x8
   3c32a:	mov    r9,r13
   3c32d:	mov    r13,r14
   3c330:	xor    r9,r10
   3c333:	shr    r13,0x7
   3c337:	xor    r9,r13
   3c33a:	mov    r13,rcx
   3c33d:	add    r11,r9
   3c340:	xor    r13,rax
   3c343:	movabs r9,0xefbe4786384f25e3
   3c34d:	add    r9,r11
   3c350:	mov    r10,r13
   3c353:	mov    r13,rdx
   3c356:	add    r9,rsi
   3c359:	mov    rsi,rdx
   3c35c:	ror    r13,0xe
   3c360:	and    r10,rdx
   3c363:	ror    rsi,0x12
   3c367:	xor    r10,rcx
   3c36a:	xor    rsi,r13
   3c36d:	mov    r13,rdx
   3c370:	add    r9,r10
   3c373:	rol    r13,0x17
   3c377:	xor    rsi,r13
   3c37a:	mov    r13,rdi
   3c37d:	add    r9,rsi
   3c380:	mov    rsi,rdi
   3c383:	ror    r13,0x1c
   3c387:	rol    rsi,0x1e
   3c38b:	add    r12,r9
   3c38e:	xor    rsi,r13
   3c391:	mov    r13,rdi
   3c394:	rol    r13,0x19
   3c398:	xor    rsi,r13
   3c39b:	mov    r13,r8
   3c39e:	or     r13,rdi
   3c3a1:	mov    r10,r13
   3c3a4:	mov    r13,r8
   3c3a7:	and    r13,rdi
   3c3aa:	and    r10,rbp
   3c3ad:	or     r10,r13
   3c3b0:	mov    r13,r15
   3c3b3:	ror    r13,1
   3c3b6:	add    rsi,r10
   3c3b9:	mov    r10,r13
   3c3bc:	mov    r13,r15
   3c3bf:	add    rsi,r9
   3c3c2:	ror    r13,0x8
   3c3c6:	mov    r9,r13
   3c3c9:	mov    r13,r15
   3c3cc:	shr    r13,0x7
   3c3d0:	xor    r9,r10
   3c3d3:	mov    r10,r13
   3c3d6:	mov    r13,QWORD PTR [rsp+0x138]
   3c3de:	xor    r10,r9
   3c3e1:	mov    r9,rbx
   3c3e4:	add    r13,r14
   3c3e7:	rol    r9,0x3
   3c3eb:	mov    r14,rdi
   3c3ee:	add    r10,r13
   3c3f1:	mov    r13,rbx
   3c3f4:	ror    r13,0x13
   3c3f8:	xor    r9,r13
   3c3fb:	mov    r13,rbx
   3c3fe:	shr    r13,0x6
   3c402:	xor    r9,r13
   3c405:	mov    r13,rax
   3c408:	add    r10,r9
   3c40b:	xor    r13,rdx
   3c40e:	movabs r9,0xfc19dc68b8cd5b5
   3c418:	and    r13,r12
   3c41b:	add    r9,r10
   3c41e:	xor    r13,rax
   3c421:	add    r9,rcx
   3c424:	mov    rcx,r12
   3c427:	add    r9,r13
   3c42a:	mov    r13,r12
   3c42d:	ror    rcx,0x12
   3c431:	ror    r13,0xe
   3c435:	xor    rcx,r13
   3c438:	mov    r13,r12
   3c43b:	rol    r13,0x17
   3c43f:	xor    rcx,r13
   3c442:	mov    r13,rsi
   3c445:	add    r9,rcx
   3c448:	mov    rcx,rsi
   3c44b:	add    rbp,r9
   3c44e:	ror    r13,0x1c
   3c452:	and    r14,rsi
   3c455:	rol    rcx,0x1e
   3c459:	xor    rcx,r13
   3c45c:	mov    r13,rsi
   3c45f:	rol    r13,0x19
   3c463:	xor    rcx,r13
   3c466:	mov    r13,rdi
   3c469:	or     r13,rsi
   3c46c:	and    r13,r8
   3c46f:	or     r13,r14
   3c472:	add    rcx,r13
   3c475:	mov    r13,QWORD PTR [rsp+0x100]
   3c47d:	add    rcx,r9
   3c480:	ror    r13,1
   3c483:	mov    r9,r13
   3c486:	mov    r13,QWORD PTR [rsp+0x100]
   3c48e:	ror    r13,0x8
   3c492:	xor    r13,r9
   3c495:	mov    r9,QWORD PTR [rsp+0x100]
   3c49d:	shr    r9,0x7
   3c4a1:	xor    r9,r13
   3c4a4:	mov    r13,QWORD PTR [rsp+0x140]
   3c4ac:	add    r13,r15
   3c4af:	mov    r15,r11
   3c4b2:	add    r9,r13
   3c4b5:	mov    r13,r11
   3c4b8:	shr    r15,0x6
   3c4bc:	ror    r13,0x13
   3c4c0:	mov    r14,r13
   3c4c3:	mov    r13,r11
   3c4c6:	rol    r13,0x3
   3c4ca:	xor    r13,r14
   3c4cd:	xor    r13,r15
   3c4d0:	mov    r15,rbp
   3c4d3:	add    r9,r13
   3c4d6:	mov    r13,rdx
   3c4d9:	ror    r15,0xe
   3c4dd:	xor    r13,r12
   3c4e0:	mov    r14,r13
   3c4e3:	movabs r13,0x240ca1cc77ac9c65
   3c4ed:	and    r14,rbp
   3c4f0:	add    r13,r9
   3c4f3:	xor    r14,rdx
   3c4f6:	add    r13,rax
   3c4f9:	add    r13,r14
   3c4fc:	mov    r14,r15
   3c4ff:	mov    r15,rbp
   3c502:	ror    r15,0x12
   3c506:	mov    rax,r15
   3c509:	mov    r15,rbp
   3c50c:	xor    rax,r14
   3c50f:	rol    r15,0x17
   3c513:	xor    rax,r15
   3c516:	mov    r15,rcx
   3c519:	ror    r15,0x1c
   3c51d:	add    r13,rax
   3c520:	mov    r14,r15
   3c523:	mov    r15,rcx
   3c526:	add    r8,r13
   3c529:	rol    r15,0x1e
   3c52d:	mov    rax,r15
   3c530:	mov    r15,rcx
   3c533:	xor    rax,r14
   3c536:	rol    r15,0x19
   3c53a:	xor    rax,r15
   3c53d:	mov    r15,rsi
   3c540:	or     r15,rcx
   3c543:	mov    r14,r15
   3c546:	mov    r15,rsi
   3c549:	and    r15,rcx
   3c54c:	and    r14,rdi
   3c54f:	or     r14,r15
   3c552:	mov    r15,QWORD PTR [rsp+0x108]
   3c55a:	add    rax,r14
   3c55d:	add    rax,r13
   3c560:	mov    r13,QWORD PTR [rsp+0x108]
   3c568:	shr    r15,0x7
   3c56c:	ror    r13,1
   3c56f:	mov    r14,r13
   3c572:	mov    r13,QWORD PTR [rsp+0x108]
   3c57a:	ror    r13,0x8
   3c57e:	xor    r13,r14
   3c581:	mov    r14,r15
   3c584:	mov    r15,r10
   3c587:	xor    r14,r13
   3c58a:	mov    r13,QWORD PTR [rsp+0x100]
   3c592:	ror    r15,0x13
   3c596:	add    r13,QWORD PTR [rsp+0x148]
   3c59e:	add    r14,r13
   3c5a1:	mov    r13,r10
   3c5a4:	rol    r13,0x3
   3c5a8:	xor    r13,r15
   3c5ab:	mov    r15,r10
   3c5ae:	shr    r15,0x6
   3c5b2:	xor    r13,r15
   3c5b5:	lea    r15,[r14+r13*1]
   3c5b9:	mov    r13,r12
   3c5bc:	xor    r13,rbp
   3c5bf:	mov    QWORD PTR [rsp+0x68],r15
   3c5c4:	mov    r14,r13
   3c5c7:	movabs r13,0x2de92c6f592b0275
   3c5d1:	and    r14,r8
   3c5d4:	xor    r14,r12
   3c5d7:	add    r13,r15
   3c5da:	mov    r15,r8
   3c5dd:	add    r13,rdx
   3c5e0:	ror    r15,0x12
   3c5e4:	add    r13,r14
   3c5e7:	mov    r14,r8
   3c5ea:	mov    rdx,r15
   3c5ed:	mov    r15,rax
   3c5f0:	ror    r14,0xe
   3c5f4:	rol    r15,0x1e
   3c5f8:	xor    rdx,r14
   3c5fb:	mov    r14,r8
   3c5fe:	rol    r14,0x17
   3c602:	xor    rdx,r14
   3c605:	mov    r14,rax
   3c608:	add    r13,rdx
   3c60b:	ror    r14,0x1c
   3c60f:	mov    rdx,r15
   3c612:	mov    r15,rcx
   3c615:	xor    rdx,r14
   3c618:	mov    r14,rax
   3c61b:	and    r15,rax
   3c61e:	add    rdi,r13
   3c621:	rol    r14,0x19
   3c625:	xor    rdx,r14
   3c628:	mov    r14,rcx
   3c62b:	or     r14,rax
   3c62e:	and    r14,rsi
   3c631:	or     r14,r15
   3c634:	add    rdx,r14
   3c637:	add    rdx,r13
   3c63a:	mov    r13,QWORD PTR [rsp+0x110]
   3c642:	ror    r13,1
   3c645:	mov    r14,r13
   3c648:	mov    r13,QWORD PTR [rsp+0x110]
   3c650:	ror    r13,0x8
   3c654:	xor    r13,r14
   3c657:	mov    r14,QWORD PTR [rsp+0x110]
   3c65f:	shr    r14,0x7
   3c663:	xor    r14,r13
   3c666:	mov    r13,QWORD PTR [rsp+0x108]
   3c66e:	add    r13,QWORD PTR [rsp+0x150]
   3c676:	add    r14,r13
   3c679:	mov    r13,r9
   3c67c:	ror    r13,0x13
   3c680:	mov    r15,r13
   3c683:	mov    r13,r9
   3c686:	rol    r13,0x3
   3c68a:	xor    r13,r15
   3c68d:	mov    r15,r9
   3c690:	shr    r15,0x6
   3c694:	xor    r13,r15
   3c697:	add    r14,r13
   3c69a:	mov    r13,rbp
   3c69d:	xor    r13,r8
   3c6a0:	mov    r15,r14
   3c6a3:	mov    r14,r13
   3c6a6:	mov    QWORD PTR [rsp+0x8],r15
   3c6ab:	movabs r13,0x4a7484aa6ea6e483
   3c6b5:	add    r13,r15
   3c6b8:	and    r14,rdi
   3c6bb:	mov    r15,rax
   3c6be:	add    r12,r13
   3c6c1:	mov    r13,rdi
   3c6c4:	xor    r14,rbp
   3c6c7:	and    r15,rdx
   3c6ca:	ror    r13,0xe
   3c6ce:	add    r12,r14
   3c6d1:	mov    r14,r13
   3c6d4:	mov    r13,rdi
   3c6d7:	ror    r13,0x12
   3c6db:	xor    r13,r14
   3c6de:	mov    r14,rdi
   3c6e1:	rol    r14,0x17
   3c6e5:	xor    r13,r14
   3c6e8:	mov    r14,rdx
   3c6eb:	add    r12,r13
   3c6ee:	mov    r13,rdx
   3c6f1:	rol    r14,0x1e
   3c6f5:	ror    r13,0x1c
   3c6f9:	add    rsi,r12
   3c6fc:	xor    r14,r13
   3c6ff:	mov    r13,rdx
   3c702:	rol    r13,0x19
   3c706:	xor    r14,r13
   3c709:	mov    r13,rax
   3c70c:	or     r13,rdx
   3c70f:	and    r13,rcx
   3c712:	or     r13,r15
   3c715:	add    r14,r13
   3c718:	mov    r13,QWORD PTR [rsp+0x118]
   3c720:	add    r14,r12
   3c723:	mov    r12,QWORD PTR [rsp+0x118]
   3c72b:	ror    r13,1
   3c72e:	ror    r12,0x8
   3c732:	xor    r12,r13
   3c735:	mov    r13,QWORD PTR [rsp+0x118]
   3c73d:	shr    r13,0x7
   3c741:	xor    r13,r12
   3c744:	mov    r12,QWORD PTR [rsp+0x110]
   3c74c:	add    r12,QWORD PTR [rsp+0x158]
   3c754:	add    r13,r12
   3c757:	mov    r12,QWORD PTR [rsp+0x68]
   3c75c:	mov    r15,r12
   3c75f:	rol    r12,0x3
   3c763:	ror    r15,0x13
   3c767:	xor    r12,r15
   3c76a:	mov    r15,QWORD PTR [rsp+0x68]
   3c76f:	shr    r15,0x6
   3c773:	xor    r12,r15
   3c776:	add    r13,r12
   3c779:	movabs r12,0x5cb0a9dcbd41fbd4
   3c783:	mov    r15,r13
   3c786:	mov    r13,r8
   3c789:	xor    r13,rdi
   3c78c:	add    r12,r15
   3c78f:	mov    QWORD PTR [rsp+0x10],r15
   3c794:	mov    r15,rdx
   3c797:	and    r13,rsi
   3c79a:	add    rbp,r12
   3c79d:	mov    r12,rsi
   3c7a0:	and    r15,r14
   3c7a3:	xor    r13,r8
   3c7a6:	ror    r12,0x12
   3c7aa:	add    rbp,r13
   3c7ad:	mov    r13,rsi
   3c7b0:	ror    r13,0xe
   3c7b4:	xor    r12,r13
   3c7b7:	mov    r13,rsi
   3c7ba:	rol    r13,0x17
   3c7be:	xor    r12,r13
   3c7c1:	mov    r13,r14
   3c7c4:	ror    r13,0x1c
   3c7c8:	add    rbp,r12
   3c7cb:	mov    r12,r13
   3c7ce:	mov    r13,r14
   3c7d1:	add    rcx,rbp
   3c7d4:	rol    r13,0x1e
   3c7d8:	xor    r13,r12
   3c7db:	mov    r12,r14
   3c7de:	rol    r12,0x19
   3c7e2:	xor    r13,r12
   3c7e5:	mov    r12,rdx
   3c7e8:	or     r12,r14
   3c7eb:	and    r12,rax
   3c7ee:	or     r12,r15
   3c7f1:	add    r13,r12
   3c7f4:	mov    r12,QWORD PTR [rsp+0x120]
   3c7fc:	add    r13,rbp
   3c7ff:	mov    rbp,QWORD PTR [rsp+0x120]
   3c807:	ror    r12,1
   3c80a:	ror    rbp,0x8
   3c80e:	xor    rbp,r12
   3c811:	mov    r12,QWORD PTR [rsp+0x120]
   3c819:	shr    r12,0x7
   3c81d:	xor    rbp,r12
   3c820:	add    rbp,QWORD PTR [rsp+0x118]
   3c828:	mov    r12,QWORD PTR [rsp+0x8]
   3c82d:	add    rbp,rbx
   3c830:	mov    r15,r12
   3c833:	rol    r12,0x3
   3c837:	ror    r15,0x13
   3c83b:	xor    r12,r15
   3c83e:	mov    r15,QWORD PTR [rsp+0x8]
   3c843:	shr    r15,0x6
   3c847:	xor    r12,r15
   3c84a:	add    r12,rbp
   3c84d:	movabs rbp,0x76f988da831153b5
   3c857:	mov    r15,r12
   3c85a:	mov    r12,rdi
   3c85d:	xor    r12,rsi
   3c860:	add    rbp,r15
   3c863:	mov    QWORD PTR [rsp+0x18],r15
   3c868:	mov    r15,r14
   3c86b:	and    r12,rcx
   3c86e:	add    r8,rbp
   3c871:	mov    rbp,rcx
   3c874:	xor    r12,rdi
   3c877:	ror    rbp,0x12
   3c87b:	add    r8,r12
   3c87e:	mov    r12,rcx
   3c881:	ror    r12,0xe
   3c885:	xor    rbp,r12
   3c888:	mov    r12,rcx
   3c88b:	rol    r12,0x17
   3c88f:	xor    rbp,r12
   3c892:	mov    r12,r13
   3c895:	ror    r12,0x1c
   3c899:	add    r8,rbp
   3c89c:	mov    rbp,r12
   3c89f:	mov    r12,r13
   3c8a2:	add    rax,r8
   3c8a5:	rol    r12,0x1e
   3c8a9:	xor    r12,rbp
   3c8ac:	mov    rbp,r13
   3c8af:	rol    rbp,0x19
   3c8b3:	xor    r12,rbp
   3c8b6:	mov    rbp,r14
   3c8b9:	or     rbp,r13
   3c8bc:	and    rbp,rdx
   3c8bf:	and    r15,r13
   3c8c2:	or     rbp,r15
   3c8c5:	add    r12,rbp
   3c8c8:	add    r12,r8
   3c8cb:	mov    r8,QWORD PTR [rsp+0x128]
   3c8d3:	ror    r8,1
   3c8d6:	mov    rbp,r8
   3c8d9:	mov    r8,QWORD PTR [rsp+0x128]
   3c8e1:	ror    r8,0x8
   3c8e5:	xor    r8,rbp
   3c8e8:	mov    rbp,QWORD PTR [rsp+0x128]
   3c8f0:	shr    rbp,0x7
   3c8f4:	xor    r8,rbp
   3c8f7:	mov    rbp,QWORD PTR [rsp+0x10]
   3c8fc:	add    r8,QWORD PTR [rsp+0x120]
   3c904:	add    r8,r11
   3c907:	mov    r15,rbp
   3c90a:	rol    rbp,0x3
   3c90e:	ror    r15,0x13
   3c912:	xor    rbp,r15
   3c915:	mov    r15,QWORD PTR [rsp+0x10]
   3c91a:	shr    r15,0x6
   3c91e:	xor    rbp,r15
   3c921:	add    r8,rbp
   3c924:	mov    r15,r8
   3c927:	mov    r8,rsi
   3c92a:	xor    r8,rcx
   3c92d:	mov    QWORD PTR [rsp+0x20],r15
   3c932:	mov    rbp,r8
   3c935:	movabs r8,0x983e5152ee66dfab
   3c93f:	add    r8,r15
   3c942:	and    rbp,rax
   3c945:	mov    r15,r13
   3c948:	add    rdi,r8
   3c94b:	mov    r8,rax
   3c94e:	xor    rbp,rsi
   3c951:	ror    r8,0xe
   3c955:	add    rdi,rbp
   3c958:	mov    rbp,r8
   3c95b:	mov    r8,rax
   3c95e:	ror    r8,0x12
   3c962:	xor    r8,rbp
   3c965:	mov    rbp,rax
   3c968:	rol    rbp,0x17
   3c96c:	xor    r8,rbp
   3c96f:	mov    rbp,r12
   3c972:	add    rdi,r8
   3c975:	mov    r8,r12
   3c978:	rol    rbp,0x1e
   3c97c:	ror    r8,0x1c
   3c980:	add    rdx,rdi
   3c983:	xor    rbp,r8
   3c986:	mov    r8,r12
   3c989:	and    r15,r12
   3c98c:	rol    r8,0x19
   3c990:	xor    rbp,r8
   3c993:	mov    r8,r13
   3c996:	or     r8,r12
   3c999:	and    r8,r14
   3c99c:	or     r8,r15
   3c99f:	add    rbp,r8
   3c9a2:	add    rbp,rdi
   3c9a5:	mov    rdi,QWORD PTR [rsp+0x130]
   3c9ad:	ror    rdi,1
   3c9b0:	mov    r8,rdi
   3c9b3:	mov    rdi,QWORD PTR [rsp+0x130]
   3c9bb:	ror    rdi,0x8
   3c9bf:	xor    rdi,r8
   3c9c2:	mov    r8,QWORD PTR [rsp+0x130]
   3c9ca:	shr    r8,0x7
   3c9ce:	xor    rdi,r8
   3c9d1:	mov    r8,QWORD PTR [rsp+0x18]
   3c9d6:	add    rdi,QWORD PTR [rsp+0x128]
   3c9de:	add    rdi,r10
   3c9e1:	mov    r15,r8
   3c9e4:	rol    r8,0x3
   3c9e8:	ror    r15,0x13
   3c9ec:	xor    r8,r15
   3c9ef:	mov    r15,QWORD PTR [rsp+0x18]
   3c9f4:	shr    r15,0x6
   3c9f8:	xor    r8,r15
   3c9fb:	add    rdi,r8
   3c9fe:	mov    r15,rdi
   3ca01:	mov    rdi,rcx
   3ca04:	xor    rdi,rax
   3ca07:	mov    QWORD PTR [rsp+0x28],r15
   3ca0c:	mov    r8,rdi
   3ca0f:	movabs rdi,0xa831c66d2db43210
   3ca19:	add    rdi,r15
   3ca1c:	and    r8,rdx
   3ca1f:	mov    r15,r12
   3ca22:	add    rsi,rdi
   3ca25:	mov    rdi,rdx
   3ca28:	xor    r8,rcx
   3ca2b:	ror    rdi,0xe
   3ca2f:	add    rsi,r8
   3ca32:	mov    r8,rdi
   3ca35:	mov    rdi,rdx
   3ca38:	ror    rdi,0x12
   3ca3c:	xor    rdi,r8
   3ca3f:	mov    r8,rdx
   3ca42:	rol    r8,0x17
   3ca46:	xor    rdi,r8
   3ca49:	mov    r8,rbp
   3ca4c:	and    r15,rbp
   3ca4f:	add    rsi,rdi
   3ca52:	mov    rdi,rbp
   3ca55:	rol    r8,0x1e
   3ca59:	ror    rdi,0x1c
   3ca5d:	add    r14,rsi
   3ca60:	xor    r8,rdi
   3ca63:	mov    rdi,rbp
   3ca66:	rol    rdi,0x19
   3ca6a:	xor    r8,rdi
   3ca6d:	mov    rdi,r12
   3ca70:	or     rdi,rbp
   3ca73:	and    rdi,r13
   3ca76:	or     rdi,r15
   3ca79:	add    r8,rdi
   3ca7c:	mov    rdi,QWORD PTR [rsp+0x138]
   3ca84:	add    r8,rsi
   3ca87:	mov    rsi,QWORD PTR [rsp+0x138]
   3ca8f:	ror    rdi,1
   3ca92:	ror    rsi,0x8
   3ca96:	xor    rsi,rdi
   3ca99:	mov    rdi,QWORD PTR [rsp+0x138]
   3caa1:	shr    rdi,0x7
   3caa5:	xor    rsi,rdi
   3caa8:	mov    rdi,QWORD PTR [rsp+0x20]
   3caad:	add    rsi,QWORD PTR [rsp+0x130]
   3cab5:	add    rsi,r9
   3cab8:	mov    r15,rdi
   3cabb:	rol    rdi,0x3
   3cabf:	ror    r15,0x13
   3cac3:	xor    rdi,r15
   3cac6:	mov    r15,QWORD PTR [rsp+0x20]
   3cacb:	shr    r15,0x6
   3cacf:	xor    rdi,r15
   3cad2:	add    rdi,rsi
   3cad5:	movabs rsi,0xb00327c898fb213f
   3cadf:	mov    r15,rdi
   3cae2:	mov    rdi,rax
   3cae5:	xor    rdi,rdx
   3cae8:	add    rsi,r15
   3caeb:	mov    QWORD PTR [rsp+0x30],r15
   3caf0:	mov    r15,rbp
   3caf3:	and    rdi,r14
   3caf6:	add    rcx,rsi
   3caf9:	mov    rsi,r14
   3cafc:	xor    rdi,rax
   3caff:	add    rcx,rdi
   3cb02:	mov    rdi,r14
   3cb05:	ror    rsi,0x12
   3cb09:	and    r15,r8
   3cb0c:	ror    rdi,0xe
   3cb10:	xor    rsi,rdi
   3cb13:	mov    rdi,r14
   3cb16:	rol    rdi,0x17
   3cb1a:	xor    rsi,rdi
   3cb1d:	mov    rdi,r8
   3cb20:	ror    rdi,0x1c
   3cb24:	add    rcx,rsi
   3cb27:	mov    rsi,rdi
   3cb2a:	mov    rdi,r8
   3cb2d:	add    r13,rcx
   3cb30:	rol    rdi,0x1e
   3cb34:	xor    rdi,rsi
   3cb37:	mov    rsi,r8
   3cb3a:	rol    rsi,0x19
   3cb3e:	xor    rdi,rsi
   3cb41:	mov    rsi,rbp
   3cb44:	or     rsi,r8
   3cb47:	and    rsi,r12
   3cb4a:	or     rsi,r15
   3cb4d:	add    rdi,rsi
   3cb50:	add    rdi,rcx
   3cb53:	mov    rcx,QWORD PTR [rsp+0x140]
   3cb5b:	ror    rcx,1
   3cb5e:	mov    rsi,rcx
   3cb61:	mov    rcx,QWORD PTR [rsp+0x140]
   3cb69:	ror    rcx,0x8
   3cb6d:	xor    rcx,rsi
   3cb70:	mov    rsi,QWORD PTR [rsp+0x140]
   3cb78:	shr    rsi,0x7
   3cb7c:	xor    rcx,rsi
   3cb7f:	mov    rsi,QWORD PTR [rsp+0x28]
   3cb84:	add    rcx,QWORD PTR [rsp+0x138]
   3cb8c:	add    rcx,QWORD PTR [rsp+0x68]
   3cb91:	mov    r15,rsi
   3cb94:	rol    rsi,0x3
   3cb98:	ror    r15,0x13
   3cb9c:	xor    rsi,r15
   3cb9f:	mov    r15,QWORD PTR [rsp+0x28]
   3cba4:	shr    r15,0x6
   3cba8:	xor    rsi,r15
   3cbab:	add    rcx,rsi
   3cbae:	mov    r15,rcx
   3cbb1:	mov    rcx,rdx
   3cbb4:	xor    rcx,r14
   3cbb7:	mov    QWORD PTR [rsp+0x38],r15
   3cbbc:	mov    rsi,rcx
   3cbbf:	movabs rcx,0xbf597fc7beef0ee4
   3cbc9:	and    rsi,r13
   3cbcc:	add    rcx,r15
   3cbcf:	mov    r15,r8
   3cbd2:	xor    rsi,rdx
   3cbd5:	add    rcx,rax
   3cbd8:	mov    rax,r13
   3cbdb:	and    r15,rdi
   3cbde:	add    rcx,rsi
   3cbe1:	mov    rsi,r13
   3cbe4:	ror    rax,0x12
   3cbe8:	ror    rsi,0xe
   3cbec:	xor    rax,rsi
   3cbef:	mov    rsi,r13
   3cbf2:	rol    rsi,0x17
   3cbf6:	xor    rax,rsi
   3cbf9:	mov    rsi,rdi
   3cbfc:	add    rcx,rax
   3cbff:	mov    rax,rdi
   3cc02:	ror    rsi,0x1c
   3cc06:	rol    rax,0x1e
   3cc0a:	add    r12,rcx
   3cc0d:	xor    rax,rsi
   3cc10:	mov    rsi,rdi
   3cc13:	rol    rsi,0x19
   3cc17:	xor    rax,rsi
   3cc1a:	mov    rsi,r8
   3cc1d:	or     rsi,rdi
   3cc20:	and    rsi,rbp
   3cc23:	or     rsi,r15
   3cc26:	add    rax,rsi
   3cc29:	add    rax,rcx
   3cc2c:	mov    rcx,QWORD PTR [rsp+0x148]
   3cc34:	ror    rcx,1
   3cc37:	mov    rsi,rcx
   3cc3a:	mov    rcx,QWORD PTR [rsp+0x148]
   3cc42:	ror    rcx,0x8
   3cc46:	xor    rcx,rsi
   3cc49:	mov    rsi,QWORD PTR [rsp+0x148]
   3cc51:	shr    rsi,0x7
   3cc55:	xor    rcx,rsi
   3cc58:	mov    rsi,QWORD PTR [rsp+0x30]
   3cc5d:	add    rcx,QWORD PTR [rsp+0x140]
   3cc65:	add    rcx,QWORD PTR [rsp+0x8]
   3cc6a:	mov    r15,rsi
   3cc6d:	ror    r15,0x13
   3cc71:	rol    rsi,0x3
   3cc75:	xor    rsi,r15
   3cc78:	mov    r15,QWORD PTR [rsp+0x30]
   3cc7d:	shr    r15,0x6
   3cc81:	xor    rsi,r15
   3cc84:	add    rcx,rsi
   3cc87:	mov    r15,rcx
   3cc8a:	mov    rcx,r14
   3cc8d:	xor    rcx,r13
   3cc90:	mov    QWORD PTR [rsp+0x40],r15
   3cc95:	mov    rsi,rcx
   3cc98:	movabs rcx,0xc6e00bf33da88fc2
   3cca2:	add    rcx,r15
   3cca5:	and    rsi,r12
   3cca8:	mov    r15,rdi
   3ccab:	add    rdx,rcx
   3ccae:	mov    rcx,r12
   3ccb1:	xor    rsi,r14
   3ccb4:	and    r15,rax
   3ccb7:	ror    rcx,0xe
   3ccbb:	add    rdx,rsi
   3ccbe:	mov    rsi,rcx
   3ccc1:	mov    rcx,r12
   3ccc4:	ror    rcx,0x12
   3ccc8:	xor    rcx,rsi
   3cccb:	mov    rsi,r12
   3ccce:	rol    rsi,0x17
   3ccd2:	xor    rcx,rsi
   3ccd5:	mov    rsi,rax
   3ccd8:	add    rdx,rcx
   3ccdb:	mov    rcx,rax
   3ccde:	rol    rsi,0x1e
   3cce2:	ror    rcx,0x1c
   3cce6:	add    rbp,rdx
   3cce9:	xor    rsi,rcx
   3ccec:	mov    rcx,rax
   3ccef:	rol    rcx,0x19
   3ccf3:	xor    rsi,rcx
   3ccf6:	mov    rcx,rdi
   3ccf9:	or     rcx,rax
   3ccfc:	and    rcx,r8
   3ccff:	or     rcx,r15
   3cd02:	add    rsi,rcx
   3cd05:	mov    rcx,QWORD PTR [rsp+0x150]
   3cd0d:	add    rsi,rdx
   3cd10:	mov    rdx,QWORD PTR [rsp+0x150]
   3cd18:	ror    rcx,1
   3cd1b:	ror    rdx,0x8
   3cd1f:	xor    rdx,rcx
   3cd22:	mov    rcx,QWORD PTR [rsp+0x150]
   3cd2a:	shr    rcx,0x7
   3cd2e:	xor    rdx,rcx
   3cd31:	mov    rcx,QWORD PTR [rsp+0x38]
   3cd36:	add    rdx,QWORD PTR [rsp+0x148]
   3cd3e:	add    rdx,QWORD PTR [rsp+0x10]
   3cd43:	mov    r15,rcx
   3cd46:	rol    rcx,0x3
   3cd4a:	ror    r15,0x13
   3cd4e:	xor    rcx,r15
   3cd51:	mov    r15,QWORD PTR [rsp+0x38]
   3cd56:	shr    r15,0x6
   3cd5a:	xor    rcx,r15
   3cd5d:	add    rdx,rcx
   3cd60:	mov    rcx,r13
   3cd63:	mov    r15,rdx
   3cd66:	xor    rcx,r12
   3cd69:	movabs rdx,0xd5a79147930aa725
   3cd73:	and    rcx,rbp
   3cd76:	add    rdx,r15
   3cd79:	mov    QWORD PTR [rsp+0x48],r15
   3cd7e:	mov    r15,rax
   3cd81:	xor    rcx,r13
   3cd84:	add    rdx,r14
   3cd87:	and    r15,rsi
   3cd8a:	add    rdx,rcx
   3cd8d:	mov    rcx,rbp
   3cd90:	ror    rcx,0xe
   3cd94:	mov    r14,rcx
   3cd97:	mov    rcx,rbp
   3cd9a:	ror    rcx,0x12
   3cd9e:	xor    rcx,r14
   3cda1:	mov    r14,rbp
   3cda4:	rol    r14,0x17
   3cda8:	xor    rcx,r14
   3cdab:	add    rdx,rcx
   3cdae:	mov    rcx,rsi
   3cdb1:	ror    rcx,0x1c
   3cdb5:	add    r8,rdx
   3cdb8:	mov    r14,rcx
   3cdbb:	mov    rcx,rsi
   3cdbe:	rol    rcx,0x1e
   3cdc2:	xor    rcx,r14
   3cdc5:	mov    r14,rsi
   3cdc8:	rol    r14,0x19
   3cdcc:	xor    rcx,r14
   3cdcf:	mov    r14,rax
   3cdd2:	or     r14,rsi
   3cdd5:	and    r14,rdi
   3cdd8:	or     r14,r15
   3cddb:	add    rcx,r14
   3cdde:	add    rcx,rdx
   3cde1:	mov    rdx,QWORD PTR [rsp+0x158]
   3cde9:	ror    rdx,1
   3cdec:	mov    r14,rdx
   3cdef:	mov    rdx,QWORD PTR [rsp+0x158]
   3cdf7:	ror    rdx,0x8
   3cdfb:	xor    rdx,r14
   3cdfe:	mov    r14,QWORD PTR [rsp+0x158]
   3ce06:	shr    r14,0x7
   3ce0a:	xor    rdx,r14
   3ce0d:	mov    r14,QWORD PTR [rsp+0x40]
   3ce12:	add    rdx,QWORD PTR [rsp+0x150]
   3ce1a:	add    rdx,QWORD PTR [rsp+0x18]
   3ce1f:	mov    r15,r14
   3ce22:	rol    r14,0x3
   3ce26:	ror    r15,0x13
   3ce2a:	xor    r14,r15
   3ce2d:	mov    r15,QWORD PTR [rsp+0x40]
   3ce32:	shr    r15,0x6
   3ce36:	xor    r14,r15
   3ce39:	add    rdx,r14
   3ce3c:	movabs r14,0x6ca6351e003826f
   3ce46:	mov    r15,rdx
   3ce49:	mov    rdx,r12
   3ce4c:	xor    rdx,rbp
   3ce4f:	add    r14,r15
   3ce52:	mov    QWORD PTR [rsp+0x50],r15
   3ce57:	mov    r15,rsi
   3ce5a:	and    rdx,r8
   3ce5d:	add    r14,r13
   3ce60:	mov    r13,r8
   3ce63:	xor    rdx,r12
   3ce66:	ror    r13,0xe
   3ce6a:	add    r14,rdx
   3ce6d:	mov    rdx,r8
   3ce70:	ror    rdx,0x12
   3ce74:	xor    rdx,r13
   3ce77:	mov    r13,r8
   3ce7a:	rol    r13,0x17
   3ce7e:	xor    rdx,r13
   3ce81:	add    r14,rdx
   3ce84:	mov    rdx,rcx
   3ce87:	lea    r13,[rdi+r14*1]
   3ce8b:	mov    rdi,rcx
   3ce8e:	rol    rdx,0x1e
   3ce92:	ror    rdi,0x1c
   3ce96:	xor    rdx,rdi
   3ce99:	mov    rdi,rcx
   3ce9c:	rol    rdi,0x19
   3cea0:	xor    rdx,rdi
   3cea3:	mov    rdi,rsi
   3cea6:	or     rdi,rcx
   3cea9:	and    r15,rcx
   3ceac:	and    rdi,rax
   3ceaf:	or     rdi,r15
   3ceb2:	add    rdx,rdi
   3ceb5:	mov    rdi,rbx
   3ceb8:	ror    rdi,1
   3cebb:	add    rdx,r14
   3cebe:	mov    r14,rdi
   3cec1:	mov    rdi,rbx
   3cec4:	ror    rdi,0x8
   3cec8:	xor    rdi,r14
   3cecb:	mov    r14,rbx
   3cece:	shr    r14,0x7
   3ced2:	xor    rdi,r14
   3ced5:	mov    r14,QWORD PTR [rsp+0x48]
   3ceda:	add    rdi,QWORD PTR [rsp+0x158]
   3cee2:	add    rdi,QWORD PTR [rsp+0x20]
   3cee7:	mov    r15,r14
   3ceea:	rol    r14,0x3
   3ceee:	ror    r15,0x13
   3cef2:	xor    r14,r15
   3cef5:	mov    r15,QWORD PTR [rsp+0x48]
   3cefa:	shr    r15,0x6
   3cefe:	xor    r14,r15
   3cf01:	add    rdi,r14
   3cf04:	mov    r15,rdi
   3cf07:	mov    rdi,rbp
   3cf0a:	xor    rdi,r8
   3cf0d:	mov    QWORD PTR [rsp+0x58],r15
   3cf12:	mov    r14,rdi
   3cf15:	movabs rdi,0x142929670a0e6e70
   3cf1f:	add    rdi,r15
   3cf22:	and    r14,r13
   3cf25:	mov    r15,rcx
   3cf28:	add    r12,rdi
   3cf2b:	mov    rdi,r13
   3cf2e:	xor    r14,rbp
   3cf31:	ror    rdi,0xe
   3cf35:	add    r12,r14
   3cf38:	mov    r14,rdi
   3cf3b:	mov    rdi,r13
   3cf3e:	ror    rdi,0x12
   3cf42:	xor    rdi,r14
   3cf45:	mov    r14,r13
   3cf48:	rol    r14,0x17
   3cf4c:	xor    rdi,r14
   3cf4f:	mov    r14,rdx
   3cf52:	add    r12,rdi
   3cf55:	ror    r14,0x1c
   3cf59:	lea    rdi,[rax+r12*1]
   3cf5d:	mov    rax,rdx
   3cf60:	rol    rax,0x1e
   3cf64:	and    r15,rdx
   3cf67:	xor    rax,r14
   3cf6a:	mov    r14,rdx
   3cf6d:	rol    r14,0x19
   3cf71:	xor    rax,r14
   3cf74:	mov    r14,rcx
   3cf77:	or     r14,rdx
   3cf7a:	and    r14,rsi
   3cf7d:	or     r14,r15
   3cf80:	mov    r15,QWORD PTR [rsp+0x50]
   3cf85:	add    rax,r14
   3cf88:	add    rax,r12
   3cf8b:	mov    r12,r11
   3cf8e:	ror    r12,1
   3cf91:	mov    r14,r12
   3cf94:	mov    r12,r11
   3cf97:	ror    r12,0x8
   3cf9b:	xor    r12,r14
   3cf9e:	mov    r14,r11
   3cfa1:	shr    r14,0x7
   3cfa5:	xor    r12,r14
   3cfa8:	mov    r14,QWORD PTR [rsp+0x28]
   3cfad:	add    r12,rbx
   3cfb0:	lea    rbx,[r12+r14*1]
   3cfb4:	mov    r14,r15
   3cfb7:	mov    r12,r15
   3cfba:	ror    r14,0x13
   3cfbe:	rol    r12,0x3
   3cfc2:	xor    r12,r14
   3cfc5:	mov    r14,r15
   3cfc8:	shr    r14,0x6
   3cfcc:	xor    r12,r14
   3cfcf:	mov    r14,rdx
   3cfd2:	lea    r15,[rbx+r12*1]
   3cfd6:	mov    r12,r8
   3cfd9:	movabs rbx,0x27b70a8546d22ffc
   3cfe3:	xor    r12,r13
   3cfe6:	add    rbx,r15
   3cfe9:	and    r12,rdi
   3cfec:	add    rbp,rbx
   3cfef:	mov    rbx,rdi
   3cff2:	xor    r12,r8
   3cff5:	ror    rbx,0x12
   3cff9:	add    rbp,r12
   3cffc:	mov    r12,rdi
   3cfff:	ror    r12,0xe
   3d003:	xor    rbx,r12
   3d006:	mov    r12,rdi
   3d009:	rol    r12,0x17
   3d00d:	xor    rbx,r12
   3d010:	mov    r12,rax
   3d013:	add    rbp,rbx
   3d016:	mov    rbx,rax
   3d019:	ror    r12,0x1c
   3d01d:	and    r14,rax
   3d020:	rol    rbx,0x1e
   3d024:	add    rsi,rbp
   3d027:	xor    rbx,r12
   3d02a:	mov    r12,rax
   3d02d:	rol    r12,0x19
   3d031:	xor    rbx,r12
   3d034:	mov    r12,rdx
   3d037:	or     r12,rax
   3d03a:	and    r12,rcx
   3d03d:	or     r12,r14
   3d040:	add    rbx,r12
   3d043:	mov    r12,r10
   3d046:	add    rbx,rbp
   3d049:	mov    rbp,r10
   3d04c:	ror    r12,1
   3d04f:	ror    rbp,0x8
   3d053:	xor    rbp,r12
   3d056:	mov    r12,r10
   3d059:	shr    r12,0x7
   3d05d:	xor    rbp,r12
   3d060:	add    rbp,r11
   3d063:	mov    r11,QWORD PTR [rsp+0x30]
   3d068:	mov    r14,QWORD PTR [rsp+0x58]
   3d06d:	add    r11,rbp
   3d070:	mov    r12,r14
   3d073:	mov    rbp,r14
   3d076:	ror    r12,0x13
   3d07a:	rol    rbp,0x3
   3d07e:	xor    rbp,r12
   3d081:	mov    r12,r14
   3d084:	shr    r12,0x6
   3d088:	xor    rbp,r12
   3d08b:	mov    r12,r13
   3d08e:	xor    r12,rdi
   3d091:	lea    r14,[r11+rbp*1]
   3d095:	movabs r11,0x2e1b21385c26c926
   3d09f:	mov    rbp,r12
   3d0a2:	add    r11,r14
   3d0a5:	mov    r12,rsi
   3d0a8:	and    rbp,rsi
   3d0ab:	add    r11,r8
   3d0ae:	mov    r8,rsi
   3d0b1:	ror    r12,0xe
   3d0b5:	xor    rbp,r13
   3d0b8:	add    r11,rbp
   3d0bb:	ror    r8,0x12
   3d0bf:	xor    r8,r12
   3d0c2:	mov    r12,rsi
   3d0c5:	rol    r12,0x17
   3d0c9:	xor    r8,r12
   3d0cc:	mov    r12,rbx
   3d0cf:	add    r11,r8
   3d0d2:	mov    r8,rbx
   3d0d5:	ror    r12,0x1c
   3d0d9:	rol    r8,0x1e
   3d0dd:	add    rcx,r11
   3d0e0:	xor    r8,r12
   3d0e3:	mov    r12,rbx
   3d0e6:	rol    r12,0x19
   3d0ea:	xor    r8,r12
   3d0ed:	mov    r12,rax
   3d0f0:	or     r12,rbx
   3d0f3:	mov    rbp,r12
   3d0f6:	mov    r12,rax
   3d0f9:	and    r12,rbx
   3d0fc:	and    rbp,rdx
   3d0ff:	or     rbp,r12
   3d102:	mov    r12,r9
   3d105:	add    r8,rbp
   3d108:	ror    r12,1
   3d10b:	add    r8,r11
   3d10e:	mov    r11,r9
   3d111:	ror    r11,0x8
   3d115:	xor    r11,r12
   3d118:	mov    r12,r9
   3d11b:	shr    r12,0x7
   3d11f:	xor    r11,r12
   3d122:	mov    r12,r15
   3d125:	ror    r12,0x13
   3d129:	add    r11,r10
   3d12c:	mov    r10,QWORD PTR [rsp+0x38]
   3d131:	mov    rbp,r12
   3d134:	mov    r12,r15
   3d137:	rol    r12,0x3
   3d13b:	add    r10,r11
   3d13e:	mov    r11,r12
   3d141:	mov    r12,r15
   3d144:	xor    r11,rbp
   3d147:	shr    r12,0x6
   3d14b:	xor    r11,r12
   3d14e:	lea    r12,[r10+r11*1]
   3d152:	mov    r10,rdi
   3d155:	movabs r11,0x4d2c6dfc5ac42aed
   3d15f:	xor    r10,rsi
   3d162:	mov    QWORD PTR [rsp+0x60],r12
   3d167:	and    r10,rcx
   3d16a:	xor    r10,rdi
   3d16d:	add    r11,r12
   3d170:	mov    r12,rcx
   3d173:	add    r11,r13
   3d176:	ror    r12,0xe
   3d17a:	mov    r13,QWORD PTR [rsp+0x68]
   3d17f:	add    r11,r10
   3d182:	mov    r10,rcx
   3d185:	ror    r10,0x12
   3d189:	xor    r10,r12
   3d18c:	mov    r12,rcx
   3d18f:	rol    r12,0x17
   3d193:	xor    r10,r12
   3d196:	mov    r12,r8
   3d199:	add    r11,r10
   3d19c:	mov    r10,r8
   3d19f:	ror    r12,0x1c
   3d1a3:	rol    r10,0x1e
   3d1a7:	add    rdx,r11
   3d1aa:	xor    r10,r12
   3d1ad:	mov    r12,r8
   3d1b0:	rol    r12,0x19
   3d1b4:	xor    r10,r12
   3d1b7:	mov    r12,rbx
   3d1ba:	or     r12,r8
   3d1bd:	mov    rbp,r12
   3d1c0:	mov    r12,rbx
   3d1c3:	and    r12,r8
   3d1c6:	and    rbp,rax
   3d1c9:	or     rbp,r12
   3d1cc:	mov    r12,r13
   3d1cf:	add    r10,rbp
   3d1d2:	shr    r12,0x7
   3d1d6:	add    r10,r11
   3d1d9:	mov    r11,r13
   3d1dc:	ror    r11,1
   3d1df:	mov    rbp,r11
   3d1e2:	mov    r11,r13
   3d1e5:	ror    r11,0x8
   3d1e9:	xor    r11,rbp
   3d1ec:	mov    rbp,r8
   3d1ef:	xor    r11,r12
   3d1f2:	mov    r12,QWORD PTR [rsp+0x40]
   3d1f7:	add    r11,r9
   3d1fa:	lea    r9,[r11+r12*1]
   3d1fe:	mov    r12,r14
   3d201:	mov    r11,r14
   3d204:	ror    r12,0x13
   3d208:	rol    r11,0x3
   3d20c:	xor    r11,r12
   3d20f:	mov    r12,r14
   3d212:	shr    r12,0x6
   3d216:	xor    r11,r12
   3d219:	lea    r12,[r9+r11*1]
   3d21d:	mov    r11,rsi
   3d220:	movabs r9,0x53380d139d95b3df
   3d22a:	xor    r11,rcx
   3d22d:	add    r9,r12
   3d230:	and    rbp,r10
   3d233:	and    r11,rdx
   3d236:	add    r9,rdi
   3d239:	mov    rdi,rdx
   3d23c:	xor    r11,rsi
   3d23f:	ror    rdi,0xe
   3d243:	add    r9,r11
   3d246:	mov    r11,rdi
   3d249:	mov    rdi,rdx
   3d24c:	ror    rdi,0x12
   3d250:	xor    rdi,r11
   3d253:	mov    r11,rdx
   3d256:	rol    r11,0x17
   3d25a:	xor    rdi,r11
   3d25d:	add    r9,rdi
   3d260:	mov    rdi,r10
   3d263:	ror    rdi,0x1c
   3d267:	add    rax,r9
   3d26a:	mov    r11,rdi
   3d26d:	mov    rdi,r10
   3d270:	rol    rdi,0x1e
   3d274:	xor    rdi,r11
   3d277:	mov    r11,r10
   3d27a:	rol    r11,0x19
   3d27e:	xor    rdi,r11
   3d281:	mov    r11,r8
   3d284:	or     r11,r10
   3d287:	and    r11,rbx
   3d28a:	or     r11,rbp
   3d28d:	mov    rbp,QWORD PTR [rsp+0x8]
   3d292:	add    rdi,r11
   3d295:	add    rdi,r9
   3d298:	mov    r11,rbp
   3d29b:	mov    r9,rbp
   3d29e:	ror    r11,1
   3d2a1:	ror    r9,0x8
   3d2a5:	xor    r9,r11
   3d2a8:	mov    r11,rbp
   3d2ab:	shr    r11,0x7
   3d2af:	xor    r9,r11
   3d2b2:	add    r9,r13
   3d2b5:	mov    r13,QWORD PTR [rsp+0x60]
   3d2ba:	add    r9,QWORD PTR [rsp+0x48]
   3d2bf:	mov    rbp,r13
   3d2c2:	mov    r11,r13
   3d2c5:	ror    rbp,0x13
   3d2c9:	rol    r11,0x3
   3d2cd:	xor    r11,rbp
   3d2d0:	shr    r13,0x6
   3d2d4:	mov    rbp,r10
   3d2d7:	xor    r11,r13
   3d2da:	and    rbp,rdi
   3d2dd:	lea    r13,[r9+r11*1]
   3d2e1:	mov    r11,rcx
   3d2e4:	movabs r9,0x650a73548baf63de
   3d2ee:	xor    r11,rdx
   3d2f1:	add    r9,r13
   3d2f4:	and    r11,rax
   3d2f7:	add    r9,rsi
   3d2fa:	mov    rsi,rax
   3d2fd:	xor    r11,rcx
   3d300:	ror    rsi,0xe
   3d304:	add    r9,r11
   3d307:	mov    r11,rsi
   3d30a:	mov    rsi,rax
   3d30d:	ror    rsi,0x12
   3d311:	xor    rsi,r11
   3d314:	mov    r11,rax
   3d317:	rol    r11,0x17
   3d31b:	xor    rsi,r11
   3d31e:	add    r9,rsi
   3d321:	mov    rsi,rdi
   3d324:	ror    rsi,0x1c
   3d328:	add    rbx,r9
   3d32b:	mov    r11,rsi
   3d32e:	mov    rsi,rdi
   3d331:	rol    rsi,0x1e
   3d335:	xor    rsi,r11
   3d338:	mov    r11,rdi
   3d33b:	rol    r11,0x19
   3d33f:	xor    rsi,r11
   3d342:	mov    r11,r10
   3d345:	or     r11,rdi
   3d348:	and    r11,r8
   3d34b:	or     r11,rbp
   3d34e:	mov    rbp,QWORD PTR [rsp+0x10]
   3d353:	add    rsi,r11
   3d356:	add    rsi,r9
   3d359:	mov    r11,rbp
   3d35c:	mov    r9,rbp
   3d35f:	ror    r11,1
   3d362:	ror    r9,0x8
   3d366:	xor    r9,r11
   3d369:	mov    r11,rbp
   3d36c:	mov    rbp,r12
   3d36f:	shr    r11,0x7
   3d373:	xor    r9,r11
   3d376:	mov    r11,r12
   3d379:	ror    rbp,0x13
   3d37d:	add    r9,QWORD PTR [rsp+0x8]
   3d382:	rol    r11,0x3
   3d386:	add    r9,QWORD PTR [rsp+0x50]
   3d38b:	xor    r11,rbp
   3d38e:	mov    rbp,r12
   3d391:	shr    rbp,0x6
   3d395:	xor    r11,rbp
   3d398:	add    r9,r11
   3d39b:	mov    rbp,r9
   3d39e:	mov    r9,rdx
   3d3a1:	xor    r9,rax
   3d3a4:	mov    QWORD PTR [rsp+0x8],rbp
   3d3a9:	mov    r11,r9
   3d3ac:	movabs r9,0x766a0abb3c77b2a8
   3d3b6:	add    r9,rbp
   3d3b9:	and    r11,rbx
   3d3bc:	mov    rbp,rbx
   3d3bf:	add    r9,rcx
   3d3c2:	mov    rcx,rbx
   3d3c5:	xor    r11,rdx
   3d3c8:	rol    rbp,0x17
   3d3cc:	ror    rcx,0xe
   3d3d0:	add    r9,r11
   3d3d3:	mov    r11,rcx
   3d3d6:	mov    rcx,rbx
   3d3d9:	ror    rcx,0x12
   3d3dd:	xor    rcx,r11
   3d3e0:	xor    rcx,rbp
   3d3e3:	mov    rbp,rsi
   3d3e6:	add    r9,rcx
   3d3e9:	mov    rcx,rsi
   3d3ec:	rol    rbp,0x19
   3d3f0:	ror    rcx,0x1c
   3d3f4:	add    r8,r9
   3d3f7:	mov    r11,rcx
   3d3fa:	mov    rcx,rsi
   3d3fd:	rol    rcx,0x1e
   3d401:	xor    rcx,r11
   3d404:	xor    rcx,rbp
   3d407:	mov    rbp,rdi
   3d40a:	or     rbp,rsi
   3d40d:	mov    r11,rbp
   3d410:	mov    rbp,rdi
   3d413:	and    rbp,rsi
   3d416:	and    r11,r10
   3d419:	or     r11,rbp
   3d41c:	mov    rbp,QWORD PTR [rsp+0x18]
   3d421:	add    rcx,r11
   3d424:	add    rcx,r9
   3d427:	mov    r11,rbp
   3d42a:	mov    r9,rbp
   3d42d:	ror    r11,1
   3d430:	ror    r9,0x8
   3d434:	xor    r9,r11
   3d437:	mov    r11,rbp
   3d43a:	mov    rbp,r13
   3d43d:	shr    r11,0x7
   3d441:	ror    rbp,0x13
   3d445:	xor    r9,r11
   3d448:	mov    r11,r13
   3d44b:	add    r9,QWORD PTR [rsp+0x10]
   3d450:	add    r9,QWORD PTR [rsp+0x58]
   3d455:	rol    r11,0x3
   3d459:	xor    r11,rbp
   3d45c:	mov    rbp,r13
   3d45f:	shr    rbp,0x6
   3d463:	xor    r11,rbp
   3d466:	add    r9,r11
   3d469:	mov    rbp,r9
   3d46c:	mov    r9,rax
   3d46f:	xor    r9,rbx
   3d472:	mov    QWORD PTR [rsp+0x10],rbp
   3d477:	mov    r11,r9
   3d47a:	movabs r9,0x81c2c92e47edaee6
   3d484:	add    r9,rbp
   3d487:	and    r11,r8
   3d48a:	mov    rbp,r8
   3d48d:	add    r9,rdx
   3d490:	mov    rdx,r8
   3d493:	xor    r11,rax
   3d496:	rol    rbp,0x17
   3d49a:	ror    rdx,0xe
   3d49e:	add    r9,r11
   3d4a1:	mov    r11,rdx
   3d4a4:	mov    rdx,r8
   3d4a7:	ror    rdx,0x12
   3d4ab:	xor    rdx,r11
   3d4ae:	xor    rdx,rbp
   3d4b1:	mov    rbp,rcx
   3d4b4:	add    r9,rdx
   3d4b7:	mov    rdx,rcx
   3d4ba:	rol    rbp,0x19
   3d4be:	ror    rdx,0x1c
   3d4c2:	add    r10,r9
   3d4c5:	mov    r11,rdx
   3d4c8:	mov    rdx,rcx
   3d4cb:	rol    rdx,0x1e
   3d4cf:	xor    rdx,r11
   3d4d2:	xor    rdx,rbp
   3d4d5:	mov    rbp,rsi
   3d4d8:	or     rbp,rcx
   3d4db:	mov    r11,rbp
   3d4de:	mov    rbp,rsi
   3d4e1:	and    rbp,rcx
   3d4e4:	and    r11,rdi
   3d4e7:	or     r11,rbp
   3d4ea:	mov    rbp,QWORD PTR [rsp+0x20]
   3d4ef:	add    rdx,r11
   3d4f2:	add    rdx,r9
   3d4f5:	mov    r11,rbp
   3d4f8:	mov    r9,rbp
   3d4fb:	ror    r11,1
   3d4fe:	ror    r9,0x8
   3d502:	xor    r9,r11
   3d505:	mov    r11,rbp
   3d508:	shr    r11,0x7
   3d50c:	xor    r9,r11
   3d50f:	mov    r11,QWORD PTR [rsp+0x8]
   3d514:	add    r9,QWORD PTR [rsp+0x18]
   3d519:	add    r9,r15
   3d51c:	mov    rbp,r11
   3d51f:	rol    r11,0x3
   3d523:	ror    rbp,0x13
   3d527:	xor    r11,rbp
   3d52a:	mov    rbp,QWORD PTR [rsp+0x8]
   3d52f:	shr    rbp,0x6
   3d533:	xor    r11,rbp
   3d536:	add    r9,r11
   3d539:	mov    rbp,r9
   3d53c:	mov    r9,rbx
   3d53f:	xor    r9,r8
   3d542:	mov    QWORD PTR [rsp+0x18],rbp
   3d547:	mov    r11,r9
   3d54a:	movabs r9,0x92722c851482353b
   3d554:	add    r9,rbp
   3d557:	and    r11,r10
   3d55a:	mov    rbp,r10
   3d55d:	add    r9,rax
   3d560:	mov    rax,r10
   3d563:	xor    r11,rbx
   3d566:	rol    rbp,0x17
   3d56a:	ror    rax,0xe
   3d56e:	add    r9,r11
   3d571:	mov    r11,rax
   3d574:	mov    rax,r10
   3d577:	ror    rax,0x12
   3d57b:	xor    rax,r11
   3d57e:	xor    rax,rbp
   3d581:	mov    rbp,rdx
   3d584:	add    r9,rax
   3d587:	mov    rax,rdx
   3d58a:	add    rdi,r9
   3d58d:	ror    rax,0x1c
   3d591:	mov    r11,rax
   3d594:	mov    rax,rdx
   3d597:	rol    rbp,0x19
   3d59b:	rol    rax,0x1e
   3d59f:	xor    rax,r11
   3d5a2:	xor    rax,rbp
   3d5a5:	mov    rbp,rcx
   3d5a8:	or     rbp,rdx
   3d5ab:	mov    r11,rbp
   3d5ae:	mov    rbp,rcx
   3d5b1:	and    rbp,rdx
   3d5b4:	and    r11,rsi
   3d5b7:	or     r11,rbp
   3d5ba:	mov    rbp,QWORD PTR [rsp+0x28]
   3d5bf:	add    rax,r11
   3d5c2:	add    rax,r9
   3d5c5:	mov    r11,rbp
   3d5c8:	mov    r9,rbp
   3d5cb:	ror    r11,1
   3d5ce:	ror    r9,0x8
   3d5d2:	xor    r9,r11
   3d5d5:	mov    r11,rbp
   3d5d8:	shr    r11,0x7
   3d5dc:	xor    r9,r11
   3d5df:	mov    r11,QWORD PTR [rsp+0x10]
   3d5e4:	add    r9,QWORD PTR [rsp+0x20]
   3d5e9:	add    r9,r14
   3d5ec:	mov    rbp,r11
   3d5ef:	rol    r11,0x3
   3d5f3:	ror    rbp,0x13
   3d5f7:	xor    r11,rbp
   3d5fa:	mov    rbp,QWORD PTR [rsp+0x10]
   3d5ff:	shr    rbp,0x6
   3d603:	xor    r11,rbp
   3d606:	add    r9,r11
   3d609:	movabs r11,0xa2bfe8a14cf10364
   3d613:	mov    rbp,r9
   3d616:	mov    r9,r8
   3d619:	xor    r9,r10
   3d61c:	add    r11,rbp
   3d61f:	mov    QWORD PTR [rsp+0x20],rbp
   3d624:	mov    rbp,rdx
   3d627:	and    r9,rdi
   3d62a:	add    r11,rbx
   3d62d:	xor    r9,r8
   3d630:	add    r11,r9
   3d633:	mov    r9,rdi
   3d636:	ror    r9,0xe
   3d63a:	mov    rbx,r9
   3d63d:	mov    r9,rdi
   3d640:	ror    r9,0x12
   3d644:	xor    r9,rbx
   3d647:	mov    rbx,rdi
   3d64a:	and    rbp,rax
   3d64d:	rol    rbx,0x17
   3d651:	xor    r9,rbx
   3d654:	add    r11,r9
   3d657:	mov    r9,rax
   3d65a:	ror    r9,0x1c
   3d65e:	add    rsi,r11
   3d661:	mov    rbx,r9
   3d664:	mov    r9,rax
   3d667:	rol    r9,0x1e
   3d66b:	xor    r9,rbx
   3d66e:	mov    rbx,rax
   3d671:	rol    rbx,0x19
   3d675:	xor    r9,rbx
   3d678:	mov    rbx,rdx
   3d67b:	or     rbx,rax
   3d67e:	and    rbx,rcx
   3d681:	or     rbx,rbp
   3d684:	mov    rbp,QWORD PTR [rsp+0x30]
   3d689:	add    r9,rbx
   3d68c:	add    r9,r11
   3d68f:	mov    rbx,rbp
   3d692:	mov    r11,rbp
   3d695:	ror    rbx,1
   3d698:	ror    r11,0x8
   3d69c:	xor    r11,rbx
   3d69f:	mov    rbx,rbp
   3d6a2:	shr    rbx,0x7
   3d6a6:	xor    r11,rbx
   3d6a9:	mov    rbx,QWORD PTR [rsp+0x18]
   3d6ae:	add    r11,QWORD PTR [rsp+0x28]
   3d6b3:	add    r11,QWORD PTR [rsp+0x60]
   3d6b8:	mov    rbp,rbx
   3d6bb:	rol    rbx,0x3
   3d6bf:	ror    rbp,0x13
   3d6c3:	xor    rbx,rbp
   3d6c6:	mov    rbp,QWORD PTR [rsp+0x18]
   3d6cb:	shr    rbp,0x6
   3d6cf:	xor    rbx,rbp
   3d6d2:	add    rbx,r11
   3d6d5:	movabs r11,0xa81a664bbc423001
   3d6df:	mov    rbp,rbx
   3d6e2:	mov    rbx,r10
   3d6e5:	xor    rbx,rdi
   3d6e8:	mov    QWORD PTR [rsp+0x28],rbp
   3d6ed:	and    rbx,rsi
   3d6f0:	xor    rbx,r10
   3d6f3:	add    r11,rbp
   3d6f6:	mov    rbp,rax
   3d6f9:	add    r11,r8
   3d6fc:	mov    r8,rsi
   3d6ff:	and    rbp,r9
   3d702:	ror    r8,0xe
   3d706:	add    r11,rbx
   3d709:	mov    rbx,r8
   3d70c:	mov    r8,rsi
   3d70f:	ror    r8,0x12
   3d713:	xor    r8,rbx
   3d716:	mov    rbx,rsi
   3d719:	rol    rbx,0x17
   3d71d:	xor    r8,rbx
   3d720:	add    r11,r8
   3d723:	mov    r8,r9
   3d726:	ror    r8,0x1c
   3d72a:	add    rcx,r11
   3d72d:	mov    rbx,r8
   3d730:	mov    r8,r9
   3d733:	rol    r8,0x1e
   3d737:	xor    r8,rbx
   3d73a:	mov    rbx,r9
   3d73d:	rol    rbx,0x19
   3d741:	xor    r8,rbx
   3d744:	mov    rbx,rax
   3d747:	or     rbx,r9
   3d74a:	and    rbx,rdx
   3d74d:	or     rbx,rbp
   3d750:	mov    rbp,QWORD PTR [rsp+0x38]
   3d755:	add    r8,rbx
   3d758:	add    r8,r11
   3d75b:	mov    rbx,rbp
   3d75e:	mov    r11,rbp
   3d761:	ror    rbx,1
   3d764:	ror    r11,0x8
   3d768:	xor    r11,rbx
   3d76b:	mov    rbx,rbp
   3d76e:	shr    rbx,0x7
   3d772:	xor    r11,rbx
   3d775:	mov    rbx,QWORD PTR [rsp+0x20]
   3d77a:	add    r11,QWORD PTR [rsp+0x30]
   3d77f:	add    r11,r12
   3d782:	mov    rbp,rbx
   3d785:	rol    rbx,0x3
   3d789:	ror    rbp,0x13
   3d78d:	xor    rbx,rbp
   3d790:	mov    rbp,QWORD PTR [rsp+0x20]
   3d795:	shr    rbp,0x6
   3d799:	xor    rbx,rbp
   3d79c:	add    rbx,r11
   3d79f:	mov    r11,rdi
   3d7a2:	xor    r11,rsi
   3d7a5:	mov    rbp,rbx
   3d7a8:	mov    rbx,r11
   3d7ab:	mov    QWORD PTR [rsp+0x30],rbp
   3d7b0:	movabs r11,0xc24b8b70d0f89791
   3d7ba:	add    r11,rbp
   3d7bd:	and    rbx,rcx
   3d7c0:	mov    rbp,r9
   3d7c3:	add    r11,r10
   3d7c6:	mov    r10,rcx
   3d7c9:	xor    rbx,rdi
   3d7cc:	and    rbp,r8
   3d7cf:	ror    r10,0xe
   3d7d3:	add    r11,rbx
   3d7d6:	mov    rbx,r10
   3d7d9:	mov    r10,rcx
   3d7dc:	ror    r10,0x12
   3d7e0:	xor    r10,rbx
   3d7e3:	mov    rbx,rcx
   3d7e6:	rol    rbx,0x17
   3d7ea:	xor    r10,rbx
   3d7ed:	add    r11,r10
   3d7f0:	mov    r10,r8
   3d7f3:	ror    r10,0x1c
   3d7f7:	add    rdx,r11
   3d7fa:	mov    rbx,r10
   3d7fd:	mov    r10,r8
   3d800:	rol    r10,0x1e
   3d804:	xor    r10,rbx
   3d807:	mov    rbx,r8
   3d80a:	rol    rbx,0x19
   3d80e:	xor    r10,rbx
   3d811:	mov    rbx,r9
   3d814:	or     rbx,r8
   3d817:	and    rbx,rax
   3d81a:	or     rbx,rbp
   3d81d:	mov    rbp,QWORD PTR [rsp+0x40]
   3d822:	add    r10,rbx
   3d825:	add    r10,r11
   3d828:	mov    rbx,rbp
   3d82b:	mov    r11,rbp
   3d82e:	ror    rbx,1
   3d831:	ror    r11,0x8
   3d835:	xor    r11,rbx
   3d838:	mov    rbx,rbp
   3d83b:	shr    rbx,0x7
   3d83f:	xor    r11,rbx
   3d842:	mov    rbx,QWORD PTR [rsp+0x28]
   3d847:	add    r11,QWORD PTR [rsp+0x38]
   3d84c:	add    r11,r13
   3d84f:	mov    rbp,rbx
   3d852:	rol    rbx,0x3
   3d856:	ror    rbp,0x13
   3d85a:	xor    rbx,rbp
   3d85d:	mov    rbp,QWORD PTR [rsp+0x28]
   3d862:	shr    rbp,0x6
   3d866:	xor    rbx,rbp
   3d869:	add    r11,rbx
   3d86c:	mov    rbp,r11
   3d86f:	mov    r11,rsi
   3d872:	xor    r11,rcx
   3d875:	mov    QWORD PTR [rsp+0x38],rbp
   3d87a:	mov    rbx,r11
   3d87d:	movabs r11,0xc76c51a30654be30
   3d887:	add    r11,rbp
   3d88a:	and    rbx,rdx
   3d88d:	mov    rbp,r8
   3d890:	add    r11,rdi
   3d893:	mov    rdi,rdx
   3d896:	xor    rbx,rsi
   3d899:	and    rbp,r10
   3d89c:	ror    rdi,0xe
   3d8a0:	add    r11,rbx
   3d8a3:	mov    rbx,rdi
   3d8a6:	mov    rdi,rdx
   3d8a9:	ror    rdi,0x12
   3d8ad:	xor    rdi,rbx
   3d8b0:	mov    rbx,rdx
   3d8b3:	rol    rbx,0x17
   3d8b7:	xor    rdi,rbx
   3d8ba:	add    r11,rdi
   3d8bd:	mov    rdi,r10
   3d8c0:	ror    rdi,0x1c
   3d8c4:	add    rax,r11
   3d8c7:	mov    rbx,rdi
   3d8ca:	mov    rdi,r10
   3d8cd:	rol    rdi,0x1e
   3d8d1:	xor    rdi,rbx
   3d8d4:	mov    rbx,r10
   3d8d7:	rol    rbx,0x19
   3d8db:	xor    rdi,rbx
   3d8de:	mov    rbx,r8
   3d8e1:	or     rbx,r10
   3d8e4:	and    rbx,r9
   3d8e7:	or     rbx,rbp
   3d8ea:	mov    rbp,QWORD PTR [rsp+0x48]
   3d8ef:	add    rdi,rbx
   3d8f2:	add    rdi,r11
   3d8f5:	mov    rbx,rbp
   3d8f8:	mov    r11,rbp
   3d8fb:	ror    rbx,1
   3d8fe:	ror    r11,0x8
   3d902:	xor    r11,rbx
   3d905:	mov    rbx,rbp
   3d908:	shr    rbx,0x7
   3d90c:	xor    r11,rbx
   3d90f:	mov    rbx,QWORD PTR [rsp+0x30]
   3d914:	add    r11,QWORD PTR [rsp+0x40]
   3d919:	add    r11,QWORD PTR [rsp+0x8]
   3d91e:	mov    rbp,rbx
   3d921:	rol    rbx,0x3
   3d925:	ror    rbp,0x13
   3d929:	xor    rbx,rbp
   3d92c:	mov    rbp,QWORD PTR [rsp+0x30]
   3d931:	shr    rbp,0x6
   3d935:	xor    rbx,rbp
   3d938:	add    r11,rbx
   3d93b:	mov    rbp,r11
   3d93e:	mov    r11,rcx
   3d941:	xor    r11,rdx
   3d944:	mov    QWORD PTR [rsp+0x40],rbp
   3d949:	mov    rbx,r11
   3d94c:	movabs r11,0xd192e819d6ef5218
   3d956:	add    r11,rbp
   3d959:	and    rbx,rax
   3d95c:	mov    rbp,r10
   3d95f:	add    r11,rsi
   3d962:	mov    rsi,rax
   3d965:	xor    rbx,rcx
   3d968:	ror    rsi,0xe
   3d96c:	add    r11,rbx
   3d96f:	mov    rbx,rsi
   3d972:	mov    rsi,rax
   3d975:	ror    rsi,0x12
   3d979:	xor    rsi,rbx
   3d97c:	mov    rbx,rax
   3d97f:	rol    rbx,0x17
   3d983:	xor    rsi,rbx
   3d986:	add    r11,rsi
   3d989:	mov    rsi,rdi
   3d98c:	ror    rsi,0x1c
   3d990:	add    r9,r11
   3d993:	mov    rbx,rsi
   3d996:	mov    rsi,rdi
   3d999:	rol    rsi,0x1e
   3d99d:	xor    rsi,rbx
   3d9a0:	mov    rbx,rdi
   3d9a3:	rol    rbx,0x19
   3d9a7:	xor    rsi,rbx
   3d9aa:	mov    rbx,r10
   3d9ad:	or     rbx,rdi
   3d9b0:	and    rbx,r8
   3d9b3:	and    rbp,rdi
   3d9b6:	or     rbx,rbp
   3d9b9:	mov    rbp,QWORD PTR [rsp+0x50]
   3d9be:	add    rsi,rbx
   3d9c1:	add    rsi,r11
   3d9c4:	mov    rbx,rbp
   3d9c7:	mov    r11,rbp
   3d9ca:	ror    rbx,1
   3d9cd:	ror    r11,0x8
   3d9d1:	xor    r11,rbx
   3d9d4:	mov    rbx,rbp
   3d9d7:	shr    rbx,0x7
   3d9db:	xor    r11,rbx
   3d9de:	mov    rbx,QWORD PTR [rsp+0x38]
   3d9e3:	add    r11,QWORD PTR [rsp+0x48]
   3d9e8:	add    r11,QWORD PTR [rsp+0x10]
   3d9ed:	mov    rbp,rbx
   3d9f0:	rol    rbx,0x3
   3d9f4:	ror    rbp,0x13
   3d9f8:	xor    rbx,rbp
   3d9fb:	mov    rbp,QWORD PTR [rsp+0x38]
   3da00:	shr    rbp,0x6
   3da04:	xor    rbx,rbp
   3da07:	add    r11,rbx
   3da0a:	mov    rbp,r11
   3da0d:	mov    r11,rdx
   3da10:	xor    r11,rax
   3da13:	mov    QWORD PTR [rsp+0x48],rbp
   3da18:	mov    rbx,r11
   3da1b:	movabs r11,0xd69906245565a910
   3da25:	add    r11,rbp
   3da28:	and    rbx,r9
   3da2b:	mov    rbp,rdi
   3da2e:	add    r11,rcx
   3da31:	mov    rcx,r9
   3da34:	xor    rbx,rdx
   3da37:	ror    rcx,0xe
   3da3b:	add    r11,rbx
   3da3e:	mov    rbx,rcx
   3da41:	mov    rcx,r9
   3da44:	ror    rcx,0x12
   3da48:	xor    rcx,rbx
   3da4b:	mov    rbx,r9
   3da4e:	rol    rbx,0x17
   3da52:	xor    rcx,rbx
   3da55:	add    r11,rcx
   3da58:	mov    rcx,rsi
   3da5b:	ror    rcx,0x1c
   3da5f:	add    r8,r11
   3da62:	mov    rbx,rcx
   3da65:	mov    rcx,rsi
   3da68:	rol    rcx,0x1e
   3da6c:	xor    rcx,rbx
   3da6f:	mov    rbx,rsi
   3da72:	and    rbp,rsi
   3da75:	rol    rbx,0x19
   3da79:	xor    rcx,rbx
   3da7c:	mov    rbx,rdi
   3da7f:	or     rbx,rsi
   3da82:	and    rbx,r10
   3da85:	or     rbx,rbp
   3da88:	mov    rbp,QWORD PTR [rsp+0x58]
   3da8d:	add    rcx,rbx
   3da90:	add    rcx,r11
   3da93:	mov    rbx,rbp
   3da96:	mov    r11,rbp
   3da99:	ror    rbx,1
   3da9c:	ror    r11,0x8
   3daa0:	xor    r11,rbx
   3daa3:	mov    rbx,rbp
   3daa6:	shr    rbx,0x7
   3daaa:	xor    r11,rbx
   3daad:	mov    rbx,QWORD PTR [rsp+0x40]
   3dab2:	add    r11,QWORD PTR [rsp+0x50]
   3dab7:	add    r11,QWORD PTR [rsp+0x18]
   3dabc:	mov    rbp,rbx
   3dabf:	rol    rbx,0x3
   3dac3:	ror    rbp,0x13
   3dac7:	xor    rbx,rbp
   3daca:	mov    rbp,QWORD PTR [rsp+0x40]
   3dacf:	shr    rbp,0x6
   3dad3:	xor    rbx,rbp
   3dad6:	add    r11,rbx
   3dad9:	mov    rbp,r11
   3dadc:	mov    r11,rax
   3dadf:	xor    r11,r9
   3dae2:	mov    QWORD PTR [rsp+0x50],rbp
   3dae7:	mov    rbx,r11
   3daea:	movabs r11,0xf40e35855771202a
   3daf4:	add    r11,rbp
   3daf7:	and    rbx,r8
   3dafa:	mov    rbp,rsi
   3dafd:	add    r11,rdx
   3db00:	mov    rdx,r8
   3db03:	xor    rbx,rax
   3db06:	ror    rdx,0xe
   3db0a:	add    r11,rbx
   3db0d:	mov    rbx,rdx
   3db10:	mov    rdx,r8
   3db13:	ror    rdx,0x12
   3db17:	xor    rdx,rbx
   3db1a:	mov    rbx,r8
   3db1d:	rol    rbx,0x17
   3db21:	xor    rdx,rbx
   3db24:	and    rbp,rcx
   3db27:	add    r11,rdx
   3db2a:	mov    rdx,rcx
   3db2d:	ror    rdx,0x1c
   3db31:	add    r10,r11
   3db34:	mov    rbx,rdx
   3db37:	mov    rdx,rcx
   3db3a:	rol    rdx,0x1e
   3db3e:	xor    rdx,rbx
   3db41:	mov    rbx,rcx
   3db44:	rol    rbx,0x19
   3db48:	xor    rdx,rbx
   3db4b:	mov    rbx,rsi
   3db4e:	or     rbx,rcx
   3db51:	and    rbx,rdi
   3db54:	or     rbx,rbp
   3db57:	add    rdx,rbx
   3db5a:	add    rdx,r11
   3db5d:	mov    r11,r15
   3db60:	ror    r11,1
   3db63:	mov    rbx,r11
   3db66:	mov    r11,r15
   3db69:	ror    r11,0x8
   3db6d:	xor    r11,rbx
   3db70:	mov    rbx,r15
   3db73:	shr    rbx,0x7
   3db77:	xor    r11,rbx
   3db7a:	mov    rbx,QWORD PTR [rsp+0x48]
   3db7f:	add    r11,QWORD PTR [rsp+0x58]
   3db84:	add    r11,QWORD PTR [rsp+0x20]
   3db89:	mov    rbp,rbx
   3db8c:	rol    rbx,0x3
   3db90:	ror    rbp,0x13
   3db94:	xor    rbx,rbp
   3db97:	mov    rbp,QWORD PTR [rsp+0x48]
   3db9c:	shr    rbp,0x6
   3dba0:	xor    rbx,rbp
   3dba3:	add    r11,rbx
   3dba6:	mov    rbp,r11
   3dba9:	mov    r11,r9
   3dbac:	xor    r11,r8
   3dbaf:	mov    QWORD PTR [rsp+0x58],rbp
   3dbb4:	mov    rbx,r11
   3dbb7:	movabs r11,0x106aa07032bbd1b8
   3dbc1:	and    rbx,r10
   3dbc4:	add    r11,rbp
   3dbc7:	mov    rbp,rcx
   3dbca:	xor    rbx,r9
   3dbcd:	add    r11,rax
   3dbd0:	mov    rax,r10
   3dbd3:	add    r11,rbx
   3dbd6:	ror    rax,0xe
   3dbda:	and    rbp,rdx
   3dbdd:	mov    rbx,rax
   3dbe0:	mov    rax,r10
   3dbe3:	ror    rax,0x12
   3dbe7:	xor    rax,rbx
   3dbea:	mov    rbx,r10
   3dbed:	rol    rbx,0x17
   3dbf1:	xor    rax,rbx
   3dbf4:	add    r11,rax
   3dbf7:	mov    rax,rdx
   3dbfa:	ror    rax,0x1c
   3dbfe:	add    rdi,r11
   3dc01:	mov    rbx,rax
   3dc04:	mov    rax,rdx
   3dc07:	rol    rax,0x1e
   3dc0b:	xor    rax,rbx
   3dc0e:	mov    rbx,rdx
   3dc11:	rol    rbx,0x19
   3dc15:	xor    rax,rbx
   3dc18:	mov    rbx,rcx
   3dc1b:	or     rbx,rdx
   3dc1e:	and    rbx,rsi
   3dc21:	or     rbx,rbp
   3dc24:	add    rax,rbx
   3dc27:	add    rax,r11
   3dc2a:	mov    r11,r14
   3dc2d:	ror    r11,1
   3dc30:	mov    rbx,r11
   3dc33:	mov    r11,r14
   3dc36:	ror    r11,0x8
   3dc3a:	xor    r11,rbx
   3dc3d:	mov    rbx,r14
   3dc40:	shr    rbx,0x7
   3dc44:	xor    r11,rbx
   3dc47:	add    r11,r15
   3dc4a:	mov    r15,QWORD PTR [rsp+0x50]
   3dc4f:	add    r11,QWORD PTR [rsp+0x28]
   3dc54:	mov    rbx,r15
   3dc57:	ror    rbx,0x13
   3dc5b:	mov    rbp,rbx
   3dc5e:	mov    rbx,r15
   3dc61:	shr    r15,0x6
   3dc65:	rol    rbx,0x3
   3dc69:	xor    rbx,rbp
   3dc6c:	mov    rbp,rdx
   3dc6f:	xor    rbx,r15
   3dc72:	lea    r15,[r11+rbx*1]
   3dc76:	mov    r11,r8
   3dc79:	xor    r11,r10
   3dc7c:	mov    rbx,r11
   3dc7f:	movabs r11,0x19a4c116b8d2d0c8
   3dc89:	and    rbx,rdi
   3dc8c:	add    r11,r15
   3dc8f:	and    rbp,rax
   3dc92:	add    r11,r9
   3dc95:	mov    r9,rdi
   3dc98:	xor    rbx,r8
   3dc9b:	ror    r9,0xe
   3dc9f:	add    r11,rbx
   3dca2:	mov    rbx,r9
   3dca5:	mov    r9,rdi
   3dca8:	ror    r9,0x12
   3dcac:	xor    r9,rbx
   3dcaf:	mov    rbx,rdi
   3dcb2:	rol    rbx,0x17
   3dcb6:	xor    r9,rbx
   3dcb9:	add    r11,r9
   3dcbc:	mov    r9,rax
   3dcbf:	ror    r9,0x1c
   3dcc3:	add    rsi,r11
   3dcc6:	mov    rbx,r9
   3dcc9:	mov    r9,rax
   3dccc:	rol    r9,0x1e
   3dcd0:	xor    r9,rbx
   3dcd3:	mov    rbx,rax
   3dcd6:	rol    rbx,0x19
   3dcda:	xor    r9,rbx
   3dcdd:	mov    rbx,rdx
   3dce0:	or     rbx,rax
   3dce3:	and    rbx,rcx
   3dce6:	or     rbx,rbp
   3dce9:	mov    rbp,QWORD PTR [rsp+0x60]
   3dcee:	add    r9,rbx
   3dcf1:	add    r9,r11
   3dcf4:	mov    rbx,rbp
   3dcf7:	mov    r11,rbp
   3dcfa:	ror    rbx,1
   3dcfd:	ror    r11,0x8
   3dd01:	xor    r11,rbx
   3dd04:	mov    rbx,rbp
   3dd07:	shr    rbx,0x7
   3dd0b:	xor    r11,rbx
   3dd0e:	add    r11,r14
   3dd11:	mov    r14,QWORD PTR [rsp+0x58]
   3dd16:	add    r11,QWORD PTR [rsp+0x30]
   3dd1b:	mov    rbx,r14
   3dd1e:	ror    rbx,0x13
   3dd22:	mov    rbp,rbx
   3dd25:	mov    rbx,r14
   3dd28:	rol    rbx,0x3
   3dd2c:	xor    rbx,rbp
   3dd2f:	shr    r14,0x6
   3dd33:	mov    rbp,rax
   3dd36:	xor    rbx,r14
   3dd39:	and    rbp,r9
   3dd3c:	lea    r14,[r11+rbx*1]
   3dd40:	mov    r11,r10
   3dd43:	xor    r11,rdi
   3dd46:	mov    rbx,r11
   3dd49:	movabs r11,0x1e376c085141ab53
   3dd53:	add    r11,r14
   3dd56:	and    rbx,rsi
   3dd59:	add    r11,r8
   3dd5c:	mov    r8,rsi
   3dd5f:	xor    rbx,r10
   3dd62:	ror    r8,0xe
   3dd66:	add    r11,rbx
   3dd69:	mov    rbx,r8
   3dd6c:	mov    r8,rsi
   3dd6f:	ror    r8,0x12
   3dd73:	xor    r8,rbx
   3dd76:	mov    rbx,rsi
   3dd79:	rol    rbx,0x17
   3dd7d:	xor    r8,rbx
   3dd80:	add    r11,r8
   3dd83:	mov    r8,r9
   3dd86:	ror    r8,0x1c
   3dd8a:	add    rcx,r11
   3dd8d:	mov    rbx,r8
   3dd90:	mov    r8,r9
   3dd93:	rol    r8,0x1e
   3dd97:	xor    r8,rbx
   3dd9a:	mov    rbx,r9
   3dd9d:	rol    rbx,0x19
   3dda1:	xor    r8,rbx
   3dda4:	mov    rbx,rax
   3dda7:	or     rbx,r9
   3ddaa:	and    rbx,rdx
   3ddad:	or     rbx,rbp
   3ddb0:	add    r8,rbx
   3ddb3:	add    r8,r11
   3ddb6:	mov    r11,r12
   3ddb9:	ror    r11,1
   3ddbc:	mov    rbx,r11
   3ddbf:	mov    r11,r12
   3ddc2:	ror    r11,0x8
   3ddc6:	xor    r11,rbx
   3ddc9:	mov    rbx,r12
   3ddcc:	shr    rbx,0x7
   3ddd0:	xor    r11,rbx
   3ddd3:	mov    rbx,r15
   3ddd6:	add    r11,QWORD PTR [rsp+0x60]
   3dddb:	add    r11,QWORD PTR [rsp+0x38]
   3dde0:	ror    rbx,0x13
   3dde4:	mov    rbp,rbx
   3dde7:	mov    rbx,r15
   3ddea:	rol    rbx,0x3
   3ddee:	xor    rbx,rbp
   3ddf1:	mov    rbp,r15
   3ddf4:	shr    rbp,0x6
   3ddf8:	xor    rbx,rbp
   3ddfb:	add    r11,rbx
   3ddfe:	mov    rbp,r11
   3de01:	mov    r11,rdi
   3de04:	xor    r11,rsi
   3de07:	mov    QWORD PTR [rsp+0x60],rbp
   3de0c:	mov    rbx,r11
   3de0f:	movabs r11,0x2748774cdf8eeb99
   3de19:	add    r11,rbp
   3de1c:	and    rbx,rcx
   3de1f:	mov    rbp,r9
   3de22:	add    r11,r10
   3de25:	mov    r10,rcx
   3de28:	xor    rbx,rdi
   3de2b:	and    rbp,r8
   3de2e:	ror    r10,0xe
   3de32:	add    r11,rbx
   3de35:	mov    rbx,r10
   3de38:	mov    r10,rcx
   3de3b:	ror    r10,0x12
   3de3f:	xor    r10,rbx
   3de42:	mov    rbx,rcx
   3de45:	rol    rbx,0x17
   3de49:	xor    r10,rbx
   3de4c:	add    r11,r10
   3de4f:	mov    r10,r8
   3de52:	ror    r10,0x1c
   3de56:	add    rdx,r11
   3de59:	mov    rbx,r10
   3de5c:	mov    r10,r8
   3de5f:	rol    r10,0x1e
   3de63:	xor    r10,rbx
   3de66:	mov    rbx,r8
   3de69:	rol    rbx,0x19
   3de6d:	xor    r10,rbx
   3de70:	mov    rbx,r9
   3de73:	or     rbx,r8
   3de76:	and    rbx,rax
   3de79:	or     rbx,rbp
   3de7c:	add    r10,rbx
   3de7f:	add    r10,r11
   3de82:	mov    r11,r13
   3de85:	ror    r11,1
   3de88:	mov    rbx,r11
   3de8b:	mov    r11,r13
   3de8e:	ror    r11,0x8
   3de92:	xor    r11,rbx
   3de95:	mov    rbx,r13
   3de98:	shr    rbx,0x7
   3de9c:	xor    r11,rbx
   3de9f:	mov    rbx,r14
   3dea2:	ror    rbx,0x13
   3dea6:	add    r11,r12
   3dea9:	add    r11,QWORD PTR [rsp+0x40]
   3deae:	mov    rbp,rbx
   3deb1:	mov    rbx,r14
   3deb4:	rol    rbx,0x3
   3deb8:	xor    rbx,rbp
   3debb:	mov    rbp,r14
   3debe:	shr    rbp,0x6
   3dec2:	xor    rbx,rbp
   3dec5:	mov    rbp,r8
   3dec8:	add    r11,rbx
   3decb:	mov    r12,r11
   3dece:	mov    r11,rsi
   3ded1:	xor    r11,rcx
   3ded4:	mov    QWORD PTR [rsp+0x68],r12
   3ded9:	mov    rbx,r11
   3dedc:	movabs r11,0x34b0bcb5e19b48a8
   3dee6:	add    r11,r12
   3dee9:	and    rbx,rdx
   3deec:	mov    r12,QWORD PTR [rsp+0x8]
   3def1:	add    r11,rdi
   3def4:	mov    rdi,rdx
   3def7:	xor    rbx,rsi
   3defa:	ror    rdi,0xe
   3defe:	add    r11,rbx
   3df01:	mov    rbx,rdi
   3df04:	mov    rdi,rdx
   3df07:	ror    rdi,0x12
   3df0b:	xor    rdi,rbx
   3df0e:	mov    rbx,rdx
   3df11:	rol    rbx,0x17
   3df15:	xor    rdi,rbx
   3df18:	add    r11,rdi
   3df1b:	mov    rdi,r10
   3df1e:	ror    rdi,0x1c
   3df22:	add    rax,r11
   3df25:	mov    rbx,rdi
   3df28:	mov    rdi,r10
   3df2b:	rol    rdi,0x1e
   3df2f:	xor    rdi,rbx
   3df32:	mov    rbx,r10
   3df35:	rol    rbx,0x19
   3df39:	xor    rdi,rbx
   3df3c:	mov    rbx,r8
   3df3f:	or     rbx,r10
   3df42:	and    rbx,r9
   3df45:	and    rbp,r10
   3df48:	or     rbx,rbp
   3df4b:	add    rdi,rbx
   3df4e:	add    rdi,r11
   3df51:	mov    r11,r12
   3df54:	ror    r11,1
   3df57:	mov    rbx,r11
   3df5a:	mov    r11,r12
   3df5d:	ror    r11,0x8
   3df61:	xor    r11,rbx
   3df64:	mov    rbx,r12
   3df67:	shr    rbx,0x7
   3df6b:	xor    r11,rbx
   3df6e:	add    r11,r13
   3df71:	mov    r13,QWORD PTR [rsp+0x60]
   3df76:	add    r11,QWORD PTR [rsp+0x48]
   3df7b:	mov    rbp,r13
   3df7e:	mov    rbx,r13
   3df81:	ror    rbp,0x13
   3df85:	rol    rbx,0x3
   3df89:	xor    rbx,rbp
   3df8c:	mov    rbp,r13
   3df8f:	mov    r13,QWORD PTR [rsp+0x10]
   3df94:	shr    rbp,0x6
   3df98:	xor    rbx,rbp
   3df9b:	add    r11,rbx
   3df9e:	mov    rbp,r11
   3dfa1:	mov    r11,rcx
   3dfa4:	xor    r11,rdx
   3dfa7:	mov    QWORD PTR [rsp+0x88],rbp
   3dfaf:	mov    rbx,r11
   3dfb2:	movabs r11,0x391c0cb3c5c95a63
   3dfbc:	add    r11,rbp
   3dfbf:	and    rbx,rax
   3dfc2:	mov    rbp,r10
   3dfc5:	add    r11,rsi
   3dfc8:	mov    rsi,rax
   3dfcb:	xor    rbx,rcx
   3dfce:	ror    rsi,0xe
   3dfd2:	add    r11,rbx
   3dfd5:	mov    rbx,rsi
   3dfd8:	mov    rsi,rax
   3dfdb:	ror    rsi,0x12
   3dfdf:	xor    rsi,rbx
   3dfe2:	mov    rbx,rax
   3dfe5:	rol    rbx,0x17
   3dfe9:	xor    rsi,rbx
   3dfec:	add    r11,rsi
   3dfef:	mov    rsi,rdi
   3dff2:	ror    rsi,0x1c
   3dff6:	add    r9,r11
   3dff9:	mov    rbx,rsi
   3dffc:	mov    rsi,rdi
   3dfff:	rol    rsi,0x1e
   3e003:	and    rbp,rdi
   3e006:	xor    rsi,rbx
   3e009:	mov    rbx,rdi
   3e00c:	rol    rbx,0x19
   3e010:	xor    rsi,rbx
   3e013:	mov    rbx,r10
   3e016:	or     rbx,rdi
   3e019:	and    rbx,r8
   3e01c:	or     rbx,rbp
   3e01f:	add    rsi,rbx
   3e022:	add    rsi,r11
   3e025:	mov    r11,r13
   3e028:	ror    r11,1
   3e02b:	mov    rbx,r11
   3e02e:	mov    r11,r13
   3e031:	ror    r11,0x8
   3e035:	xor    r11,rbx
   3e038:	mov    rbx,r13
   3e03b:	shr    rbx,0x7
   3e03f:	xor    r11,rbx
   3e042:	add    r11,r12
   3e045:	mov    r12,QWORD PTR [rsp+0x68]
   3e04a:	add    r11,QWORD PTR [rsp+0x50]
   3e04f:	mov    rbp,r12
   3e052:	mov    rbx,r12
   3e055:	ror    rbp,0x13
   3e059:	rol    rbx,0x3
   3e05d:	xor    rbx,rbp
   3e060:	mov    rbp,r12
   3e063:	shr    rbp,0x6
   3e067:	xor    rbx,rbp
   3e06a:	mov    rbp,rdi
   3e06d:	add    r11,rbx
   3e070:	mov    r12,r11
   3e073:	mov    r11,rdx
   3e076:	xor    r11,rax
   3e079:	mov    QWORD PTR [rsp+0x8],r12
   3e07e:	mov    rbx,r11
   3e081:	movabs r11,0x4ed8aa4ae3418acb
   3e08b:	add    r11,r12
   3e08e:	and    rbx,r9
   3e091:	mov    r12,QWORD PTR [rsp+0x18]
   3e096:	add    r11,rcx
   3e099:	mov    rcx,r9
   3e09c:	xor    rbx,rdx
   3e09f:	ror    rcx,0xe
   3e0a3:	add    r11,rbx
   3e0a6:	mov    rbx,rcx
   3e0a9:	mov    rcx,r9
   3e0ac:	ror    rcx,0x12
   3e0b0:	xor    rcx,rbx
   3e0b3:	mov    rbx,r9
   3e0b6:	rol    rbx,0x17
   3e0ba:	and    rbp,rsi
   3e0bd:	xor    rcx,rbx
   3e0c0:	add    r11,rcx
   3e0c3:	mov    rcx,rsi
   3e0c6:	ror    rcx,0x1c
   3e0ca:	add    r8,r11
   3e0cd:	mov    rbx,rcx
   3e0d0:	mov    rcx,rsi
   3e0d3:	rol    rcx,0x1e
   3e0d7:	xor    rcx,rbx
   3e0da:	mov    rbx,rsi
   3e0dd:	rol    rbx,0x19
   3e0e1:	xor    rcx,rbx
   3e0e4:	mov    rbx,rdi
   3e0e7:	or     rbx,rsi
   3e0ea:	and    rbx,r10
   3e0ed:	or     rbx,rbp
   3e0f0:	add    rcx,rbx
   3e0f3:	add    rcx,r11
   3e0f6:	mov    r11,r12
   3e0f9:	ror    r11,1
   3e0fc:	mov    rbx,r11
   3e0ff:	mov    r11,r12
   3e102:	ror    r11,0x8
   3e106:	xor    r11,rbx
   3e109:	mov    rbx,r12
   3e10c:	shr    rbx,0x7
   3e110:	xor    r11,rbx
   3e113:	add    r11,r13
   3e116:	mov    r13,QWORD PTR [rsp+0x88]
   3e11e:	add    r11,QWORD PTR [rsp+0x58]
   3e123:	mov    rbp,r13
   3e126:	mov    rbx,r13
   3e129:	ror    rbp,0x13
   3e12d:	rol    rbx,0x3
   3e131:	xor    rbx,rbp
   3e134:	mov    rbp,r13
   3e137:	mov    r13,QWORD PTR [rsp+0x20]
   3e13c:	shr    rbp,0x6
   3e140:	xor    rbx,rbp
   3e143:	add    r11,rbx
   3e146:	mov    rbp,r11
   3e149:	mov    r11,rax
   3e14c:	xor    r11,r9
   3e14f:	mov    QWORD PTR [rsp+0x10],rbp
   3e154:	mov    rbx,r11
   3e157:	movabs r11,0x5b9cca4f7763e373
   3e161:	and    rbx,r8
   3e164:	add    r11,rbp
   3e167:	mov    rbp,rsi
   3e16a:	xor    rbx,rax
   3e16d:	add    r11,rdx
   3e170:	mov    rdx,r8
   3e173:	and    rbp,rcx
   3e176:	ror    rdx,0xe
   3e17a:	add    r11,rbx
   3e17d:	mov    rbx,rdx
   3e180:	mov    rdx,r8
   3e183:	ror    rdx,0x12
   3e187:	xor    rdx,rbx
   3e18a:	mov    rbx,r8
   3e18d:	rol    rbx,0x17
   3e191:	xor    rdx,rbx
   3e194:	add    r11,rdx
   3e197:	mov    rdx,rcx
   3e19a:	ror    rdx,0x1c
   3e19e:	add    r10,r11
   3e1a1:	mov    rbx,rdx
   3e1a4:	mov    rdx,rcx
   3e1a7:	rol    rdx,0x1e
   3e1ab:	xor    rdx,rbx
   3e1ae:	mov    rbx,rcx
   3e1b1:	rol    rbx,0x19
   3e1b5:	xor    rdx,rbx
   3e1b8:	mov    rbx,rsi
   3e1bb:	or     rbx,rcx
   3e1be:	and    rbx,rdi
   3e1c1:	or     rbx,rbp
   3e1c4:	add    rdx,rbx
   3e1c7:	add    rdx,r11
   3e1ca:	mov    r11,r13
   3e1cd:	ror    r11,1
   3e1d0:	mov    rbx,r11
   3e1d3:	mov    r11,r13
   3e1d6:	ror    r11,0x8
   3e1da:	xor    r11,rbx
   3e1dd:	mov    rbx,r13
   3e1e0:	shr    rbx,0x7
   3e1e4:	xor    r11,rbx
   3e1e7:	add    r11,r12
   3e1ea:	mov    r12,QWORD PTR [rsp+0x8]
   3e1ef:	add    r11,r15
   3e1f2:	mov    rbp,r12
   3e1f5:	mov    rbx,r12
   3e1f8:	ror    rbp,0x13
   3e1fc:	rol    rbx,0x3
   3e200:	xor    rbx,rbp
   3e203:	mov    rbp,r12
   3e206:	shr    rbp,0x6
   3e20a:	xor    rbx,rbp
   3e20d:	mov    rbp,rcx
   3e210:	add    r11,rbx
   3e213:	and    rbp,rdx
   3e216:	mov    r12,r11
   3e219:	mov    r11,r9
   3e21c:	xor    r11,r8
   3e21f:	mov    QWORD PTR [rsp+0x18],r12
   3e224:	mov    rbx,r11
   3e227:	movabs r11,0x682e6ff3d6b2b8a3
   3e231:	and    rbx,r10
   3e234:	add    r11,r12
   3e237:	mov    r12,QWORD PTR [rsp+0x28]
   3e23c:	xor    rbx,r9
   3e23f:	add    r11,rax
   3e242:	mov    rax,r10
   3e245:	add    r11,rbx
   3e248:	mov    rbx,r10
   3e24b:	ror    rax,0x12
   3e24f:	ror    rbx,0xe
   3e253:	xor    rax,rbx
   3e256:	mov    rbx,r10
   3e259:	rol    rbx,0x17
   3e25d:	xor    rax,rbx
   3e260:	mov    rbx,rdx
   3e263:	add    r11,rax
   3e266:	mov    rax,rdx
   3e269:	ror    rbx,0x1c
   3e26d:	rol    rax,0x1e
   3e271:	add    rdi,r11
   3e274:	xor    rax,rbx
   3e277:	mov    rbx,rdx
   3e27a:	rol    rbx,0x19
   3e27e:	xor    rax,rbx
   3e281:	mov    rbx,rcx
   3e284:	or     rbx,rdx
   3e287:	and    rbx,rsi
   3e28a:	or     rbx,rbp
   3e28d:	add    rax,rbx
   3e290:	add    rax,r11
   3e293:	mov    r11,r12
   3e296:	ror    r11,1
   3e299:	mov    rbx,r11
   3e29c:	mov    r11,r12
   3e29f:	ror    r11,0x8
   3e2a3:	xor    r11,rbx
   3e2a6:	mov    rbx,r12
   3e2a9:	shr    rbx,0x7
   3e2ad:	xor    r11,rbx
   3e2b0:	add    r11,r13
   3e2b3:	mov    r13,QWORD PTR [rsp+0x10]
   3e2b8:	add    r11,r14
   3e2bb:	mov    rbp,r13
   3e2be:	mov    rbx,r13
   3e2c1:	ror    rbp,0x13
   3e2c5:	rol    rbx,0x3
   3e2c9:	xor    rbx,rbp
   3e2cc:	mov    rbp,r13
   3e2cf:	shr    rbp,0x6
   3e2d3:	xor    rbx,rbp
   3e2d6:	mov    rbp,rdx
   3e2d9:	add    r11,rbx
   3e2dc:	and    rbp,rax
   3e2df:	mov    r13,r11
   3e2e2:	mov    r11,r8
   3e2e5:	xor    r11,r10
   3e2e8:	mov    QWORD PTR [rsp+0x20],r13
   3e2ed:	mov    rbx,r11
   3e2f0:	movabs r11,0x748f82ee5defb2fc
   3e2fa:	add    r11,r13
   3e2fd:	and    rbx,rdi
   3e300:	mov    r13,QWORD PTR [rsp+0x30]
   3e305:	add    r11,r9
   3e308:	mov    r9,rdi
   3e30b:	xor    rbx,r8
   3e30e:	ror    r9,0xe
   3e312:	add    r11,rbx
   3e315:	mov    rbx,r9
   3e318:	mov    r9,rdi
   3e31b:	ror    r9,0x12
   3e31f:	xor    r9,rbx
   3e322:	mov    rbx,rdi
   3e325:	rol    rbx,0x17
   3e329:	xor    r9,rbx
   3e32c:	add    r11,r9
   3e32f:	mov    r9,rax
   3e332:	ror    r9,0x1c
   3e336:	add    rsi,r11
   3e339:	mov    rbx,r9
   3e33c:	mov    r9,rax
   3e33f:	rol    r9,0x1e
   3e343:	xor    r9,rbx
   3e346:	mov    rbx,rax
   3e349:	rol    rbx,0x19
   3e34d:	xor    r9,rbx
   3e350:	mov    rbx,rdx
   3e353:	or     rbx,rax
   3e356:	and    rbx,rcx
   3e359:	or     rbx,rbp
   3e35c:	add    r9,rbx
   3e35f:	add    r9,r11
   3e362:	mov    r11,r13
   3e365:	ror    r11,1
   3e368:	mov    rbx,r11
   3e36b:	mov    r11,r13
   3e36e:	ror    r11,0x8
   3e372:	xor    r11,rbx
   3e375:	mov    rbx,r13
   3e378:	shr    rbx,0x7
   3e37c:	xor    r11,rbx
   3e37f:	mov    rbx,QWORD PTR [rsp+0x18]
   3e384:	add    r11,r12
   3e387:	add    r11,QWORD PTR [rsp+0x60]
   3e38c:	mov    r12,rbx
   3e38f:	ror    r12,0x13
   3e393:	mov    rbp,r12
   3e396:	mov    r12,rbx
   3e399:	rol    rbx,0x3
   3e39d:	xor    rbx,rbp
   3e3a0:	mov    rbp,r12
   3e3a3:	shr    rbp,0x6
   3e3a7:	xor    rbx,rbp
   3e3aa:	mov    rbp,rax
   3e3ad:	add    r11,rbx
   3e3b0:	and    rbp,r9
   3e3b3:	mov    r12,r11
   3e3b6:	mov    r11,r10
   3e3b9:	xor    r11,rdi
   3e3bc:	mov    QWORD PTR [rsp+0x28],r12
   3e3c1:	mov    rbx,r11
   3e3c4:	movabs r11,0x78a5636f43172f60
   3e3ce:	add    r11,r12
   3e3d1:	and    rbx,rsi
   3e3d4:	mov    r12,QWORD PTR [rsp+0x38]
   3e3d9:	add    r11,r8
   3e3dc:	mov    r8,rsi
   3e3df:	xor    rbx,r10
   3e3e2:	ror    r8,0xe
   3e3e6:	add    r11,rbx
   3e3e9:	mov    rbx,r8
   3e3ec:	mov    r8,rsi
   3e3ef:	ror    r8,0x12
   3e3f3:	xor    r8,rbx
   3e3f6:	mov    rbx,rsi
   3e3f9:	rol    rbx,0x17
   3e3fd:	xor    r8,rbx
   3e400:	add    r11,r8
   3e403:	mov    r8,r9
   3e406:	ror    r8,0x1c
   3e40a:	add    rcx,r11
   3e40d:	mov    rbx,r8
   3e410:	mov    r8,r9
   3e413:	rol    r8,0x1e
   3e417:	xor    r8,rbx
   3e41a:	mov    rbx,r9
   3e41d:	rol    rbx,0x19
   3e421:	xor    r8,rbx
   3e424:	mov    rbx,rax
   3e427:	or     rbx,r9
   3e42a:	and    rbx,rdx
   3e42d:	or     rbx,rbp
   3e430:	add    r8,rbx
   3e433:	add    r8,r11
   3e436:	mov    r11,r12
   3e439:	ror    r11,1
   3e43c:	mov    rbx,r11
   3e43f:	mov    r11,r12
   3e442:	ror    r11,0x8
   3e446:	xor    r11,rbx
   3e449:	mov    rbx,r12
   3e44c:	shr    rbx,0x7
   3e450:	xor    r11,rbx
   3e453:	add    r11,r13
   3e456:	mov    r13,QWORD PTR [rsp+0x20]
   3e45b:	add    r11,QWORD PTR [rsp+0x68]
   3e460:	mov    rbp,r13
   3e463:	mov    rbx,r13
   3e466:	ror    rbp,0x13
   3e46a:	rol    rbx,0x3
   3e46e:	xor    rbx,rbp
   3e471:	mov    rbp,r13
   3e474:	mov    r13,QWORD PTR [rsp+0x40]
   3e479:	shr    rbp,0x6
   3e47d:	xor    rbx,rbp
   3e480:	add    r11,rbx
   3e483:	mov    rbp,r11
   3e486:	mov    r11,rdi
   3e489:	xor    r11,rsi
   3e48c:	mov    QWORD PTR [rsp+0x30],rbp
   3e491:	mov    rbx,r11
   3e494:	movabs r11,0x84c87814a1f0ab72
   3e49e:	add    r11,rbp
   3e4a1:	and    rbx,rcx
   3e4a4:	mov    rbp,r9
   3e4a7:	add    r11,r10
   3e4aa:	mov    r10,rcx
   3e4ad:	xor    rbx,rdi
   3e4b0:	ror    r10,0xe
   3e4b4:	add    r11,rbx
   3e4b7:	mov    rbx,r10
   3e4ba:	mov    r10,rcx
   3e4bd:	ror    r10,0x12
   3e4c1:	xor    r10,rbx
   3e4c4:	mov    rbx,rcx
   3e4c7:	rol    rbx,0x17
   3e4cb:	xor    r10,rbx
   3e4ce:	add    r11,r10
   3e4d1:	mov    r10,r8
   3e4d4:	ror    r10,0x1c
   3e4d8:	add    rdx,r11
   3e4db:	mov    rbx,r10
   3e4de:	mov    r10,r8
   3e4e1:	rol    r10,0x1e
   3e4e5:	xor    r10,rbx
   3e4e8:	mov    rbx,r8
   3e4eb:	rol    rbx,0x19
   3e4ef:	and    rbp,r8
   3e4f2:	xor    r10,rbx
   3e4f5:	mov    rbx,r9
   3e4f8:	or     rbx,r8
   3e4fb:	and    rbx,rax
   3e4fe:	or     rbx,rbp
   3e501:	add    r10,rbx
   3e504:	add    r10,r11
   3e507:	mov    r11,r13
   3e50a:	ror    r11,1
   3e50d:	mov    rbx,r11
   3e510:	mov    r11,r13
   3e513:	ror    r11,0x8
   3e517:	xor    r11,rbx
   3e51a:	mov    rbx,r13
   3e51d:	shr    rbx,0x7
   3e521:	xor    r11,rbx
   3e524:	mov    rbx,QWORD PTR [rsp+0x28]
   3e529:	add    r11,r12
   3e52c:	add    r11,QWORD PTR [rsp+0x88]
   3e534:	mov    r12,rbx
   3e537:	ror    r12,0x13
   3e53b:	mov    rbp,r12
   3e53e:	mov    r12,rbx
   3e541:	rol    rbx,0x3
   3e545:	xor    rbx,rbp
   3e548:	mov    rbp,r12
   3e54b:	shr    rbp,0x6
   3e54f:	xor    rbx,rbp
   3e552:	mov    rbp,r8
   3e555:	add    r11,rbx
   3e558:	mov    r12,r11
   3e55b:	mov    r11,rsi
   3e55e:	xor    r11,rcx
   3e561:	mov    QWORD PTR [rsp+0x38],r12
   3e566:	mov    rbx,r11
   3e569:	movabs r11,0x8cc702081a6439ec
   3e573:	add    r11,r12
   3e576:	and    rbx,rdx
   3e579:	mov    r12,QWORD PTR [rsp+0x48]
   3e57e:	add    r11,rdi
   3e581:	mov    rdi,rdx
   3e584:	xor    rbx,rsi
   3e587:	ror    rdi,0xe
   3e58b:	add    r11,rbx
   3e58e:	mov    rbx,rdi
   3e591:	mov    rdi,rdx
   3e594:	ror    rdi,0x12
   3e598:	xor    rdi,rbx
   3e59b:	mov    rbx,rdx
   3e59e:	rol    rbx,0x17
   3e5a2:	xor    rdi,rbx
   3e5a5:	mov    rbx,r10
   3e5a8:	add    r11,rdi
   3e5ab:	ror    rbx,0x1c
   3e5af:	and    rbp,r10
   3e5b2:	lea    rdi,[rax+r11*1]
   3e5b6:	mov    rax,r10
   3e5b9:	rol    rax,0x1e
   3e5bd:	xor    rax,rbx
   3e5c0:	mov    rbx,r10
   3e5c3:	rol    rbx,0x19
   3e5c7:	xor    rax,rbx
   3e5ca:	mov    rbx,r8
   3e5cd:	or     rbx,r10
   3e5d0:	and    rbx,r9
   3e5d3:	or     rbx,rbp
   3e5d6:	add    rax,rbx
   3e5d9:	add    rax,r11
   3e5dc:	mov    r11,r12
   3e5df:	ror    r11,1
   3e5e2:	mov    rbx,r11
   3e5e5:	mov    r11,r12
   3e5e8:	ror    r11,0x8
   3e5ec:	xor    r11,rbx
   3e5ef:	mov    rbx,r12
   3e5f2:	shr    rbx,0x7
   3e5f6:	xor    r11,rbx
   3e5f9:	add    r11,r13
   3e5fc:	mov    r13,QWORD PTR [rsp+0x30]
   3e601:	add    r11,QWORD PTR [rsp+0x8]
   3e606:	mov    rbp,r13
   3e609:	mov    rbx,r13
   3e60c:	ror    rbp,0x13
   3e610:	rol    rbx,0x3
   3e614:	xor    rbx,rbp
   3e617:	mov    rbp,r13
   3e61a:	mov    r13,QWORD PTR [rsp+0x50]
   3e61f:	shr    rbp,0x6
   3e623:	xor    rbx,rbp
   3e626:	add    r11,rbx
   3e629:	mov    rbp,r11
   3e62c:	mov    r11,rcx
   3e62f:	xor    r11,rdx
   3e632:	mov    QWORD PTR [rsp+0x90],rbp
   3e63a:	mov    rbx,r11
   3e63d:	movabs r11,0x90befffa23631e28
   3e647:	add    r11,rbp
   3e64a:	and    rbx,rdi
   3e64d:	mov    rbp,r10
   3e650:	add    r11,rsi
   3e653:	mov    rsi,rdi
   3e656:	xor    rbx,rcx
   3e659:	ror    rsi,0xe
   3e65d:	add    r11,rbx
   3e660:	mov    rbx,rsi
   3e663:	mov    rsi,rdi
   3e666:	ror    rsi,0x12
   3e66a:	and    rbp,rax
   3e66d:	xor    rsi,rbx
   3e670:	mov    rbx,rdi
   3e673:	rol    rbx,0x17
   3e677:	xor    rsi,rbx
   3e67a:	add    r11,rsi
   3e67d:	mov    rsi,rax
   3e680:	ror    rsi,0x1c
   3e684:	add    r9,r11
   3e687:	mov    rbx,rsi
   3e68a:	mov    rsi,rax
   3e68d:	rol    rsi,0x1e
   3e691:	xor    rsi,rbx
   3e694:	mov    rbx,rax
   3e697:	rol    rbx,0x19
   3e69b:	xor    rsi,rbx
   3e69e:	mov    rbx,r10
   3e6a1:	or     rbx,rax
   3e6a4:	and    rbx,r8
   3e6a7:	or     rbx,rbp
   3e6aa:	add    rsi,rbx
   3e6ad:	add    rsi,r11
   3e6b0:	mov    r11,r13
   3e6b3:	ror    r11,1
   3e6b6:	mov    rbx,r11
   3e6b9:	mov    r11,r13
   3e6bc:	ror    r11,0x8
   3e6c0:	xor    r11,rbx
   3e6c3:	mov    rbx,r13
   3e6c6:	shr    rbx,0x7
   3e6ca:	xor    r11,rbx
   3e6cd:	mov    rbx,QWORD PTR [rsp+0x38]
   3e6d2:	add    r11,r12
   3e6d5:	add    r11,QWORD PTR [rsp+0x10]
   3e6da:	mov    r12,rbx
   3e6dd:	ror    r12,0x13
   3e6e1:	mov    rbp,r12
   3e6e4:	mov    r12,rbx
   3e6e7:	rol    rbx,0x3
   3e6eb:	xor    rbx,rbp
   3e6ee:	shr    r12,0x6
   3e6f2:	mov    rbp,rax
   3e6f5:	xor    rbx,r12
   3e6f8:	add    r11,rbx
   3e6fb:	mov    r12,r11
   3e6fe:	mov    r11,rdx
   3e701:	xor    r11,rdi
   3e704:	mov    QWORD PTR [rsp+0x40],r12
   3e709:	mov    rbx,r11
   3e70c:	movabs r11,0xa4506cebde82bde9
   3e716:	and    rbx,r9
   3e719:	xor    rbx,rdx
   3e71c:	add    r11,r12
   3e71f:	and    rbp,rsi
   3e722:	mov    r12,QWORD PTR [rsp+0x58]
   3e727:	add    r11,rcx
   3e72a:	mov    rcx,r9
   3e72d:	ror    rcx,0xe
   3e731:	add    r11,rbx
   3e734:	mov    rbx,rcx
   3e737:	mov    rcx,r9
   3e73a:	ror    rcx,0x12
   3e73e:	xor    rcx,rbx
   3e741:	mov    rbx,r9
   3e744:	rol    rbx,0x17
   3e748:	xor    rcx,rbx
   3e74b:	add    r11,rcx
   3e74e:	mov    rcx,rsi
   3e751:	ror    rcx,0x1c
   3e755:	add    r8,r11
   3e758:	mov    rbx,rcx
   3e75b:	mov    rcx,rsi
   3e75e:	rol    rcx,0x1e
   3e762:	xor    rcx,rbx
   3e765:	mov    rbx,rsi
   3e768:	rol    rbx,0x19
   3e76c:	xor    rcx,rbx
   3e76f:	mov    rbx,rax
   3e772:	or     rbx,rsi
   3e775:	and    rbx,r10
   3e778:	or     rbx,rbp
   3e77b:	add    rcx,rbx
   3e77e:	add    rcx,r11
   3e781:	mov    r11,r12
   3e784:	ror    r11,1
   3e787:	mov    rbx,r11
   3e78a:	mov    r11,r12
   3e78d:	ror    r11,0x8
   3e791:	xor    r11,rbx
   3e794:	mov    rbx,r12
   3e797:	shr    rbx,0x7
   3e79b:	xor    r11,rbx
   3e79e:	add    r11,r13
   3e7a1:	mov    r13,QWORD PTR [rsp+0x90]
   3e7a9:	add    r11,QWORD PTR [rsp+0x18]
   3e7ae:	mov    rbp,r13
   3e7b1:	mov    rbx,r13
   3e7b4:	ror    rbp,0x13
   3e7b8:	rol    rbx,0x3
   3e7bc:	xor    rbx,rbp
   3e7bf:	mov    rbp,r13
   3e7c2:	shr    rbp,0x6
   3e7c6:	xor    rbx,rbp
   3e7c9:	mov    rbp,rsi
   3e7cc:	add    r11,rbx
   3e7cf:	and    rbp,rcx
   3e7d2:	movabs rbx,0xbef9a3f7b2c67915
   3e7dc:	mov    r13,r11
   3e7df:	mov    r11,rdi
   3e7e2:	xor    r11,r9
   3e7e5:	add    rbx,r13
   3e7e8:	mov    QWORD PTR [rsp+0x58],r13
   3e7ed:	and    r11,r8
   3e7f0:	add    rbx,rdx
   3e7f3:	mov    rdx,r8
   3e7f6:	xor    r11,rdi
   3e7f9:	ror    rdx,0x12
   3e7fd:	add    rbx,r11
   3e800:	mov    r11,r8
   3e803:	ror    r11,0xe
   3e807:	xor    rdx,r11
   3e80a:	mov    r11,r8
   3e80d:	rol    r11,0x17
   3e811:	xor    rdx,r11
   3e814:	add    rbx,rdx
   3e817:	mov    rdx,rcx
   3e81a:	lea    r11,[r10+rbx*1]
   3e81e:	mov    r10,rcx
   3e821:	rol    rdx,0x1e
   3e825:	ror    r10,0x1c
   3e829:	xor    rdx,r10
   3e82c:	mov    r10,rcx
   3e82f:	rol    r10,0x19
   3e833:	xor    rdx,r10
   3e836:	mov    r10,rsi
   3e839:	or     r10,rcx
   3e83c:	and    r10,rax
   3e83f:	or     r10,rbp
   3e842:	add    rdx,r10
   3e845:	mov    r10,r15
   3e848:	ror    r10,1
   3e84b:	add    rdx,rbx
   3e84e:	mov    rbx,r10
   3e851:	mov    r10,r15
   3e854:	ror    r10,0x8
   3e858:	xor    r10,rbx
   3e85b:	mov    rbx,r15
   3e85e:	shr    rbx,0x7
   3e862:	xor    r10,rbx
   3e865:	add    r10,r12
   3e868:	mov    r12,QWORD PTR [rsp+0x40]
   3e86d:	add    r10,QWORD PTR [rsp+0x20]
   3e872:	mov    rbp,r12
   3e875:	mov    rbx,r12
   3e878:	ror    rbp,0x13
   3e87c:	rol    rbx,0x3
   3e880:	xor    rbx,rbp
   3e883:	mov    rbp,r12
   3e886:	shr    rbp,0x6
   3e88a:	xor    rbx,rbp
   3e88d:	mov    rbp,rcx
   3e890:	add    r10,rbx
   3e893:	and    rbp,rdx
   3e896:	mov    r12,r10
   3e899:	mov    r10,r9
   3e89c:	xor    r10,r8
   3e89f:	mov    QWORD PTR [rsp+0x48],r12
   3e8a4:	mov    rbx,r10
   3e8a7:	movabs r10,0xc67178f2e372532b
   3e8b1:	add    r10,r12
   3e8b4:	and    rbx,r11
   3e8b7:	add    r10,rdi
   3e8ba:	mov    rdi,r11
   3e8bd:	xor    rbx,r9
   3e8c0:	ror    rdi,0xe
   3e8c4:	add    r10,rbx
   3e8c7:	mov    rbx,rdi
   3e8ca:	mov    rdi,r11
   3e8cd:	ror    rdi,0x12
   3e8d1:	xor    rdi,rbx
   3e8d4:	mov    rbx,r11
   3e8d7:	rol    rbx,0x17
   3e8db:	xor    rdi,rbx
   3e8de:	add    r10,rdi
   3e8e1:	mov    rdi,rdx
   3e8e4:	ror    rdi,0x1c
   3e8e8:	add    rax,r10
   3e8eb:	mov    rbx,rdi
   3e8ee:	mov    rdi,rdx
   3e8f1:	rol    rdi,0x1e
   3e8f5:	xor    rdi,rbx
   3e8f8:	mov    rbx,rdx
   3e8fb:	rol    rbx,0x19
   3e8ff:	xor    rdi,rbx
   3e902:	mov    rbx,rcx
   3e905:	or     rbx,rdx
   3e908:	and    rbx,rsi
   3e90b:	or     rbx,rbp
   3e90e:	mov    rbp,rdx
   3e911:	add    rdi,rbx
   3e914:	add    rdi,r10
   3e917:	mov    r10,r14
   3e91a:	ror    r10,1
   3e91d:	mov    rbx,r10
   3e920:	mov    r10,r14
   3e923:	ror    r10,0x8
   3e927:	xor    r10,rbx
   3e92a:	mov    rbx,r14
   3e92d:	shr    rbx,0x7
   3e931:	xor    r10,rbx
   3e934:	mov    rbx,r13
   3e937:	add    r10,r15
   3e93a:	mov    r15,r13
   3e93d:	rol    rbx,0x3
   3e941:	add    r10,QWORD PTR [rsp+0x28]
   3e946:	ror    r15,0x13
   3e94a:	xor    rbx,r15
   3e94d:	mov    r15,r13
   3e950:	mov    r13,QWORD PTR [rsp+0x60]
   3e955:	shr    r15,0x6
   3e959:	xor    rbx,r15
   3e95c:	mov    r12,r13
   3e95f:	add    r10,rbx
   3e962:	mov    r15,r10
   3e965:	mov    QWORD PTR [rsp+0xe0],r10
   3e96d:	mov    r10,r8
   3e970:	xor    r10,r11
   3e973:	mov    QWORD PTR [rsp+0x50],r15
   3e978:	mov    rbx,r10
   3e97b:	movabs r10,0xca273eceea26619c
   3e985:	add    r10,r15
   3e988:	and    rbx,rax
   3e98b:	add    r9,r10
   3e98e:	mov    r10,rax
   3e991:	xor    rbx,r8
   3e994:	ror    r10,0xe
   3e998:	add    r9,rbx
   3e99b:	mov    rbx,r10
   3e99e:	mov    r10,rax
   3e9a1:	ror    r10,0x12
   3e9a5:	xor    r10,rbx
   3e9a8:	mov    rbx,rax
   3e9ab:	rol    rbx,0x17
   3e9af:	xor    r10,rbx
   3e9b2:	add    r9,r10
   3e9b5:	mov    r10,rdi
   3e9b8:	ror    r10,0x1c
   3e9bc:	add    rsi,r9
   3e9bf:	mov    rbx,r10
   3e9c2:	mov    r10,rdi
   3e9c5:	rol    r10,0x1e
   3e9c9:	xor    r10,rbx
   3e9cc:	mov    rbx,rdi
   3e9cf:	rol    rbx,0x19
   3e9d3:	xor    r10,rbx
   3e9d6:	mov    rbx,rdx
   3e9d9:	or     rbx,rdi
   3e9dc:	and    rbx,rcx
   3e9df:	and    rbp,rdi
   3e9e2:	ror    r12,0x8
   3e9e6:	or     rbx,rbp
   3e9e9:	mov    rbp,QWORD PTR [rsp+0x48]
   3e9ee:	add    r10,rbx
   3e9f1:	add    r10,r9
   3e9f4:	mov    r9,r13
   3e9f7:	mov    rbx,rbp
   3e9fa:	ror    r9,1
   3e9fd:	ror    rbx,0x13
   3ea01:	xor    r12,r9
   3ea04:	mov    r9,r13
   3ea07:	shr    r9,0x7
   3ea0b:	xor    r12,r9
   3ea0e:	mov    r9,rbp
   3ea11:	rol    r9,0x3
   3ea15:	add    r12,r14
   3ea18:	add    r12,QWORD PTR [rsp+0x30]
   3ea1d:	mov    r14,QWORD PTR [rsp+0x68]
   3ea22:	xor    r9,rbx
   3ea25:	mov    rbx,rbp
   3ea28:	mov    rbp,rdi
   3ea2b:	shr    rbx,0x6
   3ea2f:	mov    r15,r14
   3ea32:	xor    r9,rbx
   3ea35:	add    r12,r9
   3ea38:	mov    r9,r11
   3ea3b:	xor    r9,rax
   3ea3e:	mov    QWORD PTR [rsp+0xe8],r12
   3ea46:	mov    rbx,r9
   3ea49:	movabs r9,0xd186b8c721c0c207
   3ea53:	add    r9,r12
   3ea56:	and    rbx,rsi
   3ea59:	add    r8,r9
   3ea5c:	mov    r9,rsi
   3ea5f:	xor    rbx,r11
   3ea62:	ror    r9,0xe
   3ea66:	add    r8,rbx
   3ea69:	mov    rbx,r9
   3ea6c:	mov    r9,rsi
   3ea6f:	ror    r9,0x12
   3ea73:	xor    r9,rbx
   3ea76:	mov    rbx,rsi
   3ea79:	rol    rbx,0x17
   3ea7d:	xor    r9,rbx
   3ea80:	add    r8,r9
   3ea83:	mov    r9,r10
   3ea86:	ror    r9,0x1c
   3ea8a:	add    rcx,r8
   3ea8d:	mov    rbx,r9
   3ea90:	mov    r9,r10
   3ea93:	rol    r9,0x1e
   3ea97:	xor    r9,rbx
   3ea9a:	mov    rbx,r10
   3ea9d:	and    rbp,r10
   3eaa0:	ror    r15,0x8
   3eaa4:	rol    rbx,0x19
   3eaa8:	xor    r9,rbx
   3eaab:	mov    rbx,rdi
   3eaae:	or     rbx,r10
   3eab1:	and    rbx,rdx
   3eab4:	or     rbx,rbp
   3eab7:	mov    rbp,r15
   3eaba:	add    r9,rbx
   3eabd:	add    r9,r8
   3eac0:	mov    r8,r14
   3eac3:	ror    r8,1
   3eac6:	xor    rbp,r8
   3eac9:	mov    r8,r14
   3eacc:	shr    r8,0x7
   3ead0:	xor    rbp,r8
   3ead3:	add    rbp,r13
   3ead6:	add    rbp,QWORD PTR [rsp+0x38]
   3eadb:	mov    r13,QWORD PTR [rsp+0x50]
   3eae0:	mov    r15,QWORD PTR [rsp+0x88]
   3eae8:	mov    rbx,r13
   3eaeb:	mov    r8,r13
   3eaee:	ror    rbx,0x13
   3eaf2:	rol    r8,0x3
   3eaf6:	xor    r8,rbx
   3eaf9:	mov    rbx,r13
   3eafc:	mov    r13,r10
   3eaff:	shr    rbx,0x6
   3eb03:	xor    r8,rbx
   3eb06:	add    rbp,r8
   3eb09:	mov    r8,rax
   3eb0c:	xor    r8,rsi
   3eb0f:	mov    QWORD PTR [rsp+0xf0],rbp
   3eb17:	mov    rbx,r8
   3eb1a:	movabs r8,0xeada7dd6cde0eb1e
   3eb24:	add    r8,rbp
   3eb27:	and    rbx,rcx
   3eb2a:	add    r11,r8
   3eb2d:	mov    r8,rcx
   3eb30:	xor    rbx,rax
   3eb33:	ror    r8,0xe
   3eb37:	add    r11,rbx
   3eb3a:	mov    rbx,r8
   3eb3d:	mov    r8,rcx
   3eb40:	ror    r8,0x12
   3eb44:	xor    r8,rbx
   3eb47:	mov    rbx,rcx
   3eb4a:	rol    rbx,0x17
   3eb4e:	xor    r8,rbx
   3eb51:	and    r13,r9
   3eb54:	add    r11,r8
   3eb57:	mov    r8,r9
   3eb5a:	ror    r8,0x1c
   3eb5e:	add    rdx,r11
   3eb61:	mov    rbx,r8
   3eb64:	mov    r8,r9
   3eb67:	rol    r8,0x1e
   3eb6b:	xor    r8,rbx
   3eb6e:	mov    rbx,r9
   3eb71:	rol    rbx,0x19
   3eb75:	xor    r8,rbx
   3eb78:	mov    rbx,r10
   3eb7b:	or     rbx,r9
   3eb7e:	and    rbx,rdi
   3eb81:	or     rbx,r13
   3eb84:	mov    r13,r15
   3eb87:	add    r8,rbx
   3eb8a:	ror    r13,0x8
   3eb8e:	add    r8,r11
   3eb91:	mov    r11,r15
   3eb94:	mov    rbx,r13
   3eb97:	ror    r11,1
   3eb9a:	xor    rbx,r11
   3eb9d:	mov    r11,r15
   3eba0:	shr    r11,0x7
   3eba4:	xor    rbx,r11
   3eba7:	mov    r11,r12
   3ebaa:	ror    r11,0x13
   3ebae:	add    rbx,r14
   3ebb1:	add    rbx,QWORD PTR [rsp+0x90]
   3ebb9:	mov    r14,r9
   3ebbc:	mov    r13,r11
   3ebbf:	mov    r11,r12
   3ebc2:	rol    r11,0x3
   3ebc6:	xor    r11,r13
   3ebc9:	mov    r13,r12
   3ebcc:	shr    r13,0x6
   3ebd0:	xor    r11,r13
   3ebd3:	add    rbx,r11
   3ebd6:	mov    r11,rsi
   3ebd9:	xor    r11,rcx
   3ebdc:	mov    QWORD PTR [rsp+0xf8],rbx
   3ebe4:	mov    r13,r11
   3ebe7:	movabs r11,0xf57d4f7fee6ed178
   3ebf1:	and    r13,rdx
   3ebf4:	add    r11,rbx
   3ebf7:	xor    r13,rsi
   3ebfa:	add    r11,rax
   3ebfd:	mov    rax,rdx
   3ec00:	add    r11,r13
   3ec03:	mov    r13,rdx
   3ec06:	ror    rax,0x12
   3ec0a:	and    r14,r8
   3ec0d:	ror    r13,0xe
   3ec11:	xor    rax,r13
   3ec14:	mov    r13,rdx
   3ec17:	rol    r13,0x17
   3ec1b:	xor    rax,r13
   3ec1e:	mov    r13,r8
   3ec21:	add    r11,rax
   3ec24:	mov    rax,r8
   3ec27:	ror    r13,0x1c
   3ec2b:	rol    rax,0x1e
   3ec2f:	add    rdi,r11
   3ec32:	xor    rax,r13
   3ec35:	mov    r13,r8
   3ec38:	rol    r13,0x19
   3ec3c:	xor    rax,r13
   3ec3f:	mov    r13,r9
   3ec42:	or     r13,r8
   3ec45:	and    r13,r10
   3ec48:	or     r13,r14
   3ec4b:	mov    r14,QWORD PTR [rsp+0x8]
   3ec50:	add    rax,r13
   3ec53:	add    rax,r11
   3ec56:	mov    r13,r14
   3ec59:	mov    r11,r14
   3ec5c:	ror    r13,1
   3ec5f:	ror    r11,0x8
   3ec63:	xor    r11,r13
   3ec66:	mov    r13,r14
   3ec69:	shr    r13,0x7
   3ec6d:	xor    r11,r13
   3ec70:	add    r11,r15
   3ec73:	mov    r15,rbp
   3ec76:	add    r11,QWORD PTR [rsp+0x40]
   3ec7b:	ror    r15,0x13
   3ec7f:	mov    r14,r15
   3ec82:	mov    r15,rbp
   3ec85:	rol    r15,0x3
   3ec89:	mov    r13,r15
   3ec8c:	mov    r15,rbp
   3ec8f:	xor    r13,r14
   3ec92:	shr    r15,0x6
   3ec96:	xor    r13,r15
   3ec99:	mov    r15,rcx
   3ec9c:	add    r11,r13
   3ec9f:	xor    r15,rdx
   3eca2:	movabs r13,0x6f067aa72176fba
   3ecac:	add    r13,r11
   3ecaf:	mov    r14,r15
   3ecb2:	mov    r15,rdi
   3ecb5:	mov    QWORD PTR [rsp+0x100],r11
   3ecbd:	and    r14,rdi
   3ecc0:	add    r13,rsi
   3ecc3:	mov    rsi,rdi
   3ecc6:	rol    r15,0x17
   3ecca:	xor    r14,rcx
   3eccd:	ror    rsi,0xe
   3ecd1:	add    r13,r14
   3ecd4:	mov    r14,rsi
   3ecd7:	mov    rsi,rdi
   3ecda:	ror    rsi,0x12
   3ecde:	xor    rsi,r14
   3ece1:	xor    rsi,r15
   3ece4:	mov    r15,rax
   3ece7:	add    r13,rsi
   3ecea:	mov    rsi,rax
   3eced:	rol    r15,0x19
   3ecf1:	ror    rsi,0x1c
   3ecf5:	add    r10,r13
   3ecf8:	mov    r14,rsi
   3ecfb:	mov    rsi,rax
   3ecfe:	rol    rsi,0x1e
   3ed02:	xor    rsi,r14
   3ed05:	xor    rsi,r15
   3ed08:	mov    r15,r8
   3ed0b:	or     r15,rax
   3ed0e:	mov    r14,r15
   3ed11:	mov    r15,r8
   3ed14:	and    r15,rax
   3ed17:	and    r14,r9
   3ed1a:	or     r14,r15
   3ed1d:	mov    r15,QWORD PTR [rsp+0x10]
   3ed22:	add    rsi,r14
   3ed25:	add    rsi,r13
   3ed28:	mov    r14,r15
   3ed2b:	mov    r13,r15
   3ed2e:	ror    r14,1
   3ed31:	ror    r13,0x8
   3ed35:	xor    r13,r14
   3ed38:	mov    r14,r15
   3ed3b:	mov    r15,rbx
   3ed3e:	shr    r14,0x7
   3ed42:	ror    r15,0x13
   3ed46:	xor    r13,r14
   3ed49:	mov    r14,rbx
   3ed4c:	add    r13,QWORD PTR [rsp+0x8]
   3ed51:	add    r13,QWORD PTR [rsp+0x58]
   3ed56:	rol    r14,0x3
   3ed5a:	xor    r14,r15
   3ed5d:	mov    r15,rbx
   3ed60:	shr    r15,0x6
   3ed64:	xor    r14,r15
   3ed67:	lea    r15,[r13+r14*1+0x0]
   3ed6c:	mov    r14,rdx
   3ed6f:	movabs r13,0xa637dc5a2c898a6
   3ed79:	xor    r14,rdi
   3ed7c:	add    r13,r15
   3ed7f:	mov    QWORD PTR [rsp+0x8],r15
   3ed84:	and    r14,r10
   3ed87:	add    r13,rcx
   3ed8a:	mov    rcx,r10
   3ed8d:	mov    QWORD PTR [rsp+0x108],r15
   3ed95:	xor    r14,rdx
   3ed98:	ror    rcx,0xe
   3ed9c:	mov    r15,r10
   3ed9f:	add    r13,r14
   3eda2:	mov    r14,rcx
   3eda5:	mov    rcx,r10
   3eda8:	rol    r15,0x17
   3edac:	ror    rcx,0x12
   3edb0:	xor    rcx,r14
   3edb3:	xor    rcx,r15
   3edb6:	mov    r15,rsi
   3edb9:	add    r13,rcx
   3edbc:	mov    rcx,rsi
   3edbf:	rol    r15,0x19
   3edc3:	ror    rcx,0x1c
   3edc7:	add    r9,r13
   3edca:	mov    r14,rcx
   3edcd:	mov    rcx,rsi
   3edd0:	rol    rcx,0x1e
   3edd4:	xor    rcx,r14
   3edd7:	xor    rcx,r15
   3edda:	mov    r15,rax
   3eddd:	or     r15,rsi
   3ede0:	mov    r14,r15
   3ede3:	mov    r15,rax
   3ede6:	and    r15,rsi
   3ede9:	and    r14,r8
   3edec:	or     r14,r15
   3edef:	mov    r15,QWORD PTR [rsp+0x18]
   3edf4:	add    rcx,r14
   3edf7:	add    rcx,r13
   3edfa:	mov    r14,r15
   3edfd:	mov    r13,r15
   3ee00:	ror    r14,1
   3ee03:	ror    r13,0x8
   3ee07:	xor    r13,r14
   3ee0a:	mov    r14,r15
   3ee0d:	mov    r15,r11
   3ee10:	shr    r14,0x7
   3ee14:	xor    r13,r14
   3ee17:	mov    r14,r11
   3ee1a:	ror    r15,0x13
   3ee1e:	add    r13,QWORD PTR [rsp+0x10]
   3ee23:	rol    r14,0x3
   3ee27:	add    r13,QWORD PTR [rsp+0x48]
   3ee2c:	xor    r14,r15
   3ee2f:	mov    r15,r11
   3ee32:	shr    r15,0x6
   3ee36:	xor    r14,r15
   3ee39:	lea    r15,[r13+r14*1+0x0]
   3ee3e:	mov    r14,rdi
   3ee41:	movabs r13,0x113f9804bef90dae
   3ee4b:	xor    r14,r10
   3ee4e:	add    r13,r15
   3ee51:	mov    QWORD PTR [rsp+0x10],r15
   3ee56:	and    r14,r9
   3ee59:	add    r13,rdx
   3ee5c:	mov    rdx,r9
   3ee5f:	mov    QWORD PTR [rsp+0x110],r15
   3ee67:	xor    r14,rdi
   3ee6a:	ror    rdx,0xe
   3ee6e:	mov    r15,r9
   3ee71:	add    r13,r14
   3ee74:	mov    r14,rdx
   3ee77:	mov    rdx,r9
   3ee7a:	rol    r15,0x17
   3ee7e:	ror    rdx,0x12
   3ee82:	xor    rdx,r14
   3ee85:	xor    rdx,r15
   3ee88:	mov    r15,rcx
   3ee8b:	add    r13,rdx
   3ee8e:	mov    rdx,rcx
   3ee91:	rol    r15,0x19
   3ee95:	ror    rdx,0x1c
   3ee99:	add    r8,r13
   3ee9c:	mov    r14,rdx
   3ee9f:	mov    rdx,rcx
   3eea2:	rol    rdx,0x1e
   3eea6:	xor    rdx,r14
   3eea9:	xor    rdx,r15
   3eeac:	mov    r15,rsi
   3eeaf:	or     r15,rcx
   3eeb2:	mov    r14,r15
   3eeb5:	mov    r15,rsi
   3eeb8:	and    r15,rcx
   3eebb:	and    r14,rax
   3eebe:	or     r14,r15
   3eec1:	mov    r15,QWORD PTR [rsp+0x20]
   3eec6:	add    rdx,r14
   3eec9:	add    rdx,r13
   3eecc:	mov    r14,r15
   3eecf:	mov    r13,r15
   3eed2:	ror    r14,1
   3eed5:	ror    r13,0x8
   3eed9:	xor    r13,r14
   3eedc:	mov    r14,r15
   3eedf:	shr    r14,0x7
   3eee3:	xor    r13,r14
   3eee6:	mov    r14,QWORD PTR [rsp+0x8]
   3eeeb:	add    r13,QWORD PTR [rsp+0x18]
   3eef0:	add    r13,QWORD PTR [rsp+0x50]
   3eef5:	mov    r15,r14
   3eef8:	rol    r14,0x3
   3eefc:	ror    r15,0x13
   3ef00:	xor    r14,r15
   3ef03:	mov    r15,QWORD PTR [rsp+0x8]
   3ef08:	shr    r15,0x6
   3ef0c:	xor    r14,r15
   3ef0f:	add    r13,r14
   3ef12:	mov    r15,r13
   3ef15:	mov    QWORD PTR [rsp+0x118],r13
   3ef1d:	mov    r13,r10
   3ef20:	xor    r13,r9
   3ef23:	mov    QWORD PTR [rsp+0x18],r15
   3ef28:	mov    r14,r13
   3ef2b:	movabs r13,0x1b710b35131c471b
   3ef35:	add    r13,r15
   3ef38:	and    r14,r8
   3ef3b:	mov    r15,r8
   3ef3e:	add    r13,rdi
   3ef41:	mov    rdi,r8
   3ef44:	xor    r14,r10
   3ef47:	rol    r15,0x17
   3ef4b:	ror    rdi,0xe
   3ef4f:	add    r13,r14
   3ef52:	mov    r14,rdi
   3ef55:	mov    rdi,r8
   3ef58:	ror    rdi,0x12
   3ef5c:	xor    rdi,r14
   3ef5f:	xor    rdi,r15
   3ef62:	mov    r15,rdx
   3ef65:	add    r13,rdi
   3ef68:	rol    r15,0x19
   3ef6c:	lea    rdi,[rax+r13*1]
   3ef70:	mov    rax,rdx
   3ef73:	ror    rax,0x1c
   3ef77:	mov    r14,rax
   3ef7a:	mov    rax,rdx
   3ef7d:	rol    rax,0x1e
   3ef81:	xor    rax,r14
   3ef84:	xor    rax,r15
   3ef87:	mov    r15,rcx
   3ef8a:	or     r15,rdx
   3ef8d:	mov    r14,r15
   3ef90:	mov    r15,rcx
   3ef93:	and    r14,rsi
   3ef96:	and    r15,rdx
   3ef99:	or     r14,r15
   3ef9c:	mov    r15,QWORD PTR [rsp+0x28]
   3efa1:	add    rax,r14
   3efa4:	add    rax,r13
   3efa7:	mov    r14,r15
   3efaa:	mov    r13,r15
   3efad:	ror    r14,1
   3efb0:	ror    r13,0x8
   3efb4:	xor    r13,r14
   3efb7:	mov    r14,r15
   3efba:	mov    r15,QWORD PTR [rsp+0x10]
   3efbf:	shr    r14,0x7
   3efc3:	xor    r13,r14
   3efc6:	add    r13,QWORD PTR [rsp+0x20]
   3efcb:	add    r12,r13
   3efce:	mov    r13,r15
   3efd1:	ror    r13,0x13
   3efd5:	mov    r14,r13
   3efd8:	mov    r13,r15
   3efdb:	shr    r15,0x6
   3efdf:	rol    r13,0x3
   3efe3:	xor    r13,r14
   3efe6:	mov    r14,rdx
   3efe9:	xor    r13,r15
   3efec:	lea    r15,[r12+r13*1]
   3eff0:	mov    r13,r9
   3eff3:	movabs r12,0x28db77f523047d84
   3effd:	xor    r13,r8
   3f000:	add    r12,r15
   3f003:	mov    QWORD PTR [rsp+0x120],r15
   3f00b:	and    r13,rdi
   3f00e:	add    r12,r10
   3f011:	mov    r10,rdi
   3f014:	xor    r13,r9
   3f017:	ror    r10,0xe
   3f01b:	add    r12,r13
   3f01e:	mov    r13,r10
   3f021:	mov    r10,rdi
   3f024:	ror    r10,0x12
   3f028:	xor    r10,r13
   3f02b:	mov    r13,rdi
   3f02e:	rol    r13,0x17
   3f032:	xor    r10,r13
   3f035:	add    r12,r10
   3f038:	mov    r10,rax
   3f03b:	ror    r10,0x1c
   3f03f:	add    rsi,r12
   3f042:	mov    r13,r10
   3f045:	mov    r10,rax
   3f048:	rol    r10,0x1e
   3f04c:	xor    r10,r13
   3f04f:	mov    r13,rax
   3f052:	rol    r13,0x19
   3f056:	and    r14,rax
   3f059:	xor    r10,r13
   3f05c:	mov    r13,rdx
   3f05f:	or     r13,rax
   3f062:	and    r13,rcx
   3f065:	or     r13,r14
   3f068:	mov    r14,QWORD PTR [rsp+0x30]
   3f06d:	add    r10,r13
   3f070:	add    r10,r12
   3f073:	mov    r13,r14
   3f076:	mov    r12,r14
   3f079:	ror    r13,1
   3f07c:	ror    r12,0x8
   3f080:	xor    r12,r13
   3f083:	mov    r13,r14
   3f086:	mov    r14,QWORD PTR [rsp+0x18]
   3f08b:	shr    r13,0x7
   3f08f:	xor    r12,r13
   3f092:	add    r12,QWORD PTR [rsp+0x28]
   3f097:	mov    r13,r14
   3f09a:	add    rbp,r12
   3f09d:	mov    r12,r14
   3f0a0:	ror    r13,0x13
   3f0a4:	rol    r12,0x3
   3f0a8:	xor    r12,r13
   3f0ab:	mov    r13,r14
   3f0ae:	mov    r14,rax
   3f0b1:	shr    r13,0x6
   3f0b5:	xor    r12,r13
   3f0b8:	add    rbp,r12
   3f0bb:	mov    r12,r8
   3f0be:	xor    r12,rdi
   3f0c1:	mov    QWORD PTR [rsp+0x128],rbp
   3f0c9:	mov    r13,r12
   3f0cc:	movabs r12,0x32caab7b40c72493
   3f0d6:	add    r12,rbp
   3f0d9:	and    r13,rsi
   3f0dc:	add    r12,r9
   3f0df:	mov    r9,rsi
   3f0e2:	xor    r13,r8
   3f0e5:	ror    r9,0xe
   3f0e9:	add    r12,r13
   3f0ec:	mov    r13,r9
   3f0ef:	mov    r9,rsi
   3f0f2:	ror    r9,0x12
   3f0f6:	xor    r9,r13
   3f0f9:	mov    r13,rsi
   3f0fc:	rol    r13,0x17
   3f100:	xor    r9,r13
   3f103:	add    r12,r9
   3f106:	mov    r9,r10
   3f109:	and    r14,r10
   3f10c:	ror    r9,0x1c
   3f110:	add    rcx,r12
   3f113:	mov    r13,r9
   3f116:	mov    r9,r10
   3f119:	rol    r9,0x1e
   3f11d:	xor    r9,r13
   3f120:	mov    r13,r10
   3f123:	rol    r13,0x19
   3f127:	xor    r9,r13
   3f12a:	mov    r13,rax
   3f12d:	or     r13,r10
   3f130:	and    r13,rdx
   3f133:	or     r13,r14
   3f136:	mov    r14,QWORD PTR [rsp+0x38]
   3f13b:	add    r9,r13
   3f13e:	add    r9,r12
   3f141:	mov    r13,r14
   3f144:	mov    r12,r14
   3f147:	ror    r13,1
   3f14a:	ror    r12,0x8
   3f14e:	xor    r12,r13
   3f151:	mov    r13,r14
   3f154:	mov    r14,r10
   3f157:	shr    r13,0x7
   3f15b:	xor    r12,r13
   3f15e:	add    r12,QWORD PTR [rsp+0x30]
   3f163:	add    rbx,r12
   3f166:	mov    r12,r15
   3f169:	ror    r12,0x13
   3f16d:	mov    r13,r12
   3f170:	mov    r12,r15
   3f173:	rol    r12,0x3
   3f177:	xor    r12,r13
   3f17a:	mov    r13,r15
   3f17d:	shr    r13,0x6
   3f181:	xor    r12,r13
   3f184:	add    rbx,r12
   3f187:	mov    r12,rdi
   3f18a:	xor    r12,rsi
   3f18d:	mov    QWORD PTR [rsp+0x130],rbx
   3f195:	mov    r13,r12
   3f198:	movabs r12,0x3c9ebe0a15c9bebc
   3f1a2:	and    r13,rcx
   3f1a5:	add    r12,rbx
   3f1a8:	xor    r13,rdi
   3f1ab:	add    r12,r8
   3f1ae:	mov    r8,rcx
   3f1b1:	add    r12,r13
   3f1b4:	ror    r8,0xe
   3f1b8:	and    r14,r9
   3f1bb:	mov    r13,r8
   3f1be:	mov    r8,rcx
   3f1c1:	ror    r8,0x12
   3f1c5:	xor    r8,r13
   3f1c8:	mov    r13,rcx
   3f1cb:	rol    r13,0x17
   3f1cf:	xor    r8,r13
   3f1d2:	add    r12,r8
   3f1d5:	mov    r8,r9
   3f1d8:	ror    r8,0x1c
   3f1dc:	add    rdx,r12
   3f1df:	mov    r13,r8
   3f1e2:	mov    r8,r9
   3f1e5:	rol    r8,0x1e
   3f1e9:	xor    r8,r13
   3f1ec:	mov    r13,r9
   3f1ef:	rol    r13,0x19
   3f1f3:	xor    r8,r13
   3f1f6:	mov    r13,r10
   3f1f9:	or     r13,r9
   3f1fc:	and    r13,rax
   3f1ff:	or     r13,r14
   3f202:	mov    r14,QWORD PTR [rsp+0x90]
   3f20a:	add    r8,r13
   3f20d:	add    r8,r12
   3f210:	mov    r13,r14
   3f213:	mov    r12,r14
   3f216:	ror    r13,1
   3f219:	ror    r12,0x8
   3f21d:	xor    r12,r13
   3f220:	mov    r13,r14
   3f223:	shr    r13,0x7
   3f227:	xor    r12,r13
   3f22a:	add    r12,QWORD PTR [rsp+0x38]
   3f22f:	add    r11,r12
   3f232:	mov    r12,rbp
   3f235:	ror    r12,0x13
   3f239:	mov    r13,r12
   3f23c:	mov    r12,rbp
   3f23f:	shr    rbp,0x6
   3f243:	rol    r12,0x3
   3f247:	xor    r12,r13
   3f24a:	mov    r13,r9
   3f24d:	xor    r12,rbp
   3f250:	lea    rbp,[r11+r12*1]
   3f254:	mov    r12,rsi
   3f257:	movabs r11,0x431d67c49c100d4c
   3f261:	xor    r12,rcx
   3f264:	mov    QWORD PTR [rsp+0x138],rbp
   3f26c:	and    r12,rdx
   3f26f:	xor    r12,rsi
   3f272:	add    r11,rbp
   3f275:	and    r13,r8
   3f278:	add    r11,rdi
   3f27b:	mov    rdi,rdx
   3f27e:	add    r11,r12
   3f281:	mov    r12,rdx
   3f284:	ror    rdi,0x12
   3f288:	ror    r12,0xe
   3f28c:	xor    rdi,r12
   3f28f:	mov    r12,rdx
   3f292:	rol    r12,0x17
   3f296:	xor    rdi,r12
   3f299:	mov    r12,r8
   3f29c:	add    r11,rdi
   3f29f:	mov    rdi,r8
   3f2a2:	ror    r12,0x1c
   3f2a6:	rol    rdi,0x1e
   3f2aa:	add    rax,r11
   3f2ad:	xor    rdi,r12
   3f2b0:	mov    r12,r8
   3f2b3:	rol    r12,0x19
   3f2b7:	xor    rdi,r12
   3f2ba:	mov    r12,r9
   3f2bd:	or     r12,r8
   3f2c0:	and    r12,r10
   3f2c3:	or     r12,r13
   3f2c6:	mov    r13,QWORD PTR [rsp+0x40]
   3f2cb:	add    rdi,r12
   3f2ce:	add    rdi,r11
   3f2d1:	mov    r12,r13
   3f2d4:	mov    r11,r13
   3f2d7:	ror    r12,1
   3f2da:	ror    r11,0x8
   3f2de:	xor    r11,r12
   3f2e1:	mov    r12,r13
   3f2e4:	shr    r12,0x7
   3f2e8:	xor    r11,r12
   3f2eb:	mov    r12,rbx
   3f2ee:	ror    r12,0x13
   3f2f2:	add    r11,r14
   3f2f5:	add    r11,QWORD PTR [rsp+0x8]
   3f2fa:	mov    r14,QWORD PTR [rsp+0x58]
   3f2ff:	mov    r13,r12
   3f302:	mov    r12,rbx
   3f305:	rol    r12,0x3
   3f309:	xor    r12,r13
   3f30c:	shr    rbx,0x6
   3f310:	mov    r13,r8
   3f313:	xor    r12,rbx
   3f316:	and    r13,rdi
   3f319:	lea    rbx,[r11+r12*1]
   3f31d:	mov    r11,rcx
   3f320:	xor    r11,rdx
   3f323:	mov    QWORD PTR [rsp+0x140],rbx
   3f32b:	mov    r12,r11
   3f32e:	movabs r11,0x4cc5d4becb3e42b6
   3f338:	and    r12,rax
   3f33b:	add    r11,rbx
   3f33e:	xor    r12,rcx
   3f341:	add    r11,rsi
   3f344:	mov    rsi,rax
   3f347:	add    r11,r12
   3f34a:	mov    r12,rax
   3f34d:	ror    rsi,0x12
   3f351:	ror    r12,0xe
   3f355:	xor    rsi,r12
   3f358:	mov    r12,rax
   3f35b:	rol    r12,0x17
   3f35f:	xor    rsi,r12
   3f362:	mov    r12,rdi
   3f365:	add    r11,rsi
   3f368:	mov    rsi,rdi
   3f36b:	ror    r12,0x1c
   3f36f:	rol    rsi,0x1e
   3f373:	add    r10,r11
   3f376:	xor    rsi,r12
   3f379:	mov    r12,rdi
   3f37c:	rol    r12,0x19
   3f380:	xor    rsi,r12
   3f383:	mov    r12,r8
   3f386:	or     r12,rdi
   3f389:	and    r12,r9
   3f38c:	or     r12,r13
   3f38f:	add    rsi,r12
   3f392:	add    rsi,r11
   3f395:	mov    r11,r14
   3f398:	ror    r11,1
   3f39b:	mov    r12,r11
   3f39e:	mov    r11,r14
   3f3a1:	ror    r11,0x8
   3f3a5:	xor    r11,r12
   3f3a8:	mov    r12,r14
   3f3ab:	shr    r12,0x7
   3f3af:	xor    r11,r12
   3f3b2:	mov    r12,rbp
   3f3b5:	add    r11,QWORD PTR [rsp+0x40]
   3f3ba:	add    r11,QWORD PTR [rsp+0x10]
   3f3bf:	ror    r12,0x13
   3f3c3:	mov    r13,r12
   3f3c6:	mov    r12,rbp
   3f3c9:	shr    rbp,0x6
   3f3cd:	rol    r12,0x3
   3f3d1:	xor    r12,r13
   3f3d4:	mov    r13,rdi
   3f3d7:	xor    r12,rbp
   3f3da:	and    r13,rsi
   3f3dd:	lea    rbp,[r11+r12*1]
   3f3e1:	mov    r12,rdx
   3f3e4:	movabs r11,0x597f299cfc657e2a
   3f3ee:	xor    r12,rax
   3f3f1:	add    r11,rbp
   3f3f4:	mov    QWORD PTR [rsp+0x148],rbp
   3f3fc:	and    r12,r10
   3f3ff:	add    r11,rcx
   3f402:	mov    rcx,r10
   3f405:	xor    r12,rdx
   3f408:	ror    rcx,0x12
   3f40c:	add    r11,r12
   3f40f:	mov    r12,r10
   3f412:	ror    r12,0xe
   3f416:	xor    rcx,r12
   3f419:	mov    r12,r10
   3f41c:	rol    r12,0x17
   3f420:	xor    rcx,r12
   3f423:	mov    r12,rsi
   3f426:	add    r11,rcx
   3f429:	mov    rcx,rsi
   3f42c:	ror    r12,0x1c
   3f430:	rol    rcx,0x1e
   3f434:	add    r9,r11
   3f437:	xor    rcx,r12
   3f43a:	mov    r12,rsi
   3f43d:	rol    r12,0x19
   3f441:	xor    rcx,r12
   3f444:	mov    r12,rdi
   3f447:	or     r12,rsi
   3f44a:	and    r12,r8
   3f44d:	or     r12,r13
   3f450:	mov    r13,QWORD PTR [rsp+0x48]
   3f455:	add    rcx,r12
   3f458:	add    rcx,r11
   3f45b:	mov    r12,r13
   3f45e:	mov    r11,r13
   3f461:	ror    r12,1
   3f464:	ror    r11,0x8
   3f468:	xor    r11,r12
   3f46b:	mov    r12,r13
   3f46e:	shr    r12,0x7
   3f472:	xor    r11,r12
   3f475:	add    r11,r14
   3f478:	mov    r14,QWORD PTR [rsp+0x18]
   3f47d:	lea    r12,[r11+r14*1]
   3f481:	mov    r11,rbx
   3f484:	mov    r14,QWORD PTR [rsp+0x50]
   3f489:	ror    r11,0x13
   3f48d:	mov    r13,r11
   3f490:	mov    r11,rbx
   3f493:	shr    rbx,0x6
   3f497:	rol    r11,0x3
   3f49b:	xor    r11,r13
   3f49e:	mov    r13,rbp
   3f4a1:	xor    r11,rbx
   3f4a4:	add    r11,r12
   3f4a7:	mov    r12,rax
   3f4aa:	xor    r12,r10
   3f4ad:	mov    QWORD PTR [rsp+0x150],r11
   3f4b5:	mov    rbx,r12
   3f4b8:	movabs r12,0x5fcb6fab3ad6faec
   3f4c2:	add    r11,r12
   3f4c5:	and    rbx,r9
   3f4c8:	mov    r12,r9
   3f4cb:	add    rdx,r11
   3f4ce:	mov    r11,r9
   3f4d1:	xor    rbx,rax
   3f4d4:	rol    r12,0x17
   3f4d8:	ror    r11,0xe
   3f4dc:	add    rdx,rbx
   3f4df:	mov    rbx,r11
   3f4e2:	mov    r11,r9
   3f4e5:	ror    r11,0x12
   3f4e9:	xor    r11,rbx
   3f4ec:	xor    r11,r12
   3f4ef:	mov    r12,rcx
   3f4f2:	add    rdx,r11
   3f4f5:	mov    r11,rcx
   3f4f8:	rol    r12,0x19
   3f4fc:	ror    r11,0x1c
   3f500:	add    r8,rdx
   3f503:	mov    rbx,r11
   3f506:	mov    r11,rcx
   3f509:	rol    r11,0x1e
   3f50d:	xor    r11,rbx
   3f510:	xor    r11,r12
   3f513:	mov    r12,rsi
   3f516:	or     r12,rcx
   3f519:	mov    rbx,r12
   3f51c:	mov    r12,rsi
   3f51f:	and    r12,rcx
   3f522:	and    rbx,rdi
   3f525:	or     rbx,r12
   3f528:	mov    r12,rbp
   3f52b:	add    r11,rbx
   3f52e:	rol    r13,0x3
   3f532:	ror    r12,0x13
   3f536:	add    r11,rdx
   3f539:	mov    rdx,r14
   3f53c:	shr    rbp,0x6
   3f540:	ror    rdx,1
   3f543:	mov    rbx,rdx
   3f546:	mov    rdx,r14
   3f549:	shr    r14,0x7
   3f54d:	ror    rdx,0x8
   3f551:	xor    rdx,rbx
   3f554:	xor    rdx,r14
   3f557:	add    rdx,QWORD PTR [rsp+0x48]
   3f55c:	lea    rbx,[rdx+r15*1]
   3f560:	mov    rdx,r13
   3f563:	mov    r13,r10
   3f566:	xor    rdx,r12
   3f569:	xor    r13,r9
   3f56c:	xor    rdx,rbp
   3f56f:	movabs rbp,0x6c44198c4a475817
   3f579:	add    rdx,rbx
   3f57c:	mov    rbx,r13
   3f57f:	mov    r13,r8
   3f582:	and    rbx,r8
   3f585:	mov    QWORD PTR [rsp+0x158],rdx
   3f58d:	add    rdx,rbp
   3f590:	ror    r13,0xe
   3f594:	xor    rbx,r10
   3f597:	add    rax,rdx
   3f59a:	add    rax,rbx
   3f59d:	mov    rbx,r13
   3f5a0:	mov    r13,r8
   3f5a3:	ror    r13,0x12
   3f5a7:	mov    rdx,r13
   3f5aa:	mov    r13,r8
   3f5ad:	xor    rdx,rbx
   3f5b0:	rol    r13,0x17
   3f5b4:	xor    rdx,r13
   3f5b7:	mov    r13,r11
   3f5ba:	ror    r13,0x1c
   3f5be:	add    rax,rdx
   3f5c1:	mov    rbx,r13
   3f5c4:	mov    r13,r11
   3f5c7:	rol    r13,0x1e
   3f5cb:	mov    rdx,r13
   3f5ce:	mov    r13,r11
   3f5d1:	xor    rdx,rbx
   3f5d4:	rol    r13,0x19
   3f5d8:	xor    rdx,r13
   3f5db:	mov    r13,rcx
   3f5de:	or     r13,r11
   3f5e1:	mov    rbx,r13
   3f5e4:	mov    r13,rcx
   3f5e7:	and    rbx,rsi
   3f5ea:	and    r13,r11
   3f5ed:	add    QWORD PTR [rsp+0xa0],rcx
   3f5f5:	add    rdi,rax
   3f5f8:	or     rbx,r13
   3f5fb:	add    QWORD PTR [rsp+0x98],r11
   3f603:	mov    r14,QWORD PTR [rsp+0x98]
   3f60b:	add    rdx,rbx
   3f60e:	add    rdx,QWORD PTR [rsp+0xa8]
   3f616:	mov    rbx,QWORD PTR [rsp+0xa0]
   3f61e:	lea    r13,[rdx+rax*1]
   3f622:	mov    rdx,QWORD PTR [rsp+0xd0]
   3f62a:	mov    QWORD PTR [rsp+0xa8],r13
   3f632:	mov    QWORD PTR [rdx],r13
   3f635:	mov    rcx,rdx
   3f638:	mov    QWORD PTR [rdx+0x8],r14
   3f63c:	mov    QWORD PTR [rdx+0x10],rbx
   3f640:	add    QWORD PTR [rsp+0xb0],rsi
   3f648:	mov    rdx,QWORD PTR [rsp+0xb0]
   3f650:	add    QWORD PTR [rsp+0x80],r9
   3f658:	mov    rax,QWORD PTR [rsp+0x80]
   3f660:	add    QWORD PTR [rsp+0x70],rdi
   3f665:	mov    rbp,QWORD PTR [rsp+0x70]
   3f66a:	add    QWORD PTR [rsp+0x78],r8
   3f66f:	mov    r8,QWORD PTR [rsp+0x78]
   3f674:	add    QWORD PTR [rsp+0xb8],r10
   3f67c:	mov    QWORD PTR [rcx+0x30],rax
   3f680:	mov    rax,QWORD PTR [rsp+0xb8]
   3f688:	mov    QWORD PTR [rcx+0x18],rdx
   3f68c:	mov    QWORD PTR [rcx+0x38],rax
   3f690:	mov    rax,QWORD PTR [rsp+0xc0]
   3f698:	mov    QWORD PTR [rcx+0x20],rbp
   3f69c:	mov    QWORD PTR [rcx+0x28],r8
   3f6a0:	cmp    QWORD PTR [rsp+0xc8],rax
   3f6a8:	ja     3b940 <sha512_process_block+0xd0>
   3f6ae:	mov    rax,QWORD PTR [rsp+0x168]
   3f6b6:	sub    rax,QWORD PTR fs:0x28
   3f6bf:	jne    3f6d3 <sha512_process_block+0x3e63>
   3f6c1:	add    rsp,0x178
   3f6c8:	pop    rbx
   3f6c9:	pop    rbp
   3f6ca:	pop    r12
   3f6cc:	pop    r13
   3f6ce:	pop    r14
   3f6d0:	pop    r15
   3f6d2:	ret    
   3f6d3:	call   11760 <__stack_chk_fail@plt>
   3f6d8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000003f6e0 <sha512_conclude_ctx>:
   3f6e0:	push   r13
   3f6e2:	push   r12
   3f6e4:	mov    r12,rdi
   3f6e7:	push   rbp
   3f6e8:	mov    rax,QWORD PTR [rdi+0x50]
   3f6ec:	mov    rcx,QWORD PTR [r12+0x48]
   3f6f1:	cmp    rax,0x70
   3f6f5:	mov    rsi,rax
   3f6f8:	sbb    rbp,rbp
   3f6fb:	and    rbp,0xffffffffffffff80
   3f6ff:	add    rbp,0x100
   3f706:	cmp    rax,0x70
   3f70a:	sbb    rdx,rdx
   3f70d:	and    rdx,0xffffffffffffff80
   3f711:	add    rdx,0xf0
   3f718:	cmp    rax,0x70
   3f71c:	sbb    rdi,rdi
   3f71f:	and    rdi,0xfffffffffffffff0
   3f723:	add    rdi,0x1f
   3f727:	cmp    rax,0x70
   3f72b:	sbb    r8,r8
   3f72e:	and    r8,0xfffffffffffffff0
   3f732:	add    r8,0x1e
   3f736:	add    rsi,QWORD PTR [r12+0x40]
   3f73b:	mov    QWORD PTR [r12+0x40],rsi
   3f740:	jae    3f74b <sha512_conclude_ctx+0x6b>
   3f742:	add    rcx,0x1
   3f746:	mov    QWORD PTR [r12+0x48],rcx
   3f74b:	mov    r9,rsi
   3f74e:	shl    rcx,0x3
   3f752:	lea    r13,[r12+0x58]
   3f757:	sub    rdx,rax
   3f75a:	shr    r9,0x3d
   3f75e:	shl    rsi,0x3
   3f762:	or     rcx,r9
   3f765:	bswap  rsi
   3f768:	bswap  rcx
   3f76b:	mov    QWORD PTR [r12+r8*8+0x58],rcx
   3f770:	mov    QWORD PTR [r12+rdi*8+0x58],rsi
   3f775:	lea    rdi,[r13+rax*1+0x0]
   3f77a:	lea    rsi,[rip+0x189bf]        # 58140 <fillbuf>
   3f781:	call   11220 <memcpy@plt>
   3f786:	mov    rdx,r12
   3f789:	mov    rsi,rbp
   3f78c:	mov    rdi,r13
   3f78f:	pop    rbp
   3f790:	pop    r12
   3f792:	pop    r13
   3f794:	jmp    3b870 <sha512_process_block>
   3f799:	nop    DWORD PTR [rax+0x0]

000000000003f7a0 <sha512_finish_ctx>:
   3f7a0:	endbr64 
   3f7a4:	push   r12
   3f7a6:	mov    r12,rsi
   3f7a9:	push   rbx
   3f7aa:	mov    rbx,rdi
   3f7ad:	sub    rsp,0x8
   3f7b1:	call   3f6e0 <sha512_conclude_ctx>
   3f7b6:	xor    edx,edx
   3f7b8:	nop    DWORD PTR [rax+rax*1+0x0]
   3f7c0:	mov    rcx,QWORD PTR [rbx+rdx*1]
   3f7c4:	bswap  rcx
   3f7c7:	mov    QWORD PTR [r12+rdx*1],rcx
   3f7cb:	add    rdx,0x8
   3f7cf:	cmp    rdx,0x40
   3f7d3:	jne    3f7c0 <sha512_finish_ctx+0x20>
   3f7d5:	add    rsp,0x8
   3f7d9:	mov    rax,r12
   3f7dc:	pop    rbx
   3f7dd:	pop    r12
   3f7df:	ret    

000000000003f7e0 <sha384_finish_ctx>:
   3f7e0:	endbr64 
   3f7e4:	push   r12
   3f7e6:	mov    r12,rsi
   3f7e9:	push   rbx
   3f7ea:	mov    rbx,rdi
   3f7ed:	sub    rsp,0x8
   3f7f1:	call   3f6e0 <sha512_conclude_ctx>
   3f7f6:	xor    edx,edx
   3f7f8:	nop    DWORD PTR [rax+rax*1+0x0]
   3f800:	mov    rcx,QWORD PTR [rbx+rdx*1]
   3f804:	bswap  rcx
   3f807:	mov    QWORD PTR [r12+rdx*1],rcx
   3f80b:	add    rdx,0x8
   3f80f:	cmp    rdx,0x30
   3f813:	jne    3f800 <sha384_finish_ctx+0x20>
   3f815:	add    rsp,0x8
   3f819:	mov    rax,r12
   3f81c:	pop    rbx
   3f81d:	pop    r12
   3f81f:	ret    

000000000003f820 <sha512_process_bytes>:
   3f820:	endbr64 
   3f824:	push   r15
   3f826:	push   r14
   3f828:	push   r13
   3f82a:	mov    r13,rsi
   3f82d:	push   r12
   3f82f:	mov    r12,rdx
   3f832:	push   rbp
   3f833:	push   rbx
   3f834:	mov    rbx,rdi
   3f837:	sub    rsp,0x18
   3f83b:	mov    rbp,QWORD PTR [rdx+0x50]
   3f83f:	test   rbp,rbp
   3f842:	jne    3f988 <sha512_process_bytes+0x168>
   3f848:	cmp    r13,0x7f
   3f84c:	jbe    3f96c <sha512_process_bytes+0x14c>
   3f852:	test   bl,0x7
   3f855:	je     3f950 <sha512_process_bytes+0x130>
   3f85b:	lea    rbp,[r12+0x58]
   3f860:	cmp    r13,0x80
   3f867:	je     3fb08 <sha512_process_bytes+0x2e8>
   3f86d:	lea    r15,[r13-0x81]
   3f874:	shr    r15,0x7
   3f878:	lea    r14,[r15+0x1]
   3f87c:	shl    r14,0x7
   3f880:	add    r14,rbx
   3f883:	nop    DWORD PTR [rax+rax*1+0x0]
   3f888:	movdqu xmm0,XMMWORD PTR [rbx]
   3f88c:	mov    rdx,r12
   3f88f:	mov    esi,0x80
   3f894:	mov    rdi,rbp
   3f897:	sub    rbx,0xffffffffffffff80
   3f89b:	movups XMMWORD PTR [rbp+0x0],xmm0
   3f89f:	movdqu xmm1,XMMWORD PTR [rbx-0x70]
   3f8a4:	movups XMMWORD PTR [rbp+0x10],xmm1
   3f8a8:	movdqu xmm2,XMMWORD PTR [rbx-0x60]
   3f8ad:	movups XMMWORD PTR [rbp+0x20],xmm2
   3f8b1:	movdqu xmm3,XMMWORD PTR [rbx-0x50]
   3f8b6:	movups XMMWORD PTR [rbp+0x30],xmm3
   3f8ba:	movdqu xmm4,XMMWORD PTR [rbx-0x40]
   3f8bf:	movups XMMWORD PTR [rbp+0x40],xmm4
   3f8c3:	movdqu xmm5,XMMWORD PTR [rbx-0x30]
   3f8c8:	movups XMMWORD PTR [rbp+0x50],xmm5
   3f8cc:	movdqu xmm6,XMMWORD PTR [rbx-0x20]
   3f8d1:	movups XMMWORD PTR [rbp+0x60],xmm6
   3f8d5:	movdqu xmm7,XMMWORD PTR [rbx-0x10]
   3f8da:	movups XMMWORD PTR [rbp+0x70],xmm7
   3f8de:	call   3b870 <sha512_process_block>
   3f8e3:	cmp    rbx,r14
   3f8e6:	jne    3f888 <sha512_process_bytes+0x68>
   3f8e8:	neg    r15
   3f8eb:	shl    r15,0x7
   3f8ef:	lea    r13,[r13+r15*1-0x80]
   3f8f4:	mov    rbx,QWORD PTR [r12+0x50]
   3f8f9:	mov    ecx,r13d
   3f8fc:	lea    rax,[rbp+rbx*1+0x0]
   3f901:	cmp    r13d,0x8
   3f905:	jae    3f9e0 <sha512_process_bytes+0x1c0>
   3f90b:	test   r13b,0x4
   3f90f:	jne    3fb10 <sha512_process_bytes+0x2f0>
   3f915:	test   ecx,ecx
   3f917:	je     3f928 <sha512_process_bytes+0x108>
   3f919:	movzx  edx,BYTE PTR [r14]
   3f91d:	mov    BYTE PTR [rax],dl
   3f91f:	test   cl,0x2
   3f922:	jne    3fb23 <sha512_process_bytes+0x303>
   3f928:	add    rbx,r13
   3f92b:	cmp    rbx,0x7f
   3f92f:	ja     3fa1c <sha512_process_bytes+0x1fc>
   3f935:	mov    QWORD PTR [r12+0x50],rbx
   3f93a:	add    rsp,0x18
   3f93e:	pop    rbx
   3f93f:	pop    rbp
   3f940:	pop    r12
   3f942:	pop    r13
   3f944:	pop    r14
   3f946:	pop    r15
   3f948:	ret    
   3f949:	nop    DWORD PTR [rax+0x0]
   3f950:	mov    rbp,r13
   3f953:	mov    rdi,rbx
   3f956:	mov    rdx,r12
   3f959:	and    r13d,0x7f
   3f95d:	and    rbp,0xffffffffffffff80
   3f961:	mov    rsi,rbp
   3f964:	add    rbx,rbp
   3f967:	call   3b870 <sha512_process_block>
   3f96c:	test   r13,r13
   3f96f:	jne    3fb33 <sha512_process_bytes+0x313>
   3f975:	add    rsp,0x18
   3f979:	pop    rbx
   3f97a:	pop    rbp
   3f97b:	pop    r12
   3f97d:	pop    r13
   3f97f:	pop    r14
   3f981:	pop    r15
   3f983:	ret    
   3f984:	nop    DWORD PTR [rax+0x0]
   3f988:	mov    r14d,0x100
   3f98e:	lea    rcx,[rdx+0x58]
   3f992:	sub    r14,rbp
   3f995:	lea    rdi,[rcx+rbp*1]
   3f999:	mov    QWORD PTR [rsp+0x8],rcx
   3f99e:	cmp    r14,rsi
   3f9a1:	cmova  r14,rsi
   3f9a5:	mov    rsi,rbx
   3f9a8:	mov    rdx,r14
   3f9ab:	call   11220 <memcpy@plt>
   3f9b0:	mov    r15,QWORD PTR [r12+0x50]
   3f9b5:	mov    rcx,QWORD PTR [rsp+0x8]
   3f9ba:	add    r15,r14
   3f9bd:	cmp    r15,0x80
   3f9c4:	mov    QWORD PTR [r12+0x50],r15
   3f9c9:	ja     3fa50 <sha512_process_bytes+0x230>
   3f9cf:	add    rbx,r14
   3f9d2:	sub    r13,r14
   3f9d5:	jmp    3f848 <sha512_process_bytes+0x28>
   3f9da:	nop    WORD PTR [rax+rax*1+0x0]
   3f9e0:	mov    rdx,QWORD PTR [r14]
   3f9e3:	lea    rdi,[rax+0x8]
   3f9e7:	mov    rsi,r14
   3f9ea:	add    rbx,r13
   3f9ed:	and    rdi,0xfffffffffffffff8
   3f9f1:	mov    QWORD PTR [rax],rdx
   3f9f4:	mov    edx,r13d
   3f9f7:	mov    rcx,QWORD PTR [r14+rdx*1-0x8]
   3f9fc:	mov    QWORD PTR [rax+rdx*1-0x8],rcx
   3fa01:	sub    rax,rdi
   3fa04:	lea    ecx,[r13+rax*1+0x0]
   3fa09:	sub    rsi,rax
   3fa0c:	shr    ecx,0x3
   3fa0f:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   3fa12:	cmp    rbx,0x7f
   3fa16:	jbe    3f935 <sha512_process_bytes+0x115>
   3fa1c:	mov    rdx,r12
   3fa1f:	mov    rdi,rbp
   3fa22:	mov    esi,0x80
   3fa27:	add    rbx,0xffffffffffffff80
   3fa2b:	call   3b870 <sha512_process_block>
   3fa30:	lea    rsi,[r12+0xd8]
   3fa38:	mov    rdx,rbx
   3fa3b:	mov    rdi,rbp
   3fa3e:	call   11220 <memcpy@plt>
   3fa43:	jmp    3f935 <sha512_process_bytes+0x115>
   3fa48:	nop    DWORD PTR [rax+rax*1+0x0]
   3fa50:	mov    rsi,r15
   3fa53:	mov    rdi,rcx
   3fa56:	mov    rdx,r12
   3fa59:	add    rbp,r14
   3fa5c:	and    rsi,0xffffffffffffff80
   3fa60:	and    r15d,0x7f
   3fa64:	and    rbp,0xffffffffffffff80
   3fa68:	call   3b870 <sha512_process_block>
   3fa6d:	mov    rcx,QWORD PTR [rsp+0x8]
   3fa72:	mov    QWORD PTR [r12+0x50],r15
   3fa77:	lea    rsi,[rcx+rbp*1]
   3fa7b:	cmp    r15d,0x8
   3fa7f:	jae    3fab8 <sha512_process_bytes+0x298>
   3fa81:	test   r15b,0x4
   3fa85:	jne    3faee <sha512_process_bytes+0x2ce>
   3fa87:	test   r15d,r15d
   3fa8a:	je     3f9cf <sha512_process_bytes+0x1af>
   3fa90:	movzx  eax,BYTE PTR [rsi]
   3fa93:	mov    BYTE PTR [r12+0x58],al
   3fa98:	test   r15b,0x2
   3fa9c:	je     3f9cf <sha512_process_bytes+0x1af>
   3faa2:	movzx  eax,WORD PTR [r15+rsi*1-0x2]
   3faa8:	mov    WORD PTR [rcx+r15*1-0x2],ax
   3faae:	jmp    3f9cf <sha512_process_bytes+0x1af>
   3fab3:	nop    DWORD PTR [rax+rax*1+0x0]
   3fab8:	mov    rax,QWORD PTR [rsi]
   3fabb:	lea    rdi,[r12+0x60]
   3fac0:	and    rdi,0xfffffffffffffff8
   3fac4:	mov    QWORD PTR [r12+0x58],rax
   3fac9:	mov    rax,QWORD PTR [r15+rsi*1-0x8]
   3face:	mov    QWORD PTR [rcx+r15*1-0x8],rax
   3fad3:	mov    rax,rcx
   3fad6:	sub    rax,rdi
   3fad9:	add    r15d,eax
   3fadc:	sub    rsi,rax
   3fadf:	shr    r15d,0x3
   3fae3:	mov    ecx,r15d
   3fae6:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   3fae9:	jmp    3f9cf <sha512_process_bytes+0x1af>
   3faee:	mov    eax,DWORD PTR [rsi]
   3faf0:	mov    DWORD PTR [r12+0x58],eax
   3faf5:	mov    eax,DWORD PTR [r15+rsi*1-0x4]
   3fafa:	mov    DWORD PTR [rcx+r15*1-0x4],eax
   3faff:	jmp    3f9cf <sha512_process_bytes+0x1af>
   3fb04:	nop    DWORD PTR [rax+0x0]
   3fb08:	mov    r14,rbx
   3fb0b:	jmp    3f8f4 <sha512_process_bytes+0xd4>
   3fb10:	mov    edx,DWORD PTR [r14]
   3fb13:	mov    DWORD PTR [rax],edx
   3fb15:	mov    edx,DWORD PTR [r14+rcx*1-0x4]
   3fb1a:	mov    DWORD PTR [rax+rcx*1-0x4],edx
   3fb1e:	jmp    3f928 <sha512_process_bytes+0x108>
   3fb23:	movzx  edx,WORD PTR [r14+rcx*1-0x2]
   3fb29:	mov    WORD PTR [rax+rcx*1-0x2],dx
   3fb2e:	jmp    3f928 <sha512_process_bytes+0x108>
   3fb33:	lea    rbp,[r12+0x58]
   3fb38:	mov    r14,rbx
   3fb3b:	jmp    3f8f4 <sha512_process_bytes+0xd4>

000000000003fb40 <sha512_buffer>:
   3fb40:	endbr64 
   3fb44:	push   r12
   3fb46:	mov    r12,rdx
   3fb49:	push   rbx
   3fb4a:	sub    rsp,0x168
   3fb51:	mov    rax,QWORD PTR fs:0x28
   3fb5a:	mov    QWORD PTR [rsp+0x158],rax
   3fb62:	movabs rax,0x6a09e667f3bcc908
   3fb6c:	mov    rbx,rsp
   3fb6f:	mov    QWORD PTR [rsp+0x48],0x0
   3fb78:	mov    QWORD PTR [rsp+0x40],0x0
   3fb81:	mov    rdx,rbx
   3fb84:	mov    QWORD PTR [rsp+0x50],0x0
   3fb8d:	mov    QWORD PTR [rsp],rax
   3fb91:	movabs rax,0xbb67ae8584caa73b
   3fb9b:	mov    QWORD PTR [rsp+0x8],rax
   3fba0:	movabs rax,0x3c6ef372fe94f82b
   3fbaa:	mov    QWORD PTR [rsp+0x10],rax
   3fbaf:	movabs rax,0xa54ff53a5f1d36f1
   3fbb9:	mov    QWORD PTR [rsp+0x18],rax
   3fbbe:	movabs rax,0x510e527fade682d1
   3fbc8:	mov    QWORD PTR [rsp+0x20],rax
   3fbcd:	movabs rax,0x9b05688c2b3e6c1f
   3fbd7:	mov    QWORD PTR [rsp+0x28],rax
   3fbdc:	movabs rax,0x1f83d9abfb41bd6b
   3fbe6:	mov    QWORD PTR [rsp+0x30],rax
   3fbeb:	movabs rax,0x5be0cd19137e2179
   3fbf5:	mov    QWORD PTR [rsp+0x38],rax
   3fbfa:	call   3f820 <sha512_process_bytes>
   3fbff:	mov    rdi,rbx
   3fc02:	call   3f6e0 <sha512_conclude_ctx>
   3fc07:	xor    edx,edx
   3fc09:	nop    DWORD PTR [rax+0x0]
   3fc10:	mov    rcx,QWORD PTR [rbx+rdx*1]
   3fc14:	bswap  rcx
   3fc17:	mov    QWORD PTR [r12+rdx*1],rcx
   3fc1b:	add    rdx,0x8
   3fc1f:	cmp    rdx,0x40
   3fc23:	jne    3fc10 <sha512_buffer+0xd0>
   3fc25:	mov    rax,QWORD PTR [rsp+0x158]
   3fc2d:	sub    rax,QWORD PTR fs:0x28
   3fc36:	jne    3fc46 <sha512_buffer+0x106>
   3fc38:	add    rsp,0x168
   3fc3f:	mov    rax,r12
   3fc42:	pop    rbx
   3fc43:	pop    r12
   3fc45:	ret    
   3fc46:	call   11760 <__stack_chk_fail@plt>
   3fc4b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000003fc50 <sha384_buffer>:
   3fc50:	endbr64 
   3fc54:	push   r12
   3fc56:	mov    r12,rdx
   3fc59:	push   rbx
   3fc5a:	sub    rsp,0x168
   3fc61:	mov    rax,QWORD PTR fs:0x28
   3fc6a:	mov    QWORD PTR [rsp+0x158],rax
   3fc72:	movabs rax,0xcbbb9d5dc1059ed8
   3fc7c:	mov    rbx,rsp
   3fc7f:	mov    QWORD PTR [rsp+0x48],0x0
   3fc88:	mov    QWORD PTR [rsp+0x40],0x0
   3fc91:	mov    rdx,rbx
   3fc94:	mov    QWORD PTR [rsp+0x50],0x0
   3fc9d:	mov    QWORD PTR [rsp],rax
   3fca1:	movabs rax,0x629a292a367cd507
   3fcab:	mov    QWORD PTR [rsp+0x8],rax
   3fcb0:	movabs rax,0x9159015a3070dd17
   3fcba:	mov    QWORD PTR [rsp+0x10],rax
   3fcbf:	movabs rax,0x152fecd8f70e5939
   3fcc9:	mov    QWORD PTR [rsp+0x18],rax
   3fcce:	movabs rax,0x67332667ffc00b31
   3fcd8:	mov    QWORD PTR [rsp+0x20],rax
   3fcdd:	movabs rax,0x8eb44a8768581511
   3fce7:	mov    QWORD PTR [rsp+0x28],rax
   3fcec:	movabs rax,0xdb0c2e0d64f98fa7
   3fcf6:	mov    QWORD PTR [rsp+0x30],rax
   3fcfb:	movabs rax,0x47b5481dbefa4fa4
   3fd05:	mov    QWORD PTR [rsp+0x38],rax
   3fd0a:	call   3f820 <sha512_process_bytes>
   3fd0f:	mov    rdi,rbx
   3fd12:	call   3f6e0 <sha512_conclude_ctx>
   3fd17:	xor    edx,edx
   3fd19:	nop    DWORD PTR [rax+0x0]
   3fd20:	mov    rcx,QWORD PTR [rbx+rdx*1]
   3fd24:	bswap  rcx
   3fd27:	mov    QWORD PTR [r12+rdx*1],rcx
   3fd2b:	add    rdx,0x8
   3fd2f:	cmp    rdx,0x30
   3fd33:	jne    3fd20 <sha384_buffer+0xd0>
   3fd35:	mov    rax,QWORD PTR [rsp+0x158]
   3fd3d:	sub    rax,QWORD PTR fs:0x28
   3fd46:	jne    3fd56 <sha384_buffer+0x106>
   3fd48:	add    rsp,0x168
   3fd4f:	mov    rax,r12
   3fd52:	pop    rbx
   3fd53:	pop    r12
   3fd55:	ret    
   3fd56:	call   11760 <__stack_chk_fail@plt>
   3fd5b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000003fd60 <dir_name>:
   3fd60:	endbr64 
   3fd64:	sub    rsp,0x8
   3fd68:	call   3fe30 <mdir_name>
   3fd6d:	test   rax,rax
   3fd70:	je     3fd77 <dir_name+0x17>
   3fd72:	add    rsp,0x8
   3fd76:	ret    
   3fd77:	call   48450 <xalloc_die>
   3fd7c:	nop    DWORD PTR [rax+0x0]

000000000003fd80 <base_name>:
   3fd80:	endbr64 
   3fd84:	push   r12
   3fd86:	push   rbp
   3fd87:	push   rbx
   3fd88:	mov    rbx,rdi
   3fd8b:	call   33a10 <last_component>
   3fd90:	cmp    BYTE PTR [rax],0x0
   3fd93:	je     3fdd8 <base_name+0x58>
   3fd95:	mov    rdi,rax
   3fd98:	mov    rbp,rax
   3fd9b:	call   33a70 <base_len>
   3fda0:	xor    edi,edi
   3fda2:	cmp    BYTE PTR [rbp+rax*1+0x0],0x2f
   3fda7:	sete   dil
   3fdab:	add    rax,rdi
   3fdae:	mov    r12,rax
   3fdb1:	lea    rdi,[rax+0x1]
   3fdb5:	call   47ef0 <ximalloc>
   3fdba:	mov    rdx,r12
   3fdbd:	mov    rsi,rbp
   3fdc0:	mov    rdi,rax
   3fdc3:	call   11220 <memcpy@plt>
   3fdc8:	mov    BYTE PTR [rax+r12*1],0x0
   3fdcd:	pop    rbx
   3fdce:	pop    rbp
   3fdcf:	pop    r12
   3fdd1:	ret    
   3fdd2:	nop    WORD PTR [rax+rax*1+0x0]
   3fdd8:	mov    rdi,rbx
   3fddb:	mov    rbp,rbx
   3fdde:	call   33a70 <base_len>
   3fde3:	mov    r12,rax
   3fde6:	jmp    3fdb1 <base_name+0x31>
   3fde8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000003fdf0 <dir_len>:
   3fdf0:	endbr64 
   3fdf4:	push   rbp
   3fdf5:	xor    ebp,ebp
   3fdf7:	push   rbx
   3fdf8:	mov    rbx,rdi
   3fdfb:	sub    rsp,0x8
   3fdff:	cmp    BYTE PTR [rdi],0x2f
   3fe02:	sete   bpl
   3fe06:	call   33a10 <last_component>
   3fe0b:	sub    rax,rbx
   3fe0e:	jmp    3fe1e <dir_len+0x2e>
   3fe10:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
   3fe15:	lea    rdx,[rax-0x1]
   3fe19:	jne    3fe23 <dir_len+0x33>
   3fe1b:	mov    rax,rdx
   3fe1e:	cmp    rax,rbp
   3fe21:	ja     3fe10 <dir_len+0x20>
   3fe23:	add    rsp,0x8
   3fe27:	pop    rbx
   3fe28:	pop    rbp
   3fe29:	ret    
   3fe2a:	nop    WORD PTR [rax+rax*1+0x0]

000000000003fe30 <mdir_name>:
   3fe30:	endbr64 
   3fe34:	push   r12
   3fe36:	push   rbp
   3fe37:	mov    rbp,rdi
   3fe3a:	push   rbx
   3fe3b:	xor    ebx,ebx
   3fe3d:	cmp    BYTE PTR [rdi],0x2f
   3fe40:	sete   bl
   3fe43:	call   33a10 <last_component>
   3fe48:	sub    rax,rbp
   3fe4b:	mov    r12,rax
   3fe4e:	jmp    3fe60 <mdir_name+0x30>
   3fe50:	cmp    BYTE PTR [rbp+r12*1-0x1],0x2f
   3fe56:	lea    rax,[r12-0x1]
   3fe5b:	jne    3feb0 <mdir_name+0x80>
   3fe5d:	mov    r12,rax
   3fe60:	cmp    rbx,r12
   3fe63:	jb     3fe50 <mdir_name+0x20>
   3fe65:	mov    rax,r12
   3fe68:	xor    rax,0x1
   3fe6c:	mov    ebx,eax
   3fe6e:	lea    rdi,[r12+rax*1+0x1]
   3fe73:	and    ebx,0x1
   3fe76:	call   11af0 <malloc@plt>
   3fe7b:	test   rax,rax
   3fe7e:	je     3fedd <mdir_name+0xad>
   3fe80:	mov    rdx,r12
   3fe83:	mov    rsi,rbp
   3fe86:	mov    rdi,rax
   3fe89:	call   11220 <memcpy@plt>
   3fe8e:	mov    r8,rax
   3fe91:	test   bl,bl
   3fe93:	je     3fed5 <mdir_name+0xa5>
   3fe95:	mov    BYTE PTR [rax],0x2e
   3fe98:	mov    r12d,0x1
   3fe9e:	mov    BYTE PTR [r8+r12*1],0x0
   3fea3:	pop    rbx
   3fea4:	mov    rax,r8
   3fea7:	pop    rbp
   3fea8:	pop    r12
   3feaa:	ret    
   3feab:	nop    DWORD PTR [rax+rax*1+0x0]
   3feb0:	lea    rdi,[r12+0x1]
   3feb5:	call   11af0 <malloc@plt>
   3feba:	mov    r8,rax
   3febd:	test   rax,rax
   3fec0:	je     3fedd <mdir_name+0xad>
   3fec2:	mov    rdi,r8
   3fec5:	mov    rdx,r12
   3fec8:	mov    rsi,rbp
   3fecb:	call   11220 <memcpy@plt>
   3fed0:	mov    r8,rax
   3fed3:	jmp    3fe9e <mdir_name+0x6e>
   3fed5:	mov    r12d,0x1
   3fedb:	jmp    3fe9e <mdir_name+0x6e>
   3fedd:	xor    r8d,r8d
   3fee0:	jmp    3fea3 <mdir_name+0x73>
   3fee2:	cs nop WORD PTR [rax+rax*1+0x0]
   3feec:	nop    DWORD PTR [rax+0x0]

000000000003fef0 <strip_trailing_slashes>:
   3fef0:	endbr64 
   3fef4:	push   rbp
   3fef5:	mov    rbp,rdi
   3fef8:	push   rbx
   3fef9:	sub    rsp,0x8
   3fefd:	call   33a10 <last_component>
   3ff02:	cmp    BYTE PTR [rax],0x0
   3ff05:	mov    rbx,rax
   3ff08:	cmove  rbx,rbp
   3ff0c:	mov    rdi,rbx
   3ff0f:	call   33a70 <base_len>
   3ff14:	add    rbx,rax
   3ff17:	cmp    BYTE PTR [rbx],0x0
   3ff1a:	mov    BYTE PTR [rbx],0x0
   3ff1d:	setne  al
   3ff20:	add    rsp,0x8
   3ff24:	pop    rbx
   3ff25:	pop    rbp
   3ff26:	ret    
   3ff27:	nop    WORD PTR [rax+rax*1+0x0]

000000000003ff30 <fatal_signal_handler>:
   3ff30:	endbr64 
   3ff34:	push   r13
   3ff36:	push   r12
   3ff38:	push   rbp
   3ff39:	mov    ebp,edi
   3ff3b:	push   rbx
   3ff3c:	sub    rsp,0x8
   3ff40:	movsxd rax,DWORD PTR [rip+0x39e99]        # 79de0 <actions_count>
   3ff47:	test   rax,rax
   3ff4a:	je     3ff78 <fatal_signal_handler+0x48>
   3ff4c:	nop    DWORD PTR [rax+0x0]
   3ff50:	sub    rax,0x1
   3ff54:	mov    edi,ebp
   3ff56:	mov    DWORD PTR [rip+0x39e84],eax        # 79de0 <actions_count>
   3ff5c:	mov    rdx,QWORD PTR [rip+0x374dd]        # 77440 <actions>
   3ff63:	lea    rax,[rdx+rax*8]
   3ff67:	mov    rax,QWORD PTR [rax]
   3ff6a:	call   rax
   3ff6c:	movsxd rax,DWORD PTR [rip+0x39e6d]        # 79de0 <actions_count>
   3ff73:	test   rax,rax
   3ff76:	jne    3ff50 <fatal_signal_handler+0x20>
   3ff78:	lea    rbx,[rip+0x374a1]        # 77420 <fatal_signals>
   3ff7f:	lea    r13,[rip+0x3785a]        # 777e0 <saved_sigactions>
   3ff86:	lea    r12,[rbx+0x18]
   3ff8a:	jmp    3ffad <fatal_signal_handler+0x7d>
   3ff8c:	nop    DWORD PTR [rax+0x0]
   3ff90:	lea    rdx,[rax+rax*8]
   3ff94:	lea    rax,[rax+rdx*2]
   3ff98:	xor    edx,edx
   3ff9a:	lea    rsi,[r13+rax*8+0x0]
   3ff9f:	call   119d0 <sigaction@plt>
   3ffa4:	add    rbx,0x4
   3ffa8:	cmp    rbx,r12
   3ffab:	je     3ffd8 <fatal_signal_handler+0xa8>
   3ffad:	mov    edi,DWORD PTR [rbx]
   3ffaf:	test   edi,edi
   3ffb1:	js     3ffa4 <fatal_signal_handler+0x74>
   3ffb3:	movsxd rax,edi
   3ffb6:	lea    rdx,[rax+rax*8]
   3ffba:	lea    rdx,[rax+rdx*2]
   3ffbe:	lea    rdx,[r13+rdx*8+0x0]
   3ffc3:	cmp    QWORD PTR [rdx],0x1
   3ffc7:	jne    3ff90 <fatal_signal_handler+0x60>
   3ffc9:	mov    QWORD PTR [rdx],0x0
   3ffd0:	jmp    3ff90 <fatal_signal_handler+0x60>
   3ffd2:	nop    WORD PTR [rax+rax*1+0x0]
   3ffd8:	add    rsp,0x8
   3ffdc:	mov    edi,ebp
   3ffde:	pop    rbx
   3ffdf:	pop    rbp
   3ffe0:	pop    r12
   3ffe2:	pop    r13
   3ffe4:	jmp    115c0 <raise@plt>
   3ffe9:	nop    DWORD PTR [rax+0x0]

000000000003fff0 <init_fatal_signals.part.0>:
   3fff0:	push   r12
   3fff2:	push   rbp
   3fff3:	push   rbx
   3fff4:	lea    rbx,[rip+0x37425]        # 77420 <fatal_signals>
   3fffb:	lea    r12,[rbx+0x18]
   3ffff:	sub    rsp,0xa0
   40006:	mov    rax,QWORD PTR fs:0x28
   4000f:	mov    QWORD PTR [rsp+0x98],rax
   40017:	xor    eax,eax
   40019:	mov    rbp,rsp
   4001c:	jmp    40029 <init_fatal_signals.part.0+0x39>
   4001e:	xchg   ax,ax
   40020:	add    rbx,0x4
   40024:	cmp    rbx,r12
   40027:	je     40050 <init_fatal_signals.part.0+0x60>
   40029:	mov    edi,DWORD PTR [rbx]
   4002b:	xor    esi,esi
   4002d:	mov    rdx,rbp
   40030:	call   119d0 <sigaction@plt>
   40035:	test   eax,eax
   40037:	js     40020 <init_fatal_signals.part.0+0x30>
   40039:	cmp    QWORD PTR [rsp],0x1
   4003e:	jne    40020 <init_fatal_signals.part.0+0x30>
   40040:	mov    DWORD PTR [rbx],0xffffffff
   40046:	add    rbx,0x4
   4004a:	cmp    rbx,r12
   4004d:	jne    40029 <init_fatal_signals.part.0+0x39>
   4004f:	nop
   40050:	mov    BYTE PTR [rip+0x37669],0x1        # 776c0 <fatal_signals_initialized.0>
   40057:	mov    rax,QWORD PTR [rsp+0x98]
   4005f:	sub    rax,QWORD PTR fs:0x28
   40068:	jne    40076 <init_fatal_signals.part.0+0x86>
   4006a:	add    rsp,0xa0
   40071:	pop    rbx
   40072:	pop    rbp
   40073:	pop    r12
   40075:	ret    
   40076:	call   11760 <__stack_chk_fail@plt>
   4007b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000040080 <do_init_fatal_signal_set>:
   40080:	endbr64 
   40084:	cmp    BYTE PTR [rip+0x37635],0x0        # 776c0 <fatal_signals_initialized.0>
   4008b:	push   r12
   4008d:	push   rbp
   4008e:	push   rbx
   4008f:	jne    40096 <do_init_fatal_signal_set+0x16>
   40091:	call   3fff0 <init_fatal_signals.part.0>
   40096:	lea    r12,[rip+0x37683]        # 77720 <fatal_signal_set>
   4009d:	lea    rbx,[rip+0x3737c]        # 77420 <fatal_signals>
   400a4:	mov    rdi,r12
   400a7:	lea    rbp,[rbx+0x18]
   400ab:	call   119b0 <sigemptyset@plt>
   400b0:	mov    esi,DWORD PTR [rbx]
   400b2:	test   esi,esi
   400b4:	js     400be <do_init_fatal_signal_set+0x3e>
   400b6:	mov    rdi,r12
   400b9:	call   11f50 <sigaddset@plt>
   400be:	add    rbx,0x4
   400c2:	cmp    rbx,rbp
   400c5:	jne    400b0 <do_init_fatal_signal_set+0x30>
   400c7:	pop    rbx
   400c8:	pop    rbp
   400c9:	pop    r12
   400cb:	ret    
   400cc:	nop    DWORD PTR [rax+0x0]

00000000000400d0 <at_fatal_signal>:
   400d0:	endbr64 
   400d4:	push   r14
   400d6:	push   r13
   400d8:	push   r12
   400da:	push   rbp
   400db:	mov    rbp,rdi
   400de:	push   rbx
   400df:	sub    rsp,0xa0
   400e6:	mov    rax,QWORD PTR fs:0x28
   400ef:	mov    QWORD PTR [rsp+0x98],rax
   400f7:	mov    rax,QWORD PTR [rip+0x35eaa]        # 75fa8 <__libc_single_threaded@GLIBC_2.32>
   400fe:	movzx  r13d,BYTE PTR [rax]
   40102:	test   r13b,r13b
   40105:	je     40210 <at_fatal_signal+0x140>
   4010b:	cmp    BYTE PTR [rip+0x375af],0x0        # 776c1 <cleanup_initialized.1>
   40112:	jne    4018e <at_fatal_signal+0xbe>
   40114:	cmp    BYTE PTR [rip+0x375a5],0x0        # 776c0 <fatal_signals_initialized.0>
   4011b:	je     40200 <at_fatal_signal+0x130>
   40121:	lea    rax,[rip+0xfffffffffffffe08]        # 3ff30 <fatal_signal_handler>
   40128:	lea    rdi,[rsp+0x8]
   4012d:	mov    DWORD PTR [rsp+0x88],0x40000000
   40138:	lea    rbx,[rip+0x372e1]        # 77420 <fatal_signals>
   4013f:	mov    QWORD PTR [rsp],rax
   40143:	lea    r14,[rip+0x37696]        # 777e0 <saved_sigactions>
   4014a:	call   119b0 <sigemptyset@plt>
   4014f:	lea    r12,[rbx+0x18]
   40153:	nop    DWORD PTR [rax+rax*1+0x0]
   40158:	mov    edi,DWORD PTR [rbx]
   4015a:	test   edi,edi
   4015c:	js     4017e <at_fatal_signal+0xae>
   4015e:	cmp    edi,0x3f
   40161:	jg     12843 <at_fatal_signal.cold>
   40167:	movsxd rax,edi
   4016a:	mov    rsi,rsp
   4016d:	lea    rdx,[rax+rax*8]
   40171:	lea    rax,[rax+rdx*2]
   40175:	lea    rdx,[r14+rax*8]
   40179:	call   119d0 <sigaction@plt>
   4017e:	add    rbx,0x4
   40182:	cmp    rbx,r12
   40185:	jne    40158 <at_fatal_signal+0x88>
   40187:	mov    BYTE PTR [rip+0x37533],0x1        # 776c1 <cleanup_initialized.1>
   4018e:	movsxd rax,DWORD PTR [rip+0x39c4b]        # 79de0 <actions_count>
   40195:	mov    rbx,QWORD PTR [rip+0x37274]        # 77410 <actions_allocated>
   4019c:	cmp    rax,rbx
   4019f:	je     40248 <at_fatal_signal+0x178>
   401a5:	mov    rdx,QWORD PTR [rip+0x37294]        # 77440 <actions>
   401ac:	movsxd rax,DWORD PTR [rip+0x39c2d]        # 79de0 <actions_count>
   401b3:	xor    r12d,r12d
   401b6:	lea    rax,[rdx+rax*8]
   401ba:	mov    QWORD PTR [rax],rbp
   401bd:	mov    eax,DWORD PTR [rip+0x39c1d]        # 79de0 <actions_count>
   401c3:	add    eax,0x1
   401c6:	mov    DWORD PTR [rip+0x39c14],eax        # 79de0 <actions_count>
   401cc:	test   r13b,r13b
   401cf:	je     40230 <at_fatal_signal+0x160>
   401d1:	mov    rax,QWORD PTR [rsp+0x98]
   401d9:	sub    rax,QWORD PTR fs:0x28
   401e2:	jne    40294 <at_fatal_signal+0x1c4>
   401e8:	add    rsp,0xa0
   401ef:	mov    eax,r12d
   401f2:	pop    rbx
   401f3:	pop    rbp
   401f4:	pop    r12
   401f6:	pop    r13
   401f8:	pop    r14
   401fa:	ret    
   401fb:	nop    DWORD PTR [rax+rax*1+0x0]
   40200:	call   3fff0 <init_fatal_signals.part.0>
   40205:	jmp    40121 <at_fatal_signal+0x51>
   4020a:	nop    WORD PTR [rax+rax*1+0x0]
   40210:	lea    rdi,[rip+0x37589]        # 777a0 <at_fatal_signal_lock>
   40217:	call   11db0 <pthread_mutex_lock@plt>
   4021c:	test   eax,eax
   4021e:	je     4010b <at_fatal_signal+0x3b>
   40224:	jmp    12843 <at_fatal_signal.cold>
   40229:	nop    DWORD PTR [rax+0x0]
   40230:	lea    rdi,[rip+0x37569]        # 777a0 <at_fatal_signal_lock>
   40237:	call   110d0 <pthread_mutex_unlock@plt>
   4023c:	test   eax,eax
   4023e:	je     401d1 <at_fatal_signal+0x101>
   40240:	jmp    12843 <at_fatal_signal.cold>
   40245:	nop    DWORD PTR [rax]
   40248:	mov    rdi,rbx
   4024b:	mov    r12,QWORD PTR [rip+0x371ee]        # 77440 <actions>
   40252:	lea    r14,[rbx+rbx*1]
   40256:	shl    rdi,0x4
   4025a:	call   11af0 <malloc@plt>
   4025f:	test   rax,rax
   40262:	je     40299 <at_fatal_signal+0x1c9>
   40264:	test   rbx,rbx
   40267:	je     40281 <at_fatal_signal+0x1b1>
   40269:	xor    edx,edx
   4026b:	nop    DWORD PTR [rax+rax*1+0x0]
   40270:	mov    rcx,QWORD PTR [r12+rdx*8]
   40274:	mov    QWORD PTR [rax+rdx*8],rcx
   40278:	add    rdx,0x1
   4027c:	cmp    rbx,rdx
   4027f:	jne    40270 <at_fatal_signal+0x1a0>
   40281:	mov    QWORD PTR [rip+0x371b8],rax        # 77440 <actions>
   40288:	mov    QWORD PTR [rip+0x37181],r14        # 77410 <actions_allocated>
   4028f:	jmp    401a5 <at_fatal_signal+0xd5>
   40294:	call   11760 <__stack_chk_fail@plt>
   40299:	or     r12d,0xffffffff
   4029d:	jmp    401cc <at_fatal_signal+0xfc>
   402a2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   402ad:	nop    DWORD PTR [rax]

00000000000402b0 <block_fatal_signals>:
   402b0:	endbr64 
   402b4:	mov    rax,QWORD PTR [rip+0x35ced]        # 75fa8 <__libc_single_threaded@GLIBC_2.32>
   402bb:	push   rbp
   402bc:	cmp    BYTE PTR [rax],0x0
   402bf:	je     40310 <block_fatal_signals+0x60>
   402c1:	mov    eax,DWORD PTR [rip+0x373fd]        # 776c4 <fatal_signals_block_counter>
   402c7:	lea    edx,[rax+0x1]
   402ca:	mov    DWORD PTR [rip+0x373f4],edx        # 776c4 <fatal_signals_block_counter>
   402d0:	test   eax,eax
   402d2:	je     402e0 <block_fatal_signals+0x30>
   402d4:	pop    rbp
   402d5:	ret    
   402d6:	cs nop WORD PTR [rax+rax*1+0x0]
   402e0:	lea    rsi,[rip+0xfffffffffffffd99]        # 40080 <do_init_fatal_signal_set>
   402e7:	lea    rdi,[rip+0x3741a]        # 77708 <fatal_signal_set_once>
   402ee:	call   44a90 <glthread_once_multithreaded>
   402f3:	test   eax,eax
   402f5:	jne    4037e <block_fatal_signals+0xce>
   402fb:	xor    edx,edx
   402fd:	lea    rsi,[rip+0x3741c]        # 77720 <fatal_signal_set>
   40304:	xor    edi,edi
   40306:	pop    rbp
   40307:	jmp    10b50 <sigprocmask@plt>
   4030c:	nop    DWORD PTR [rax+0x0]
   40310:	lea    rbp,[rip+0x373c9]        # 776e0 <fatal_signals_block_lock>
   40317:	mov    rdi,rbp
   4031a:	call   11db0 <pthread_mutex_lock@plt>
   4031f:	test   eax,eax
   40321:	jne    12848 <block_fatal_signals.cold>
   40327:	mov    eax,DWORD PTR [rip+0x37397]        # 776c4 <fatal_signals_block_counter>
   4032d:	lea    edx,[rax+0x1]
   40330:	mov    DWORD PTR [rip+0x3738e],edx        # 776c4 <fatal_signals_block_counter>
   40336:	test   eax,eax
   40338:	je     40350 <block_fatal_signals+0xa0>
   4033a:	mov    rdi,rbp
   4033d:	call   110d0 <pthread_mutex_unlock@plt>
   40342:	test   eax,eax
   40344:	je     402d4 <block_fatal_signals+0x24>
   40346:	jmp    12848 <block_fatal_signals.cold>
   4034b:	nop    DWORD PTR [rax+rax*1+0x0]
   40350:	lea    rsi,[rip+0xfffffffffffffd29]        # 40080 <do_init_fatal_signal_set>
   40357:	lea    rdi,[rip+0x373aa]        # 77708 <fatal_signal_set_once>
   4035e:	call   44a90 <glthread_once_multithreaded>
   40363:	test   eax,eax
   40365:	jne    40379 <block_fatal_signals+0xc9>
   40367:	xor    edx,edx
   40369:	lea    rsi,[rip+0x373b0]        # 77720 <fatal_signal_set>
   40370:	xor    edi,edi
   40372:	call   10b50 <sigprocmask@plt>
   40377:	jmp    4033a <block_fatal_signals+0x8a>
   40379:	jmp    12848 <block_fatal_signals.cold>
   4037e:	jmp    12848 <block_fatal_signals.cold>
   40383:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4038e:	xchg   ax,ax

0000000000040390 <unblock_fatal_signals>:
   40390:	endbr64 
   40394:	mov    rax,QWORD PTR [rip+0x35c0d]        # 75fa8 <__libc_single_threaded@GLIBC_2.32>
   4039b:	push   rbx
   4039c:	movzx  ebx,BYTE PTR [rax]
   4039f:	test   bl,bl
   403a1:	je     40410 <unblock_fatal_signals+0x80>
   403a3:	mov    eax,DWORD PTR [rip+0x3731b]        # 776c4 <fatal_signals_block_counter>
   403a9:	test   eax,eax
   403ab:	je     1284d <unblock_fatal_signals.cold>
   403b1:	sub    eax,0x1
   403b4:	mov    DWORD PTR [rip+0x3730a],eax        # 776c4 <fatal_signals_block_counter>
   403ba:	je     403e0 <unblock_fatal_signals+0x50>
   403bc:	test   bl,bl
   403be:	je     403c8 <unblock_fatal_signals+0x38>
   403c0:	pop    rbx
   403c1:	ret    
   403c2:	nop    WORD PTR [rax+rax*1+0x0]
   403c8:	lea    rdi,[rip+0x37311]        # 776e0 <fatal_signals_block_lock>
   403cf:	call   110d0 <pthread_mutex_unlock@plt>
   403d4:	test   eax,eax
   403d6:	jne    1284d <unblock_fatal_signals.cold>
   403dc:	pop    rbx
   403dd:	ret    
   403de:	xchg   ax,ax
   403e0:	lea    rsi,[rip+0xfffffffffffffc99]        # 40080 <do_init_fatal_signal_set>
   403e7:	lea    rdi,[rip+0x3731a]        # 77708 <fatal_signal_set_once>
   403ee:	call   44a90 <glthread_once_multithreaded>
   403f3:	test   eax,eax
   403f5:	jne    1284d <unblock_fatal_signals.cold>
   403fb:	xor    edx,edx
   403fd:	lea    rsi,[rip+0x3731c]        # 77720 <fatal_signal_set>
   40404:	mov    edi,0x1
   40409:	call   10b50 <sigprocmask@plt>
   4040e:	jmp    403bc <unblock_fatal_signals+0x2c>
   40410:	lea    rdi,[rip+0x372c9]        # 776e0 <fatal_signals_block_lock>
   40417:	call   11db0 <pthread_mutex_lock@plt>
   4041c:	test   eax,eax
   4041e:	jne    1284d <unblock_fatal_signals.cold>
   40424:	jmp    403a3 <unblock_fatal_signals+0x13>
   40429:	nop    DWORD PTR [rax+0x0]

0000000000040430 <get_fatal_signals>:
   40430:	endbr64 
   40434:	push   rbx
   40435:	lea    rsi,[rip+0xfffffffffffffc44]        # 40080 <do_init_fatal_signal_set>
   4043c:	mov    rbx,rdi
   4043f:	lea    rdi,[rip+0x372c2]        # 77708 <fatal_signal_set_once>
   40446:	call   44a90 <glthread_once_multithreaded>
   4044b:	test   eax,eax
   4044d:	jne    12852 <get_fatal_signals.cold>
   40453:	lea    rdx,[rip+0x36fc6]        # 77420 <fatal_signals>
   4045a:	mov    rax,rbx
   4045d:	lea    rsi,[rdx+0x18]
   40461:	nop    DWORD PTR [rax+0x0]
   40468:	mov    ecx,DWORD PTR [rdx]
   4046a:	test   ecx,ecx
   4046c:	js     40474 <get_fatal_signals+0x44>
   4046e:	mov    DWORD PTR [rax],ecx
   40470:	add    rax,0x4
   40474:	add    rdx,0x4
   40478:	cmp    rdx,rsi
   4047b:	jne    40468 <get_fatal_signals+0x38>
   4047d:	sub    rax,rbx
   40480:	pop    rbx
   40481:	sar    rax,0x2
   40485:	ret    
   40486:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000040490 <get_fatal_signal_set>:
   40490:	endbr64 
   40494:	sub    rsp,0x8
   40498:	lea    rsi,[rip+0xfffffffffffffbe1]        # 40080 <do_init_fatal_signal_set>
   4049f:	lea    rdi,[rip+0x37262]        # 77708 <fatal_signal_set_once>
   404a6:	call   44a90 <glthread_once_multithreaded>
   404ab:	test   eax,eax
   404ad:	jne    12857 <get_fatal_signal_set.cold>
   404b3:	lea    rax,[rip+0x37266]        # 77720 <fatal_signal_set>
   404ba:	add    rsp,0x8
   404be:	ret    
   404bf:	nop

00000000000404c0 <rpl_fclose>:
   404c0:	endbr64 
   404c4:	push   r12
   404c6:	push   rbp
   404c7:	mov    rbp,rdi
   404ca:	push   rbx
   404cb:	call   11650 <fileno@plt>
   404d0:	mov    rdi,rbp
   404d3:	test   eax,eax
   404d5:	js     4052f <rpl_fclose+0x6f>
   404d7:	call   11230 <__freading@plt>
   404dc:	test   eax,eax
   404de:	jne    40510 <rpl_fclose+0x50>
   404e0:	mov    rdi,rbp
   404e3:	call   40840 <rpl_fflush>
   404e8:	test   eax,eax
   404ea:	je     4052c <rpl_fclose+0x6c>
   404ec:	call   104b0 <__errno_location@plt>
   404f1:	mov    rdi,rbp
   404f4:	mov    r12d,DWORD PTR [rax]
   404f7:	mov    rbx,rax
   404fa:	call   11590 <fclose@plt>
   404ff:	test   r12d,r12d
   40502:	jne    40540 <rpl_fclose+0x80>
   40504:	pop    rbx
   40505:	pop    rbp
   40506:	pop    r12
   40508:	ret    
   40509:	nop    DWORD PTR [rax+0x0]
   40510:	mov    rdi,rbp
   40513:	call   11650 <fileno@plt>
   40518:	xor    esi,esi
   4051a:	mov    edx,0x1
   4051f:	mov    edi,eax
   40521:	call   12540 <lseek@plt>
   40526:	cmp    rax,0xffffffffffffffff
   4052a:	jne    404e0 <rpl_fclose+0x20>
   4052c:	mov    rdi,rbp
   4052f:	pop    rbx
   40530:	pop    rbp
   40531:	pop    r12
   40533:	jmp    11590 <fclose@plt>
   40538:	nop    DWORD PTR [rax+rax*1+0x0]
   40540:	mov    DWORD PTR [rbx],r12d
   40543:	mov    eax,0xffffffff
   40548:	jmp    40504 <rpl_fclose+0x44>
   4054a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000040550 <rpl_fcntl>:
   40550:	endbr64 
   40554:	push   r13
   40556:	push   r12
   40558:	push   rbp
   40559:	sub    rsp,0x60
   4055d:	mov    QWORD PTR [rsp+0x40],rdx
   40562:	mov    QWORD PTR [rsp+0x48],rcx
   40567:	mov    QWORD PTR [rsp+0x50],r8
   4056c:	mov    QWORD PTR [rsp+0x58],r9
   40571:	mov    rax,QWORD PTR fs:0x28
   4057a:	mov    QWORD PTR [rsp+0x28],rax
   4057f:	xor    eax,eax
   40581:	lea    rax,[rsp+0x80]
   40589:	mov    DWORD PTR [rsp+0x10],0x10
   40591:	mov    QWORD PTR [rsp+0x18],rax
   40596:	lea    rax,[rsp+0x30]
   4059b:	mov    QWORD PTR [rsp+0x20],rax
   405a0:	test   esi,esi
   405a2:	je     40640 <rpl_fcntl+0xf0>
   405a8:	cmp    esi,0x406
   405ae:	je     40678 <rpl_fcntl+0x128>
   405b4:	cmp    esi,0xb
   405b7:	jg     405e0 <rpl_fcntl+0x90>
   405b9:	test   esi,esi
   405bb:	jg     40618 <rpl_fcntl+0xc8>
   405bd:	mov    eax,DWORD PTR [rsp+0x10]
   405c1:	cmp    eax,0x2f
   405c4:	ja     407b0 <rpl_fcntl+0x260>
   405ca:	add    rax,QWORD PTR [rsp+0x20]
   405cf:	mov    rdx,QWORD PTR [rax]
   405d2:	xor    eax,eax
   405d4:	call   10d40 <fcntl@plt>
   405d9:	mov    r12d,eax
   405dc:	jmp    40654 <rpl_fcntl+0x104>
   405de:	xchg   ax,ax
   405e0:	lea    ecx,[rsi-0x400]
   405e6:	cmp    ecx,0xa
   405e9:	ja     405bd <rpl_fcntl+0x6d>
   405eb:	mov    eax,0x1
   405f0:	shl    rax,cl
   405f3:	test   eax,0x2c5
   405f8:	jne    406c0 <rpl_fcntl+0x170>
   405fe:	test   eax,0x502
   40603:	je     405bd <rpl_fcntl+0x6d>
   40605:	xor    eax,eax
   40607:	call   10d40 <fcntl@plt>
   4060c:	mov    r12d,eax
   4060f:	jmp    40654 <rpl_fcntl+0x104>
   40611:	nop    DWORD PTR [rax+0x0]
   40618:	mov    eax,0x1
   4061d:	mov    ecx,esi
   4061f:	shl    rax,cl
   40622:	test   eax,0x514
   40627:	jne    406c0 <rpl_fcntl+0x170>
   4062d:	test   eax,0xa0a
   40632:	jne    40605 <rpl_fcntl+0xb5>
   40634:	jmp    405bd <rpl_fcntl+0x6d>
   40636:	cs nop WORD PTR [rax+rax*1+0x0]
   40640:	mov    rax,QWORD PTR [rsp+0x20]
   40645:	xor    esi,esi
   40647:	mov    edx,DWORD PTR [rax+0x10]
   4064a:	xor    eax,eax
   4064c:	call   10d40 <fcntl@plt>
   40651:	mov    r12d,eax
   40654:	mov    rax,QWORD PTR [rsp+0x28]
   40659:	sub    rax,QWORD PTR fs:0x28
   40662:	jne    407ba <rpl_fcntl+0x26a>
   40668:	add    rsp,0x60
   4066c:	mov    eax,r12d
   4066f:	pop    rbp
   40670:	pop    r12
   40672:	pop    r13
   40674:	ret    
   40675:	nop    DWORD PTR [rax]
   40678:	mov    rax,QWORD PTR [rsp+0x20]
   4067d:	mov    DWORD PTR [rsp+0x10],0x18
   40685:	mov    r13d,DWORD PTR [rax+0x10]
   40689:	mov    eax,DWORD PTR [rip+0x39871]        # 79f00 <have_dupfd_cloexec.0>
   4068f:	mov    edx,r13d
   40692:	test   eax,eax
   40694:	js     406e8 <rpl_fcntl+0x198>
   40696:	mov    esi,0x406
   4069b:	xor    eax,eax
   4069d:	mov    DWORD PTR [rsp+0xc],edi
   406a1:	call   10d40 <fcntl@plt>
   406a6:	mov    r12d,eax
   406a9:	test   eax,eax
   406ab:	js     40760 <rpl_fcntl+0x210>
   406b1:	mov    DWORD PTR [rip+0x39845],0x1        # 79f00 <have_dupfd_cloexec.0>
   406bb:	jmp    40654 <rpl_fcntl+0x104>
   406bd:	nop    DWORD PTR [rax]
   406c0:	mov    eax,DWORD PTR [rsp+0x10]
   406c4:	cmp    eax,0x2f
   406c7:	ja     407a0 <rpl_fcntl+0x250>
   406cd:	add    rax,QWORD PTR [rsp+0x20]
   406d2:	mov    edx,DWORD PTR [rax]
   406d4:	xor    eax,eax
   406d6:	call   10d40 <fcntl@plt>
   406db:	mov    r12d,eax
   406de:	jmp    40654 <rpl_fcntl+0x104>
   406e3:	nop    DWORD PTR [rax+rax*1+0x0]
   406e8:	xor    esi,esi
   406ea:	xor    eax,eax
   406ec:	call   10d40 <fcntl@plt>
   406f1:	mov    r12d,eax
   406f4:	test   eax,eax
   406f6:	js     40654 <rpl_fcntl+0x104>
   406fc:	cmp    DWORD PTR [rip+0x397fd],0xffffffff        # 79f00 <have_dupfd_cloexec.0>
   40703:	jne    40654 <rpl_fcntl+0x104>
   40709:	xor    eax,eax
   4070b:	mov    esi,0x1
   40710:	mov    edi,r12d
   40713:	call   10d40 <fcntl@plt>
   40718:	test   eax,eax
   4071a:	js     40739 <rpl_fcntl+0x1e9>
   4071c:	or     eax,0x1
   4071f:	mov    esi,0x2
   40724:	mov    edi,r12d
   40727:	mov    edx,eax
   40729:	xor    eax,eax
   4072b:	call   10d40 <fcntl@plt>
   40730:	cmp    eax,0xffffffff
   40733:	jne    40654 <rpl_fcntl+0x104>
   40739:	call   104b0 <__errno_location@plt>
   4073e:	mov    edi,r12d
   40741:	or     r12d,0xffffffff
   40745:	mov    r13d,DWORD PTR [rax]
   40748:	mov    rbp,rax
   4074b:	call   12740 <close@plt>
   40750:	mov    DWORD PTR [rbp+0x0],r13d
   40754:	jmp    40654 <rpl_fcntl+0x104>
   40759:	nop    DWORD PTR [rax+0x0]
   40760:	call   104b0 <__errno_location@plt>
   40765:	mov    edi,DWORD PTR [rsp+0xc]
   40769:	cmp    DWORD PTR [rax],0x16
   4076c:	jne    406b1 <rpl_fcntl+0x161>
   40772:	mov    edx,r13d
   40775:	xor    esi,esi
   40777:	xor    eax,eax
   40779:	call   10d40 <fcntl@plt>
   4077e:	mov    r12d,eax
   40781:	test   eax,eax
   40783:	js     40654 <rpl_fcntl+0x104>
   40789:	mov    DWORD PTR [rip+0x3976d],0xffffffff        # 79f00 <have_dupfd_cloexec.0>
   40793:	jmp    40709 <rpl_fcntl+0x1b9>
   40798:	nop    DWORD PTR [rax+rax*1+0x0]
   407a0:	mov    rax,QWORD PTR [rsp+0x18]
   407a5:	jmp    406d2 <rpl_fcntl+0x182>
   407aa:	nop    WORD PTR [rax+rax*1+0x0]
   407b0:	mov    rax,QWORD PTR [rsp+0x18]
   407b5:	jmp    405cf <rpl_fcntl+0x7f>
   407ba:	call   11760 <__stack_chk_fail@plt>
   407bf:	nop

00000000000407c0 <fd_safer_flag>:
   407c0:	endbr64 
   407c4:	push   r13
   407c6:	push   r12
   407c8:	mov    r12d,edi
   407cb:	push   rbp
   407cc:	push   rbx
   407cd:	sub    rsp,0x8
   407d1:	cmp    edi,0x2
   407d4:	jbe    407e8 <fd_safer_flag+0x28>
   407d6:	add    rsp,0x8
   407da:	mov    eax,r12d
   407dd:	pop    rbx
   407de:	pop    rbp
   407df:	pop    r12
   407e1:	pop    r13
   407e3:	ret    
   407e4:	nop    DWORD PTR [rax+0x0]
   407e8:	call   40820 <dup_safer_flag>
   407ed:	mov    ebp,eax
   407ef:	call   104b0 <__errno_location@plt>
   407f4:	mov    edi,r12d
   407f7:	mov    r12d,ebp
   407fa:	mov    r13d,DWORD PTR [rax]
   407fd:	mov    rbx,rax
   40800:	call   12740 <close@plt>
   40805:	mov    eax,r12d
   40808:	mov    DWORD PTR [rbx],r13d
   4080b:	add    rsp,0x8
   4080f:	pop    rbx
   40810:	pop    rbp
   40811:	pop    r12
   40813:	pop    r13
   40815:	ret    
   40816:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000040820 <dup_safer_flag>:
   40820:	endbr64 
   40824:	and    esi,0x80000
   4082a:	mov    eax,0x406
   4082f:	mov    edx,0x3
   40834:	cmovne esi,eax
   40837:	xor    eax,eax
   40839:	jmp    40550 <rpl_fcntl>
   4083e:	xchg   ax,ax

0000000000040840 <rpl_fflush>:
   40840:	endbr64 
   40844:	push   rbp
   40845:	mov    rbp,rdi
   40848:	test   rdi,rdi
   4084b:	je     40856 <rpl_fflush+0x16>
   4084d:	call   11230 <__freading@plt>
   40852:	test   eax,eax
   40854:	jne    40860 <rpl_fflush+0x20>
   40856:	mov    rdi,rbp
   40859:	pop    rbp
   4085a:	jmp    118a0 <fflush@plt>
   4085f:	nop
   40860:	test   DWORD PTR [rbp+0x0],0x100
   40867:	je     40856 <rpl_fflush+0x16>
   40869:	mov    rdi,rbp
   4086c:	mov    edx,0x1
   40871:	xor    esi,esi
   40873:	call   40e20 <rpl_fseeko>
   40878:	mov    rdi,rbp
   4087b:	pop    rbp
   4087c:	jmp    118a0 <fflush@plt>
   40881:	cs nop WORD PTR [rax+rax*1+0x0]
   4088b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000040890 <record_file>:
   40890:	endbr64 
   40894:	test   rdi,rdi
   40897:	je     40910 <record_file+0x80>
   40899:	push   r13
   4089b:	mov    r13,rsi
   4089e:	push   r12
   408a0:	mov    r12,rdi
   408a3:	mov    edi,0x18
   408a8:	push   rbp
   408a9:	push   rbx
   408aa:	mov    rbx,rdx
   408ad:	sub    rsp,0x8
   408b1:	call   47ed0 <xmalloc>
   408b6:	mov    rdi,r13
   408b9:	mov    rbp,rax
   408bc:	call   48410 <xstrdup>
   408c1:	mov    rsi,rbp
   408c4:	mov    rdi,r12
   408c7:	mov    QWORD PTR [rbp+0x0],rax
   408cb:	mov    rax,QWORD PTR [rbx+0x8]
   408cf:	mov    QWORD PTR [rbp+0x8],rax
   408d3:	mov    rax,QWORD PTR [rbx]
   408d6:	mov    QWORD PTR [rbp+0x10],rax
   408da:	call   442d0 <hash_insert>
   408df:	test   rax,rax
   408e2:	je     40911 <record_file+0x81>
   408e4:	cmp    rbp,rax
   408e7:	je     40900 <record_file+0x70>
   408e9:	add    rsp,0x8
   408ed:	mov    rdi,rbp
   408f0:	pop    rbx
   408f1:	pop    rbp
   408f2:	pop    r12
   408f4:	pop    r13
   408f6:	jmp    44580 <triple_free>
   408fb:	nop    DWORD PTR [rax+rax*1+0x0]
   40900:	add    rsp,0x8
   40904:	pop    rbx
   40905:	pop    rbp
   40906:	pop    r12
   40908:	pop    r13
   4090a:	ret    
   4090b:	nop    DWORD PTR [rax+rax*1+0x0]
   40910:	ret    
   40911:	call   48450 <xalloc_die>
   40916:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000040920 <seen_file>:
   40920:	endbr64 
   40924:	sub    rsp,0x28
   40928:	mov    rax,QWORD PTR fs:0x28
   40931:	mov    QWORD PTR [rsp+0x18],rax
   40936:	xor    eax,eax
   40938:	test   rdi,rdi
   4093b:	je     40960 <seen_file+0x40>
   4093d:	mov    rax,QWORD PTR [rdx+0x8]
   40941:	mov    QWORD PTR [rsp],rsi
   40945:	mov    rsi,rsp
   40948:	mov    QWORD PTR [rsp+0x8],rax
   4094d:	mov    rax,QWORD PTR [rdx]
   40950:	mov    QWORD PTR [rsp+0x10],rax
   40955:	call   439f0 <hash_lookup>
   4095a:	test   rax,rax
   4095d:	setne  al
   40960:	mov    rdx,QWORD PTR [rsp+0x18]
   40965:	sub    rdx,QWORD PTR fs:0x28
   4096e:	jne    40975 <seen_file+0x55>
   40970:	add    rsp,0x28
   40974:	ret    
   40975:	call   11760 <__stack_chk_fail@plt>
   4097a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000040980 <mfile_name_concat>:
   40980:	endbr64 
   40984:	push   r15
   40986:	push   r14
   40988:	push   r13
   4098a:	push   r12
   4098c:	mov    r12,rsi
   4098f:	push   rbp
   40990:	mov    rbp,rdi
   40993:	push   rbx
   40994:	sub    rsp,0x18
   40998:	mov    QWORD PTR [rsp+0x8],rdx
   4099d:	call   33a10 <last_component>
   409a2:	mov    r13,rax
   409a5:	mov    rdi,rax
   409a8:	call   33a70 <base_len>
   409ad:	sub    r13,rbp
   409b0:	mov    rdi,r12
   409b3:	lea    r14,[r13+rax*1+0x0]
   409b8:	mov    rbx,rax
   409bb:	call   10ab0 <strlen@plt>
   409c0:	mov    r13,rax
   409c3:	test   rbx,rbx
   409c6:	je     40a50 <mfile_name_concat+0xd0>
   409cc:	cmp    BYTE PTR [rbp+r14*1-0x1],0x2f
   409d2:	je     40a70 <mfile_name_concat+0xf0>
   409d8:	xor    ebx,ebx
   409da:	mov    r15d,0x0
   409e0:	cmp    BYTE PTR [r12],0x2f
   409e5:	mov    eax,0x2f
   409ea:	cmove  eax,r15d
   409ee:	setne  bl
   409f1:	mov    BYTE PTR [rsp+0x7],al
   409f5:	lea    rdi,[r14+r13*1+0x1]
   409fa:	add    rdi,rbx
   409fd:	call   11af0 <malloc@plt>
   40a02:	mov    r15,rax
   40a05:	test   rax,rax
   40a08:	je     40a3e <mfile_name_concat+0xbe>
   40a0a:	mov    rdi,rax
   40a0d:	mov    rdx,r14
   40a10:	mov    rsi,rbp
   40a13:	call   11940 <mempcpy@plt>
   40a18:	movzx  ecx,BYTE PTR [rsp+0x7]
   40a1d:	lea    rdi,[rax+rbx*1]
   40a21:	mov    BYTE PTR [rax],cl
   40a23:	mov    rax,QWORD PTR [rsp+0x8]
   40a28:	test   rax,rax
   40a2b:	je     40a30 <mfile_name_concat+0xb0>
   40a2d:	mov    QWORD PTR [rax],rdi
   40a30:	mov    rdx,r13
   40a33:	mov    rsi,r12
   40a36:	call   11940 <mempcpy@plt>
   40a3b:	mov    BYTE PTR [rax],0x0
   40a3e:	add    rsp,0x18
   40a42:	mov    rax,r15
   40a45:	pop    rbx
   40a46:	pop    rbp
   40a47:	pop    r12
   40a49:	pop    r13
   40a4b:	pop    r14
   40a4d:	pop    r15
   40a4f:	ret    
   40a50:	xor    ebx,ebx
   40a52:	mov    r15d,0x0
   40a58:	cmp    BYTE PTR [r12],0x2f
   40a5d:	mov    eax,0x2e
   40a62:	cmovne eax,r15d
   40a66:	sete   bl
   40a69:	mov    BYTE PTR [rsp+0x7],al
   40a6d:	jmp    409f5 <mfile_name_concat+0x75>
   40a6f:	nop
   40a70:	mov    BYTE PTR [rsp+0x7],0x0
   40a75:	xor    ebx,ebx
   40a77:	jmp    409f5 <mfile_name_concat+0x75>
   40a7c:	nop    DWORD PTR [rax+0x0]

0000000000040a80 <find_in_given_path>:
   40a80:	endbr64 
   40a84:	push   r15
   40a86:	push   r14
   40a88:	push   r13
   40a8a:	mov    r13,rdi
   40a8d:	mov    rdi,rsi
   40a90:	push   r12
   40a92:	push   rbp
   40a93:	push   rbx
   40a94:	sub    rsp,0xc8
   40a9b:	movzx  esi,BYTE PTR [r13+0x0]
   40aa0:	mov    QWORD PTR [rsp],rdx
   40aa4:	mov    rax,QWORD PTR fs:0x28
   40aad:	mov    QWORD PTR [rsp+0xb8],rax
   40ab5:	xor    eax,eax
   40ab7:	test   sil,sil
   40aba:	je     40b6b <find_in_given_path+0xeb>
   40ac0:	mov    rdx,r13
   40ac3:	mov    eax,esi
   40ac5:	jmp    40ae0 <find_in_given_path+0x60>
   40ac7:	nop    WORD PTR [rax+rax*1+0x0]
   40ad0:	movzx  eax,BYTE PTR [rdx+0x1]
   40ad4:	add    rdx,0x1
   40ad8:	test   al,al
   40ada:	je     40b6b <find_in_given_path+0xeb>
   40ae0:	cmp    al,0x2f
   40ae2:	jne    40ad0 <find_in_given_path+0x50>
   40ae4:	mov    r15,r13
   40ae7:	test   cl,cl
   40ae9:	jne    40b3f <find_in_given_path+0xbf>
   40aeb:	cmp    QWORD PTR [rsp],0x0
   40af0:	je     40d03 <find_in_given_path+0x283>
   40af6:	lea    rdx,[rip+0xbd6d]        # 4c86a <maybe+0x5ca>
   40afd:	cmp    sil,0x2f
   40b01:	je     40d03 <find_in_given_path+0x283>
   40b07:	mov    rdi,QWORD PTR [rsp]
   40b0b:	mov    rsi,r13
   40b0e:	call   35510 <concatenated_filename>
   40b13:	mov    r15,rax
   40b16:	test   rax,rax
   40b19:	je     40cfb <find_in_given_path+0x27b>
   40b1f:	mov    esi,0x1
   40b24:	mov    rdi,rax
   40b27:	call   11f60 <eaccess@plt>
   40b2c:	test   eax,eax
   40b2e:	je     40d79 <find_in_given_path+0x2f9>
   40b34:	mov    rdi,r15
   40b37:	xor    r15d,r15d
   40b3a:	call   10430 <free@plt>
   40b3f:	mov    rax,QWORD PTR [rsp+0xb8]
   40b47:	sub    rax,QWORD PTR fs:0x28
   40b50:	jne    40dd1 <find_in_given_path+0x351>
   40b56:	add    rsp,0xc8
   40b5d:	mov    rax,r15
   40b60:	pop    rbx
   40b61:	pop    rbp
   40b62:	pop    r12
   40b64:	pop    r13
   40b66:	pop    r14
   40b68:	pop    r15
   40b6a:	ret    
   40b6b:	test   rdi,rdi
   40b6e:	lea    rax,[rip+0xbcf5]        # 4c86a <maybe+0x5ca>
   40b75:	cmove  rdi,rax
   40b79:	call   124a0 <strdup@plt>
   40b7e:	mov    QWORD PTR [rsp+0x18],rax
   40b83:	test   rax,rax
   40b86:	je     40cfb <find_in_given_path+0x27b>
   40b8c:	mov    rdi,QWORD PTR [rsp+0x18]
   40b91:	lea    rax,[rsp+0x20]
   40b96:	mov    DWORD PTR [rsp+0xc],0x2
   40b9e:	mov    QWORD PTR [rsp+0x10],rax
   40ba3:	movzx  r12d,BYTE PTR [rdi]
   40ba7:	test   r12b,r12b
   40baa:	je     40c5d <find_in_given_path+0x1dd>
   40bb0:	cmp    r12b,0x3a
   40bb4:	je     40c5d <find_in_given_path+0x1dd>
   40bba:	mov    r14,rdi
   40bbd:	nop    DWORD PTR [rax]
   40bc0:	movzx  r12d,BYTE PTR [r14+0x1]
   40bc5:	add    r14,0x1
   40bc9:	test   r12b,r12b
   40bcc:	je     40bd4 <find_in_given_path+0x154>
   40bce:	cmp    r12b,0x3a
   40bd2:	jne    40bc0 <find_in_given_path+0x140>
   40bd4:	mov    BYTE PTR [r14],0x0
   40bd8:	cmp    rdi,r14
   40bdb:	je     40c63 <find_in_given_path+0x1e3>
   40be1:	xor    ebp,ebp
   40be3:	cmp    QWORD PTR [rsp],0x0
   40be8:	je     40bf3 <find_in_given_path+0x173>
   40bea:	cmp    BYTE PTR [rdi],0x2f
   40bed:	jne    40c73 <find_in_given_path+0x1f3>
   40bf3:	lea    rdx,[rip+0xbc70]        # 4c86a <maybe+0x5ca>
   40bfa:	mov    rsi,r13
   40bfd:	call   35510 <concatenated_filename>
   40c02:	mov    r15,rax
   40c05:	test   rax,rax
   40c08:	je     40cd5 <find_in_given_path+0x255>
   40c0e:	mov    esi,0x1
   40c13:	mov    rdi,rax
   40c16:	call   11f60 <eaccess@plt>
   40c1b:	test   eax,eax
   40c1d:	je     40c98 <find_in_given_path+0x218>
   40c1f:	call   104b0 <__errno_location@plt>
   40c24:	mov    rbx,rax
   40c27:	mov    eax,DWORD PTR [rax]
   40c29:	cmp    eax,0x2
   40c2c:	je     40c32 <find_in_given_path+0x1b2>
   40c2e:	mov    DWORD PTR [rsp+0xc],eax
   40c32:	mov    rdi,r15
   40c35:	call   10430 <free@plt>
   40c3a:	mov    rdi,rbp
   40c3d:	call   10430 <free@plt>
   40c42:	test   r12b,r12b
   40c45:	je     40ceb <find_in_given_path+0x26b>
   40c4b:	movzx  r12d,BYTE PTR [r14+0x1]
   40c50:	lea    rdi,[r14+0x1]
   40c54:	test   r12b,r12b
   40c57:	jne    40bb0 <find_in_given_path+0x130>
   40c5d:	mov    BYTE PTR [rdi],0x0
   40c60:	mov    r14,rdi
   40c63:	xor    ebp,ebp
   40c65:	cmp    QWORD PTR [rsp],0x0
   40c6a:	lea    rdi,[rip+0xc4d3]        # 4d144 <__func__.4+0x24>
   40c71:	je     40bf3 <find_in_given_path+0x173>
   40c73:	mov    rsi,rdi
   40c76:	mov    rdi,QWORD PTR [rsp]
   40c7a:	xor    edx,edx
   40c7c:	call   35510 <concatenated_filename>
   40c81:	mov    rbp,rax
   40c84:	test   rax,rax
   40c87:	je     40dd6 <find_in_given_path+0x356>
   40c8d:	mov    rdi,rax
   40c90:	jmp    40bf3 <find_in_given_path+0x173>
   40c95:	nop    DWORD PTR [rax]
   40c98:	mov    rsi,QWORD PTR [rsp+0x10]
   40c9d:	mov    rdi,r15
   40ca0:	call   11420 <stat@plt>
   40ca5:	test   eax,eax
   40ca7:	js     40c1f <find_in_given_path+0x19f>
   40cad:	mov    eax,DWORD PTR [rsp+0x38]
   40cb1:	and    eax,0xf000
   40cb6:	cmp    eax,0x4000
   40cbb:	jne    40d16 <find_in_given_path+0x296>
   40cbd:	call   104b0 <__errno_location@plt>
   40cc2:	mov    DWORD PTR [rax],0xd
   40cc8:	mov    rbx,rax
   40ccb:	mov    eax,0xd
   40cd0:	jmp    40c2e <find_in_given_path+0x1ae>
   40cd5:	call   104b0 <__errno_location@plt>
   40cda:	mov    rdi,rbp
   40cdd:	mov    rbx,rax
   40ce0:	mov    eax,DWORD PTR [rax]
   40ce2:	mov    DWORD PTR [rsp+0xc],eax
   40ce6:	call   10430 <free@plt>
   40ceb:	mov    rdi,QWORD PTR [rsp+0x18]
   40cf0:	call   10430 <free@plt>
   40cf5:	mov    eax,DWORD PTR [rsp+0xc]
   40cf9:	mov    DWORD PTR [rbx],eax
   40cfb:	xor    r15d,r15d
   40cfe:	jmp    40b3f <find_in_given_path+0xbf>
   40d03:	lea    rax,[rip+0xbb60]        # 4c86a <maybe+0x5ca>
   40d0a:	mov    QWORD PTR [rsp],rax
   40d0e:	mov    rdx,rax
   40d11:	jmp    40b07 <find_in_given_path+0x87>
   40d16:	mov    rsi,r13
   40d19:	mov    rdi,r15
   40d1c:	call   11c60 <strcmp@plt>
   40d21:	test   eax,eax
   40d23:	jne    40d62 <find_in_given_path+0x2e2>
   40d25:	mov    rdi,r15
   40d28:	call   10430 <free@plt>
   40d2d:	mov    rdi,r13
   40d30:	call   10ab0 <strlen@plt>
   40d35:	lea    rdi,[rax+0x3]
   40d39:	mov    rbx,rax
   40d3c:	call   11af0 <malloc@plt>
   40d41:	mov    r15,rax
   40d44:	test   rax,rax
   40d47:	je     40cd5 <find_in_given_path+0x255>
   40d49:	mov    eax,0x2f2e
   40d4e:	lea    rdi,[r15+0x2]
   40d52:	lea    rdx,[rbx+0x1]
   40d56:	mov    rsi,r13
   40d59:	mov    WORD PTR [r15],ax
   40d5d:	call   11220 <memcpy@plt>
   40d62:	mov    rdi,rbp
   40d65:	call   10430 <free@plt>
   40d6a:	mov    rdi,QWORD PTR [rsp+0x18]
   40d6f:	call   10430 <free@plt>
   40d74:	jmp    40b3f <find_in_given_path+0xbf>
   40d79:	lea    rsi,[rsp+0x20]
   40d7e:	mov    rdi,r15
   40d81:	call   11420 <stat@plt>
   40d86:	test   eax,eax
   40d88:	js     40b34 <find_in_given_path+0xb4>
   40d8e:	mov    eax,DWORD PTR [rsp+0x38]
   40d92:	and    eax,0xf000
   40d97:	cmp    eax,0x4000
   40d9c:	jne    40dae <find_in_given_path+0x32e>
   40d9e:	call   104b0 <__errno_location@plt>
   40da3:	mov    DWORD PTR [rax],0xd
   40da9:	jmp    40b34 <find_in_given_path+0xb4>
   40dae:	mov    rsi,r13
   40db1:	mov    rdi,r15
   40db4:	call   11c60 <strcmp@plt>
   40db9:	test   eax,eax
   40dbb:	jne    40b3f <find_in_given_path+0xbf>
   40dc1:	mov    rdi,r15
   40dc4:	mov    r15,r13
   40dc7:	call   10430 <free@plt>
   40dcc:	jmp    40b3f <find_in_given_path+0xbf>
   40dd1:	call   11760 <__stack_chk_fail@plt>
   40dd6:	call   104b0 <__errno_location@plt>
   40ddb:	mov    rbx,rax
   40dde:	mov    eax,DWORD PTR [rax]
   40de0:	mov    DWORD PTR [rsp+0xc],eax
   40de4:	jmp    40ceb <find_in_given_path+0x26b>
   40de9:	nop    DWORD PTR [rax+0x0]

0000000000040df0 <fpurge>:
   40df0:	endbr64 
   40df4:	sub    rsp,0x8
   40df8:	call   11e00 <__fpurge@plt>
   40dfd:	xor    eax,eax
   40dff:	add    rsp,0x8
   40e03:	ret    
   40e04:	cs nop WORD PTR [rax+rax*1+0x0]
   40e0e:	xchg   ax,ax

0000000000040e10 <rpl_fseek>:
   40e10:	endbr64 
   40e14:	jmp    40e20 <rpl_fseeko>
   40e19:	nop    DWORD PTR [rax+0x0]

0000000000040e20 <rpl_fseeko>:
   40e20:	endbr64 
   40e24:	push   rbp
   40e25:	mov    rbp,rdi
   40e28:	sub    rsp,0x10
   40e2c:	mov    rax,QWORD PTR [rdi+0x8]
   40e30:	cmp    QWORD PTR [rdi+0x10],rax
   40e34:	je     40e48 <rpl_fseeko+0x28>
   40e36:	add    rsp,0x10
   40e3a:	mov    rdi,rbp
   40e3d:	pop    rbp
   40e3e:	jmp    10da0 <fseeko@plt>
   40e43:	nop    DWORD PTR [rax+rax*1+0x0]
   40e48:	mov    rax,QWORD PTR [rdi+0x20]
   40e4c:	cmp    QWORD PTR [rdi+0x28],rax
   40e50:	jne    40e36 <rpl_fseeko+0x16>
   40e52:	cmp    QWORD PTR [rdi+0x48],0x0
   40e57:	jne    40e36 <rpl_fseeko+0x16>
   40e59:	mov    DWORD PTR [rsp+0xc],edx
   40e5d:	mov    QWORD PTR [rsp],rsi
   40e61:	call   11650 <fileno@plt>
   40e66:	mov    edx,DWORD PTR [rsp+0xc]
   40e6a:	mov    rsi,QWORD PTR [rsp]
   40e6e:	mov    edi,eax
   40e70:	call   12540 <lseek@plt>
   40e75:	cmp    rax,0xffffffffffffffff
   40e79:	je     40e8e <rpl_fseeko+0x6e>
   40e7b:	and    DWORD PTR [rbp+0x0],0xffffffef
   40e7f:	mov    QWORD PTR [rbp+0x90],rax
   40e86:	xor    eax,eax
   40e88:	add    rsp,0x10
   40e8c:	pop    rbp
   40e8d:	ret    
   40e8e:	or     eax,0xffffffff
   40e91:	jmp    40e88 <rpl_fseeko+0x68>
   40e93:	cs nop WORD PTR [rax+rax*1+0x0]
   40e9d:	nop    DWORD PTR [rax]

0000000000040ea0 <getprogname>:
   40ea0:	endbr64 
   40ea4:	mov    rax,QWORD PTR [rip+0x3510d]        # 75fb8 <program_invocation_short_name@GLIBC_2.2.5>
   40eab:	mov    rax,QWORD PTR [rax]
   40eae:	ret    
   40eaf:	nop

0000000000040eb0 <gettime>:
   40eb0:	endbr64 
   40eb4:	mov    rsi,rdi
   40eb7:	xor    edi,edi
   40eb9:	jmp    11460 <clock_gettime@plt>
   40ebe:	xchg   ax,ax

0000000000040ec0 <current_timespec>:
   40ec0:	endbr64 
   40ec4:	sub    rsp,0x28
   40ec8:	xor    edi,edi
   40eca:	mov    rax,QWORD PTR fs:0x28
   40ed3:	mov    QWORD PTR [rsp+0x18],rax
   40ed8:	xor    eax,eax
   40eda:	mov    rsi,rsp
   40edd:	call   11460 <clock_gettime@plt>
   40ee2:	mov    rax,QWORD PTR [rsp]
   40ee6:	mov    rdx,QWORD PTR [rsp+0x8]
   40eeb:	mov    rcx,QWORD PTR [rsp+0x18]
   40ef0:	sub    rcx,QWORD PTR fs:0x28
   40ef9:	jne    40f00 <current_timespec+0x40>
   40efb:	add    rsp,0x28
   40eff:	ret    
   40f00:	call   11760 <__stack_chk_fail@plt>
   40f05:	cs nop WORD PTR [rax+rax*1+0x0]
   40f0f:	nop

0000000000040f10 <gl_dynarray_emplace_enlarge>:
   40f10:	endbr64 
   40f14:	push   r13
   40f16:	mov    r13,rsi
   40f19:	push   r12
   40f1b:	push   rbp
   40f1c:	mov    rbp,rdi
   40f1f:	push   rbx
   40f20:	mov    rbx,rdx
   40f23:	sub    rsp,0x8
   40f27:	mov    rax,QWORD PTR [rdi+0x8]
   40f2b:	test   rax,rax
   40f2e:	jne    40fe0 <gl_dynarray_emplace_enlarge+0xd0>
   40f34:	cmp    rdx,0x3
   40f38:	ja     40f88 <gl_dynarray_emplace_enlarge+0x78>
   40f3a:	mov    r12d,0x10
   40f40:	mov    rax,r12
   40f43:	mul    rbx
   40f46:	jo     41010 <gl_dynarray_emplace_enlarge+0x100>
   40f4c:	mov    rdi,QWORD PTR [rbp+0x10]
   40f50:	mov    rsi,rax
   40f53:	cmp    rdi,r13
   40f56:	je     40fb0 <gl_dynarray_emplace_enlarge+0xa0>
   40f58:	call   12120 <realloc@plt>
   40f5d:	mov    rcx,rax
   40f60:	test   rax,rax
   40f63:	je     41010 <gl_dynarray_emplace_enlarge+0x100>
   40f69:	mov    QWORD PTR [rbp+0x8],r12
   40f6d:	mov    eax,0x1
   40f72:	mov    QWORD PTR [rbp+0x10],rcx
   40f76:	add    rsp,0x8
   40f7a:	pop    rbx
   40f7b:	pop    rbp
   40f7c:	pop    r12
   40f7e:	pop    r13
   40f80:	ret    
   40f81:	nop    DWORD PTR [rax+0x0]
   40f88:	mov    r12d,0x4
   40f8e:	cmp    rdx,0x7
   40f92:	ja     40f40 <gl_dynarray_emplace_enlarge+0x30>
   40f94:	mov    rdi,QWORD PTR [rbp+0x10]
   40f98:	lea    rsi,[rdx*8+0x0]
   40fa0:	mov    r12d,0x8
   40fa6:	cmp    rdi,r13
   40fa9:	jne    40f58 <gl_dynarray_emplace_enlarge+0x48>
   40fab:	nop    DWORD PTR [rax+rax*1+0x0]
   40fb0:	mov    rdi,rsi
   40fb3:	call   11af0 <malloc@plt>
   40fb8:	mov    rcx,rax
   40fbb:	test   rax,rax
   40fbe:	je     41010 <gl_dynarray_emplace_enlarge+0x100>
   40fc0:	test   r13,r13
   40fc3:	je     40f69 <gl_dynarray_emplace_enlarge+0x59>
   40fc5:	imul   rbx,QWORD PTR [rbp+0x0]
   40fca:	mov    rsi,r13
   40fcd:	mov    rdi,rax
   40fd0:	mov    rdx,rbx
   40fd3:	call   11220 <memcpy@plt>
   40fd8:	mov    rcx,rax
   40fdb:	jmp    40f69 <gl_dynarray_emplace_enlarge+0x59>
   40fdd:	nop    DWORD PTR [rax]
   40fe0:	mov    rdx,rax
   40fe3:	shr    rdx,1
   40fe6:	lea    r12,[rax+rdx*1+0x1]
   40feb:	cmp    rax,r12
   40fee:	jb     40f40 <gl_dynarray_emplace_enlarge+0x30>
   40ff4:	call   104b0 <__errno_location@plt>
   40ff9:	mov    DWORD PTR [rax],0xc
   40fff:	add    rsp,0x8
   41003:	xor    eax,eax
   41005:	pop    rbx
   41006:	pop    rbp
   41007:	pop    r12
   41009:	pop    r13
   4100b:	ret    
   4100c:	nop    DWORD PTR [rax+0x0]
   41010:	add    rsp,0x8
   41014:	xor    eax,eax
   41016:	pop    rbx
   41017:	pop    rbp
   41018:	pop    r12
   4101a:	pop    r13
   4101c:	ret    
   4101d:	nop    DWORD PTR [rax]

0000000000041020 <gl_dynarray_finalize>:
   41020:	endbr64 
   41024:	cmp    QWORD PTR [rdi+0x8],0xffffffffffffffff
   41029:	je     410f0 <gl_dynarray_finalize+0xd0>
   4102f:	push   r15
   41031:	mov    r15,rsi
   41034:	push   r14
   41036:	push   r13
   41038:	push   r12
   4103a:	push   rbp
   4103b:	mov    rbp,rcx
   4103e:	push   rbx
   4103f:	mov    rbx,rdi
   41042:	sub    rsp,0x8
   41046:	mov    r13,QWORD PTR [rdi]
   41049:	test   r13,r13
   4104c:	jne    41080 <gl_dynarray_finalize+0x60>
   4104e:	mov    rdi,QWORD PTR [rdi+0x10]
   41052:	cmp    rdi,rsi
   41055:	je     4105c <gl_dynarray_finalize+0x3c>
   41057:	call   10430 <free@plt>
   4105c:	mov    QWORD PTR [rbp+0x0],0x0
   41064:	mov    eax,0x1
   41069:	mov    QWORD PTR [rbp+0x8],0x0
   41071:	add    rsp,0x8
   41075:	pop    rbx
   41076:	pop    rbp
   41077:	pop    r12
   41079:	pop    r13
   4107b:	pop    r14
   4107d:	pop    r15
   4107f:	ret    
   41080:	imul   rdx,r13
   41084:	mov    rdi,rdx
   41087:	mov    r12,rdx
   4108a:	call   11af0 <malloc@plt>
   4108f:	mov    r14,rax
   41092:	test   rax,rax
   41095:	je     410d7 <gl_dynarray_finalize+0xb7>
   41097:	mov    rbx,QWORD PTR [rbx+0x10]
   4109b:	test   rbx,rbx
   4109e:	je     410ae <gl_dynarray_finalize+0x8e>
   410a0:	mov    rdx,r12
   410a3:	mov    rsi,rbx
   410a6:	mov    rdi,rax
   410a9:	call   11220 <memcpy@plt>
   410ae:	cmp    rbx,r15
   410b1:	je     410bb <gl_dynarray_finalize+0x9b>
   410b3:	mov    rdi,rbx
   410b6:	call   10430 <free@plt>
   410bb:	mov    QWORD PTR [rbp+0x0],r14
   410bf:	mov    eax,0x1
   410c4:	mov    QWORD PTR [rbp+0x8],r13
   410c8:	add    rsp,0x8
   410cc:	pop    rbx
   410cd:	pop    rbp
   410ce:	pop    r12
   410d0:	pop    r13
   410d2:	pop    r14
   410d4:	pop    r15
   410d6:	ret    
   410d7:	add    rsp,0x8
   410db:	xor    eax,eax
   410dd:	pop    rbx
   410de:	pop    rbp
   410df:	pop    r12
   410e1:	pop    r13
   410e3:	pop    r14
   410e5:	pop    r15
   410e7:	ret    
   410e8:	nop    DWORD PTR [rax+rax*1+0x0]
   410f0:	xor    eax,eax
   410f2:	ret    
   410f3:	cs nop WORD PTR [rax+rax*1+0x0]
   410fd:	nop    DWORD PTR [rax]

0000000000041100 <gl_dynarray_resize>:
   41100:	endbr64 
   41104:	push   r13
   41106:	push   r12
   41108:	push   rbp
   41109:	mov    rbp,rdi
   4110c:	push   rbx
   4110d:	mov    rbx,rsi
   41110:	sub    rsp,0x8
   41114:	cmp    QWORD PTR [rdi+0x8],rsi
   41118:	jae    4114c <gl_dynarray_resize+0x4c>
   4111a:	mov    rax,rbx
   4111d:	mov    rsi,rdx
   41120:	mov    r12,rcx
   41123:	mul    rcx
   41126:	jo     41194 <gl_dynarray_resize+0x94>
   41128:	mov    r13,QWORD PTR [rdi+0x10]
   4112c:	cmp    r13,rsi
   4112f:	je     41160 <gl_dynarray_resize+0x60>
   41131:	mov    rsi,rax
   41134:	mov    rdi,r13
   41137:	call   12120 <realloc@plt>
   4113c:	mov    rcx,rax
   4113f:	test   rax,rax
   41142:	je     41190 <gl_dynarray_resize+0x90>
   41144:	mov    QWORD PTR [rbp+0x10],rcx
   41148:	mov    QWORD PTR [rbp+0x8],rbx
   4114c:	mov    QWORD PTR [rbp+0x0],rbx
   41150:	mov    eax,0x1
   41155:	add    rsp,0x8
   41159:	pop    rbx
   4115a:	pop    rbp
   4115b:	pop    r12
   4115d:	pop    r13
   4115f:	ret    
   41160:	mov    rdi,rax
   41163:	call   11af0 <malloc@plt>
   41168:	mov    rcx,rax
   4116b:	test   rax,rax
   4116e:	je     41190 <gl_dynarray_resize+0x90>
   41170:	test   r13,r13
   41173:	je     41144 <gl_dynarray_resize+0x44>
   41175:	mov    rdx,QWORD PTR [rbp+0x0]
   41179:	mov    rsi,r13
   4117c:	mov    rdi,rax
   4117f:	imul   rdx,r12
   41183:	call   11220 <memcpy@plt>
   41188:	mov    rcx,rax
   4118b:	jmp    41144 <gl_dynarray_resize+0x44>
   4118d:	nop    DWORD PTR [rax]
   41190:	xor    eax,eax
   41192:	jmp    41155 <gl_dynarray_resize+0x55>
   41194:	call   104b0 <__errno_location@plt>
   41199:	mov    DWORD PTR [rax],0xc
   4119f:	xor    eax,eax
   411a1:	jmp    41155 <gl_dynarray_resize+0x55>
   411a3:	cs nop WORD PTR [rax+rax*1+0x0]
   411ad:	nop    DWORD PTR [rax]

00000000000411b0 <gl_dynarray_resize_clear>:
   411b0:	endbr64 
   411b4:	push   r14
   411b6:	mov    r14,rcx
   411b9:	push   r13
   411bb:	push   r12
   411bd:	push   rbp
   411be:	mov    rbp,rdi
   411c1:	push   rbx
   411c2:	mov    rbx,rsi
   411c5:	mov    r13,QWORD PTR [rdi]
   411c8:	call   41100 <gl_dynarray_resize>
   411cd:	mov    r12d,eax
   411d0:	test   al,al
   411d2:	je     411f0 <gl_dynarray_resize_clear+0x40>
   411d4:	sub    rbx,r13
   411d7:	mov    rdi,r13
   411da:	xor    esi,esi
   411dc:	mov    rdx,rbx
   411df:	imul   rdi,r14
   411e3:	add    rdi,QWORD PTR [rbp+0x10]
   411e7:	imul   rdx,r14
   411eb:	call   10ca0 <memset@plt>
   411f0:	pop    rbx
   411f1:	mov    eax,r12d
   411f4:	pop    rbp
   411f5:	pop    r12
   411f7:	pop    r13
   411f9:	pop    r14
   411fb:	ret    
   411fc:	nop    DWORD PTR [rax+0x0]

0000000000041200 <gl_scratch_buffer_grow>:
   41200:	endbr64 
   41204:	push   r12
   41206:	push   rbp
   41207:	push   rbx
   41208:	mov    rbx,rdi
   4120b:	mov    rax,QWORD PTR [rdi+0x8]
   4120f:	mov    rdi,QWORD PTR [rdi]
   41212:	lea    r12,[rbx+0x10]
   41216:	lea    rbp,[rax+rax*1]
   4121a:	cmp    rdi,r12
   4121d:	je     41228 <gl_scratch_buffer_grow+0x28>
   4121f:	call   10430 <free@plt>
   41224:	mov    rax,QWORD PTR [rbx+0x8]
   41228:	cmp    rax,rbp
   4122b:	ja     41250 <gl_scratch_buffer_grow+0x50>
   4122d:	mov    rdi,rbp
   41230:	call   11af0 <malloc@plt>
   41235:	test   rax,rax
   41238:	je     4125b <gl_scratch_buffer_grow+0x5b>
   4123a:	mov    r8d,0x1
   41240:	mov    QWORD PTR [rbx],rax
   41243:	mov    QWORD PTR [rbx+0x8],rbp
   41247:	mov    eax,r8d
   4124a:	pop    rbx
   4124b:	pop    rbp
   4124c:	pop    r12
   4124e:	ret    
   4124f:	nop
   41250:	call   104b0 <__errno_location@plt>
   41255:	mov    DWORD PTR [rax],0xc
   4125b:	mov    rax,r12
   4125e:	mov    ebp,0x400
   41263:	xor    r8d,r8d
   41266:	mov    QWORD PTR [rbx],rax
   41269:	mov    eax,r8d
   4126c:	mov    QWORD PTR [rbx+0x8],rbp
   41270:	pop    rbx
   41271:	pop    rbp
   41272:	pop    r12
   41274:	ret    
   41275:	cs nop WORD PTR [rax+rax*1+0x0]
   4127f:	nop

0000000000041280 <gl_scratch_buffer_grow_preserve>:
   41280:	endbr64 
   41284:	push   r14
   41286:	lea    r14,[rdi+0x10]
   4128a:	push   r13
   4128c:	push   r12
   4128e:	push   rbp
   4128f:	push   rbx
   41290:	mov    r13,QWORD PTR [rdi+0x8]
   41294:	mov    rbx,rdi
   41297:	mov    r12,QWORD PTR [rdi]
   4129a:	lea    rbp,[r13+r13*1+0x0]
   4129f:	cmp    r12,r14
   412a2:	je     412d8 <gl_scratch_buffer_grow_preserve+0x58>
   412a4:	cmp    r13,rbp
   412a7:	ja     41300 <gl_scratch_buffer_grow_preserve+0x80>
   412a9:	mov    rsi,rbp
   412ac:	mov    rdi,r12
   412af:	call   12120 <realloc@plt>
   412b4:	mov    rcx,rax
   412b7:	test   rax,rax
   412ba:	je     41328 <gl_scratch_buffer_grow_preserve+0xa8>
   412bc:	mov    QWORD PTR [rbx],rcx
   412bf:	mov    eax,0x1
   412c4:	mov    QWORD PTR [rbx+0x8],rbp
   412c8:	pop    rbx
   412c9:	pop    rbp
   412ca:	pop    r12
   412cc:	pop    r13
   412ce:	pop    r14
   412d0:	ret    
   412d1:	nop    DWORD PTR [rax+0x0]
   412d8:	mov    rdi,rbp
   412db:	call   11af0 <malloc@plt>
   412e0:	test   rax,rax
   412e3:	je     4132d <gl_scratch_buffer_grow_preserve+0xad>
   412e5:	mov    rdx,r13
   412e8:	mov    rsi,r12
   412eb:	mov    rdi,rax
   412ee:	call   11220 <memcpy@plt>
   412f3:	mov    rcx,rax
   412f6:	jmp    412bc <gl_scratch_buffer_grow_preserve+0x3c>
   412f8:	nop    DWORD PTR [rax+rax*1+0x0]
   41300:	call   104b0 <__errno_location@plt>
   41305:	mov    DWORD PTR [rax],0xc
   4130b:	mov    rdi,r12
   4130e:	call   10430 <free@plt>
   41313:	mov    QWORD PTR [rbx],r14
   41316:	xor    eax,eax
   41318:	mov    QWORD PTR [rbx+0x8],0x400
   41320:	jmp    412c8 <gl_scratch_buffer_grow_preserve+0x48>
   41322:	nop    WORD PTR [rax+rax*1+0x0]
   41328:	mov    r12,QWORD PTR [rbx]
   4132b:	jmp    4130b <gl_scratch_buffer_grow_preserve+0x8b>
   4132d:	xor    eax,eax
   4132f:	jmp    412c8 <gl_scratch_buffer_grow_preserve+0x48>
   41331:	cs nop WORD PTR [rax+rax*1+0x0]
   4133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000041340 <gl_scratch_buffer_set_array_size>:
   41340:	endbr64 
   41344:	mov    rcx,rdx
   41347:	mov    rax,rsi
   4134a:	push   r12
   4134c:	mul    rcx
   4134f:	push   rbp
   41350:	push   rbx
   41351:	mov    rbx,rdi
   41354:	mov    r12,rax
   41357:	seto   al
   4135a:	or     rcx,rsi
   4135d:	shr    rcx,0x20
   41361:	je     41368 <gl_scratch_buffer_set_array_size+0x28>
   41363:	test   rsi,rsi
   41366:	jne    413a8 <gl_scratch_buffer_set_array_size+0x68>
   41368:	mov    eax,0x1
   4136d:	cmp    QWORD PTR [rbx+0x8],r12
   41371:	jae    4139d <gl_scratch_buffer_set_array_size+0x5d>
   41373:	mov    rdi,QWORD PTR [rbx]
   41376:	lea    rbp,[rbx+0x10]
   4137a:	cmp    rdi,rbp
   4137d:	je     41384 <gl_scratch_buffer_set_array_size+0x44>
   4137f:	call   10430 <free@plt>
   41384:	mov    rdi,r12
   41387:	call   11af0 <malloc@plt>
   4138c:	test   rax,rax
   4138f:	je     413de <gl_scratch_buffer_set_array_size+0x9e>
   41391:	mov    QWORD PTR [rbx+0x8],r12
   41395:	mov    QWORD PTR [rbx],rax
   41398:	mov    eax,0x1
   4139d:	pop    rbx
   4139e:	pop    rbp
   4139f:	pop    r12
   413a1:	ret    
   413a2:	nop    WORD PTR [rax+rax*1+0x0]
   413a8:	movzx  eax,al
   413ab:	test   rax,rax
   413ae:	je     41368 <gl_scratch_buffer_set_array_size+0x28>
   413b0:	mov    rdi,QWORD PTR [rdi]
   413b3:	lea    rbp,[rbx+0x10]
   413b7:	cmp    rdi,rbp
   413ba:	je     413c1 <gl_scratch_buffer_set_array_size+0x81>
   413bc:	call   10430 <free@plt>
   413c1:	mov    QWORD PTR [rbx],rbp
   413c4:	mov    QWORD PTR [rbx+0x8],0x400
   413cc:	call   104b0 <__errno_location@plt>
   413d1:	mov    DWORD PTR [rax],0xc
   413d7:	xor    eax,eax
   413d9:	pop    rbx
   413da:	pop    rbp
   413db:	pop    r12
   413dd:	ret    
   413de:	mov    QWORD PTR [rbx],rbp
   413e1:	mov    QWORD PTR [rbx+0x8],0x400
   413e9:	jmp    4139d <gl_scratch_buffer_set_array_size+0x5d>
   413eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000413f0 <next_brace_sub>:
   413f0:	movzx  edx,BYTE PTR [rdi]
   413f3:	test   dl,dl
   413f5:	je     41456 <next_brace_sub+0x66>
   413f7:	shr    esi,0x6
   413fa:	xor    eax,eax
   413fc:	xor    esi,0x1
   413ff:	mov    ecx,esi
   41401:	and    ecx,0x1
   41404:	jmp    41431 <next_brace_sub+0x41>
   41406:	cs nop WORD PTR [rax+rax*1+0x0]
   41410:	test   rax,rax
   41413:	jne    4141a <next_brace_sub+0x2a>
   41415:	cmp    dl,0x2c
   41418:	je     41470 <next_brace_sub+0x80>
   4141a:	add    rdi,0x1
   4141e:	cmp    dl,0x7b
   41421:	sete   dl
   41424:	movzx  edx,dl
   41427:	add    rax,rdx
   4142a:	movzx  edx,BYTE PTR [rdi]
   4142d:	test   dl,dl
   4142f:	je     41456 <next_brace_sub+0x66>
   41431:	cmp    dl,0x5c
   41434:	jne    4143a <next_brace_sub+0x4a>
   41436:	test   cl,cl
   41438:	jne    41460 <next_brace_sub+0x70>
   4143a:	cmp    dl,0x7d
   4143d:	jne    41410 <next_brace_sub+0x20>
   4143f:	lea    rdx,[rax-0x1]
   41443:	test   rax,rax
   41446:	je     41470 <next_brace_sub+0x80>
   41448:	add    rdi,0x1
   4144c:	mov    rax,rdx
   4144f:	movzx  edx,BYTE PTR [rdi]
   41452:	test   dl,dl
   41454:	jne    41431 <next_brace_sub+0x41>
   41456:	xor    eax,eax
   41458:	ret    
   41459:	nop    DWORD PTR [rax+0x0]
   41460:	cmp    BYTE PTR [rdi+0x1],0x0
   41464:	je     41456 <next_brace_sub+0x66>
   41466:	add    rdi,0x2
   4146a:	jmp    4142a <next_brace_sub+0x3a>
   4146c:	nop    DWORD PTR [rax+0x0]
   41470:	movzx  eax,BYTE PTR [rdi]
   41473:	test   al,al
   41475:	mov    eax,0x0
   4147a:	cmovne rax,rdi
   4147e:	ret    
   4147f:	nop

0000000000041480 <collated_compare>:
   41480:	endbr64 
   41484:	mov    rdi,QWORD PTR [rdi]
   41487:	mov    rsi,QWORD PTR [rsi]
   4148a:	cmp    rdi,rsi
   4148d:	je     414a0 <collated_compare+0x20>
   4148f:	test   rdi,rdi
   41492:	je     414a8 <collated_compare+0x28>
   41494:	test   rsi,rsi
   41497:	je     414ae <collated_compare+0x2e>
   41499:	jmp    107c0 <strcoll@plt>
   4149e:	xchg   ax,ax
   414a0:	xor    eax,eax
   414a2:	ret    
   414a3:	nop    DWORD PTR [rax+rax*1+0x0]
   414a8:	mov    eax,0x1
   414ad:	ret    
   414ae:	mov    eax,0xffffffff
   414b3:	ret    
   414b4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   414bf:	nop

00000000000414c0 <prefix_array>:
   414c0:	push   r15
   414c2:	push   r14
   414c4:	push   r13
   414c6:	push   r12
   414c8:	push   rbp
   414c9:	push   rbx
   414ca:	mov    rbx,rsi
   414cd:	sub    rsp,0x28
   414d1:	mov    QWORD PTR [rsp+0x10],rdi
   414d6:	mov    QWORD PTR [rsp+0x8],rdx
   414db:	call   10ab0 <strlen@plt>
   414e0:	mov    rbp,rax
   414e3:	cmp    rax,0x1
   414e7:	jne    414f7 <prefix_array+0x37>
   414e9:	mov    rax,QWORD PTR [rsp+0x10]
   414ee:	xor    ebp,ebp
   414f0:	cmp    BYTE PTR [rax],0x2f
   414f3:	setne  bpl
   414f7:	lea    rax,[rbp+0x1]
   414fb:	xor    r14d,r14d
   414fe:	cmp    QWORD PTR [rsp+0x8],0x0
   41504:	mov    QWORD PTR [rsp+0x18],rax
   41509:	je     4156f <prefix_array+0xaf>
   4150b:	nop    DWORD PTR [rax+rax*1+0x0]
   41510:	mov    r13,QWORD PTR [rbx+r14*8]
   41514:	mov    rdi,r13
   41517:	call   10ab0 <strlen@plt>
   4151c:	lea    r12,[rax+0x1]
   41520:	mov    rax,QWORD PTR [rsp+0x18]
   41525:	lea    rdi,[r12+rax*1]
   41529:	call   11af0 <malloc@plt>
   4152e:	mov    r15,rax
   41531:	test   rax,rax
   41534:	je     4158d <prefix_array+0xcd>
   41536:	mov    rsi,QWORD PTR [rsp+0x10]
   4153b:	mov    rdx,rbp
   4153e:	mov    rdi,rax
   41541:	call   11940 <mempcpy@plt>
   41546:	mov    rdx,r12
   41549:	mov    rsi,r13
   4154c:	mov    BYTE PTR [rax],0x2f
   4154f:	lea    rdi,[rax+0x1]
   41553:	call   11220 <memcpy@plt>
   41558:	mov    rdi,r13
   4155b:	call   10430 <free@plt>
   41560:	mov    QWORD PTR [rbx+r14*8],r15
   41564:	add    r14,0x1
   41568:	cmp    QWORD PTR [rsp+0x8],r14
   4156d:	jne    41510 <prefix_array+0x50>
   4156f:	xor    eax,eax
   41571:	add    rsp,0x28
   41575:	pop    rbx
   41576:	pop    rbp
   41577:	pop    r12
   41579:	pop    r13
   4157b:	pop    r14
   4157d:	pop    r15
   4157f:	ret    
   41580:	sub    r14,0x1
   41584:	mov    rdi,QWORD PTR [rbx+r14*8]
   41588:	call   10430 <free@plt>
   4158d:	test   r14,r14
   41590:	jne    41580 <prefix_array+0xc0>
   41592:	mov    eax,0x1
   41597:	jmp    41571 <prefix_array+0xb1>
   41599:	nop    DWORD PTR [rax+0x0]

00000000000415a0 <is_dir>:
   415a0:	sub    rsp,0xa8
   415a7:	mov    rax,QWORD PTR fs:0x28
   415b0:	mov    QWORD PTR [rsp+0x98],rax
   415b8:	xor    eax,eax
   415ba:	and    esi,0x200
   415c0:	jne    41600 <is_dir+0x60>
   415c2:	mov    rsi,rdi
   415c5:	mov    rdx,rsp
   415c8:	xor    ecx,ecx
   415ca:	mov    edi,0xffffff9c
   415cf:	call   10830 <fstatat@plt>
   415d4:	mov    r8d,eax
   415d7:	xor    eax,eax
   415d9:	test   r8d,r8d
   415dc:	je     41610 <is_dir+0x70>
   415de:	mov    rdx,QWORD PTR [rsp+0x98]
   415e6:	sub    rdx,QWORD PTR fs:0x28
   415ef:	jne    41623 <is_dir+0x83>
   415f1:	add    rsp,0xa8
   415f8:	ret    
   415f9:	nop    DWORD PTR [rax+0x0]
   41600:	mov    rsi,rsp
   41603:	call   QWORD PTR [rdx+0x40]
   41606:	mov    r8d,eax
   41609:	xor    eax,eax
   4160b:	test   r8d,r8d
   4160e:	jne    415de <is_dir+0x3e>
   41610:	mov    eax,DWORD PTR [rsp+0x18]
   41614:	and    eax,0xf000
   41619:	cmp    eax,0x4000
   4161e:	sete   al
   41621:	jmp    415de <is_dir+0x3e>
   41623:	call   11760 <__stack_chk_fail@plt>
   41628:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000041630 <glob_in_dir.constprop.0>:
   41630:	push   r15
   41632:	mov    r15d,edx
   41635:	push   r14
   41637:	mov    r14,rdi
   4163a:	mov    rdi,rsi
   4163d:	push   r13
   4163f:	push   r12
   41641:	push   rbp
   41642:	mov    rbp,r8
   41645:	push   rbx
   41646:	mov    rbx,rcx
   41649:	sub    rsp,0x718
   41650:	mov    QWORD PTR [rsp+0x28],rsi
   41655:	mov    DWORD PTR [rsp+0x14],edx
   41659:	mov    rax,QWORD PTR fs:0x28
   41662:	mov    QWORD PTR [rsp+0x708],rax
   4166a:	xor    eax,eax
   4166c:	call   10ab0 <strlen@plt>
   41671:	mov    esi,r15d
   41674:	mov    QWORD PTR [rsp+0x2f8],0x400
   41680:	mov    QWORD PTR [rsp+0x40],rax
   41685:	lea    rax,[rsp+0x300]
   4168d:	and    esi,0x40
   41690:	mov    QWORD PTR [rsp+0x38],rax
   41695:	mov    QWORD PTR [rsp+0x2f0],rax
   4169d:	movzx  eax,BYTE PTR [r14]
   416a1:	mov    QWORD PTR [rsp+0xe0],0x0
   416ad:	mov    QWORD PTR [rsp+0xe8],0x40
   416b9:	test   al,al
   416bb:	je     418e5 <glob_in_dir.constprop.0+0x2b5>
   416c1:	mov    rdx,r14
   416c4:	xor    ecx,ecx
   416c6:	cmp    al,0x5c
   416c8:	je     419c0 <glob_in_dir.constprop.0+0x390>
   416ce:	jg     418c0 <glob_in_dir.constprop.0+0x290>
   416d4:	cmp    al,0x5b
   416d6:	je     419b0 <glob_in_dir.constprop.0+0x380>
   416dc:	cmp    al,0x2a
   416de:	je     416e8 <glob_in_dir.constprop.0+0xb8>
   416e0:	cmp    al,0x3f
   416e2:	jne    418cd <glob_in_dir.constprop.0+0x29d>
   416e8:	mov    eax,DWORD PTR [rsp+0x14]
   416ec:	mov    rdi,QWORD PTR [rsp+0x28]
   416f1:	and    eax,0x200
   416f6:	mov    DWORD PTR [rsp+0x18],eax
   416fa:	jne    41ccd <glob_in_dir.constprop.0+0x69d>
   41700:	call   11e60 <opendir@plt>
   41705:	mov    r13,rax
   41708:	test   r13,r13
   4170b:	je     41c5e <glob_in_dir.constprop.0+0x62e>
   41711:	mov    rdi,r13
   41714:	call   10c80 <dirfd@plt>
   41719:	mov    esi,DWORD PTR [rsp+0x14]
   4171d:	xor    edx,edx
   4171f:	mov    QWORD PTR [rsp+0x8],0x0
   41728:	mov    DWORD PTR [rsp+0x30],eax
   4172c:	test   sil,0x80
   41730:	mov    eax,esi
   41732:	sete   dl
   41735:	sar    eax,0x5
   41738:	or     esi,0x100
   4173e:	xor    ebx,ebx
   41740:	and    eax,0x2
   41743:	shl    edx,0x2
   41746:	mov    DWORD PTR [rsp+0x34],esi
   4174a:	or     edx,eax
   4174c:	lea    rax,[rsp+0xe0]
   41754:	mov    DWORD PTR [rsp+0x1c],edx
   41758:	mov    r15,rax
   4175b:	mov    QWORD PTR [rsp+0x48],rax
   41760:	mov    ecx,DWORD PTR [rsp+0x18]
   41764:	mov    rdi,r13
   41767:	test   ecx,ecx
   41769:	jne    41a48 <glob_in_dir.constprop.0+0x418>
   4176f:	call   11f70 <readdir@plt>
   41774:	test   rax,rax
   41777:	je     41a58 <glob_in_dir.constprop.0+0x428>
   4177d:	lea    r12,[rax+0x13]
   41781:	movzx  eax,BYTE PTR [rax+0x12]
   41785:	test   DWORD PTR [rsp+0x14],0x2000
   4178d:	je     417e0 <glob_in_dir.constprop.0+0x1b0>
   4178f:	cmp    rax,0x4
   41793:	je     417e0 <glob_in_dir.constprop.0+0x1b0>
   41795:	cmp    rax,0xa
   41799:	je     417a0 <glob_in_dir.constprop.0+0x170>
   4179b:	test   rax,rax
   4179e:	jne    41760 <glob_in_dir.constprop.0+0x130>
   417a0:	mov    edx,DWORD PTR [rsp+0x18]
   417a4:	test   edx,edx
   417a6:	jne    41ba7 <glob_in_dir.constprop.0+0x577>
   417ac:	mov    eax,DWORD PTR [rsp+0x30]
   417b0:	test   eax,eax
   417b2:	js     41ba7 <glob_in_dir.constprop.0+0x577>
   417b8:	mov    edi,DWORD PTR [rsp+0x30]
   417bc:	xor    ecx,ecx
   417be:	lea    rdx,[rsp+0x50]
   417c3:	mov    rsi,r12
   417c6:	call   10830 <fstatat@plt>
   417cb:	test   eax,eax
   417cd:	jne    41760 <glob_in_dir.constprop.0+0x130>
   417cf:	mov    eax,DWORD PTR [rsp+0x68]
   417d3:	and    eax,0xf000
   417d8:	cmp    eax,0x4000
   417dd:	jne    41760 <glob_in_dir.constprop.0+0x130>
   417df:	nop
   417e0:	mov    edx,DWORD PTR [rsp+0x1c]
   417e4:	mov    rsi,r12
   417e7:	mov    rdi,r14
   417ea:	call   11fd0 <fnmatch@plt>
   417ef:	test   eax,eax
   417f1:	jne    41760 <glob_in_dir.constprop.0+0x130>
   417f7:	cmp    QWORD PTR [r15+0x8],rbx
   417fb:	jne    4183b <glob_in_dir.constprop.0+0x20b>
   417fd:	mov    rdi,rbx
   41800:	lea    rdx,[rbx+rbx*1]
   41804:	movabs rax,0xffffffffffffffe
   4180e:	shl    rdi,0x4
   41812:	mov    QWORD PTR [rsp+0x20],rdx
   41817:	add    rdi,0x10
   4181b:	cmp    rbx,rax
   4181e:	ja     41870 <glob_in_dir.constprop.0+0x240>
   41820:	call   11af0 <malloc@plt>
   41825:	test   rax,rax
   41828:	je     41870 <glob_in_dir.constprop.0+0x240>
   4182a:	mov    rdx,QWORD PTR [rsp+0x20]
   4182f:	mov    QWORD PTR [rax],r15
   41832:	xor    ebx,ebx
   41834:	mov    r15,rax
   41837:	mov    QWORD PTR [rax+0x8],rdx
   4183b:	mov    rdi,r12
   4183e:	call   124a0 <strdup@plt>
   41843:	mov    QWORD PTR [r15+rbx*8+0x10],rax
   41848:	test   rax,rax
   4184b:	je     41870 <glob_in_dir.constprop.0+0x240>
   4184d:	mov    rax,QWORD PTR [rbp+0x10]
   41851:	add    QWORD PTR [rsp+0x8],0x1
   41857:	add    rbx,0x1
   4185b:	mov    rcx,QWORD PTR [rsp+0x8]
   41860:	not    rax
   41863:	cmp    rcx,rax
   41866:	jb     41760 <glob_in_dir.constprop.0+0x130>
   4186c:	nop    DWORD PTR [rax+0x0]
   41870:	mov    r12,QWORD PTR [rsp+0x48]
   41875:	nop    DWORD PTR [rax]
   41878:	xor    r14d,r14d
   4187b:	test   rbx,rbx
   4187e:	je     41893 <glob_in_dir.constprop.0+0x263>
   41880:	mov    rdi,QWORD PTR [r15+r14*8+0x10]
   41885:	add    r14,0x1
   41889:	call   10430 <free@plt>
   4188e:	cmp    r14,rbx
   41891:	jne    41880 <glob_in_dir.constprop.0+0x250>
   41893:	mov    r14,QWORD PTR [r15]
   41896:	test   r14,r14
   41899:	je     41b38 <glob_in_dir.constprop.0+0x508>
   4189f:	mov    rbx,QWORD PTR [r14+0x8]
   418a3:	cmp    r15,r12
   418a6:	je     41b28 <glob_in_dir.constprop.0+0x4f8>
   418ac:	mov    rdi,r15
   418af:	call   10430 <free@plt>
   418b4:	mov    r15,r14
   418b7:	jmp    41878 <glob_in_dir.constprop.0+0x248>
   418b9:	nop    DWORD PTR [rax+0x0]
   418c0:	cmp    al,0x5d
   418c2:	jne    418cd <glob_in_dir.constprop.0+0x29d>
   418c4:	test   cl,0x4
   418c7:	jne    416e8 <glob_in_dir.constprop.0+0xb8>
   418cd:	movzx  eax,BYTE PTR [rdx+0x1]
   418d1:	add    rdx,0x1
   418d5:	test   al,al
   418d7:	jne    416c6 <glob_in_dir.constprop.0+0x96>
   418dd:	test   ecx,ecx
   418df:	jne    416e8 <glob_in_dir.constprop.0+0xb8>
   418e5:	mov    rdi,r14
   418e8:	call   10ab0 <strlen@plt>
   418ed:	mov    esi,DWORD PTR [rsp+0x14]
   418f1:	test   esi,0x810
   418f7:	jne    419e4 <glob_in_dir.constprop.0+0x3b4>
   418fd:	mov    rbx,QWORD PTR [rsp+0x40]
   41902:	lea    r13,[rax+0x1]
   41906:	lea    rdi,[rbx+rax*1+0x2]
   4190b:	call   11af0 <malloc@plt>
   41910:	mov    r15,rax
   41913:	test   rax,rax
   41916:	je     41d11 <glob_in_dir.constprop.0+0x6e1>
   4191c:	mov    rsi,QWORD PTR [rsp+0x28]
   41921:	mov    rdx,rbx
   41924:	mov    rdi,rax
   41927:	call   11940 <mempcpy@plt>
   4192c:	mov    rdx,r13
   4192f:	mov    rsi,r14
   41932:	mov    BYTE PTR [rax],0x2f
   41935:	lea    rdi,[rax+0x1]
   41939:	call   11220 <memcpy@plt>
   4193e:	test   DWORD PTR [rsp+0x14],0x200
   41946:	jne    41ceb <glob_in_dir.constprop.0+0x6bb>
   4194c:	lea    rdx,[rsp+0x50]
   41951:	mov    ecx,0x100
   41956:	mov    rsi,r15
   41959:	mov    edi,0xffffff9c
   4195e:	call   10830 <fstatat@plt>
   41963:	test   eax,eax
   41965:	je     41cb5 <glob_in_dir.constprop.0+0x685>
   4196b:	call   104b0 <__errno_location@plt>
   41970:	cmp    DWORD PTR [rax],0x4b
   41973:	je     41cb5 <glob_in_dir.constprop.0+0x685>
   41979:	mov    eax,DWORD PTR [rsp+0x14]
   4197d:	mov    rdi,r15
   41980:	xor    r13d,r13d
   41983:	xor    ebx,ebx
   41985:	and    eax,0x10
   41988:	mov    DWORD PTR [rsp+0x8],eax
   4198c:	call   10430 <free@plt>
   41991:	lea    rax,[rsp+0xe0]
   41999:	mov    QWORD PTR [rsp+0x48],rax
   4199e:	mov    r15,rax
   419a1:	mov    eax,DWORD PTR [rsp+0x8]
   419a5:	jmp    41c9a <glob_in_dir.constprop.0+0x66a>
   419aa:	nop    WORD PTR [rax+rax*1+0x0]
   419b0:	movzx  eax,BYTE PTR [rdx+0x1]
   419b4:	or     ecx,0x4
   419b7:	jmp    418d1 <glob_in_dir.constprop.0+0x2a1>
   419bc:	nop    DWORD PTR [rax+0x0]
   419c0:	movzx  eax,BYTE PTR [rdx+0x1]
   419c4:	test   esi,esi
   419c6:	jne    418d1 <glob_in_dir.constprop.0+0x2a1>
   419cc:	test   al,al
   419ce:	je     416e8 <glob_in_dir.constprop.0+0xb8>
   419d4:	movzx  eax,BYTE PTR [rdx+0x2]
   419d8:	or     ecx,0x2
   419db:	add    rdx,0x1
   419df:	jmp    418d1 <glob_in_dir.constprop.0+0x2a1>
   419e4:	or     esi,0x10
   419e7:	mov    DWORD PTR [rsp+0x34],esi
   419eb:	lea    rax,[rsp+0xe0]
   419f3:	xor    r13d,r13d
   419f6:	xor    ebx,ebx
   419f8:	mov    QWORD PTR [rsp+0x48],rax
   419fd:	mov    r15,rax
   41a00:	mov    rdi,r14
   41a03:	call   10ab0 <strlen@plt>
   41a08:	lea    rdi,[rax+0x1]
   41a0c:	mov    r12,rax
   41a0f:	call   11af0 <malloc@plt>
   41a14:	mov    QWORD PTR [r15+rbx*8+0x10],rax
   41a19:	mov    rdi,rax
   41a1c:	test   rax,rax
   41a1f:	je     41870 <glob_in_dir.constprop.0+0x240>
   41a25:	mov    rdx,r12
   41a28:	mov    rsi,r14
   41a2b:	add    rbx,0x1
   41a2f:	call   11940 <mempcpy@plt>
   41a34:	mov    QWORD PTR [rsp+0x8],0x1
   41a3d:	mov    BYTE PTR [rax],0x0
   41a40:	jmp    41a64 <glob_in_dir.constprop.0+0x434>
   41a42:	nop    WORD PTR [rax+rax*1+0x0]
   41a48:	call   QWORD PTR [rbp+0x28]
   41a4b:	test   rax,rax
   41a4e:	jne    4177d <glob_in_dir.constprop.0+0x14d>
   41a54:	nop    DWORD PTR [rax+0x0]
   41a58:	cmp    QWORD PTR [rsp+0x8],0x0
   41a5e:	je     41cfb <glob_in_dir.constprop.0+0x6cb>
   41a64:	mov    rcx,QWORD PTR [rbp+0x0]
   41a68:	mov    rdx,QWORD PTR [rbp+0x10]
   41a6c:	movabs rax,0x1fffffffffffffff
   41a76:	mov    rdi,QWORD PTR [rsp+0x8]
   41a7b:	sub    rax,rcx
   41a7e:	lea    rsi,[rdi+rdx*1+0x1]
   41a83:	cmp    rax,rsi
   41a86:	jb     41870 <glob_in_dir.constprop.0+0x240>
   41a8c:	lea    rsi,[rcx+rdx*1+0x1]
   41a91:	add    rsi,rdi
   41a94:	mov    rdi,QWORD PTR [rbp+0x8]
   41a98:	shl    rsi,0x3
   41a9c:	call   12120 <realloc@plt>
   41aa1:	mov    r14,rax
   41aa4:	test   rax,rax
   41aa7:	je     41870 <glob_in_dir.constprop.0+0x240>
   41aad:	mov    r8,QWORD PTR [rsp+0x48]
   41ab2:	mov    rdi,r15
   41ab5:	mov    r15,r8
   41ab8:	nop    DWORD PTR [rax+rax*1+0x0]
   41ac0:	test   rbx,rbx
   41ac3:	je     41b02 <glob_in_dir.constprop.0+0x4d2>
   41ac5:	mov    rsi,QWORD PTR [rbp+0x0]
   41ac9:	mov    r9,QWORD PTR [rbp+0x10]
   41acd:	xor    eax,eax
   41acf:	add    r9,rsi
   41ad2:	lea    rcx,[r14+r9*8]
   41ad6:	cs nop WORD PTR [rax+rax*1+0x0]
   41ae0:	mov    rdx,QWORD PTR [rdi+rax*8+0x10]
   41ae5:	mov    QWORD PTR [rcx+rax*8],rdx
   41ae9:	add    rax,0x1
   41aed:	cmp    rax,rbx
   41af0:	jne    41ae0 <glob_in_dir.constprop.0+0x4b0>
   41af2:	add    rsi,rax
   41af5:	lea    rax,[r9+rax*1-0x1]
   41afa:	mov    QWORD PTR [rbp+0x0],rsi
   41afe:	mov    QWORD PTR [r14+rax*8],rdx
   41b02:	mov    r12,QWORD PTR [rdi]
   41b05:	test   r12,r12
   41b08:	je     41c3b <glob_in_dir.constprop.0+0x60b>
   41b0e:	mov    rbx,QWORD PTR [r12+0x8]
   41b13:	cmp    rdi,r15
   41b16:	je     41b30 <glob_in_dir.constprop.0+0x500>
   41b18:	call   10430 <free@plt>
   41b1d:	mov    rdi,r12
   41b20:	jmp    41ac0 <glob_in_dir.constprop.0+0x490>
   41b22:	nop    WORD PTR [rax+rax*1+0x0]
   41b28:	mov    r12,r14
   41b2b:	jmp    418b4 <glob_in_dir.constprop.0+0x284>
   41b30:	mov    r15,r12
   41b33:	jmp    41b1d <glob_in_dir.constprop.0+0x4ed>
   41b35:	nop    DWORD PTR [rax]
   41b38:	mov    r12d,0x1
   41b3e:	test   r13,r13
   41b41:	je     41b67 <glob_in_dir.constprop.0+0x537>
   41b43:	call   104b0 <__errno_location@plt>
   41b48:	mov    rdi,r13
   41b4b:	mov    r14d,DWORD PTR [rax]
   41b4e:	mov    rbx,rax
   41b51:	test   DWORD PTR [rsp+0x34],0x200
   41b59:	jne    41cd8 <glob_in_dir.constprop.0+0x6a8>
   41b5f:	call   120b0 <closedir@plt>
   41b64:	mov    DWORD PTR [rbx],r14d
   41b67:	mov    rdi,QWORD PTR [rsp+0x2f0]
   41b6f:	cmp    rdi,QWORD PTR [rsp+0x38]
   41b74:	je     41b7b <glob_in_dir.constprop.0+0x54b>
   41b76:	call   10430 <free@plt>
   41b7b:	mov    rax,QWORD PTR [rsp+0x708]
   41b83:	sub    rax,QWORD PTR fs:0x28
   41b8c:	jne    41d0c <glob_in_dir.constprop.0+0x6dc>
   41b92:	add    rsp,0x718
   41b99:	mov    eax,r12d
   41b9c:	pop    rbx
   41b9d:	pop    rbp
   41b9e:	pop    r12
   41ba0:	pop    r13
   41ba2:	pop    r14
   41ba4:	pop    r15
   41ba6:	ret    
   41ba7:	mov    rdi,r12
   41baa:	call   10ab0 <strlen@plt>
   41baf:	mov    rcx,QWORD PTR [rsp+0x40]
   41bb4:	mov    QWORD PTR [rsp+0x20],rax
   41bb9:	lea    rsi,[rcx+rax*1+0x2]
   41bbe:	cmp    rsi,QWORD PTR [rsp+0x2f8]
   41bc6:	jbe    41be2 <glob_in_dir.constprop.0+0x5b2>
   41bc8:	lea    rdi,[rsp+0x2f0]
   41bd0:	mov    edx,0x1
   41bd5:	call   41340 <gl_scratch_buffer_set_array_size>
   41bda:	test   al,al
   41bdc:	je     41870 <glob_in_dir.constprop.0+0x240>
   41be2:	mov    rdx,QWORD PTR [rsp+0x40]
   41be7:	mov    rsi,QWORD PTR [rsp+0x28]
   41bec:	mov    rdi,QWORD PTR [rsp+0x2f0]
   41bf4:	call   11940 <mempcpy@plt>
   41bf9:	xor    edx,edx
   41bfb:	mov    rsi,r12
   41bfe:	cmp    BYTE PTR [rax-0x1],0x2f
   41c02:	mov    BYTE PTR [rax],0x2f
   41c05:	setne  dl
   41c08:	lea    rdi,[rax+rdx*1]
   41c0c:	mov    rdx,QWORD PTR [rsp+0x20]
   41c11:	add    rdx,0x1
   41c15:	call   11220 <memcpy@plt>
   41c1a:	mov    esi,DWORD PTR [rsp+0x34]
   41c1e:	mov    rdi,QWORD PTR [rsp+0x2f0]
   41c26:	mov    rdx,rbp
   41c29:	call   415a0 <is_dir>
   41c2e:	test   al,al
   41c30:	jne    417e0 <glob_in_dir.constprop.0+0x1b0>
   41c36:	jmp    41760 <glob_in_dir.constprop.0+0x130>
   41c3b:	mov    rax,QWORD PTR [rbp+0x0]
   41c3f:	add    rax,QWORD PTR [rbp+0x10]
   41c43:	mov    QWORD PTR [rbp+0x8],r14
   41c47:	xor    r12d,r12d
   41c4a:	mov    QWORD PTR [r14+rax*8],0x0
   41c52:	mov    eax,DWORD PTR [rsp+0x34]
   41c56:	mov    DWORD PTR [rbp+0x18],eax
   41c59:	jmp    41b3e <glob_in_dir.constprop.0+0x50e>
   41c5e:	call   104b0 <__errno_location@plt>
   41c63:	mov    esi,DWORD PTR [rax]
   41c65:	cmp    esi,0x14
   41c68:	je     41c81 <glob_in_dir.constprop.0+0x651>
   41c6a:	test   rbx,rbx
   41c6d:	je     41c7a <glob_in_dir.constprop.0+0x64a>
   41c6f:	mov    rdi,QWORD PTR [rsp+0x28]
   41c74:	call   rbx
   41c76:	test   eax,eax
   41c78:	jne    41ce0 <glob_in_dir.constprop.0+0x6b0>
   41c7a:	test   BYTE PTR [rsp+0x14],0x1
   41c7f:	jne    41ce0 <glob_in_dir.constprop.0+0x6b0>
   41c81:	lea    rcx,[rsp+0xe0]
   41c89:	mov    eax,DWORD PTR [rsp+0x14]
   41c8d:	xor    ebx,ebx
   41c8f:	mov    QWORD PTR [rsp+0x48],rcx
   41c94:	mov    r15,rcx
   41c97:	and    eax,0x10
   41c9a:	test   eax,eax
   41c9c:	mov    eax,DWORD PTR [rsp+0x14]
   41ca0:	mov    DWORD PTR [rsp+0x34],eax
   41ca4:	jne    41a00 <glob_in_dir.constprop.0+0x3d0>
   41caa:	mov    r12d,0x3
   41cb0:	jmp    41b3e <glob_in_dir.constprop.0+0x50e>
   41cb5:	mov    eax,DWORD PTR [rsp+0x14]
   41cb9:	mov    rdi,r15
   41cbc:	or     eax,0x10
   41cbf:	mov    DWORD PTR [rsp+0x34],eax
   41cc3:	call   10430 <free@plt>
   41cc8:	jmp    419eb <glob_in_dir.constprop.0+0x3bb>
   41ccd:	call   QWORD PTR [rbp+0x30]
   41cd0:	mov    r13,rax
   41cd3:	jmp    41708 <glob_in_dir.constprop.0+0xd8>
   41cd8:	call   QWORD PTR [rbp+0x20]
   41cdb:	jmp    41b64 <glob_in_dir.constprop.0+0x534>
   41ce0:	mov    r12d,0x2
   41ce6:	jmp    41b7b <glob_in_dir.constprop.0+0x54b>
   41ceb:	lea    rsi,[rsp+0x50]
   41cf0:	mov    rdi,r15
   41cf3:	call   QWORD PTR [rbp+0x38]
   41cf6:	jmp    41963 <glob_in_dir.constprop.0+0x333>
   41cfb:	mov    eax,DWORD PTR [rsp+0x14]
   41cff:	mov    ecx,DWORD PTR [rsp+0x34]
   41d03:	and    eax,0x10
   41d06:	mov    DWORD PTR [rsp+0x14],ecx
   41d0a:	jmp    41c9a <glob_in_dir.constprop.0+0x66a>
   41d0c:	call   11760 <__stack_chk_fail@plt>
   41d11:	mov    r12d,0x1
   41d17:	jmp    41b7b <glob_in_dir.constprop.0+0x54b>
   41d1c:	nop    DWORD PTR [rax+0x0]

0000000000041d20 <rpl_glob>:
   41d20:	endbr64 
   41d24:	push   r15
   41d26:	push   r14
   41d28:	push   r13
   41d2a:	push   r12
   41d2c:	push   rbp
   41d2d:	push   rbx
   41d2e:	sub    rsp,0x4d8
   41d35:	mov    QWORD PTR [rsp],rdx
   41d39:	mov    rax,QWORD PTR fs:0x28
   41d42:	mov    QWORD PTR [rsp+0x4c8],rax
   41d4a:	xor    eax,eax
   41d4c:	test   rdi,rdi
   41d4f:	je     42e0a <rpl_glob+0x10ea>
   41d55:	mov    r12,rcx
   41d58:	test   rcx,rcx
   41d5b:	je     42e0a <rpl_glob+0x10ea>
   41d61:	mov    eax,esi
   41d63:	mov    ebx,esi
   41d65:	and    eax,0xffff8100
   41d6a:	mov    DWORD PTR [rsp+0x48],eax
   41d6e:	jne    42e0a <rpl_glob+0x10ea>
   41d74:	cmp    BYTE PTR [rdi],0x0
   41d77:	mov    r15,rdi
   41d7a:	je     41d8d <rpl_glob+0x6d>
   41d7c:	call   10ab0 <strlen@plt>
   41d81:	cmp    BYTE PTR [r15+rax*1-0x1],0x2f
   41d87:	je     42340 <rpl_glob+0x620>
   41d8d:	mov    eax,ebx
   41d8f:	and    eax,0x20
   41d92:	mov    DWORD PTR [rsp+0x8],eax
   41d96:	test   bl,0x8
   41d99:	jne    41ef0 <rpl_glob+0x1d0>
   41d9f:	mov    QWORD PTR [r12+0x10],0x0
   41da8:	test   eax,eax
   41daa:	jne    41dbd <rpl_glob+0x9d>
   41dac:	mov    QWORD PTR [r12],0x0
   41db4:	mov    QWORD PTR [r12+0x8],0x0
   41dbd:	test   bh,0x4
   41dc0:	je     41f68 <rpl_glob+0x248>
   41dc6:	test   bl,0x40
   41dc9:	je     42300 <rpl_glob+0x5e0>
   41dcf:	mov    esi,0x7b
   41dd4:	mov    rdi,r15
   41dd7:	call   109e0 <strchr@plt>
   41ddc:	mov    rbp,rax
   41ddf:	test   rax,rax
   41de2:	je     41f68 <rpl_glob+0x248>
   41de8:	mov    rdi,r15
   41deb:	call   10ab0 <strlen@plt>
   41df0:	lea    rdi,[rax-0x1]
   41df4:	call   11af0 <malloc@plt>
   41df9:	mov    QWORD PTR [rsp+0x10],rax
   41dfe:	mov    rdi,rax
   41e01:	test   rax,rax
   41e04:	je     41f1c <rpl_glob+0x1fc>
   41e0a:	mov    rdx,rbp
   41e0d:	mov    rsi,r15
   41e10:	add    rbp,0x1
   41e14:	sub    rdx,r15
   41e17:	call   11940 <mempcpy@plt>
   41e1c:	mov    esi,ebx
   41e1e:	mov    rdi,rbp
   41e21:	mov    QWORD PTR [rsp+0x20],rax
   41e26:	call   413f0 <next_brace_sub>
   41e2b:	mov    r14,rax
   41e2e:	test   rax,rax
   41e31:	jne    41e50 <rpl_glob+0x130>
   41e33:	jmp    41f58 <rpl_glob+0x238>
   41e38:	nop    DWORD PTR [rax+rax*1+0x0]
   41e40:	mov    esi,ebx
   41e42:	call   413f0 <next_brace_sub>
   41e47:	test   rax,rax
   41e4a:	je     41f58 <rpl_glob+0x238>
   41e50:	cmp    BYTE PTR [rax],0x7d
   41e53:	lea    rdi,[rax+0x1]
   41e57:	jne    41e40 <rpl_glob+0x120>
   41e59:	mov    r13,rdi
   41e5c:	call   10ab0 <strlen@plt>
   41e61:	mov    r9,rbp
   41e64:	mov    rbp,r14
   41e67:	mov    r14,QWORD PTR [rsp+0x20]
   41e6c:	add    rax,0x1
   41e70:	mov    QWORD PTR [rsp+0x30],r15
   41e75:	mov    QWORD PTR [rsp+0x18],rax
   41e7a:	mov    rax,QWORD PTR [r12]
   41e7e:	mov    QWORD PTR [rsp+0x28],rax
   41e83:	mov    eax,ebx
   41e85:	and    eax,0xfffff7cf
   41e8a:	or     eax,0x20
   41e8d:	mov    r15d,eax
   41e90:	mov    rdx,rbp
   41e93:	mov    rsi,r9
   41e96:	mov    rdi,r14
   41e99:	sub    rdx,r9
   41e9c:	call   11940 <mempcpy@plt>
   41ea1:	mov    rdx,QWORD PTR [rsp+0x18]
   41ea6:	mov    rsi,r13
   41ea9:	mov    rdi,rax
   41eac:	call   11220 <memcpy@plt>
   41eb1:	mov    rdx,QWORD PTR [rsp]
   41eb5:	mov    rcx,r12
   41eb8:	mov    esi,r15d
   41ebb:	mov    rdi,QWORD PTR [rsp+0x10]
   41ec0:	call   41d20 <rpl_glob>
   41ec5:	test   eax,eax
   41ec7:	je     41ed2 <rpl_glob+0x1b2>
   41ec9:	cmp    eax,0x3
   41ecc:	jne    42680 <rpl_glob+0x960>
   41ed2:	cmp    BYTE PTR [rbp+0x0],0x7d
   41ed6:	je     428e8 <rpl_glob+0xbc8>
   41edc:	lea    r9,[rbp+0x1]
   41ee0:	mov    esi,ebx
   41ee2:	mov    rdi,r9
   41ee5:	call   413f0 <next_brace_sub>
   41eea:	mov    rbp,rax
   41eed:	jmp    41e90 <rpl_glob+0x170>
   41eef:	nop
   41ef0:	mov    eax,DWORD PTR [rsp+0x8]
   41ef4:	test   eax,eax
   41ef6:	jne    41dbd <rpl_glob+0x9d>
   41efc:	mov    rax,QWORD PTR [r12+0x10]
   41f01:	mov    QWORD PTR [r12],0x0
   41f09:	movabs rdx,0x1ffffffffffffffe
   41f13:	cmp    rax,rdx
   41f16:	jbe    42360 <rpl_glob+0x640>
   41f1c:	mov    DWORD PTR [rsp+0x48],0x1
   41f24:	nop    DWORD PTR [rax+0x0]
   41f28:	mov    rax,QWORD PTR [rsp+0x4c8]
   41f30:	sub    rax,QWORD PTR fs:0x28
   41f39:	jne    43138 <rpl_glob+0x1418>
   41f3f:	mov    eax,DWORD PTR [rsp+0x48]
   41f43:	add    rsp,0x4d8
   41f4a:	pop    rbx
   41f4b:	pop    rbp
   41f4c:	pop    r12
   41f4e:	pop    r13
   41f50:	pop    r14
   41f52:	pop    r15
   41f54:	ret    
   41f55:	nop    DWORD PTR [rax]
   41f58:	mov    rdi,QWORD PTR [rsp+0x10]
   41f5d:	and    bh,0xfb
   41f60:	call   10430 <free@plt>
   41f65:	nop    DWORD PTR [rax]
   41f68:	mov    r14,QWORD PTR [r12]
   41f6c:	mov    r13,QWORD PTR [r12+0x10]
   41f71:	mov    esi,0x2f
   41f76:	mov    rdi,r15
   41f79:	lea    rax,[r14+r13*1]
   41f7d:	mov    QWORD PTR [rsp+0x18],rax
   41f82:	call   11740 <strrchr@plt>
   41f87:	mov    rbp,rax
   41f8a:	test   rax,rax
   41f8d:	je     42178 <rpl_glob+0x458>
   41f93:	mov    esi,ebx
   41f95:	and    esi,0x40
   41f98:	cmp    r15,rax
   41f9b:	je     424d8 <rpl_glob+0x7b8>
   41fa1:	lea    rax,[r15+0x1]
   41fa5:	cmp    rbp,rax
   41fa8:	je     424c0 <rpl_glob+0x7a0>
   41fae:	mov    r14,rbp
   41fb1:	sub    r14,r15
   41fb4:	lea    rdi,[r14+0x1]
   41fb8:	call   11af0 <malloc@plt>
   41fbd:	mov    QWORD PTR [rsp+0x8],rax
   41fc2:	mov    r13,rax
   41fc5:	test   rax,rax
   41fc8:	je     41f1c <rpl_glob+0x1fc>
   41fce:	mov    rdx,r14
   41fd1:	mov    rsi,r15
   41fd4:	mov    rdi,rax
   41fd7:	call   11940 <mempcpy@plt>
   41fdc:	cmp    BYTE PTR [rbp+0x1],0x0
   41fe0:	mov    BYTE PTR [rax],0x0
   41fe3:	jne    42048 <rpl_glob+0x328>
   41fe5:	cmp    r14,0x1
   41fe9:	je     42048 <rpl_glob+0x328>
   41feb:	test   bl,0x40
   41fee:	jne    41ffe <rpl_glob+0x2de>
   41ff0:	lea    rdx,[r13+r14*1-0x1]
   41ff5:	cmp    BYTE PTR [rdx],0x5c
   41ff8:	je     42820 <rpl_glob+0xb00>
   41ffe:	mov    rdx,QWORD PTR [rsp]
   42002:	mov    rdi,QWORD PTR [rsp+0x8]
   42007:	mov    esi,ebx
   42009:	mov    rcx,r12
   4200c:	or     esi,0x2
   4200f:	call   41d20 <rpl_glob>
   42014:	mov    ebp,eax
   42016:	test   eax,eax
   42018:	jne    4202e <rpl_glob+0x30e>
   4201a:	mov    eax,DWORD PTR [r12+0x18]
   4201f:	and    ebx,0x2
   42022:	xor    ebp,ebp
   42024:	and    eax,0xfffffffd
   42027:	or     ebx,eax
   42029:	mov    DWORD PTR [r12+0x18],ebx
   4202e:	mov    rdi,QWORD PTR [rsp+0x8]
   42033:	call   10430 <free@plt>
   42038:	mov    DWORD PTR [rsp+0x48],ebp
   4203c:	jmp    41f28 <rpl_glob+0x208>
   42041:	nop    DWORD PTR [rax+0x0]
   42048:	mov    rax,QWORD PTR [rsp+0x8]
   4204d:	mov    r8d,ebx
   42050:	add    rbp,0x1
   42054:	movzx  eax,BYTE PTR [rax]
   42057:	and    r8d,0x5000
   4205e:	je     4313d <rpl_glob+0x141d>
   42064:	cmp    al,0x7e
   42066:	jne    4252d <rpl_glob+0x80d>
   4206c:	mov    DWORD PTR [rsp+0x10],0x1
   42074:	mov    rax,QWORD PTR [rsp+0x8]
   42079:	movzx  eax,BYTE PTR [rax+0x1]
   4207d:	test   al,al
   4207f:	je     42938 <rpl_glob+0xc18>
   42085:	cmp    al,0x2f
   42087:	je     42938 <rpl_glob+0xc18>
   4208d:	test   bl,0x40
   42090:	jne    42750 <rpl_glob+0xa30>
   42096:	cmp    al,0x5c
   42098:	je     4291f <rpl_glob+0xbff>
   4209e:	mov    rdi,QWORD PTR [rsp+0x8]
   420a3:	mov    esi,0x2f
   420a8:	call   109e0 <strchr@plt>
   420ad:	mov    QWORD PTR [rsp+0x20],rax
   420b2:	test   rax,rax
   420b5:	je     42f26 <rpl_glob+0x1206>
   420bb:	mov    rdi,QWORD PTR [rsp+0x8]
   420c0:	mov    rdx,QWORD PTR [rsp+0x20]
   420c5:	mov    esi,0x5c
   420ca:	sub    rdx,rdi
   420cd:	mov    QWORD PTR [rsp+0x28],rdx
   420d2:	call   11750 <memchr@plt>
   420d7:	mov    rdi,QWORD PTR [rsp+0x28]
   420dc:	mov    QWORD PTR [rsp+0x30],rax
   420e1:	call   11af0 <malloc@plt>
   420e6:	mov    rdx,QWORD PTR [rsp+0x28]
   420eb:	mov    r8,QWORD PTR [rsp+0x30]
   420f0:	test   rax,rax
   420f3:	mov    r13,rax
   420f6:	je     42813 <rpl_glob+0xaf3>
   420fc:	test   r8,r8
   420ff:	je     42b43 <rpl_glob+0xe23>
   42105:	mov    rax,QWORD PTR [rsp+0x8]
   4210a:	mov    rdx,r8
   4210d:	mov    rdi,r13
   42110:	mov    QWORD PTR [rsp+0x28],r8
   42115:	sub    rdx,rax
   42118:	lea    rsi,[rax+0x1]
   4211c:	sub    rdx,0x1
   42120:	call   11940 <mempcpy@plt>
   42125:	mov    rcx,QWORD PTR [rsp+0x20]
   4212a:	mov    r8,QWORD PTR [rsp+0x28]
   4212f:	cmp    rcx,r8
   42132:	jne    42154 <rpl_glob+0x434>
   42134:	jmp    42b58 <rpl_glob+0xe38>
   42139:	nop    DWORD PTR [rax+0x0]
   42140:	add    r8,0x1
   42144:	add    rax,0x1
   42148:	mov    BYTE PTR [rax-0x1],dl
   4214b:	cmp    r8,rcx
   4214e:	je     42b58 <rpl_glob+0xe38>
   42154:	movzx  edx,BYTE PTR [r8]
   42158:	cmp    dl,0x5c
   4215b:	jne    42140 <rpl_glob+0x420>
   4215d:	lea    rsi,[r8+0x1]
   42161:	cmp    rsi,rcx
   42164:	je     42f9d <rpl_glob+0x127d>
   4216a:	movzx  edx,BYTE PTR [r8+0x1]
   4216f:	mov    r8,rsi
   42172:	jmp    42140 <rpl_glob+0x420>
   42174:	nop    DWORD PTR [rax+0x0]
   42178:	movzx  eax,BYTE PTR [r15]
   4217c:	test   bh,0x50
   4217f:	jne    42388 <rpl_glob+0x668>
   42185:	test   al,al
   42187:	je     42e22 <rpl_glob+0x1102>
   4218d:	lea    rcx,[rip+0xafb0]        # 4d144 <__func__.4+0x24>
   42194:	mov    esi,ebx
   42196:	xor    r8d,r8d
   42199:	mov    rbp,r15
   4219c:	mov    QWORD PTR [rsp+0x8],rcx
   421a1:	and    esi,0x40
   421a4:	mov    eax,0x2e
   421a9:	xor    r14d,r14d
   421ac:	mov    DWORD PTR [rsp+0x10],0x0
   421b4:	mov    rdx,QWORD PTR [rsp+0x8]
   421b9:	xor    ecx,ecx
   421bb:	cmp    al,0x5c
   421bd:	je     424a0 <rpl_glob+0x780>
   421c3:	jg     423b0 <rpl_glob+0x690>
   421c9:	cmp    al,0x5b
   421cb:	je     42490 <rpl_glob+0x770>
   421d1:	cmp    al,0x2a
   421d3:	je     421dd <rpl_glob+0x4bd>
   421d5:	cmp    al,0x3f
   421d7:	jne    423bd <rpl_glob+0x69d>
   421dd:	test   esi,esi
   421df:	jne    421ea <rpl_glob+0x4ca>
   421e1:	test   r14,r14
   421e4:	jne    42ac8 <rpl_glob+0xda8>
   421ea:	test   bh,0x2
   421ed:	jne    42e58 <rpl_glob+0x1138>
   421f3:	mov    esi,ebx
   421f5:	mov    rdx,QWORD PTR [rsp]
   421f9:	mov    rdi,QWORD PTR [rsp+0x8]
   421fe:	lea    rcx,[rsp+0x60]
   42203:	and    esi,0x241
   42209:	mov    QWORD PTR [rsp+0x20],rcx
   4220e:	or     esi,0x2004
   42214:	call   41d20 <rpl_glob>
   42219:	test   eax,eax
   4221b:	jne    42508 <rpl_glob+0x7e8>
   42221:	mov    r14d,ebx
   42224:	xor    r13d,r13d
   42227:	and    r14d,0xfffff7cf
   4222e:	or     r14d,0x20
   42232:	cmp    QWORD PTR [rsp+0x60],0x0
   42238:	je     422c2 <rpl_glob+0x5a2>
   4223e:	mov    DWORD PTR [rsp+0x30],ebx
   42242:	mov    QWORD PTR [rsp+0x28],r15
   42247:	mov    r15,r12
   4224a:	mov    r12,r13
   4224d:	mov    r13,rbp
   42250:	mov    rax,QWORD PTR [rsp+0x68]
   42255:	mov    rcx,QWORD PTR [rsp]
   42259:	mov    r8,r15
   4225c:	mov    edx,r14d
   4225f:	mov    rdi,r13
   42262:	mov    rbx,QWORD PTR [r15]
   42265:	lea    rbp,[r12*8+0x0]
   4226d:	mov    rsi,QWORD PTR [rax+r12*8]
   42271:	call   41630 <glob_in_dir.constprop.0>
   42276:	cmp    eax,0x3
   42279:	je     422ab <rpl_glob+0x58b>
   4227b:	test   eax,eax
   4227d:	jne    42db0 <rpl_glob+0x1090>
   42283:	mov    rdx,QWORD PTR [r15]
   42286:	mov    rax,QWORD PTR [r15+0x8]
   4228a:	sub    rdx,rbx
   4228d:	add    rbx,QWORD PTR [r15+0x10]
   42291:	lea    rsi,[rax+rbx*8]
   42295:	mov    rax,QWORD PTR [rsp+0x68]
   4229a:	mov    rdi,QWORD PTR [rax+rbp*1]
   4229e:	call   414c0 <prefix_array>
   422a3:	test   eax,eax
   422a5:	jne    42de0 <rpl_glob+0x10c0>
   422ab:	add    r12,0x1
   422af:	cmp    QWORD PTR [rsp+0x60],r12
   422b4:	ja     42250 <rpl_glob+0x530>
   422b6:	mov    r12,r15
   422b9:	mov    ebx,DWORD PTR [rsp+0x30]
   422bd:	mov    r15,QWORD PTR [rsp+0x28]
   422c2:	mov    r14,QWORD PTR [r12]
   422c6:	mov    r13,QWORD PTR [r12+0x10]
   422cb:	or     bh,0x1
   422ce:	lea    rax,[r14+r13*1]
   422d2:	cmp    rax,QWORD PTR [rsp+0x18]
   422d7:	jne    42737 <rpl_glob+0xa17>
   422dd:	nop    DWORD PTR [rax]
   422e0:	test   bl,0x10
   422e3:	jne    426d2 <rpl_glob+0x9b2>
   422e9:	mov    rdi,QWORD PTR [rsp+0x20]
   422ee:	call   431c0 <rpl_globfree>
   422f3:	mov    DWORD PTR [rsp+0x48],0x3
   422fb:	jmp    42518 <rpl_glob+0x7f8>
   42300:	movzx  eax,BYTE PTR [r15]
   42304:	mov    rbp,r15
   42307:	test   al,al
   42309:	jne    42328 <rpl_glob+0x608>
   4230b:	jmp    41f68 <rpl_glob+0x248>
   42310:	cmp    al,0x7b
   42312:	je     41de8 <rpl_glob+0xc8>
   42318:	movzx  eax,BYTE PTR [rbp+0x1]
   4231c:	add    rbp,0x1
   42320:	test   al,al
   42322:	je     41f68 <rpl_glob+0x248>
   42328:	cmp    al,0x5c
   4232a:	jne    42310 <rpl_glob+0x5f0>
   4232c:	cmp    BYTE PTR [rbp+0x1],0x0
   42330:	je     41f68 <rpl_glob+0x248>
   42336:	movzx  eax,BYTE PTR [rbp+0x2]
   4233a:	add    rbp,0x1
   4233e:	jmp    4231c <rpl_glob+0x5fc>
   42340:	or     bh,0x20
   42343:	mov    eax,ebx
   42345:	and    eax,0x20
   42348:	mov    DWORD PTR [rsp+0x8],eax
   4234c:	test   bl,0x8
   4234f:	jne    41ef0 <rpl_glob+0x1d0>
   42355:	jmp    41d9f <rpl_glob+0x7f>
   4235a:	nop    WORD PTR [rax+rax*1+0x0]
   42360:	lea    rdi,[rax*8+0x8]
   42368:	mov    esi,0x1
   4236d:	call   10f50 <calloc@plt>
   42372:	mov    QWORD PTR [r12+0x8],rax
   42377:	test   rax,rax
   4237a:	jne    41dbd <rpl_glob+0x9d>
   42380:	jmp    41f1c <rpl_glob+0x1fc>
   42385:	nop    DWORD PTR [rax]
   42388:	cmp    al,0x7e
   4238a:	jne    42185 <rpl_glob+0x465>
   42390:	mov    rdi,r15
   42393:	call   10ab0 <strlen@plt>
   42398:	mov    DWORD PTR [rsp+0x10],0x0
   423a0:	mov    QWORD PTR [rsp+0x8],r15
   423a5:	mov    r14,rax
   423a8:	jmp    42074 <rpl_glob+0x354>
   423ad:	nop    DWORD PTR [rax]
   423b0:	cmp    al,0x5d
   423b2:	jne    423bd <rpl_glob+0x69d>
   423b4:	test   cl,0x4
   423b7:	jne    421dd <rpl_glob+0x4bd>
   423bd:	movzx  eax,BYTE PTR [rdx+0x1]
   423c1:	add    rdx,0x1
   423c5:	test   al,al
   423c7:	jne    421bb <rpl_glob+0x49b>
   423cd:	nop    DWORD PTR [rax]
   423d0:	test   cl,0x5
   423d3:	jne    421dd <rpl_glob+0x4bd>
   423d9:	and    ecx,0x2
   423dc:	mov    r13,QWORD PTR [r12]
   423e0:	je     42558 <rpl_glob+0x838>
   423e6:	mov    rdi,QWORD PTR [rsp+0x8]
   423eb:	mov    esi,0x5c
   423f0:	call   109e0 <strchr@plt>
   423f5:	mov    rsi,rax
   423f8:	nop    DWORD PTR [rax+rax*1+0x0]
   42400:	movzx  ecx,BYTE PTR [rax]
   42403:	mov    rdx,rax
   42406:	cmp    cl,0x5c
   42409:	jne    42417 <rpl_glob+0x6f7>
   4240b:	movzx  ecx,BYTE PTR [rax+0x1]
   4240f:	add    rdx,0x1
   42413:	sub    r14,0x1
   42417:	mov    BYTE PTR [rsi],cl
   42419:	add    rsi,0x1
   4241d:	cmp    BYTE PTR [rdx],0x0
   42420:	lea    rax,[rdx+0x1]
   42424:	jne    42400 <rpl_glob+0x6e0>
   42426:	mov    rcx,QWORD PTR [rsp]
   4242a:	mov    rsi,QWORD PTR [rsp+0x8]
   4242f:	mov    edx,ebx
   42431:	mov    r8,r12
   42434:	and    edx,0xfffff7ef
   4243a:	mov    rdi,rbp
   4243d:	mov    DWORD PTR [rsp],edx
   42440:	call   41630 <glob_in_dir.constprop.0>
   42445:	mov    edx,DWORD PTR [rsp]
   42448:	test   eax,eax
   4244a:	je     42c50 <rpl_glob+0xf30>
   42450:	cmp    eax,0x3
   42453:	jne    42511 <rpl_glob+0x7f1>
   42459:	cmp    ebx,edx
   4245b:	je     42511 <rpl_glob+0x7f1>
   42461:	mov    r14,QWORD PTR [r12]
   42465:	mov    r13,QWORD PTR [r12+0x10]
   4246a:	lea    rax,[r14+r13*1]
   4246e:	cmp    rax,QWORD PTR [rsp+0x18]
   42473:	je     428c9 <rpl_glob+0xba9>
   42479:	mov    DWORD PTR [rsp+0x48],0x3
   42481:	jmp    42518 <rpl_glob+0x7f8>
   42486:	cs nop WORD PTR [rax+rax*1+0x0]
   42490:	movzx  eax,BYTE PTR [rdx+0x1]
   42494:	or     ecx,0x4
   42497:	jmp    423c1 <rpl_glob+0x6a1>
   4249c:	nop    DWORD PTR [rax+0x0]
   424a0:	movzx  eax,BYTE PTR [rdx+0x1]
   424a4:	test   esi,esi
   424a6:	jne    423c1 <rpl_glob+0x6a1>
   424ac:	test   al,al
   424ae:	jne    42668 <rpl_glob+0x948>
   424b4:	or     ecx,0x2
   424b7:	jmp    423d0 <rpl_glob+0x6b0>
   424bc:	nop    DWORD PTR [rax+0x0]
   424c0:	cmp    BYTE PTR [r15],0x5c
   424c4:	jne    41fae <rpl_glob+0x28e>
   424ca:	mov    esi,ebx
   424cc:	and    esi,0x40
   424cf:	jne    41fae <rpl_glob+0x28e>
   424d5:	nop    DWORD PTR [rax]
   424d8:	lea    rcx,[rip+0xac61]        # 4d140 <__func__.4+0x20>
   424df:	add    rbp,0x1
   424e3:	xor    r8d,r8d
   424e6:	mov    eax,0x2f
   424eb:	mov    DWORD PTR [rsp+0x10],0x0
   424f3:	mov    r14d,0x1
   424f9:	mov    QWORD PTR [rsp+0x8],rcx
   424fe:	jmp    421b4 <rpl_glob+0x494>
   42503:	nop    DWORD PTR [rax+rax*1+0x0]
   42508:	test   bl,0x10
   4250b:	jne    426c0 <rpl_glob+0x9a0>
   42511:	mov    DWORD PTR [rsp+0x48],eax
   42515:	nop    DWORD PTR [rax]
   42518:	mov    edx,DWORD PTR [rsp+0x10]
   4251c:	test   edx,edx
   4251e:	je     41f28 <rpl_glob+0x208>
   42524:	mov    ebp,DWORD PTR [rsp+0x48]
   42528:	jmp    4202e <rpl_glob+0x30e>
   4252d:	mov    DWORD PTR [rsp+0x10],0x1
   42535:	xor    r8d,r8d
   42538:	mov    rax,QWORD PTR [rsp+0x8]
   4253d:	mov    esi,ebx
   4253f:	and    esi,0x40
   42542:	movzx  eax,BYTE PTR [rax]
   42545:	test   al,al
   42547:	jne    421b4 <rpl_glob+0x494>
   4254d:	mov    r13,QWORD PTR [r12]
   42551:	nop    DWORD PTR [rax+0x0]
   42558:	test   r8d,r8d
   4255b:	jne    42426 <rpl_glob+0x706>
   42561:	mov    rcx,QWORD PTR [rsp]
   42565:	mov    rsi,QWORD PTR [rsp+0x8]
   4256a:	mov    r8,r12
   4256d:	mov    edx,ebx
   4256f:	mov    rdi,rbp
   42572:	call   41630 <glob_in_dir.constprop.0>
   42577:	test   eax,eax
   42579:	jne    42511 <rpl_glob+0x7f1>
   4257b:	test   r14,r14
   4257e:	jne    42c60 <rpl_glob+0xf40>
   42584:	test   bl,0x2
   42587:	je     42620 <rpl_glob+0x900>
   4258d:	mov    rcx,QWORD PTR [rsp+0x18]
   42592:	mov    rax,QWORD PTR [r12]
   42596:	add    rax,QWORD PTR [r12+0x10]
   4259b:	cmp    rcx,rax
   4259e:	jae    42620 <rpl_glob+0x900>
   425a4:	mov    r13,rcx
   425a7:	jmp    425c2 <rpl_glob+0x8a2>
   425a9:	nop    DWORD PTR [rax+0x0]
   425b0:	mov    rax,QWORD PTR [r12+0x10]
   425b5:	add    r13,0x1
   425b9:	add    rax,QWORD PTR [r12]
   425bd:	cmp    rax,r13
   425c0:	jbe    42620 <rpl_glob+0x900>
   425c2:	mov    rax,QWORD PTR [r12+0x8]
   425c7:	mov    rdx,r12
   425ca:	mov    esi,ebx
   425cc:	lea    rbp,[r13*8+0x0]
   425d4:	mov    rdi,QWORD PTR [rax+r13*8]
   425d8:	call   415a0 <is_dir>
   425dd:	test   al,al
   425df:	je     425b0 <rpl_glob+0x890>
   425e1:	mov    rax,QWORD PTR [r12+0x8]
   425e6:	mov    r15,QWORD PTR [rax+r13*8]
   425ea:	mov    rdi,r15
   425ed:	call   10ab0 <strlen@plt>
   425f2:	mov    rdi,r15
   425f5:	lea    rsi,[rax+0x2]
   425f9:	mov    r14,rax
   425fc:	call   12120 <realloc@plt>
   42601:	test   rax,rax
   42604:	je     42c87 <rpl_glob+0xf67>
   4260a:	mov    ecx,0x2f
   4260f:	mov    WORD PTR [rax+r14*1],cx
   42614:	mov    rdx,QWORD PTR [r12+0x8]
   42619:	mov    QWORD PTR [rdx+rbp*1],rax
   4261d:	jmp    425b0 <rpl_glob+0x890>
   4261f:	nop
   42620:	and    ebx,0x4
   42623:	jne    42518 <rpl_glob+0x7f8>
   42629:	mov    rcx,QWORD PTR [rsp+0x18]
   4262e:	mov    rax,QWORD PTR [r12+0x8]
   42633:	mov    edx,0x8
   42638:	mov    rsi,QWORD PTR [r12+0x10]
   4263d:	add    rsi,QWORD PTR [r12]
   42641:	sub    rsi,rcx
   42644:	lea    rdi,[rax+rcx*8]
   42648:	lea    rcx,[rip+0xffffffffffffee31]        # 41480 <collated_compare>
   4264f:	call   12650 <qsort@plt>
   42654:	mov    DWORD PTR [rsp+0x48],0x0
   4265c:	jmp    42518 <rpl_glob+0x7f8>
   42661:	nop    DWORD PTR [rax+0x0]
   42668:	movzx  eax,BYTE PTR [rdx+0x2]
   4266c:	or     ecx,0x2
   4266f:	add    rdx,0x1
   42673:	jmp    423c1 <rpl_glob+0x6a1>
   42678:	nop    DWORD PTR [rax+rax*1+0x0]
   42680:	mov    rdi,QWORD PTR [rsp+0x10]
   42685:	mov    DWORD PTR [rsp],eax
   42688:	call   10430 <free@plt>
   4268d:	mov    eax,DWORD PTR [rsp]
   42690:	mov    r15d,DWORD PTR [rsp+0x8]
   42695:	mov    DWORD PTR [rsp+0x48],eax
   42699:	test   r15d,r15d
   4269c:	jne    41f28 <rpl_glob+0x208>
   426a2:	mov    rdi,r12
   426a5:	call   431c0 <rpl_globfree>
   426aa:	mov    QWORD PTR [r12],0x0
   426b2:	jmp    41f28 <rpl_glob+0x208>
   426b7:	nop    WORD PTR [rax+rax*1+0x0]
   426c0:	cmp    eax,0x3
   426c3:	jne    42511 <rpl_glob+0x7f1>
   426c9:	mov    r14,QWORD PTR [r12]
   426cd:	mov    r13,QWORD PTR [r12+0x10]
   426d2:	movabs rax,0x1ffffffffffffffd
   426dc:	add    r13,r14
   426df:	cmp    r13,rax
   426e2:	ja     42c30 <rpl_glob+0xf10>
   426e8:	mov    rdi,QWORD PTR [r12+0x8]
   426ed:	lea    r13,[r13*8+0x10]
   426f5:	mov    rsi,r13
   426f8:	call   12120 <realloc@plt>
   426fd:	mov    rbp,rax
   42700:	test   rax,rax
   42703:	je     42c30 <rpl_glob+0xf10>
   42709:	mov    QWORD PTR [r12+0x8],rax
   4270e:	mov    rdi,r15
   42711:	call   124a0 <strdup@plt>
   42716:	mov    QWORD PTR [rbp+r13*1-0x10],rax
   4271b:	test   rax,rax
   4271e:	je     42de3 <rpl_glob+0x10c3>
   42724:	add    QWORD PTR [r12],0x1
   42729:	mov    QWORD PTR [rbp+r13*1-0x8],0x0
   42732:	mov    DWORD PTR [r12+0x18],ebx
   42737:	mov    rdi,QWORD PTR [rsp+0x20]
   4273c:	call   431c0 <rpl_globfree>
   42741:	jmp    42584 <rpl_glob+0x864>
   42746:	cs nop WORD PTR [rax+rax*1+0x0]
   42750:	mov    rdi,QWORD PTR [rsp+0x8]
   42755:	mov    esi,0x2f
   4275a:	call   109e0 <strchr@plt>
   4275f:	mov    QWORD PTR [rsp+0x20],rax
   42764:	test   rax,rax
   42767:	jne    42b1b <rpl_glob+0xdfb>
   4276d:	mov    rax,QWORD PTR [rsp+0x8]
   42772:	mov    DWORD PTR [rsp+0x4c],0x0
   4277a:	mov    QWORD PTR [rsp+0x20],0x0
   42783:	lea    r13,[rax+0x1]
   42787:	lea    rsi,[rsp+0x60]
   4278c:	mov    QWORD PTR [rsp+0x30],r14
   42791:	mov    ecx,0x400
   42796:	lea    rax,[rsp+0xc0]
   4279e:	mov    QWORD PTR [rsp+0x28],rax
   427a3:	mov    rdx,rax
   427a6:	mov    r14,rsi
   427a9:	lea    rdi,[rsp+0xb0]
   427b1:	mov    QWORD PTR [rsp+0xb0],rax
   427b9:	lea    rax,[rsp+0x58]
   427be:	mov    QWORD PTR [rsp+0x38],rbp
   427c3:	mov    rbp,rax
   427c6:	mov    QWORD PTR [rsp+0x40],r15
   427cb:	mov    r15,rdi
   427ce:	mov    QWORD PTR [rsp+0xb8],0x400
   427da:	jmp    427f0 <rpl_glob+0xad0>
   427dc:	nop    DWORD PTR [rax+0x0]
   427e0:	mov    rcx,QWORD PTR [rsp+0xb8]
   427e8:	mov    rdx,QWORD PTR [rsp+0xb0]
   427f0:	mov    r8,rbp
   427f3:	mov    rsi,r14
   427f6:	mov    rdi,r13
   427f9:	call   12340 <getpwnam_r@plt>
   427fe:	cmp    eax,0x22
   42801:	jne    42ca0 <rpl_glob+0xf80>
   42807:	mov    rdi,r15
   4280a:	call   41200 <gl_scratch_buffer_grow>
   4280f:	test   al,al
   42811:	jne    427e0 <rpl_glob+0xac0>
   42813:	mov    DWORD PTR [rsp+0x48],0x1
   4281b:	jmp    42518 <rpl_glob+0x7f8>
   42820:	mov    rcx,QWORD PTR [rsp+0x8]
   42825:	mov    rax,rdx
   42828:	cmp    rdx,QWORD PTR [rsp+0x8]
   4282d:	ja     42841 <rpl_glob+0xb21>
   4282f:	jmp    42847 <rpl_glob+0xb27>
   42831:	nop    DWORD PTR [rax+0x0]
   42838:	sub    rax,0x1
   4283c:	cmp    rcx,rax
   4283f:	je     42847 <rpl_glob+0xb27>
   42841:	cmp    BYTE PTR [rax-0x1],0x5c
   42845:	je     42838 <rpl_glob+0xb18>
   42847:	mov    rdi,QWORD PTR [rsp+0x8]
   4284c:	lea    rcx,[rdi+r14*1]
   42850:	sub    rcx,rax
   42853:	and    ecx,0x1
   42856:	je     41ffe <rpl_glob+0x2de>
   4285c:	mov    r13d,ebx
   4285f:	mov    BYTE PTR [rdx],0x0
   42862:	mov    rdx,QWORD PTR [rsp]
   42866:	mov    rcx,r12
   42869:	and    r13d,0xfffff7ef
   42870:	mov    esi,r13d
   42873:	or     esi,0x2
   42876:	call   41d20 <rpl_glob>
   4287b:	mov    ebp,eax
   4287d:	test   eax,eax
   4287f:	je     4317a <rpl_glob+0x145a>
   42885:	cmp    eax,0x3
   42888:	jne    4202e <rpl_glob+0x30e>
   4288e:	cmp    ebx,r13d
   42891:	je     4202e <rpl_glob+0x30e>
   42897:	mov    r14,QWORD PTR [r12]
   4289b:	mov    r13,QWORD PTR [r12+0x10]
   428a0:	mov    QWORD PTR [rsp+0x68],0x0
   428a9:	mov    DWORD PTR [rsp+0x10],0x1
   428b1:	lea    rax,[r14+r13*1]
   428b5:	mov    QWORD PTR [rsp+0x18],rax
   428ba:	lea    rax,[rsp+0x60]
   428bf:	mov    QWORD PTR [rsp+0x20],rax
   428c4:	jmp    422e0 <rpl_glob+0x5c0>
   428c9:	mov    QWORD PTR [rsp+0x68],0x0
   428d2:	lea    rax,[rsp+0x60]
   428d7:	mov    QWORD PTR [rsp+0x20],rax
   428dc:	jmp    422e0 <rpl_glob+0x5c0>
   428e1:	nop    DWORD PTR [rax+0x0]
   428e8:	mov    rdi,QWORD PTR [rsp+0x10]
   428ed:	mov    r15,QWORD PTR [rsp+0x30]
   428f2:	call   10430 <free@plt>
   428f7:	mov    r14,QWORD PTR [r12]
   428fb:	cmp    r14,QWORD PTR [rsp+0x28]
   42900:	jne    41f28 <rpl_glob+0x208>
   42906:	test   ebx,0x810
   4290c:	jne    41f6c <rpl_glob+0x24c>
   42912:	mov    DWORD PTR [rsp+0x48],0x3
   4291a:	jmp    41f28 <rpl_glob+0x208>
   4291f:	mov    rax,QWORD PTR [rsp+0x8]
   42924:	movzx  eax,BYTE PTR [rax+0x2]
   42928:	test   al,al
   4292a:	je     42938 <rpl_glob+0xc18>
   4292c:	cmp    al,0x2f
   4292e:	jne    4209e <rpl_glob+0x37e>
   42934:	nop    DWORD PTR [rax+0x0]
   42938:	lea    rdi,[rip+0x15883]        # 581c2 <fillbuf+0x82>
   4293f:	call   11920 <getenv@plt>
   42944:	mov    r13,rax
   42947:	test   rax,rax
   4294a:	je     42b70 <rpl_glob+0xe50>
   42950:	cmp    BYTE PTR [rax],0x0
   42953:	je     42b70 <rpl_glob+0xe50>
   42959:	xor    r8d,r8d
   4295c:	mov    rax,QWORD PTR [rsp+0x8]
   42961:	cmp    BYTE PTR [rax+0x1],0x0
   42965:	jne    42fb2 <rpl_glob+0x1292>
   4296b:	mov    r14d,DWORD PTR [rsp+0x10]
   42970:	test   r14d,r14d
   42973:	jne    430d8 <rpl_glob+0x13b8>
   42979:	mov    rdi,r13
   4297c:	mov    DWORD PTR [rsp+0x8],r8d
   42981:	call   10ab0 <strlen@plt>
   42986:	mov    r8d,DWORD PTR [rsp+0x8]
   4298b:	mov    QWORD PTR [rsp+0x8],r13
   42990:	mov    r14,rax
   42993:	mov    DWORD PTR [rsp+0x10],r8d
   42998:	mov    r8d,0x1
   4299e:	test   rbp,rbp
   429a1:	jne    42538 <rpl_glob+0x818>
   429a7:	mov    rax,QWORD PTR [r12+0x10]
   429ac:	add    rax,QWORD PTR [r12]
   429b0:	movabs rdx,0x1ffffffffffffffd
   429ba:	mov    rdi,QWORD PTR [r12+0x8]
   429bf:	cmp    rax,rdx
   429c2:	ja     42a30 <rpl_glob+0xd10>
   429c4:	lea    r13,[rax*8+0x10]
   429cc:	mov    rsi,r13
   429cf:	call   12120 <realloc@plt>
   429d4:	mov    rbp,rax
   429d7:	test   rax,rax
   429da:	je     42a23 <rpl_glob+0xd03>
   429dc:	mov    QWORD PTR [r12+0x8],rax
   429e1:	lea    r15,[r13-0x10]
   429e5:	test   bl,0x2
   429e8:	jne    42a58 <rpl_glob+0xd38>
   429ea:	mov    esi,DWORD PTR [rsp+0x10]
   429ee:	add    r15,rbp
   429f1:	test   esi,esi
   429f3:	jne    42e4b <rpl_glob+0x112b>
   429f9:	mov    rdi,QWORD PTR [rsp+0x8]
   429fe:	call   124a0 <strdup@plt>
   42a03:	mov    QWORD PTR [r15],rax
   42a06:	test   rax,rax
   42a09:	je     42a23 <rpl_glob+0xd03>
   42a0b:	mov    QWORD PTR [rbp+r13*1-0x8],0x0
   42a14:	add    QWORD PTR [r12],0x1
   42a19:	mov    DWORD PTR [r12+0x18],ebx
   42a1e:	jmp    41f28 <rpl_glob+0x208>
   42a23:	mov    rdi,QWORD PTR [r12+0x8]
   42a28:	nop    DWORD PTR [rax+rax*1+0x0]
   42a30:	call   10430 <free@plt>
   42a35:	mov    QWORD PTR [r12],0x0
   42a3d:	mov    QWORD PTR [r12+0x8],0x0
   42a46:	mov    DWORD PTR [rsp+0x48],0x1
   42a4e:	jmp    42518 <rpl_glob+0x7f8>
   42a53:	nop    DWORD PTR [rax+rax*1+0x0]
   42a58:	mov    rdi,QWORD PTR [rsp+0x8]
   42a5d:	mov    rdx,r12
   42a60:	mov    esi,ebx
   42a62:	call   415a0 <is_dir>
   42a67:	mov    rbp,QWORD PTR [r12+0x8]
   42a6c:	test   al,al
   42a6e:	je     429ea <rpl_glob+0xcca>
   42a74:	lea    rdi,[r14+0x2]
   42a78:	call   11af0 <malloc@plt>
   42a7d:	mov    QWORD PTR [rbp+r13*1-0x10],rax
   42a82:	mov    rdi,rax
   42a85:	test   rax,rax
   42a88:	je     42a23 <rpl_glob+0xd03>
   42a8a:	mov    rsi,QWORD PTR [rsp+0x8]
   42a8f:	mov    rdx,r14
   42a92:	call   11940 <mempcpy@plt>
   42a97:	mov    r8d,DWORD PTR [rsp+0x10]
   42a9c:	mov    edi,0x2f
   42aa1:	mov    WORD PTR [rax],di
   42aa4:	test   r8d,r8d
   42aa7:	je     42a0b <rpl_glob+0xceb>
   42aad:	mov    rdi,QWORD PTR [rsp+0x8]
   42ab2:	call   10430 <free@plt>
   42ab7:	mov    rbp,QWORD PTR [r12+0x8]
   42abc:	jmp    42a0b <rpl_glob+0xceb>
   42ac1:	nop    DWORD PTR [rax+0x0]
   42ac8:	mov    rax,QWORD PTR [rsp+0x8]
   42acd:	lea    rdx,[rax+r14*1-0x1]
   42ad2:	cmp    BYTE PTR [rdx],0x5c
   42ad5:	jne    421ea <rpl_glob+0x4ca>
   42adb:	mov    rcx,QWORD PTR [rsp+0x8]
   42ae0:	mov    rax,rdx
   42ae3:	cmp    rdx,QWORD PTR [rsp+0x8]
   42ae8:	ja     42af9 <rpl_glob+0xdd9>
   42aea:	jmp    42aff <rpl_glob+0xddf>
   42aec:	nop    DWORD PTR [rax+0x0]
   42af0:	sub    rax,0x1
   42af4:	cmp    rax,rcx
   42af7:	je     42aff <rpl_glob+0xddf>
   42af9:	cmp    BYTE PTR [rax-0x1],0x5c
   42afd:	je     42af0 <rpl_glob+0xdd0>
   42aff:	mov    rcx,QWORD PTR [rsp+0x8]
   42b04:	add    rcx,r14
   42b07:	sub    rcx,rax
   42b0a:	and    ecx,0x1
   42b0d:	je     421ea <rpl_glob+0x4ca>
   42b13:	mov    BYTE PTR [rdx],0x0
   42b16:	jmp    421ea <rpl_glob+0x4ca>
   42b1b:	mov    rdx,QWORD PTR [rsp+0x20]
   42b20:	sub    rdx,QWORD PTR [rsp+0x8]
   42b25:	mov    rdi,rdx
   42b28:	mov    QWORD PTR [rsp+0x28],rdx
   42b2d:	call   11af0 <malloc@plt>
   42b32:	mov    rdx,QWORD PTR [rsp+0x28]
   42b37:	test   rax,rax
   42b3a:	mov    r13,rax
   42b3d:	je     42813 <rpl_glob+0xaf3>
   42b43:	mov    rax,QWORD PTR [rsp+0x8]
   42b48:	sub    rdx,0x1
   42b4c:	mov    rdi,r13
   42b4f:	lea    rsi,[rax+0x1]
   42b53:	call   11940 <mempcpy@plt>
   42b58:	mov    BYTE PTR [rax],0x0
   42b5b:	mov    DWORD PTR [rsp+0x4c],0x1
   42b63:	jmp    42787 <rpl_glob+0xa67>
   42b68:	nop    DWORD PTR [rax+rax*1+0x0]
   42b70:	lea    rax,[rsp+0xc0]
   42b78:	mov    DWORD PTR [rsp+0x30],ebx
   42b7c:	mov    esi,0x400
   42b81:	mov    QWORD PTR [rsp+0x20],rax
   42b86:	mov    rdi,rax
   42b89:	mov    QWORD PTR [rsp+0xb0],rax
   42b91:	lea    rax,[rsp+0x58]
   42b96:	mov    QWORD PTR [rsp+0xb8],0x400
   42ba2:	mov    rbx,rax
   42ba5:	mov    QWORD PTR [rsp+0x28],rbp
   42baa:	jmp    42bde <rpl_glob+0xebe>
   42bac:	nop    DWORD PTR [rax+0x0]
   42bb0:	cmp    eax,0x22
   42bb3:	jne    42e9e <rpl_glob+0x117e>
   42bb9:	lea    rdi,[rsp+0xb0]
   42bc1:	call   41200 <gl_scratch_buffer_grow>
   42bc6:	test   al,al
   42bc8:	je     42813 <rpl_glob+0xaf3>
   42bce:	mov    rsi,QWORD PTR [rsp+0xb8]
   42bd6:	mov    rdi,QWORD PTR [rsp+0xb0]
   42bde:	mov    QWORD PTR [rsp+0x58],0x0
   42be7:	call   12370 <getlogin_r@plt>
   42bec:	test   eax,eax
   42bee:	jne    42bb0 <rpl_glob+0xe90>
   42bf0:	mov    rbp,QWORD PTR [rsp+0xb0]
   42bf8:	mov    rdi,rbp
   42bfb:	call   10ab0 <strlen@plt>
   42c00:	lea    rsi,[rsp+0x60]
   42c05:	mov    r8,rbx
   42c08:	mov    rdi,rbp
   42c0b:	mov    rcx,QWORD PTR [rsp+0xb8]
   42c13:	add    rax,0x1
   42c17:	lea    rdx,[rbp+rax*1+0x0]
   42c1c:	sub    rcx,rax
   42c1f:	call   12340 <getpwnam_r@plt>
   42c24:	jmp    42bb0 <rpl_glob+0xe90>
   42c26:	cs nop WORD PTR [rax+rax*1+0x0]
   42c30:	mov    rdi,QWORD PTR [rsp+0x20]
   42c35:	call   431c0 <rpl_globfree>
   42c3a:	mov    DWORD PTR [rsp+0x48],0x1
   42c42:	jmp    42518 <rpl_glob+0x7f8>
   42c47:	nop    WORD PTR [rax+rax*1+0x0]
   42c50:	mov    ebx,edx
   42c52:	jmp    4257b <rpl_glob+0x85b>
   42c57:	nop    WORD PTR [rax+rax*1+0x0]
   42c60:	mov    rdx,QWORD PTR [r12]
   42c64:	mov    rax,QWORD PTR [r12+0x8]
   42c69:	mov    rdi,QWORD PTR [rsp+0x8]
   42c6e:	sub    rdx,r13
   42c71:	add    r13,QWORD PTR [r12+0x10]
   42c76:	lea    rsi,[rax+r13*8]
   42c7a:	call   414c0 <prefix_array>
   42c7f:	test   eax,eax
   42c81:	je     42584 <rpl_glob+0x864>
   42c87:	mov    rdi,r12
   42c8a:	call   431c0 <rpl_globfree>
   42c8f:	mov    QWORD PTR [r12],0x0
   42c97:	jmp    42813 <rpl_glob+0xaf3>
   42c9c:	nop    DWORD PTR [rax+0x0]
   42ca0:	mov    r10d,DWORD PTR [rsp+0x4c]
   42ca5:	mov    r14,QWORD PTR [rsp+0x30]
   42caa:	mov    rbp,QWORD PTR [rsp+0x38]
   42caf:	mov    r15,QWORD PTR [rsp+0x40]
   42cb4:	test   r10d,r10d
   42cb7:	jne    430b9 <rpl_glob+0x1399>
   42cbd:	mov    rax,QWORD PTR [rsp+0x58]
   42cc2:	test   rax,rax
   42cc5:	je     42f88 <rpl_glob+0x1268>
   42ccb:	mov    r13,QWORD PTR [rax+0x20]
   42ccf:	mov    rdi,r13
   42cd2:	call   10ab0 <strlen@plt>
   42cd7:	mov    rdi,QWORD PTR [rsp+0x20]
   42cdc:	mov    rdx,rax
   42cdf:	test   rdi,rdi
   42ce2:	je     43056 <rpl_glob+0x1336>
   42ce8:	mov    QWORD PTR [rsp+0x30],rax
   42ced:	call   10ab0 <strlen@plt>
   42cf2:	mov    rdx,QWORD PTR [rsp+0x30]
   42cf7:	mov    QWORD PTR [rsp+0x38],rax
   42cfc:	lea    r14,[rdx+rax*1]
   42d00:	mov    r9d,DWORD PTR [rsp+0x10]
   42d05:	xor    eax,eax
   42d07:	lea    rdi,[r14+0x1]
   42d0b:	mov    QWORD PTR [rsp+0x30],rdx
   42d10:	test   r9d,r9d
   42d13:	cmovne rax,QWORD PTR [rsp+0x8]
   42d19:	mov    QWORD PTR [rsp+0x10],rax
   42d1e:	call   11af0 <malloc@plt>
   42d23:	mov    r8,QWORD PTR [rsp+0xb0]
   42d2b:	mov    rdx,QWORD PTR [rsp+0x30]
   42d30:	test   rax,rax
   42d33:	mov    QWORD PTR [rsp+0x8],rax
   42d38:	je     43182 <rpl_glob+0x1462>
   42d3e:	mov    rdi,QWORD PTR [rsp+0x8]
   42d43:	mov    rsi,r13
   42d46:	call   11940 <mempcpy@plt>
   42d4b:	mov    rcx,QWORD PTR [rsp+0x20]
   42d50:	test   rcx,rcx
   42d53:	je     42d65 <rpl_glob+0x1045>
   42d55:	mov    rdx,QWORD PTR [rsp+0x38]
   42d5a:	mov    rsi,rcx
   42d5d:	mov    rdi,rax
   42d60:	call   11940 <mempcpy@plt>
   42d65:	mov    BYTE PTR [rax],0x0
   42d68:	mov    rdi,QWORD PTR [rsp+0x10]
   42d6d:	call   10430 <free@plt>
   42d72:	mov    DWORD PTR [rsp+0x10],0x1
   42d7a:	mov    r8d,0x1
   42d80:	mov    rdi,QWORD PTR [rsp+0xb0]
   42d88:	cmp    rdi,QWORD PTR [rsp+0x28]
   42d8d:	je     4299e <rpl_glob+0xc7e>
   42d93:	mov    DWORD PTR [rsp+0x20],r8d
   42d98:	call   10430 <free@plt>
   42d9d:	mov    r8d,DWORD PTR [rsp+0x20]
   42da2:	jmp    4299e <rpl_glob+0xc7e>
   42da7:	nop    WORD PTR [rax+rax*1+0x0]
   42db0:	mov    rdi,QWORD PTR [rsp+0x20]
   42db5:	mov    DWORD PTR [rsp],eax
   42db8:	call   431c0 <rpl_globfree>
   42dbd:	mov    rdi,r15
   42dc0:	call   431c0 <rpl_globfree>
   42dc5:	mov    eax,DWORD PTR [rsp]
   42dc8:	mov    QWORD PTR [r15],0x0
   42dcf:	mov    DWORD PTR [rsp+0x48],eax
   42dd3:	jmp    42518 <rpl_glob+0x7f8>
   42dd8:	nop    DWORD PTR [rax+rax*1+0x0]
   42de0:	mov    r12,r15
   42de3:	mov    rdi,QWORD PTR [rsp+0x20]
   42de8:	call   431c0 <rpl_globfree>
   42ded:	mov    rdi,r12
   42df0:	call   431c0 <rpl_globfree>
   42df5:	mov    QWORD PTR [r12],0x0
   42dfd:	mov    DWORD PTR [rsp+0x48],0x1
   42e05:	jmp    42518 <rpl_glob+0x7f8>
   42e0a:	call   104b0 <__errno_location@plt>
   42e0f:	mov    DWORD PTR [rsp+0x48],0xffffffff
   42e17:	mov    DWORD PTR [rax],0x16
   42e1d:	jmp    41f28 <rpl_glob+0x208>
   42e22:	lea    rax,[rsp+0x60]
   42e27:	mov    QWORD PTR [rsp+0x68],0x0
   42e30:	mov    DWORD PTR [rsp+0x10],0x0
   42e38:	mov    QWORD PTR [rsp+0x8],0x0
   42e41:	mov    QWORD PTR [rsp+0x20],rax
   42e46:	jmp    422e0 <rpl_glob+0x5c0>
   42e4b:	mov    rax,QWORD PTR [rsp+0x8]
   42e50:	mov    QWORD PTR [r15],rax
   42e53:	jmp    42a0b <rpl_glob+0xceb>
   42e58:	mov    rax,QWORD PTR [r12+0x30]
   42e5d:	mov    QWORD PTR [rsp+0x90],rax
   42e65:	mov    rax,QWORD PTR [r12+0x28]
   42e6a:	mov    QWORD PTR [rsp+0x88],rax
   42e72:	mov    rax,QWORD PTR [r12+0x20]
   42e77:	mov    QWORD PTR [rsp+0x80],rax
   42e7f:	mov    rax,QWORD PTR [r12+0x40]
   42e84:	mov    QWORD PTR [rsp+0xa0],rax
   42e8c:	mov    rax,QWORD PTR [r12+0x38]
   42e91:	mov    QWORD PTR [rsp+0x98],rax
   42e99:	jmp    421f3 <rpl_glob+0x4d3>
   42e9e:	mov    rbp,QWORD PTR [rsp+0x28]
   42ea3:	mov    ebx,DWORD PTR [rsp+0x30]
   42ea7:	mov    edx,eax
   42ea9:	mov    r9,QWORD PTR [rsp+0xb0]
   42eb1:	test   eax,eax
   42eb3:	je     43080 <rpl_glob+0x1360>
   42eb9:	xor    r8d,r8d
   42ebc:	cmp    r9,QWORD PTR [rsp+0x20]
   42ec1:	je     43067 <rpl_glob+0x1347>
   42ec7:	mov    rdi,r9
   42eca:	mov    DWORD PTR [rsp+0x28],edx
   42ece:	mov    DWORD PTR [rsp+0x20],r8d
   42ed3:	call   10430 <free@plt>
   42ed8:	mov    edx,DWORD PTR [rsp+0x28]
   42edc:	mov    r8d,DWORD PTR [rsp+0x20]
   42ee1:	test   edx,edx
   42ee3:	jne    430c6 <rpl_glob+0x13a6>
   42ee9:	test   r13,r13
   42eec:	je     42813 <rpl_glob+0xaf3>
   42ef2:	cmp    BYTE PTR [r13+0x0],0x0
   42ef7:	jne    4295c <rpl_glob+0xc3c>
   42efd:	test   r8d,r8d
   42f00:	je     42f0a <rpl_glob+0x11ea>
   42f02:	mov    rdi,r13
   42f05:	call   10430 <free@plt>
   42f0a:	mov    r8d,ebx
   42f0d:	lea    r13,[rip+0x152ac]        # 581c0 <fillbuf+0x80>
   42f14:	and    r8d,0x4000
   42f1b:	je     4295c <rpl_glob+0xc3c>
   42f21:	jmp    42479 <rpl_glob+0x759>
   42f26:	mov    r13,QWORD PTR [rsp+0x8]
   42f2b:	mov    esi,0x5c
   42f30:	mov    rdi,r13
   42f33:	call   109e0 <strchr@plt>
   42f38:	test   rax,rax
   42f3b:	je     4276d <rpl_glob+0xa4d>
   42f41:	mov    rdi,rax
   42f44:	mov    QWORD PTR [rsp+0x20],rax
   42f49:	call   10ab0 <strlen@plt>
   42f4e:	mov    r8,QWORD PTR [rsp+0x20]
   42f53:	add    rax,r8
   42f56:	mov    QWORD PTR [rsp+0x28],r8
   42f5b:	mov    QWORD PTR [rsp+0x20],rax
   42f60:	sub    rax,r13
   42f63:	mov    rdi,rax
   42f66:	call   11af0 <malloc@plt>
   42f6b:	mov    r8,QWORD PTR [rsp+0x28]
   42f70:	test   rax,rax
   42f73:	mov    r13,rax
   42f76:	jne    42105 <rpl_glob+0x3e5>
   42f7c:	jmp    42813 <rpl_glob+0xaf3>
   42f81:	nop    DWORD PTR [rax+0x0]
   42f88:	mov    r8d,ebx
   42f8b:	and    r8d,0x4000
   42f92:	je     42d80 <rpl_glob+0x1060>
   42f98:	jmp    42479 <rpl_glob+0x759>
   42f9d:	test   rbp,rbp
   42fa0:	jne    42b58 <rpl_glob+0xe38>
   42fa6:	mov    BYTE PTR [rax],0x5c
   42fa9:	add    rax,0x1
   42fad:	jmp    42b58 <rpl_glob+0xe38>
   42fb2:	mov    rdi,r13
   42fb5:	mov    DWORD PTR [rsp+0x30],r8d
   42fba:	call   10ab0 <strlen@plt>
   42fbf:	mov    rdx,rax
   42fc2:	lea    rax,[rax+r14*1]
   42fc6:	mov    rdi,rax
   42fc9:	mov    QWORD PTR [rsp+0x28],rdx
   42fce:	mov    QWORD PTR [rsp+0x20],rax
   42fd3:	call   11af0 <malloc@plt>
   42fd8:	mov    rdx,QWORD PTR [rsp+0x28]
   42fdd:	mov    r8d,DWORD PTR [rsp+0x30]
   42fe2:	test   rax,rax
   42fe5:	je     4314f <rpl_glob+0x142f>
   42feb:	mov    rsi,r13
   42fee:	mov    rdi,rax
   42ff1:	mov    DWORD PTR [rsp+0x30],r8d
   42ff6:	mov    QWORD PTR [rsp+0x28],rax
   42ffb:	call   11940 <mempcpy@plt>
   43000:	mov    rdx,r14
   43003:	mov    rdi,rax
   43006:	mov    rax,QWORD PTR [rsp+0x8]
   4300b:	lea    rsi,[rax+0x1]
   4300f:	call   11220 <memcpy@plt>
   43014:	mov    r11d,DWORD PTR [rsp+0x10]
   43019:	mov    rcx,QWORD PTR [rsp+0x28]
   4301e:	mov    r8d,DWORD PTR [rsp+0x30]
   43023:	test   r11d,r11d
   43026:	jne    4311a <rpl_glob+0x13fa>
   4302c:	mov    r14,QWORD PTR [rsp+0x20]
   43031:	sub    r14,0x1
   43035:	test   r8d,r8d
   43038:	jne    430ef <rpl_glob+0x13cf>
   4303e:	mov    QWORD PTR [rsp+0x8],rcx
   43043:	mov    r8d,0x1
   43049:	mov    DWORD PTR [rsp+0x10],0x1
   43051:	jmp    4299e <rpl_glob+0xc7e>
   43056:	mov    QWORD PTR [rsp+0x38],0x0
   4305f:	mov    r14,rax
   43062:	jmp    42d00 <rpl_glob+0xfe0>
   43067:	test   r13,r13
   4306a:	je     42f0a <rpl_glob+0x11ea>
   43070:	cmp    BYTE PTR [r13+0x0],0x0
   43075:	je     42f0a <rpl_glob+0x11ea>
   4307b:	jmp    4295c <rpl_glob+0xc3c>
   43080:	mov    DWORD PTR [rsp+0x28],eax
   43084:	mov    rax,QWORD PTR [rsp+0x58]
   43089:	mov    QWORD PTR [rsp+0x30],r9
   4308e:	mov    rdi,QWORD PTR [rax+0x20]
   43092:	call   124a0 <strdup@plt>
   43097:	mov    r9,QWORD PTR [rsp+0x30]
   4309c:	cmp    r9,QWORD PTR [rsp+0x20]
   430a1:	mov    r8d,0x1
   430a7:	mov    edx,DWORD PTR [rsp+0x28]
   430ab:	mov    r13,rax
   430ae:	jne    42ec7 <rpl_glob+0x11a7>
   430b4:	jmp    42ee1 <rpl_glob+0x11c1>
   430b9:	mov    rdi,r13
   430bc:	call   10430 <free@plt>
   430c1:	jmp    42cbd <rpl_glob+0xf9d>
   430c6:	test   r13,r13
   430c9:	je     42efd <rpl_glob+0x11dd>
   430cf:	jmp    42ef2 <rpl_glob+0x11d2>
   430d4:	nop    DWORD PTR [rax+0x0]
   430d8:	mov    rdi,rax
   430db:	mov    DWORD PTR [rsp+0x10],r8d
   430e0:	call   10430 <free@plt>
   430e5:	mov    r8d,DWORD PTR [rsp+0x10]
   430ea:	jmp    42979 <rpl_glob+0xc59>
   430ef:	mov    rdi,r13
   430f2:	mov    QWORD PTR [rsp+0x20],rcx
   430f7:	mov    DWORD PTR [rsp+0x8],r8d
   430fc:	call   10430 <free@plt>
   43101:	mov    r8d,DWORD PTR [rsp+0x8]
   43106:	mov    rcx,QWORD PTR [rsp+0x20]
   4310b:	mov    DWORD PTR [rsp+0x10],r8d
   43110:	mov    QWORD PTR [rsp+0x8],rcx
   43115:	jmp    4299e <rpl_glob+0xc7e>
   4311a:	mov    rdi,QWORD PTR [rsp+0x8]
   4311f:	mov    DWORD PTR [rsp+0x10],r8d
   43124:	call   10430 <free@plt>
   43129:	mov    rcx,QWORD PTR [rsp+0x28]
   4312e:	mov    r8d,DWORD PTR [rsp+0x10]
   43133:	jmp    4302c <rpl_glob+0x130c>
   43138:	call   11760 <__stack_chk_fail@plt>
   4313d:	mov    esi,ebx
   4313f:	mov    DWORD PTR [rsp+0x10],0x1
   43147:	and    esi,0x40
   4314a:	jmp    42545 <rpl_glob+0x825>
   4314f:	mov    DWORD PTR [rsp+0x48],0x1
   43157:	test   r8d,r8d
   4315a:	je     42518 <rpl_glob+0x7f8>
   43160:	mov    rdi,r13
   43163:	mov    DWORD PTR [rsp],r8d
   43167:	call   10430 <free@plt>
   4316c:	mov    r8d,DWORD PTR [rsp]
   43170:	mov    DWORD PTR [rsp+0x48],r8d
   43175:	jmp    42518 <rpl_glob+0x7f8>
   4317a:	mov    ebx,r13d
   4317d:	jmp    4201a <rpl_glob+0x2fa>
   43182:	mov    rdi,QWORD PTR [rsp+0x10]
   43187:	mov    QWORD PTR [rsp],r8
   4318b:	call   10430 <free@plt>
   43190:	mov    DWORD PTR [rsp+0x48],0x1
   43198:	mov    r8,QWORD PTR [rsp]
   4319c:	cmp    r8,QWORD PTR [rsp+0x28]
   431a1:	je     41f28 <rpl_glob+0x208>
   431a7:	mov    rdi,r8
   431aa:	call   10430 <free@plt>
   431af:	jmp    41f28 <rpl_glob+0x208>
   431b4:	cs nop WORD PTR [rax+rax*1+0x0]
   431be:	xchg   ax,ax

00000000000431c0 <rpl_globfree>:
   431c0:	endbr64 
   431c4:	push   rbp
   431c5:	mov    rbp,rdi
   431c8:	push   rbx
   431c9:	sub    rsp,0x8
   431cd:	mov    rdi,QWORD PTR [rdi+0x8]
   431d1:	test   rdi,rdi
   431d4:	je     4320b <rpl_globfree+0x4b>
   431d6:	cmp    QWORD PTR [rbp+0x0],0x0
   431db:	je     431fe <rpl_globfree+0x3e>
   431dd:	xor    ebx,ebx
   431df:	nop
   431e0:	mov    rax,QWORD PTR [rbp+0x10]
   431e4:	add    rax,rbx
   431e7:	add    rbx,0x1
   431eb:	mov    rdi,QWORD PTR [rdi+rax*8]
   431ef:	call   10430 <free@plt>
   431f4:	cmp    QWORD PTR [rbp+0x0],rbx
   431f8:	mov    rdi,QWORD PTR [rbp+0x8]
   431fc:	ja     431e0 <rpl_globfree+0x20>
   431fe:	call   10430 <free@plt>
   43203:	mov    QWORD PTR [rbp+0x8],0x0
   4320b:	add    rsp,0x8
   4320f:	pop    rbx
   43210:	pop    rbp
   43211:	ret    
   43212:	cs nop WORD PTR [rax+rax*1+0x0]
   4321c:	nop    DWORD PTR [rax+0x0]

0000000000043220 <rpl_glob_pattern_p>:
   43220:	endbr64 
   43224:	movzx  eax,BYTE PTR [rdi]
   43227:	test   al,al
   43229:	je     4325d <rpl_glob_pattern_p+0x3d>
   4322b:	xor    edx,edx
   4322d:	cmp    al,0x5c
   4322f:	je     43270 <rpl_glob_pattern_p+0x50>
   43231:	jg     43248 <rpl_glob_pattern_p+0x28>
   43233:	cmp    al,0x5b
   43235:	je     43260 <rpl_glob_pattern_p+0x40>
   43237:	cmp    al,0x2a
   43239:	je     4323f <rpl_glob_pattern_p+0x1f>
   4323b:	cmp    al,0x3f
   4323d:	jne    43251 <rpl_glob_pattern_p+0x31>
   4323f:	mov    eax,0x1
   43244:	ret    
   43245:	nop    DWORD PTR [rax]
   43248:	cmp    al,0x5d
   4324a:	jne    43251 <rpl_glob_pattern_p+0x31>
   4324c:	test   dl,0x4
   4324f:	jne    4323f <rpl_glob_pattern_p+0x1f>
   43251:	movzx  eax,BYTE PTR [rdi+0x1]
   43255:	add    rdi,0x1
   43259:	test   al,al
   4325b:	jne    4322d <rpl_glob_pattern_p+0xd>
   4325d:	xor    eax,eax
   4325f:	ret    
   43260:	movzx  eax,BYTE PTR [rdi+0x1]
   43264:	or     edx,0x4
   43267:	jmp    43255 <rpl_glob_pattern_p+0x35>
   43269:	nop    DWORD PTR [rax+0x0]
   43270:	movzx  eax,BYTE PTR [rdi+0x1]
   43274:	test   esi,esi
   43276:	je     43255 <rpl_glob_pattern_p+0x35>
   43278:	test   al,al
   4327a:	je     4325d <rpl_glob_pattern_p+0x3d>
   4327c:	movzx  eax,BYTE PTR [rdi+0x2]
   43280:	or     edx,0x2
   43283:	add    rdi,0x1
   43287:	jmp    43255 <rpl_glob_pattern_p+0x35>
   43289:	nop    DWORD PTR [rax+0x0]

0000000000043290 <hard_locale>:
   43290:	endbr64 
   43294:	sub    rsp,0x118
   4329b:	mov    edx,0x101
   432a0:	mov    rax,QWORD PTR fs:0x28
   432a9:	mov    QWORD PTR [rsp+0x108],rax
   432b1:	xor    eax,eax
   432b3:	mov    rsi,rsp
   432b6:	call   454b0 <setlocale_null_r>
   432bb:	mov    r8d,eax
   432be:	xor    eax,eax
   432c0:	test   r8d,r8d
   432c3:	jne    432da <hard_locale+0x4a>
   432c5:	cmp    WORD PTR [rsp],0x43
   432ca:	je     432da <hard_locale+0x4a>
   432cc:	cmp    DWORD PTR [rsp],0x49534f50
   432d3:	je     432f8 <hard_locale+0x68>
   432d5:	mov    eax,0x1
   432da:	mov    rdx,QWORD PTR [rsp+0x108]
   432e2:	sub    rdx,QWORD PTR fs:0x28
   432eb:	jne    43304 <hard_locale+0x74>
   432ed:	add    rsp,0x118
   432f4:	ret    
   432f5:	nop    DWORD PTR [rax]
   432f8:	xor    eax,eax
   432fa:	cmp    WORD PTR [rsp+0x4],0x58
   43300:	jne    432d5 <hard_locale+0x45>
   43302:	jmp    432da <hard_locale+0x4a>
   43304:	call   11760 <__stack_chk_fail@plt>
   43309:	nop    DWORD PTR [rax+0x0]

0000000000043310 <raw_hasher>:
   43310:	endbr64 
   43314:	mov    rax,rdi
   43317:	xor    edx,edx
   43319:	ror    rax,0x3
   4331d:	div    rsi
   43320:	mov    rax,rdx
   43323:	ret    
   43324:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4332f:	nop

0000000000043330 <raw_comparator>:
   43330:	endbr64 
   43334:	cmp    rsi,rdi
   43337:	sete   al
   4333a:	ret    
   4333b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000043340 <check_tuning>:
   43340:	mov    rax,QWORD PTR [rdi+0x28]
   43344:	lea    rdx,[rip+0x14ef5]        # 58240 <default_tuning>
   4334b:	cmp    rax,rdx
   4334e:	je     433c0 <check_tuning+0x80>
   43350:	movss  xmm0,DWORD PTR [rax+0x8]
   43355:	comiss xmm0,DWORD PTR [rip+0x14ef8]        # 58254 <default_tuning+0x14>
   4335c:	jbe    433af <check_tuning+0x6f>
   4335e:	movss  xmm1,DWORD PTR [rip+0x14ef2]        # 58258 <default_tuning+0x18>
   43366:	comiss xmm1,xmm0
   43369:	jbe    433af <check_tuning+0x6f>
   4336b:	movss  xmm1,DWORD PTR [rax+0xc]
   43370:	comiss xmm1,DWORD PTR [rip+0x14ee5]        # 5825c <default_tuning+0x1c>
   43377:	jbe    433af <check_tuning+0x6f>
   43379:	movss  xmm1,DWORD PTR [rax]
   4337d:	comiss xmm1,DWORD PTR [rip+0xa954]        # 4dcd8 <powers.0+0x18>
   43384:	jb     433af <check_tuning+0x6f>
   43386:	addss  xmm1,DWORD PTR [rip+0x14ec6]        # 58254 <default_tuning+0x14>
   4338e:	movss  xmm2,DWORD PTR [rax+0x4]
   43393:	comiss xmm2,xmm1
   43396:	jbe    433af <check_tuning+0x6f>
   43398:	movss  xmm3,DWORD PTR [rip+0xbc28]        # 4efc8 <powers.0+0x1308>
   433a0:	comiss xmm3,xmm2
   433a3:	jb     433af <check_tuning+0x6f>
   433a5:	comiss xmm0,xmm1
   433a8:	mov    eax,0x1
   433ad:	ja     433c5 <check_tuning+0x85>
   433af:	mov    QWORD PTR [rdi+0x28],rdx
   433b3:	xor    eax,eax
   433b5:	ret    
   433b6:	cs nop WORD PTR [rax+rax*1+0x0]
   433c0:	mov    eax,0x1
   433c5:	ret    
   433c6:	cs nop WORD PTR [rax+rax*1+0x0]

00000000000433d0 <compute_bucket_size>:
   433d0:	cmp    BYTE PTR [rsi+0x10],0x0
   433d4:	jne    43420 <compute_bucket_size+0x50>
   433d6:	test   rdi,rdi
   433d9:	js     434e0 <compute_bucket_size+0x110>
   433df:	pxor   xmm0,xmm0
   433e3:	cvtsi2ss xmm0,rdi
   433e8:	xor    r8d,r8d
   433eb:	divss  xmm0,DWORD PTR [rsi+0x8]
   433f0:	comiss xmm0,DWORD PTR [rip+0x14e69]        # 58260 <default_tuning+0x20>
   433f7:	jae    434dc <compute_bucket_size+0x10c>
   433fd:	comiss xmm0,DWORD PTR [rip+0x14e60]        # 58264 <default_tuning+0x24>
   43404:	jb     43505 <compute_bucket_size+0x135>
   4340a:	subss  xmm0,DWORD PTR [rip+0x14e52]        # 58264 <default_tuning+0x24>
   43412:	cvttss2si rdi,xmm0
   43417:	btc    rdi,0x3f
   4341c:	nop    DWORD PTR [rax+0x0]
   43420:	movabs r9,0xaaaaaaaaaaaaaaab
   4342a:	mov    eax,0xa
   4342f:	cmp    rdi,rax
   43432:	cmovae rax,rdi
   43436:	mov    r8,rax
   43439:	or     r8,0x1
   4343d:	cmp    r8,0xffffffffffffffff
   43441:	je     434bc <compute_bucket_size+0xec>
   43443:	nop    DWORD PTR [rax+rax*1+0x0]
   43448:	mov    rax,r8
   4344b:	mul    r9
   4344e:	mov    rax,rdx
   43451:	and    rdx,0xfffffffffffffffe
   43455:	shr    rax,1
   43458:	add    rdx,rax
   4345b:	mov    rax,r8
   4345e:	sub    rax,rdx
   43461:	cmp    r8,0x9
   43465:	jbe    434fe <compute_bucket_size+0x12e>
   4346b:	test   rax,rax
   4346e:	je     434b2 <compute_bucket_size+0xe2>
   43470:	mov    edi,0x10
   43475:	mov    esi,0x9
   4347a:	mov    ecx,0x3
   4347f:	jmp    43491 <compute_bucket_size+0xc1>
   43481:	nop    DWORD PTR [rax+0x0]
   43488:	add    rdi,0x8
   4348c:	test   rdx,rdx
   4348f:	je     434b2 <compute_bucket_size+0xe2>
   43491:	add    rcx,0x2
   43495:	mov    rax,r8
   43498:	xor    edx,edx
   4349a:	add    rsi,rdi
   4349d:	div    rcx
   434a0:	cmp    rsi,r8
   434a3:	jb     43488 <compute_bucket_size+0xb8>
   434a5:	mov    rax,r8
   434a8:	xor    edx,edx
   434aa:	div    rcx
   434ad:	test   rdx,rdx
   434b0:	jne    434c3 <compute_bucket_size+0xf3>
   434b2:	add    r8,0x2
   434b6:	cmp    r8,0xffffffffffffffff
   434ba:	jne    43448 <compute_bucket_size+0x78>
   434bc:	xor    r8d,r8d
   434bf:	mov    rax,r8
   434c2:	ret    
   434c3:	mov    rax,r8
   434c6:	shr    rax,0x3d
   434ca:	setne  al
   434cd:	bt     r8,0x3c
   434d2:	movzx  eax,al
   434d5:	jb     434bc <compute_bucket_size+0xec>
   434d7:	test   rax,rax
   434da:	jne    434bc <compute_bucket_size+0xec>
   434dc:	mov    rax,r8
   434df:	ret    
   434e0:	mov    rax,rdi
   434e3:	and    edi,0x1
   434e6:	pxor   xmm0,xmm0
   434ea:	shr    rax,1
   434ed:	or     rax,rdi
   434f0:	cvtsi2ss xmm0,rax
   434f5:	addss  xmm0,xmm0
   434f9:	jmp    433e8 <compute_bucket_size+0x18>
   434fe:	mov    ecx,0x3
   43503:	jmp    434a5 <compute_bucket_size+0xd5>
   43505:	cvttss2si rdi,xmm0
   4350a:	jmp    43420 <compute_bucket_size+0x50>
   4350f:	nop

0000000000043510 <hash_find_entry>:
   43510:	push   r14
   43512:	mov    r14,rdx
   43515:	push   r13
   43517:	mov    r13,rsi
   4351a:	push   r12
   4351c:	mov    r12d,ecx
   4351f:	push   rbp
   43520:	mov    rbp,rdi
   43523:	push   rbx
   43524:	mov    rsi,QWORD PTR [rdi+0x10]
   43528:	mov    rdi,r13
   4352b:	call   QWORD PTR [rbp+0x30]
   4352e:	cmp    rax,QWORD PTR [rbp+0x10]
   43532:	jae    12868 <hash_find_entry.cold>
   43538:	mov    rbx,rax
   4353b:	shl    rbx,0x4
   4353f:	add    rbx,QWORD PTR [rbp+0x0]
   43543:	mov    QWORD PTR [r14],rbx
   43546:	mov    rsi,QWORD PTR [rbx]
   43549:	test   rsi,rsi
   4354c:	je     435bf <hash_find_entry+0xaf>
   4354e:	cmp    rsi,r13
   43551:	je     43610 <hash_find_entry+0x100>
   43557:	mov    rdi,r13
   4355a:	call   QWORD PTR [rbp+0x38]
   4355d:	test   al,al
   4355f:	je     435b6 <hash_find_entry+0xa6>
   43561:	mov    rax,QWORD PTR [rbx]
   43564:	test   r12b,r12b
   43567:	je     435c1 <hash_find_entry+0xb1>
   43569:	mov    rdx,QWORD PTR [rbx+0x8]
   4356d:	test   rdx,rdx
   43570:	je     43600 <hash_find_entry+0xf0>
   43576:	movdqu xmm0,XMMWORD PTR [rdx]
   4357a:	movups XMMWORD PTR [rbx],xmm0
   4357d:	mov    QWORD PTR [rdx],0x0
   43584:	mov    rcx,QWORD PTR [rbp+0x48]
   43588:	mov    QWORD PTR [rdx+0x8],rcx
   4358c:	pop    rbx
   4358d:	mov    QWORD PTR [rbp+0x48],rdx
   43591:	pop    rbp
   43592:	pop    r12
   43594:	pop    r13
   43596:	pop    r14
   43598:	ret    
   43599:	nop    DWORD PTR [rax+0x0]
   435a0:	mov    rsi,QWORD PTR [rax]
   435a3:	cmp    rsi,r13
   435a6:	je     435d0 <hash_find_entry+0xc0>
   435a8:	mov    rdi,r13
   435ab:	call   QWORD PTR [rbp+0x38]
   435ae:	test   al,al
   435b0:	jne    435d0 <hash_find_entry+0xc0>
   435b2:	mov    rbx,QWORD PTR [rbx+0x8]
   435b6:	mov    rax,QWORD PTR [rbx+0x8]
   435ba:	test   rax,rax
   435bd:	jne    435a0 <hash_find_entry+0x90>
   435bf:	xor    eax,eax
   435c1:	pop    rbx
   435c2:	pop    rbp
   435c3:	pop    r12
   435c5:	pop    r13
   435c7:	pop    r14
   435c9:	ret    
   435ca:	nop    WORD PTR [rax+rax*1+0x0]
   435d0:	mov    rdx,QWORD PTR [rbx+0x8]
   435d4:	mov    rax,QWORD PTR [rdx]
   435d7:	test   r12b,r12b
   435da:	je     435c1 <hash_find_entry+0xb1>
   435dc:	mov    rcx,QWORD PTR [rdx+0x8]
   435e0:	mov    QWORD PTR [rbx+0x8],rcx
   435e4:	mov    QWORD PTR [rdx],0x0
   435eb:	mov    rcx,QWORD PTR [rbp+0x48]
   435ef:	mov    QWORD PTR [rdx+0x8],rcx
   435f3:	pop    rbx
   435f4:	mov    QWORD PTR [rbp+0x48],rdx
   435f8:	pop    rbp
   435f9:	pop    r12
   435fb:	pop    r13
   435fd:	pop    r14
   435ff:	ret    
   43600:	mov    QWORD PTR [rbx],0x0
   43607:	jmp    435c1 <hash_find_entry+0xb1>
   43609:	nop    DWORD PTR [rax+0x0]
   43610:	mov    rax,rsi
   43613:	jmp    43564 <hash_find_entry+0x54>
   43618:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000043620 <transfer_entries>:
   43620:	push   r15
   43622:	push   r14
   43624:	mov    r14,rdi
   43627:	push   r13
   43629:	push   r12
   4362b:	mov    r12d,edx
   4362e:	push   rbp
   4362f:	mov    rbp,rsi
   43632:	push   rbx
   43633:	sub    rsp,0x8
   43637:	mov    rbx,QWORD PTR [rsi]
   4363a:	cmp    rbx,QWORD PTR [rsi+0x8]
   4363e:	jb     43656 <transfer_entries+0x36>
   43640:	jmp    43742 <transfer_entries+0x122>
   43645:	nop    DWORD PTR [rax]
   43648:	add    rbx,0x10
   4364c:	cmp    QWORD PTR [rbp+0x8],rbx
   43650:	jbe    43742 <transfer_entries+0x122>
   43656:	mov    r15,QWORD PTR [rbx]
   43659:	test   r15,r15
   4365c:	je     43648 <transfer_entries+0x28>
   4365e:	mov    r13,QWORD PTR [rbx+0x8]
   43662:	test   r13,r13
   43665:	je     436d1 <transfer_entries+0xb1>
   43667:	mov    rsi,QWORD PTR [r14+0x10]
   4366b:	jmp    43684 <transfer_entries+0x64>
   4366d:	nop    DWORD PTR [rax]
   43670:	mov    rcx,QWORD PTR [rax+0x8]
   43674:	mov    QWORD PTR [r13+0x8],rcx
   43678:	mov    QWORD PTR [rax+0x8],r13
   4367c:	test   rdx,rdx
   4367f:	je     436ce <transfer_entries+0xae>
   43681:	mov    r13,rdx
   43684:	mov    r15,QWORD PTR [r13+0x0]
   43688:	mov    rdi,r15
   4368b:	call   QWORD PTR [r14+0x30]
   4368f:	mov    rsi,QWORD PTR [r14+0x10]
   43693:	cmp    rax,rsi
   43696:	jae    1286d <transfer_entries.cold>
   4369c:	shl    rax,0x4
   436a0:	add    rax,QWORD PTR [r14]
   436a3:	mov    rdx,QWORD PTR [r13+0x8]
   436a7:	cmp    QWORD PTR [rax],0x0
   436ab:	jne    43670 <transfer_entries+0x50>
   436ad:	mov    QWORD PTR [rax],r15
   436b0:	mov    rax,QWORD PTR [r14+0x48]
   436b4:	add    QWORD PTR [r14+0x18],0x1
   436b9:	mov    QWORD PTR [r13+0x0],0x0
   436c1:	mov    QWORD PTR [r13+0x8],rax
   436c5:	mov    QWORD PTR [r14+0x48],r13
   436c9:	test   rdx,rdx
   436cc:	jne    43681 <transfer_entries+0x61>
   436ce:	mov    r15,QWORD PTR [rbx]
   436d1:	mov    QWORD PTR [rbx+0x8],0x0
   436d9:	test   r12b,r12b
   436dc:	jne    43648 <transfer_entries+0x28>
   436e2:	mov    rsi,QWORD PTR [r14+0x10]
   436e6:	mov    rdi,r15
   436e9:	call   QWORD PTR [r14+0x30]
   436ed:	mov    r13,rax
   436f0:	cmp    rax,QWORD PTR [r14+0x10]
   436f4:	jae    1286d <transfer_entries.cold>
   436fa:	shl    r13,0x4
   436fe:	add    r13,QWORD PTR [r14]
   43701:	cmp    QWORD PTR [r13+0x0],0x0
   43706:	je     43760 <transfer_entries+0x140>
   43708:	mov    rax,QWORD PTR [r14+0x48]
   4370c:	test   rax,rax
   4370f:	je     4376b <transfer_entries+0x14b>
   43711:	mov    rdx,QWORD PTR [rax+0x8]
   43715:	mov    QWORD PTR [r14+0x48],rdx
   43719:	mov    rdx,QWORD PTR [r13+0x8]
   4371d:	mov    QWORD PTR [rax],r15
   43720:	mov    QWORD PTR [rax+0x8],rdx
   43724:	mov    QWORD PTR [r13+0x8],rax
   43728:	mov    QWORD PTR [rbx],0x0
   4372f:	add    rbx,0x10
   43733:	sub    QWORD PTR [rbp+0x18],0x1
   43738:	cmp    QWORD PTR [rbp+0x8],rbx
   4373c:	ja     43656 <transfer_entries+0x36>
   43742:	add    rsp,0x8
   43746:	mov    eax,0x1
   4374b:	pop    rbx
   4374c:	pop    rbp
   4374d:	pop    r12
   4374f:	pop    r13
   43751:	pop    r14
   43753:	pop    r15
   43755:	ret    
   43756:	cs nop WORD PTR [rax+rax*1+0x0]
   43760:	mov    QWORD PTR [r13+0x0],r15
   43764:	add    QWORD PTR [r14+0x18],0x1
   43769:	jmp    43728 <transfer_entries+0x108>
   4376b:	mov    edi,0x10
   43770:	call   11af0 <malloc@plt>
   43775:	test   rax,rax
   43778:	jne    43719 <transfer_entries+0xf9>
   4377a:	add    rsp,0x8
   4377e:	xor    eax,eax
   43780:	pop    rbx
   43781:	pop    rbp
   43782:	pop    r12
   43784:	pop    r13
   43786:	pop    r14
   43788:	pop    r15
   4378a:	ret    
   4378b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000043790 <hash_get_n_buckets>:
   43790:	endbr64 
   43794:	mov    rax,QWORD PTR [rdi+0x10]
   43798:	ret    
   43799:	nop    DWORD PTR [rax+0x0]

00000000000437a0 <hash_get_n_buckets_used>:
   437a0:	endbr64 
   437a4:	mov    rax,QWORD PTR [rdi+0x18]
   437a8:	ret    
   437a9:	nop    DWORD PTR [rax+0x0]

00000000000437b0 <hash_get_n_entries>:
   437b0:	endbr64 
   437b4:	mov    rax,QWORD PTR [rdi+0x20]
   437b8:	ret    
   437b9:	nop    DWORD PTR [rax+0x0]

00000000000437c0 <hash_get_max_bucket_length>:
   437c0:	endbr64 
   437c4:	mov    rcx,QWORD PTR [rdi]
   437c7:	mov    rsi,QWORD PTR [rdi+0x8]
   437cb:	xor    r8d,r8d
   437ce:	cmp    rcx,rsi
   437d1:	jb     437e1 <hash_get_max_bucket_length+0x21>
   437d3:	jmp    43815 <hash_get_max_bucket_length+0x55>
   437d5:	nop    DWORD PTR [rax]
   437d8:	add    rcx,0x10
   437dc:	cmp    rcx,rsi
   437df:	jae    43815 <hash_get_max_bucket_length+0x55>
   437e1:	cmp    QWORD PTR [rcx],0x0
   437e5:	je     437d8 <hash_get_max_bucket_length+0x18>
   437e7:	mov    rax,QWORD PTR [rcx+0x8]
   437eb:	mov    edx,0x1
   437f0:	test   rax,rax
   437f3:	je     43805 <hash_get_max_bucket_length+0x45>
   437f5:	nop    DWORD PTR [rax]
   437f8:	mov    rax,QWORD PTR [rax+0x8]
   437fc:	add    rdx,0x1
   43800:	test   rax,rax
   43803:	jne    437f8 <hash_get_max_bucket_length+0x38>
   43805:	cmp    r8,rdx
   43808:	cmovb  r8,rdx
   4380c:	add    rcx,0x10
   43810:	cmp    rcx,rsi
   43813:	jb     437e1 <hash_get_max_bucket_length+0x21>
   43815:	mov    rax,r8
   43818:	ret    
   43819:	nop    DWORD PTR [rax+0x0]

0000000000043820 <hash_table_ok>:
   43820:	endbr64 
   43824:	mov    rcx,QWORD PTR [rdi]
   43827:	mov    rsi,QWORD PTR [rdi+0x8]
   4382b:	xor    edx,edx
   4382d:	xor    r8d,r8d
   43830:	cmp    rcx,rsi
   43833:	jb     43849 <hash_table_ok+0x29>
   43835:	jmp    43876 <hash_table_ok+0x56>
   43837:	nop    WORD PTR [rax+rax*1+0x0]
   43840:	add    rcx,0x10
   43844:	cmp    rcx,rsi
   43847:	jae    43876 <hash_table_ok+0x56>
   43849:	cmp    QWORD PTR [rcx],0x0
   4384d:	je     43840 <hash_table_ok+0x20>
   4384f:	mov    rax,QWORD PTR [rcx+0x8]
   43853:	add    r8,0x1
   43857:	add    rdx,0x1
   4385b:	test   rax,rax
   4385e:	je     43840 <hash_table_ok+0x20>
   43860:	mov    rax,QWORD PTR [rax+0x8]
   43864:	add    rdx,0x1
   43868:	test   rax,rax
   4386b:	jne    43860 <hash_table_ok+0x40>
   4386d:	add    rcx,0x10
   43871:	cmp    rcx,rsi
   43874:	jb     43849 <hash_table_ok+0x29>
   43876:	xor    eax,eax
   43878:	cmp    QWORD PTR [rdi+0x18],r8
   4387c:	je     4387f <hash_table_ok+0x5f>
   4387e:	ret    
   4387f:	cmp    QWORD PTR [rdi+0x20],rdx
   43883:	sete   al
   43886:	ret    
   43887:	nop    WORD PTR [rax+rax*1+0x0]

0000000000043890 <hash_print_statistics>:
   43890:	endbr64 
   43894:	push   r13
   43896:	push   r12
   43898:	xor    r12d,r12d
   4389b:	push   rbp
   4389c:	mov    rbp,rsi
   4389f:	push   rbx
   438a0:	sub    rsp,0x8
   438a4:	mov    rcx,QWORD PTR [rdi]
   438a7:	mov    rsi,QWORD PTR [rdi+0x8]
   438ab:	mov    r8,QWORD PTR [rdi+0x20]
   438af:	mov    rbx,QWORD PTR [rdi+0x10]
   438b3:	mov    r13,QWORD PTR [rdi+0x18]
   438b7:	cmp    rcx,rsi
   438ba:	jb     438c9 <hash_print_statistics+0x39>
   438bc:	jmp    438fd <hash_print_statistics+0x6d>
   438be:	xchg   ax,ax
   438c0:	add    rcx,0x10
   438c4:	cmp    rsi,rcx
   438c7:	jbe    438fd <hash_print_statistics+0x6d>
   438c9:	cmp    QWORD PTR [rcx],0x0
   438cd:	je     438c0 <hash_print_statistics+0x30>
   438cf:	mov    rax,QWORD PTR [rcx+0x8]
   438d3:	mov    edx,0x1
   438d8:	test   rax,rax
   438db:	je     438ed <hash_print_statistics+0x5d>
   438dd:	nop    DWORD PTR [rax]
   438e0:	mov    rax,QWORD PTR [rax+0x8]
   438e4:	add    rdx,0x1
   438e8:	test   rax,rax
   438eb:	jne    438e0 <hash_print_statistics+0x50>
   438ed:	cmp    r12,rdx
   438f0:	cmovb  r12,rdx
   438f4:	add    rcx,0x10
   438f8:	cmp    rsi,rcx
   438fb:	ja     438c9 <hash_print_statistics+0x39>
   438fd:	mov    rcx,r8
   43900:	lea    rdx,[rip+0x148c8]        # 581cf <fillbuf+0x8f>
   43907:	mov    rdi,rbp
   4390a:	xor    eax,eax
   4390c:	mov    esi,0x1
   43911:	call   12150 <__fprintf_chk@plt>
   43916:	xor    eax,eax
   43918:	mov    rcx,rbx
   4391b:	mov    esi,0x1
   43920:	lea    rdx,[rip+0x148c0]        # 581e7 <fillbuf+0xa7>
   43927:	mov    rdi,rbp
   4392a:	call   12150 <__fprintf_chk@plt>
   4392f:	test   r13,r13
   43932:	js     439a0 <hash_print_statistics+0x110>
   43934:	pxor   xmm0,xmm0
   43938:	cvtsi2sd xmm0,r13
   4393d:	mulsd  xmm0,QWORD PTR [rip+0xa393]        # 4dcd8 <powers.0+0x18>
   43945:	test   rbx,rbx
   43948:	js     439c9 <hash_print_statistics+0x139>
   4394a:	pxor   xmm1,xmm1
   4394e:	cvtsi2sd xmm1,rbx
   43953:	divsd  xmm0,xmm1
   43957:	mov    rcx,r13
   4395a:	mov    rdi,rbp
   4395d:	mov    esi,0x1
   43962:	lea    rdx,[rip+0x148af]        # 58218 <fillbuf+0xd8>
   43969:	mov    eax,0x1
   4396e:	call   12150 <__fprintf_chk@plt>
   43973:	add    rsp,0x8
   43977:	mov    rcx,r12
   4397a:	mov    rdi,rbp
   4397d:	pop    rbx
   4397e:	lea    rdx,[rip+0x1487a]        # 581ff <fillbuf+0xbf>
   43985:	pop    rbp
   43986:	mov    esi,0x1
   4398b:	pop    r12
   4398d:	xor    eax,eax
   4398f:	pop    r13
   43991:	jmp    12150 <__fprintf_chk@plt>
   43996:	cs nop WORD PTR [rax+rax*1+0x0]
   439a0:	mov    rax,r13
   439a3:	mov    rdx,r13
   439a6:	pxor   xmm0,xmm0
   439aa:	shr    rax,1
   439ad:	and    edx,0x1
   439b0:	or     rax,rdx
   439b3:	cvtsi2sd xmm0,rax
   439b8:	addsd  xmm0,xmm0
   439bc:	mulsd  xmm0,QWORD PTR [rip+0xa314]        # 4dcd8 <powers.0+0x18>
   439c4:	test   rbx,rbx
   439c7:	jns    4394a <hash_print_statistics+0xba>
   439c9:	mov    rax,rbx
   439cc:	and    ebx,0x1
   439cf:	pxor   xmm1,xmm1
   439d3:	shr    rax,1
   439d6:	or     rax,rbx
   439d9:	cvtsi2sd xmm1,rax
   439de:	addsd  xmm1,xmm1
   439e2:	jmp    43953 <hash_print_statistics+0xc3>
   439e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000439f0 <hash_lookup>:
   439f0:	endbr64 
   439f4:	push   r12
   439f6:	mov    r12,rsi
   439f9:	push   rbp
   439fa:	mov    rbp,rdi
   439fd:	push   rbx
   439fe:	mov    rsi,QWORD PTR [rdi+0x10]
   43a02:	mov    rdi,r12
   43a05:	call   QWORD PTR [rbp+0x30]
   43a08:	cmp    rax,QWORD PTR [rbp+0x10]
   43a0c:	jae    12872 <hash_lookup.cold>
   43a12:	mov    rbx,rax
   43a15:	shl    rbx,0x4
   43a19:	add    rbx,QWORD PTR [rbp+0x0]
   43a1d:	mov    rsi,QWORD PTR [rbx]
   43a20:	test   rsi,rsi
   43a23:	jne    43a33 <hash_lookup+0x43>
   43a25:	jmp    43a4b <hash_lookup+0x5b>
   43a27:	nop    WORD PTR [rax+rax*1+0x0]
   43a30:	mov    rsi,QWORD PTR [rbx]
   43a33:	cmp    rsi,r12
   43a36:	je     43a5b <hash_lookup+0x6b>
   43a38:	mov    rdi,r12
   43a3b:	call   QWORD PTR [rbp+0x38]
   43a3e:	test   al,al
   43a40:	jne    43a58 <hash_lookup+0x68>
   43a42:	mov    rbx,QWORD PTR [rbx+0x8]
   43a46:	test   rbx,rbx
   43a49:	jne    43a30 <hash_lookup+0x40>
   43a4b:	pop    rbx
   43a4c:	xor    eax,eax
   43a4e:	pop    rbp
   43a4f:	pop    r12
   43a51:	ret    
   43a52:	nop    WORD PTR [rax+rax*1+0x0]
   43a58:	mov    r12,QWORD PTR [rbx]
   43a5b:	mov    rax,r12
   43a5e:	pop    rbx
   43a5f:	pop    rbp
   43a60:	pop    r12
   43a62:	ret    
   43a63:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   43a6e:	xchg   ax,ax

0000000000043a70 <hash_get_first>:
   43a70:	endbr64 
   43a74:	cmp    QWORD PTR [rdi+0x20],0x0
   43a79:	je     43aa8 <hash_get_first+0x38>
   43a7b:	mov    rax,QWORD PTR [rdi]
   43a7e:	mov    rdx,QWORD PTR [rdi+0x8]
   43a82:	cmp    rax,rdx
   43a85:	jb     43a99 <hash_get_first+0x29>
   43a87:	jmp    12877 <hash_get_first.cold>
   43a8c:	nop    DWORD PTR [rax+0x0]
   43a90:	add    rax,0x10
   43a94:	cmp    rax,rdx
   43a97:	jae    43aaf <hash_get_first+0x3f>
   43a99:	mov    r8,QWORD PTR [rax]
   43a9c:	test   r8,r8
   43a9f:	je     43a90 <hash_get_first+0x20>
   43aa1:	mov    rax,r8
   43aa4:	ret    
   43aa5:	nop    DWORD PTR [rax]
   43aa8:	xor    r8d,r8d
   43aab:	mov    rax,r8
   43aae:	ret    
   43aaf:	jmp    12877 <hash_get_first.cold>
   43ab4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   43abf:	nop

0000000000043ac0 <hash_get_next>:
   43ac0:	endbr64 
   43ac4:	push   rbp
   43ac5:	mov    rbp,rdi
   43ac8:	push   rbx
   43ac9:	mov    rbx,rsi
   43acc:	sub    rsp,0x8
   43ad0:	mov    rsi,QWORD PTR [rdi+0x10]
   43ad4:	mov    rdi,rbx
   43ad7:	call   QWORD PTR [rbp+0x30]
   43ada:	cmp    rax,QWORD PTR [rbp+0x10]
   43ade:	jae    1287d <hash_get_next.cold>
   43ae4:	shl    rax,0x4
   43ae8:	add    rax,QWORD PTR [rbp+0x0]
   43aec:	mov    rdx,rax
   43aef:	jmp    43afd <hash_get_next+0x3d>
   43af1:	nop    DWORD PTR [rax+0x0]
   43af8:	test   rdx,rdx
   43afb:	je     43b0e <hash_get_next+0x4e>
   43afd:	mov    rcx,QWORD PTR [rdx]
   43b00:	mov    rdx,QWORD PTR [rdx+0x8]
   43b04:	cmp    rcx,rbx
   43b07:	jne    43af8 <hash_get_next+0x38>
   43b09:	test   rdx,rdx
   43b0c:	jne    43b40 <hash_get_next+0x80>
   43b0e:	mov    rdx,QWORD PTR [rbp+0x8]
   43b12:	jmp    43b20 <hash_get_next+0x60>
   43b14:	nop    DWORD PTR [rax+0x0]
   43b18:	mov    r8,QWORD PTR [rax]
   43b1b:	test   r8,r8
   43b1e:	jne    43b2c <hash_get_next+0x6c>
   43b20:	add    rax,0x10
   43b24:	cmp    rdx,rax
   43b27:	ja     43b18 <hash_get_next+0x58>
   43b29:	xor    r8d,r8d
   43b2c:	add    rsp,0x8
   43b30:	mov    rax,r8
   43b33:	pop    rbx
   43b34:	pop    rbp
   43b35:	ret    
   43b36:	cs nop WORD PTR [rax+rax*1+0x0]
   43b40:	mov    r8,QWORD PTR [rdx]
   43b43:	add    rsp,0x8
   43b47:	pop    rbx
   43b48:	pop    rbp
   43b49:	mov    rax,r8
   43b4c:	ret    
   43b4d:	nop    DWORD PTR [rax]

0000000000043b50 <hash_get_entries>:
   43b50:	endbr64 
   43b54:	mov    r9,QWORD PTR [rdi]
   43b57:	xor    eax,eax
   43b59:	cmp    r9,QWORD PTR [rdi+0x8]
   43b5d:	jae    43b92 <hash_get_entries+0x42>
   43b5f:	cmp    QWORD PTR [r9],0x0
   43b63:	jne    43b70 <hash_get_entries+0x20>
   43b65:	add    r9,0x10
   43b69:	cmp    QWORD PTR [rdi+0x8],r9
   43b6d:	ja     43b5f <hash_get_entries+0xf>
   43b6f:	ret    
   43b70:	mov    rcx,r9
   43b73:	jmp    43b8d <hash_get_entries+0x3d>
   43b75:	nop    DWORD PTR [rax]
   43b78:	mov    r8,QWORD PTR [rcx]
   43b7b:	add    rax,0x1
   43b7f:	mov    QWORD PTR [rsi+rax*8-0x8],r8
   43b84:	mov    rcx,QWORD PTR [rcx+0x8]
   43b88:	test   rcx,rcx
   43b8b:	je     43b65 <hash_get_entries+0x15>
   43b8d:	cmp    rdx,rax
   43b90:	ja     43b78 <hash_get_entries+0x28>
   43b92:	ret    
   43b93:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   43b9e:	xchg   ax,ax

0000000000043ba0 <hash_do_for_each>:
   43ba0:	endbr64 
   43ba4:	push   r15
   43ba6:	push   r14
   43ba8:	push   r13
   43baa:	push   r12
   43bac:	push   rbp
   43bad:	push   rbx
   43bae:	sub    rsp,0x8
   43bb2:	mov    r14,QWORD PTR [rdi]
   43bb5:	cmp    r14,QWORD PTR [rdi+0x8]
   43bb9:	jae    43c13 <hash_do_for_each+0x73>
   43bbb:	mov    r15,rdi
   43bbe:	mov    rbp,rsi
   43bc1:	mov    r13,rdx
   43bc4:	xor    r12d,r12d
   43bc7:	mov    rdi,QWORD PTR [r14]
   43bca:	test   rdi,rdi
   43bcd:	jne    43bf0 <hash_do_for_each+0x50>
   43bcf:	add    r14,0x10
   43bd3:	cmp    QWORD PTR [r15+0x8],r14
   43bd7:	ja     43bc7 <hash_do_for_each+0x27>
   43bd9:	add    rsp,0x8
   43bdd:	mov    rax,r12
   43be0:	pop    rbx
   43be1:	pop    rbp
   43be2:	pop    r12
   43be4:	pop    r13
   43be6:	pop    r14
   43be8:	pop    r15
   43bea:	ret    
   43beb:	nop    DWORD PTR [rax+rax*1+0x0]
   43bf0:	mov    rbx,r14
   43bf3:	jmp    43c08 <hash_do_for_each+0x68>
   43bf5:	nop    DWORD PTR [rax]
   43bf8:	mov    rbx,QWORD PTR [rbx+0x8]
   43bfc:	add    r12,0x1
   43c00:	test   rbx,rbx
   43c03:	je     43bcf <hash_do_for_each+0x2f>
   43c05:	mov    rdi,QWORD PTR [rbx]
   43c08:	mov    rsi,r13
   43c0b:	call   rbp
   43c0d:	test   al,al
   43c0f:	jne    43bf8 <hash_do_for_each+0x58>
   43c11:	jmp    43bd9 <hash_do_for_each+0x39>
   43c13:	xor    r12d,r12d
   43c16:	jmp    43bd9 <hash_do_for_each+0x39>
   43c18:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000043c20 <hash_string>:
   43c20:	endbr64 
   43c24:	movzx  ecx,BYTE PTR [rdi]
   43c27:	xor    edx,edx
   43c29:	test   cl,cl
   43c2b:	je     43c4d <hash_string+0x2d>
   43c2d:	nop    DWORD PTR [rax]
   43c30:	mov    rax,rdx
   43c33:	add    rdi,0x1
   43c37:	shl    rax,0x5
   43c3b:	sub    rax,rdx
   43c3e:	xor    edx,edx
   43c40:	add    rax,rcx
   43c43:	movzx  ecx,BYTE PTR [rdi]
   43c46:	div    rsi
   43c49:	test   cl,cl
   43c4b:	jne    43c30 <hash_string+0x10>
   43c4d:	mov    rax,rdx
   43c50:	ret    
   43c51:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   43c5c:	nop    DWORD PTR [rax+0x0]

0000000000043c60 <hash_reset_tuning>:
   43c60:	endbr64 
   43c64:	movabs rax,0x3f80000000000000
   43c6e:	mov    BYTE PTR [rdi+0x10],0x0
   43c72:	mov    QWORD PTR [rdi],rax
   43c75:	movabs rax,0x3fb4fdf43f4ccccd
   43c7f:	mov    QWORD PTR [rdi+0x8],rax
   43c83:	ret    
   43c84:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   43c8f:	nop

0000000000043c90 <hash_initialize>:
   43c90:	endbr64 
   43c94:	push   r15
   43c96:	lea    rax,[rip+0xfffffffffffff673]        # 43310 <raw_hasher>
   43c9d:	mov    r15,rsi
   43ca0:	push   r14
   43ca2:	mov    r14,r8
   43ca5:	push   r13
   43ca7:	mov    r13,rdi
   43caa:	mov    edi,0x50
   43caf:	push   r12
   43cb1:	push   rbp
   43cb2:	mov    rbp,rdx
   43cb5:	push   rbx
   43cb6:	mov    rbx,rcx
   43cb9:	sub    rsp,0x8
   43cbd:	test   rdx,rdx
   43cc0:	cmove  rbp,rax
   43cc4:	test   rcx,rcx
   43cc7:	lea    rax,[rip+0xfffffffffffff662]        # 43330 <raw_comparator>
   43cce:	cmove  rbx,rax
   43cd2:	call   11af0 <malloc@plt>
   43cd7:	mov    r12,rax
   43cda:	test   rax,rax
   43cdd:	je     43d66 <hash_initialize+0xd6>
   43ce3:	test   r15,r15
   43ce6:	lea    rax,[rip+0x14553]        # 58240 <default_tuning>
   43ced:	mov    rdi,r12
   43cf0:	cmove  r15,rax
   43cf4:	mov    QWORD PTR [r12+0x28],r15
   43cf9:	call   43340 <check_tuning>
   43cfe:	test   al,al
   43d00:	je     43d80 <hash_initialize+0xf0>
   43d02:	mov    rdi,r13
   43d05:	mov    rsi,r15
   43d08:	call   433d0 <compute_bucket_size>
   43d0d:	mov    QWORD PTR [r12+0x10],rax
   43d12:	mov    r13,rax
   43d15:	test   rax,rax
   43d18:	je     43d80 <hash_initialize+0xf0>
   43d1a:	mov    esi,0x10
   43d1f:	mov    rdi,rax
   43d22:	call   10f50 <calloc@plt>
   43d27:	mov    QWORD PTR [r12],rax
   43d2b:	test   rax,rax
   43d2e:	je     43d80 <hash_initialize+0xf0>
   43d30:	shl    r13,0x4
   43d34:	mov    QWORD PTR [r12+0x30],rbp
   43d39:	add    rax,r13
   43d3c:	mov    QWORD PTR [r12+0x38],rbx
   43d41:	mov    QWORD PTR [r12+0x8],rax
   43d46:	mov    QWORD PTR [r12+0x18],0x0
   43d4f:	mov    QWORD PTR [r12+0x20],0x0
   43d58:	mov    QWORD PTR [r12+0x40],r14
   43d5d:	mov    QWORD PTR [r12+0x48],0x0
   43d66:	add    rsp,0x8
   43d6a:	mov    rax,r12
   43d6d:	pop    rbx
   43d6e:	pop    rbp
   43d6f:	pop    r12
   43d71:	pop    r13
   43d73:	pop    r14
   43d75:	pop    r15
   43d77:	ret    
   43d78:	nop    DWORD PTR [rax+rax*1+0x0]
   43d80:	mov    rdi,r12
   43d83:	xor    r12d,r12d
   43d86:	call   10430 <free@plt>
   43d8b:	jmp    43d66 <hash_initialize+0xd6>
   43d8d:	nop    DWORD PTR [rax]

0000000000043d90 <hash_clear>:
   43d90:	endbr64 
   43d94:	push   r12
   43d96:	push   rbp
   43d97:	mov    rbp,rdi
   43d9a:	push   rbx
   43d9b:	mov    r12,QWORD PTR [rdi]
   43d9e:	cmp    r12,QWORD PTR [rdi+0x8]
   43da2:	jb     43dba <hash_clear+0x2a>
   43da4:	jmp    43e2b <hash_clear+0x9b>
   43da9:	nop    DWORD PTR [rax+0x0]
   43db0:	add    r12,0x10
   43db4:	cmp    QWORD PTR [rbp+0x8],r12
   43db8:	jbe    43e2b <hash_clear+0x9b>
   43dba:	cmp    QWORD PTR [r12],0x0
   43dbf:	je     43db0 <hash_clear+0x20>
   43dc1:	mov    rbx,QWORD PTR [r12+0x8]
   43dc6:	mov    rdx,QWORD PTR [rbp+0x40]
   43dca:	test   rbx,rbx
   43dcd:	jne    43ddb <hash_clear+0x4b>
   43dcf:	jmp    43e05 <hash_clear+0x75>
   43dd1:	nop    DWORD PTR [rax+0x0]
   43dd8:	mov    rbx,rax
   43ddb:	test   rdx,rdx
   43dde:	je     43de9 <hash_clear+0x59>
   43de0:	mov    rdi,QWORD PTR [rbx]
   43de3:	call   rdx
   43de5:	mov    rdx,QWORD PTR [rbp+0x40]
   43de9:	mov    rax,QWORD PTR [rbx+0x8]
   43ded:	mov    rcx,QWORD PTR [rbp+0x48]
   43df1:	mov    QWORD PTR [rbx],0x0
   43df8:	mov    QWORD PTR [rbx+0x8],rcx
   43dfc:	mov    QWORD PTR [rbp+0x48],rbx
   43e00:	test   rax,rax
   43e03:	jne    43dd8 <hash_clear+0x48>
   43e05:	test   rdx,rdx
   43e08:	je     43e10 <hash_clear+0x80>
   43e0a:	mov    rdi,QWORD PTR [r12]
   43e0e:	call   rdx
   43e10:	mov    QWORD PTR [r12],0x0
   43e18:	add    r12,0x10
   43e1c:	mov    QWORD PTR [r12-0x8],0x0
   43e25:	cmp    QWORD PTR [rbp+0x8],r12
   43e29:	ja     43dba <hash_clear+0x2a>
   43e2b:	pop    rbx
   43e2c:	mov    QWORD PTR [rbp+0x18],0x0
   43e34:	mov    QWORD PTR [rbp+0x20],0x0
   43e3c:	pop    rbp
   43e3d:	pop    r12
   43e3f:	ret    

0000000000043e40 <hash_free>:
   43e40:	endbr64 
   43e44:	push   r13
   43e46:	push   r12
   43e48:	mov    r12,rdi
   43e4b:	push   rbp
   43e4c:	push   rbx
   43e4d:	sub    rsp,0x8
   43e51:	mov    r13,QWORD PTR [rdi]
   43e54:	cmp    QWORD PTR [rdi+0x40],0x0
   43e59:	mov    rax,QWORD PTR [rdi+0x8]
   43e5d:	mov    rbp,r13
   43e60:	je     43eb3 <hash_free+0x73>
   43e62:	cmp    QWORD PTR [rdi+0x20],0x0
   43e67:	je     43eb3 <hash_free+0x73>
   43e69:	cmp    r13,rax
   43e6c:	jb     43e79 <hash_free+0x39>
   43e6e:	jmp    43eec <hash_free+0xac>
   43e70:	add    r13,0x10
   43e74:	cmp    rax,r13
   43e77:	jbe    43eaf <hash_free+0x6f>
   43e79:	mov    rdi,QWORD PTR [r13+0x0]
   43e7d:	test   rdi,rdi
   43e80:	je     43e70 <hash_free+0x30>
   43e82:	mov    rbx,r13
   43e85:	jmp    43e93 <hash_free+0x53>
   43e87:	nop    WORD PTR [rax+rax*1+0x0]
   43e90:	mov    rdi,QWORD PTR [rbx]
   43e93:	call   QWORD PTR [r12+0x40]
   43e98:	mov    rbx,QWORD PTR [rbx+0x8]
   43e9c:	test   rbx,rbx
   43e9f:	jne    43e90 <hash_free+0x50>
   43ea1:	mov    rax,QWORD PTR [r12+0x8]
   43ea6:	add    r13,0x10
   43eaa:	cmp    rax,r13
   43ead:	ja     43e79 <hash_free+0x39>
   43eaf:	mov    rbp,QWORD PTR [r12]
   43eb3:	cmp    rax,rbp
   43eb6:	jbe    43eec <hash_free+0xac>
   43eb8:	nop    DWORD PTR [rax+rax*1+0x0]
   43ec0:	mov    rbx,QWORD PTR [rbp+0x8]
   43ec4:	test   rbx,rbx
   43ec7:	je     43ee1 <hash_free+0xa1>
   43ec9:	nop    DWORD PTR [rax+0x0]
   43ed0:	mov    rdi,rbx
   43ed3:	mov    rbx,QWORD PTR [rbx+0x8]
   43ed7:	call   10430 <free@plt>
   43edc:	test   rbx,rbx
   43edf:	jne    43ed0 <hash_free+0x90>
   43ee1:	add    rbp,0x10
   43ee5:	cmp    QWORD PTR [r12+0x8],rbp
   43eea:	ja     43ec0 <hash_free+0x80>
   43eec:	mov    rbx,QWORD PTR [r12+0x48]
   43ef1:	test   rbx,rbx
   43ef4:	je     43f11 <hash_free+0xd1>
   43ef6:	cs nop WORD PTR [rax+rax*1+0x0]
   43f00:	mov    rdi,rbx
   43f03:	mov    rbx,QWORD PTR [rbx+0x8]
   43f07:	call   10430 <free@plt>
   43f0c:	test   rbx,rbx
   43f0f:	jne    43f00 <hash_free+0xc0>
   43f11:	mov    rdi,QWORD PTR [r12]
   43f15:	call   10430 <free@plt>
   43f1a:	add    rsp,0x8
   43f1e:	mov    rdi,r12
   43f21:	pop    rbx
   43f22:	pop    rbp
   43f23:	pop    r12
   43f25:	pop    r13
   43f27:	jmp    10430 <free@plt>
   43f2c:	nop    DWORD PTR [rax+0x0]

0000000000043f30 <hash_rehash>:
   43f30:	endbr64 
   43f34:	push   r13
   43f36:	push   r12
   43f38:	push   rbp
   43f39:	mov    rbp,rdi
   43f3c:	mov    rdi,rsi
   43f3f:	push   rbx
   43f40:	sub    rsp,0x68
   43f44:	mov    r12,QWORD PTR [rbp+0x28]
   43f48:	mov    rax,QWORD PTR fs:0x28
   43f51:	mov    QWORD PTR [rsp+0x58],rax
   43f56:	xor    eax,eax
   43f58:	mov    rsi,r12
   43f5b:	call   433d0 <compute_bucket_size>
   43f60:	test   rax,rax
   43f63:	je     44060 <hash_rehash+0x130>
   43f69:	mov    rbx,rax
   43f6c:	cmp    QWORD PTR [rbp+0x10],rax
   43f70:	je     44050 <hash_rehash+0x120>
   43f76:	mov    esi,0x10
   43f7b:	mov    rdi,rax
   43f7e:	call   10f50 <calloc@plt>
   43f83:	mov    QWORD PTR [rsp],rax
   43f87:	test   rax,rax
   43f8a:	je     44060 <hash_rehash+0x130>
   43f90:	mov    QWORD PTR [rsp+0x10],rbx
   43f95:	shl    rbx,0x4
   43f99:	mov    r13,rsp
   43f9c:	xor    edx,edx
   43f9e:	add    rax,rbx
   43fa1:	mov    rsi,rbp
   43fa4:	mov    rdi,r13
   43fa7:	mov    QWORD PTR [rsp+0x28],r12
   43fac:	mov    QWORD PTR [rsp+0x8],rax
   43fb1:	mov    rax,QWORD PTR [rbp+0x30]
   43fb5:	mov    QWORD PTR [rsp+0x18],0x0
   43fbe:	mov    QWORD PTR [rsp+0x30],rax
   43fc3:	mov    rax,QWORD PTR [rbp+0x38]
   43fc7:	mov    QWORD PTR [rsp+0x20],0x0
   43fd0:	mov    QWORD PTR [rsp+0x38],rax
   43fd5:	mov    rax,QWORD PTR [rbp+0x40]
   43fd9:	mov    QWORD PTR [rsp+0x40],rax
   43fde:	mov    rax,QWORD PTR [rbp+0x48]
   43fe2:	mov    QWORD PTR [rsp+0x48],rax
   43fe7:	call   43620 <transfer_entries>
   43fec:	mov    r12d,eax
   43fef:	test   al,al
   43ff1:	jne    44068 <hash_rehash+0x138>
   43ff3:	mov    rax,QWORD PTR [rsp+0x48]
   43ff8:	mov    edx,0x1
   43ffd:	mov    rsi,r13
   44000:	mov    rdi,rbp
   44003:	mov    QWORD PTR [rbp+0x48],rax
   44007:	call   43620 <transfer_entries>
   4400c:	test   al,al
   4400e:	je     12882 <hash_rehash.cold>
   44014:	xor    edx,edx
   44016:	mov    rsi,r13
   44019:	mov    rdi,rbp
   4401c:	call   43620 <transfer_entries>
   44021:	test   al,al
   44023:	je     12882 <hash_rehash.cold>
   44029:	mov    rdi,QWORD PTR [rsp]
   4402d:	call   10430 <free@plt>
   44032:	mov    rax,QWORD PTR [rsp+0x58]
   44037:	sub    rax,QWORD PTR fs:0x28
   44040:	jne    4409f <hash_rehash+0x16f>
   44042:	add    rsp,0x68
   44046:	mov    eax,r12d
   44049:	pop    rbx
   4404a:	pop    rbp
   4404b:	pop    r12
   4404d:	pop    r13
   4404f:	ret    
   44050:	mov    r12d,0x1
   44056:	jmp    44032 <hash_rehash+0x102>
   44058:	nop    DWORD PTR [rax+rax*1+0x0]
   44060:	xor    r12d,r12d
   44063:	jmp    44032 <hash_rehash+0x102>
   44065:	nop    DWORD PTR [rax]
   44068:	mov    rdi,QWORD PTR [rbp+0x0]
   4406c:	call   10430 <free@plt>
   44071:	mov    rax,QWORD PTR [rsp]
   44075:	mov    QWORD PTR [rbp+0x0],rax
   44079:	mov    rax,QWORD PTR [rsp+0x8]
   4407e:	mov    QWORD PTR [rbp+0x8],rax
   44082:	mov    rax,QWORD PTR [rsp+0x10]
   44087:	mov    QWORD PTR [rbp+0x10],rax
   4408b:	mov    rax,QWORD PTR [rsp+0x18]
   44090:	mov    QWORD PTR [rbp+0x18],rax
   44094:	mov    rax,QWORD PTR [rsp+0x48]
   44099:	mov    QWORD PTR [rbp+0x48],rax
   4409d:	jmp    44032 <hash_rehash+0x102>
   4409f:	call   11760 <__stack_chk_fail@plt>
   440a4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   440af:	nop

00000000000440b0 <hash_insert_if_absent>:
   440b0:	endbr64 
   440b4:	push   r13
   440b6:	push   r12
   440b8:	push   rbp
   440b9:	push   rbx
   440ba:	sub    rsp,0x18
   440be:	mov    rax,QWORD PTR fs:0x28
   440c7:	mov    QWORD PTR [rsp+0x8],rax
   440cc:	xor    eax,eax
   440ce:	test   rsi,rsi
   440d1:	je     12887 <hash_insert_if_absent.cold>
   440d7:	mov    r12,rsp
   440da:	mov    r13,rdx
   440dd:	xor    ecx,ecx
   440df:	mov    rbx,rdi
   440e2:	mov    rdx,r12
   440e5:	mov    rbp,rsi
   440e8:	call   43510 <hash_find_entry>
   440ed:	test   rax,rax
   440f0:	je     44120 <hash_insert_if_absent+0x70>
   440f2:	xor    r8d,r8d
   440f5:	test   r13,r13
   440f8:	je     440fe <hash_insert_if_absent+0x4e>
   440fa:	mov    QWORD PTR [r13+0x0],rax
   440fe:	mov    rax,QWORD PTR [rsp+0x8]
   44103:	sub    rax,QWORD PTR fs:0x28
   4410c:	jne    442c4 <hash_insert_if_absent+0x214>
   44112:	add    rsp,0x18
   44116:	mov    eax,r8d
   44119:	pop    rbx
   4411a:	pop    rbp
   4411b:	pop    r12
   4411d:	pop    r13
   4411f:	ret    
   44120:	mov    rax,QWORD PTR [rbx+0x18]
   44124:	test   rax,rax
   44127:	js     441a8 <hash_insert_if_absent+0xf8>
   44129:	pxor   xmm5,xmm5
   4412d:	cvtsi2ss xmm5,rax
   44132:	mov    rax,QWORD PTR [rbx+0x10]
   44136:	test   rax,rax
   44139:	js     441ce <hash_insert_if_absent+0x11e>
   4413f:	pxor   xmm4,xmm4
   44143:	cvtsi2ss xmm4,rax
   44148:	mov    rax,QWORD PTR [rbx+0x28]
   4414c:	movss  xmm0,DWORD PTR [rax+0x8]
   44151:	mulss  xmm0,xmm4
   44155:	comiss xmm5,xmm0
   44158:	ja     441f0 <hash_insert_if_absent+0x140>
   4415e:	mov    r12,QWORD PTR [rsp]
   44162:	cmp    QWORD PTR [r12],0x0
   44167:	je     44230 <hash_insert_if_absent+0x180>
   4416d:	mov    rax,QWORD PTR [rbx+0x48]
   44171:	test   rax,rax
   44174:	je     44250 <hash_insert_if_absent+0x1a0>
   4417a:	mov    rdx,QWORD PTR [rax+0x8]
   4417e:	mov    QWORD PTR [rbx+0x48],rdx
   44182:	mov    rdx,QWORD PTR [r12+0x8]
   44187:	mov    QWORD PTR [rax],rbp
   4418a:	mov    r8d,0x1
   44190:	mov    QWORD PTR [rax+0x8],rdx
   44194:	mov    QWORD PTR [r12+0x8],rax
   44199:	add    QWORD PTR [rbx+0x20],0x1
   4419e:	jmp    440fe <hash_insert_if_absent+0x4e>
   441a3:	nop    DWORD PTR [rax+rax*1+0x0]
   441a8:	mov    rdx,rax
   441ab:	and    eax,0x1
   441ae:	pxor   xmm5,xmm5
   441b2:	shr    rdx,1
   441b5:	or     rdx,rax
   441b8:	mov    rax,QWORD PTR [rbx+0x10]
   441bc:	cvtsi2ss xmm5,rdx
   441c1:	addss  xmm5,xmm5
   441c5:	test   rax,rax
   441c8:	jns    4413f <hash_insert_if_absent+0x8f>
   441ce:	mov    rdx,rax
   441d1:	and    eax,0x1
   441d4:	pxor   xmm4,xmm4
   441d8:	shr    rdx,1
   441db:	or     rdx,rax
   441de:	cvtsi2ss xmm4,rdx
   441e3:	addss  xmm4,xmm4
   441e7:	jmp    44148 <hash_insert_if_absent+0x98>
   441ec:	nop    DWORD PTR [rax+0x0]
   441f0:	mov    rdi,rbx
   441f3:	call   43340 <check_tuning>
   441f8:	mov    rax,QWORD PTR [rbx+0x28]
   441fc:	movaps xmm1,xmm4
   441ff:	movss  xmm0,DWORD PTR [rax+0x8]
   44204:	mulss  xmm1,xmm0
   44208:	comiss xmm5,xmm1
   4420b:	jbe    4415e <hash_insert_if_absent+0xae>
   44211:	mulss  xmm4,DWORD PTR [rax+0xc]
   44216:	cmp    BYTE PTR [rax+0x10],0x0
   4421a:	je     44268 <hash_insert_if_absent+0x1b8>
   4421c:	comiss xmm4,DWORD PTR [rip+0x1403d]        # 58260 <default_tuning+0x20>
   44223:	jb     44270 <hash_insert_if_absent+0x1c0>
   44225:	mov    r8d,0xffffffff
   4422b:	jmp    440fe <hash_insert_if_absent+0x4e>
   44230:	mov    QWORD PTR [r12],rbp
   44234:	mov    r8d,0x1
   4423a:	add    QWORD PTR [rbx+0x20],0x1
   4423f:	add    QWORD PTR [rbx+0x18],0x1
   44244:	jmp    440fe <hash_insert_if_absent+0x4e>
   44249:	nop    DWORD PTR [rax+0x0]
   44250:	mov    edi,0x10
   44255:	call   11af0 <malloc@plt>
   4425a:	test   rax,rax
   4425d:	je     44225 <hash_insert_if_absent+0x175>
   4425f:	jmp    44182 <hash_insert_if_absent+0xd2>
   44264:	nop    DWORD PTR [rax+0x0]
   44268:	mulss  xmm4,xmm0
   4426c:	jmp    4421c <hash_insert_if_absent+0x16c>
   4426e:	xchg   ax,ax
   44270:	comiss xmm4,DWORD PTR [rip+0x13fed]        # 58264 <default_tuning+0x24>
   44277:	jae    442b0 <hash_insert_if_absent+0x200>
   44279:	cvttss2si rsi,xmm4
   4427e:	mov    rdi,rbx
   44281:	call   43f30 <hash_rehash>
   44286:	test   al,al
   44288:	je     44225 <hash_insert_if_absent+0x175>
   4428a:	xor    ecx,ecx
   4428c:	mov    rdx,r12
   4428f:	mov    rsi,rbp
   44292:	mov    rdi,rbx
   44295:	call   43510 <hash_find_entry>
   4429a:	test   rax,rax
   4429d:	je     4415e <hash_insert_if_absent+0xae>
   442a3:	jmp    12887 <hash_insert_if_absent.cold>
   442a8:	nop    DWORD PTR [rax+rax*1+0x0]
   442b0:	subss  xmm4,DWORD PTR [rip+0x13fac]        # 58264 <default_tuning+0x24>
   442b8:	cvttss2si rsi,xmm4
   442bd:	btc    rsi,0x3f
   442c2:	jmp    4427e <hash_insert_if_absent+0x1ce>
   442c4:	call   11760 <__stack_chk_fail@plt>
   442c9:	nop    DWORD PTR [rax+0x0]

00000000000442d0 <hash_insert>:
   442d0:	endbr64 
   442d4:	push   rbx
   442d5:	mov    rbx,rsi
   442d8:	sub    rsp,0x10
   442dc:	mov    rax,QWORD PTR fs:0x28
   442e5:	mov    QWORD PTR [rsp+0x8],rax
   442ea:	xor    eax,eax
   442ec:	mov    rdx,rsp
   442ef:	call   440b0 <hash_insert_if_absent>
   442f4:	cmp    eax,0xffffffff
   442f7:	je     44320 <hash_insert+0x50>
   442f9:	test   eax,eax
   442fb:	mov    rax,rbx
   442fe:	cmove  rax,QWORD PTR [rsp]
   44303:	mov    rdx,QWORD PTR [rsp+0x8]
   44308:	sub    rdx,QWORD PTR fs:0x28
   44311:	jne    44324 <hash_insert+0x54>
   44313:	add    rsp,0x10
   44317:	pop    rbx
   44318:	ret    
   44319:	nop    DWORD PTR [rax+0x0]
   44320:	xor    eax,eax
   44322:	jmp    44303 <hash_insert+0x33>
   44324:	call   11760 <__stack_chk_fail@plt>
   44329:	nop    DWORD PTR [rax+0x0]

0000000000044330 <hash_remove>:
   44330:	endbr64 
   44334:	push   r12
   44336:	mov    ecx,0x1
   4433b:	push   rbp
   4433c:	push   rbx
   4433d:	mov    rbx,rdi
   44340:	sub    rsp,0x10
   44344:	mov    rax,QWORD PTR fs:0x28
   4434d:	mov    QWORD PTR [rsp+0x8],rax
   44352:	xor    eax,eax
   44354:	mov    rdx,rsp
   44357:	call   43510 <hash_find_entry>
   4435c:	mov    r12,rax
   4435f:	test   rax,rax
   44362:	je     44373 <hash_remove+0x43>
   44364:	mov    rax,QWORD PTR [rsp]
   44368:	sub    QWORD PTR [rbx+0x20],0x1
   4436d:	cmp    QWORD PTR [rax],0x0
   44371:	je     44398 <hash_remove+0x68>
   44373:	mov    rax,QWORD PTR [rsp+0x8]
   44378:	sub    rax,QWORD PTR fs:0x28
   44381:	jne    444af <hash_remove+0x17f>
   44387:	add    rsp,0x10
   4438b:	mov    rax,r12
   4438e:	pop    rbx
   4438f:	pop    rbp
   44390:	pop    r12
   44392:	ret    
   44393:	nop    DWORD PTR [rax+rax*1+0x0]
   44398:	mov    rax,QWORD PTR [rbx+0x18]
   4439c:	sub    rax,0x1
   443a0:	mov    QWORD PTR [rbx+0x18],rax
   443a4:	js     44450 <hash_remove+0x120>
   443aa:	pxor   xmm5,xmm5
   443ae:	cvtsi2ss xmm5,rax
   443b3:	mov    rax,QWORD PTR [rbx+0x10]
   443b7:	test   rax,rax
   443ba:	js     44476 <hash_remove+0x146>
   443c0:	pxor   xmm4,xmm4
   443c4:	cvtsi2ss xmm4,rax
   443c9:	mov    rax,QWORD PTR [rbx+0x28]
   443cd:	movss  xmm0,DWORD PTR [rax]
   443d1:	mulss  xmm0,xmm4
   443d5:	comiss xmm0,xmm5
   443d8:	jbe    44373 <hash_remove+0x43>
   443da:	mov    rdi,rbx
   443dd:	call   43340 <check_tuning>
   443e2:	mov    rax,QWORD PTR [rbx+0x28]
   443e6:	movss  xmm0,DWORD PTR [rax]
   443ea:	mulss  xmm0,xmm4
   443ee:	comiss xmm0,xmm5
   443f1:	jbe    44373 <hash_remove+0x43>
   443f3:	mulss  xmm4,DWORD PTR [rax+0x4]
   443f8:	cmp    BYTE PTR [rax+0x10],0x0
   443fc:	jne    44403 <hash_remove+0xd3>
   443fe:	mulss  xmm4,DWORD PTR [rax+0x8]
   44403:	comiss xmm4,DWORD PTR [rip+0x13e5a]        # 58264 <default_tuning+0x24>
   4440a:	jae    44498 <hash_remove+0x168>
   44410:	cvttss2si rsi,xmm4
   44415:	mov    rdi,rbx
   44418:	call   43f30 <hash_rehash>
   4441d:	test   al,al
   4441f:	jne    44373 <hash_remove+0x43>
   44425:	mov    rbp,QWORD PTR [rbx+0x48]
   44429:	test   rbp,rbp
   4442c:	je     44441 <hash_remove+0x111>
   4442e:	xchg   ax,ax
   44430:	mov    rdi,rbp
   44433:	mov    rbp,QWORD PTR [rbp+0x8]
   44437:	call   10430 <free@plt>
   4443c:	test   rbp,rbp
   4443f:	jne    44430 <hash_remove+0x100>
   44441:	mov    QWORD PTR [rbx+0x48],0x0
   44449:	jmp    44373 <hash_remove+0x43>
   4444e:	xchg   ax,ax
   44450:	mov    rdx,rax
   44453:	and    eax,0x1
   44456:	pxor   xmm5,xmm5
   4445a:	shr    rdx,1
   4445d:	or     rdx,rax
   44460:	mov    rax,QWORD PTR [rbx+0x10]
   44464:	cvtsi2ss xmm5,rdx
   44469:	addss  xmm5,xmm5
   4446d:	test   rax,rax
   44470:	jns    443c0 <hash_remove+0x90>
   44476:	mov    rdx,rax
   44479:	and    eax,0x1
   4447c:	pxor   xmm4,xmm4
   44480:	shr    rdx,1
   44483:	or     rdx,rax
   44486:	cvtsi2ss xmm4,rdx
   4448b:	addss  xmm4,xmm4
   4448f:	jmp    443c9 <hash_remove+0x99>
   44494:	nop    DWORD PTR [rax+0x0]
   44498:	subss  xmm4,DWORD PTR [rip+0x13dc4]        # 58264 <default_tuning+0x24>
   444a0:	cvttss2si rsi,xmm4
   444a5:	btc    rsi,0x3f
   444aa:	jmp    44415 <hash_remove+0xe5>
   444af:	call   11760 <__stack_chk_fail@plt>
   444b4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   444bf:	nop

00000000000444c0 <hash_delete>:
   444c0:	endbr64 
   444c4:	jmp    44330 <hash_remove>
   444c9:	nop    DWORD PTR [rax+0x0]

00000000000444d0 <hash_pjw>:
   444d0:	endbr64 
   444d4:	movsx  rdx,BYTE PTR [rdi]
   444d8:	test   dl,dl
   444da:	je     44500 <hash_pjw+0x30>
   444dc:	xor    eax,eax
   444de:	xchg   ax,ax
   444e0:	rol    rax,0x9
   444e4:	add    rdi,0x1
   444e8:	add    rax,rdx
   444eb:	movsx  rdx,BYTE PTR [rdi]
   444ef:	test   dl,dl
   444f1:	jne    444e0 <hash_pjw+0x10>
   444f3:	xor    edx,edx
   444f5:	div    rsi
   444f8:	mov    r8,rdx
   444fb:	mov    rax,r8
   444fe:	ret    
   444ff:	nop
   44500:	xor    r8d,r8d
   44503:	mov    rax,r8
   44506:	ret    
   44507:	nop    WORD PTR [rax+rax*1+0x0]

0000000000044510 <triple_hash>:
   44510:	endbr64 
   44514:	push   rbp
   44515:	mov    rbp,rdi
   44518:	push   rbx
   44519:	mov    rbx,rsi
   4451c:	sub    rsp,0x8
   44520:	mov    rdi,QWORD PTR [rdi]
   44523:	call   444d0 <hash_pjw>
   44528:	xor    edx,edx
   4452a:	xor    rax,QWORD PTR [rbp+0x8]
   4452e:	add    rsp,0x8
   44532:	div    rbx
   44535:	pop    rbx
   44536:	pop    rbp
   44537:	mov    rax,rdx
   4453a:	ret    
   4453b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000044540 <triple_compare_ino_str>:
   44540:	endbr64 
   44544:	mov    rdx,QWORD PTR [rsi+0x8]
   44548:	xor    eax,eax
   4454a:	cmp    QWORD PTR [rdi+0x8],rdx
   4454e:	je     44558 <triple_compare_ino_str+0x18>
   44550:	ret    
   44551:	nop    DWORD PTR [rax+0x0]
   44558:	mov    rcx,QWORD PTR [rsi+0x10]
   4455c:	cmp    QWORD PTR [rdi+0x10],rcx
   44560:	jne    44550 <triple_compare_ino_str+0x10>
   44562:	sub    rsp,0x8
   44566:	mov    rsi,QWORD PTR [rsi]
   44569:	mov    rdi,QWORD PTR [rdi]
   4456c:	call   11c60 <strcmp@plt>
   44571:	test   eax,eax
   44573:	sete   al
   44576:	add    rsp,0x8
   4457a:	ret    
   4457b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000044580 <triple_free>:
   44580:	endbr64 
   44584:	push   rbp
   44585:	mov    rbp,rdi
   44588:	mov    rdi,QWORD PTR [rdi]
   4458b:	call   10430 <free@plt>
   44590:	mov    rdi,rbp
   44593:	pop    rbp
   44594:	jmp    10430 <free@plt>
   44599:	nop    DWORD PTR [rax+0x0]

00000000000445a0 <imalloc>:
   445a0:	endbr64 
   445a4:	jmp    11af0 <malloc@plt>
   445a9:	nop    DWORD PTR [rax+0x0]

00000000000445b0 <irealloc>:
   445b0:	endbr64 
   445b4:	xor    eax,eax
   445b6:	test   rsi,rsi
   445b9:	sete   al
   445bc:	or     rsi,rax
   445bf:	jmp    12120 <realloc@plt>
   445c4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   445cf:	nop

00000000000445d0 <icalloc>:
   445d0:	endbr64 
   445d4:	jmp    10f50 <calloc@plt>
   445d9:	nop    DWORD PTR [rax+0x0]

00000000000445e0 <ireallocarray>:
   445e0:	endbr64 
   445e4:	test   rsi,rsi
   445e7:	je     445f8 <ireallocarray+0x18>
   445e9:	test   rdx,rdx
   445ec:	je     445f8 <ireallocarray+0x18>
   445ee:	jmp    11b40 <reallocarray@plt>
   445f3:	nop    DWORD PTR [rax+rax*1+0x0]
   445f8:	mov    esi,0x1
   445fd:	mov    edx,0x1
   44602:	jmp    11b40 <reallocarray@plt>
   44607:	nop    WORD PTR [rax+rax*1+0x0]

0000000000044610 <rpl_ioctl>:
   44610:	endbr64 
   44614:	sub    rsp,0x58
   44618:	mov    esi,esi
   4461a:	mov    QWORD PTR [rsp+0x30],rdx
   4461f:	mov    rax,QWORD PTR fs:0x28
   44628:	mov    QWORD PTR [rsp+0x18],rax
   4462d:	xor    eax,eax
   4462f:	lea    rax,[rsp+0x60]
   44634:	mov    DWORD PTR [rsp],0x10
   4463b:	mov    QWORD PTR [rsp+0x8],rax
   44640:	lea    rax,[rsp+0x20]
   44645:	mov    QWORD PTR [rsp+0x10],rax
   4464a:	xor    eax,eax
   4464c:	call   11cc0 <ioctl@plt>
   44651:	mov    rdx,QWORD PTR [rsp+0x18]
   44656:	sub    rdx,QWORD PTR fs:0x28
   4465f:	jne    44666 <rpl_ioctl+0x56>
   44661:	add    rsp,0x58
   44665:	ret    
   44666:	call   11760 <__stack_chk_fail@plt>
   4466b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000044670 <locale_charset>:
   44670:	endbr64 
   44674:	sub    rsp,0x8
   44678:	mov    edi,0xe
   4467d:	call   11560 <nl_langinfo@plt>
   44682:	test   rax,rax
   44685:	je     446a0 <locale_charset+0x30>
   44687:	cmp    BYTE PTR [rax],0x0
   4468a:	lea    rdx,[rip+0x71be]        # 4b84f <base64_2_bin+0x64f>
   44691:	cmove  rax,rdx
   44695:	add    rsp,0x8
   44699:	ret    
   4469a:	nop    WORD PTR [rax+rax*1+0x0]
   446a0:	lea    rax,[rip+0x71a8]        # 4b84f <base64_2_bin+0x64f>
   446a7:	add    rsp,0x8
   446ab:	ret    
   446ac:	nop    DWORD PTR [rax+0x0]

00000000000446b0 <gl_locale_name_thread>:
   446b0:	endbr64 
   446b4:	push   r15
   446b6:	push   r14
   446b8:	push   r13
   446ba:	push   r12
   446bc:	push   rbp
   446bd:	push   rbx
   446be:	movsxd rbx,edi
   446c1:	xor    edi,edi
   446c3:	sub    rsp,0x8
   446c7:	call   10860 <uselocale@plt>
   446cc:	cmp    rax,0xffffffffffffffff
   446d0:	je     447a0 <gl_locale_name_thread+0xf0>
   446d6:	mov    edi,ebx
   446d8:	mov    r12,rax
   446db:	shl    edi,0x10
   446de:	or     edi,0xffff
   446e4:	call   11560 <nl_langinfo@plt>
   446e9:	movsx  rdx,BYTE PTR [rax]
   446ed:	mov    rbp,rax
   446f0:	test   dl,dl
   446f2:	jne    44711 <gl_locale_name_thread+0x61>
   446f4:	mov    rbp,QWORD PTR [r12+rbx*8+0x80]
   446fc:	test   rbp,rbp
   446ff:	je     447a0 <gl_locale_name_thread+0xf0>
   44705:	movsx  rdx,BYTE PTR [rbp+0x0]
   4470a:	xor    r13d,r13d
   4470d:	test   dl,dl
   4470f:	je     44755 <gl_locale_name_thread+0xa5>
   44711:	mov    rax,rbp
   44714:	xor    ecx,ecx
   44716:	cs nop WORD PTR [rax+rax*1+0x0]
   44720:	rol    rcx,0x9
   44724:	add    rax,0x1
   44728:	add    rcx,rdx
   4472b:	movsx  rdx,BYTE PTR [rax]
   4472f:	test   dl,dl
   44731:	jne    44720 <gl_locale_name_thread+0x70>
   44733:	movabs rdx,0xff00ff00ff00ff01
   4473d:	mov    rax,rcx
   44740:	mul    rdx
   44743:	mov    r13,rdx
   44746:	xor    dl,dl
   44748:	shr    r13,0x8
   4474c:	add    rdx,r13
   4474f:	sub    rcx,rdx
   44752:	mov    r13,rcx
   44755:	lea    r14,[rip+0x35804]        # 79f60 <struniq_hash_table>
   4475c:	mov    rbx,QWORD PTR [r14+r13*8]
   44760:	test   rbx,rbx
   44763:	jne    44778 <gl_locale_name_thread+0xc8>
   44765:	jmp    447a8 <gl_locale_name_thread+0xf8>
   44767:	nop    WORD PTR [rax+rax*1+0x0]
   44770:	mov    rbx,QWORD PTR [rbx]
   44773:	test   rbx,rbx
   44776:	je     447a8 <gl_locale_name_thread+0xf8>
   44778:	lea    r12,[rbx+0x8]
   4477c:	mov    rsi,rbp
   4477f:	mov    rdi,r12
   44782:	call   11c60 <strcmp@plt>
   44787:	test   eax,eax
   44789:	jne    44770 <gl_locale_name_thread+0xc0>
   4478b:	add    rsp,0x8
   4478f:	mov    rax,r12
   44792:	pop    rbx
   44793:	pop    rbp
   44794:	pop    r12
   44796:	pop    r13
   44798:	pop    r14
   4479a:	pop    r15
   4479c:	ret    
   4479d:	nop    DWORD PTR [rax]
   447a0:	xor    r12d,r12d
   447a3:	jmp    4478b <gl_locale_name_thread+0xdb>
   447a5:	nop    DWORD PTR [rax]
   447a8:	mov    rdi,rbp
   447ab:	call   10ab0 <strlen@plt>
   447b0:	lea    rdi,[rax+0x10]
   447b4:	lea    r15,[rax+0x1]
   447b8:	and    rdi,0xfffffffffffffff8
   447bc:	call   11af0 <malloc@plt>
   447c1:	mov    r12,rax
   447c4:	test   rax,rax
   447c7:	je     44879 <gl_locale_name_thread+0x1c9>
   447cd:	mov    rdx,r15
   447d0:	lea    rdi,[rax+0x8]
   447d4:	mov    rsi,rbp
   447d7:	call   11220 <memcpy@plt>
   447dc:	mov    rax,QWORD PTR [rip+0x317c5]        # 75fa8 <__libc_single_threaded@GLIBC_2.32>
   447e3:	movzx  r15d,BYTE PTR [rax]
   447e7:	test   r15b,r15b
   447ea:	je     44860 <gl_locale_name_thread+0x1b0>
   447ec:	mov    rbx,QWORD PTR [r14+r13*8]
   447f0:	test   rbx,rbx
   447f3:	jne    44808 <gl_locale_name_thread+0x158>
   447f5:	jmp    44838 <gl_locale_name_thread+0x188>
   447f7:	nop    WORD PTR [rax+rax*1+0x0]
   44800:	mov    rbx,QWORD PTR [rbx]
   44803:	test   rbx,rbx
   44806:	je     44838 <gl_locale_name_thread+0x188>
   44808:	lea    rdi,[rbx+0x8]
   4480c:	mov    rsi,rbp
   4480f:	call   11c60 <strcmp@plt>
   44814:	test   eax,eax
   44816:	jne    44800 <gl_locale_name_thread+0x150>
   44818:	mov    rdi,r12
   4481b:	mov    r12,rbx
   4481e:	call   10430 <free@plt>
   44823:	test   r15b,r15b
   44826:	je     44849 <gl_locale_name_thread+0x199>
   44828:	add    r12,0x8
   4482c:	jmp    4478b <gl_locale_name_thread+0xdb>
   44831:	nop    DWORD PTR [rax+0x0]
   44838:	mov    rax,QWORD PTR [r14+r13*8]
   4483c:	mov    QWORD PTR [r12],rax
   44840:	mov    QWORD PTR [r14+r13*8],r12
   44844:	test   r15b,r15b
   44847:	jne    44828 <gl_locale_name_thread+0x178>
   44849:	lea    rdi,[rip+0x356d0]        # 79f20 <struniq_lock>
   44850:	call   110d0 <pthread_mutex_unlock@plt>
   44855:	test   eax,eax
   44857:	je     44828 <gl_locale_name_thread+0x178>
   44859:	jmp    128a0 <gl_locale_name_thread.cold>
   4485e:	xchg   ax,ax
   44860:	lea    rdi,[rip+0x356b9]        # 79f20 <struniq_lock>
   44867:	call   11db0 <pthread_mutex_lock@plt>
   4486c:	test   eax,eax
   4486e:	je     447ec <gl_locale_name_thread+0x13c>
   44874:	jmp    128a0 <gl_locale_name_thread.cold>
   44879:	lea    r12,[rip+0x13947]        # 581c7 <fillbuf+0x87>
   44880:	jmp    4478b <gl_locale_name_thread+0xdb>
   44885:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000044890 <gl_locale_name_posix>:
   44890:	endbr64 
   44894:	jmp    45560 <setlocale_null>
   44899:	nop    DWORD PTR [rax+0x0]

00000000000448a0 <gl_locale_name_environ>:
   448a0:	endbr64 
   448a4:	push   rbp
   448a5:	lea    rdi,[rip+0x139bc]        # 58268 <default_tuning+0x28>
   448ac:	mov    rbp,rsi
   448af:	call   11920 <getenv@plt>
   448b4:	test   rax,rax
   448b7:	je     448be <gl_locale_name_environ+0x1e>
   448b9:	cmp    BYTE PTR [rax],0x0
   448bc:	jne    448ea <gl_locale_name_environ+0x4a>
   448be:	mov    rdi,rbp
   448c1:	call   11920 <getenv@plt>
   448c6:	test   rax,rax
   448c9:	je     448d0 <gl_locale_name_environ+0x30>
   448cb:	cmp    BYTE PTR [rax],0x0
   448ce:	jne    448ea <gl_locale_name_environ+0x4a>
   448d0:	lea    rdi,[rip+0x13998]        # 5826f <default_tuning+0x2f>
   448d7:	call   11920 <getenv@plt>
   448dc:	test   rax,rax
   448df:	je     448ea <gl_locale_name_environ+0x4a>
   448e1:	xor    edx,edx
   448e3:	cmp    BYTE PTR [rax],0x0
   448e6:	cmove  rax,rdx
   448ea:	pop    rbp
   448eb:	ret    
   448ec:	nop    DWORD PTR [rax+0x0]

00000000000448f0 <gl_locale_name_default>:
   448f0:	endbr64 
   448f4:	lea    rax,[rip+0x138cc]        # 581c7 <fillbuf+0x87>
   448fb:	ret    
   448fc:	nop    DWORD PTR [rax+0x0]

0000000000044900 <gl_locale_name>:
   44900:	endbr64 
   44904:	push   rbp
   44905:	mov    ebp,edi
   44907:	call   446b0 <gl_locale_name_thread>
   4490c:	test   rax,rax
   4490f:	je     44918 <gl_locale_name+0x18>
   44911:	pop    rbp
   44912:	ret    
   44913:	nop    DWORD PTR [rax+rax*1+0x0]
   44918:	mov    edi,ebp
   4491a:	call   45560 <setlocale_null>
   4491f:	lea    rdx,[rip+0x138a1]        # 581c7 <fillbuf+0x87>
   44926:	pop    rbp
   44927:	test   rax,rax
   4492a:	cmove  rax,rdx
   4492e:	ret    
   4492f:	nop

0000000000044930 <glthread_rwlock_init_for_glibc>:
   44930:	endbr64 
   44934:	push   r13
   44936:	push   r12
   44938:	push   rbp
   44939:	mov    rbp,rdi
   4493c:	sub    rsp,0x10
   44940:	mov    rax,QWORD PTR fs:0x28
   44949:	mov    QWORD PTR [rsp+0x8],rax
   4494e:	xor    eax,eax
   44950:	mov    r13,rsp
   44953:	mov    rdi,r13
   44956:	call   10ec0 <pthread_rwlockattr_init@plt>
   4495b:	mov    r12d,eax
   4495e:	test   eax,eax
   44960:	je     44980 <glthread_rwlock_init_for_glibc+0x50>
   44962:	mov    rax,QWORD PTR [rsp+0x8]
   44967:	sub    rax,QWORD PTR fs:0x28
   44970:	jne    449b0 <glthread_rwlock_init_for_glibc+0x80>
   44972:	add    rsp,0x10
   44976:	mov    eax,r12d
   44979:	pop    rbp
   4497a:	pop    r12
   4497c:	pop    r13
   4497e:	ret    
   4497f:	nop
   44980:	mov    esi,0x2
   44985:	mov    rdi,r13
   44988:	call   117d0 <pthread_rwlockattr_setkind_np@plt>
   4498d:	mov    r12d,eax
   44990:	test   eax,eax
   44992:	je     449a0 <glthread_rwlock_init_for_glibc+0x70>
   44994:	mov    rdi,r13
   44997:	call   10f20 <pthread_rwlockattr_destroy@plt>
   4499c:	jmp    44962 <glthread_rwlock_init_for_glibc+0x32>
   4499e:	xchg   ax,ax
   449a0:	mov    rsi,r13
   449a3:	mov    rdi,rbp
   449a6:	call   110e0 <pthread_rwlock_init@plt>
   449ab:	mov    r12d,eax
   449ae:	jmp    44994 <glthread_rwlock_init_for_glibc+0x64>
   449b0:	call   11760 <__stack_chk_fail@plt>
   449b5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

00000000000449c0 <glthread_recursive_lock_init_multithreaded>:
   449c0:	endbr64 
   449c4:	push   r13
   449c6:	push   r12
   449c8:	push   rbp
   449c9:	mov    rbp,rdi
   449cc:	sub    rsp,0x10
   449d0:	mov    rax,QWORD PTR fs:0x28
   449d9:	mov    QWORD PTR [rsp+0x8],rax
   449de:	xor    eax,eax
   449e0:	lea    r13,[rsp+0x4]
   449e5:	mov    rdi,r13
   449e8:	call   104e0 <pthread_mutexattr_init@plt>
   449ed:	mov    r12d,eax
   449f0:	test   eax,eax
   449f2:	je     44a18 <glthread_recursive_lock_init_multithreaded+0x58>
   449f4:	mov    rax,QWORD PTR [rsp+0x8]
   449f9:	sub    rax,QWORD PTR fs:0x28
   44a02:	jne    44a67 <glthread_recursive_lock_init_multithreaded+0xa7>
   44a04:	add    rsp,0x10
   44a08:	mov    eax,r12d
   44a0b:	pop    rbp
   44a0c:	pop    r12
   44a0e:	pop    r13
   44a10:	ret    
   44a11:	nop    DWORD PTR [rax+0x0]
   44a18:	mov    esi,0x1
   44a1d:	mov    rdi,r13
   44a20:	call   11de0 <pthread_mutexattr_settype@plt>
   44a25:	mov    r12d,eax
   44a28:	test   eax,eax
   44a2a:	jne    44a50 <glthread_recursive_lock_init_multithreaded+0x90>
   44a2c:	mov    rdi,rbp
   44a2f:	mov    rsi,r13
   44a32:	call   11e10 <pthread_mutex_init@plt>
   44a37:	mov    rdi,r13
   44a3a:	mov    r12d,eax
   44a3d:	test   eax,eax
   44a3f:	jne    44a60 <glthread_recursive_lock_init_multithreaded+0xa0>
   44a41:	call   11df0 <pthread_mutexattr_destroy@plt>
   44a46:	mov    r12d,eax
   44a49:	jmp    449f4 <glthread_recursive_lock_init_multithreaded+0x34>
   44a4b:	nop    DWORD PTR [rax+rax*1+0x0]
   44a50:	mov    rdi,r13
   44a53:	call   11df0 <pthread_mutexattr_destroy@plt>
   44a58:	jmp    449f4 <glthread_recursive_lock_init_multithreaded+0x34>
   44a5a:	nop    WORD PTR [rax+rax*1+0x0]
   44a60:	call   11df0 <pthread_mutexattr_destroy@plt>
   44a65:	jmp    449f4 <glthread_recursive_lock_init_multithreaded+0x34>
   44a67:	call   11760 <__stack_chk_fail@plt>
   44a6c:	nop    DWORD PTR [rax+0x0]

0000000000044a70 <glthread_once_singlethreaded>:
   44a70:	endbr64 
   44a74:	xor    eax,eax
   44a76:	cmp    BYTE PTR [rdi],0x0
   44a79:	jne    44a83 <glthread_once_singlethreaded+0x13>
   44a7b:	mov    BYTE PTR [rdi],0xff
   44a7e:	mov    eax,0x1
   44a83:	ret    
   44a84:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   44a8f:	nop

0000000000044a90 <glthread_once_multithreaded>:
   44a90:	endbr64 
   44a94:	push   rbp
   44a95:	mov    rbp,rsi
   44a98:	push   rbx
   44a99:	mov    rbx,rdi
   44a9c:	sub    rsp,0x18
   44aa0:	call   11500 <pthread_once@plt>
   44aa5:	cmp    eax,0x26
   44aa8:	je     44ab8 <glthread_once_multithreaded+0x28>
   44aaa:	add    rsp,0x18
   44aae:	pop    rbx
   44aaf:	pop    rbp
   44ab0:	ret    
   44ab1:	nop    DWORD PTR [rax+0x0]
   44ab8:	xor    eax,eax
   44aba:	cmp    BYTE PTR [rbx],0x0
   44abd:	jne    44aaa <glthread_once_multithreaded+0x1a>
   44abf:	mov    DWORD PTR [rsp+0xc],eax
   44ac3:	mov    BYTE PTR [rbx],0xff
   44ac6:	call   rbp
   44ac8:	mov    eax,DWORD PTR [rsp+0xc]
   44acc:	add    rsp,0x18
   44ad0:	pop    rbx
   44ad1:	pop    rbp
   44ad2:	ret    
   44ad3:	cs nop WORD PTR [rax+rax*1+0x0]
   44add:	nop    DWORD PTR [rax]

0000000000044ae0 <mmalloca>:
   44ae0:	endbr64 
   44ae4:	mov    r8,rdi
   44ae7:	add    r8,0x20
   44aeb:	js     44b24 <mmalloca+0x44>
   44aed:	cmp    r8,rdi
   44af0:	jb     44b24 <mmalloca+0x44>
   44af2:	sub    rsp,0x8
   44af6:	mov    rdi,r8
   44af9:	call   11af0 <malloc@plt>
   44afe:	test   rax,rax
   44b01:	je     44b1d <mmalloca+0x3d>
   44b03:	lea    rdx,[rax+0x10]
   44b07:	and    rdx,0xffffffffffffffe0
   44b0b:	sub    rdx,rax
   44b0e:	add    rdx,0x10
   44b12:	add    rax,rdx
   44b15:	mov    BYTE PTR [rax-0x1],dl
   44b18:	add    rsp,0x8
   44b1c:	ret    
   44b1d:	xor    eax,eax
   44b1f:	add    rsp,0x8
   44b23:	ret    
   44b24:	xor    eax,eax
   44b26:	ret    
   44b27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000044b30 <freea>:
   44b30:	endbr64 
   44b34:	test   dil,0xf
   44b38:	jne    128a5 <freea.cold>
   44b3e:	test   dil,0x10
   44b42:	jne    44b48 <freea+0x18>
   44b44:	ret    
   44b45:	nop    DWORD PTR [rax]
   44b48:	movzx  eax,BYTE PTR [rdi-0x1]
   44b4c:	sub    rdi,rax
   44b4f:	jmp    10430 <free@plt>
   44b54:	cs nop WORD PTR [rax+rax*1+0x0]
   44b5e:	xchg   ax,ax

0000000000044b60 <rpl_mbrtoc32>:
   44b60:	endbr64 
   44b64:	push   r13
   44b66:	push   r12
   44b68:	push   rbp
   44b69:	push   rbx
   44b6a:	sub    rsp,0x8
   44b6e:	test   rsi,rsi
   44b71:	je     44be0 <rpl_mbrtoc32+0x80>
   44b73:	test   rdx,rdx
   44b76:	mov    r13,rdi
   44b79:	mov    rbx,rsi
   44b7c:	setne  bpl
   44b80:	test   rcx,rcx
   44b83:	lea    rax,[rip+0x35bde]        # 7a768 <internal_state>
   44b8a:	mov    rsi,rbx
   44b8d:	mov    rdi,r13
   44b90:	cmove  rcx,rax
   44b94:	call   10e20 <mbrtoc32@plt>
   44b99:	mov    r12,rax
   44b9c:	cmp    rax,0xfffffffffffffffd
   44ba0:	jbe    44ba7 <rpl_mbrtoc32+0x47>
   44ba2:	test   bpl,bpl
   44ba5:	jne    44bb8 <rpl_mbrtoc32+0x58>
   44ba7:	add    rsp,0x8
   44bab:	mov    rax,r12
   44bae:	pop    rbx
   44baf:	pop    rbp
   44bb0:	pop    r12
   44bb2:	pop    r13
   44bb4:	ret    
   44bb5:	nop    DWORD PTR [rax]
   44bb8:	xor    edi,edi
   44bba:	call   43290 <hard_locale>
   44bbf:	test   al,al
   44bc1:	jne    44ba7 <rpl_mbrtoc32+0x47>
   44bc3:	mov    r12d,0x1
   44bc9:	test   r13,r13
   44bcc:	je     44ba7 <rpl_mbrtoc32+0x47>
   44bce:	movzx  eax,BYTE PTR [rbx]
   44bd1:	mov    DWORD PTR [r13+0x0],eax
   44bd5:	jmp    44ba7 <rpl_mbrtoc32+0x47>
   44bd7:	nop    WORD PTR [rax+rax*1+0x0]
   44be0:	xor    r13d,r13d
   44be3:	mov    ebp,0x1
   44be8:	mov    edx,0x1
   44bed:	lea    rbx,[rip+0x7c76]        # 4c86a <maybe+0x5ca>
   44bf4:	jmp    44b80 <rpl_mbrtoc32+0x20>
   44bf6:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000044c00 <rpl_mbrtowc>:
   44c00:	endbr64 
   44c04:	push   r13
   44c06:	mov    r13,rsi
   44c09:	push   r12
   44c0b:	push   rbp
   44c0c:	mov    rbp,rdx
   44c0f:	push   rbx
   44c10:	mov    rbx,rdi
   44c13:	sub    rsp,0x18
   44c17:	mov    rax,QWORD PTR fs:0x28
   44c20:	mov    QWORD PTR [rsp+0x8],rax
   44c25:	xor    eax,eax
   44c27:	test   rdi,rdi
   44c2a:	lea    rax,[rsp+0x4]
   44c2f:	cmove  rbx,rax
   44c33:	mov    rdi,rbx
   44c36:	call   12070 <mbrtowc@plt>
   44c3b:	mov    r12,rax
   44c3e:	cmp    rax,0xfffffffffffffffd
   44c42:	jbe    44c49 <rpl_mbrtowc+0x49>
   44c44:	test   rbp,rbp
   44c47:	jne    44c70 <rpl_mbrtowc+0x70>
   44c49:	mov    rax,QWORD PTR [rsp+0x8]
   44c4e:	sub    rax,QWORD PTR fs:0x28
   44c57:	jne    44c8a <rpl_mbrtowc+0x8a>
   44c59:	add    rsp,0x18
   44c5d:	mov    rax,r12
   44c60:	pop    rbx
   44c61:	pop    rbp
   44c62:	pop    r12
   44c64:	pop    r13
   44c66:	ret    
   44c67:	nop    WORD PTR [rax+rax*1+0x0]
   44c70:	xor    edi,edi
   44c72:	call   43290 <hard_locale>
   44c77:	test   al,al
   44c79:	jne    44c49 <rpl_mbrtowc+0x49>
   44c7b:	movzx  eax,BYTE PTR [r13+0x0]
   44c80:	mov    r12d,0x1
   44c86:	mov    DWORD PTR [rbx],eax
   44c88:	jmp    44c49 <rpl_mbrtowc+0x49>
   44c8a:	call   11760 <__stack_chk_fail@plt>
   44c8f:	nop

0000000000044c90 <mbsrtoc32s>:
   44c90:	endbr64 
   44c94:	jmp    44ca0 <rpl_mbsrtowcs>
   44c99:	nop    DWORD PTR [rax+0x0]

0000000000044ca0 <rpl_mbsrtowcs>:
   44ca0:	endbr64 
   44ca4:	push   r15
   44ca6:	push   r14
   44ca8:	mov    r14,rsi
   44cab:	push   r13
   44cad:	mov    r13,rdi
   44cb0:	push   r12
   44cb2:	mov    r12,rcx
   44cb5:	push   rbp
   44cb6:	mov    rbp,rdx
   44cb9:	push   rbx
   44cba:	sub    rsp,0x18
   44cbe:	mov    rax,QWORD PTR fs:0x28
   44cc7:	mov    QWORD PTR [rsp+0x8],rax
   44ccc:	xor    eax,eax
   44cce:	test   rcx,rcx
   44cd1:	je     44e40 <rpl_mbsrtowcs+0x1a0>
   44cd7:	mov    rbx,QWORD PTR [r14]
   44cda:	test   r13,r13
   44cdd:	je     44db0 <rpl_mbsrtowcs+0x110>
   44ce3:	test   rbp,rbp
   44ce6:	je     44e77 <rpl_mbsrtowcs+0x1d7>
   44cec:	mov    r15,r13
   44cef:	nop
   44cf0:	cmp    BYTE PTR [rbx],0x0
   44cf3:	mov    edx,0x1
   44cf8:	je     44d20 <rpl_mbsrtowcs+0x80>
   44cfa:	cmp    BYTE PTR [rbx+0x1],0x0
   44cfe:	mov    edx,0x2
   44d03:	je     44d20 <rpl_mbsrtowcs+0x80>
   44d05:	cmp    BYTE PTR [rbx+0x2],0x0
   44d09:	mov    edx,0x3
   44d0e:	je     44d20 <rpl_mbsrtowcs+0x80>
   44d10:	cmp    BYTE PTR [rbx+0x3],0x0
   44d14:	mov    edx,0x4
   44d19:	jne    44d90 <rpl_mbsrtowcs+0xf0>
   44d1b:	nop    DWORD PTR [rax+rax*1+0x0]
   44d20:	mov    rcx,r12
   44d23:	mov    rsi,rbx
   44d26:	mov    rdi,r15
   44d29:	call   44c00 <rpl_mbrtowc>
   44d2e:	cmp    rax,0xfffffffffffffffe
   44d32:	je     128ab <rpl_mbsrtowcs.cold>
   44d38:	cmp    rax,0xffffffffffffffff
   44d3c:	je     44e20 <rpl_mbsrtowcs+0x180>
   44d42:	test   rax,rax
   44d45:	je     44e50 <rpl_mbsrtowcs+0x1b0>
   44d4b:	add    rbx,rax
   44d4e:	add    r15,0x4
   44d52:	sub    rbp,0x1
   44d56:	jne    44cf0 <rpl_mbsrtowcs+0x50>
   44d58:	sub    r15,r13
   44d5b:	sar    r15,0x2
   44d5f:	mov    QWORD PTR [r14],rbx
   44d62:	mov    rax,QWORD PTR [rsp+0x8]
   44d67:	sub    rax,QWORD PTR fs:0x28
   44d70:	jne    44e7f <rpl_mbsrtowcs+0x1df>
   44d76:	add    rsp,0x18
   44d7a:	mov    rax,r15
   44d7d:	pop    rbx
   44d7e:	pop    rbp
   44d7f:	pop    r12
   44d81:	pop    r13
   44d83:	pop    r14
   44d85:	pop    r15
   44d87:	ret    
   44d88:	nop    DWORD PTR [rax+rax*1+0x0]
   44d90:	lea    rdi,[rbx+0x4]
   44d94:	mov    esi,0xc
   44d99:	call   45f00 <strnlen1>
   44d9e:	lea    rdx,[rax+0x4]
   44da2:	jmp    44d20 <rpl_mbsrtowcs+0x80>
   44da7:	nop    WORD PTR [rax+rax*1+0x0]
   44db0:	mov    rax,QWORD PTR [r12]
   44db4:	xor    r15d,r15d
   44db7:	mov    rbp,rsp
   44dba:	mov    QWORD PTR [rsp],rax
   44dbe:	xchg   ax,ax
   44dc0:	cmp    BYTE PTR [rbx],0x0
   44dc3:	mov    edx,0x1
   44dc8:	je     44df0 <rpl_mbsrtowcs+0x150>
   44dca:	cmp    BYTE PTR [rbx+0x1],0x0
   44dce:	mov    edx,0x2
   44dd3:	je     44df0 <rpl_mbsrtowcs+0x150>
   44dd5:	cmp    BYTE PTR [rbx+0x2],0x0
   44dd9:	mov    edx,0x3
   44dde:	je     44df0 <rpl_mbsrtowcs+0x150>
   44de0:	cmp    BYTE PTR [rbx+0x3],0x0
   44de4:	mov    edx,0x4
   44de9:	jne    44e60 <rpl_mbsrtowcs+0x1c0>
   44deb:	nop    DWORD PTR [rax+rax*1+0x0]
   44df0:	xor    edi,edi
   44df2:	mov    rcx,rbp
   44df5:	mov    rsi,rbx
   44df8:	call   44c00 <rpl_mbrtowc>
   44dfd:	cmp    rax,0xfffffffffffffffe
   44e01:	je     128ab <rpl_mbsrtowcs.cold>
   44e07:	cmp    rax,0xffffffffffffffff
   44e0b:	je     44e23 <rpl_mbsrtowcs+0x183>
   44e0d:	test   rax,rax
   44e10:	je     44d62 <rpl_mbsrtowcs+0xc2>
   44e16:	add    rbx,rax
   44e19:	add    r15,0x1
   44e1d:	jmp    44dc0 <rpl_mbsrtowcs+0x120>
   44e1f:	nop
   44e20:	mov    QWORD PTR [r14],rbx
   44e23:	call   104b0 <__errno_location@plt>
   44e28:	mov    r15,0xffffffffffffffff
   44e2f:	mov    DWORD PTR [rax],0x54
   44e35:	jmp    44d62 <rpl_mbsrtowcs+0xc2>
   44e3a:	nop    WORD PTR [rax+rax*1+0x0]
   44e40:	lea    r12,[rip+0x35a81]        # 7a8c8 <_gl_mbsrtowcs_state>
   44e47:	jmp    44cd7 <rpl_mbsrtowcs+0x37>
   44e4c:	nop    DWORD PTR [rax+0x0]
   44e50:	sub    r15,r13
   44e53:	xor    ebx,ebx
   44e55:	sar    r15,0x2
   44e59:	jmp    44d5f <rpl_mbsrtowcs+0xbf>
   44e5e:	xchg   ax,ax
   44e60:	lea    rdi,[rbx+0x4]
   44e64:	mov    esi,0xc
   44e69:	call   45f00 <strnlen1>
   44e6e:	lea    rdx,[rax+0x4]
   44e72:	jmp    44df0 <rpl_mbsrtowcs+0x150>
   44e77:	xor    r15d,r15d
   44e7a:	jmp    44d5f <rpl_mbsrtowcs+0xbf>
   44e7f:	call   11760 <__stack_chk_fail@plt>
   44e84:	cs nop WORD PTR [rax+rax*1+0x0]
   44e8e:	xchg   ax,ax

0000000000044e90 <mbszero>:
   44e90:	endbr64 
   44e94:	mov    QWORD PTR [rdi],0x0
   44e9b:	ret    
   44e9c:	nop    DWORD PTR [rax+0x0]

0000000000044ea0 <rpl_nanosleep>:
   44ea0:	endbr64 
   44ea4:	push   r12
   44ea6:	push   rbp
   44ea7:	push   rbx
   44ea8:	sub    rsp,0x20
   44eac:	mov    rax,QWORD PTR fs:0x28
   44eb5:	mov    QWORD PTR [rsp+0x18],rax
   44eba:	xor    eax,eax
   44ebc:	cmp    QWORD PTR [rdi+0x8],0x3b9ac9ff
   44ec4:	ja     44f58 <rpl_nanosleep+0xb8>
   44eca:	movdqu xmm0,XMMWORD PTR [rdi]
   44ece:	mov    rbx,QWORD PTR [rdi]
   44ed1:	mov    rbp,rsi
   44ed4:	mov    r12,rsp
   44ed7:	movaps XMMWORD PTR [rsp],xmm0
   44edb:	cmp    rbx,0x1fa400
   44ee2:	jg     44f02 <rpl_nanosleep+0x62>
   44ee4:	jmp    44f30 <rpl_nanosleep+0x90>
   44ee6:	cs nop WORD PTR [rax+rax*1+0x0]
   44ef0:	mov    QWORD PTR [rsp+0x8],0x0
   44ef9:	cmp    rbx,0x1fa400
   44f00:	jle    44f30 <rpl_nanosleep+0x90>
   44f02:	mov    rsi,rbp
   44f05:	mov    rdi,r12
   44f08:	mov    QWORD PTR [rsp],0x1fa400
   44f10:	sub    rbx,0x1fa400
   44f17:	call   108f0 <nanosleep@plt>
   44f1c:	test   eax,eax
   44f1e:	je     44ef0 <rpl_nanosleep+0x50>
   44f20:	test   rbp,rbp
   44f23:	je     44f3f <rpl_nanosleep+0x9f>
   44f25:	add    QWORD PTR [rbp+0x0],rbx
   44f29:	jmp    44f3f <rpl_nanosleep+0x9f>
   44f2b:	nop    DWORD PTR [rax+rax*1+0x0]
   44f30:	mov    rsi,rbp
   44f33:	mov    rdi,r12
   44f36:	mov    QWORD PTR [rsp],rbx
   44f3a:	call   108f0 <nanosleep@plt>
   44f3f:	mov    rdx,QWORD PTR [rsp+0x18]
   44f44:	sub    rdx,QWORD PTR fs:0x28
   44f4d:	jne    44f6a <rpl_nanosleep+0xca>
   44f4f:	add    rsp,0x20
   44f53:	pop    rbx
   44f54:	pop    rbp
   44f55:	pop    r12
   44f57:	ret    
   44f58:	call   104b0 <__errno_location@plt>
   44f5d:	mov    DWORD PTR [rax],0x16
   44f63:	mov    eax,0xffffffff
   44f68:	jmp    44f3f <rpl_nanosleep+0x9f>
   44f6a:	call   11760 <__stack_chk_fail@plt>
   44f6f:	nop

0000000000044f70 <openat_save_fail>:
   44f70:	endbr64 
   44f74:	push   r12
   44f76:	mov    edx,0x5
   44f7b:	lea    rsi,[rip+0x132f6]        # 58278 <default_tuning+0x38>
   44f82:	push   rbp
   44f83:	mov    ebp,edi
   44f85:	xor    edi,edi
   44f87:	sub    rsp,0x8
   44f8b:	lea    rax,[rip+0x32476]        # 77408 <exit_failure>
   44f92:	mov    r12d,DWORD PTR [rax]
   44f95:	call   10f90 <dcgettext@plt>
   44f9a:	mov    esi,ebp
   44f9c:	mov    rdx,rax
   44f9f:	mov    edi,r12d
   44fa2:	xor    eax,eax
   44fa4:	call   121e0 <error@plt>
   44fa9:	call   10cb0 <abort@plt>
   44fae:	xchg   ax,ax

0000000000044fb0 <openat_restore_fail>:
   44fb0:	endbr64 
   44fb4:	push   r12
   44fb6:	mov    edx,0x5
   44fbb:	lea    rsi,[rip+0x132e6]        # 582a8 <default_tuning+0x68>
   44fc2:	push   rbp
   44fc3:	mov    ebp,edi
   44fc5:	xor    edi,edi
   44fc7:	sub    rsp,0x8
   44fcb:	lea    rax,[rip+0x32436]        # 77408 <exit_failure>
   44fd2:	mov    r12d,DWORD PTR [rax]
   44fd5:	call   10f90 <dcgettext@plt>
   44fda:	mov    esi,ebp
   44fdc:	mov    rdx,rax
   44fdf:	mov    edi,r12d
   44fe2:	xor    eax,eax
   44fe4:	call   121e0 <error@plt>
   44fe9:	call   10cb0 <abort@plt>
   44fee:	xchg   ax,ax

0000000000044ff0 <rpl_pipe2>:
   44ff0:	endbr64 
   44ff4:	push   r13
   44ff6:	push   r12
   44ff8:	push   rbp
   44ff9:	mov    ebp,esi
   44ffb:	push   rbx
   44ffc:	mov    rbx,rdi
   44fff:	sub    rsp,0x8
   45003:	mov    eax,DWORD PTR [rip+0x35767]        # 7a770 <have_pipe2_really.0>
   45009:	mov    r13,QWORD PTR [rdi]
   4500c:	test   eax,eax
   4500e:	jns    45160 <rpl_pipe2+0x170>
   45014:	mov    r12d,ebp
   45017:	and    r12d,0xfff7f7ff
   4501e:	jne    451a0 <rpl_pipe2+0x1b0>
   45024:	mov    rdi,rbx
   45027:	call   11b50 <pipe@plt>
   4502c:	test   eax,eax
   4502e:	js     451b6 <rpl_pipe2+0x1c6>
   45034:	test   ebp,0x800
   4503a:	jne    45060 <rpl_pipe2+0x70>
   4503c:	and    ebp,0x80000
   45042:	jne    450f0 <rpl_pipe2+0x100>
   45048:	add    rsp,0x8
   4504c:	mov    eax,r12d
   4504f:	pop    rbx
   45050:	pop    rbp
   45051:	pop    r12
   45053:	pop    r13
   45055:	ret    
   45056:	cs nop WORD PTR [rax+rax*1+0x0]
   45060:	mov    edi,DWORD PTR [rbx+0x4]
   45063:	xor    edx,edx
   45065:	xor    eax,eax
   45067:	mov    esi,0x3
   4506c:	call   40550 <rpl_fcntl>
   45071:	test   eax,eax
   45073:	js     450c0 <rpl_pipe2+0xd0>
   45075:	or     ah,0x8
   45078:	mov    edi,DWORD PTR [rbx+0x4]
   4507b:	mov    esi,0x4
   45080:	mov    edx,eax
   45082:	xor    eax,eax
   45084:	call   40550 <rpl_fcntl>
   45089:	cmp    eax,0xffffffff
   4508c:	je     450c0 <rpl_pipe2+0xd0>
   4508e:	mov    edi,DWORD PTR [rbx]
   45090:	xor    edx,edx
   45092:	xor    eax,eax
   45094:	mov    esi,0x3
   45099:	call   40550 <rpl_fcntl>
   4509e:	test   eax,eax
   450a0:	js     450c0 <rpl_pipe2+0xd0>
   450a2:	or     ah,0x8
   450a5:	mov    edi,DWORD PTR [rbx]
   450a7:	mov    esi,0x4
   450ac:	mov    edx,eax
   450ae:	xor    eax,eax
   450b0:	call   40550 <rpl_fcntl>
   450b5:	cmp    eax,0xffffffff
   450b8:	jne    4503c <rpl_pipe2+0x4c>
   450ba:	nop    WORD PTR [rax+rax*1+0x0]
   450c0:	call   104b0 <__errno_location@plt>
   450c5:	mov    edi,DWORD PTR [rbx]
   450c7:	mov    r12d,DWORD PTR [rax]
   450ca:	mov    rbp,rax
   450cd:	call   12740 <close@plt>
   450d2:	mov    edi,DWORD PTR [rbx+0x4]
   450d5:	call   12740 <close@plt>
   450da:	mov    QWORD PTR [rbx],r13
   450dd:	mov    DWORD PTR [rbp+0x0],r12d
   450e1:	mov    r12d,0xffffffff
   450e7:	jmp    45048 <rpl_pipe2+0x58>
   450ec:	nop    DWORD PTR [rax+0x0]
   450f0:	mov    edi,DWORD PTR [rbx+0x4]
   450f3:	xor    edx,edx
   450f5:	xor    eax,eax
   450f7:	mov    esi,0x1
   450fc:	call   40550 <rpl_fcntl>
   45101:	test   eax,eax
   45103:	js     450c0 <rpl_pipe2+0xd0>
   45105:	or     eax,0x1
   45108:	mov    edi,DWORD PTR [rbx+0x4]
   4510b:	mov    esi,0x2
   45110:	mov    edx,eax
   45112:	xor    eax,eax
   45114:	call   40550 <rpl_fcntl>
   45119:	cmp    eax,0xffffffff
   4511c:	je     450c0 <rpl_pipe2+0xd0>
   4511e:	mov    edi,DWORD PTR [rbx]
   45120:	xor    edx,edx
   45122:	xor    eax,eax
   45124:	mov    esi,0x1
   45129:	call   40550 <rpl_fcntl>
   4512e:	test   eax,eax
   45130:	js     450c0 <rpl_pipe2+0xd0>
   45132:	or     eax,0x1
   45135:	mov    edi,DWORD PTR [rbx]
   45137:	mov    esi,0x2
   4513c:	mov    edx,eax
   4513e:	xor    eax,eax
   45140:	call   40550 <rpl_fcntl>
   45145:	cmp    eax,0xffffffff
   45148:	je     450c0 <rpl_pipe2+0xd0>
   4514e:	add    rsp,0x8
   45152:	mov    eax,r12d
   45155:	pop    rbx
   45156:	pop    rbp
   45157:	pop    r12
   45159:	pop    r13
   4515b:	ret    
   4515c:	nop    DWORD PTR [rax+0x0]
   45160:	call   10f00 <pipe2@plt>
   45165:	mov    r12d,eax
   45168:	test   eax,eax
   4516a:	jns    45176 <rpl_pipe2+0x186>
   4516c:	call   104b0 <__errno_location@plt>
   45171:	cmp    DWORD PTR [rax],0x26
   45174:	je     45190 <rpl_pipe2+0x1a0>
   45176:	mov    DWORD PTR [rip+0x355f0],0x1        # 7a770 <have_pipe2_really.0>
   45180:	add    rsp,0x8
   45184:	mov    eax,r12d
   45187:	pop    rbx
   45188:	pop    rbp
   45189:	pop    r12
   4518b:	pop    r13
   4518d:	ret    
   4518e:	xchg   ax,ax
   45190:	mov    DWORD PTR [rip+0x355d6],0xffffffff        # 7a770 <have_pipe2_really.0>
   4519a:	jmp    45014 <rpl_pipe2+0x24>
   4519f:	nop
   451a0:	call   104b0 <__errno_location@plt>
   451a5:	mov    r12d,0xffffffff
   451ab:	mov    DWORD PTR [rax],0x16
   451b1:	jmp    45048 <rpl_pipe2+0x58>
   451b6:	mov    r12d,0xffffffff
   451bc:	jmp    45048 <rpl_pipe2+0x58>
   451c1:	cs nop WORD PTR [rax+rax*1+0x0]
   451cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000451d0 <pipe2_safer>:
   451d0:	endbr64 
   451d4:	push   r12
   451d6:	push   rbp
   451d7:	mov    ebp,esi
   451d9:	push   rbx
   451da:	mov    rbx,rdi
   451dd:	call   44ff0 <rpl_pipe2>
   451e2:	test   eax,eax
   451e4:	jne    4523a <pipe2_safer+0x6a>
   451e6:	mov    edi,DWORD PTR [rbx]
   451e8:	mov    esi,ebp
   451ea:	mov    r12d,eax
   451ed:	call   407c0 <fd_safer_flag>
   451f2:	mov    DWORD PTR [rbx],eax
   451f4:	test   eax,eax
   451f6:	js     45218 <pipe2_safer+0x48>
   451f8:	mov    edi,DWORD PTR [rbx+0x4]
   451fb:	mov    esi,ebp
   451fd:	call   407c0 <fd_safer_flag>
   45202:	mov    DWORD PTR [rbx+0x4],eax
   45205:	test   eax,eax
   45207:	js     4521c <pipe2_safer+0x4c>
   45209:	mov    eax,r12d
   4520c:	pop    rbx
   4520d:	pop    rbp
   4520e:	pop    r12
   45210:	ret    
   45211:	nop    DWORD PTR [rax+0x0]
   45218:	add    rbx,0x4
   4521c:	call   104b0 <__errno_location@plt>
   45221:	mov    edi,DWORD PTR [rbx]
   45223:	mov    r12d,DWORD PTR [rax]
   45226:	mov    rbp,rax
   45229:	call   12740 <close@plt>
   4522e:	mov    DWORD PTR [rbp+0x0],r12d
   45232:	mov    r12d,0xffffffff
   45238:	jmp    45209 <pipe2_safer+0x39>
   4523a:	mov    r12d,0xffffffff
   45240:	jmp    45209 <pipe2_safer+0x39>
   45242:	cs nop WORD PTR [rax+rax*1+0x0]
   4524c:	nop    DWORD PTR [rax+0x0]

0000000000045250 <posix_spawn_file_actions_addchdir>:
   45250:	endbr64 
   45254:	jmp    10730 <posix_spawn_file_actions_addchdir_np@plt>
   45259:	nop    DWORD PTR [rax+0x0]

0000000000045260 <set_program_name>:
   45260:	endbr64 
   45264:	push   r12
   45266:	push   rbp
   45267:	push   rbx
   45268:	test   rdi,rdi
   4526b:	je     452f5 <set_program_name+0x95>
   45271:	mov    esi,0x2f
   45276:	mov    rbx,rdi
   45279:	call   11740 <strrchr@plt>
   4527e:	mov    rbp,rax
   45281:	test   rax,rax
   45284:	je     452d3 <set_program_name+0x73>
   45286:	lea    r12,[rax+0x1]
   4528a:	mov    rax,r12
   4528d:	sub    rax,rbx
   45290:	cmp    rax,0x6
   45294:	jle    452d3 <set_program_name+0x73>
   45296:	lea    rdi,[rbp-0x6]
   4529a:	mov    edx,0x7
   4529f:	lea    rsi,[rip+0x1306a]        # 58310 <default_tuning+0xd0>
   452a6:	call   10b10 <strncmp@plt>
   452ab:	test   eax,eax
   452ad:	jne    452d3 <set_program_name+0x73>
   452af:	cmp    BYTE PTR [rbp+0x1],0x6c
   452b3:	jne    452f0 <set_program_name+0x90>
   452b5:	cmp    BYTE PTR [r12+0x1],0x74
   452bb:	jne    452f0 <set_program_name+0x90>
   452bd:	cmp    BYTE PTR [r12+0x2],0x2d
   452c3:	jne    452f0 <set_program_name+0x90>
   452c5:	mov    rax,QWORD PTR [rip+0x30cec]        # 75fb8 <program_invocation_short_name@GLIBC_2.2.5>
   452cc:	lea    rbx,[rbp+0x4]
   452d0:	mov    QWORD PTR [rax],rbx
   452d3:	mov    rax,QWORD PTR [rip+0x30c6e]        # 75f48 <program_invocation_name@GLIBC_2.2.5>
   452da:	mov    QWORD PTR [rip+0x35497],rbx        # 7a778 <program_name>
   452e1:	mov    QWORD PTR [rax],rbx
   452e4:	pop    rbx
   452e5:	pop    rbp
   452e6:	pop    r12
   452e8:	ret    
   452e9:	nop    DWORD PTR [rax+0x0]
   452f0:	mov    rbx,r12
   452f3:	jmp    452d3 <set_program_name+0x73>
   452f5:	mov    rax,QWORD PTR [rip+0x30cb4]        # 75fb0 <stderr@GLIBC_2.2.5>
   452fc:	mov    edx,0x37
   45301:	mov    esi,0x1
   45306:	lea    rdi,[rip+0x12fcb]        # 582d8 <default_tuning+0x98>
   4530d:	mov    rcx,QWORD PTR [rax]
   45310:	call   12730 <fwrite@plt>
   45315:	call   10cb0 <abort@plt>
   4531a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000045320 <safe_read>:
   45320:	endbr64 
   45324:	push   r13
   45326:	mov    r13d,edi
   45329:	push   r12
   4532b:	push   rbp
   4532c:	mov    rbp,rsi
   4532f:	push   rbx
   45330:	mov    rbx,rdx
   45333:	sub    rsp,0x8
   45337:	nop    WORD PTR [rax+rax*1+0x0]
   45340:	mov    rdx,rbx
   45343:	mov    rsi,rbp
   45346:	mov    edi,r13d
   45349:	call   11d60 <read@plt>
   4534e:	mov    r12,rax
   45351:	test   rax,rax
   45354:	jns    45380 <safe_read+0x60>
   45356:	call   104b0 <__errno_location@plt>
   4535b:	mov    eax,DWORD PTR [rax]
   4535d:	cmp    eax,0x4
   45360:	je     45340 <safe_read+0x20>
   45362:	cmp    rbx,0x7ff00000
   45369:	jbe    45380 <safe_read+0x60>
   4536b:	cmp    eax,0x16
   4536e:	jne    45380 <safe_read+0x60>
   45370:	mov    ebx,0x7ff00000
   45375:	jmp    45340 <safe_read+0x20>
   45377:	nop    WORD PTR [rax+rax*1+0x0]
   45380:	add    rsp,0x8
   45384:	mov    rax,r12
   45387:	pop    rbx
   45388:	pop    rbp
   45389:	pop    r12
   4538b:	pop    r13
   4538d:	ret    
   4538e:	xchg   ax,ax

0000000000045390 <safe_write>:
   45390:	endbr64 
   45394:	push   r13
   45396:	mov    r13d,edi
   45399:	push   r12
   4539b:	push   rbp
   4539c:	mov    rbp,rsi
   4539f:	push   rbx
   453a0:	mov    rbx,rdx
   453a3:	sub    rsp,0x8
   453a7:	nop    WORD PTR [rax+rax*1+0x0]
   453b0:	mov    rdx,rbx
   453b3:	mov    rsi,rbp
   453b6:	mov    edi,r13d
   453b9:	call   109b0 <write@plt>
   453be:	mov    r12,rax
   453c1:	test   rax,rax
   453c4:	jns    453f0 <safe_write+0x60>
   453c6:	call   104b0 <__errno_location@plt>
   453cb:	mov    eax,DWORD PTR [rax]
   453cd:	cmp    eax,0x4
   453d0:	je     453b0 <safe_write+0x20>
   453d2:	cmp    eax,0x16
   453d5:	jne    453f0 <safe_write+0x60>
   453d7:	cmp    rbx,0x7ff00000
   453de:	jbe    453f0 <safe_write+0x60>
   453e0:	mov    ebx,0x7ff00000
   453e5:	jmp    453b0 <safe_write+0x20>
   453e7:	nop    WORD PTR [rax+rax*1+0x0]
   453f0:	add    rsp,0x8
   453f4:	mov    rax,r12
   453f7:	pop    rbx
   453f8:	pop    rbp
   453f9:	pop    r12
   453fb:	pop    r13
   453fd:	ret    
   453fe:	xchg   ax,ax

0000000000045400 <save_cwd>:
   45400:	endbr64 
   45404:	push   rbx
   45405:	mov    esi,0x80000
   4540a:	mov    rbx,rdi
   4540d:	xor    eax,eax
   4540f:	mov    QWORD PTR [rdi+0x8],0x0
   45417:	lea    rdi,[rip+0x7d26]        # 4d144 <__func__.4+0x24>
   4541e:	call   11070 <open@plt>
   45423:	mov    esi,0x80000
   45428:	mov    DWORD PTR [rbx],eax
   4542a:	mov    edi,eax
   4542c:	call   407c0 <fd_safer_flag>
   45431:	xor    r8d,r8d
   45434:	mov    DWORD PTR [rbx],eax
   45436:	test   eax,eax
   45438:	js     45440 <save_cwd+0x40>
   4543a:	mov    eax,r8d
   4543d:	pop    rbx
   4543e:	ret    
   4543f:	nop
   45440:	xor    esi,esi
   45442:	xor    edi,edi
   45444:	call   10c10 <getcwd@plt>
   45449:	cmp    rax,0x1
   4544d:	mov    QWORD PTR [rbx+0x8],rax
   45451:	pop    rbx
   45452:	sbb    r8d,r8d
   45455:	mov    eax,r8d
   45458:	ret    
   45459:	nop    DWORD PTR [rax+0x0]

0000000000045460 <restore_cwd>:
   45460:	endbr64 
   45464:	mov    r8d,DWORD PTR [rdi]
   45467:	test   r8d,r8d
   4546a:	js     45478 <restore_cwd+0x18>
   4546c:	mov    edi,r8d
   4546f:	jmp    11b60 <fchdir@plt>
   45474:	nop    DWORD PTR [rax+0x0]
   45478:	mov    rdi,QWORD PTR [rdi+0x8]
   4547c:	jmp    35220 <chdir_long>
   45481:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4548c:	nop    DWORD PTR [rax+0x0]

0000000000045490 <free_cwd>:
   45490:	endbr64 
   45494:	push   rbx
   45495:	mov    rbx,rdi
   45498:	mov    edi,DWORD PTR [rdi]
   4549a:	test   edi,edi
   4549c:	js     454a3 <free_cwd+0x13>
   4549e:	call   12740 <close@plt>
   454a3:	mov    rdi,QWORD PTR [rbx+0x8]
   454a7:	pop    rbx
   454a8:	jmp    10430 <free@plt>
   454ad:	nop    DWORD PTR [rax]

00000000000454b0 <setlocale_null_r>:
   454b0:	endbr64 
   454b4:	push   r13
   454b6:	push   r12
   454b8:	mov    r12,rsi
   454bb:	xor    esi,esi
   454bd:	push   rbp
   454be:	push   rbx
   454bf:	mov    rbx,rdx
   454c2:	sub    rsp,0x8
   454c6:	call   11400 <setlocale@plt>
   454cb:	test   rax,rax
   454ce:	je     45548 <setlocale_null_r+0x98>
   454d0:	mov    rdi,rax
   454d3:	mov    rbp,rax
   454d6:	call   10ab0 <strlen@plt>
   454db:	cmp    rbx,rax
   454de:	ja     45500 <setlocale_null_r+0x50>
   454e0:	mov    r13d,0x22
   454e6:	test   rbx,rbx
   454e9:	jne    45520 <setlocale_null_r+0x70>
   454eb:	add    rsp,0x8
   454ef:	mov    eax,r13d
   454f2:	pop    rbx
   454f3:	pop    rbp
   454f4:	pop    r12
   454f6:	pop    r13
   454f8:	ret    
   454f9:	nop    DWORD PTR [rax+0x0]
   45500:	mov    rsi,rbp
   45503:	mov    rdi,r12
   45506:	lea    rdx,[rax+0x1]
   4550a:	xor    r13d,r13d
   4550d:	call   11220 <memcpy@plt>
   45512:	add    rsp,0x8
   45516:	mov    eax,r13d
   45519:	pop    rbx
   4551a:	pop    rbp
   4551b:	pop    r12
   4551d:	pop    r13
   4551f:	ret    
   45520:	lea    rdx,[rbx-0x1]
   45524:	mov    rsi,rbp
   45527:	mov    rdi,r12
   4552a:	call   11220 <memcpy@plt>
   4552f:	mov    BYTE PTR [r12+rbx*1-0x1],0x0
   45535:	add    rsp,0x8
   45539:	mov    eax,r13d
   4553c:	pop    rbx
   4553d:	pop    rbp
   4553e:	pop    r12
   45540:	pop    r13
   45542:	ret    
   45543:	nop    DWORD PTR [rax+rax*1+0x0]
   45548:	mov    r13d,0x16
   4554e:	test   rbx,rbx
   45551:	je     454eb <setlocale_null_r+0x3b>
   45553:	mov    BYTE PTR [r12],0x0
   45558:	jmp    454eb <setlocale_null_r+0x3b>
   4555a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000045560 <setlocale_null>:
   45560:	endbr64 
   45564:	xor    esi,esi
   45566:	jmp    11400 <setlocale@plt>
   4556b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000045570 <get_handler>:
   45570:	endbr64 
   45574:	mov    rax,QWORD PTR [rdi]
   45577:	ret    
   45578:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000045580 <gl_sockets_startup>:
   45580:	endbr64 
   45584:	xor    eax,eax
   45586:	ret    
   45587:	nop    WORD PTR [rax+rax*1+0x0]

0000000000045590 <gl_sockets_cleanup>:
   45590:	endbr64 
   45594:	xor    eax,eax
   45596:	ret    
   45597:	nop    WORD PTR [rax+rax*1+0x0]

00000000000455a0 <create_pipe>:
   455a0:	push   r15
   455a2:	xor    r15d,r15d
   455a5:	push   r14
   455a7:	push   r13
   455a9:	mov    r13,rsi
   455ac:	push   r12
   455ae:	mov    r12d,r9d
   455b1:	push   rbp
   455b2:	mov    ebp,r8d
   455b5:	push   rbx
   455b6:	sub    rsp,0x298
   455bd:	mov    rax,QWORD PTR [rsp+0x2d0]
   455c5:	mov    QWORD PTR [rsp+0x38],rdi
   455ca:	mov    QWORD PTR [rsp+0x30],rdx
   455cf:	mov    QWORD PTR [rsp+0x20],rax
   455d4:	mov    rax,QWORD PTR [rsp+0x2d8]
   455dc:	mov    QWORD PTR [rsp+0x18],rcx
   455e1:	mov    QWORD PTR [rsp+0x28],rax
   455e6:	mov    eax,DWORD PTR [rsp+0x2e0]
   455ed:	mov    DWORD PTR [rsp+0x8],eax
   455f1:	mov    eax,DWORD PTR [rsp+0x2e8]
   455f8:	mov    DWORD PTR [rsp+0x4],eax
   455fc:	mov    eax,DWORD PTR [rsp+0x2f0]
   45603:	mov    DWORD PTR [rsp+0xc],eax
   45607:	mov    rax,QWORD PTR [rsp+0x2f8]
   4560f:	mov    QWORD PTR [rsp+0x10],rax
   45614:	mov    rax,QWORD PTR fs:0x28
   4561d:	mov    QWORD PTR [rsp+0x288],rax
   45625:	xor    eax,eax
   45627:	test   rcx,rcx
   4562a:	je     45635 <create_pipe+0x95>
   4562c:	cmp    BYTE PTR [rsi],0x2f
   4562f:	jne    45750 <create_pipe+0x1b0>
   45635:	test   r12b,r12b
   45638:	jne    457c0 <create_pipe+0x220>
   4563e:	test   bpl,bpl
   45641:	jne    45948 <create_pipe+0x3a8>
   45647:	cmp    BYTE PTR [rsp+0x4],0x0
   4564c:	jne    45900 <create_pipe+0x360>
   45652:	lea    r14,[rsp+0x60]
   45657:	mov    rdi,r14
   4565a:	call   11990 <posix_spawn_file_actions_init@plt>
   4565f:	mov    ebx,eax
   45661:	test   eax,eax
   45663:	jne    456e3 <create_pipe+0x143>
   45665:	test   bpl,bpl
   45668:	jne    45850 <create_pipe+0x2b0>
   4566e:	test   r12b,r12b
   45671:	jne    45878 <create_pipe+0x2d8>
   45677:	test   bpl,bpl
   4567a:	jne    45a90 <create_pipe+0x4f0>
   45680:	test   r12b,r12b
   45683:	jne    45990 <create_pipe+0x3f0>
   45689:	cmp    BYTE PTR [rsp+0x8],0x0
   4568e:	jne    459c8 <create_pipe+0x428>
   45694:	cmp    bpl,0x1
   45698:	je     459f8 <create_pipe+0x458>
   4569e:	cmp    QWORD PTR [rsp+0x20],0x0
   456a4:	je     459f8 <create_pipe+0x458>
   456aa:	mov    rdx,QWORD PTR [rsp+0x20]
   456af:	xor    r8d,r8d
   456b2:	xor    ecx,ecx
   456b4:	xor    esi,esi
   456b6:	mov    rdi,r14
   456b9:	call   121b0 <posix_spawn_file_actions_addopen@plt>
   456be:	mov    ebx,eax
   456c0:	test   eax,eax
   456c2:	je     459f8 <create_pipe+0x458>
   456c8:	nop    DWORD PTR [rax+rax*1+0x0]
   456d0:	mov    rdi,r14
   456d3:	call   11c50 <posix_spawn_file_actions_destroy@plt>
   456d8:	cmp    BYTE PTR [rsp+0x4],0x0
   456dd:	jne    45930 <create_pipe+0x390>
   456e3:	test   r12b,r12b
   456e6:	jne    458a6 <create_pipe+0x306>
   456ec:	test   bpl,bpl
   456ef:	jne    45808 <create_pipe+0x268>
   456f5:	mov    rdi,r15
   456f8:	call   10430 <free@plt>
   456fd:	cmp    BYTE PTR [rsp+0x8],0x1
   45702:	jne    45c5e <create_pipe+0x6be>
   45708:	cmp    BYTE PTR [rsp+0xc],0x0
   4570d:	jne    45c5e <create_pipe+0x6be>
   45713:	call   104b0 <__errno_location@plt>
   45718:	mov    DWORD PTR [rax],ebx
   4571a:	mov    eax,0xffffffff
   4571f:	mov    rdx,QWORD PTR [rsp+0x288]
   45727:	sub    rdx,QWORD PTR fs:0x28
   45730:	jne    45cf7 <create_pipe+0x757>
   45736:	add    rsp,0x298
   4573d:	pop    rbx
   4573e:	pop    rbp
   4573f:	pop    r12
   45741:	pop    r13
   45743:	pop    r14
   45745:	pop    r15
   45747:	ret    
   45748:	nop    DWORD PTR [rax+rax*1+0x0]
   45750:	lea    rdi,[rip+0x12bc1]        # 58318 <default_tuning+0xd8>
   45757:	call   11920 <getenv@plt>
   4575c:	xor    ecx,ecx
   4575e:	xor    edx,edx
   45760:	mov    rdi,r13
   45763:	mov    rsi,rax
   45766:	call   40a80 <find_in_given_path>
   4576b:	test   rax,rax
   4576e:	je     45ad0 <create_pipe+0x530>
   45774:	cmp    r13,rax
   45777:	mov    r13,rax
   4577a:	cmovne r15,rax
   4577e:	cmp    BYTE PTR [rax],0x2f
   45781:	je     45635 <create_pipe+0x95>
   45787:	mov    rdi,rax
   4578a:	mov    esi,0x6
   4578f:	call   34990 <canonicalize_filename_mode>
   45794:	mov    rdi,r15
   45797:	mov    r13,rax
   4579a:	test   rax,rax
   4579d:	je     45aca <create_pipe+0x52a>
   457a3:	call   10430 <free@plt>
   457a8:	cmp    BYTE PTR [r13+0x0],0x2f
   457ad:	jne    128b0 <create_pipe.cold>
   457b3:	mov    r15,r13
   457b6:	test   r12b,r12b
   457b9:	je     4563e <create_pipe+0x9e>
   457bf:	nop
   457c0:	lea    rdi,[rsp+0x50]
   457c5:	mov    esi,0x80000
   457ca:	call   451d0 <pipe2_safer>
   457cf:	test   eax,eax
   457d1:	jns    4563e <create_pipe+0x9e>
   457d7:	mov    edx,0x5
   457dc:	lea    rsi,[rip+0x12b3a]        # 5831d <default_tuning+0xdd>
   457e3:	xor    edi,edi
   457e5:	call   10f90 <dcgettext@plt>
   457ea:	mov    r12,rax
   457ed:	call   104b0 <__errno_location@plt>
   457f2:	mov    rdx,r12
   457f5:	mov    edi,0x1
   457fa:	mov    esi,DWORD PTR [rax]
   457fc:	xor    eax,eax
   457fe:	call   121e0 <error@plt>
   45803:	nop    DWORD PTR [rax+rax*1+0x0]
   45808:	mov    ebp,DWORD PTR [rsp+0x58]
   4580c:	jmp    4581a <create_pipe+0x27a>
   4580e:	xchg   ax,ax
   45810:	call   104b0 <__errno_location@plt>
   45815:	cmp    DWORD PTR [rax],0x4
   45818:	jne    45825 <create_pipe+0x285>
   4581a:	mov    edi,ebp
   4581c:	call   12740 <close@plt>
   45821:	test   eax,eax
   45823:	js     45810 <create_pipe+0x270>
   45825:	mov    ebp,DWORD PTR [rsp+0x5c]
   45829:	jmp    4583e <create_pipe+0x29e>
   4582b:	nop    DWORD PTR [rax+rax*1+0x0]
   45830:	call   104b0 <__errno_location@plt>
   45835:	cmp    DWORD PTR [rax],0x4
   45838:	jne    456f5 <create_pipe+0x155>
   4583e:	mov    edi,ebp
   45840:	call   12740 <close@plt>
   45845:	test   eax,eax
   45847:	js     45830 <create_pipe+0x290>
   45849:	jmp    456f5 <create_pipe+0x155>
   4584e:	xchg   ax,ax
   45850:	mov    esi,DWORD PTR [rsp+0x58]
   45854:	xor    edx,edx
   45856:	mov    rdi,r14
   45859:	call   11440 <posix_spawn_file_actions_adddup2@plt>
   4585e:	mov    ebx,eax
   45860:	test   eax,eax
   45862:	jne    456d0 <create_pipe+0x130>
   45868:	test   r12b,r12b
   4586b:	je     45677 <create_pipe+0xd7>
   45871:	nop    DWORD PTR [rax+0x0]
   45878:	mov    esi,DWORD PTR [rsp+0x54]
   4587c:	mov    edx,0x1
   45881:	mov    rdi,r14
   45884:	call   11440 <posix_spawn_file_actions_adddup2@plt>
   45889:	mov    ebx,eax
   4588b:	test   eax,eax
   4588d:	je     45677 <create_pipe+0xd7>
   45893:	mov    rdi,r14
   45896:	call   11c50 <posix_spawn_file_actions_destroy@plt>
   4589b:	cmp    BYTE PTR [rsp+0x4],0x0
   458a0:	jne    45930 <create_pipe+0x390>
   458a6:	mov    r12d,DWORD PTR [rsp+0x50]
   458ab:	jmp    458ba <create_pipe+0x31a>
   458ad:	nop    DWORD PTR [rax]
   458b0:	call   104b0 <__errno_location@plt>
   458b5:	cmp    DWORD PTR [rax],0x4
   458b8:	jne    458c6 <create_pipe+0x326>
   458ba:	mov    edi,r12d
   458bd:	call   12740 <close@plt>
   458c2:	test   eax,eax
   458c4:	js     458b0 <create_pipe+0x310>
   458c6:	mov    r12d,DWORD PTR [rsp+0x54]
   458cb:	jmp    458de <create_pipe+0x33e>
   458cd:	nop    DWORD PTR [rax]
   458d0:	call   104b0 <__errno_location@plt>
   458d5:	cmp    DWORD PTR [rax],0x4
   458d8:	jne    456ec <create_pipe+0x14c>
   458de:	mov    edi,r12d
   458e1:	call   12740 <close@plt>
   458e6:	test   eax,eax
   458e8:	js     458d0 <create_pipe+0x330>
   458ea:	test   bpl,bpl
   458ed:	je     456f5 <create_pipe+0x155>
   458f3:	jmp    45808 <create_pipe+0x268>
   458f8:	nop    DWORD PTR [rax+rax*1+0x0]
   45900:	lea    rdx,[rsp+0xb0]
   45908:	xor    esi,esi
   4590a:	mov    edi,0x2
   4590f:	call   10b50 <sigprocmask@plt>
   45914:	lea    r14,[rsp+0x60]
   45919:	call   402b0 <block_fatal_signals>
   4591e:	mov    rdi,r14
   45921:	call   11990 <posix_spawn_file_actions_init@plt>
   45926:	mov    ebx,eax
   45928:	test   eax,eax
   4592a:	je     45665 <create_pipe+0xc5>
   45930:	call   40390 <unblock_fatal_signals>
   45935:	test   r12b,r12b
   45938:	je     456ec <create_pipe+0x14c>
   4593e:	jmp    458a6 <create_pipe+0x306>
   45943:	nop    DWORD PTR [rax+rax*1+0x0]
   45948:	lea    rdi,[rsp+0x58]
   4594d:	mov    esi,0x80000
   45952:	call   451d0 <pipe2_safer>
   45957:	test   eax,eax
   45959:	jns    45647 <create_pipe+0xa7>
   4595f:	mov    edx,0x5
   45964:	lea    rsi,[rip+0x129b2]        # 5831d <default_tuning+0xdd>
   4596b:	xor    edi,edi
   4596d:	call   10f90 <dcgettext@plt>
   45972:	mov    r12,rax
   45975:	call   104b0 <__errno_location@plt>
   4597a:	mov    rdx,r12
   4597d:	mov    edi,0x1
   45982:	mov    esi,DWORD PTR [rax]
   45984:	xor    eax,eax
   45986:	call   121e0 <error@plt>
   4598b:	nop    DWORD PTR [rax+rax*1+0x0]
   45990:	mov    esi,DWORD PTR [rsp+0x54]
   45994:	mov    rdi,r14
   45997:	call   126c0 <posix_spawn_file_actions_addclose@plt>
   4599c:	mov    ebx,eax
   4599e:	test   eax,eax
   459a0:	jne    45893 <create_pipe+0x2f3>
   459a6:	mov    esi,DWORD PTR [rsp+0x50]
   459aa:	mov    rdi,r14
   459ad:	call   126c0 <posix_spawn_file_actions_addclose@plt>
   459b2:	mov    ebx,eax
   459b4:	test   eax,eax
   459b6:	jne    45893 <create_pipe+0x2f3>
   459bc:	jmp    45689 <create_pipe+0xe9>
   459c1:	nop    DWORD PTR [rax+0x0]
   459c8:	xor    r8d,r8d
   459cb:	mov    ecx,0x2
   459d0:	mov    esi,0x2
   459d5:	mov    rdi,r14
   459d8:	lea    rdx,[rip+0x12951]        # 58330 <default_tuning+0xf0>
   459df:	call   121b0 <posix_spawn_file_actions_addopen@plt>
   459e4:	mov    ebx,eax
   459e6:	test   eax,eax
   459e8:	jne    456d0 <create_pipe+0x130>
   459ee:	jmp    45694 <create_pipe+0xf4>
   459f3:	nop    DWORD PTR [rax+rax*1+0x0]
   459f8:	cmp    r12b,0x1
   459fc:	je     45a0a <create_pipe+0x46a>
   459fe:	cmp    QWORD PTR [rsp+0x28],0x0
   45a04:	jne    45b20 <create_pipe+0x580>
   45a0a:	cmp    QWORD PTR [rsp+0x18],0x0
   45a10:	je     45ae0 <create_pipe+0x540>
   45a16:	mov    rsi,QWORD PTR [rsp+0x18]
   45a1b:	mov    rdi,r14
   45a1e:	call   45250 <posix_spawn_file_actions_addchdir>
   45a23:	mov    ebx,eax
   45a25:	test   eax,eax
   45a27:	jne    456d0 <create_pipe+0x130>
   45a2d:	cmp    BYTE PTR [rsp+0x4],0x0
   45a32:	jne    45ae7 <create_pipe+0x547>
   45a38:	mov    rax,QWORD PTR [rip+0x30589]        # 75fc8 <environ@GLIBC_2.2.5>
   45a3f:	mov    BYTE PTR [rsp+0x20],0x0
   45a44:	xor    ecx,ecx
   45a46:	mov    r9,QWORD PTR [rax]
   45a49:	mov    r8,QWORD PTR [rsp+0x30]
   45a4e:	lea    rdi,[rsp+0x4c]
   45a53:	mov    rdx,r14
   45a56:	mov    rsi,r13
   45a59:	call   10840 <posix_spawn@plt>
   45a5e:	mov    ebx,eax
   45a60:	mov    rdi,r14
   45a63:	test   ebx,ebx
   45a65:	je     45b90 <create_pipe+0x5f0>
   45a6b:	call   11c50 <posix_spawn_file_actions_destroy@plt>
   45a70:	cmp    BYTE PTR [rsp+0x20],0x0
   45a75:	je     456d8 <create_pipe+0x138>
   45a7b:	lea    r8,[rsp+0x130]
   45a83:	mov    rdi,r8
   45a86:	call   10460 <posix_spawnattr_destroy@plt>
   45a8b:	jmp    456d8 <create_pipe+0x138>
   45a90:	mov    esi,DWORD PTR [rsp+0x58]
   45a94:	mov    rdi,r14
   45a97:	call   126c0 <posix_spawn_file_actions_addclose@plt>
   45a9c:	mov    ebx,eax
   45a9e:	test   eax,eax
   45aa0:	jne    456d0 <create_pipe+0x130>
   45aa6:	test   r12b,r12b
   45aa9:	jne    45d06 <create_pipe+0x766>
   45aaf:	mov    esi,DWORD PTR [rsp+0x5c]
   45ab3:	mov    rdi,r14
   45ab6:	call   126c0 <posix_spawn_file_actions_addclose@plt>
   45abb:	mov    ebx,eax
   45abd:	test   eax,eax
   45abf:	jne    456d0 <create_pipe+0x130>
   45ac5:	jmp    45689 <create_pipe+0xe9>
   45aca:	call   10430 <free@plt>
   45acf:	nop
   45ad0:	call   104b0 <__errno_location@plt>
   45ad5:	mov    ebx,DWORD PTR [rax]
   45ad7:	jmp    456fd <create_pipe+0x15d>
   45adc:	nop    DWORD PTR [rax+0x0]
   45ae0:	cmp    BYTE PTR [rsp+0x4],0x0
   45ae5:	je     45b5c <create_pipe+0x5bc>
   45ae7:	lea    r8,[rsp+0x130]
   45aef:	mov    rdi,r8
   45af2:	mov    QWORD PTR [rsp+0x20],r8
   45af7:	call   121a0 <posix_spawnattr_init@plt>
   45afc:	mov    r8,QWORD PTR [rsp+0x20]
   45b01:	test   eax,eax
   45b03:	mov    ebx,eax
   45b05:	je     45c8c <create_pipe+0x6ec>
   45b0b:	mov    rdi,r14
   45b0e:	call   11c50 <posix_spawn_file_actions_destroy@plt>
   45b13:	jmp    45930 <create_pipe+0x390>
   45b18:	nop    DWORD PTR [rax+rax*1+0x0]
   45b20:	mov    rdx,QWORD PTR [rsp+0x28]
   45b25:	xor    r8d,r8d
   45b28:	mov    ecx,0x1
   45b2d:	mov    rdi,r14
   45b30:	mov    esi,0x1
   45b35:	call   121b0 <posix_spawn_file_actions_addopen@plt>
   45b3a:	mov    ebx,eax
   45b3c:	test   eax,eax
   45b3e:	je     45a0a <create_pipe+0x46a>
   45b44:	mov    rdi,r14
   45b47:	call   11c50 <posix_spawn_file_actions_destroy@plt>
   45b4c:	cmp    BYTE PTR [rsp+0x4],0x0
   45b51:	je     456ec <create_pipe+0x14c>
   45b57:	jmp    45930 <create_pipe+0x390>
   45b5c:	mov    rax,QWORD PTR [rip+0x30465]        # 75fc8 <environ@GLIBC_2.2.5>
   45b63:	mov    BYTE PTR [rsp+0x20],0x0
   45b68:	mov    r9,QWORD PTR [rax]
   45b6b:	mov    r8,QWORD PTR [rsp+0x30]
   45b70:	mov    rcx,QWORD PTR [rsp+0x18]
   45b75:	mov    rdx,r14
   45b78:	mov    rsi,r13
   45b7b:	lea    rdi,[rsp+0x4c]
   45b80:	call   12490 <posix_spawnp@plt>
   45b85:	mov    ebx,eax
   45b87:	jmp    45a60 <create_pipe+0x4c0>
   45b8c:	nop    DWORD PTR [rax+0x0]
   45b90:	call   11c50 <posix_spawn_file_actions_destroy@plt>
   45b95:	cmp    BYTE PTR [rsp+0x20],0x0
   45b9a:	je     45ba9 <create_pipe+0x609>
   45b9c:	lea    rdi,[rsp+0x130]
   45ba4:	call   10460 <posix_spawnattr_destroy@plt>
   45ba9:	cmp    BYTE PTR [rsp+0x4],0x0
   45bae:	je     45bbe <create_pipe+0x61e>
   45bb0:	mov    edi,DWORD PTR [rsp+0x4c]
   45bb4:	call   47b30 <register_slave_subprocess>
   45bb9:	call   40390 <unblock_fatal_signals>
   45bbe:	test   bpl,bpl
   45bc1:	jne    45c30 <create_pipe+0x690>
   45bc3:	test   r12b,r12b
   45bc6:	jne    45bf0 <create_pipe+0x650>
   45bc8:	mov    rdi,r15
   45bcb:	call   10430 <free@plt>
   45bd0:	test   bpl,bpl
   45bd3:	je     45be1 <create_pipe+0x641>
   45bd5:	mov    eax,DWORD PTR [rsp+0x5c]
   45bd9:	mov    rdx,QWORD PTR [rsp+0x10]
   45bde:	mov    DWORD PTR [rdx+0x4],eax
   45be1:	mov    eax,DWORD PTR [rsp+0x4c]
   45be5:	jmp    4571f <create_pipe+0x17f>
   45bea:	nop    WORD PTR [rax+rax*1+0x0]
   45bf0:	mov    ebx,DWORD PTR [rsp+0x54]
   45bf4:	jmp    45c0a <create_pipe+0x66a>
   45bf6:	cs nop WORD PTR [rax+rax*1+0x0]
   45c00:	call   104b0 <__errno_location@plt>
   45c05:	cmp    DWORD PTR [rax],0x4
   45c08:	jne    45c15 <create_pipe+0x675>
   45c0a:	mov    edi,ebx
   45c0c:	call   12740 <close@plt>
   45c11:	test   eax,eax
   45c13:	js     45c00 <create_pipe+0x660>
   45c15:	mov    rdi,r15
   45c18:	call   10430 <free@plt>
   45c1d:	mov    eax,DWORD PTR [rsp+0x50]
   45c21:	mov    rsi,QWORD PTR [rsp+0x10]
   45c26:	mov    DWORD PTR [rsi],eax
   45c28:	jmp    45bd0 <create_pipe+0x630>
   45c2a:	nop    WORD PTR [rax+rax*1+0x0]
   45c30:	mov    ebx,DWORD PTR [rsp+0x58]
   45c34:	jmp    45c4e <create_pipe+0x6ae>
   45c36:	cs nop WORD PTR [rax+rax*1+0x0]
   45c40:	call   104b0 <__errno_location@plt>
   45c45:	cmp    DWORD PTR [rax],0x4
   45c48:	jne    45bc3 <create_pipe+0x623>
   45c4e:	mov    edi,ebx
   45c50:	call   12740 <close@plt>
   45c55:	test   eax,eax
   45c57:	js     45c40 <create_pipe+0x6a0>
   45c59:	jmp    45bc3 <create_pipe+0x623>
   45c5e:	xor    edi,edi
   45c60:	mov    edx,0x5
   45c65:	lea    rsi,[rip+0x126ce]        # 5833a <default_tuning+0xfa>
   45c6c:	call   10f90 <dcgettext@plt>
   45c71:	movzx  edi,BYTE PTR [rsp+0xc]
   45c76:	mov    rcx,QWORD PTR [rsp+0x38]
   45c7b:	mov    esi,ebx
   45c7d:	mov    rdx,rax
   45c80:	xor    eax,eax
   45c82:	call   121e0 <error@plt>
   45c87:	jmp    45713 <create_pipe+0x173>
   45c8c:	mov    rdi,r8
   45c8f:	lea    rsi,[rsp+0xb0]
   45c97:	call   10620 <posix_spawnattr_setsigmask@plt>
   45c9c:	mov    r8,QWORD PTR [rsp+0x20]
   45ca1:	test   eax,eax
   45ca3:	mov    ebx,eax
   45ca5:	je     45cc0 <create_pipe+0x720>
   45ca7:	mov    rdi,r14
   45caa:	mov    QWORD PTR [rsp+0x10],r8
   45caf:	call   11c50 <posix_spawn_file_actions_destroy@plt>
   45cb4:	mov    r8,QWORD PTR [rsp+0x10]
   45cb9:	jmp    45a83 <create_pipe+0x4e3>
   45cbe:	xchg   ax,ax
   45cc0:	mov    rdi,r8
   45cc3:	mov    esi,0x8
   45cc8:	call   11ce0 <posix_spawnattr_setflags@plt>
   45ccd:	mov    r8,QWORD PTR [rsp+0x20]
   45cd2:	test   eax,eax
   45cd4:	mov    ebx,eax
   45cd6:	jne    45ca7 <create_pipe+0x707>
   45cd8:	mov    rax,QWORD PTR [rip+0x302e9]        # 75fc8 <environ@GLIBC_2.2.5>
   45cdf:	cmp    QWORD PTR [rsp+0x18],0x0
   45ce5:	mov    BYTE PTR [rsp+0x20],0x1
   45cea:	mov    r9,QWORD PTR [rax]
   45ced:	je     45cfc <create_pipe+0x75c>
   45cef:	mov    rcx,r8
   45cf2:	jmp    45a49 <create_pipe+0x4a9>
   45cf7:	call   11760 <__stack_chk_fail@plt>
   45cfc:	mov    QWORD PTR [rsp+0x18],r8
   45d01:	jmp    45b6b <create_pipe+0x5cb>
   45d06:	mov    esi,DWORD PTR [rsp+0x54]
   45d0a:	mov    rdi,r14
   45d0d:	call   126c0 <posix_spawn_file_actions_addclose@plt>
   45d12:	mov    ebx,eax
   45d14:	test   eax,eax
   45d16:	jne    45893 <create_pipe+0x2f3>
   45d1c:	mov    esi,DWORD PTR [rsp+0x5c]
   45d20:	mov    rdi,r14
   45d23:	call   126c0 <posix_spawn_file_actions_addclose@plt>
   45d28:	mov    ebx,eax
   45d2a:	test   eax,eax
   45d2c:	je     459a6 <create_pipe+0x406>
   45d32:	jmp    456d0 <create_pipe+0x130>
   45d37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000045d40 <create_pipe_bidi>:
   45d40:	endbr64 
   45d44:	sub    rsp,0x8
   45d48:	movzx  r9d,r9b
   45d4c:	movzx  r8d,r8b
   45d50:	push   QWORD PTR [rsp+0x18]
   45d54:	movzx  eax,BYTE PTR [rsp+0x18]
   45d59:	push   rax
   45d5a:	push   r9
   45d5c:	mov    r9d,0x1
   45d62:	push   r8
   45d64:	mov    r8d,0x1
   45d6a:	push   0x0
   45d6c:	push   0x0
   45d6e:	call   455a0 <create_pipe>
   45d73:	add    rsp,0x38
   45d77:	ret    
   45d78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000045d80 <create_pipe_in>:
   45d80:	endbr64 
   45d84:	push   rbx
   45d85:	movzx  r9d,r9b
   45d89:	sub    rsp,0x10
   45d8d:	mov    rax,QWORD PTR fs:0x28
   45d96:	mov    QWORD PTR [rsp+0x8],rax
   45d9b:	mov    rax,rsp
   45d9e:	mov    rbx,QWORD PTR [rsp+0x30]
   45da3:	push   rax
   45da4:	movzx  eax,BYTE PTR [rsp+0x30]
   45da9:	push   rax
   45daa:	movzx  eax,BYTE PTR [rsp+0x30]
   45daf:	push   rax
   45db0:	push   r9
   45db2:	mov    r9d,0x1
   45db8:	push   0x0
   45dba:	push   r8
   45dbc:	xor    r8d,r8d
   45dbf:	call   455a0 <create_pipe>
   45dc4:	add    rsp,0x30
   45dc8:	cmp    eax,0xffffffff
   45dcb:	je     45dd2 <create_pipe_in+0x52>
   45dcd:	mov    edx,DWORD PTR [rsp]
   45dd0:	mov    DWORD PTR [rbx],edx
   45dd2:	mov    rdx,QWORD PTR [rsp+0x8]
   45dd7:	sub    rdx,QWORD PTR fs:0x28
   45de0:	jne    45de8 <create_pipe_in+0x68>
   45de2:	add    rsp,0x10
   45de6:	pop    rbx
   45de7:	ret    
   45de8:	call   11760 <__stack_chk_fail@plt>
   45ded:	nop    DWORD PTR [rax]

0000000000045df0 <create_pipe_out>:
   45df0:	endbr64 
   45df4:	push   rbx
   45df5:	movzx  r9d,r9b
   45df9:	sub    rsp,0x10
   45dfd:	mov    rax,QWORD PTR fs:0x28
   45e06:	mov    QWORD PTR [rsp+0x8],rax
   45e0b:	mov    rax,rsp
   45e0e:	mov    rbx,QWORD PTR [rsp+0x30]
   45e13:	push   rax
   45e14:	movzx  eax,BYTE PTR [rsp+0x30]
   45e19:	push   rax
   45e1a:	movzx  eax,BYTE PTR [rsp+0x30]
   45e1f:	push   rax
   45e20:	push   r9
   45e22:	xor    r9d,r9d
   45e25:	push   r8
   45e27:	mov    r8d,0x1
   45e2d:	push   0x0
   45e2f:	call   455a0 <create_pipe>
   45e34:	add    rsp,0x30
   45e38:	cmp    eax,0xffffffff
   45e3b:	je     45e43 <create_pipe_out+0x53>
   45e3d:	mov    edx,DWORD PTR [rsp+0x4]
   45e41:	mov    DWORD PTR [rbx],edx
   45e43:	mov    rdx,QWORD PTR [rsp+0x8]
   45e48:	sub    rdx,QWORD PTR fs:0x28
   45e51:	jne    45e59 <create_pipe_out+0x69>
   45e53:	add    rsp,0x10
   45e57:	pop    rbx
   45e58:	ret    
   45e59:	call   11760 <__stack_chk_fail@plt>
   45e5e:	xchg   ax,ax

0000000000045e60 <get_stat_atime_ns>:
   45e60:	endbr64 
   45e64:	mov    rax,QWORD PTR [rdi+0x50]
   45e68:	ret    
   45e69:	nop    DWORD PTR [rax+0x0]

0000000000045e70 <get_stat_ctime_ns>:
   45e70:	endbr64 
   45e74:	mov    rax,QWORD PTR [rdi+0x70]
   45e78:	ret    
   45e79:	nop    DWORD PTR [rax+0x0]

0000000000045e80 <get_stat_mtime_ns>:
   45e80:	endbr64 
   45e84:	mov    rax,QWORD PTR [rdi+0x60]
   45e88:	ret    
   45e89:	nop    DWORD PTR [rax+0x0]

0000000000045e90 <get_stat_birthtime_ns>:
   45e90:	endbr64 
   45e94:	xor    eax,eax
   45e96:	ret    
   45e97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000045ea0 <get_stat_atime>:
   45ea0:	endbr64 
   45ea4:	mov    rax,QWORD PTR [rdi+0x48]
   45ea8:	mov    rdx,QWORD PTR [rdi+0x50]
   45eac:	ret    
   45ead:	nop    DWORD PTR [rax]

0000000000045eb0 <get_stat_ctime>:
   45eb0:	endbr64 
   45eb4:	mov    rax,QWORD PTR [rdi+0x68]
   45eb8:	mov    rdx,QWORD PTR [rdi+0x70]
   45ebc:	ret    
   45ebd:	nop    DWORD PTR [rax]

0000000000045ec0 <get_stat_mtime>:
   45ec0:	endbr64 
   45ec4:	mov    rax,QWORD PTR [rdi+0x58]
   45ec8:	mov    rdx,QWORD PTR [rdi+0x60]
   45ecc:	ret    
   45ecd:	nop    DWORD PTR [rax]

0000000000045ed0 <get_stat_birthtime>:
   45ed0:	endbr64 
   45ed4:	mov    rax,0xffffffffffffffff
   45edb:	mov    rdx,0xffffffffffffffff
   45ee2:	ret    
   45ee3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   45eee:	xchg   ax,ax

0000000000045ef0 <stat_time_normalize>:
   45ef0:	endbr64 
   45ef4:	mov    eax,edi
   45ef6:	ret    
   45ef7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000045f00 <strnlen1>:
   45f00:	endbr64 
   45f04:	push   rbp
   45f05:	mov    rdx,rsi
   45f08:	mov    rbp,rdi
   45f0b:	push   rbx
   45f0c:	mov    rbx,rsi
   45f0f:	xor    esi,esi
   45f11:	sub    rsp,0x8
   45f15:	call   11750 <memchr@plt>
   45f1a:	mov    rdx,rax
   45f1d:	sub    rdx,rbp
   45f20:	add    rdx,0x1
   45f24:	test   rax,rax
   45f27:	mov    rax,rbx
   45f2a:	cmovne rax,rdx
   45f2e:	add    rsp,0x8
   45f32:	pop    rbx
   45f33:	pop    rbp
   45f34:	ret    
   45f35:	cs nop WORD PTR [rax+rax*1+0x0]
   45f3f:	nop

0000000000045f40 <rpl_strtoll>:
   45f40:	endbr64 
   45f44:	push   r15
   45f46:	push   r14
   45f48:	push   r13
   45f4a:	push   r12
   45f4c:	push   rbp
   45f4d:	push   rbx
   45f4e:	sub    rsp,0x38
   45f52:	mov    QWORD PTR [rsp+0x20],rdi
   45f57:	mov    QWORD PTR [rsp+0x10],rsi
   45f5c:	cmp    edx,0x1
   45f5f:	je     46070 <rpl_strtoll+0x130>
   45f65:	mov    r12d,edx
   45f68:	cmp    edx,0x24
   45f6b:	ja     46070 <rpl_strtoll+0x130>
   45f71:	mov    r14,rdi
   45f74:	call   116c0 <__ctype_b_loc@plt>
   45f79:	mov    r15,QWORD PTR [rax]
   45f7c:	jmp    45f84 <rpl_strtoll+0x44>
   45f7e:	xchg   ax,ax
   45f80:	add    r14,0x1
   45f84:	movzx  eax,BYTE PTR [r14]
   45f88:	mov    rcx,rax
   45f8b:	test   BYTE PTR [r15+rax*2+0x1],0x20
   45f91:	jne    45f80 <rpl_strtoll+0x40>
   45f93:	test   al,al
   45f95:	je     46120 <rpl_strtoll+0x1e0>
   45f9b:	cmp    al,0x2d
   45f9d:	je     46090 <rpl_strtoll+0x150>
   45fa3:	mov    DWORD PTR [rsp+0x2c],0x0
   45fab:	cmp    al,0x2b
   45fad:	jne    45fb8 <rpl_strtoll+0x78>
   45faf:	movzx  ecx,BYTE PTR [r14+0x1]
   45fb4:	add    r14,0x1
   45fb8:	cmp    cl,0x30
   45fbb:	je     461d0 <rpl_strtoll+0x290>
   45fc1:	test   r12d,r12d
   45fc4:	je     46280 <rpl_strtoll+0x340>
   45fca:	movsxd rax,r12d
   45fcd:	xor    edx,edx
   45fcf:	mov    rsi,rax
   45fd2:	mov    QWORD PTR [rsp+0x18],rax
   45fd7:	mov    rax,0xffffffffffffffff
   45fde:	div    rsi
   45fe1:	mov    DWORD PTR [rsp+0x28],edx
   45fe5:	mov    QWORD PTR [rsp],rax
   45fe9:	mov    eax,ecx
   45feb:	test   cl,cl
   45fed:	je     46130 <rpl_strtoll+0x1f0>
   45ff3:	mov    DWORD PTR [rsp+0xc],0x0
   45ffb:	mov    r13,r14
   45ffe:	xor    ebx,ebx
   46000:	jmp    4602c <rpl_strtoll+0xec>
   46002:	nop    WORD PTR [rax+rax*1+0x0]
   46008:	je     460b0 <rpl_strtoll+0x170>
   4600e:	imul   rbx,QWORD PTR [rsp+0x18]
   46014:	movzx  edx,dl
   46017:	lea    rbx,[rdx+rbx*1]
   4601b:	movzx  eax,BYTE PTR [r13+0x1]
   46020:	add    r13,0x1
   46024:	test   al,al
   46026:	je     460d0 <rpl_strtoll+0x190>
   4602c:	lea    edx,[rax-0x30]
   4602f:	cmp    dl,0x9
   46032:	jbe    46051 <rpl_strtoll+0x111>
   46034:	movzx  ebp,al
   46037:	test   BYTE PTR [r15+rbp*2+0x1],0x4
   4603d:	je     460d0 <rpl_strtoll+0x190>
   46043:	call   105e0 <__ctype_toupper_loc@plt>
   46048:	mov    rax,QWORD PTR [rax]
   4604b:	mov    edx,DWORD PTR [rax+rbp*4]
   4604e:	sub    edx,0x37
   46051:	movzx  eax,dl
   46054:	cmp    eax,r12d
   46057:	jge    460d0 <rpl_strtoll+0x190>
   46059:	cmp    rbx,QWORD PTR [rsp]
   4605d:	jbe    46008 <rpl_strtoll+0xc8>
   4605f:	mov    DWORD PTR [rsp+0xc],0x1
   46067:	jmp    4601b <rpl_strtoll+0xdb>
   46069:	nop    DWORD PTR [rax+0x0]
   46070:	call   104b0 <__errno_location@plt>
   46075:	mov    DWORD PTR [rax],0x16
   4607b:	xor    eax,eax
   4607d:	add    rsp,0x38
   46081:	pop    rbx
   46082:	pop    rbp
   46083:	pop    r12
   46085:	pop    r13
   46087:	pop    r14
   46089:	pop    r15
   4608b:	ret    
   4608c:	nop    DWORD PTR [rax+0x0]
   46090:	movzx  ecx,BYTE PTR [r14+0x1]
   46095:	mov    DWORD PTR [rsp+0x2c],0x1
   4609d:	add    r14,0x1
   460a1:	jmp    45fb8 <rpl_strtoll+0x78>
   460a6:	cs nop WORD PTR [rax+rax*1+0x0]
   460b0:	cmp    eax,DWORD PTR [rsp+0x28]
   460b4:	jbe    4600e <rpl_strtoll+0xce>
   460ba:	mov    DWORD PTR [rsp+0xc],0x1
   460c2:	jmp    4601b <rpl_strtoll+0xdb>
   460c7:	nop    WORD PTR [rax+rax*1+0x0]
   460d0:	cmp    r13,r14
   460d3:	je     46130 <rpl_strtoll+0x1f0>
   460d5:	mov    rax,QWORD PTR [rsp+0x10]
   460da:	test   rax,rax
   460dd:	je     460e2 <rpl_strtoll+0x1a2>
   460df:	mov    QWORD PTR [rax],r13
   460e2:	mov    ecx,DWORD PTR [rsp+0xc]
   460e6:	test   ecx,ecx
   460e8:	je     46190 <rpl_strtoll+0x250>
   460ee:	call   104b0 <__errno_location@plt>
   460f3:	movabs rcx,0x8000000000000000
   460fd:	mov    DWORD PTR [rax],0x22
   46103:	mov    eax,DWORD PTR [rsp+0x2c]
   46107:	test   eax,eax
   46109:	movabs rax,0x7fffffffffffffff
   46113:	cmovne rax,rcx
   46117:	jmp    4607d <rpl_strtoll+0x13d>
   4611c:	nop    DWORD PTR [rax+0x0]
   46120:	cmp    QWORD PTR [rsp+0x10],0x0
   46126:	jne    46168 <rpl_strtoll+0x228>
   46128:	xor    eax,eax
   4612a:	jmp    4607d <rpl_strtoll+0x13d>
   4612f:	nop
   46130:	cmp    QWORD PTR [rsp+0x10],0x0
   46136:	je     46128 <rpl_strtoll+0x1e8>
   46138:	mov    rax,r14
   4613b:	sub    rax,QWORD PTR [rsp+0x20]
   46140:	cmp    rax,0x1
   46144:	jle    46168 <rpl_strtoll+0x228>
   46146:	call   105e0 <__ctype_toupper_loc@plt>
   4614b:	movzx  edx,BYTE PTR [r14-0x1]
   46150:	mov    rax,QWORD PTR [rax]
   46153:	mov    eax,DWORD PTR [rax+rdx*4]
   46156:	cmp    eax,0x58
   46159:	je     46310 <rpl_strtoll+0x3d0>
   4615f:	cmp    eax,0x42
   46162:	je     46310 <rpl_strtoll+0x3d0>
   46168:	mov    rax,QWORD PTR [rsp+0x10]
   4616d:	mov    rsi,QWORD PTR [rsp+0x20]
   46172:	mov    QWORD PTR [rax],rsi
   46175:	add    rsp,0x38
   46179:	xor    eax,eax
   4617b:	pop    rbx
   4617c:	pop    rbp
   4617d:	pop    r12
   4617f:	pop    r13
   46181:	pop    r14
   46183:	pop    r15
   46185:	ret    
   46186:	cs nop WORD PTR [rax+rax*1+0x0]
   46190:	mov    edx,DWORD PTR [rsp+0x2c]
   46194:	test   edx,edx
   46196:	je     462b0 <rpl_strtoll+0x370>
   4619c:	movabs rbp,0x8000000000000000
   461a6:	mov    rax,rbx
   461a9:	neg    rax
   461ac:	cmp    rbx,rbp
   461af:	jbe    4607d <rpl_strtoll+0x13d>
   461b5:	call   104b0 <__errno_location@plt>
   461ba:	mov    DWORD PTR [rax],0x22
   461c0:	mov    rax,rbp
   461c3:	jmp    4607d <rpl_strtoll+0x13d>
   461c8:	nop    DWORD PTR [rax+rax*1+0x0]
   461d0:	mov    ebp,r12d
   461d3:	and    ebp,0xfffffffd
   461d6:	test   r12d,0xffffffef
   461dd:	jne    46228 <rpl_strtoll+0x2e8>
   461df:	call   105e0 <__ctype_toupper_loc@plt>
   461e4:	movzx  edx,BYTE PTR [r14+0x1]
   461e9:	mov    rax,QWORD PTR [rax]
   461ec:	cmp    DWORD PTR [rax+rdx*4],0x58
   461f0:	jne    46228 <rpl_strtoll+0x2e8>
   461f2:	movzx  ecx,BYTE PTR [r14+0x2]
   461f7:	mov    r12d,0x10
   461fd:	movabs rax,0xfffffffffffffff
   46207:	mov    DWORD PTR [rsp+0x28],0xf
   4620f:	mov    QWORD PTR [rsp],rax
   46213:	add    r14,0x2
   46217:	mov    QWORD PTR [rsp+0x18],0x10
   46220:	jmp    45fe9 <rpl_strtoll+0xa9>
   46225:	nop    DWORD PTR [rax]
   46228:	test   ebp,ebp
   4622a:	jne    462e0 <rpl_strtoll+0x3a0>
   46230:	call   105e0 <__ctype_toupper_loc@plt>
   46235:	movzx  edx,BYTE PTR [r14+0x1]
   4623a:	mov    rax,QWORD PTR [rax]
   4623d:	cmp    DWORD PTR [rax+rdx*4],0x42
   46241:	je     4632e <rpl_strtoll+0x3ee>
   46247:	test   r12d,r12d
   4624a:	jne    462e0 <rpl_strtoll+0x3a0>
   46250:	movabs rax,0x1fffffffffffffff
   4625a:	mov    DWORD PTR [rsp+0x28],0x7
   46262:	mov    r12d,0x8
   46268:	mov    QWORD PTR [rsp],rax
   4626c:	mov    QWORD PTR [rsp+0x18],0x8
   46275:	jmp    462fc <rpl_strtoll+0x3bc>
   4627a:	nop    WORD PTR [rax+rax*1+0x0]
   46280:	movabs rax,0x1999999999999999
   4628a:	mov    DWORD PTR [rsp+0x28],0x5
   46292:	mov    r12d,0xa
   46298:	mov    QWORD PTR [rsp],rax
   4629c:	mov    QWORD PTR [rsp+0x18],0xa
   462a5:	jmp    45fe9 <rpl_strtoll+0xa9>
   462aa:	nop    WORD PTR [rax+rax*1+0x0]
   462b0:	mov    rax,rbx
   462b3:	test   rbx,rbx
   462b6:	jns    4607d <rpl_strtoll+0x13d>
   462bc:	call   104b0 <__errno_location@plt>
   462c1:	mov    DWORD PTR [rax],0x22
   462c7:	movabs rax,0x7fffffffffffffff
   462d1:	jmp    4607d <rpl_strtoll+0x13d>
   462d6:	cs nop WORD PTR [rax+rax*1+0x0]
   462e0:	movsxd rsi,r12d
   462e3:	mov    rax,0xffffffffffffffff
   462ea:	xor    edx,edx
   462ec:	div    rsi
   462ef:	mov    QWORD PTR [rsp+0x18],rsi
   462f4:	mov    QWORD PTR [rsp],rax
   462f8:	mov    DWORD PTR [rsp+0x28],edx
   462fc:	mov    eax,0x30
   46301:	jmp    45ff3 <rpl_strtoll+0xb3>
   46306:	cs nop WORD PTR [rax+rax*1+0x0]
   46310:	cmp    BYTE PTR [r14-0x2],0x30
   46315:	jne    46168 <rpl_strtoll+0x228>
   4631b:	mov    rax,QWORD PTR [rsp+0x10]
   46320:	lea    rsi,[r14-0x1]
   46324:	mov    QWORD PTR [rax],rsi
   46327:	xor    eax,eax
   46329:	jmp    4607d <rpl_strtoll+0x13d>
   4632e:	movzx  ecx,BYTE PTR [r14+0x2]
   46333:	mov    r12d,0x2
   46339:	movabs rax,0x7fffffffffffffff
   46343:	mov    DWORD PTR [rsp+0x28],0x1
   4634b:	mov    QWORD PTR [rsp],rax
   4634f:	add    r14,0x2
   46353:	mov    QWORD PTR [rsp+0x18],0x2
   4635c:	jmp    45fe9 <rpl_strtoll+0xa9>
   46361:	cs nop WORD PTR [rax+rax*1+0x0]
   4636b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000046370 <try_nocreate>:
   46370:	endbr64 
   46374:	push   rbx
   46375:	sub    rsp,0xa0
   4637c:	mov    rax,QWORD PTR fs:0x28
   46385:	mov    QWORD PTR [rsp+0x98],rax
   4638d:	xor    eax,eax
   4638f:	mov    rsi,rsp
   46392:	call   12720 <lstat@plt>
   46397:	mov    ebx,eax
   46399:	call   104b0 <__errno_location@plt>
   4639e:	test   ebx,ebx
   463a0:	je     463b8 <try_nocreate+0x48>
   463a2:	mov    edx,DWORD PTR [rax]
   463a4:	cmp    edx,0x4b
   463a7:	je     463b8 <try_nocreate+0x48>
   463a9:	xor    eax,eax
   463ab:	cmp    edx,0x2
   463ae:	setne  al
   463b1:	neg    eax
   463b3:	jmp    463c3 <try_nocreate+0x53>
   463b5:	nop    DWORD PTR [rax]
   463b8:	mov    DWORD PTR [rax],0x11
   463be:	mov    eax,0xffffffff
   463c3:	mov    rdx,QWORD PTR [rsp+0x98]
   463cb:	sub    rdx,QWORD PTR fs:0x28
   463d4:	jne    463df <try_nocreate+0x6f>
   463d6:	add    rsp,0xa0
   463dd:	pop    rbx
   463de:	ret    
   463df:	call   11760 <__stack_chk_fail@plt>
   463e4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   463ef:	nop

00000000000463f0 <try_dir>:
   463f0:	endbr64 
   463f4:	mov    esi,0x1c0
   463f9:	jmp    10ae0 <mkdir@plt>
   463fe:	xchg   ax,ax

0000000000046400 <try_file>:
   46400:	endbr64 
   46404:	mov    esi,DWORD PTR [rsi]
   46406:	mov    edx,0x180
   4640b:	xor    eax,eax
   4640d:	and    sil,0x3c
   46411:	or     sil,0xc2
   46415:	jmp    11070 <open@plt>
   4641a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000046420 <try_tempname_len>:
   46420:	endbr64 
   46424:	push   r15
   46426:	push   r14
   46428:	mov    r14,rdi
   4642b:	push   r13
   4642d:	push   r12
   4642f:	push   rbp
   46430:	mov    rbp,r8
   46433:	push   rbx
   46434:	mov    ebx,esi
   46436:	sub    rsp,0x78
   4643a:	mov    QWORD PTR [rsp+0x18],rdx
   4643f:	mov    QWORD PTR [rsp],rdi
   46443:	mov    QWORD PTR [rsp+0x20],rcx
   46448:	mov    QWORD PTR [rsp+0x8],r8
   4644d:	mov    rax,QWORD PTR fs:0x28
   46456:	mov    QWORD PTR [rsp+0x68],rax
   4645b:	xor    eax,eax
   4645d:	call   104b0 <__errno_location@plt>
   46462:	mov    rdi,r14
   46465:	mov    QWORD PTR [rsp+0x48],0x0
   4646e:	mov    QWORD PTR [rsp+0x10],rax
   46473:	mov    eax,DWORD PTR [rax]
   46475:	mov    DWORD PTR [rsp+0x3c],eax
   46479:	call   10ab0 <strlen@plt>
   4647e:	movsxd rdx,ebx
   46481:	add    rdx,rbp
   46484:	cmp    rdx,rax
   46487:	ja     4663a <try_tempname_len+0x21a>
   4648d:	sub    rax,rdx
   46490:	lea    rsi,[rip+0x6d2e]        # 4d1c5 <__func__.4+0xa5>
   46497:	add    r14,rax
   4649a:	mov    QWORD PTR [rsp+0x28],rax
   4649f:	mov    rdi,r14
   464a2:	mov    QWORD PTR [rsp+0x30],r14
   464a7:	call   10a70 <strspn@plt>
   464ac:	cmp    rax,rbp
   464af:	jb     4663a <try_tempname_len+0x21a>
   464b5:	mov    DWORD PTR [rsp+0x38],0x3a2f8
   464bd:	xor    r8d,r8d
   464c0:	mov    r13,r15
   464c3:	lea    r14,[rip+0x11e96]        # 58360 <letters>
   464ca:	mov    r15d,r8d
   464cd:	nop    DWORD PTR [rax]
   464d0:	cmp    QWORD PTR [rsp+0x8],0x0
   464d6:	je     465e0 <try_tempname_len+0x1c0>
   464dc:	mov    rbx,QWORD PTR [rsp]
   464e0:	mov    r12,QWORD PTR [rsp+0x30]
   464e5:	movabs rbp,0x8421084210842109
   464ef:	add    rbx,QWORD PTR [rsp+0x8]
   464f4:	add    rbx,QWORD PTR [rsp+0x28]
   464f9:	jmp    4653e <try_tempname_len+0x11e>
   464fb:	nop    DWORD PTR [rax+rax*1+0x0]
   46500:	sub    r15d,0x1
   46504:	mov    rdx,r13
   46507:	add    r12,0x1
   4650b:	shr    rdx,1
   4650e:	mov    rax,rdx
   46511:	mul    rbp
   46514:	shr    rdx,0x4
   46518:	mov    rax,rdx
   4651b:	shl    rax,0x5
   4651f:	sub    rax,rdx
   46522:	add    rax,rax
   46525:	sub    r13,rax
   46528:	movzx  eax,BYTE PTR [r14+r13*1]
   4652d:	mov    r13,rdx
   46530:	mov    BYTE PTR [r12-0x1],al
   46535:	cmp    r12,rbx
   46538:	je     465e0 <try_tempname_len+0x1c0>
   4653e:	test   r15d,r15d
   46541:	jne    46500 <try_tempname_len+0xe0>
   46543:	mov    r13,QWORD PTR [rsp+0x48]
   46548:	lea    r15,[rsp+0x48]
   4654d:	mov    edx,0x1
   46552:	mov    esi,0x8
   46557:	mov    rdi,r15
   4655a:	call   10930 <getrandom@plt>
   4655f:	cmp    rax,0x8
   46563:	je     465c0 <try_tempname_len+0x1a0>
   46565:	movabs r15,0x27bb2ee687b0b0fd
   4656f:	lea    rsi,[rsp+0x50]
   46574:	xor    edi,edi
   46576:	call   11460 <clock_gettime@plt>
   4657b:	imul   r13,r15
   4657f:	mov    eax,0xb504f32d
   46584:	add    r13,rax
   46587:	xor    r13,QWORD PTR [rsp+0x50]
   4658c:	imul   r13,r15
   46590:	add    r13,rax
   46593:	xor    r13,QWORD PTR [rsp+0x58]
   46598:	call   10f60 <clock@plt>
   4659d:	imul   r13,r15
   465a1:	mov    ecx,0xb504f32d
   465a6:	add    r13,rcx
   465a9:	xor    r13,rax
   465ac:	mov    QWORD PTR [rsp+0x48],r13
   465b1:	mov    r15d,0x9
   465b7:	jmp    46504 <try_tempname_len+0xe4>
   465bc:	nop    DWORD PTR [rax+0x0]
   465c0:	movabs rax,0xf49998db0aa753ff
   465ca:	mov    r13,QWORD PTR [rsp+0x48]
   465cf:	cmp    r13,rax
   465d2:	jbe    465b1 <try_tempname_len+0x191>
   465d4:	jmp    4654d <try_tempname_len+0x12d>
   465d9:	nop    DWORD PTR [rax+0x0]
   465e0:	mov    rsi,QWORD PTR [rsp+0x18]
   465e5:	mov    rdi,QWORD PTR [rsp]
   465e9:	mov    rax,QWORD PTR [rsp+0x20]
   465ee:	call   rax
   465f0:	test   eax,eax
   465f2:	jns    4662d <try_tempname_len+0x20d>
   465f4:	mov    rax,QWORD PTR [rsp+0x10]
   465f9:	cmp    DWORD PTR [rax],0x11
   465fc:	jne    46609 <try_tempname_len+0x1e9>
   465fe:	sub    DWORD PTR [rsp+0x38],0x1
   46603:	jne    464d0 <try_tempname_len+0xb0>
   46609:	mov    eax,0xffffffff
   4660e:	mov    rdx,QWORD PTR [rsp+0x68]
   46613:	sub    rdx,QWORD PTR fs:0x28
   4661c:	jne    4664c <try_tempname_len+0x22c>
   4661e:	add    rsp,0x78
   46622:	pop    rbx
   46623:	pop    rbp
   46624:	pop    r12
   46626:	pop    r13
   46628:	pop    r14
   4662a:	pop    r15
   4662c:	ret    
   4662d:	mov    rcx,QWORD PTR [rsp+0x10]
   46632:	mov    edi,DWORD PTR [rsp+0x3c]
   46636:	mov    DWORD PTR [rcx],edi
   46638:	jmp    4660e <try_tempname_len+0x1ee>
   4663a:	mov    rax,QWORD PTR [rsp+0x10]
   4663f:	mov    DWORD PTR [rax],0x16
   46645:	mov    eax,0xffffffff
   4664a:	jmp    4660e <try_tempname_len+0x1ee>
   4664c:	call   11760 <__stack_chk_fail@plt>
   46651:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4665c:	nop    DWORD PTR [rax+0x0]

0000000000046660 <gen_tempname_len>:
   46660:	endbr64 
   46664:	lea    rax,[rip+0x2f675]        # 75ce0 <tryfunc.0>
   4666b:	movsxd rcx,ecx
   4666e:	sub    rsp,0x18
   46672:	mov    rcx,QWORD PTR [rax+rcx*8]
   46676:	mov    DWORD PTR [rsp+0xc],edx
   4667a:	lea    rdx,[rsp+0xc]
   4667f:	call   46420 <try_tempname_len>
   46684:	add    rsp,0x18
   46688:	ret    
   46689:	nop    DWORD PTR [rax+0x0]

0000000000046690 <gen_tempname>:
   46690:	endbr64 
   46694:	sub    rsp,0x18
   46698:	movsxd rcx,ecx
   4669b:	mov    r8d,0x6
   466a1:	mov    rax,QWORD PTR fs:0x28
   466aa:	mov    QWORD PTR [rsp+0x8],rax
   466af:	xor    eax,eax
   466b1:	lea    rax,[rip+0x2f628]        # 75ce0 <tryfunc.0>
   466b8:	mov    DWORD PTR [rsp+0x4],edx
   466bc:	lea    rdx,[rsp+0x4]
   466c1:	mov    rcx,QWORD PTR [rax+rcx*8]
   466c5:	call   46420 <try_tempname_len>
   466ca:	mov    rdx,QWORD PTR [rsp+0x8]
   466cf:	sub    rdx,QWORD PTR fs:0x28
   466d8:	jne    466df <gen_tempname+0x4f>
   466da:	add    rsp,0x18
   466de:	ret    
   466df:	call   11760 <__stack_chk_fail@plt>
   466e4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   466ef:	nop

00000000000466f0 <try_tempname>:
   466f0:	endbr64 
   466f4:	mov    r8d,0x6
   466fa:	jmp    46420 <try_tempname_len>
   466ff:	nop

0000000000046700 <gl_thread_create>:
   46700:	endbr64 
   46704:	sub    rsp,0x18
   46708:	mov    rdx,rdi
   4670b:	mov    rcx,rsi
   4670e:	xor    esi,esi
   46710:	mov    rax,QWORD PTR fs:0x28
   46719:	mov    QWORD PTR [rsp+0x8],rax
   4671e:	xor    eax,eax
   46720:	mov    rdi,rsp
   46723:	call   12460 <pthread_create@plt>
   46728:	test   eax,eax
   4672a:	jne    128b5 <gl_thread_create.cold>
   46730:	mov    rax,QWORD PTR [rsp]
   46734:	mov    rdx,QWORD PTR [rsp+0x8]
   46739:	sub    rdx,QWORD PTR fs:0x28
   46742:	jne    46749 <gl_thread_create+0x49>
   46744:	add    rsp,0x18
   46748:	ret    
   46749:	call   11760 <__stack_chk_fail@plt>
   4674e:	xchg   ax,ax

0000000000046750 <make_timespec>:
   46750:	endbr64 
   46754:	mov    rax,rdi
   46757:	mov    rdx,rsi
   4675a:	ret    
   4675b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000046760 <timespec_cmp>:
   46760:	endbr64 
   46764:	cmp    rdi,rdx
   46767:	setg   dl
   4676a:	setl   al
   4676d:	movzx  eax,al
   46770:	movzx  edx,dl
   46773:	sub    edx,eax
   46775:	xor    eax,eax
   46777:	cmp    rsi,rcx
   4677a:	setl   cl
   4677d:	setg   al
   46780:	movzx  ecx,cl
   46783:	sub    eax,ecx
   46785:	lea    eax,[rax+rdx*2]
   46788:	ret    
   46789:	nop    DWORD PTR [rax+0x0]

0000000000046790 <timespec_sign>:
   46790:	endbr64 
   46794:	test   rsi,rsi
   46797:	setne  dl
   4679a:	xor    eax,eax
   4679c:	test   rdi,rdi
   4679f:	sete   al
   467a2:	and    eax,edx
   467a4:	xor    edx,edx
   467a6:	test   rdi,rdi
   467a9:	setg   dl
   467ac:	shr    rdi,0x3f
   467b0:	sub    edx,edi
   467b2:	add    eax,edx
   467b4:	ret    
   467b5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

00000000000467c0 <timespectod>:
   467c0:	endbr64 
   467c4:	pxor   xmm1,xmm1
   467c8:	pxor   xmm0,xmm0
   467cc:	cvtsi2sd xmm1,rdi
   467d1:	cvtsi2sd xmm0,rsi
   467d6:	divsd  xmm0,QWORD PTR [rip+0x11bc2]        # 583a0 <letters+0x40>
   467de:	addsd  xmm0,xmm1
   467e2:	ret    
   467e3:	cs nop WORD PTR [rax+rax*1+0x0]
   467ed:	nop    DWORD PTR [rax]

00000000000467f0 <uc_tolower>:
   467f0:	endbr64 
   467f4:	mov    edx,edi
   467f6:	mov    eax,edi
   467f8:	shr    edx,0x10
   467fb:	cmp    edi,0x1ffff
   46801:	jbe    46808 <uc_tolower+0x18>
   46803:	ret    
   46804:	nop    DWORD PTR [rax+0x0]
   46808:	lea    rcx,[rip+0x11bb1]        # 583c0 <u_mapping>
   4680f:	mov    edx,DWORD PTR [rcx+rdx*4]
   46812:	test   edx,edx
   46814:	js     46803 <uc_tolower+0x13>
   46816:	mov    esi,edi
   46818:	shr    esi,0x7
   4681b:	and    esi,0x1ff
   46821:	add    edx,esi
   46823:	mov    edx,edx
   46825:	movsx  edx,WORD PTR [rcx+rdx*2+0x8]
   4682a:	test   dx,dx
   4682d:	js     46803 <uc_tolower+0x13>
   4682f:	mov    esi,edi
   46831:	and    esi,0x7f
   46834:	add    edx,esi
   46836:	mov    edx,edx
   46838:	add    eax,DWORD PTR [rcx+rdx*4+0x808]
   4683f:	ret    

0000000000046840 <uc_is_alnum>:
   46840:	endbr64 
   46844:	mov    edx,edi
   46846:	mov    ecx,edi
   46848:	xor    eax,eax
   4684a:	shr    edx,0x10
   4684d:	cmp    edi,0x3ffff
   46853:	ja     46879 <uc_is_alnum+0x39>
   46855:	add    edx,0x1
   46858:	lea    rsi,[rip+0x16981]        # 5d1e0 <u_is_alnum>
   4685f:	mov    edx,DWORD PTR [rsi+rdx*4]
   46862:	test   edx,edx
   46864:	js     46879 <uc_is_alnum+0x39>
   46866:	shr    edi,0x9
   46869:	and    edi,0x7f
   4686c:	add    edx,edi
   4686e:	mov    edx,edx
   46870:	movsx  edx,WORD PTR [rsi+rdx*2]
   46874:	test   dx,dx
   46877:	jns    46880 <uc_is_alnum+0x40>
   46879:	ret    
   4687a:	nop    WORD PTR [rax+rax*1+0x0]
   46880:	mov    eax,ecx
   46882:	shr    eax,0x5
   46885:	and    eax,0xf
   46888:	add    eax,edx
   4688a:	mov    eax,eax
   4688c:	mov    eax,DWORD PTR [rsi+rax*4]
   4688f:	shr    eax,cl
   46891:	and    eax,0x1
   46894:	ret    
   46895:	cs nop WORD PTR [rax+rax*1+0x0]
   4689f:	nop

00000000000468a0 <uc_is_alpha>:
   468a0:	endbr64 
   468a4:	mov    edx,edi
   468a6:	mov    ecx,edi
   468a8:	xor    eax,eax
   468aa:	shr    edx,0x10
   468ad:	cmp    edi,0x3ffff
   468b3:	ja     468d9 <uc_is_alpha+0x39>
   468b5:	add    edx,0x1
   468b8:	lea    rsi,[rip+0x18141]        # 5ea00 <u_is_alpha>
   468bf:	mov    edx,DWORD PTR [rsi+rdx*4]
   468c2:	test   edx,edx
   468c4:	js     468d9 <uc_is_alpha+0x39>
   468c6:	shr    edi,0x9
   468c9:	and    edi,0x7f
   468cc:	add    edx,edi
   468ce:	mov    edx,edx
   468d0:	movsx  edx,WORD PTR [rsi+rdx*2]
   468d4:	test   dx,dx
   468d7:	jns    468e0 <uc_is_alpha+0x40>
   468d9:	ret    
   468da:	nop    WORD PTR [rax+rax*1+0x0]
   468e0:	mov    eax,ecx
   468e2:	shr    eax,0x5
   468e5:	and    eax,0xf
   468e8:	add    eax,edx
   468ea:	mov    eax,eax
   468ec:	mov    eax,DWORD PTR [rsi+rax*4]
   468ef:	shr    eax,cl
   468f1:	and    eax,0x1
   468f4:	ret    
   468f5:	cs nop WORD PTR [rax+rax*1+0x0]
   468ff:	nop

0000000000046900 <uc_is_blank>:
   46900:	endbr64 
   46904:	mov    esi,edi
   46906:	xor    eax,eax
   46908:	shr    esi,0x10
   4690b:	jne    46925 <uc_is_blank+0x25>
   4690d:	mov    edx,edi
   4690f:	lea    rcx,[rip+0x1990a]        # 60220 <u_is_blank>
   46916:	shr    edx,0x9
   46919:	add    edx,0x4
   4691c:	movsx  edx,WORD PTR [rcx+rdx*2]
   46920:	test   dx,dx
   46923:	jns    46930 <uc_is_blank+0x30>
   46925:	ret    
   46926:	cs nop WORD PTR [rax+rax*1+0x0]
   46930:	mov    eax,edi
   46932:	shr    eax,0x5
   46935:	and    eax,0xf
   46938:	add    eax,edx
   4693a:	mov    eax,eax
   4693c:	mov    eax,DWORD PTR [rcx+rax*4]
   4693f:	mov    ecx,edi
   46941:	shr    eax,cl
   46943:	and    eax,0x1
   46946:	ret    
   46947:	nop    WORD PTR [rax+rax*1+0x0]

0000000000046950 <uc_is_cntrl>:
   46950:	endbr64 
   46954:	mov    esi,edi
   46956:	xor    eax,eax
   46958:	shr    esi,0x10
   4695b:	jne    46975 <uc_is_cntrl+0x25>
   4695d:	mov    edx,edi
   4695f:	lea    rcx,[rip+0x19ada]        # 60440 <u_is_cntrl>
   46966:	shr    edx,0x9
   46969:	add    edx,0x4
   4696c:	movsx  edx,WORD PTR [rcx+rdx*2]
   46970:	test   dx,dx
   46973:	jns    46980 <uc_is_cntrl+0x30>
   46975:	ret    
   46976:	cs nop WORD PTR [rax+rax*1+0x0]
   46980:	mov    eax,edi
   46982:	shr    eax,0x5
   46985:	and    eax,0xf
   46988:	add    eax,edx
   4698a:	mov    eax,eax
   4698c:	mov    eax,DWORD PTR [rcx+rax*4]
   4698f:	mov    ecx,edi
   46991:	shr    eax,cl
   46993:	and    eax,0x1
   46996:	ret    
   46997:	nop    WORD PTR [rax+rax*1+0x0]

00000000000469a0 <uc_is_digit>:
   469a0:	endbr64 
   469a4:	mov    esi,edi
   469a6:	xor    eax,eax
   469a8:	shr    esi,0x10
   469ab:	jne    469c5 <uc_is_digit+0x25>
   469ad:	mov    edx,edi
   469af:	lea    rcx,[rip+0x19c2a]        # 605e0 <u_is_digit>
   469b6:	shr    edx,0x9
   469b9:	add    edx,0x4
   469bc:	movsx  edx,WORD PTR [rcx+rdx*2]
   469c0:	test   dx,dx
   469c3:	jns    469d0 <uc_is_digit+0x30>
   469c5:	ret    
   469c6:	cs nop WORD PTR [rax+rax*1+0x0]
   469d0:	mov    eax,edi
   469d2:	shr    eax,0x5
   469d5:	and    eax,0xf
   469d8:	add    eax,edx
   469da:	mov    eax,eax
   469dc:	mov    eax,DWORD PTR [rcx+rax*4]
   469df:	mov    ecx,edi
   469e1:	shr    eax,cl
   469e3:	and    eax,0x1
   469e6:	ret    
   469e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000000469f0 <uc_is_graph>:
   469f0:	endbr64 
   469f4:	mov    edx,edi
   469f6:	mov    ecx,edi
   469f8:	xor    eax,eax
   469fa:	shr    edx,0x10
   469fd:	cmp    edi,0x10ffff
   46a03:	ja     46a29 <uc_is_graph+0x39>
   46a05:	add    edx,0x1
   46a08:	lea    rsi,[rip+0x19d31]        # 60740 <u_is_graph>
   46a0f:	mov    edx,DWORD PTR [rsi+rdx*4]
   46a12:	test   edx,edx
   46a14:	js     46a29 <uc_is_graph+0x39>
   46a16:	shr    edi,0x9
   46a19:	and    edi,0x7f
   46a1c:	add    edx,edi
   46a1e:	mov    edx,edx
   46a20:	movsx  edx,WORD PTR [rsi+rdx*2]
   46a24:	test   dx,dx
   46a27:	jns    46a30 <uc_is_graph+0x40>
   46a29:	ret    
   46a2a:	nop    WORD PTR [rax+rax*1+0x0]
   46a30:	mov    eax,ecx
   46a32:	shr    eax,0x5
   46a35:	and    eax,0xf
   46a38:	add    eax,edx
   46a3a:	mov    eax,eax
   46a3c:	mov    eax,DWORD PTR [rsi+rax*4]
   46a3f:	shr    eax,cl
   46a41:	and    eax,0x1
   46a44:	ret    
   46a45:	cs nop WORD PTR [rax+rax*1+0x0]
   46a4f:	nop

0000000000046a50 <uc_is_lower>:
   46a50:	endbr64 
   46a54:	mov    edx,edi
   46a56:	mov    ecx,edi
   46a58:	xor    eax,eax
   46a5a:	shr    edx,0x10
   46a5d:	cmp    edi,0x1ffff
   46a63:	ja     46a89 <uc_is_lower+0x39>
   46a65:	add    edx,0x1
   46a68:	lea    rsi,[rip+0x1b971]        # 623e0 <u_is_lower>
   46a6f:	mov    edx,DWORD PTR [rsi+rdx*4]
   46a72:	test   edx,edx
   46a74:	js     46a89 <uc_is_lower+0x39>
   46a76:	shr    edi,0x9
   46a79:	and    edi,0x7f
   46a7c:	add    edx,edi
   46a7e:	mov    edx,edx
   46a80:	movsx  edx,WORD PTR [rsi+rdx*2]
   46a84:	test   dx,dx
   46a87:	jns    46a90 <uc_is_lower+0x40>
   46a89:	ret    
   46a8a:	nop    WORD PTR [rax+rax*1+0x0]
   46a90:	mov    eax,ecx
   46a92:	shr    eax,0x5
   46a95:	and    eax,0xf
   46a98:	add    eax,edx
   46a9a:	mov    eax,eax
   46a9c:	mov    eax,DWORD PTR [rsi+rax*4]
   46a9f:	shr    eax,cl
   46aa1:	and    eax,0x1
   46aa4:	ret    
   46aa5:	cs nop WORD PTR [rax+rax*1+0x0]
   46aaf:	nop

0000000000046ab0 <uc_is_print>:
   46ab0:	endbr64 
   46ab4:	mov    edx,edi
   46ab6:	mov    ecx,edi
   46ab8:	xor    eax,eax
   46aba:	shr    edx,0x10
   46abd:	cmp    edi,0x10ffff
   46ac3:	ja     46ae9 <uc_is_print+0x39>
   46ac5:	add    edx,0x1
   46ac8:	lea    rsi,[rip+0x1bfb1]        # 62a80 <u_is_print>
   46acf:	mov    edx,DWORD PTR [rsi+rdx*4]
   46ad2:	test   edx,edx
   46ad4:	js     46ae9 <uc_is_print+0x39>
   46ad6:	shr    edi,0x9
   46ad9:	and    edi,0x7f
   46adc:	add    edx,edi
   46ade:	mov    edx,edx
   46ae0:	movsx  edx,WORD PTR [rsi+rdx*2]
   46ae4:	test   dx,dx
   46ae7:	jns    46af0 <uc_is_print+0x40>
   46ae9:	ret    
   46aea:	nop    WORD PTR [rax+rax*1+0x0]
   46af0:	mov    eax,ecx
   46af2:	shr    eax,0x5
   46af5:	and    eax,0xf
   46af8:	add    eax,edx
   46afa:	mov    eax,eax
   46afc:	mov    eax,DWORD PTR [rsi+rax*4]
   46aff:	shr    eax,cl
   46b01:	and    eax,0x1
   46b04:	ret    
   46b05:	cs nop WORD PTR [rax+rax*1+0x0]
   46b0f:	nop

0000000000046b10 <uc_is_punct>:
   46b10:	endbr64 
   46b14:	mov    edx,edi
   46b16:	mov    ecx,edi
   46b18:	xor    eax,eax
   46b1a:	shr    edx,0x10
   46b1d:	cmp    edi,0x10ffff
   46b23:	ja     46b49 <uc_is_punct+0x39>
   46b25:	add    edx,0x1
   46b28:	lea    rsi,[rip+0x1dbf1]        # 64720 <u_is_punct>
   46b2f:	mov    edx,DWORD PTR [rsi+rdx*4]
   46b32:	test   edx,edx
   46b34:	js     46b49 <uc_is_punct+0x39>
   46b36:	shr    edi,0x9
   46b39:	and    edi,0x7f
   46b3c:	add    edx,edi
   46b3e:	mov    edx,edx
   46b40:	movsx  edx,WORD PTR [rsi+rdx*2]
   46b44:	test   dx,dx
   46b47:	jns    46b50 <uc_is_punct+0x40>
   46b49:	ret    
   46b4a:	nop    WORD PTR [rax+rax*1+0x0]
   46b50:	mov    eax,ecx
   46b52:	shr    eax,0x5
   46b55:	and    eax,0xf
   46b58:	add    eax,edx
   46b5a:	mov    eax,eax
   46b5c:	mov    eax,DWORD PTR [rsi+rax*4]
   46b5f:	shr    eax,cl
   46b61:	and    eax,0x1
   46b64:	ret    
   46b65:	cs nop WORD PTR [rax+rax*1+0x0]
   46b6f:	nop

0000000000046b70 <uc_is_space>:
   46b70:	endbr64 
   46b74:	mov    esi,edi
   46b76:	xor    eax,eax
   46b78:	shr    esi,0x10
   46b7b:	jne    46b95 <uc_is_space+0x25>
   46b7d:	mov    edx,edi
   46b7f:	lea    rcx,[rip+0x1f1fa]        # 65d80 <u_is_space>
   46b86:	shr    edx,0x9
   46b89:	add    edx,0x4
   46b8c:	movsx  edx,WORD PTR [rcx+rdx*2]
   46b90:	test   dx,dx
   46b93:	jns    46ba0 <uc_is_space+0x30>
   46b95:	ret    
   46b96:	cs nop WORD PTR [rax+rax*1+0x0]
   46ba0:	mov    eax,edi
   46ba2:	shr    eax,0x5
   46ba5:	and    eax,0xf
   46ba8:	add    eax,edx
   46baa:	mov    eax,eax
   46bac:	mov    eax,DWORD PTR [rcx+rax*4]
   46baf:	mov    ecx,edi
   46bb1:	shr    eax,cl
   46bb3:	and    eax,0x1
   46bb6:	ret    
   46bb7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000046bc0 <uc_is_upper>:
   46bc0:	endbr64 
   46bc4:	mov    edx,edi
   46bc6:	mov    ecx,edi
   46bc8:	xor    eax,eax
   46bca:	shr    edx,0x10
   46bcd:	cmp    edi,0x1ffff
   46bd3:	ja     46bf9 <uc_is_upper+0x39>
   46bd5:	add    edx,0x1
   46bd8:	lea    rsi,[rip+0x1f3c1]        # 65fa0 <u_is_upper>
   46bdf:	mov    edx,DWORD PTR [rsi+rdx*4]
   46be2:	test   edx,edx
   46be4:	js     46bf9 <uc_is_upper+0x39>
   46be6:	shr    edi,0x9
   46be9:	and    edi,0x7f
   46bec:	add    edx,edi
   46bee:	mov    edx,edx
   46bf0:	movsx  edx,WORD PTR [rsi+rdx*2]
   46bf4:	test   dx,dx
   46bf7:	jns    46c00 <uc_is_upper+0x40>
   46bf9:	ret    
   46bfa:	nop    WORD PTR [rax+rax*1+0x0]
   46c00:	mov    eax,ecx
   46c02:	shr    eax,0x5
   46c05:	and    eax,0xf
   46c08:	add    eax,edx
   46c0a:	mov    eax,eax
   46c0c:	mov    eax,DWORD PTR [rsi+rax*4]
   46c0f:	shr    eax,cl
   46c11:	and    eax,0x1
   46c14:	ret    
   46c15:	cs nop WORD PTR [rax+rax*1+0x0]
   46c1f:	nop

0000000000046c20 <uc_is_xdigit>:
   46c20:	endbr64 
   46c24:	mov    esi,edi
   46c26:	xor    eax,eax
   46c28:	shr    esi,0x10
   46c2b:	jne    46c45 <uc_is_xdigit+0x25>
   46c2d:	mov    edx,edi
   46c2f:	lea    rcx,[rip+0x1f9ca]        # 66600 <u_is_xdigit>
   46c36:	shr    edx,0x9
   46c39:	add    edx,0x4
   46c3c:	movsx  edx,WORD PTR [rcx+rdx*2]
   46c40:	test   dx,dx
   46c43:	jns    46c50 <uc_is_xdigit+0x30>
   46c45:	ret    
   46c46:	cs nop WORD PTR [rax+rax*1+0x0]
   46c50:	mov    eax,edi
   46c52:	shr    eax,0x5
   46c55:	and    eax,0xf
   46c58:	add    eax,edx
   46c5a:	mov    eax,eax
   46c5c:	mov    eax,DWORD PTR [rcx+rax*4]
   46c5f:	mov    ecx,edi
   46c61:	shr    eax,cl
   46c63:	and    eax,0x1
   46c66:	ret    
   46c67:	nop    WORD PTR [rax+rax*1+0x0]

0000000000046c70 <dup_safer>:
   46c70:	endbr64 
   46c74:	mov    edx,0x3
   46c79:	xor    esi,esi
   46c7b:	xor    eax,eax
   46c7d:	jmp    40550 <rpl_fcntl>
   46c82:	cs nop WORD PTR [rax+rax*1+0x0]
   46c8c:	nop    DWORD PTR [rax+0x0]

0000000000046c90 <fd_safer>:
   46c90:	endbr64 
   46c94:	push   r13
   46c96:	push   r12
   46c98:	mov    r12d,edi
   46c9b:	push   rbp
   46c9c:	push   rbx
   46c9d:	sub    rsp,0x8
   46ca1:	cmp    edi,0x2
   46ca4:	jbe    46cb8 <fd_safer+0x28>
   46ca6:	add    rsp,0x8
   46caa:	mov    eax,r12d
   46cad:	pop    rbx
   46cae:	pop    rbp
   46caf:	pop    r12
   46cb1:	pop    r13
   46cb3:	ret    
   46cb4:	nop    DWORD PTR [rax+0x0]
   46cb8:	call   46c70 <dup_safer>
   46cbd:	mov    ebp,eax
   46cbf:	call   104b0 <__errno_location@plt>
   46cc4:	mov    edi,r12d
   46cc7:	mov    r12d,ebp
   46cca:	mov    r13d,DWORD PTR [rax]
   46ccd:	mov    rbx,rax
   46cd0:	call   12740 <close@plt>
   46cd5:	mov    eax,r12d
   46cd8:	mov    DWORD PTR [rbx],r13d
   46cdb:	add    rsp,0x8
   46cdf:	pop    rbx
   46ce0:	pop    rbp
   46ce1:	pop    r12
   46ce3:	pop    r13
   46ce5:	ret    
   46ce6:	cs nop WORD PTR [rax+rax*1+0x0]

0000000000046cf0 <pipe_safer>:
   46cf0:	endbr64 
   46cf4:	push   r12
   46cf6:	push   rbp
   46cf7:	push   rbx
   46cf8:	mov    rbx,rdi
   46cfb:	call   11b50 <pipe@plt>
   46d00:	test   eax,eax
   46d02:	jne    46d51 <pipe_safer+0x61>
   46d04:	mov    edi,DWORD PTR [rbx]
   46d06:	mov    r12d,eax
   46d09:	call   46c90 <fd_safer>
   46d0e:	mov    DWORD PTR [rbx],eax
   46d10:	test   eax,eax
   46d12:	js     46d30 <pipe_safer+0x40>
   46d14:	mov    edi,DWORD PTR [rbx+0x4]
   46d17:	call   46c90 <fd_safer>
   46d1c:	mov    DWORD PTR [rbx+0x4],eax
   46d1f:	test   eax,eax
   46d21:	js     46d34 <pipe_safer+0x44>
   46d23:	mov    eax,r12d
   46d26:	pop    rbx
   46d27:	pop    rbp
   46d28:	pop    r12
   46d2a:	ret    
   46d2b:	nop    DWORD PTR [rax+rax*1+0x0]
   46d30:	add    rbx,0x4
   46d34:	call   104b0 <__errno_location@plt>
   46d39:	mov    edi,DWORD PTR [rbx]
   46d3b:	mov    ebp,DWORD PTR [rax]
   46d3d:	mov    r12,rax
   46d40:	call   12740 <close@plt>
   46d45:	mov    DWORD PTR [r12],ebp
   46d49:	mov    r12d,0xffffffff
   46d4f:	jmp    46d23 <pipe_safer+0x33>
   46d51:	mov    r12d,0xffffffff
   46d57:	jmp    46d23 <pipe_safer+0x33>
   46d59:	nop    DWORD PTR [rax+0x0]

0000000000046d60 <u32_chr>:
   46d60:	endbr64 
   46d64:	test   rsi,rsi
   46d67:	jne    46d7a <u32_chr+0x1a>
   46d69:	jmp    46d88 <u32_chr+0x28>
   46d6b:	nop    DWORD PTR [rax+rax*1+0x0]
   46d70:	add    rdi,0x4
   46d74:	sub    rsi,0x1
   46d78:	je     46d88 <u32_chr+0x28>
   46d7a:	cmp    DWORD PTR [rdi],edx
   46d7c:	jne    46d70 <u32_chr+0x10>
   46d7e:	mov    rax,rdi
   46d81:	ret    
   46d82:	nop    WORD PTR [rax+rax*1+0x0]
   46d88:	xor    eax,eax
   46d8a:	ret    
   46d8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000046d90 <u32_cpy>:
   46d90:	endbr64 
   46d94:	test   rdx,rdx
   46d97:	jne    46da0 <u32_cpy+0x10>
   46d99:	mov    rax,rdi
   46d9c:	ret    
   46d9d:	nop    DWORD PTR [rax]
   46da0:	sub    rsp,0x8
   46da4:	shl    rdx,0x2
   46da8:	call   11220 <memcpy@plt>
   46dad:	add    rsp,0x8
   46db1:	ret    
   46db2:	cs nop WORD PTR [rax+rax*1+0x0]
   46dbc:	nop    DWORD PTR [rax+0x0]

0000000000046dc0 <u32_pcpy>:
   46dc0:	endbr64 
   46dc4:	push   rbx
   46dc5:	mov    rbx,rdx
   46dc8:	call   46d90 <u32_cpy>
   46dcd:	lea    rax,[rax+rbx*4]
   46dd1:	pop    rbx
   46dd2:	ret    
   46dd3:	cs nop WORD PTR [rax+rax*1+0x0]
   46ddd:	nop    DWORD PTR [rax]

0000000000046de0 <u32_strcat>:
   46de0:	endbr64 
   46de4:	push   r12
   46de6:	mov    r12,rdi
   46de9:	push   rbx
   46dea:	mov    rbx,rsi
   46ded:	sub    rsp,0x8
   46df1:	call   46e30 <u32_strlen>
   46df6:	lea    rcx,[r12+rax*4]
   46dfa:	mov    eax,DWORD PTR [rbx]
   46dfc:	mov    DWORD PTR [rcx],eax
   46dfe:	test   eax,eax
   46e00:	je     46e1e <u32_strcat+0x3e>
   46e02:	mov    eax,0x4
   46e07:	nop    WORD PTR [rax+rax*1+0x0]
   46e10:	mov    edx,DWORD PTR [rbx+rax*1]
   46e13:	mov    DWORD PTR [rcx+rax*1],edx
   46e16:	add    rax,0x4
   46e1a:	test   edx,edx
   46e1c:	jne    46e10 <u32_strcat+0x30>
   46e1e:	add    rsp,0x8
   46e22:	mov    rax,r12
   46e25:	pop    rbx
   46e26:	pop    r12
   46e28:	ret    
   46e29:	nop    DWORD PTR [rax+0x0]

0000000000046e30 <u32_strlen>:
   46e30:	endbr64 
   46e34:	mov    ecx,DWORD PTR [rdi]
   46e36:	test   ecx,ecx
   46e38:	je     46e58 <u32_strlen+0x28>
   46e3a:	mov    rax,rdi
   46e3d:	nop    DWORD PTR [rax]
   46e40:	mov    edx,DWORD PTR [rax+0x4]
   46e43:	add    rax,0x4
   46e47:	test   edx,edx
   46e49:	jne    46e40 <u32_strlen+0x10>
   46e4b:	sub    rax,rdi
   46e4e:	sar    rax,0x2
   46e52:	ret    
   46e53:	nop    DWORD PTR [rax+rax*1+0x0]
   46e58:	xor    eax,eax
   46e5a:	ret    
   46e5b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000046e60 <streq5>:
   46e60:	xor    r10d,r10d
   46e63:	cmp    BYTE PTR [rdi+0x5],dl
   46e66:	jne    46e72 <streq5+0x12>
   46e68:	mov    r10d,0x1
   46e6e:	test   dl,dl
   46e70:	jne    46e80 <streq5+0x20>
   46e72:	mov    eax,r10d
   46e75:	ret    
   46e76:	cs nop WORD PTR [rax+rax*1+0x0]
   46e80:	xor    r10d,r10d
   46e83:	cmp    cl,BYTE PTR [rdi+0x6]
   46e86:	jne    46e72 <streq5+0x12>
   46e88:	mov    r10d,0x1
   46e8e:	test   cl,cl
   46e90:	je     46e72 <streq5+0x12>
   46e92:	xor    r10d,r10d
   46e95:	cmp    r8b,BYTE PTR [rdi+0x7]
   46e99:	jne    46e72 <streq5+0x12>
   46e9b:	mov    r10d,0x1
   46ea1:	test   r8b,r8b
   46ea4:	je     46e72 <streq5+0x12>
   46ea6:	xor    r10d,r10d
   46ea9:	cmp    r9b,BYTE PTR [rdi+0x8]
   46ead:	jne    46e72 <streq5+0x12>
   46eaf:	mov    r10d,0x1
   46eb5:	test   r9b,r9b
   46eb8:	je     46e72 <streq5+0x12>
   46eba:	sub    rsp,0x8
   46ebe:	add    rsi,0x9
   46ec2:	lea    rdi,[rdi+0x9]
   46ec6:	call   11c60 <strcmp@plt>
   46ecb:	xor    r10d,r10d
   46ece:	test   eax,eax
   46ed0:	sete   r10b
   46ed4:	add    rsp,0x8
   46ed8:	mov    eax,r10d
   46edb:	ret    
   46edc:	nop    DWORD PTR [rax+0x0]

0000000000046ee0 <uc_width>:
   46ee0:	endbr64 
   46ee4:	mov    eax,edi
   46ee6:	push   rbp
   46ee7:	mov    edx,edi
   46ee9:	mov    rbp,rsi
   46eec:	shr    eax,0x9
   46eef:	cmp    edi,0x1efff
   46ef5:	ja     46fc0 <uc_width+0xe0>
   46efb:	mov    ecx,eax
   46efd:	lea    rsi,[rip+0x2029c]        # 671a0 <nonspacing_table_ind>
   46f04:	movsx  ecx,BYTE PTR [rsi+rcx*1]
   46f08:	test   ecx,ecx
   46f0a:	js     46f34 <uc_width+0x54>
   46f0c:	mov    esi,edi
   46f0e:	shl    ecx,0x6
   46f11:	shr    esi,0x3
   46f14:	and    esi,0x3f
   46f17:	add    ecx,esi
   46f19:	lea    rsi,[rip+0x20380]        # 672a0 <nonspacing_table_data>
   46f20:	mov    ecx,ecx
   46f22:	movzx  esi,BYTE PTR [rsi+rcx*1]
   46f26:	mov    ecx,edi
   46f28:	and    ecx,0x7
   46f2b:	bt     esi,ecx
   46f2e:	jb     47060 <uc_width+0x180>
   46f34:	mov    ecx,edx
   46f36:	lea    rsi,[rip+0x1f843]        # 66780 <u_width2>
   46f3d:	shr    ecx,0x10
   46f40:	add    ecx,0x1
   46f43:	mov    ecx,DWORD PTR [rsi+rcx*4]
   46f46:	test   ecx,ecx
   46f48:	js     46f5e <uc_width+0x7e>
   46f4a:	and    eax,0x7f
   46f4d:	add    eax,ecx
   46f4f:	mov    eax,eax
   46f51:	movsx  eax,WORD PTR [rsi+rax*2]
   46f55:	test   ax,ax
   46f58:	jns    47070 <uc_width+0x190>
   46f5e:	lea    eax,[rdx-0xa1]
   46f64:	cmp    eax,0xfebf
   46f69:	ja     46fdc <uc_width+0xfc>
   46f6b:	cmp    edx,0x20a9
   46f71:	je     46fdc <uc_width+0xfc>
   46f73:	movzx  eax,BYTE PTR [rbp+0x0]
   46f77:	cmp    al,0x45
   46f79:	je     46fe8 <uc_width+0x108>
   46f7b:	cmp    al,0x47
   46f7d:	jne    47180 <uc_width+0x2a0>
   46f83:	cmp    BYTE PTR [rbp+0x1],0x42
   46f87:	mov    eax,0x1
   46f8c:	jne    46fe1 <uc_width+0x101>
   46f8e:	movzx  edx,BYTE PTR [rbp+0x2]
   46f92:	cmp    dl,0x32
   46f95:	jne    47138 <uc_width+0x258>
   46f9b:	cmp    BYTE PTR [rbp+0x3],0x33
   46f9f:	jne    46fe1 <uc_width+0x101>
   46fa1:	cmp    BYTE PTR [rbp+0x4],0x31
   46fa5:	jne    46fe1 <uc_width+0x101>
   46fa7:	xor    r9d,r9d
   46faa:	xor    r8d,r8d
   46fad:	xor    ecx,ecx
   46faf:	mov    edx,0x32
   46fb4:	lea    rsi,[rip+0x1f794]        # 6674f <u_is_xdigit+0x14f>
   46fbb:	jmp    47043 <uc_width+0x163>
   46fc0:	cmp    eax,0x700
   46fc5:	je     47090 <uc_width+0x1b0>
   46fcb:	mov    ecx,edi
   46fcd:	shr    ecx,0x10
   46fd0:	cmp    edi,0x3ffff
   46fd6:	jbe    47118 <uc_width+0x238>
   46fdc:	mov    eax,0x1
   46fe1:	pop    rbp
   46fe2:	ret    
   46fe3:	nop    DWORD PTR [rax+rax*1+0x0]
   46fe8:	cmp    BYTE PTR [rbp+0x1],0x55
   46fec:	mov    eax,0x1
   46ff1:	jne    46fe1 <uc_width+0x101>
   46ff3:	cmp    BYTE PTR [rbp+0x2],0x43
   46ff7:	je     470d0 <uc_width+0x1f0>
   46ffd:	cmp    BYTE PTR [rbp+0x2],0x43
   47001:	jne    47018 <uc_width+0x138>
   47003:	cmp    BYTE PTR [rbp+0x3],0x2d
   47007:	jne    47018 <uc_width+0x138>
   47009:	cmp    BYTE PTR [rbp+0x4],0x54
   4700d:	je     4714f <uc_width+0x26f>
   47013:	nop    DWORD PTR [rax+rax*1+0x0]
   47018:	cmp    BYTE PTR [rbp+0x2],0x43
   4701c:	mov    eax,0x1
   47021:	jne    46fe1 <uc_width+0x101>
   47023:	cmp    BYTE PTR [rbp+0x3],0x2d
   47027:	jne    46fe1 <uc_width+0x101>
   47029:	cmp    BYTE PTR [rbp+0x4],0x4b
   4702d:	jne    46fe1 <uc_width+0x101>
   4702f:	xor    r9d,r9d
   47032:	xor    r8d,r8d
   47035:	xor    ecx,ecx
   47037:	mov    edx,0x52
   4703c:	lea    rsi,[rip+0x1f71a]        # 6675d <u_is_xdigit+0x15d>
   47043:	mov    rdi,rbp
   47046:	call   46e60 <streq5>
   4704b:	pop    rbp
   4704c:	cmp    eax,0x1
   4704f:	mov    eax,0x1
   47054:	sbb    eax,0xffffffff
   47057:	ret    
   47058:	nop    DWORD PTR [rax+rax*1+0x0]
   47060:	sub    edx,0x1
   47063:	pop    rbp
   47064:	cmp    edx,0x9f
   4706a:	sbb    eax,eax
   4706c:	ret    
   4706d:	nop    DWORD PTR [rax]
   47070:	mov    ecx,edx
   47072:	shr    ecx,0x5
   47075:	and    ecx,0xf
   47078:	add    eax,ecx
   4707a:	mov    eax,eax
   4707c:	mov    ecx,DWORD PTR [rsi+rax*4]
   4707f:	mov    eax,0x2
   47084:	bt     ecx,edx
   47087:	jae    46f5e <uc_width+0x7e>
   4708d:	pop    rbp
   4708e:	ret    
   4708f:	nop
   47090:	cmp    edi,0xe00ff
   47096:	jbe    470a8 <uc_width+0x1c8>
   47098:	xor    eax,eax
   4709a:	cmp    edi,0xe01ef
   470a0:	pop    rbp
   470a1:	seta   al
   470a4:	ret    
   470a5:	nop    DWORD PTR [rax]
   470a8:	cmp    edi,0xe001f
   470ae:	jbe    470c0 <uc_width+0x1e0>
   470b0:	xor    eax,eax
   470b2:	cmp    edi,0xe007f
   470b8:	pop    rbp
   470b9:	seta   al
   470bc:	ret    
   470bd:	nop    DWORD PTR [rax]
   470c0:	xor    eax,eax
   470c2:	cmp    edi,0xe0001
   470c8:	pop    rbp
   470c9:	setne  al
   470cc:	ret    
   470cd:	nop    DWORD PTR [rax]
   470d0:	cmp    BYTE PTR [rbp+0x3],0x2d
   470d4:	jne    46ffd <uc_width+0x11d>
   470da:	cmp    BYTE PTR [rbp+0x4],0x4a
   470de:	jne    46ffd <uc_width+0x11d>
   470e4:	xor    r8d,r8d
   470e7:	xor    r9d,r9d
   470ea:	xor    ecx,ecx
   470ec:	mov    edx,0x50
   470f1:	lea    rsi,[rip+0x1f650]        # 66748 <u_is_xdigit+0x148>
   470f8:	mov    rdi,rbp
   470fb:	call   46e60 <streq5>
   47100:	mov    r8d,eax
   47103:	mov    eax,0x2
   47108:	test   r8d,r8d
   4710b:	je     46ffd <uc_width+0x11d>
   47111:	pop    rbp
   47112:	ret    
   47113:	nop    DWORD PTR [rax+rax*1+0x0]
   47118:	add    ecx,0x1
   4711b:	lea    rsi,[rip+0x1f65e]        # 66780 <u_width2>
   47122:	mov    ecx,DWORD PTR [rsi+rcx*4]
   47125:	test   ecx,ecx
   47127:	jns    46f4a <uc_width+0x6a>
   4712d:	jmp    46fdc <uc_width+0xfc>
   47132:	nop    WORD PTR [rax+rax*1+0x0]
   47138:	cmp    dl,0x4b
   4713b:	jne    46fe1 <uc_width+0x101>
   47141:	cmp    BYTE PTR [rbp+0x3],0x1
   47145:	mov    eax,0x1
   4714a:	pop    rbp
   4714b:	adc    eax,0x0
   4714e:	ret    
   4714f:	xor    r8d,r8d
   47152:	xor    r9d,r9d
   47155:	xor    ecx,ecx
   47157:	mov    edx,0x57
   4715c:	lea    rsi,[rip+0x1f5f3]        # 66756 <u_is_xdigit+0x156>
   47163:	mov    rdi,rbp
   47166:	call   46e60 <streq5>
   4716b:	mov    r8d,eax
   4716e:	mov    eax,0x2
   47173:	test   r8d,r8d
   47176:	je     47018 <uc_width+0x138>
   4717c:	pop    rbp
   4717d:	ret    
   4717e:	xchg   ax,ax
   47180:	cmp    al,0x42
   47182:	jne    471b0 <uc_width+0x2d0>
   47184:	cmp    BYTE PTR [rbp+0x1],0x49
   47188:	mov    eax,0x1
   4718d:	jne    46fe1 <uc_width+0x101>
   47193:	cmp    BYTE PTR [rbp+0x2],0x47
   47197:	jne    46fe1 <uc_width+0x101>
   4719d:	cmp    BYTE PTR [rbp+0x3],0x35
   471a1:	jne    46fe1 <uc_width+0x101>
   471a7:	cmp    BYTE PTR [rbp+0x4],0x1
   471ab:	pop    rbp
   471ac:	adc    eax,0x0
   471af:	ret    
   471b0:	cmp    al,0x43
   471b2:	jne    471f7 <uc_width+0x317>
   471b4:	cmp    BYTE PTR [rbp+0x1],0x50
   471b8:	mov    eax,0x1
   471bd:	jne    46fe1 <uc_width+0x101>
   471c3:	cmp    BYTE PTR [rbp+0x2],0x39
   471c7:	jne    46fe1 <uc_width+0x101>
   471cd:	cmp    BYTE PTR [rbp+0x3],0x34
   471d1:	jne    46fe1 <uc_width+0x101>
   471d7:	cmp    BYTE PTR [rbp+0x4],0x39
   471db:	jne    46fe1 <uc_width+0x101>
   471e1:	xor    r9d,r9d
   471e4:	xor    r8d,r8d
   471e7:	xor    ecx,ecx
   471e9:	xor    edx,edx
   471eb:	lea    rsi,[rip+0x1f572]        # 66764 <u_is_xdigit+0x164>
   471f2:	jmp    47043 <uc_width+0x163>
   471f7:	cmp    al,0x4a
   471f9:	mov    eax,0x1
   471fe:	jne    46fe1 <uc_width+0x101>
   47204:	cmp    BYTE PTR [rbp+0x1],0x4f
   47208:	jne    46fe1 <uc_width+0x101>
   4720e:	cmp    BYTE PTR [rbp+0x2],0x48
   47212:	jne    46fe1 <uc_width+0x101>
   47218:	cmp    BYTE PTR [rbp+0x3],0x41
   4721c:	jne    46fe1 <uc_width+0x101>
   47222:	cmp    BYTE PTR [rbp+0x4],0x42
   47226:	jne    46fe1 <uc_width+0x101>
   4722c:	xor    r9d,r9d
   4722f:	xor    r8d,r8d
   47232:	xor    ecx,ecx
   47234:	xor    edx,edx
   47236:	lea    rsi,[rip+0x1f52d]        # 6676a <u_is_xdigit+0x16a>
   4723d:	jmp    47043 <uc_width+0x163>
   47242:	cs nop WORD PTR [rax+rax*1+0x0]
   4724c:	nop    DWORD PTR [rax+0x0]

0000000000047250 <validate_timespec>:
   47250:	mov    r8,QWORD PTR [rdi+0x8]
   47254:	lea    rcx,[r8-0x3ffffffe]
   4725b:	cmp    rcx,0x1
   4725f:	jbe    4726a <validate_timespec+0x1a>
   47261:	cmp    r8,0x3b9ac9ff
   47268:	ja     472d8 <validate_timespec+0x88>
   4726a:	mov    rax,QWORD PTR [rdi+0x18]
   4726e:	lea    rsi,[rax-0x3ffffffe]
   47275:	cmp    rsi,0x1
   47279:	jbe    47283 <validate_timespec+0x33>
   4727b:	cmp    rax,0x3b9ac9ff
   47281:	ja     472d8 <validate_timespec+0x88>
   47283:	xor    edx,edx
   47285:	xor    r9d,r9d
   47288:	cmp    rcx,0x1
   4728c:	ja     472a7 <validate_timespec+0x57>
   4728e:	mov    QWORD PTR [rdi],0x0
   47295:	xor    edx,edx
   47297:	cmp    r8,0x3ffffffe
   4729e:	mov    r9d,0x1
   472a4:	sete   dl
   472a7:	cmp    rsi,0x1
   472ab:	ja     472c9 <validate_timespec+0x79>
   472ad:	cmp    rax,0x3ffffffe
   472b3:	mov    QWORD PTR [rdi+0x10],0x0
   472bb:	mov    r9d,0x1
   472c1:	sete   al
   472c4:	movzx  eax,al
   472c7:	add    edx,eax
   472c9:	xor    eax,eax
   472cb:	cmp    edx,0x1
   472ce:	sete   al
   472d1:	add    eax,r9d
   472d4:	ret    
   472d5:	nop    DWORD PTR [rax]
   472d8:	sub    rsp,0x8
   472dc:	call   104b0 <__errno_location@plt>
   472e1:	mov    DWORD PTR [rax],0x16
   472e7:	mov    eax,0xffffffff
   472ec:	add    rsp,0x8
   472f0:	ret    
   472f1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   472fc:	nop    DWORD PTR [rax+0x0]

0000000000047300 <update_timespec>:
   47300:	push   r12
   47302:	push   rbp
   47303:	mov    rbp,rdi
   47306:	push   rbx
   47307:	mov    rbx,QWORD PTR [rsi]
   4730a:	mov    rdx,QWORD PTR [rbx+0x8]
   4730e:	mov    rax,QWORD PTR [rbx+0x18]
   47312:	cmp    rdx,0x3ffffffe
   47319:	je     47350 <update_timespec+0x50>
   4731b:	cmp    rdx,0x3fffffff
   47322:	je     47390 <update_timespec+0x90>
   47324:	cmp    rax,0x3ffffffe
   4732a:	jne    4736d <update_timespec+0x6d>
   4732c:	mov    rdx,QWORD PTR [rbp+0x58]
   47330:	mov    rax,QWORD PTR [rbp+0x60]
   47334:	xor    r12d,r12d
   47337:	mov    QWORD PTR [rbx+0x10],rdx
   4733b:	mov    QWORD PTR [rbx+0x18],rax
   4733f:	mov    eax,r12d
   47342:	pop    rbx
   47343:	pop    rbp
   47344:	pop    r12
   47346:	ret    
   47347:	nop    WORD PTR [rax+rax*1+0x0]
   47350:	mov    r12d,0x1
   47356:	cmp    rax,0x3ffffffe
   4735c:	je     4733f <update_timespec+0x3f>
   4735e:	mov    rcx,QWORD PTR [rdi+0x48]
   47362:	mov    rdx,QWORD PTR [rdi+0x50]
   47366:	mov    QWORD PTR [rbx],rcx
   47369:	mov    QWORD PTR [rbx+0x8],rdx
   4736d:	xor    r12d,r12d
   47370:	cmp    rax,0x3fffffff
   47376:	jne    4733f <update_timespec+0x3f>
   47378:	lea    rdi,[rbx+0x10]
   4737c:	call   40eb0 <gettime>
   47381:	mov    eax,r12d
   47384:	pop    rbx
   47385:	pop    rbp
   47386:	pop    r12
   47388:	ret    
   47389:	nop    DWORD PTR [rax+0x0]
   47390:	cmp    rax,0x3fffffff
   47396:	je     473b0 <update_timespec+0xb0>
   47398:	mov    rdi,rbx
   4739b:	call   40eb0 <gettime>
   473a0:	mov    rax,QWORD PTR [rbx+0x18]
   473a4:	cmp    rax,0x3ffffffe
   473aa:	je     4732c <update_timespec+0x2c>
   473ac:	jmp    4736d <update_timespec+0x6d>
   473ae:	xchg   ax,ax
   473b0:	mov    QWORD PTR [rsi],0x0
   473b7:	xor    r12d,r12d
   473ba:	jmp    4733f <update_timespec+0x3f>
   473bc:	nop    DWORD PTR [rax+0x0]

00000000000473c0 <fdutimens>:
   473c0:	endbr64 
   473c4:	push   r14
   473c6:	mov    r14,rsi
   473c9:	push   r13
   473cb:	push   r12
   473cd:	push   rbp
   473ce:	mov    ebp,edi
   473d0:	push   rbx
   473d1:	mov    rbx,rdx
   473d4:	sub    rsp,0x110
   473db:	mov    rax,QWORD PTR fs:0x28
   473e4:	mov    QWORD PTR [rsp+0x108],rax
   473ec:	xor    eax,eax
   473ee:	test   rdx,rdx
   473f1:	je     475b0 <fdutimens+0x1f0>
   473f7:	movdqu xmm0,XMMWORD PTR [rdx]
   473fb:	movdqu xmm1,XMMWORD PTR [rdx+0x10]
   47400:	lea    r12,[rsp+0x10]
   47405:	mov    rdi,r12
   47408:	mov    QWORD PTR [rsp+0x8],r12
   4740d:	movaps XMMWORD PTR [rsp+0x10],xmm0
   47412:	movaps XMMWORD PTR [rsp+0x20],xmm1
   47417:	call   47250 <validate_timespec>
   4741c:	mov    r13d,eax
   4741f:	test   eax,eax
   47421:	js     4757b <fdutimens+0x1bb>
   47427:	mov    rbx,r12
   4742a:	test   ebp,ebp
   4742c:	jns    47437 <fdutimens+0x77>
   4742e:	test   r14,r14
   47431:	je     47570 <fdutimens+0x1b0>
   47437:	mov    eax,DWORD PTR [rip+0x33347]        # 7a784 <utimensat_works_really>
   4743d:	test   eax,eax
   4743f:	js     47473 <fdutimens+0xb3>
   47441:	cmp    r13d,0x2
   47445:	je     475c8 <fdutimens+0x208>
   4744b:	test   ebp,ebp
   4744d:	js     476f8 <fdutimens+0x338>
   47453:	mov    rsi,rbx
   47456:	mov    edi,ebp
   47458:	call   11510 <futimens@plt>
   4745d:	mov    r12d,eax
   47460:	test   eax,eax
   47462:	jle    47715 <fdutimens+0x355>
   47468:	call   104b0 <__errno_location@plt>
   4746d:	mov    DWORD PTR [rax],0x26
   47473:	mov    DWORD PTR [rip+0x33307],0xffffffff        # 7a784 <utimensat_works_really>
   4747d:	mov    DWORD PTR [rip+0x332f9],0xffffffff        # 7a780 <lutimensat_works_really>
   47487:	test   r13d,r13d
   4748a:	je     474d2 <fdutimens+0x112>
   4748c:	cmp    r13d,0x3
   47490:	je     474b3 <fdutimens+0xf3>
   47492:	lea    rsi,[rsp+0x70]
   47497:	test   ebp,ebp
   47499:	js     47730 <fdutimens+0x370>
   4749f:	mov    edi,ebp
   474a1:	call   12210 <fstat@plt>
   474a6:	test   eax,eax
   474a8:	setne  al
   474ab:	test   al,al
   474ad:	jne    4757b <fdutimens+0x1bb>
   474b3:	test   rbx,rbx
   474b6:	je     474d2 <fdutimens+0x112>
   474b8:	lea    rsi,[rsp+0x8]
   474bd:	lea    rdi,[rsp+0x70]
   474c2:	xor    r12d,r12d
   474c5:	call   47300 <update_timespec>
   474ca:	test   al,al
   474cc:	jne    47581 <fdutimens+0x1c1>
   474d2:	mov    r13,QWORD PTR [rsp+0x8]
   474d7:	test   r13,r13
   474da:	je     47531 <fdutimens+0x171>
   474dc:	movabs rcx,0x20c49ba5e353f7cf
   474e6:	mov    rsi,QWORD PTR [r13+0x8]
   474ea:	mov    rax,rsi
   474ed:	sar    rsi,0x3f
   474f1:	imul   rcx
   474f4:	mov    rax,QWORD PTR [r13+0x0]
   474f8:	mov    QWORD PTR [rsp+0x30],rax
   474fd:	sar    rdx,0x7
   47501:	sub    rdx,rsi
   47504:	mov    rsi,QWORD PTR [r13+0x18]
   47508:	mov    QWORD PTR [rsp+0x38],rdx
   4750d:	mov    rax,rsi
   47510:	sar    rsi,0x3f
   47514:	imul   rcx
   47517:	mov    rax,QWORD PTR [r13+0x10]
   4751b:	lea    r13,[rsp+0x30]
   47520:	mov    QWORD PTR [rsp+0x40],rax
   47525:	sar    rdx,0x7
   47529:	sub    rdx,rsi
   4752c:	mov    QWORD PTR [rsp+0x48],rdx
   47531:	mov    rdx,r13
   47534:	test   ebp,ebp
   47536:	js     47748 <fdutimens+0x388>
   4753c:	xor    esi,esi
   4753e:	mov    edi,ebp
   47540:	call   10d60 <futimesat@plt>
   47545:	mov    r12d,eax
   47548:	test   eax,eax
   4754a:	je     47628 <fdutimens+0x268>
   47550:	mov    r12d,0xffffffff
   47556:	test   r14,r14
   47559:	je     47581 <fdutimens+0x1c1>
   4755b:	mov    rsi,r13
   4755e:	mov    rdi,r14
   47561:	call   11010 <utimes@plt>
   47566:	mov    r12d,eax
   47569:	jmp    47581 <fdutimens+0x1c1>
   4756b:	nop    DWORD PTR [rax+rax*1+0x0]
   47570:	call   104b0 <__errno_location@plt>
   47575:	mov    DWORD PTR [rax],0x9
   4757b:	mov    r12d,0xffffffff
   47581:	mov    rax,QWORD PTR [rsp+0x108]
   47589:	sub    rax,QWORD PTR fs:0x28
   47592:	jne    477dd <fdutimens+0x41d>
   47598:	add    rsp,0x110
   4759f:	mov    eax,r12d
   475a2:	pop    rbx
   475a3:	pop    rbp
   475a4:	pop    r12
   475a6:	pop    r13
   475a8:	pop    r14
   475aa:	ret    
   475ab:	nop    DWORD PTR [rax+rax*1+0x0]
   475b0:	mov    QWORD PTR [rsp+0x8],0x0
   475b9:	xor    r13d,r13d
   475bc:	jmp    4742a <fdutimens+0x6a>
   475c1:	nop    DWORD PTR [rax+0x0]
   475c8:	lea    rsi,[rsp+0x70]
   475cd:	test   ebp,ebp
   475cf:	js     47760 <fdutimens+0x3a0>
   475d5:	mov    edi,ebp
   475d7:	call   12210 <fstat@plt>
   475dc:	test   eax,eax
   475de:	setne  al
   475e1:	test   al,al
   475e3:	jne    4757b <fdutimens+0x1bb>
   475e5:	cmp    QWORD PTR [rbx+0x8],0x3ffffffe
   475ed:	je     47778 <fdutimens+0x3b8>
   475f3:	cmp    QWORD PTR [rbx+0x18],0x3ffffffe
   475fb:	mov    r13d,0x3
   47601:	jne    4744b <fdutimens+0x8b>
   47607:	mov    rax,QWORD PTR [rsp+0xc8]
   4760f:	mov    QWORD PTR [rbx+0x10],rax
   47613:	mov    rax,QWORD PTR [rsp+0xd0]
   4761b:	mov    QWORD PTR [rbx+0x18],rax
   4761f:	jmp    4744b <fdutimens+0x8b>
   47624:	nop    DWORD PTR [rax+0x0]
   47628:	test   r13,r13
   4762b:	je     47581 <fdutimens+0x1c1>
   47631:	cmp    QWORD PTR [r13+0x8],0x7a11f
   47639:	setg   bl
   4763c:	cmp    QWORD PTR [r13+0x18],0x7a11f
   47644:	setg   r14b
   47648:	test   bl,bl
   4764a:	jne    47655 <fdutimens+0x295>
   4764c:	test   r14b,r14b
   4764f:	je     47581 <fdutimens+0x1c1>
   47655:	lea    rsi,[rsp+0x70]
   4765a:	mov    edi,ebp
   4765c:	call   12210 <fstat@plt>
   47661:	test   eax,eax
   47663:	jne    47581 <fdutimens+0x1c1>
   47669:	mov    rdx,QWORD PTR [rsp+0xc8]
   47671:	sub    rdx,QWORD PTR [r13+0x10]
   47675:	mov    rax,QWORD PTR [rsp+0xb8]
   4767d:	movdqa xmm2,XMMWORD PTR [r13+0x0]
   47683:	movdqa xmm3,XMMWORD PTR [r13+0x10]
   47689:	sub    rax,QWORD PTR [r13+0x0]
   4768d:	cmp    rdx,0x1
   47691:	sete   dl
   47694:	movaps XMMWORD PTR [rsp+0x50],xmm2
   47699:	movaps XMMWORD PTR [rsp+0x60],xmm3
   4769e:	and    edx,r14d
   476a1:	cmp    rax,0x1
   476a5:	jne    477b8 <fdutimens+0x3f8>
   476ab:	test   bl,bl
   476ad:	je     477b8 <fdutimens+0x3f8>
   476b3:	cmp    QWORD PTR [rsp+0xc0],0x0
   476bc:	jne    477b8 <fdutimens+0x3f8>
   476c2:	mov    QWORD PTR [rsp+0x58],0x0
   476cb:	test   dl,dl
   476cd:	je     476de <fdutimens+0x31e>
   476cf:	cmp    QWORD PTR [rsp+0xd0],0x0
   476d8:	je     477cf <fdutimens+0x40f>
   476de:	lea    rdx,[rsp+0x50]
   476e3:	xor    esi,esi
   476e5:	mov    edi,ebp
   476e7:	call   10d60 <futimesat@plt>
   476ec:	xor    r12d,r12d
   476ef:	jmp    47581 <fdutimens+0x1c1>
   476f4:	nop    DWORD PTR [rax+0x0]
   476f8:	xor    ecx,ecx
   476fa:	mov    rdx,rbx
   476fd:	mov    rsi,r14
   47700:	mov    edi,0xffffff9c
   47705:	call   10d80 <utimensat@plt>
   4770a:	mov    r12d,eax
   4770d:	test   eax,eax
   4770f:	jg     47468 <fdutimens+0xa8>
   47715:	jne    477a0 <fdutimens+0x3e0>
   4771b:	mov    DWORD PTR [rip+0x3305f],0x1        # 7a784 <utimensat_works_really>
   47725:	jmp    47581 <fdutimens+0x1c1>
   4772a:	nop    WORD PTR [rax+rax*1+0x0]
   47730:	mov    rdi,r14
   47733:	call   11420 <stat@plt>
   47738:	test   eax,eax
   4773a:	setne  al
   4773d:	jmp    474ab <fdutimens+0xeb>
   47742:	nop    WORD PTR [rax+rax*1+0x0]
   47748:	mov    rsi,r14
   4774b:	mov    edi,0xffffff9c
   47750:	call   10d60 <futimesat@plt>
   47755:	mov    r12d,eax
   47758:	jmp    47581 <fdutimens+0x1c1>
   4775d:	nop    DWORD PTR [rax]
   47760:	mov    rdi,r14
   47763:	call   11420 <stat@plt>
   47768:	test   eax,eax
   4776a:	setne  al
   4776d:	jmp    475e1 <fdutimens+0x221>
   47772:	nop    WORD PTR [rax+rax*1+0x0]
   47778:	mov    rax,QWORD PTR [rsp+0xb8]
   47780:	mov    r13d,0x3
   47786:	mov    QWORD PTR [rbx],rax
   47789:	mov    rax,QWORD PTR [rsp+0xc0]
   47791:	mov    QWORD PTR [rbx+0x8],rax
   47795:	jmp    4744b <fdutimens+0x8b>
   4779a:	nop    WORD PTR [rax+rax*1+0x0]
   477a0:	call   104b0 <__errno_location@plt>
   477a5:	cmp    DWORD PTR [rax],0x26
   477a8:	jne    4771b <fdutimens+0x35b>
   477ae:	jmp    47473 <fdutimens+0xb3>
   477b3:	nop    DWORD PTR [rax+rax*1+0x0]
   477b8:	test   dl,dl
   477ba:	je     476ec <fdutimens+0x32c>
   477c0:	cmp    QWORD PTR [rsp+0xd0],0x0
   477c9:	jne    476ec <fdutimens+0x32c>
   477cf:	mov    QWORD PTR [rsp+0x68],0x0
   477d8:	jmp    476de <fdutimens+0x31e>
   477dd:	call   11760 <__stack_chk_fail@plt>
   477e2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   477ed:	nop    DWORD PTR [rax]

00000000000477f0 <utimens>:
   477f0:	endbr64 
   477f4:	mov    rdx,rsi
   477f7:	mov    rsi,rdi
   477fa:	mov    edi,0xffffffff
   477ff:	jmp    473c0 <fdutimens>
   47804:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4780f:	nop

0000000000047810 <lutimens>:
   47810:	endbr64 
   47814:	push   r13
   47816:	push   r12
   47818:	push   rbp
   47819:	mov    rbp,rdi
   4781c:	push   rbx
   4781d:	mov    rbx,rsi
   47820:	sub    rsp,0xd8
   47827:	mov    rax,QWORD PTR fs:0x28
   47830:	mov    QWORD PTR [rsp+0xc8],rax
   47838:	xor    eax,eax
   4783a:	test   rsi,rsi
   4783d:	je     47988 <lutimens+0x178>
   47843:	movdqu xmm0,XMMWORD PTR [rsi]
   47847:	movdqu xmm1,XMMWORD PTR [rsi+0x10]
   4784c:	lea    r12,[rsp+0x10]
   47851:	mov    rdi,r12
   47854:	mov    QWORD PTR [rsp+0x8],r12
   47859:	movaps XMMWORD PTR [rsp+0x10],xmm0
   4785e:	movaps XMMWORD PTR [rsp+0x20],xmm1
   47863:	call   47250 <validate_timespec>
   47868:	mov    r13d,eax
   4786b:	test   eax,eax
   4786d:	js     479c8 <lutimens+0x1b8>
   47873:	mov    eax,DWORD PTR [rip+0x32f07]        # 7a780 <lutimensat_works_really>
   47879:	test   eax,eax
   4787b:	js     478f8 <lutimens+0xe8>
   4787d:	cmp    r13d,0x2
   47881:	jne    47a10 <lutimens+0x200>
   47887:	lea    rsi,[rsp+0x30]
   4788c:	mov    rdi,rbp
   4788f:	call   12720 <lstat@plt>
   47894:	test   eax,eax
   47896:	jne    479c8 <lutimens+0x1b8>
   4789c:	cmp    QWORD PTR [rsp+0x18],0x3ffffffe
   478a5:	je     47a20 <lutimens+0x210>
   478ab:	cmp    QWORD PTR [rsp+0x28],0x3ffffffe
   478b4:	mov    rbx,r12
   478b7:	mov    r13d,0x3
   478bd:	je     47a48 <lutimens+0x238>
   478c3:	nop    DWORD PTR [rax+rax*1+0x0]
   478c8:	mov    ecx,0x100
   478cd:	mov    rdx,rbx
   478d0:	mov    rsi,rbp
   478d3:	mov    edi,0xffffff9c
   478d8:	call   10d80 <utimensat@plt>
   478dd:	mov    r12d,eax
   478e0:	test   eax,eax
   478e2:	jle    479d0 <lutimens+0x1c0>
   478e8:	call   104b0 <__errno_location@plt>
   478ed:	mov    DWORD PTR [rax],0x26
   478f3:	jmp    478fb <lutimens+0xeb>
   478f5:	nop    DWORD PTR [rax]
   478f8:	mov    rbx,r12
   478fb:	mov    DWORD PTR [rip+0x32e7b],0xffffffff        # 7a780 <lutimensat_works_really>
   47905:	test   r13d,r13d
   47908:	je     479ac <lutimens+0x19c>
   4790e:	cmp    r13d,0x3
   47912:	jne    479f0 <lutimens+0x1e0>
   47918:	test   rbx,rbx
   4791b:	je     47933 <lutimens+0x123>
   4791d:	lea    rsi,[rsp+0x8]
   47922:	lea    rdi,[rsp+0x30]
   47927:	xor    r12d,r12d
   4792a:	call   47300 <update_timespec>
   4792f:	test   al,al
   47931:	jne    4795c <lutimens+0x14c>
   47933:	mov    eax,DWORD PTR [rsp+0x48]
   47937:	and    eax,0xf000
   4793c:	cmp    eax,0xa000
   47941:	je     47a88 <lutimens+0x278>
   47947:	mov    rdx,QWORD PTR [rsp+0x8]
   4794c:	mov    rsi,rbp
   4794f:	mov    edi,0xffffffff
   47954:	call   473c0 <fdutimens>
   47959:	mov    r12d,eax
   4795c:	mov    rax,QWORD PTR [rsp+0xc8]
   47964:	sub    rax,QWORD PTR fs:0x28
   4796d:	jne    47a98 <lutimens+0x288>
   47973:	add    rsp,0xd8
   4797a:	mov    eax,r12d
   4797d:	pop    rbx
   4797e:	pop    rbp
   4797f:	pop    r12
   47981:	pop    r13
   47983:	ret    
   47984:	nop    DWORD PTR [rax+0x0]
   47988:	mov    edx,DWORD PTR [rip+0x32df2]        # 7a780 <lutimensat_works_really>
   4798e:	xor    r13d,r13d
   47991:	mov    QWORD PTR [rsp+0x8],0x0
   4799a:	test   edx,edx
   4799c:	jns    478c8 <lutimens+0xb8>
   479a2:	mov    DWORD PTR [rip+0x32dd4],0xffffffff        # 7a780 <lutimensat_works_really>
   479ac:	lea    rsi,[rsp+0x30]
   479b1:	mov    rdi,rbp
   479b4:	call   12720 <lstat@plt>
   479b9:	test   eax,eax
   479bb:	je     47933 <lutimens+0x123>
   479c1:	nop    DWORD PTR [rax+0x0]
   479c8:	mov    r12d,0xffffffff
   479ce:	jmp    4795c <lutimens+0x14c>
   479d0:	jne    47a70 <lutimens+0x260>
   479d6:	mov    DWORD PTR [rip+0x32da4],0x1        # 7a784 <utimensat_works_really>
   479e0:	mov    DWORD PTR [rip+0x32d96],0x1        # 7a780 <lutimensat_works_really>
   479ea:	jmp    4795c <lutimens+0x14c>
   479ef:	nop
   479f0:	lea    rsi,[rsp+0x30]
   479f5:	mov    rdi,rbp
   479f8:	call   12720 <lstat@plt>
   479fd:	test   eax,eax
   479ff:	jne    479c8 <lutimens+0x1b8>
   47a01:	test   rbx,rbx
   47a04:	jne    4791d <lutimens+0x10d>
   47a0a:	jmp    47933 <lutimens+0x123>
   47a0f:	nop
   47a10:	mov    rbx,r12
   47a13:	jmp    478c8 <lutimens+0xb8>
   47a18:	nop    DWORD PTR [rax+rax*1+0x0]
   47a20:	mov    rax,QWORD PTR [rsp+0x78]
   47a25:	mov    rbx,r12
   47a28:	mov    r13d,0x3
   47a2e:	mov    QWORD PTR [rsp+0x10],rax
   47a33:	mov    rax,QWORD PTR [rsp+0x80]
   47a3b:	mov    QWORD PTR [rsp+0x18],rax
   47a40:	jmp    478c8 <lutimens+0xb8>
   47a45:	nop    DWORD PTR [rax]
   47a48:	mov    rax,QWORD PTR [rsp+0x88]
   47a50:	mov    QWORD PTR [rsp+0x20],rax
   47a55:	mov    rax,QWORD PTR [rsp+0x90]
   47a5d:	mov    QWORD PTR [rsp+0x28],rax
   47a62:	jmp    478c8 <lutimens+0xb8>
   47a67:	nop    WORD PTR [rax+rax*1+0x0]
   47a70:	call   104b0 <__errno_location@plt>
   47a75:	cmp    DWORD PTR [rax],0x26
   47a78:	jne    479d6 <lutimens+0x1c6>
   47a7e:	jmp    478fb <lutimens+0xeb>
   47a83:	nop    DWORD PTR [rax+rax*1+0x0]
   47a88:	call   104b0 <__errno_location@plt>
   47a8d:	mov    DWORD PTR [rax],0x26
   47a93:	jmp    479c8 <lutimens+0x1b8>
   47a98:	call   11760 <__stack_chk_fail@plt>
   47a9d:	nop    DWORD PTR [rax]

0000000000047aa0 <cleanup_slaves>:
   47aa0:	endbr64 
   47aa4:	movsxd rax,DWORD PTR [rip+0x32cf9]        # 7a7a4 <slaves_count>
   47aab:	test   rax,rax
   47aae:	je     47b12 <cleanup_slaves+0x72>
   47ab0:	sub    rsp,0x8
   47ab4:	jmp    47acc <cleanup_slaves+0x2c>
   47ab6:	cs nop WORD PTR [rax+rax*1+0x0]
   47ac0:	movsxd rax,DWORD PTR [rip+0x32cdd]        # 7a7a4 <slaves_count>
   47ac7:	test   rax,rax
   47aca:	je     47b0d <cleanup_slaves+0x6d>
   47acc:	sub    rax,0x1
   47ad0:	mov    DWORD PTR [rip+0x32cce],eax        # 7a7a4 <slaves_count>
   47ad6:	mov    rdx,QWORD PTR [rip+0x2f973]        # 77450 <slaves>
   47add:	shl    rax,0x3
   47ae1:	add    rdx,rax
   47ae4:	mov    edx,DWORD PTR [rdx]
   47ae6:	test   edx,edx
   47ae8:	je     47ac0 <cleanup_slaves+0x20>
   47aea:	mov    rdx,QWORD PTR [rip+0x2f95f]        # 77450 <slaves>
   47af1:	mov    esi,0x1
   47af6:	add    rax,rdx
   47af9:	mov    edi,DWORD PTR [rax+0x4]
   47afc:	call   11d00 <kill@plt>
   47b01:	movsxd rax,DWORD PTR [rip+0x32c9c]        # 7a7a4 <slaves_count>
   47b08:	test   rax,rax
   47b0b:	jne    47acc <cleanup_slaves+0x2c>
   47b0d:	add    rsp,0x8
   47b11:	ret    
   47b12:	ret    
   47b13:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   47b1e:	xchg   ax,ax

0000000000047b20 <cleanup_slaves_action>:
   47b20:	endbr64 
   47b24:	jmp    47aa0 <cleanup_slaves>
   47b29:	nop    DWORD PTR [rax+0x0]

0000000000047b30 <register_slave_subprocess>:
   47b30:	endbr64 
   47b34:	push   r13
   47b36:	push   r12
   47b38:	push   rbp
   47b39:	mov    ebp,edi
   47b3b:	push   rbx
   47b3c:	sub    rsp,0x8
   47b40:	cmp    BYTE PTR [rip+0x32c59],0x0        # 7a7a0 <cleanup_slaves_registered.0>
   47b47:	je     47bf0 <register_slave_subprocess+0xc0>
   47b4d:	mov    rax,QWORD PTR [rip+0x2f8fc]        # 77450 <slaves>
   47b54:	movsxd rdx,DWORD PTR [rip+0x32c49]        # 7a7a4 <slaves_count>
   47b5b:	lea    rcx,[rax+rdx*8]
   47b5f:	cmp    rax,rcx
   47b62:	jb     47b79 <register_slave_subprocess+0x49>
   47b64:	jmp    47b98 <register_slave_subprocess+0x68>
   47b66:	cs nop WORD PTR [rax+rax*1+0x0]
   47b70:	add    rax,0x8
   47b74:	cmp    rcx,rax
   47b77:	jbe    47b98 <register_slave_subprocess+0x68>
   47b79:	mov    edx,DWORD PTR [rax]
   47b7b:	test   edx,edx
   47b7d:	jne    47b70 <register_slave_subprocess+0x40>
   47b7f:	mov    DWORD PTR [rax+0x4],ebp
   47b82:	mov    DWORD PTR [rax],0x1
   47b88:	add    rsp,0x8
   47b8c:	pop    rbx
   47b8d:	pop    rbp
   47b8e:	pop    r12
   47b90:	pop    r13
   47b92:	ret    
   47b93:	nop    DWORD PTR [rax+rax*1+0x0]
   47b98:	movsxd rbx,DWORD PTR [rip+0x32c05]        # 7a7a4 <slaves_count>
   47b9f:	cmp    rbx,QWORD PTR [rip+0x2f8a2]        # 77448 <slaves_allocated>
   47ba6:	je     47c20 <register_slave_subprocess+0xf0>
   47ba8:	mov    rdx,QWORD PTR [rip+0x2f8a1]        # 77450 <slaves>
   47baf:	movsxd rax,DWORD PTR [rip+0x32bee]        # 7a7a4 <slaves_count>
   47bb6:	lea    rax,[rdx+rax*8]
   47bba:	mov    DWORD PTR [rax+0x4],ebp
   47bbd:	mov    rdx,QWORD PTR [rip+0x2f88c]        # 77450 <slaves>
   47bc4:	movsxd rax,DWORD PTR [rip+0x32bd9]        # 7a7a4 <slaves_count>
   47bcb:	lea    rax,[rdx+rax*8]
   47bcf:	mov    DWORD PTR [rax],0x1
   47bd5:	mov    eax,DWORD PTR [rip+0x32bc9]        # 7a7a4 <slaves_count>
   47bdb:	add    eax,0x1
   47bde:	mov    DWORD PTR [rip+0x32bc0],eax        # 7a7a4 <slaves_count>
   47be4:	add    rsp,0x8
   47be8:	pop    rbx
   47be9:	pop    rbp
   47bea:	pop    r12
   47bec:	pop    r13
   47bee:	ret    
   47bef:	nop
   47bf0:	lea    rdi,[rip+0xfffffffffffffea9]        # 47aa0 <cleanup_slaves>
   47bf7:	call   4a9e0 <atexit>
   47bfc:	lea    rdi,[rip+0xffffffffffffff1d]        # 47b20 <cleanup_slaves_action>
   47c03:	call   400d0 <at_fatal_signal>
   47c08:	test   eax,eax
   47c0a:	js     47c86 <register_slave_subprocess+0x156>
   47c0c:	mov    BYTE PTR [rip+0x32b8d],0x1        # 7a7a0 <cleanup_slaves_registered.0>
   47c13:	jmp    47b4d <register_slave_subprocess+0x1d>
   47c18:	nop    DWORD PTR [rax+rax*1+0x0]
   47c20:	mov    rdi,rbx
   47c23:	mov    r13,QWORD PTR [rip+0x2f826]        # 77450 <slaves>
   47c2a:	lea    r12,[rbx+rbx*1]
   47c2e:	shl    rdi,0x4
   47c32:	call   11af0 <malloc@plt>
   47c37:	test   rax,rax
   47c3a:	je     47c7a <register_slave_subprocess+0x14a>
   47c3c:	lea    rdx,[rbx*8+0x0]
   47c44:	mov    rsi,r13
   47c47:	mov    rdi,rax
   47c4a:	call   11220 <memcpy@plt>
   47c4f:	mov    QWORD PTR [rip+0x2f7f2],r12        # 77448 <slaves_allocated>
   47c56:	mov    QWORD PTR [rip+0x2f7f3],rax        # 77450 <slaves>
   47c5d:	lea    rax,[rip+0x32b5c]        # 7a7c0 <static_slaves>
   47c64:	cmp    r13,rax
   47c67:	je     47ba8 <register_slave_subprocess+0x78>
   47c6d:	mov    rdi,r13
   47c70:	call   10430 <free@plt>
   47c75:	jmp    47ba8 <register_slave_subprocess+0x78>
   47c7a:	mov    esi,0x1
   47c7f:	mov    edi,ebp
   47c81:	call   11d00 <kill@plt>
   47c86:	call   48450 <xalloc_die>
   47c8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000047c90 <wait_subprocess>:
   47c90:	endbr64 
   47c94:	push   r15
   47c96:	push   r14
   47c98:	push   r13
   47c9a:	mov    r13,rsi
   47c9d:	push   r12
   47c9f:	mov    r12d,ecx
   47ca2:	push   rbp
   47ca3:	mov    ebp,r9d
   47ca6:	push   rbx
   47ca7:	mov    ebx,edi
   47ca9:	sub    rsp,0x28
   47cad:	mov    DWORD PTR [rsp+0xc],edx
   47cb1:	mov    r15,QWORD PTR [rsp+0x60]
   47cb6:	mov    DWORD PTR [rsp],r8d
   47cba:	mov    rax,QWORD PTR fs:0x28
   47cc3:	mov    QWORD PTR [rsp+0x18],rax
   47cc8:	xor    eax,eax
   47cca:	test   r15,r15
   47ccd:	je     47cd6 <wait_subprocess+0x46>
   47ccf:	mov    DWORD PTR [r15],0x0
   47cd6:	mov    DWORD PTR [rsp+0x14],0x0
   47cde:	lea    r14,[rsp+0x14]
   47ce3:	xor    edx,edx
   47ce5:	mov    rsi,r14
   47ce8:	mov    edi,ebx
   47cea:	call   11180 <waitpid@plt>
   47cef:	cmp    ebx,eax
   47cf1:	je     47d68 <wait_subprocess+0xd8>
   47cf3:	call   104b0 <__errno_location@plt>
   47cf8:	cmp    DWORD PTR [rax],0x4
   47cfb:	mov    r8,rax
   47cfe:	je     47ce3 <wait_subprocess+0x53>
   47d00:	cmp    r12b,0x1
   47d04:	jne    47d0b <wait_subprocess+0x7b>
   47d06:	test   bpl,bpl
   47d09:	je     47d3a <wait_subprocess+0xaa>
   47d0b:	mov    edx,0x5
   47d10:	lea    rsi,[rip+0x20189]        # 67ea0 <nonspacing_table_data+0xc00>
   47d17:	xor    edi,edi
   47d19:	mov    QWORD PTR [rsp],r8
   47d1d:	call   10f90 <dcgettext@plt>
   47d22:	mov    r8,QWORD PTR [rsp]
   47d26:	movzx  edi,bpl
   47d2a:	mov    rcx,r13
   47d2d:	mov    rdx,rax
   47d30:	xor    eax,eax
   47d32:	mov    esi,DWORD PTR [r8]
   47d35:	call   121e0 <error@plt>
   47d3a:	mov    eax,0x7f
   47d3f:	mov    rdx,QWORD PTR [rsp+0x18]
   47d44:	sub    rdx,QWORD PTR fs:0x28
   47d4d:	jne    47e7d <wait_subprocess+0x1ed>
   47d53:	add    rsp,0x28
   47d57:	pop    rbx
   47d58:	pop    rbp
   47d59:	pop    r12
   47d5b:	pop    r13
   47d5d:	pop    r14
   47d5f:	pop    r15
   47d61:	ret    
   47d62:	nop    WORD PTR [rax+rax*1+0x0]
   47d68:	mov    eax,DWORD PTR [rsp+0x14]
   47d6c:	cmp    al,0x7f
   47d6e:	je     47ce3 <wait_subprocess+0x53>
   47d74:	cmp    BYTE PTR [rsp],0x0
   47d78:	jne    47e31 <wait_subprocess+0x1a1>
   47d7e:	mov    ebx,eax
   47d80:	and    ebx,0x7f
   47d83:	lea    edx,[rbx+0x1]
   47d86:	cmp    dl,0x1
   47d89:	jle    47de3 <wait_subprocess+0x153>
   47d8b:	test   r15,r15
   47d8e:	je     47d93 <wait_subprocess+0x103>
   47d90:	mov    DWORD PTR [r15],ebx
   47d93:	cmp    ebx,0xd
   47d96:	jne    47da3 <wait_subprocess+0x113>
   47d98:	cmp    BYTE PTR [rsp+0xc],0x0
   47d9d:	jne    47e76 <wait_subprocess+0x1e6>
   47da3:	test   bpl,bpl
   47da6:	jne    128ba <wait_subprocess.cold>
   47dac:	cmp    r12b,0x1
   47db0:	je     47d3a <wait_subprocess+0xaa>
   47db2:	test   r15,r15
   47db5:	jne    47d3a <wait_subprocess+0xaa>
   47db7:	xor    edi,edi
   47db9:	mov    edx,0x5
   47dbe:	lea    rsi,[rip+0x200eb]        # 67eb0 <nonspacing_table_data+0xc10>
   47dc5:	call   10f90 <dcgettext@plt>
   47dca:	mov    r8d,ebx
   47dcd:	mov    rcx,r13
   47dd0:	xor    esi,esi
   47dd2:	mov    rdx,rax
   47dd5:	xor    edi,edi
   47dd7:	xor    eax,eax
   47dd9:	call   121e0 <error@plt>
   47dde:	jmp    47d3a <wait_subprocess+0xaa>
   47de3:	test   ebx,ebx
   47de5:	jne    128e4 <wait_subprocess.cold+0x2a>
   47deb:	movzx  eax,ah
   47dee:	cmp    eax,0x7f
   47df1:	jne    47d3f <wait_subprocess+0xaf>
   47df7:	cmp    r12b,0x1
   47dfb:	jne    47e06 <wait_subprocess+0x176>
   47dfd:	test   bpl,bpl
   47e00:	je     47d3a <wait_subprocess+0xaa>
   47e06:	xor    edi,edi
   47e08:	mov    edx,0x5
   47e0d:	lea    rsi,[rip+0x10526]        # 5833a <default_tuning+0xfa>
   47e14:	call   10f90 <dcgettext@plt>
   47e19:	movzx  edi,bpl
   47e1d:	mov    rcx,r13
   47e20:	xor    esi,esi
   47e22:	mov    rdx,rax
   47e25:	xor    eax,eax
   47e27:	call   121e0 <error@plt>
   47e2c:	jmp    47d3a <wait_subprocess+0xaa>
   47e31:	mov    rdx,QWORD PTR [rip+0x2f618]        # 77450 <slaves>
   47e38:	movsxd rcx,DWORD PTR [rip+0x32965]        # 7a7a4 <slaves_count>
   47e3f:	lea    rsi,[rdx+rcx*8]
   47e43:	cmp    rdx,rsi
   47e46:	jae    47d7e <wait_subprocess+0xee>
   47e4c:	nop    DWORD PTR [rax+0x0]
   47e50:	mov    ecx,DWORD PTR [rdx]
   47e52:	test   ecx,ecx
   47e54:	je     47e68 <wait_subprocess+0x1d8>
   47e56:	mov    ecx,DWORD PTR [rdx+0x4]
   47e59:	cmp    ebx,ecx
   47e5b:	jne    47e68 <wait_subprocess+0x1d8>
   47e5d:	mov    DWORD PTR [rdx],0x0
   47e63:	nop    DWORD PTR [rax+rax*1+0x0]
   47e68:	add    rdx,0x8
   47e6c:	cmp    rsi,rdx
   47e6f:	ja     47e50 <wait_subprocess+0x1c0>
   47e71:	jmp    47d7e <wait_subprocess+0xee>
   47e76:	xor    eax,eax
   47e78:	jmp    47d3f <wait_subprocess+0xaf>
   47e7d:	call   11760 <__stack_chk_fail@plt>
   47e82:	cs nop WORD PTR [rax+rax*1+0x0]
   47e8c:	nop    DWORD PTR [rax+0x0]

0000000000047e90 <xnrealloc>:
   47e90:	endbr64 
   47e94:	push   r12
   47e96:	mov    r12,rdx
   47e99:	push   rbp
   47e9a:	mov    rbp,rsi
   47e9d:	push   rbx
   47e9e:	mov    rbx,rdi
   47ea1:	call   11b40 <reallocarray@plt>
   47ea6:	test   rax,rax
   47ea9:	je     47eb0 <xnrealloc+0x20>
   47eab:	pop    rbx
   47eac:	pop    rbp
   47ead:	pop    r12
   47eaf:	ret    
   47eb0:	test   rbx,rbx
   47eb3:	je     47ebf <xnrealloc+0x2f>
   47eb5:	test   rbp,rbp
   47eb8:	je     47eab <xnrealloc+0x1b>
   47eba:	test   r12,r12
   47ebd:	je     47eab <xnrealloc+0x1b>
   47ebf:	call   48450 <xalloc_die>
   47ec4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   47ecf:	nop

0000000000047ed0 <xmalloc>:
   47ed0:	endbr64 
   47ed4:	sub    rsp,0x8
   47ed8:	call   11af0 <malloc@plt>
   47edd:	test   rax,rax
   47ee0:	je     47ee7 <xmalloc+0x17>
   47ee2:	add    rsp,0x8
   47ee6:	ret    
   47ee7:	call   48450 <xalloc_die>
   47eec:	nop    DWORD PTR [rax+0x0]

0000000000047ef0 <ximalloc>:
   47ef0:	endbr64 
   47ef4:	sub    rsp,0x8
   47ef8:	call   11af0 <malloc@plt>
   47efd:	test   rax,rax
   47f00:	je     47f07 <ximalloc+0x17>
   47f02:	add    rsp,0x8
   47f06:	ret    
   47f07:	call   48450 <xalloc_die>
   47f0c:	nop    DWORD PTR [rax+0x0]

0000000000047f10 <xcharalloc>:
   47f10:	endbr64 
   47f14:	sub    rsp,0x8
   47f18:	call   11af0 <malloc@plt>
   47f1d:	test   rax,rax
   47f20:	je     47f27 <xcharalloc+0x17>
   47f22:	add    rsp,0x8
   47f26:	ret    
   47f27:	call   48450 <xalloc_die>
   47f2c:	nop    DWORD PTR [rax+0x0]

0000000000047f30 <xrealloc>:
   47f30:	endbr64 
   47f34:	push   rbp
   47f35:	mov    rbp,rdi
   47f38:	push   rbx
   47f39:	mov    rbx,rsi
   47f3c:	sub    rsp,0x8
   47f40:	call   12120 <realloc@plt>
   47f45:	test   rax,rax
   47f48:	je     47f51 <xrealloc+0x21>
   47f4a:	add    rsp,0x8
   47f4e:	pop    rbx
   47f4f:	pop    rbp
   47f50:	ret    
   47f51:	test   rbp,rbp
   47f54:	je     47f5b <xrealloc+0x2b>
   47f56:	test   rbx,rbx
   47f59:	je     47f4a <xrealloc+0x1a>
   47f5b:	call   48450 <xalloc_die>

0000000000047f60 <xirealloc>:
   47f60:	endbr64 
   47f64:	sub    rsp,0x8
   47f68:	xor    eax,eax
   47f6a:	test   rsi,rsi
   47f6d:	sete   al
   47f70:	or     rsi,rax
   47f73:	call   12120 <realloc@plt>
   47f78:	test   rax,rax
   47f7b:	je     47f82 <xirealloc+0x22>
   47f7d:	add    rsp,0x8
   47f81:	ret    
   47f82:	call   48450 <xalloc_die>
   47f87:	nop    WORD PTR [rax+rax*1+0x0]

0000000000047f90 <xreallocarray>:
   47f90:	endbr64 
   47f94:	push   r12
   47f96:	mov    r12,rdx
   47f99:	push   rbp
   47f9a:	mov    rbp,rsi
   47f9d:	push   rbx
   47f9e:	mov    rbx,rdi
   47fa1:	call   11b40 <reallocarray@plt>
   47fa6:	test   rax,rax
   47fa9:	je     47fb0 <xreallocarray+0x20>
   47fab:	pop    rbx
   47fac:	pop    rbp
   47fad:	pop    r12
   47faf:	ret    
   47fb0:	test   rbx,rbx
   47fb3:	je     47fbf <xreallocarray+0x2f>
   47fb5:	test   rbp,rbp
   47fb8:	je     47fab <xreallocarray+0x1b>
   47fba:	test   r12,r12
   47fbd:	je     47fab <xreallocarray+0x1b>
   47fbf:	call   48450 <xalloc_die>
   47fc4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   47fcf:	nop

0000000000047fd0 <xireallocarray>:
   47fd0:	endbr64 
   47fd4:	sub    rsp,0x8
   47fd8:	test   rsi,rsi
   47fdb:	je     47ff8 <xireallocarray+0x28>
   47fdd:	test   rdx,rdx
   47fe0:	je     47ff8 <xireallocarray+0x28>
   47fe2:	call   11b40 <reallocarray@plt>
   47fe7:	test   rax,rax
   47fea:	je     48004 <xireallocarray+0x34>
   47fec:	add    rsp,0x8
   47ff0:	ret    
   47ff1:	nop    DWORD PTR [rax+0x0]
   47ff8:	mov    esi,0x1
   47ffd:	mov    edx,0x1
   48002:	jmp    47fe2 <xireallocarray+0x12>
   48004:	call   48450 <xalloc_die>
   48009:	nop    DWORD PTR [rax+0x0]

0000000000048010 <xnmalloc>:
   48010:	endbr64 
   48014:	sub    rsp,0x8
   48018:	mov    rdx,rsi
   4801b:	mov    rsi,rdi
   4801e:	xor    edi,edi
   48020:	call   11b40 <reallocarray@plt>
   48025:	test   rax,rax
   48028:	je     48030 <xnmalloc+0x20>
   4802a:	add    rsp,0x8
   4802e:	ret    
   4802f:	nop
   48030:	call   48450 <xalloc_die>
   48035:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000048040 <xinmalloc>:
   48040:	endbr64 
   48044:	sub    rsp,0x8
   48048:	test   rdi,rdi
   4804b:	je     48070 <xinmalloc+0x30>
   4804d:	test   rsi,rsi
   48050:	je     48070 <xinmalloc+0x30>
   48052:	mov    rdx,rsi
   48055:	mov    rsi,rdi
   48058:	xor    edi,edi
   4805a:	call   11b40 <reallocarray@plt>
   4805f:	test   rax,rax
   48062:	je     4807c <xinmalloc+0x3c>
   48064:	add    rsp,0x8
   48068:	ret    
   48069:	nop    DWORD PTR [rax+0x0]
   48070:	mov    esi,0x1
   48075:	mov    edx,0x1
   4807a:	jmp    48058 <xinmalloc+0x18>
   4807c:	call   48450 <xalloc_die>
   48081:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4808c:	nop    DWORD PTR [rax+0x0]

0000000000048090 <x2realloc>:
   48090:	endbr64 
   48094:	push   rbp
   48095:	mov    rbp,rsi
   48098:	push   rbx
   48099:	sub    rsp,0x8
   4809d:	mov    rbx,QWORD PTR [rsi]
   480a0:	test   rdi,rdi
   480a3:	je     480e8 <x2realloc+0x58>
   480a5:	mov    rax,rbx
   480a8:	shr    rax,1
   480ab:	add    rax,0x1
   480af:	add    rbx,rax
   480b2:	jb     480dd <x2realloc+0x4d>
   480b4:	mov    edx,0x1
   480b9:	mov    rsi,rbx
   480bc:	call   11b40 <reallocarray@plt>
   480c1:	test   rax,rax
   480c4:	je     480d8 <x2realloc+0x48>
   480c6:	mov    QWORD PTR [rbp+0x0],rbx
   480ca:	add    rsp,0x8
   480ce:	pop    rbx
   480cf:	pop    rbp
   480d0:	ret    
   480d1:	nop    DWORD PTR [rax+0x0]
   480d8:	test   rbx,rbx
   480db:	je     480c6 <x2realloc+0x36>
   480dd:	call   48450 <xalloc_die>
   480e2:	nop    WORD PTR [rax+rax*1+0x0]
   480e8:	test   rbx,rbx
   480eb:	mov    eax,0x80
   480f0:	mov    edx,0x1
   480f5:	cmove  rbx,rax
   480f9:	mov    rsi,rbx
   480fc:	call   11b40 <reallocarray@plt>
   48101:	test   rax,rax
   48104:	je     480dd <x2realloc+0x4d>
   48106:	mov    QWORD PTR [rbp+0x0],rbx
   4810a:	add    rsp,0x8
   4810e:	pop    rbx
   4810f:	pop    rbp
   48110:	ret    
   48111:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4811c:	nop    DWORD PTR [rax+0x0]

0000000000048120 <x2nrealloc>:
   48120:	endbr64 
   48124:	push   r12
   48126:	mov    r12,rdx
   48129:	push   rbp
   4812a:	mov    rbp,rsi
   4812d:	push   rbx
   4812e:	mov    rbx,QWORD PTR [rsi]
   48131:	test   rdi,rdi
   48134:	je     48170 <x2nrealloc+0x50>
   48136:	mov    rax,rbx
   48139:	shr    rax,1
   4813c:	add    rax,0x1
   48140:	add    rbx,rax
   48143:	jb     4816a <x2nrealloc+0x4a>
   48145:	mov    rsi,rbx
   48148:	call   11b40 <reallocarray@plt>
   4814d:	test   rax,rax
   48150:	je     48160 <x2nrealloc+0x40>
   48152:	mov    QWORD PTR [rbp+0x0],rbx
   48156:	pop    rbx
   48157:	pop    rbp
   48158:	pop    r12
   4815a:	ret    
   4815b:	nop    DWORD PTR [rax+rax*1+0x0]
   48160:	test   rbx,rbx
   48163:	je     48152 <x2nrealloc+0x32>
   48165:	test   r12,r12
   48168:	je     48152 <x2nrealloc+0x32>
   4816a:	call   48450 <xalloc_die>
   4816f:	nop
   48170:	test   rbx,rbx
   48173:	jne    4818f <x2nrealloc+0x6f>
   48175:	xor    edx,edx
   48177:	mov    eax,0x80
   4817c:	div    r12
   4817f:	xor    edx,edx
   48181:	cmp    r12,0x80
   48188:	seta   dl
   4818b:	lea    rbx,[rax+rdx*1]
   4818f:	xor    edi,edi
   48191:	mov    rdx,r12
   48194:	mov    rsi,rbx
   48197:	call   11b40 <reallocarray@plt>
   4819c:	test   rax,rax
   4819f:	je     4816a <x2nrealloc+0x4a>
   481a1:	mov    QWORD PTR [rbp+0x0],rbx
   481a5:	pop    rbx
   481a6:	pop    rbp
   481a7:	pop    r12
   481a9:	ret    
   481aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000000481b0 <xpalloc>:
   481b0:	endbr64 
   481b4:	push   r13
   481b6:	mov    r13,rdi
   481b9:	mov    rdi,rdx
   481bc:	push   r12
   481be:	mov    r12,rsi
   481c1:	mov    rsi,rcx
   481c4:	push   rbp
   481c5:	push   rbx
   481c6:	sub    rsp,0x8
   481ca:	mov    rcx,QWORD PTR [r12]
   481ce:	mov    rbx,rcx
   481d1:	sar    rbx,1
   481d4:	add    rbx,rcx
   481d7:	jo     48295 <xpalloc+0xe5>
   481dd:	cmp    rbx,rsi
   481e0:	mov    rax,rsi
   481e3:	cmovle rax,rbx
   481e7:	test   rsi,rsi
   481ea:	cmovns rbx,rax
   481ee:	mov    rbp,rbx
   481f1:	imul   rbp,r8
   481f5:	jo     48289 <xpalloc+0xd9>
   481fb:	cmp    rbp,0x7f
   481ff:	jle    48258 <xpalloc+0xa8>
   48201:	test   r13,r13
   48204:	je     48270 <xpalloc+0xc0>
   48206:	cs nop WORD PTR [rax+rax*1+0x0]
   48210:	mov    rax,rbx
   48213:	sub    rax,rcx
   48216:	cmp    rax,rdi
   48219:	jge    48236 <xpalloc+0x86>
   4821b:	add    rcx,rdi
   4821e:	mov    rbx,rcx
   48221:	jo     48284 <xpalloc+0xd4>
   48223:	cmp    rcx,rsi
   48226:	jle    4822d <xpalloc+0x7d>
   48228:	test   rsi,rsi
   4822b:	jns    48284 <xpalloc+0xd4>
   4822d:	imul   rcx,r8
   48231:	mov    rbp,rcx
   48234:	jo     48284 <xpalloc+0xd4>
   48236:	mov    rsi,rbp
   48239:	mov    rdi,r13
   4823c:	call   12120 <realloc@plt>
   48241:	test   rax,rax
   48244:	je     4827a <xpalloc+0xca>
   48246:	mov    QWORD PTR [r12],rbx
   4824a:	add    rsp,0x8
   4824e:	pop    rbx
   4824f:	pop    rbp
   48250:	pop    r12
   48252:	pop    r13
   48254:	ret    
   48255:	nop    DWORD PTR [rax]
   48258:	mov    ebp,0x80
   4825d:	mov    rax,rbp
   48260:	cqo    
   48262:	idiv   r8
   48265:	mov    rbx,rax
   48268:	sub    rbp,rdx
   4826b:	test   r13,r13
   4826e:	jne    48210 <xpalloc+0x60>
   48270:	mov    QWORD PTR [r12],0x0
   48278:	jmp    48210 <xpalloc+0x60>
   4827a:	test   r13,r13
   4827d:	je     48284 <xpalloc+0xd4>
   4827f:	test   rbp,rbp
   48282:	je     48246 <xpalloc+0x96>
   48284:	call   48450 <xalloc_die>
   48289:	movabs rbp,0x7fffffffffffffff
   48293:	jmp    4825d <xpalloc+0xad>
   48295:	movabs rbx,0x7fffffffffffffff
   4829f:	jmp    481dd <xpalloc+0x2d>
   482a4:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   482af:	nop

00000000000482b0 <xzalloc>:
   482b0:	endbr64 
   482b4:	sub    rsp,0x8
   482b8:	mov    esi,0x1
   482bd:	call   10f50 <calloc@plt>
   482c2:	test   rax,rax
   482c5:	je     482cc <xzalloc+0x1c>
   482c7:	add    rsp,0x8
   482cb:	ret    
   482cc:	call   48450 <xalloc_die>
   482d1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   482dc:	nop    DWORD PTR [rax+0x0]

00000000000482e0 <xizalloc>:
   482e0:	endbr64 
   482e4:	sub    rsp,0x8
   482e8:	mov    esi,0x1
   482ed:	call   10f50 <calloc@plt>
   482f2:	test   rax,rax
   482f5:	je     482fc <xizalloc+0x1c>
   482f7:	add    rsp,0x8
   482fb:	ret    
   482fc:	call   48450 <xalloc_die>
   48301:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4830c:	nop    DWORD PTR [rax+0x0]

0000000000048310 <xcalloc>:
   48310:	endbr64 
   48314:	sub    rsp,0x8
   48318:	call   10f50 <calloc@plt>
   4831d:	test   rax,rax
   48320:	je     48327 <xcalloc+0x17>
   48322:	add    rsp,0x8
   48326:	ret    
   48327:	call   48450 <xalloc_die>
   4832c:	nop    DWORD PTR [rax+0x0]

0000000000048330 <xicalloc>:
   48330:	endbr64 
   48334:	sub    rsp,0x8
   48338:	call   10f50 <calloc@plt>
   4833d:	test   rax,rax
   48340:	je     48347 <xicalloc+0x17>
   48342:	add    rsp,0x8
   48346:	ret    
   48347:	call   48450 <xalloc_die>
   4834c:	nop    DWORD PTR [rax+0x0]

0000000000048350 <xmemdup>:
   48350:	endbr64 
   48354:	push   r12
   48356:	mov    r12,rsi
   48359:	push   rbp
   4835a:	mov    rbp,rdi
   4835d:	mov    rdi,rsi
   48360:	sub    rsp,0x8
   48364:	call   11af0 <malloc@plt>
   48369:	test   rax,rax
   4836c:	je     48383 <xmemdup+0x33>
   4836e:	add    rsp,0x8
   48372:	mov    rdx,r12
   48375:	mov    rsi,rbp
   48378:	mov    rdi,rax
   4837b:	pop    rbp
   4837c:	pop    r12
   4837e:	jmp    11220 <memcpy@plt>
   48383:	call   48450 <xalloc_die>
   48388:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000048390 <ximemdup>:
   48390:	endbr64 
   48394:	push   r12
   48396:	mov    r12,rsi
   48399:	push   rbp
   4839a:	mov    rbp,rdi
   4839d:	mov    rdi,rsi
   483a0:	sub    rsp,0x8
   483a4:	call   11af0 <malloc@plt>
   483a9:	test   rax,rax
   483ac:	je     483c3 <ximemdup+0x33>
   483ae:	add    rsp,0x8
   483b2:	mov    rdx,r12
   483b5:	mov    rsi,rbp
   483b8:	mov    rdi,rax
   483bb:	pop    rbp
   483bc:	pop    r12
   483be:	jmp    11220 <memcpy@plt>
   483c3:	call   48450 <xalloc_die>
   483c8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000483d0 <ximemdup0>:
   483d0:	endbr64 
   483d4:	push   r12
   483d6:	mov    r12,rsi
   483d9:	push   rbp
   483da:	mov    rbp,rdi
   483dd:	lea    rdi,[rsi+0x1]
   483e1:	sub    rsp,0x8
   483e5:	call   11af0 <malloc@plt>
   483ea:	test   rax,rax
   483ed:	je     48409 <ximemdup0+0x39>
   483ef:	mov    BYTE PTR [rax+r12*1],0x0
   483f4:	add    rsp,0x8
   483f8:	mov    rdx,r12
   483fb:	mov    rsi,rbp
   483fe:	mov    rdi,rax
   48401:	pop    rbp
   48402:	pop    r12
   48404:	jmp    11220 <memcpy@plt>
   48409:	call   48450 <xalloc_die>
   4840e:	xchg   ax,ax

0000000000048410 <xstrdup>:
   48410:	endbr64 
   48414:	push   r12
   48416:	push   rbp
   48417:	mov    rbp,rdi
   4841a:	sub    rsp,0x8
   4841e:	call   10ab0 <strlen@plt>
   48423:	lea    r12,[rax+0x1]
   48427:	mov    rdi,r12
   4842a:	call   11af0 <malloc@plt>
   4842f:	test   rax,rax
   48432:	je     48449 <xstrdup+0x39>
   48434:	add    rsp,0x8
   48438:	mov    rdx,r12
   4843b:	mov    rsi,rbp
   4843e:	mov    rdi,rax
   48441:	pop    rbp
   48442:	pop    r12
   48444:	jmp    11220 <memcpy@plt>
   48449:	call   48450 <xalloc_die>
   4844e:	xchg   ax,ax

0000000000048450 <xalloc_die>:
   48450:	endbr64 
   48454:	push   rbp
   48455:	lea    rax,[rip+0x2efac]        # 77408 <exit_failure>
   4845c:	mov    edx,0x5
   48461:	xor    edi,edi
   48463:	lea    rsi,[rip+0x1fa68]        # 67ed2 <nonspacing_table_data+0xc32>
   4846a:	mov    ebp,DWORD PTR [rax]
   4846c:	call   10f90 <dcgettext@plt>
   48471:	lea    rdx,[rip+0x42a0]        # 4c718 <maybe+0x478>
   48478:	xor    esi,esi
   4847a:	mov    rcx,rax
   4847d:	mov    edi,ebp
   4847f:	xor    eax,eax
   48481:	call   121e0 <error@plt>
   48486:	call   10cb0 <abort@plt>
   4848b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000048490 <xgethostname>:
   48490:	endbr64 
   48494:	push   r14
   48496:	xor    r14d,r14d
   48499:	push   r13
   4849b:	movabs r13,0xffffffefffbfeffe
   484a5:	push   r12
   484a7:	push   rbp
   484a8:	push   rbx
   484a9:	add    rsp,0xffffffffffffff80
   484ad:	mov    rax,QWORD PTR fs:0x28
   484b6:	mov    QWORD PTR [rsp+0x78],rax
   484bb:	xor    eax,eax
   484bd:	lea    rbp,[rsp+0x10]
   484c2:	mov    QWORD PTR [rsp+0x8],0x64
   484cb:	call   104b0 <__errno_location@plt>
   484d0:	mov    rbx,rax
   484d3:	mov    eax,0x64
   484d8:	jmp    4850f <xgethostname+0x7f>
   484da:	nop    WORD PTR [rax+rax*1+0x0]
   484e0:	bt     r13,rax
   484e4:	jb     48553 <xgethostname+0xc3>
   484e6:	lea    rsi,[rsp+0x8]
   484eb:	mov    r8d,0x1
   484f1:	mov    rcx,0xffffffffffffffff
   484f8:	xor    edi,edi
   484fa:	mov    edx,0x1
   484ff:	call   481b0 <xpalloc>
   48504:	mov    rbp,rax
   48507:	mov    rax,QWORD PTR [rsp+0x8]
   4850c:	mov    r14,rbp
   4850f:	mov    BYTE PTR [rbp+rax*1-0x1],0x0
   48514:	lea    r12,[rax-0x1]
   48518:	mov    rdi,rbp
   4851b:	mov    DWORD PTR [rbx],0x0
   48521:	mov    rsi,r12
   48524:	call   11e40 <gethostname@plt>
   48529:	test   eax,eax
   4852b:	jne    48544 <xgethostname+0xb4>
   4852d:	mov    rdi,rbp
   48530:	call   10ab0 <strlen@plt>
   48535:	add    rax,0x1
   48539:	cmp    r12,rax
   4853c:	jg     48580 <xgethostname+0xf0>
   4853e:	mov    DWORD PTR [rbx],0x0
   48544:	mov    rdi,r14
   48547:	call   10430 <free@plt>
   4854c:	mov    eax,DWORD PTR [rbx]
   4854e:	cmp    eax,0x24
   48551:	jbe    484e0 <xgethostname+0x50>
   48553:	xor    r14d,r14d
   48556:	mov    rax,QWORD PTR [rsp+0x78]
   4855b:	sub    rax,QWORD PTR fs:0x28
   48564:	jne    48595 <xgethostname+0x105>
   48566:	sub    rsp,0xffffffffffffff80
   4856a:	mov    rax,r14
   4856d:	pop    rbx
   4856e:	pop    rbp
   4856f:	pop    r12
   48571:	pop    r13
   48573:	pop    r14
   48575:	ret    
   48576:	cs nop WORD PTR [rax+rax*1+0x0]
   48580:	test   r14,r14
   48583:	jne    48556 <xgethostname+0xc6>
   48585:	mov    rsi,rax
   48588:	mov    rdi,rbp
   4858b:	call   48390 <ximemdup>
   48590:	mov    r14,rax
   48593:	jmp    48556 <xgethostname+0xc6>
   48595:	call   11760 <__stack_chk_fail@plt>
   4859a:	nop    WORD PTR [rax+rax*1+0x0]

00000000000485a0 <xsum>:
   485a0:	endbr64 
   485a4:	add    rdi,rsi
   485a7:	mov    rax,0xffffffffffffffff
   485ae:	cmovae rax,rdi
   485b2:	ret    
   485b3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   485be:	xchg   ax,ax

00000000000485c0 <xsum3>:
   485c0:	endbr64 
   485c4:	add    rdi,rsi
   485c7:	mov    rax,0xffffffffffffffff
   485ce:	cmovb  rdi,rax
   485d2:	add    rdx,rdi
   485d5:	cmovae rax,rdx
   485d9:	ret    
   485da:	nop    WORD PTR [rax+rax*1+0x0]

00000000000485e0 <xsum4>:
   485e0:	endbr64 
   485e4:	mov    rax,0xffffffffffffffff
   485eb:	add    rdi,rsi
   485ee:	cmovb  rdi,rax
   485f2:	add    rdx,rdi
   485f5:	cmovb  rdx,rax
   485f9:	add    rcx,rdx
   485fc:	cmovae rax,rcx
   48600:	ret    
   48601:	data16 cs nop WORD PTR [rax+rax*1+0x0]
   4860c:	nop    DWORD PTR [rax+0x0]

0000000000048610 <xmax>:
   48610:	endbr64 
   48614:	cmp    rdi,rsi
   48617:	mov    rax,rsi
   4861a:	cmovae rax,rdi
   4861e:	ret    
   4861f:	nop

0000000000048620 <asnprintf>:
   48620:	endbr64 
   48624:	sub    rsp,0xd8
   4862b:	mov    QWORD PTR [rsp+0x38],rcx
   48630:	mov    QWORD PTR [rsp+0x40],r8
   48635:	mov    QWORD PTR [rsp+0x48],r9
   4863a:	test   al,al
   4863c:	je     48675 <asnprintf+0x55>
   4863e:	movaps XMMWORD PTR [rsp+0x50],xmm0
   48643:	movaps XMMWORD PTR [rsp+0x60],xmm1
   48648:	movaps XMMWORD PTR [rsp+0x70],xmm2
   4864d:	movaps XMMWORD PTR [rsp+0x80],xmm3
   48655:	movaps XMMWORD PTR [rsp+0x90],xmm4
   4865d:	movaps XMMWORD PTR [rsp+0xa0],xmm5
   48665:	movaps XMMWORD PTR [rsp+0xb0],xmm6
   4866d:	movaps XMMWORD PTR [rsp+0xc0],xmm7
   48675:	mov    rax,QWORD PTR fs:0x28
   4867e:	mov    QWORD PTR [rsp+0x18],rax
   48683:	xor    eax,eax
   48685:	lea    rax,[rsp+0xe0]
   4868d:	mov    rcx,rsp
   48690:	mov    DWORD PTR [rsp],0x18
   48697:	mov    QWORD PTR [rsp+0x8],rax
   4869c:	lea    rax,[rsp+0x20]
   486a1:	mov    DWORD PTR [rsp+0x4],0x30
   486a9:	mov    QWORD PTR [rsp+0x10],rax
   486ae:	call   49a50 <vasnprintf>
   486b3:	mov    rdx,QWORD PTR [rsp+0x18]
   486b8:	sub    rdx,QWORD PTR fs:0x28
   486c1:	jne    486cb <asnprintf+0xab>
   486c3:	add    rsp,0xd8
   486ca:	ret    
   486cb:	call   11760 <__stack_chk_fail@plt>

00000000000486d0 <rpl_fopen>:
   486d0:	endbr64 
   486d4:	push   r15
   486d6:	mov    r15,rdi
   486d9:	push   r14
   486db:	mov    r14,rsi
   486de:	push   r13
   486e0:	push   r12
   486e2:	push   rbp
   486e3:	push   rbx
   486e4:	sub    rsp,0x88
   486eb:	mov    rax,QWORD PTR fs:0x28
   486f4:	mov    QWORD PTR [rsp+0x78],rax
   486f9:	xor    eax,eax
   486fb:	movzx  eax,BYTE PTR [rsi]
   486fe:	test   al,al
   48700:	je     488f8 <rpl_fopen+0x228>
   48706:	lea    r12,[rsp+0x20]
   4870b:	xor    r8d,r8d
   4870e:	xor    ebp,ebp
   48710:	xor    r13d,r13d
   48713:	mov    rbx,r12
   48716:	lea    rcx,[rsp+0x70]
   4871b:	lea    rdx,[rip+0x1f7c2]        # 67ee4 <nonspacing_table_data+0xc44>
   48722:	cmp    al,0x2b
   48724:	je     487fc <rpl_fopen+0x12c>
   4872a:	nop    WORD PTR [rax+rax*1+0x0]
   48730:	sub    eax,0x61
   48733:	cmp    al,0x17
   48735:	ja     48748 <rpl_fopen+0x78>
   48737:	movzx  eax,al
   4873a:	movsxd rax,DWORD PTR [rdx+rax*4]
   4873e:	add    rax,rdx
   48741:	notrack jmp rax
   48744:	nop    DWORD PTR [rax+0x0]
   48748:	mov    rdi,rsi
   4874b:	mov    BYTE PTR [rsp+0x1f],r8b
   48750:	mov    QWORD PTR [rsp+0x10],rsi
   48755:	call   10ab0 <strlen@plt>
   4875a:	lea    rdx,[rsp+0x70]
   4875f:	mov    rsi,QWORD PTR [rsp+0x10]
   48764:	mov    rdi,rbx
   48767:	sub    rdx,rbx
   4876a:	mov    ecx,0x51
   4876f:	cmp    rdx,rax
   48772:	cmova  rdx,rax
   48776:	mov    QWORD PTR [rsp+0x8],rdx
   4877b:	call   122a0 <__memcpy_chk@plt>
   48780:	mov    rdx,QWORD PTR [rsp+0x8]
   48785:	movzx  r8d,BYTE PTR [rsp+0x1f]
   4878b:	add    rbx,rdx
   4878e:	mov    BYTE PTR [rbx],0x0
   48791:	test   r8b,r8b
   48794:	jne    488a0 <rpl_fopen+0x1d0>
   4879a:	mov    rsi,r14
   4879d:	mov    rdi,r15
   487a0:	call   118c0 <fopen@plt>
   487a5:	mov    r13,rax
   487a8:	mov    rax,QWORD PTR [rsp+0x78]
   487ad:	sub    rax,QWORD PTR fs:0x28
   487b6:	jne    48902 <rpl_fopen+0x232>
   487bc:	add    rsp,0x88
   487c3:	mov    rax,r13
   487c6:	pop    rbx
   487c7:	pop    rbp
   487c8:	pop    r12
   487ca:	pop    r13
   487cc:	pop    r14
   487ce:	pop    r15
   487d0:	ret    
   487d1:	nop    DWORD PTR [rax+0x0]
   487d8:	or     bpl,0x80
   487dc:	mov    r8d,0x1
   487e2:	nop    WORD PTR [rax+rax*1+0x0]
   487e8:	movzx  eax,BYTE PTR [rsi+0x1]
   487ec:	add    rsi,0x1
   487f0:	test   al,al
   487f2:	je     4878e <rpl_fopen+0xbe>
   487f4:	cmp    al,0x2b
   487f6:	jne    48730 <rpl_fopen+0x60>
   487fc:	mov    r13d,0x2
   48802:	cmp    rbx,rcx
   48805:	jae    487e8 <rpl_fopen+0x118>
   48807:	mov    BYTE PTR [rbx],0x2b
   4880a:	add    rbx,0x1
   4880e:	jmp    487e8 <rpl_fopen+0x118>
   48810:	or     ebp,0x240
   48816:	mov    r13d,0x1
   4881c:	cmp    rbx,rcx
   4881f:	jae    487e8 <rpl_fopen+0x118>
   48821:	mov    BYTE PTR [rbx],0x77
   48824:	add    rbx,0x1
   48828:	jmp    487e8 <rpl_fopen+0x118>
   4882a:	nop    WORD PTR [rax+rax*1+0x0]
   48830:	xor    r13d,r13d
   48833:	cmp    rbx,rcx
   48836:	jae    487e8 <rpl_fopen+0x118>
   48838:	mov    BYTE PTR [rbx],0x72
   4883b:	add    rbx,0x1
   4883f:	jmp    487e8 <rpl_fopen+0x118>
   48841:	nop    DWORD PTR [rax+0x0]
   48848:	or     ebp,0x80000
   4884e:	mov    r8d,0x1
   48854:	jmp    487e8 <rpl_fopen+0x118>
   48856:	cs nop WORD PTR [rax+rax*1+0x0]
   48860:	cmp    rbx,rcx
   48863:	jae    487e8 <rpl_fopen+0x118>
   48865:	mov    BYTE PTR [rbx],0x62
   48868:	add    rbx,0x1
   4886c:	jmp    487e8 <rpl_fopen+0x118>
   48871:	nop    DWORD PTR [rax+0x0]
   48878:	or     ebp,0x440
   4887e:	mov    r13d,0x1
   48884:	cmp    rbx,rcx
   48887:	jae    487e8 <rpl_fopen+0x118>
   4888d:	mov    BYTE PTR [rbx],0x61
   48890:	add    rbx,0x1
   48894:	jmp    487e8 <rpl_fopen+0x118>
   48899:	nop    DWORD PTR [rax+0x0]
   488a0:	mov    esi,ebp
   488a2:	mov    edx,0x1b6
   488a7:	mov    rdi,r15
   488aa:	xor    eax,eax
   488ac:	or     esi,r13d
   488af:	xor    r13d,r13d
   488b2:	call   11070 <open@plt>
   488b7:	mov    ebp,eax
   488b9:	test   eax,eax
   488bb:	js     487a8 <rpl_fopen+0xd8>
   488c1:	mov    rsi,r12
   488c4:	mov    edi,ebp
   488c6:	call   11660 <fdopen@plt>
   488cb:	mov    r13,rax
   488ce:	test   rax,rax
   488d1:	jne    487a8 <rpl_fopen+0xd8>
   488d7:	call   104b0 <__errno_location@plt>
   488dc:	mov    edi,ebp
   488de:	mov    r12d,DWORD PTR [rax]
   488e1:	mov    rbx,rax
   488e4:	call   12740 <close@plt>
   488e9:	mov    DWORD PTR [rbx],r12d
   488ec:	jmp    487a8 <rpl_fopen+0xd8>
   488f1:	nop    DWORD PTR [rax+0x0]
   488f8:	mov    BYTE PTR [rsp+0x20],0x0
   488fd:	jmp    4879a <rpl_fopen+0xca>
   48902:	call   11760 <__stack_chk_fail@plt>
   48907:	nop    WORD PTR [rax+rax*1+0x0]

0000000000048910 <printf_fetchargs>:
   48910:	endbr64 
   48914:	mov    r8,QWORD PTR [rsi]
   48917:	mov    rax,QWORD PTR [rsi+0x8]
   4891b:	mov    rcx,rdi
   4891e:	test   r8,r8
   48921:	je     48983 <printf_fetchargs+0x73>
   48923:	xor    esi,esi
   48925:	lea    rdi,[rip+0x1f624]        # 67f50 <nonspacing_table_data+0xcb0>
   4892c:	lea    r10,[rip+0x1f6dd]        # 68010 <wide_null_string.0>
   48933:	lea    r9,[rip+0x1f60a]        # 67f44 <nonspacing_table_data+0xca4>
   4893a:	nop    WORD PTR [rax+rax*1+0x0]
   48940:	cmp    DWORD PTR [rax],0x2e
   48943:	ja     48b21 <printf_fetchargs+0x211>
   48949:	mov    edx,DWORD PTR [rax]
   4894b:	movsxd rdx,DWORD PTR [rdi+rdx*4]
   4894f:	add    rdx,rdi
   48952:	notrack jmp rdx
   48955:	nop    DWORD PTR [rax]
   48958:	mov    edx,DWORD PTR [rcx]
   4895a:	cmp    edx,0x2f
   4895d:	ja     489f0 <printf_fetchargs+0xe0>
   48963:	mov    r11d,edx
   48966:	add    edx,0x8
   48969:	add    r11,QWORD PTR [rcx+0x10]
   4896d:	mov    DWORD PTR [rcx],edx
   4896f:	mov    rdx,QWORD PTR [r11]
   48972:	mov    QWORD PTR [rax+0x10],rdx
   48976:	add    rsi,0x1
   4897a:	add    rax,0x20
   4897e:	cmp    rsi,r8
   48981:	jne    48940 <printf_fetchargs+0x30>
   48983:	xor    eax,eax
   48985:	ret    
   48986:	cs nop WORD PTR [rax+rax*1+0x0]
   48990:	mov    edx,DWORD PTR [rcx]
   48992:	cmp    edx,0x2f
   48995:	ja     48a08 <printf_fetchargs+0xf8>
   48997:	mov    r11d,edx
   4899a:	add    edx,0x8
   4899d:	add    r11,QWORD PTR [rcx+0x10]
   489a1:	mov    DWORD PTR [rcx],edx
   489a3:	mov    edx,DWORD PTR [r11]
   489a6:	mov    BYTE PTR [rax+0x10],dl
   489a9:	jmp    48976 <printf_fetchargs+0x66>
   489ab:	nop    DWORD PTR [rax+rax*1+0x0]
   489b0:	mov    edx,DWORD PTR [rcx]
   489b2:	cmp    edx,0x2f
   489b5:	ja     48a20 <printf_fetchargs+0x110>
   489b7:	mov    r11d,edx
   489ba:	add    edx,0x8
   489bd:	add    r11,QWORD PTR [rcx+0x10]
   489c1:	mov    DWORD PTR [rcx],edx
   489c3:	mov    edx,DWORD PTR [r11]
   489c6:	mov    DWORD PTR [rax+0x10],edx
   489c9:	jmp    48976 <printf_fetchargs+0x66>
   489cb:	nop    DWORD PTR [rax+rax*1+0x0]
   489d0:	mov    edx,DWORD PTR [rcx]
   489d2:	cmp    edx,0x2f
   489d5:	ja     48a30 <printf_fetchargs+0x120>
   489d7:	mov    r11d,edx
   489da:	add    edx,0x8
   489dd:	add    r11,QWORD PTR [rcx+0x10]
   489e1:	mov    DWORD PTR [rcx],edx
   489e3:	mov    edx,DWORD PTR [r11]
   489e6:	mov    WORD PTR [rax+0x10],dx
   489ea:	jmp    48976 <printf_fetchargs+0x66>
   489ec:	nop    DWORD PTR [rax+0x0]
   489f0:	mov    r11,QWORD PTR [rcx+0x8]
   489f4:	lea    rdx,[r11+0x8]
   489f8:	mov    QWORD PTR [rcx+0x8],rdx
   489fc:	jmp    4896f <printf_fetchargs+0x5f>
   48a01:	nop    DWORD PTR [rax+0x0]
   48a08:	mov    r11,QWORD PTR [rcx+0x8]
   48a0c:	lea    rdx,[r11+0x8]
   48a10:	mov    QWORD PTR [rcx+0x8],rdx
   48a14:	jmp    489a3 <printf_fetchargs+0x93>
   48a16:	cs nop WORD PTR [rax+rax*1+0x0]
   48a20:	mov    r11,QWORD PTR [rcx+0x8]
   48a24:	lea    rdx,[r11+0x8]
   48a28:	mov    QWORD PTR [rcx+0x8],rdx
   48a2c:	jmp    489c3 <printf_fetchargs+0xb3>
   48a2e:	xchg   ax,ax
   48a30:	mov    r11,QWORD PTR [rcx+0x8]
   48a34:	lea    rdx,[r11+0x8]
   48a38:	mov    QWORD PTR [rcx+0x8],rdx
   48a3c:	jmp    489e3 <printf_fetchargs+0xd3>
   48a3e:	xchg   ax,ax
   48a40:	mov    edx,DWORD PTR [rcx+0x4]
   48a43:	cmp    edx,0xaf
   48a49:	ja     48b10 <printf_fetchargs+0x200>
   48a4f:	mov    r11d,edx
   48a52:	add    edx,0x10
   48a55:	add    r11,QWORD PTR [rcx+0x10]
   48a59:	mov    DWORD PTR [rcx+0x4],edx
   48a5c:	movsd  xmm0,QWORD PTR [r11]
   48a61:	movsd  QWORD PTR [rax+0x10],xmm0
   48a66:	jmp    48976 <printf_fetchargs+0x66>
   48a6b:	nop    DWORD PTR [rax+rax*1+0x0]
   48a70:	mov    rdx,QWORD PTR [rcx+0x8]
   48a74:	add    rdx,0xf
   48a78:	and    rdx,0xfffffffffffffff0
   48a7c:	lea    r11,[rdx+0x10]
   48a80:	mov    QWORD PTR [rcx+0x8],r11
   48a84:	fld    TBYTE PTR [rdx]
   48a86:	fstp   TBYTE PTR [rax+0x10]
   48a89:	jmp    48976 <printf_fetchargs+0x66>
   48a8e:	xchg   ax,ax
   48a90:	mov    edx,DWORD PTR [rcx]
   48a92:	cmp    edx,0x2f
   48a95:	ja     48b00 <printf_fetchargs+0x1f0>
   48a97:	mov    r11d,edx
   48a9a:	add    edx,0x8
   48a9d:	add    r11,QWORD PTR [rcx+0x10]
   48aa1:	mov    DWORD PTR [rcx],edx
   48aa3:	mov    rdx,QWORD PTR [r11]
   48aa6:	test   rdx,rdx
   48aa9:	cmove  rdx,r9
   48aad:	mov    QWORD PTR [rax+0x10],rdx
   48ab1:	jmp    48976 <printf_fetchargs+0x66>
   48ab6:	cs nop WORD PTR [rax+rax*1+0x0]
   48ac0:	mov    edx,DWORD PTR [rcx]
   48ac2:	cmp    edx,0x2f
   48ac5:	ja     48af0 <printf_fetchargs+0x1e0>
   48ac7:	mov    r11d,edx
   48aca:	add    edx,0x8
   48acd:	add    r11,QWORD PTR [rcx+0x10]
   48ad1:	mov    DWORD PTR [rcx],edx
   48ad3:	mov    rdx,QWORD PTR [r11]
   48ad6:	test   rdx,rdx
   48ad9:	cmove  rdx,r10
   48add:	mov    QWORD PTR [rax+0x10],rdx
   48ae1:	jmp    48976 <printf_fetchargs+0x66>
   48ae6:	cs nop WORD PTR [rax+rax*1+0x0]
   48af0:	mov    r11,QWORD PTR [rcx+0x8]
   48af4:	lea    rdx,[r11+0x8]
   48af8:	mov    QWORD PTR [rcx+0x8],rdx
   48afc:	jmp    48ad3 <printf_fetchargs+0x1c3>
   48afe:	xchg   ax,ax
   48b00:	mov    r11,QWORD PTR [rcx+0x8]
   48b04:	lea    rdx,[r11+0x8]
   48b08:	mov    QWORD PTR [rcx+0x8],rdx
   48b0c:	jmp    48aa3 <printf_fetchargs+0x193>
   48b0e:	xchg   ax,ax
   48b10:	mov    r11,QWORD PTR [rcx+0x8]
   48b14:	lea    rdx,[r11+0x8]
   48b18:	mov    QWORD PTR [rcx+0x8],rdx
   48b1c:	jmp    48a5c <printf_fetchargs+0x14c>
   48b21:	or     eax,0xffffffff
   48b24:	ret    
   48b25:	cs nop WORD PTR [rax+rax*1+0x0]
   48b2f:	nop

0000000000048b30 <printf_parse>:
   48b30:	endbr64 
   48b34:	push   r15
   48b36:	lea    r9,[rsi+0x20]
   48b3a:	lea    rax,[rdx+0x10]
   48b3e:	mov    r15,rdx
   48b41:	push   r14
   48b43:	mov    ecx,0x7
   48b48:	mov    r14,rsi
   48b4b:	mov    r10d,0x7
   48b51:	push   r13
   48b53:	xor    r13d,r13d
   48b56:	push   r12
   48b58:	push   rbp
   48b59:	push   rbx
   48b5a:	mov    rbx,rdi
   48b5d:	mov    rdi,r9
   48b60:	sub    rsp,0x58
   48b64:	mov    QWORD PTR [rsi],0x0
   48b6b:	mov    QWORD PTR [rsi+0x8],r9
   48b6f:	mov    QWORD PTR [rsp+0x10],rax
   48b74:	mov    QWORD PTR [rdx],0x0
   48b7b:	mov    QWORD PTR [rdx+0x8],rax
   48b7f:	mov    QWORD PTR [rsp+0x18],0x0
   48b88:	mov    QWORD PTR [rsp+0x8],0x0
   48b91:	mov    QWORD PTR [rsp+0x20],0x0
   48b9a:	jmp    48bac <printf_parse+0x7c>
   48b9c:	nop    DWORD PTR [rax+0x0]
   48ba0:	lea    rax,[rbx+0x1]
   48ba4:	cmp    dl,0x25
   48ba7:	je     48be8 <printf_parse+0xb8>
   48ba9:	mov    rbx,rax
   48bac:	movzx  edx,BYTE PTR [rbx]
   48baf:	test   dl,dl
   48bb1:	jne    48ba0 <printf_parse+0x70>
   48bb3:	lea    rax,[r13+r13*4+0x0]
   48bb8:	lea    rax,[r13+rax*2+0x0]
   48bbd:	mov    QWORD PTR [rdi+rax*8],rbx
   48bc1:	mov    rax,QWORD PTR [rsp+0x8]
   48bc6:	mov    QWORD PTR [r14+0x10],rax
   48bca:	mov    rax,QWORD PTR [rsp+0x18]
   48bcf:	mov    QWORD PTR [r14+0x18],rax
   48bd3:	xor    eax,eax
   48bd5:	add    rsp,0x58
   48bd9:	pop    rbx
   48bda:	pop    rbp
   48bdb:	pop    r12
   48bdd:	pop    r13
   48bdf:	pop    r14
   48be1:	pop    r15
   48be3:	ret    
   48be4:	nop    DWORD PTR [rax+0x0]
   48be8:	lea    rdx,[r13+r13*4+0x0]
   48bed:	lea    rdx,[r13+rdx*2+0x0]
   48bf2:	mov    r13,0xffffffffffffffff
   48bf9:	lea    r12,[rdi+rdx*8]
   48bfd:	mov    QWORD PTR [r12],rbx
   48c01:	mov    DWORD PTR [r12+0x10],0x0
   48c0a:	mov    QWORD PTR [r12+0x18],0x0
   48c13:	mov    QWORD PTR [r12+0x20],0x0
   48c1c:	mov    QWORD PTR [r12+0x28],0xffffffffffffffff
   48c25:	mov    QWORD PTR [r12+0x30],0x0
   48c2e:	mov    QWORD PTR [r12+0x38],0x0
   48c37:	mov    QWORD PTR [r12+0x40],0xffffffffffffffff
   48c40:	mov    QWORD PTR [r12+0x50],0xffffffffffffffff
   48c49:	movzx  ebp,BYTE PTR [rbx+0x1]
   48c4d:	lea    edx,[rbp-0x30]
   48c50:	cmp    dl,0x9
   48c53:	jbe    491d0 <printf_parse+0x6a0>
   48c59:	add    rax,0x1
   48c5d:	lea    rsi,[rip+0x1f3c8]        # 6802c <wide_null_string.0+0x1c>
   48c64:	lea    rbx,[rax-0x1]
   48c68:	cmp    bpl,0x27
   48c6c:	je     48cfa <printf_parse+0x1ca>
   48c72:	nop    WORD PTR [rax+rax*1+0x0]
   48c78:	lea    edx,[rbp-0x20]
   48c7b:	cmp    dl,0x29
   48c7e:	ja     48c90 <printf_parse+0x160>
   48c80:	movzx  edx,dl
   48c83:	movsxd rdx,DWORD PTR [rsi+rdx*4]
   48c87:	add    rdx,rsi
   48c8a:	notrack jmp rdx
   48c8d:	nop    DWORD PTR [rax]
   48c90:	cmp    bpl,0x2a
   48c94:	je     48d40 <printf_parse+0x210>
   48c9a:	lea    eax,[rbp-0x30]
   48c9d:	cmp    al,0x9
   48c9f:	jbe    494d7 <printf_parse+0x9a7>
   48ca5:	cmp    bpl,0x2e
   48ca9:	je     48e78 <printf_parse+0x348>
   48caf:	cmp    bpl,0x68
   48cb3:	je     491a0 <printf_parse+0x670>
   48cb9:	lea    eax,[rbp-0x4c]
   48cbc:	cmp    al,0x2e
   48cbe:	ja     48f30 <printf_parse+0x400>
   48cc4:	lea    rdx,[rip+0x1f409]        # 680d4 <wide_null_string.0+0xc4>
   48ccb:	movzx  eax,al
   48cce:	movsxd rax,DWORD PTR [rdx+rax*4]
   48cd2:	add    rax,rdx
   48cd5:	notrack jmp rax
   48cd8:	mov    edx,DWORD PTR [r12+0x10]
   48cdd:	or     edx,0x40
   48ce0:	mov    DWORD PTR [r12+0x10],edx
   48ce5:	movzx  ebp,BYTE PTR [rax]
   48ce8:	add    rax,0x1
   48cec:	lea    rbx,[rax-0x1]
   48cf0:	cmp    bpl,0x27
   48cf4:	jne    48c78 <printf_parse+0x148>
   48cfa:	mov    edx,DWORD PTR [r12+0x10]
   48cff:	or     edx,0x1
   48d02:	jmp    48ce0 <printf_parse+0x1b0>
   48d04:	mov    edx,DWORD PTR [r12+0x10]
   48d09:	or     edx,0x20
   48d0c:	jmp    48ce0 <printf_parse+0x1b0>
   48d0e:	mov    edx,DWORD PTR [r12+0x10]
   48d13:	or     edx,0x2
   48d16:	jmp    48ce0 <printf_parse+0x1b0>
   48d18:	mov    edx,DWORD PTR [r12+0x10]
   48d1d:	or     edx,0x4
   48d20:	jmp    48ce0 <printf_parse+0x1b0>
   48d22:	mov    edx,DWORD PTR [r12+0x10]
   48d27:	or     edx,0x10
   48d2a:	jmp    48ce0 <printf_parse+0x1b0>
   48d2c:	mov    edx,DWORD PTR [r12+0x10]
   48d31:	or     edx,0x8
   48d34:	jmp    48ce0 <printf_parse+0x1b0>
   48d36:	cs nop WORD PTR [rax+rax*1+0x0]
   48d40:	mov    rdi,QWORD PTR [rsp+0x8]
   48d45:	lea    r8,[rbx+0x1]
   48d49:	mov    eax,0x1
   48d4e:	mov    QWORD PTR [r12+0x18],rbx
   48d53:	mov    QWORD PTR [r12+0x20],r8
   48d58:	movzx  edx,BYTE PTR [rbx+0x1]
   48d5c:	test   rdi,rdi
   48d5f:	cmovne rax,rdi
   48d63:	mov    QWORD PTR [rsp+0x8],rax
   48d68:	lea    eax,[rdx-0x30]
   48d6b:	cmp    al,0x9
   48d6d:	jbe    49328 <printf_parse+0x7f8>
   48d73:	mov    rdi,QWORD PTR [rsp+0x20]
   48d78:	mov    QWORD PTR [r12+0x28],rdi
   48d7d:	lea    rax,[rdi+0x1]
   48d81:	cmp    rdi,0xffffffffffffffff
   48d85:	je     49040 <printf_parse+0x510>
   48d8b:	mov    rbp,QWORD PTR [rsp+0x20]
   48d90:	mov    QWORD PTR [rsp+0x20],rax
   48d95:	mov    rbx,r8
   48d98:	mov    rdx,QWORD PTR [r15+0x8]
   48d9c:	mov    r8,rdx
   48d9f:	cmp    rcx,rbp
   48da2:	ja     48e16 <printf_parse+0x2e6>
   48da4:	add    rcx,rcx
   48da7:	lea    rax,[rbp+0x1]
   48dab:	cmp    rcx,rbp
   48dae:	cmovbe rcx,rax
   48db2:	mov    rax,rcx
   48db5:	shr    rax,0x3b
   48db9:	jne    49779 <printf_parse+0xc49>
   48dbf:	mov    rsi,rcx
   48dc2:	shl    rsi,0x5
   48dc6:	cmp    QWORD PTR [rsp+0x10],rdx
   48dcb:	je     49691 <printf_parse+0xb61>
   48dd1:	mov    rdi,rdx
   48dd4:	mov    QWORD PTR [rsp+0x38],rcx
   48dd9:	mov    QWORD PTR [rsp+0x30],r10
   48dde:	mov    QWORD PTR [rsp+0x28],r9
   48de3:	call   12120 <realloc@plt>
   48de8:	mov    rdx,QWORD PTR [r15+0x8]
   48dec:	mov    r9,QWORD PTR [rsp+0x28]
   48df1:	mov    r10,QWORD PTR [rsp+0x30]
   48df6:	mov    rcx,QWORD PTR [rsp+0x38]
   48dfb:	mov    r8,rax
   48dfe:	test   r8,r8
   48e01:	je     49779 <printf_parse+0xc49>
   48e07:	cmp    QWORD PTR [rsp+0x10],rdx
   48e0c:	je     49837 <printf_parse+0xd07>
   48e12:	mov    QWORD PTR [r15+0x8],r8
   48e16:	mov    rdx,QWORD PTR [r15]
   48e19:	mov    rax,rdx
   48e1c:	shl    rax,0x5
   48e20:	add    rax,r8
   48e23:	cmp    rdx,rbp
   48e26:	ja     48e4f <printf_parse+0x31f>
   48e28:	nop    DWORD PTR [rax+rax*1+0x0]
   48e30:	add    rdx,0x1
   48e34:	mov    DWORD PTR [rax],0x0
   48e3a:	mov    rsi,rax
   48e3d:	add    rax,0x20
   48e41:	cmp    rdx,rbp
   48e44:	jbe    48e30 <printf_parse+0x300>
   48e46:	mov    QWORD PTR [r15],rdx
   48e49:	mov    DWORD PTR [rsi],0x0
   48e4f:	shl    rbp,0x5
   48e53:	add    rbp,r8
   48e56:	mov    eax,DWORD PTR [rbp+0x0]
   48e59:	test   eax,eax
   48e5b:	jne    49526 <printf_parse+0x9f6>
   48e61:	mov    DWORD PTR [rbp+0x0],0x5
   48e68:	movzx  ebp,BYTE PTR [rbx]
   48e6b:	cmp    bpl,0x2e
   48e6f:	jne    48caf <printf_parse+0x17f>
   48e75:	nop    DWORD PTR [rax]
   48e78:	cmp    BYTE PTR [rbx+0x1],0x2a
   48e7c:	jne    49263 <printf_parse+0x733>
   48e82:	mov    rdi,QWORD PTR [rsp+0x18]
   48e87:	mov    eax,0x2
   48e8c:	lea    r11,[rbx+0x2]
   48e90:	mov    QWORD PTR [r12+0x30],rbx
   48e95:	mov    QWORD PTR [r12+0x38],r11
   48e9a:	movzx  esi,BYTE PTR [rbx+0x2]
   48e9e:	cmp    rdi,rax
   48ea1:	cmovae rax,rdi
   48ea5:	mov    QWORD PTR [rsp+0x18],rax
   48eaa:	lea    eax,[rsi-0x30]
   48ead:	cmp    al,0x9
   48eaf:	jbe    49789 <printf_parse+0xc59>
   48eb5:	mov    rbx,QWORD PTR [r12+0x40]
   48eba:	cmp    rbx,0xffffffffffffffff
   48ebe:	je     4974e <printf_parse+0xc1e>
   48ec4:	mov    r8,QWORD PTR [r15+0x8]
   48ec8:	cmp    rcx,rbx
   48ecb:	jbe    495fb <printf_parse+0xacb>
   48ed1:	mov    rdx,QWORD PTR [r15]
   48ed4:	mov    rax,rdx
   48ed7:	shl    rax,0x5
   48edb:	add    rax,r8
   48ede:	cmp    rdx,rbx
   48ee1:	ja     48f07 <printf_parse+0x3d7>
   48ee3:	nop    DWORD PTR [rax+rax*1+0x0]
   48ee8:	add    rdx,0x1
   48eec:	mov    DWORD PTR [rax],0x0
   48ef2:	mov    rsi,rax
   48ef5:	add    rax,0x20
   48ef9:	cmp    rdx,rbx
   48efc:	jbe    48ee8 <printf_parse+0x3b8>
   48efe:	mov    QWORD PTR [r15],rdx
   48f01:	mov    DWORD PTR [rsi],0x0
   48f07:	shl    rbx,0x5
   48f0b:	lea    rax,[r8+rbx*1]
   48f0f:	mov    edx,DWORD PTR [rax]
   48f11:	test   edx,edx
   48f13:	jne    4967c <printf_parse+0xb4c>
   48f19:	mov    DWORD PTR [rax],0x5
   48f1f:	mov    rbx,r11
   48f22:	movzx  ebp,BYTE PTR [r11]
   48f26:	jmp    48caf <printf_parse+0x17f>
   48f2b:	nop    DWORD PTR [rax+rax*1+0x0]
   48f30:	mov    r11d,0x1b
   48f36:	mov    esi,0x24
   48f3b:	mov    edi,0x6
   48f40:	mov    edx,0x5
   48f45:	lea    eax,[rbp-0x25]
   48f48:	add    rbx,0x1
   48f4c:	cmp    al,0x53
   48f4e:	ja     49040 <printf_parse+0x510>
   48f54:	lea    r8,[rip+0x1f235]        # 68190 <wide_null_string.0+0x180>
   48f5b:	movzx  eax,al
   48f5e:	movsxd rax,DWORD PTR [r8+rax*4]
   48f62:	add    rax,r8
   48f65:	notrack jmp rax
   48f68:	mov    r11d,0x1e
   48f6e:	mov    ebp,0x63
   48f73:	nop    DWORD PTR [rax+rax*1+0x0]
   48f78:	cmp    r13,0xffffffffffffffff
   48f7c:	je     494b0 <printf_parse+0x980>
   48f82:	mov    QWORD PTR [r12+0x50],r13
   48f87:	mov    r8,QWORD PTR [r15+0x8]
   48f8b:	cmp    rcx,r13
   48f8e:	jbe    49100 <printf_parse+0x5d0>
   48f94:	mov    rdx,QWORD PTR [r15]
   48f97:	mov    rax,rdx
   48f9a:	shl    rax,0x5
   48f9e:	add    rax,r8
   48fa1:	cmp    rdx,r13
   48fa4:	ja     48fcf <printf_parse+0x49f>
   48fa6:	cs nop WORD PTR [rax+rax*1+0x0]
   48fb0:	add    rdx,0x1
   48fb4:	mov    DWORD PTR [rax],0x0
   48fba:	mov    rsi,rax
   48fbd:	add    rax,0x20
   48fc1:	cmp    rdx,r13
   48fc4:	jbe    48fb0 <printf_parse+0x480>
   48fc6:	mov    QWORD PTR [r15],rdx
   48fc9:	mov    DWORD PTR [rsi],0x0
   48fcf:	shl    r13,0x5
   48fd3:	add    r13,r8
   48fd6:	mov    eax,DWORD PTR [r13+0x0]
   48fda:	test   eax,eax
   48fdc:	jne    49188 <printf_parse+0x658>
   48fe2:	mov    DWORD PTR [r13+0x0],r11d
   48fe6:	mov    BYTE PTR [r12+0x48],bpl
   48feb:	mov    rax,QWORD PTR [r14]
   48fee:	mov    QWORD PTR [r12+0x8],rbx
   48ff3:	lea    r13,[rax+0x1]
   48ff7:	mov    QWORD PTR [r14],r13
   48ffa:	cmp    r10,r13
   48ffd:	jbe    49080 <printf_parse+0x550>
   49003:	mov    rdi,QWORD PTR [r14+0x8]
   49007:	jmp    48bac <printf_parse+0x7c>
   4900c:	movzx  ebp,BYTE PTR [rbx+0x1]
   49010:	add    rbx,0x1
   49014:	mov    r11d,0x1b
   4901a:	mov    esi,0x25
   4901f:	mov    edi,0x8
   49024:	mov    edx,0x7
   49029:	add    rbx,0x1
   4902d:	lea    eax,[rbp-0x25]
   49030:	cmp    al,0x53
   49032:	jbe    48f54 <printf_parse+0x424>
   49038:	nop    DWORD PTR [rax+rax*1+0x0]
   49040:	mov    r8,QWORD PTR [r15+0x8]
   49044:	cmp    QWORD PTR [rsp+0x10],r8
   49049:	je     4905d <printf_parse+0x52d>
   4904b:	mov    rdi,r8
   4904e:	mov    QWORD PTR [rsp+0x8],r9
   49053:	call   10430 <free@plt>
   49058:	mov    r9,QWORD PTR [rsp+0x8]
   4905d:	mov    rdi,QWORD PTR [r14+0x8]
   49061:	cmp    r9,rdi
   49064:	je     4906b <printf_parse+0x53b>
   49066:	call   10430 <free@plt>
   4906b:	call   104b0 <__errno_location@plt>
   49070:	mov    DWORD PTR [rax],0x16
   49076:	mov    eax,0xffffffff
   4907b:	jmp    48bd5 <printf_parse+0xa5>
   49080:	test   r10,r10
   49083:	js     49775 <printf_parse+0xc45>
   49089:	movabs rax,0x2e8ba2e8ba2e8ba
   49093:	lea    r12,[r10+r10*1]
   49097:	cmp    r12,rax
   4909a:	ja     49775 <printf_parse+0xc45>
   490a0:	lea    rax,[r10+r10*4]
   490a4:	mov    rbp,QWORD PTR [r14+0x8]
   490a8:	mov    QWORD PTR [rsp+0x30],rcx
   490ad:	lea    rsi,[r10+rax*2]
   490b1:	mov    QWORD PTR [rsp+0x28],r9
   490b6:	shl    rsi,0x4
   490ba:	cmp    r9,rbp
   490bd:	je     492d8 <printf_parse+0x7a8>
   490c3:	mov    rdi,rbp
   490c6:	call   12120 <realloc@plt>
   490cb:	mov    r9,QWORD PTR [rsp+0x28]
   490d0:	mov    rcx,QWORD PTR [rsp+0x30]
   490d5:	test   rax,rax
   490d8:	mov    rdi,rax
   490db:	je     49775 <printf_parse+0xc45>
   490e1:	mov    rbp,QWORD PTR [r14+0x8]
   490e5:	cmp    r9,rbp
   490e8:	je     49a37 <printf_parse+0xf07>
   490ee:	mov    QWORD PTR [r14+0x8],rdi
   490f2:	mov    r13,QWORD PTR [r14]
   490f5:	mov    r10,r12
   490f8:	jmp    48bac <printf_parse+0x7c>
   490fd:	nop    DWORD PTR [rax]
   49100:	add    rcx,rcx
   49103:	lea    rax,[r13+0x1]
   49107:	cmp    rcx,r13
   4910a:	cmovbe rcx,rax
   4910e:	mov    rax,rcx
   49111:	shr    rax,0x3b
   49115:	jne    49a2f <printf_parse+0xeff>
   4911b:	mov    rsi,rcx
   4911e:	shl    rsi,0x5
   49122:	cmp    QWORD PTR [rsp+0x10],r8
   49127:	je     49530 <printf_parse+0xa00>
   4912d:	mov    rdi,r8
   49130:	mov    QWORD PTR [rsp+0x40],rcx
   49135:	mov    QWORD PTR [rsp+0x38],r10
   4913a:	mov    QWORD PTR [rsp+0x30],r9
   4913f:	mov    DWORD PTR [rsp+0x28],r11d
   49144:	call   12120 <realloc@plt>
   49149:	mov    r11d,DWORD PTR [rsp+0x28]
   4914e:	mov    r9,QWORD PTR [rsp+0x30]
   49153:	test   rax,rax
   49156:	mov    r10,QWORD PTR [rsp+0x38]
   4915b:	mov    rcx,QWORD PTR [rsp+0x40]
   49160:	mov    r8,rax
   49163:	je     49775 <printf_parse+0xc45>
   49169:	mov    rax,QWORD PTR [rsp+0x10]
   4916e:	cmp    rax,QWORD PTR [r15+0x8]
   49172:	je     49a3f <printf_parse+0xf0f>
   49178:	mov    QWORD PTR [r15+0x8],r8
   4917c:	jmp    48f94 <printf_parse+0x464>
   49181:	nop    DWORD PTR [rax+0x0]
   49188:	cmp    r11d,eax
   4918b:	je     48fe6 <printf_parse+0x4b6>
   49191:	jmp    49044 <printf_parse+0x514>
   49196:	cs nop WORD PTR [rax+rax*1+0x0]
   491a0:	movzx  ebp,BYTE PTR [rbx+0x1]
   491a4:	cmp    bpl,0x68
   491a8:	je     492b6 <printf_parse+0x786>
   491ae:	add    rbx,0x1
   491b2:	mov    r11d,0x1b
   491b8:	mov    esi,0x23
   491bd:	mov    edi,0x4
   491c2:	mov    edx,0x3
   491c7:	jmp    48f45 <printf_parse+0x415>
   491cc:	nop    DWORD PTR [rax+0x0]
   491d0:	mov    rdx,rax
   491d3:	nop    DWORD PTR [rax+rax*1+0x0]
   491d8:	movzx  esi,BYTE PTR [rdx+0x1]
   491dc:	add    rdx,0x1
   491e0:	lea    edi,[rsi-0x30]
   491e3:	cmp    dil,0x9
   491e7:	jbe    491d8 <printf_parse+0x6a8>
   491e9:	mov    r13,0xffffffffffffffff
   491f0:	cmp    sil,0x24
   491f4:	jne    48c59 <printf_parse+0x129>
   491fa:	add    rbx,0x2
   491fe:	xor    edi,edi
   49200:	jmp    49214 <printf_parse+0x6e4>
   49202:	nop    WORD PTR [rax+rax*1+0x0]
   49208:	cmp    al,0x9
   4920a:	ja     49819 <printf_parse+0xce9>
   49210:	add    rbx,0x1
   49214:	lea    eax,[rbp-0x30]
   49217:	lea    rdx,[rbx-0x1]
   4921b:	movabs rsi,0x1999999999999999
   49225:	movsx  rax,al
   49229:	cmp    rdi,rsi
   4922c:	ja     4980d <printf_parse+0xcdd>
   49232:	lea    rsi,[rdi+rdi*4]
   49236:	add    rsi,rsi
   49239:	movzx  ebp,BYTE PTR [rbx]
   4923c:	add    rsi,rax
   4923f:	mov    rdi,rsi
   49242:	lea    eax,[rbp-0x30]
   49245:	jae    49208 <printf_parse+0x6d8>
   49247:	cmp    al,0x9
   49249:	ja     49040 <printf_parse+0x510>
   4924f:	mov    rdx,rbx
   49252:	movsx  rax,al
   49256:	add    rbx,0x1
   4925a:	mov    rsi,0xffffffffffffffff
   49261:	jmp    49239 <printf_parse+0x709>
   49263:	mov    QWORD PTR [r12+0x30],rbx
   49268:	movzx  eax,BYTE PTR [rbx+0x1]
   4926c:	lea    rdx,[rbx+0x1]
   49270:	sub    eax,0x30
   49273:	cmp    al,0x9
   49275:	ja     49900 <printf_parse+0xdd0>
   4927b:	nop    DWORD PTR [rax+rax*1+0x0]
   49280:	movzx  eax,BYTE PTR [rdx+0x1]
   49284:	add    rdx,0x1
   49288:	sub    eax,0x30
   4928b:	cmp    al,0x9
   4928d:	jbe    49280 <printf_parse+0x750>
   4928f:	mov    rax,rdx
   49292:	sub    rax,rbx
   49295:	mov    rbx,rdx
   49298:	mov    rdi,QWORD PTR [rsp+0x18]
   4929d:	mov    QWORD PTR [r12+0x38],rdx
   492a2:	movzx  ebp,BYTE PTR [rdx]
   492a5:	cmp    rdi,rax
   492a8:	cmovae rax,rdi
   492ac:	mov    QWORD PTR [rsp+0x18],rax
   492b1:	jmp    48caf <printf_parse+0x17f>
   492b6:	movzx  ebp,BYTE PTR [rbx+0x2]
   492ba:	mov    r11d,0x1b
   492c0:	add    rbx,0x2
   492c4:	mov    esi,0x22
   492c9:	mov    edi,0x2
   492ce:	mov    edx,0x1
   492d3:	jmp    48f45 <printf_parse+0x415>
   492d8:	mov    rdi,rsi
   492db:	call   11af0 <malloc@plt>
   492e0:	mov    r9,QWORD PTR [rsp+0x28]
   492e5:	mov    rcx,QWORD PTR [rsp+0x30]
   492ea:	test   rax,rax
   492ed:	mov    rdi,rax
   492f0:	je     495b1 <printf_parse+0xa81>
   492f6:	lea    rax,[r13+r13*4+0x0]
   492fb:	mov    rsi,rbp
   492fe:	mov    QWORD PTR [rsp+0x30],rcx
   49303:	lea    rdx,[r13+rax*2+0x0]
   49308:	mov    QWORD PTR [rsp+0x28],r9
   4930d:	shl    rdx,0x3
   49311:	call   11220 <memcpy@plt>
   49316:	mov    rcx,QWORD PTR [rsp+0x30]
   4931b:	mov    r9,QWORD PTR [rsp+0x28]
   49320:	mov    rdi,rax
   49323:	jmp    490ee <printf_parse+0x5be>
   49328:	mov    rax,r8
   4932b:	nop    DWORD PTR [rax+rax*1+0x0]
   49330:	movzx  esi,BYTE PTR [rax+0x1]
   49334:	add    rax,0x1
   49338:	lea    edi,[rsi-0x30]
   4933b:	cmp    dil,0x9
   4933f:	jbe    49330 <printf_parse+0x800>
   49341:	cmp    sil,0x24
   49345:	jne    48d73 <printf_parse+0x243>
   4934b:	add    rbx,0x2
   4934f:	xor    edi,edi
   49351:	jmp    4935f <printf_parse+0x82f>
   49353:	cmp    al,0x9
   49355:	ja     49945 <printf_parse+0xe15>
   4935b:	add    rbx,0x1
   4935f:	lea    eax,[rdx-0x30]
   49362:	lea    rsi,[rbx-0x1]
   49366:	movabs rdx,0x1999999999999999
   49370:	movsx  rax,al
   49374:	cmp    rdi,rdx
   49377:	ja     4990d <printf_parse+0xddd>
   4937d:	lea    rdx,[rdi+rdi*4]
   49381:	add    rdx,rdx
   49384:	add    rdx,rax
   49387:	mov    rbp,rdx
   4938a:	mov    rdi,rdx
   4938d:	movzx  edx,BYTE PTR [rbx]
   49390:	lea    eax,[rdx-0x30]
   49393:	jae    49353 <printf_parse+0x823>
   49395:	cmp    al,0x9
   49397:	ja     49040 <printf_parse+0x510>
   4939d:	mov    rsi,rbx
   493a0:	movsx  rax,al
   493a4:	add    rbx,0x1
   493a8:	mov    rdx,0xffffffffffffffff
   493af:	jmp    49384 <printf_parse+0x854>
   493b1:	mov    r11d,edx
   493b4:	jmp    48f78 <printf_parse+0x448>
   493b9:	movzx  eax,BYTE PTR [rbx+0x1]
   493bd:	cmp    al,0x66
   493bf:	je     496f3 <printf_parse+0xbc3>
   493c5:	cmp    al,0x38
   493c7:	je     4989a <printf_parse+0xd6a>
   493cd:	cmp    al,0x31
   493cf:	je     49919 <printf_parse+0xde9>
   493d5:	cmp    al,0x33
   493d7:	je     49961 <printf_parse+0xe31>
   493dd:	cmp    al,0x36
   493df:	jne    49040 <printf_parse+0x510>
   493e5:	cmp    BYTE PTR [rbx+0x2],0x34
   493e9:	jne    49040 <printf_parse+0x510>
   493ef:	movzx  ebp,BYTE PTR [rbx+0x3]
   493f3:	mov    r11d,0x1b
   493f9:	add    rbx,0x3
   493fd:	mov    esi,0x2a
   49402:	mov    edi,0x12
   49407:	mov    edx,0x11
   4940c:	jmp    48f45 <printf_parse+0x415>
   49411:	nop    DWORD PTR [rax+0x0]
   49418:	movzx  ebp,BYTE PTR [rbx+0x1]
   4941c:	mov    r11d,0x1c
   49422:	add    rbx,0x1
   49426:	mov    esi,0x26
   4942b:	mov    edi,0xa
   49430:	mov    edx,0x9
   49435:	jmp    48f45 <printf_parse+0x415>
   4943a:	movzx  ebp,BYTE PTR [rbx+0x1]
   4943e:	cmp    bpl,0x6c
   49442:	je     496d1 <printf_parse+0xba1>
   49448:	add    rbx,0x1
   4944c:	mov    r11d,0x1b
   49452:	mov    esi,0x25
   49457:	mov    edi,0x8
   4945c:	mov    edx,0x7
   49461:	jmp    48f45 <printf_parse+0x415>
   49466:	sub    edx,0x7
   49469:	mov    r11d,0x1d
   4946f:	and    edx,0xfffffffd
   49472:	cmp    edx,0x1
   49475:	adc    r11d,0x0
   49479:	jmp    48f78 <printf_parse+0x448>
   4947e:	mov    r11d,0x20
   49484:	mov    ebp,0x73
   49489:	jmp    48f78 <printf_parse+0x448>
   4948e:	mov    r11d,esi
   49491:	jmp    48f78 <printf_parse+0x448>
   49496:	sub    edx,0x7
   49499:	mov    r11d,0x1f
   4949f:	and    edx,0xfffffffd
   494a2:	cmp    edx,0x1
   494a5:	adc    r11d,0x0
   494a9:	jmp    48f78 <printf_parse+0x448>
   494ae:	xchg   ax,ax
   494b0:	mov    rdi,QWORD PTR [rsp+0x20]
   494b5:	mov    QWORD PTR [r12+0x50],rdi
   494ba:	lea    rax,[rdi+0x1]
   494be:	cmp    rdi,0xffffffffffffffff
   494c2:	je     49040 <printf_parse+0x510>
   494c8:	mov    r13,QWORD PTR [rsp+0x20]
   494cd:	mov    QWORD PTR [rsp+0x20],rax
   494d2:	jmp    48f87 <printf_parse+0x457>
   494d7:	mov    QWORD PTR [r12+0x18],rbx
   494dc:	movzx  eax,BYTE PTR [rbx]
   494df:	sub    eax,0x30
   494e2:	cmp    al,0x9
   494e4:	ja     49519 <printf_parse+0x9e9>
   494e6:	mov    rdx,rbx
   494e9:	nop    DWORD PTR [rax+0x0]
   494f0:	movzx  eax,BYTE PTR [rdx+0x1]
   494f4:	add    rdx,0x1
   494f8:	sub    eax,0x30
   494fb:	cmp    al,0x9
   494fd:	jbe    494f0 <printf_parse+0x9c0>
   494ff:	mov    rdi,QWORD PTR [rsp+0x8]
   49504:	mov    rax,rdx
   49507:	sub    rax,rbx
   4950a:	mov    rbx,rdx
   4950d:	cmp    rdi,rax
   49510:	cmovae rax,rdi
   49514:	mov    QWORD PTR [rsp+0x8],rax
   49519:	mov    QWORD PTR [r12+0x20],rbx
   4951e:	movzx  ebp,BYTE PTR [rbx]
   49521:	jmp    48ca5 <printf_parse+0x175>
   49526:	cmp    eax,0x5
   49529:	je     4951e <printf_parse+0x9ee>
   4952b:	jmp    49044 <printf_parse+0x514>
   49530:	mov    rdi,rsi
   49533:	mov    QWORD PTR [rsp+0x48],r8
   49538:	mov    QWORD PTR [rsp+0x40],rcx
   4953d:	mov    QWORD PTR [rsp+0x38],r10
   49542:	mov    QWORD PTR [rsp+0x30],r9
   49547:	mov    DWORD PTR [rsp+0x28],r11d
   4954c:	call   11af0 <malloc@plt>
   49551:	mov    r11d,DWORD PTR [rsp+0x28]
   49556:	mov    r9,QWORD PTR [rsp+0x30]
   4955b:	test   rax,rax
   4955e:	mov    r10,QWORD PTR [rsp+0x38]
   49563:	mov    rcx,QWORD PTR [rsp+0x40]
   49568:	mov    rdi,rax
   4956b:	mov    r8,QWORD PTR [rsp+0x48]
   49570:	je     495ce <printf_parse+0xa9e>
   49572:	mov    rdx,QWORD PTR [r15]
   49575:	mov    rsi,r8
   49578:	mov    QWORD PTR [rsp+0x40],rcx
   4957d:	mov    QWORD PTR [rsp+0x38],r10
   49582:	shl    rdx,0x5
   49586:	mov    QWORD PTR [rsp+0x30],r9
   4958b:	mov    DWORD PTR [rsp+0x28],r11d
   49590:	call   11220 <memcpy@plt>
   49595:	mov    rcx,QWORD PTR [rsp+0x40]
   4959a:	mov    r10,QWORD PTR [rsp+0x38]
   4959f:	mov    r9,QWORD PTR [rsp+0x30]
   495a4:	mov    r11d,DWORD PTR [rsp+0x28]
   495a9:	mov    r8,rax
   495ac:	jmp    49178 <printf_parse+0x648>
   495b1:	mov    rdx,QWORD PTR [r15+0x8]
   495b5:	cmp    QWORD PTR [rsp+0x10],rdx
   495ba:	je     495dc <printf_parse+0xaac>
   495bc:	mov    rdi,rdx
   495bf:	mov    QWORD PTR [rsp+0x8],r9
   495c4:	call   10430 <free@plt>
   495c9:	mov    r9,QWORD PTR [rsp+0x8]
   495ce:	mov    rdi,QWORD PTR [r14+0x8]
   495d2:	cmp    r9,rdi
   495d5:	je     495dc <printf_parse+0xaac>
   495d7:	call   10430 <free@plt>
   495dc:	call   104b0 <__errno_location@plt>
   495e1:	mov    DWORD PTR [rax],0xc
   495e7:	add    rsp,0x58
   495eb:	mov    eax,0xffffffff
   495f0:	pop    rbx
   495f1:	pop    rbp
   495f2:	pop    r12
   495f4:	pop    r13
   495f6:	pop    r14
   495f8:	pop    r15
   495fa:	ret    
   495fb:	add    rcx,rcx
   495fe:	lea    rax,[rbx+0x1]
   49602:	cmp    rcx,rbx
   49605:	cmovbe rcx,rax
   49609:	mov    rax,rcx
   4960c:	shr    rax,0x3b
   49610:	jne    49a2f <printf_parse+0xeff>
   49616:	mov    rsi,rcx
   49619:	mov    QWORD PTR [rsp+0x40],rcx
   4961e:	shl    rsi,0x5
   49622:	cmp    QWORD PTR [rsp+0x10],r8
   49627:	mov    QWORD PTR [rsp+0x38],r10
   4962c:	mov    QWORD PTR [rsp+0x30],r9
   49631:	mov    QWORD PTR [rsp+0x28],r11
   49636:	je     49871 <printf_parse+0xd41>
   4963c:	mov    rdi,r8
   4963f:	call   12120 <realloc@plt>
   49644:	mov    rdx,QWORD PTR [r15+0x8]
   49648:	mov    r11,QWORD PTR [rsp+0x28]
   4964d:	mov    r9,QWORD PTR [rsp+0x30]
   49652:	mov    r10,QWORD PTR [rsp+0x38]
   49657:	mov    r8,rax
   4965a:	mov    rcx,QWORD PTR [rsp+0x40]
   4965f:	test   r8,r8
   49662:	je     49779 <printf_parse+0xc49>
   49668:	cmp    QWORD PTR [rsp+0x10],rdx
   4966d:	je     498bc <printf_parse+0xd8c>
   49673:	mov    QWORD PTR [r15+0x8],r8
   49677:	jmp    48ed1 <printf_parse+0x3a1>
   4967c:	cmp    edx,0x5
   4967f:	jne    49044 <printf_parse+0x514>
   49685:	movzx  ebp,BYTE PTR [r11]
   49689:	mov    rbx,r11
   4968c:	jmp    48caf <printf_parse+0x17f>
   49691:	mov    rdi,rsi
   49694:	mov    QWORD PTR [rsp+0x40],rdx
   49699:	mov    QWORD PTR [rsp+0x38],rcx
   4969e:	mov    QWORD PTR [rsp+0x30],r10
   496a3:	mov    QWORD PTR [rsp+0x28],r9
   496a8:	call   11af0 <malloc@plt>
   496ad:	mov    rdx,QWORD PTR [rsp+0x40]
   496b2:	mov    rcx,QWORD PTR [rsp+0x38]
   496b7:	mov    r10,QWORD PTR [rsp+0x30]
   496bc:	mov    r9,QWORD PTR [rsp+0x28]
   496c1:	mov    r8,rax
   496c4:	jmp    48dfe <printf_parse+0x2ce>
   496c9:	mov    r11d,edi
   496cc:	jmp    48f78 <printf_parse+0x448>
   496d1:	movzx  ebp,BYTE PTR [rbx+0x2]
   496d5:	mov    r11d,0x1c
   496db:	add    rbx,0x2
   496df:	mov    esi,0x26
   496e4:	mov    edi,0xa
   496e9:	mov    edx,0x9
   496ee:	jmp    48f45 <printf_parse+0x415>
   496f3:	movzx  eax,BYTE PTR [rbx+0x2]
   496f7:	cmp    al,0x38
   496f9:	je     49999 <printf_parse+0xe69>
   496ff:	cmp    al,0x31
   49701:	je     499d7 <printf_parse+0xea7>
   49707:	cmp    al,0x33
   49709:	je     49a03 <printf_parse+0xed3>
   4970f:	cmp    al,0x36
   49711:	jne    49040 <printf_parse+0x510>
   49717:	cmp    BYTE PTR [rbx+0x3],0x34
   4971b:	jne    49040 <printf_parse+0x510>
   49721:	movzx  ebp,BYTE PTR [rbx+0x4]
   49725:	mov    r11d,0x1b
   4972b:	add    rbx,0x4
   4972f:	mov    esi,0x2e
   49734:	mov    edi,0x1a
   49739:	mov    edx,0x19
   4973e:	jmp    48f45 <printf_parse+0x415>
   49743:	mov    r11d,0x21
   49749:	jmp    48f78 <printf_parse+0x448>
   4974e:	mov    rdi,QWORD PTR [rsp+0x20]
   49753:	mov    QWORD PTR [r12+0x40],rdi
   49758:	lea    rax,[rdi+0x1]
   4975c:	cmp    rdi,0xffffffffffffffff
   49760:	je     49040 <printf_parse+0x510>
   49766:	mov    rbx,QWORD PTR [rsp+0x20]
   4976b:	mov    QWORD PTR [rsp+0x20],rax
   49770:	jmp    48ec4 <printf_parse+0x394>
   49775:	mov    rdx,QWORD PTR [r15+0x8]
   49779:	cmp    QWORD PTR [rsp+0x10],rdx
   4977e:	jne    495bc <printf_parse+0xa8c>
   49784:	jmp    495ce <printf_parse+0xa9e>
   49789:	mov    rax,r11
   4978c:	nop    DWORD PTR [rax+0x0]
   49790:	movzx  edx,BYTE PTR [rax+0x1]
   49794:	add    rax,0x1
   49798:	lea    edi,[rdx-0x30]
   4979b:	cmp    dil,0x9
   4979f:	jbe    49790 <printf_parse+0xc60>
   497a1:	cmp    dl,0x24
   497a4:	jne    48eb5 <printf_parse+0x385>
   497aa:	add    rbx,0x3
   497ae:	xor    edi,edi
   497b0:	jmp    497be <printf_parse+0xc8e>
   497b2:	cmp    al,0x9
   497b4:	ja     499bb <printf_parse+0xe8b>
   497ba:	add    rbx,0x1
   497be:	lea    eax,[rsi-0x30]
   497c1:	lea    r11,[rbx-0x1]
   497c5:	movabs rsi,0x1999999999999999
   497cf:	movsx  rax,al
   497d3:	cmp    rdi,rsi
   497d6:	ja     4998d <printf_parse+0xe5d>
   497dc:	lea    rdx,[rdi+rdi*4]
   497e0:	add    rdx,rdx
   497e3:	movzx  esi,BYTE PTR [rbx]
   497e6:	add    rdx,rax
   497e9:	mov    rdi,rdx
   497ec:	lea    eax,[rsi-0x30]
   497ef:	jae    497b2 <printf_parse+0xc82>
   497f1:	cmp    al,0x9
   497f3:	ja     49040 <printf_parse+0x510>
   497f9:	mov    r11,rbx
   497fc:	movsx  rax,al
   49800:	add    rbx,0x1
   49804:	mov    rdx,0xffffffffffffffff
   4980b:	jmp    497e3 <printf_parse+0xcb3>
   4980d:	mov    rsi,0xffffffffffffffff
   49814:	jmp    49239 <printf_parse+0x709>
   49819:	mov    r13,rsi
   4981c:	sub    r13,0x1
   49820:	cmp    r13,0xfffffffffffffffd
   49824:	ja     49040 <printf_parse+0x510>
   4982a:	movzx  ebp,BYTE PTR [rdx+0x2]
   4982e:	lea    rax,[rdx+0x2]
   49832:	jmp    48c59 <printf_parse+0x129>
   49837:	mov    rdx,QWORD PTR [r15]
   4983a:	mov    rsi,QWORD PTR [rsp+0x10]
   4983f:	mov    rdi,r8
   49842:	mov    QWORD PTR [rsp+0x38],rcx
   49847:	mov    QWORD PTR [rsp+0x30],r10
   4984c:	shl    rdx,0x5
   49850:	mov    QWORD PTR [rsp+0x28],r9
   49855:	call   11220 <memcpy@plt>
   4985a:	mov    rcx,QWORD PTR [rsp+0x38]
   4985f:	mov    r10,QWORD PTR [rsp+0x30]
   49864:	mov    r9,QWORD PTR [rsp+0x28]
   49869:	mov    r8,rax
   4986c:	jmp    48e12 <printf_parse+0x2e2>
   49871:	mov    rdi,rsi
   49874:	call   11af0 <malloc@plt>
   49879:	mov    rdx,QWORD PTR [rsp+0x10]
   4987e:	mov    rcx,QWORD PTR [rsp+0x40]
   49883:	mov    r10,QWORD PTR [rsp+0x38]
   49888:	mov    r9,QWORD PTR [rsp+0x30]
   4988d:	mov    r8,rax
   49890:	mov    r11,QWORD PTR [rsp+0x28]
   49895:	jmp    4965f <printf_parse+0xb2f>
   4989a:	movzx  ebp,BYTE PTR [rbx+0x2]
   4989e:	mov    r11d,0x1b
   498a4:	add    rbx,0x2
   498a8:	mov    esi,0x27
   498ad:	mov    edi,0xc
   498b2:	mov    edx,0xb
   498b7:	jmp    48f45 <printf_parse+0x415>
   498bc:	mov    rdx,QWORD PTR [r15]
   498bf:	mov    rsi,QWORD PTR [rsp+0x10]
   498c4:	mov    rdi,r8
   498c7:	mov    QWORD PTR [rsp+0x40],rcx
   498cc:	mov    QWORD PTR [rsp+0x38],r10
   498d1:	shl    rdx,0x5
   498d5:	mov    QWORD PTR [rsp+0x30],r9
   498da:	mov    QWORD PTR [rsp+0x28],r11
   498df:	call   11220 <memcpy@plt>
   498e4:	mov    rcx,QWORD PTR [rsp+0x40]
   498e9:	mov    r10,QWORD PTR [rsp+0x38]
   498ee:	mov    r9,QWORD PTR [rsp+0x30]
   498f3:	mov    r11,QWORD PTR [rsp+0x28]
   498f8:	mov    r8,rax
   498fb:	jmp    49673 <printf_parse+0xb43>
   49900:	mov    rbx,rdx
   49903:	mov    eax,0x1
   49908:	jmp    49298 <printf_parse+0x768>
   4990d:	mov    rdx,0xffffffffffffffff
   49914:	jmp    49384 <printf_parse+0x854>
   49919:	cmp    BYTE PTR [rbx+0x2],0x36
   4991d:	jne    49040 <printf_parse+0x510>
   49923:	movzx  ebp,BYTE PTR [rbx+0x3]
   49927:	mov    r11d,0x1b
   4992d:	add    rbx,0x3
   49931:	mov    esi,0x28
   49936:	mov    edi,0xe
   4993b:	mov    edx,0xd
   49940:	jmp    48f45 <printf_parse+0x415>
   49945:	sub    rbp,0x1
   49949:	cmp    rbp,0xfffffffffffffffd
   4994d:	ja     49040 <printf_parse+0x510>
   49953:	mov    QWORD PTR [r12+0x28],rbp
   49958:	lea    rbx,[rsi+0x2]
   4995c:	jmp    48d98 <printf_parse+0x268>
   49961:	cmp    BYTE PTR [rbx+0x2],0x32
   49965:	jne    49040 <printf_parse+0x510>
   4996b:	movzx  ebp,BYTE PTR [rbx+0x3]
   4996f:	mov    r11d,0x1b
   49975:	add    rbx,0x3
   49979:	mov    esi,0x29
   4997e:	mov    edi,0x10
   49983:	mov    edx,0xf
   49988:	jmp    48f45 <printf_parse+0x415>
   4998d:	mov    rdx,0xffffffffffffffff
   49994:	jmp    497e3 <printf_parse+0xcb3>
   49999:	movzx  ebp,BYTE PTR [rbx+0x3]
   4999d:	mov    r11d,0x1b
   499a3:	add    rbx,0x3
   499a7:	mov    esi,0x2b
   499ac:	mov    edi,0x14
   499b1:	mov    edx,0x13
   499b6:	jmp    48f45 <printf_parse+0x415>
   499bb:	lea    rbx,[rdx-0x1]
   499bf:	cmp    rbx,0xfffffffffffffffd
   499c3:	ja     49040 <printf_parse+0x510>
   499c9:	mov    QWORD PTR [r12+0x40],rbx
   499ce:	add    r11,0x2
   499d2:	jmp    48ec4 <printf_parse+0x394>
   499d7:	cmp    BYTE PTR [rbx+0x3],0x36
   499db:	jne    49040 <printf_parse+0x510>
   499e1:	movzx  ebp,BYTE PTR [rbx+0x4]
   499e5:	mov    r11d,0x1b
   499eb:	add    rbx,0x4
   499ef:	mov    esi,0x2c
   499f4:	mov    edi,0x16
   499f9:	mov    edx,0x15
   499fe:	jmp    48f45 <printf_parse+0x415>
   49a03:	cmp    BYTE PTR [rbx+0x3],0x32
   49a07:	jne    49040 <printf_parse+0x510>
   49a0d:	movzx  ebp,BYTE PTR [rbx+0x4]
   49a11:	mov    r11d,0x1b
   49a17:	add    rbx,0x4
   49a1b:	mov    esi,0x2d
   49a20:	mov    edi,0x18
   49a25:	mov    edx,0x17
   49a2a:	jmp    48f45 <printf_parse+0x415>
   49a2f:	mov    rdx,r8
   49a32:	jmp    49779 <printf_parse+0xc49>
   49a37:	mov    r13,QWORD PTR [r14]
   49a3a:	jmp    492f6 <printf_parse+0x7c6>
   49a3f:	mov    rdi,r8
   49a42:	mov    r8,rax
   49a45:	jmp    49572 <printf_parse+0xa42>
   49a4a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000049a50 <vasnprintf>:
   49a50:	endbr64 
   49a54:	push   rbp
   49a55:	mov    rbp,rsp
   49a58:	push   r15
   49a5a:	push   r14
   49a5c:	lea    r14,[rbp-0x3b0]
   49a63:	push   r13
   49a65:	mov    r13,rdx
   49a68:	mov    rdx,r14
   49a6b:	push   r12
   49a6d:	mov    r12,rcx
   49a70:	push   rbx
   49a71:	sub    rsp,0x3f8
   49a78:	mov    QWORD PTR [rbp-0x3e8],rdi
   49a7f:	mov    rdi,r13
   49a82:	mov    QWORD PTR [rbp-0x400],rsi
   49a89:	lea    rsi,[rbp-0x2c0]
   49a90:	mov    rax,QWORD PTR fs:0x28
   49a99:	mov    QWORD PTR [rbp-0x38],rax
   49a9d:	xor    eax,eax
   49a9f:	call   48b30 <printf_parse>
   49aa4:	test   eax,eax
   49aa6:	js     49f17 <vasnprintf+0x4c7>
   49aac:	mov    rsi,r14
   49aaf:	mov    rdi,r12
   49ab2:	call   48910 <printf_fetchargs>
   49ab7:	test   eax,eax
   49ab9:	js     49f40 <vasnprintf+0x4f0>
   49abf:	mov    rdx,QWORD PTR [rbp-0x2b0]
   49ac6:	lea    rax,[rdx+0x7]
   49aca:	cmp    rdx,0xfffffffffffffff9
   49ace:	mov    rdx,0xffffffffffffffff
   49ad5:	cmovae rax,rdx
   49ad9:	add    rax,QWORD PTR [rbp-0x2a8]
   49ae0:	jb     49edc <vasnprintf+0x48c>
   49ae6:	mov    rdi,rax
   49ae9:	xor    r8d,r8d
   49aec:	add    rdi,0x6
   49af0:	setb   r8b
   49af4:	jb     49edc <vasnprintf+0x48c>
   49afa:	cmp    rdi,0xf9f
   49b01:	jbe    4a2b0 <vasnprintf+0x860>
   49b07:	mov    QWORD PTR [rbp-0x3c8],r8
   49b0e:	cmp    rdi,0xffffffffffffffff
   49b12:	je     49edc <vasnprintf+0x48c>
   49b18:	call   11af0 <malloc@plt>
   49b1d:	mov    QWORD PTR [rbp-0x3e0],rax
   49b24:	test   rax,rax
   49b27:	je     49edc <vasnprintf+0x48c>
   49b2d:	mov    QWORD PTR [rbp-0x408],rax
   49b34:	mov    r8,QWORD PTR [rbp-0x3c8]
   49b3b:	xor    r12d,r12d
   49b3e:	cmp    QWORD PTR [rbp-0x3e8],0x0
   49b46:	je     49b52 <vasnprintf+0x102>
   49b48:	mov    rax,QWORD PTR [rbp-0x400]
   49b4f:	mov    r12,QWORD PTR [rax]
   49b52:	mov    r14,QWORD PTR [rbp-0x2b8]
   49b59:	mov    r9,r13
   49b5c:	mov    r10,r8
   49b5f:	mov    QWORD PTR [rbp-0x3f8],0x0
   49b6a:	mov    r15,QWORD PTR [rbp-0x3e8]
   49b71:	mov    r13,QWORD PTR [r14]
   49b74:	cmp    r13,r9
   49b77:	je     4a4cb <vasnprintf+0xa7b>
   49b7d:	sub    r13,r9
   49b80:	mov    rbx,r10
   49b83:	mov    rax,0xffffffffffffffff
   49b8a:	add    rbx,r13
   49b8d:	cmovb  rbx,rax
   49b91:	cmp    r12,rbx
   49b94:	jae    4a4f0 <vasnprintf+0xaa0>
   49b9a:	test   r12,r12
   49b9d:	je     4a4e0 <vasnprintf+0xa90>
   49ba3:	js     4a620 <vasnprintf+0xbd0>
   49ba9:	add    r12,r12
   49bac:	cmp    r12,rbx
   49baf:	cmovb  r12,rbx
   49bb3:	cmp    r12,0xffffffffffffffff
   49bb7:	je     4a620 <vasnprintf+0xbd0>
   49bbd:	cmp    r15,QWORD PTR [rbp-0x3e8]
   49bc4:	mov    QWORD PTR [rbp-0x3d0],r9
   49bcb:	mov    QWORD PTR [rbp-0x3c8],r10
   49bd2:	je     4a5b0 <vasnprintf+0xb60>
   49bd8:	mov    rsi,r12
   49bdb:	mov    rdi,r15
   49bde:	call   12120 <realloc@plt>
   49be3:	mov    r10,QWORD PTR [rbp-0x3c8]
   49bea:	mov    r9,QWORD PTR [rbp-0x3d0]
   49bf1:	test   rax,rax
   49bf4:	mov    r8,rax
   49bf7:	je     4a620 <vasnprintf+0xbd0>
   49bfd:	lea    rdi,[r8+r10*1]
   49c01:	mov    rdx,r13
   49c04:	mov    rsi,r9
   49c07:	mov    QWORD PTR [rbp-0x3c8],r8
   49c0e:	call   11220 <memcpy@plt>
   49c13:	mov    r8,QWORD PTR [rbp-0x3c8]
   49c1a:	mov    rax,QWORD PTR [rbp-0x3f8]
   49c21:	cmp    QWORD PTR [rbp-0x2c0],rax
   49c28:	je     4a82e <vasnprintf+0xdde>
   49c2e:	movzx  edx,BYTE PTR [r14+0x48]
   49c33:	mov    rax,QWORD PTR [r14+0x50]
   49c37:	cmp    dl,0x25
   49c3a:	je     4a428 <vasnprintf+0x9d8>
   49c40:	cmp    rax,0xffffffffffffffff
   49c44:	je     128ee <vasnprintf.cold+0x5>
   49c4a:	mov    r15,QWORD PTR [rbp-0x3a8]
   49c51:	shl    rax,0x5
   49c55:	add    rax,r15
   49c58:	mov    ecx,DWORD PTR [rax]
   49c5a:	mov    DWORD PTR [rbp-0x3c8],ecx
   49c60:	cmp    dl,0x6e
   49c63:	je     4a500 <vasnprintf+0xab0>
   49c69:	mov    rcx,QWORD PTR [rbp-0x3e0]
   49c70:	mov    eax,DWORD PTR [r14+0x10]
   49c74:	lea    r13,[rcx+0x1]
   49c78:	mov    BYTE PTR [rcx],0x25
   49c7b:	test   al,0x1
   49c7d:	je     49c8e <vasnprintf+0x23e>
   49c7f:	mov    rcx,QWORD PTR [rbp-0x3e0]
   49c86:	mov    BYTE PTR [rcx+0x1],0x27
   49c8a:	lea    r13,[rcx+0x2]
   49c8e:	test   al,0x2
   49c90:	je     49c9b <vasnprintf+0x24b>
   49c92:	mov    BYTE PTR [r13+0x0],0x2d
   49c97:	add    r13,0x1
   49c9b:	test   al,0x4
   49c9d:	je     49ca8 <vasnprintf+0x258>
   49c9f:	mov    BYTE PTR [r13+0x0],0x2b
   49ca4:	add    r13,0x1
   49ca8:	test   al,0x8
   49caa:	je     49cb5 <vasnprintf+0x265>
   49cac:	mov    BYTE PTR [r13+0x0],0x20
   49cb1:	add    r13,0x1
   49cb5:	test   al,0x10
   49cb7:	je     49cc2 <vasnprintf+0x272>
   49cb9:	mov    BYTE PTR [r13+0x0],0x23
   49cbe:	add    r13,0x1
   49cc2:	test   al,0x40
   49cc4:	je     49ccf <vasnprintf+0x27f>
   49cc6:	mov    BYTE PTR [r13+0x0],0x49
   49ccb:	add    r13,0x1
   49ccf:	test   al,0x20
   49cd1:	je     49cdc <vasnprintf+0x28c>
   49cd3:	mov    BYTE PTR [r13+0x0],0x30
   49cd8:	add    r13,0x1
   49cdc:	mov    rsi,QWORD PTR [r14+0x18]
   49ce0:	mov    rax,QWORD PTR [r14+0x20]
   49ce4:	cmp    rsi,rax
   49ce7:	je     49d16 <vasnprintf+0x2c6>
   49ce9:	sub    rax,rsi
   49cec:	mov    rdi,r13
   49cef:	mov    QWORD PTR [rbp-0x3d8],r8
   49cf6:	mov    rdx,rax
   49cf9:	mov    QWORD PTR [rbp-0x3d0],rax
   49d00:	call   11220 <memcpy@plt>
   49d05:	mov    rdx,QWORD PTR [rbp-0x3d0]
   49d0c:	mov    r8,QWORD PTR [rbp-0x3d8]
   49d13:	add    r13,rdx
   49d16:	mov    rsi,QWORD PTR [r14+0x30]
   49d1a:	mov    rax,QWORD PTR [r14+0x38]
   49d1e:	cmp    rsi,rax
   49d21:	je     49d50 <vasnprintf+0x300>
   49d23:	sub    rax,rsi
   49d26:	mov    rdi,r13
   49d29:	mov    QWORD PTR [rbp-0x3d8],r8
   49d30:	mov    rdx,rax
   49d33:	mov    QWORD PTR [rbp-0x3d0],rax
   49d3a:	call   11220 <memcpy@plt>
   49d3f:	mov    rdx,QWORD PTR [rbp-0x3d0]
   49d46:	mov    r8,QWORD PTR [rbp-0x3d8]
   49d4d:	add    r13,rdx
   49d50:	mov    esi,DWORD PTR [rbp-0x3c8]
   49d56:	cmp    esi,0x20
   49d59:	ja     49d90 <vasnprintf+0x340>
   49d5b:	mov    ecx,esi
   49d5d:	mov    eax,0x1
   49d62:	shl    rax,cl
   49d65:	movabs rcx,0x147e60180
   49d6f:	test   rax,rcx
   49d72:	jne    4a554 <vasnprintf+0xb04>
   49d78:	test   ah,0x6
   49d7b:	jne    4a54b <vasnprintf+0xafb>
   49d81:	cmp    esi,0x1c
   49d84:	jne    49d90 <vasnprintf+0x340>
   49d86:	mov    BYTE PTR [r13+0x0],0x4c
   49d8b:	add    r13,0x1
   49d8f:	nop
   49d90:	movzx  eax,BYTE PTR [r14+0x48]
   49d95:	mov    BYTE PTR [r13+0x1],0x0
   49d9a:	mov    BYTE PTR [r13+0x0],al
   49d9e:	mov    rax,QWORD PTR [r14+0x28]
   49da2:	cmp    rax,0xffffffffffffffff
   49da6:	je     4a598 <vasnprintf+0xb48>
   49dac:	shl    rax,0x5
   49db0:	add    rax,r15
   49db3:	cmp    DWORD PTR [rax],0x5
   49db6:	jne    128ee <vasnprintf.cold+0x5>
   49dbc:	mov    DWORD PTR [rbp-0x3d8],0x1
   49dc6:	mov    eax,DWORD PTR [rax+0x10]
   49dc9:	mov    DWORD PTR [rbp-0x3b8],eax
   49dcf:	mov    rax,QWORD PTR [r14+0x40]
   49dd3:	cmp    rax,0xffffffffffffffff
   49dd7:	je     49e05 <vasnprintf+0x3b5>
   49dd9:	shl    rax,0x5
   49ddd:	lea    r9,[r15+rax*1]
   49de1:	cmp    DWORD PTR [r9],0x5
   49de5:	jne    128ee <vasnprintf.cold+0x5>
   49deb:	mov    eax,DWORD PTR [rbp-0x3d8]
   49df1:	mov    edx,DWORD PTR [r9+0x10]
   49df5:	mov    DWORD PTR [rbp+rax*4-0x3b8],edx
   49dfc:	lea    eax,[rax+0x1]
   49dff:	mov    DWORD PTR [rbp-0x3d8],eax
   49e05:	mov    rax,rbx
   49e08:	add    rax,0x2
   49e0c:	jb     4a562 <vasnprintf+0xb12>
   49e12:	cmp    r12,rax
   49e15:	jae    4a610 <vasnprintf+0xbc0>
   49e1b:	test   r12,r12
   49e1e:	jne    4a638 <vasnprintf+0xbe8>
   49e24:	cmp    rax,0xc
   49e28:	ja     4a64a <vasnprintf+0xbfa>
   49e2e:	mov    r12d,0xc
   49e34:	cmp    r8,QWORD PTR [rbp-0x3e8]
   49e3b:	je     4a6a8 <vasnprintf+0xc58>
   49e41:	mov    rdi,r8
   49e44:	mov    rsi,r12
   49e47:	mov    QWORD PTR [rbp-0x3d0],r8
   49e4e:	call   12120 <realloc@plt>
   49e53:	mov    r8,QWORD PTR [rbp-0x3d0]
   49e5a:	test   rax,rax
   49e5d:	mov    r15,rax
   49e60:	je     4a570 <vasnprintf+0xb20>
   49e66:	mov    BYTE PTR [r15+rbx*1],0x0
   49e6b:	call   104b0 <__errno_location@plt>
   49e70:	mov    QWORD PTR [rbp-0x3f0],r13
   49e77:	mov    r13,r15
   49e7a:	mov    QWORD PTR [rbp-0x3d0],rax
   49e81:	mov    eax,DWORD PTR [rax]
   49e83:	mov    DWORD PTR [rbp-0x40c],eax
   49e89:	nop    DWORD PTR [rax+0x0]
   49e90:	mov    r10,r12
   49e93:	mov    esi,0x7fffffff
   49e98:	mov    rax,QWORD PTR [rbp-0x3d0]
   49e9f:	mov    DWORD PTR [rbp-0x3bc],0xffffffff
   49ea9:	sub    r10,rbx
   49eac:	cmp    r10,rsi
   49eaf:	mov    DWORD PTR [rax],0x0
   49eb5:	mov    eax,DWORD PTR [rbp-0x3c8]
   49ebb:	cmovbe rsi,r10
   49ebf:	mov    r15,rsi
   49ec2:	cmp    eax,0x21
   49ec5:	ja     128e9 <vasnprintf.cold>
   49ecb:	lea    rdi,[rip+0x1e40e]        # 682e0 <wide_null_string.0+0x2d0>
   49ed2:	movsxd rax,DWORD PTR [rdi+rax*4]
   49ed6:	add    rax,rdi
   49ed9:	notrack jmp rax
   49edc:	call   104b0 <__errno_location@plt>
   49ee1:	mov    DWORD PTR [rax],0xc
   49ee7:	mov    rdi,QWORD PTR [rbp-0x2b8]
   49eee:	lea    rax,[rbp-0x2a0]
   49ef5:	cmp    rdi,rax
   49ef8:	je     49eff <vasnprintf+0x4af>
   49efa:	call   10430 <free@plt>
   49eff:	mov    rdi,QWORD PTR [rbp-0x3a8]
   49f06:	lea    rax,[rbp-0x3a0]
   49f0d:	cmp    rdi,rax
   49f10:	je     49f17 <vasnprintf+0x4c7>
   49f12:	call   10430 <free@plt>
   49f17:	xor    r11d,r11d
   49f1a:	mov    rax,QWORD PTR [rbp-0x38]
   49f1e:	sub    rax,QWORD PTR fs:0x28
   49f27:	jne    4a98e <vasnprintf+0xf3e>
   49f2d:	lea    rsp,[rbp-0x28]
   49f31:	mov    rax,r11
   49f34:	pop    rbx
   49f35:	pop    r12
   49f37:	pop    r13
   49f39:	pop    r14
   49f3b:	pop    r15
   49f3d:	pop    rbp
   49f3e:	ret    
   49f3f:	nop
   49f40:	call   104b0 <__errno_location@plt>
   49f45:	mov    DWORD PTR [rax],0x16
   49f4b:	jmp    49ee7 <vasnprintf+0x497>
   49f4d:	nop    DWORD PTR [rax]
   49f50:	mov    rax,QWORD PTR [r14+0x50]
   49f54:	lea    rdi,[r13+rbx*1+0x0]
   49f59:	shl    rax,0x5
   49f5d:	add    rax,QWORD PTR [rbp-0x3a8]
   49f64:	mov    r9,QWORD PTR [rax+0x10]
   49f68:	mov    eax,DWORD PTR [rbp-0x3d8]
   49f6e:	mov    QWORD PTR [rbp-0x418],r10
   49f75:	cmp    eax,0x1
   49f78:	je     4a408 <vasnprintf+0x9b8>
   49f7e:	cmp    eax,0x2
   49f81:	je     4a3f0 <vasnprintf+0x9a0>
   49f87:	sub    rsp,0x8
   49f8b:	lea    rax,[rbp-0x3bc]
   49f92:	push   rax
   49f93:	mov    r8,QWORD PTR [rbp-0x3e0]
   49f9a:	mov    rsi,r15
   49f9d:	mov    edx,0x1
   49fa2:	xor    eax,eax
   49fa4:	mov    rcx,0xffffffffffffffff
   49fab:	call   10e30 <__snprintf_chk@plt>
   49fb0:	mov    r10,QWORD PTR [rbp-0x418]
   49fb7:	pop    rsi
   49fb8:	pop    rdi
   49fb9:	mov    edx,DWORD PTR [rbp-0x3bc]
   49fbf:	test   edx,edx
   49fc1:	js     4a0f7 <vasnprintf+0x6a7>
   49fc7:	movsxd rcx,edx
   49fca:	cmp    rcx,r15
   49fcd:	jae    49fdc <vasnprintf+0x58c>
   49fcf:	add    rcx,r13
   49fd2:	cmp    BYTE PTR [rcx+rbx*1],0x0
   49fd6:	jne    128ee <vasnprintf.cold+0x5>
   49fdc:	cmp    edx,eax
   49fde:	jge    49fe8 <vasnprintf+0x598>
   49fe0:	mov    DWORD PTR [rbp-0x3bc],eax
   49fe6:	mov    edx,eax
   49fe8:	lea    eax,[rdx+0x1]
   49feb:	cmp    rax,r15
   49fee:	jb     4a660 <vasnprintf+0xc10>
   49ff4:	cmp    r10,0x7ffffffe
   49ffb:	ja     4a680 <vasnprintf+0xc30>
   4a001:	lea    eax,[rdx+0x2]
   4a004:	xor    ecx,ecx
   4a006:	add    rax,rbx
   4a009:	setb   cl
   4a00c:	test   r12,r12
   4a00f:	js     4a318 <vasnprintf+0x8c8>
   4a015:	lea    rdx,[r12+r12*1]
   4a019:	test   rcx,rcx
   4a01c:	jne    4a33a <vasnprintf+0x8ea>
   4a022:	cmp    rdx,rax
   4a025:	cmovae rax,rdx
   4a029:	cmp    r12,rax
   4a02c:	jae    49e90 <vasnprintf+0x440>
   4a032:	test   r12,r12
   4a035:	mov    ecx,0xc
   4a03a:	cmove  rdx,rcx
   4a03e:	cmp    rdx,rax
   4a041:	cmovae rax,rdx
   4a045:	mov    r12,rax
   4a048:	cmp    rax,0xffffffffffffffff
   4a04c:	je     4a33a <vasnprintf+0x8ea>
   4a052:	cmp    r13,QWORD PTR [rbp-0x3e8]
   4a059:	je     4a3c0 <vasnprintf+0x970>
   4a05f:	mov    rsi,rax
   4a062:	mov    rdi,r13
   4a065:	call   12120 <realloc@plt>
   4a06a:	test   rax,rax
   4a06d:	je     4a33a <vasnprintf+0x8ea>
   4a073:	mov    r13,rax
   4a076:	jmp    49e90 <vasnprintf+0x440>
   4a07b:	nop    DWORD PTR [rax+rax*1+0x0]
   4a080:	mov    rax,QWORD PTR [r14+0x50]
   4a084:	shl    rax,0x5
   4a088:	add    rax,QWORD PTR [rbp-0x3a8]
   4a08f:	mov    r9d,DWORD PTR [rax+0x10]
   4a093:	mov    eax,DWORD PTR [rbp-0x3d8]
   4a099:	mov    QWORD PTR [rbp-0x418],r10
   4a0a0:	lea    rdi,[r13+rbx*1+0x0]
   4a0a5:	cmp    eax,0x1
   4a0a8:	je     4a3a0 <vasnprintf+0x950>
   4a0ae:	cmp    eax,0x2
   4a0b1:	je     4a350 <vasnprintf+0x900>
   4a0b7:	sub    rsp,0x8
   4a0bb:	lea    rax,[rbp-0x3bc]
   4a0c2:	push   rax
   4a0c3:	mov    r8,QWORD PTR [rbp-0x3e0]
   4a0ca:	mov    rcx,0xffffffffffffffff
   4a0d1:	mov    rsi,r15
   4a0d4:	xor    eax,eax
   4a0d6:	mov    edx,0x1
   4a0db:	call   10e30 <__snprintf_chk@plt>
   4a0e0:	pop    rdx
   4a0e1:	mov    edx,DWORD PTR [rbp-0x3bc]
   4a0e7:	mov    r10,QWORD PTR [rbp-0x418]
   4a0ee:	pop    rcx
   4a0ef:	test   edx,edx
   4a0f1:	jns    49fc7 <vasnprintf+0x577>
   4a0f7:	mov    rcx,QWORD PTR [rbp-0x3f0]
   4a0fe:	cmp    BYTE PTR [rcx+0x1],0x0
   4a102:	jne    4a418 <vasnprintf+0x9c8>
   4a108:	test   eax,eax
   4a10a:	jns    49fe0 <vasnprintf+0x590>
   4a110:	mov    rax,QWORD PTR [rbp-0x3d0]
   4a117:	mov    r15,r13
   4a11a:	mov    eax,DWORD PTR [rax]
   4a11c:	test   eax,eax
   4a11e:	jne    4a140 <vasnprintf+0x6f0>
   4a120:	movzx  eax,BYTE PTR [r14+0x48]
   4a125:	mov    edx,0x54
   4a12a:	mov    rbx,QWORD PTR [rbp-0x3d0]
   4a131:	and    eax,0xffffffef
   4a134:	cmp    al,0x63
   4a136:	mov    eax,0x16
   4a13b:	cmove  eax,edx
   4a13e:	mov    DWORD PTR [rbx],eax
   4a140:	cmp    r15,QWORD PTR [rbp-0x3e8]
   4a147:	je     4a151 <vasnprintf+0x701>
   4a149:	mov    rdi,r15
   4a14c:	call   10430 <free@plt>
   4a151:	mov    rax,QWORD PTR [rbp-0x408]
   4a158:	test   rax,rax
   4a15b:	je     49ee7 <vasnprintf+0x497>
   4a161:	mov    rdi,rax
   4a164:	call   10430 <free@plt>
   4a169:	jmp    49ee7 <vasnprintf+0x497>
   4a16e:	xchg   ax,ax
   4a170:	mov    rax,QWORD PTR [r14+0x50]
   4a174:	shl    rax,0x5
   4a178:	add    rax,QWORD PTR [rbp-0x3a8]
   4a17f:	movzx  r9d,BYTE PTR [rax+0x10]
   4a184:	jmp    4a093 <vasnprintf+0x643>
   4a189:	nop    DWORD PTR [rax+0x0]
   4a190:	mov    rax,QWORD PTR [r14+0x50]
   4a194:	shl    rax,0x5
   4a198:	add    rax,QWORD PTR [rbp-0x3a8]
   4a19f:	movsx  r9d,BYTE PTR [rax+0x10]
   4a1a4:	jmp    4a093 <vasnprintf+0x643>
   4a1a9:	nop    DWORD PTR [rax+0x0]
   4a1b0:	mov    rax,QWORD PTR [r14+0x50]
   4a1b4:	shl    rax,0x5
   4a1b8:	add    rax,QWORD PTR [rbp-0x3a8]
   4a1bf:	movsx  r9d,WORD PTR [rax+0x10]
   4a1c4:	jmp    4a093 <vasnprintf+0x643>
   4a1c9:	nop    DWORD PTR [rax+0x0]
   4a1d0:	mov    rax,QWORD PTR [r14+0x50]
   4a1d4:	shl    rax,0x5
   4a1d8:	add    rax,QWORD PTR [rbp-0x3a8]
   4a1df:	movzx  r9d,WORD PTR [rax+0x10]
   4a1e4:	jmp    4a093 <vasnprintf+0x643>
   4a1e9:	nop    DWORD PTR [rax+0x0]
   4a1f0:	mov    rax,QWORD PTR [r14+0x50]
   4a1f4:	mov    QWORD PTR [rbp-0x418],r10
   4a1fb:	lea    rdi,[r13+rbx*1+0x0]
   4a200:	shl    rax,0x5
   4a204:	add    rax,QWORD PTR [rbp-0x3a8]
   4a20b:	movsd  xmm0,QWORD PTR [rax+0x10]
   4a210:	mov    eax,DWORD PTR [rbp-0x3d8]
   4a216:	cmp    eax,0x1
   4a219:	je     4a7a0 <vasnprintf+0xd50>
   4a21f:	cmp    eax,0x2
   4a222:	je     4a750 <vasnprintf+0xd00>
   4a228:	mov    r8,QWORD PTR [rbp-0x3e0]
   4a22f:	mov    edx,0x1
   4a234:	mov    eax,0x1
   4a239:	lea    r9,[rbp-0x3bc]
   4a240:	mov    rcx,0xffffffffffffffff
   4a247:	call   10e30 <__snprintf_chk@plt>
   4a24c:	mov    r10,QWORD PTR [rbp-0x418]
   4a253:	jmp    49fb9 <vasnprintf+0x569>
   4a258:	nop    DWORD PTR [rax+rax*1+0x0]
   4a260:	mov    rax,QWORD PTR [r14+0x50]
   4a264:	mov    QWORD PTR [rbp-0x418],r10
   4a26b:	lea    rdi,[r13+rbx*1+0x0]
   4a270:	shl    rax,0x5
   4a274:	add    rax,QWORD PTR [rbp-0x3a8]
   4a27b:	fld    TBYTE PTR [rax+0x10]
   4a27e:	mov    eax,DWORD PTR [rbp-0x3d8]
   4a284:	cmp    eax,0x1
   4a287:	je     4a730 <vasnprintf+0xce0>
   4a28d:	cmp    eax,0x2
   4a290:	je     4a6e0 <vasnprintf+0xc90>
   4a296:	sub    rsp,0x10
   4a29a:	lea    r9,[rbp-0x3bc]
   4a2a1:	fstp   TBYTE PTR [rsp]
   4a2a4:	jmp    49f93 <vasnprintf+0x543>
   4a2a9:	nop    DWORD PTR [rax+0x0]
   4a2b0:	add    rax,0x1d
   4a2b4:	mov    rcx,rsp
   4a2b7:	mov    rdx,rax
   4a2ba:	and    rax,0xfffffffffffff000
   4a2c0:	sub    rcx,rax
   4a2c3:	and    rdx,0xfffffffffffffff0
   4a2c7:	cmp    rsp,rcx
   4a2ca:	je     4a2e1 <vasnprintf+0x891>
   4a2cc:	sub    rsp,0x1000
   4a2d3:	or     QWORD PTR [rsp+0xff8],0x0
   4a2dc:	cmp    rsp,rcx
   4a2df:	jne    4a2cc <vasnprintf+0x87c>
   4a2e1:	and    edx,0xfff
   4a2e7:	sub    rsp,rdx
   4a2ea:	test   rdx,rdx
   4a2ed:	jne    4a823 <vasnprintf+0xdd3>
   4a2f3:	mov    QWORD PTR [rbp-0x408],0x0
   4a2fe:	lea    rax,[rsp+0xf]
   4a303:	and    rax,0xfffffffffffffff0
   4a307:	mov    QWORD PTR [rbp-0x3e0],rax
   4a30e:	jmp    49b3b <vasnprintf+0xeb>
   4a313:	nop    DWORD PTR [rax+rax*1+0x0]
   4a318:	test   rcx,rcx
   4a31b:	jne    4a330 <vasnprintf+0x8e0>
   4a31d:	mov    rax,0xffffffffffffffff
   4a324:	mov    rdx,0xffffffffffffffff
   4a32b:	jmp    4a029 <vasnprintf+0x5d9>
   4a330:	cmp    r12,0xffffffffffffffff
   4a334:	je     49e90 <vasnprintf+0x440>
   4a33a:	mov    r15,r13
   4a33d:	mov    rax,QWORD PTR [rbp-0x3d0]
   4a344:	mov    DWORD PTR [rax],0xc
   4a34a:	jmp    4a140 <vasnprintf+0x6f0>
   4a34f:	nop
   4a350:	sub    rsp,0x8
   4a354:	lea    rax,[rbp-0x3bc]
   4a35b:	push   rax
   4a35c:	push   r9
   4a35e:	mov    eax,DWORD PTR [rbp-0x3b4]
   4a364:	push   rax
   4a365:	mov    r9d,DWORD PTR [rbp-0x3b8]
   4a36c:	mov    edx,0x1
   4a371:	mov    rsi,r15
   4a374:	xor    eax,eax
   4a376:	mov    r8,QWORD PTR [rbp-0x3e0]
   4a37d:	mov    rcx,0xffffffffffffffff
   4a384:	call   10e30 <__snprintf_chk@plt>
   4a389:	mov    r10,QWORD PTR [rbp-0x418]
   4a390:	add    rsp,0x20
   4a394:	jmp    49fb9 <vasnprintf+0x569>
   4a399:	nop    DWORD PTR [rax+0x0]
   4a3a0:	lea    rax,[rbp-0x3bc]
   4a3a7:	push   rax
   4a3a8:	push   r9
   4a3aa:	mov    r9d,DWORD PTR [rbp-0x3b8]
   4a3b1:	jmp    4a0c3 <vasnprintf+0x673>
   4a3b6:	cs nop WORD PTR [rax+rax*1+0x0]
   4a3c0:	mov    rdi,rax
   4a3c3:	call   11af0 <malloc@plt>
   4a3c8:	test   rax,rax
   4a3cb:	je     4a33a <vasnprintf+0x8ea>
   4a3d1:	test   rbx,rbx
   4a3d4:	je     4a993 <vasnprintf+0xf43>
   4a3da:	mov    rsi,r13
   4a3dd:	mov    rdx,rbx
   4a3e0:	mov    rdi,rax
   4a3e3:	call   11220 <memcpy@plt>
   4a3e8:	mov    r13,rax
   4a3eb:	jmp    49e90 <vasnprintf+0x440>
   4a3f0:	sub    rsp,0x8
   4a3f4:	lea    rax,[rbp-0x3bc]
   4a3fb:	push   rax
   4a3fc:	push   r9
   4a3fe:	jmp    4a35e <vasnprintf+0x90e>
   4a403:	nop    DWORD PTR [rax+rax*1+0x0]
   4a408:	lea    rax,[rbp-0x3bc]
   4a40f:	push   rax
   4a410:	push   r9
   4a412:	jmp    4a3aa <vasnprintf+0x95a>
   4a414:	nop    DWORD PTR [rax+0x0]
   4a418:	mov    BYTE PTR [rcx+0x1],0x0
   4a41c:	jmp    49e90 <vasnprintf+0x440>
   4a421:	nop    DWORD PTR [rax+0x0]
   4a428:	cmp    rax,0xffffffffffffffff
   4a42c:	jne    128ee <vasnprintf.cold+0x5>
   4a432:	lea    r15,[rbx+0x1]
   4a436:	cmp    rbx,0xffffffffffffffff
   4a43a:	mov    r10,0xffffffffffffffff
   4a441:	cmovb  r10,r15
   4a445:	cmp    r12,r10
   4a448:	jae    4a4a6 <vasnprintf+0xa56>
   4a44a:	test   r12,r12
   4a44d:	je     4a698 <vasnprintf+0xc48>
   4a453:	js     4a570 <vasnprintf+0xb20>
   4a459:	add    r12,r12
   4a45c:	cmp    r12,r10
   4a45f:	cmovb  r12,r10
   4a463:	cmp    r12,0xffffffffffffffff
   4a467:	je     4a570 <vasnprintf+0xb20>
   4a46d:	cmp    r8,QWORD PTR [rbp-0x3e8]
   4a474:	je     4a7ae <vasnprintf+0xd5e>
   4a47a:	mov    rsi,r12
   4a47d:	mov    rdi,r8
   4a480:	mov    QWORD PTR [rbp-0x3d0],r10
   4a487:	mov    QWORD PTR [rbp-0x3c8],r8
   4a48e:	call   12120 <realloc@plt>
   4a493:	mov    r10,QWORD PTR [rbp-0x3d0]
   4a49a:	test   rax,rax
   4a49d:	je     4a57a <vasnprintf+0xb2a>
   4a4a3:	mov    r8,rax
   4a4a6:	mov    BYTE PTR [r8+rbx*1],0x25
   4a4ab:	mov    r15,r8
   4a4ae:	mov    r9,QWORD PTR [r14+0x8]
   4a4b2:	mov    r13,QWORD PTR [r14+0x58]
   4a4b6:	add    r14,0x58
   4a4ba:	add    QWORD PTR [rbp-0x3f8],0x1
   4a4c2:	cmp    r13,r9
   4a4c5:	jne    49b7d <vasnprintf+0x12d>
   4a4cb:	mov    rbx,r10
   4a4ce:	mov    r8,r15
   4a4d1:	jmp    49c1a <vasnprintf+0x1ca>
   4a4d6:	cs nop WORD PTR [rax+rax*1+0x0]
   4a4e0:	mov    r12d,0xc
   4a4e6:	jmp    49bac <vasnprintf+0x15c>
   4a4eb:	nop    DWORD PTR [rax+rax*1+0x0]
   4a4f0:	mov    r8,r15
   4a4f3:	jmp    49bfd <vasnprintf+0x1ad>
   4a4f8:	nop    DWORD PTR [rax+rax*1+0x0]
   4a500:	mov    r13d,ecx
   4a503:	sub    r13d,0x22
   4a507:	cmp    r13d,0xc
   4a50b:	ja     128e9 <vasnprintf.cold>
   4a511:	lea    rcx,[rip+0x1de50]        # 68368 <wide_null_string.0+0x358>
   4a518:	mov    rax,QWORD PTR [rax+0x10]
   4a51c:	movsxd rdx,DWORD PTR [rcx+r13*4]
   4a520:	add    rdx,rcx
   4a523:	notrack jmp rdx
   4a526:	cs nop WORD PTR [rax+rax*1+0x0]
   4a530:	mov    QWORD PTR [rax],rbx
   4a533:	mov    r10,rbx
   4a536:	mov    r15,r8
   4a539:	jmp    4a4ae <vasnprintf+0xa5e>
   4a53e:	mov    BYTE PTR [rax],bl
   4a540:	mov    r10,rbx
   4a543:	mov    r15,r8
   4a546:	jmp    4a4ae <vasnprintf+0xa5e>
   4a54b:	mov    BYTE PTR [r13+0x0],0x6c
   4a550:	add    r13,0x1
   4a554:	mov    BYTE PTR [r13+0x0],0x6c
   4a559:	add    r13,0x1
   4a55d:	jmp    49d90 <vasnprintf+0x340>
   4a562:	cmp    r12,0xffffffffffffffff
   4a566:	je     4a610 <vasnprintf+0xbc0>
   4a56c:	nop    DWORD PTR [rax+0x0]
   4a570:	mov    r11,r8
   4a573:	mov    QWORD PTR [rbp-0x3c8],r11
   4a57a:	call   104b0 <__errno_location@plt>
   4a57f:	mov    r15,QWORD PTR [rbp-0x3c8]
   4a586:	mov    QWORD PTR [rbp-0x3d0],rax
   4a58d:	jmp    4a33d <vasnprintf+0x8ed>
   4a592:	nop    WORD PTR [rax+rax*1+0x0]
   4a598:	mov    DWORD PTR [rbp-0x3d8],0x0
   4a5a2:	jmp    49dcf <vasnprintf+0x37f>
   4a5a7:	nop    WORD PTR [rax+rax*1+0x0]
   4a5b0:	mov    rdi,r12
   4a5b3:	call   11af0 <malloc@plt>
   4a5b8:	mov    r10,QWORD PTR [rbp-0x3c8]
   4a5bf:	mov    r9,QWORD PTR [rbp-0x3d0]
   4a5c6:	test   rax,rax
   4a5c9:	mov    r8,rax
   4a5cc:	je     4a620 <vasnprintf+0xbd0>
   4a5ce:	test   r10,r10
   4a5d1:	je     49bfd <vasnprintf+0x1ad>
   4a5d7:	mov    rsi,QWORD PTR [rbp-0x3e8]
   4a5de:	mov    rdx,r10
   4a5e1:	mov    rdi,rax
   4a5e4:	mov    QWORD PTR [rbp-0x3d0],r9
   4a5eb:	mov    QWORD PTR [rbp-0x3c8],r10
   4a5f2:	call   11220 <memcpy@plt>
   4a5f7:	mov    r10,QWORD PTR [rbp-0x3c8]
   4a5fe:	mov    r9,QWORD PTR [rbp-0x3d0]
   4a605:	mov    r8,rax
   4a608:	jmp    49bfd <vasnprintf+0x1ad>
   4a60d:	nop    DWORD PTR [rax]
   4a610:	mov    r15,r8
   4a613:	jmp    49e66 <vasnprintf+0x416>
   4a618:	nop    DWORD PTR [rax+rax*1+0x0]
   4a620:	call   104b0 <__errno_location@plt>
   4a625:	mov    QWORD PTR [rbp-0x3d0],rax
   4a62c:	jmp    4a33d <vasnprintf+0x8ed>
   4a631:	nop    DWORD PTR [rax+0x0]
   4a638:	js     4a570 <vasnprintf+0xb20>
   4a63e:	add    r12,r12
   4a641:	cmp    r12,rax
   4a644:	jae    49e34 <vasnprintf+0x3e4>
   4a64a:	cmp    rax,0xffffffffffffffff
   4a64e:	je     4a570 <vasnprintf+0xb20>
   4a654:	mov    r12,rax
   4a657:	jmp    49e34 <vasnprintf+0x3e4>
   4a65c:	nop    DWORD PTR [rax+0x0]
   4a660:	movsxd rax,edx
   4a663:	mov    r15,r13
   4a666:	lea    r10,[rax+rbx*1]
   4a66a:	mov    rax,QWORD PTR [rbp-0x3d0]
   4a671:	mov    ebx,DWORD PTR [rbp-0x40c]
   4a677:	mov    DWORD PTR [rax],ebx
   4a679:	jmp    4a4ae <vasnprintf+0xa5e>
   4a67e:	xchg   ax,ax
   4a680:	mov    rax,QWORD PTR [rbp-0x3d0]
   4a687:	mov    r15,r13
   4a68a:	mov    DWORD PTR [rax],0x4b
   4a690:	jmp    4a140 <vasnprintf+0x6f0>
   4a695:	nop    DWORD PTR [rax]
   4a698:	mov    r12d,0xc
   4a69e:	jmp    4a45c <vasnprintf+0xa0c>
   4a6a3:	nop    DWORD PTR [rax+rax*1+0x0]
   4a6a8:	mov    rdi,r12
   4a6ab:	call   11af0 <malloc@plt>
   4a6b0:	mov    r15,rax
   4a6b3:	test   rax,rax
   4a6b6:	je     4a9a3 <vasnprintf+0xf53>
   4a6bc:	test   rbx,rbx
   4a6bf:	je     49e66 <vasnprintf+0x416>
   4a6c5:	mov    rsi,QWORD PTR [rbp-0x3e8]
   4a6cc:	mov    rdx,rbx
   4a6cf:	mov    rdi,rax
   4a6d2:	call   11220 <memcpy@plt>
   4a6d7:	jmp    49e66 <vasnprintf+0x416>
   4a6dc:	nop    DWORD PTR [rax+0x0]
   4a6e0:	sub    rsp,0x8
   4a6e4:	lea    rax,[rbp-0x3bc]
   4a6eb:	mov    r9d,DWORD PTR [rbp-0x3b8]
   4a6f2:	mov    r8,QWORD PTR [rbp-0x3e0]
   4a6f9:	push   rax
   4a6fa:	mov    eax,DWORD PTR [rbp-0x3b4]
   4a700:	mov    rcx,0xffffffffffffffff
   4a707:	mov    edx,0x1
   4a70c:	sub    rsp,0x18
   4a710:	fstp   TBYTE PTR [rsp+0x8]
   4a714:	push   rax
   4a715:	xor    eax,eax
   4a717:	call   10e30 <__snprintf_chk@plt>
   4a71c:	mov    r10,QWORD PTR [rbp-0x418]
   4a723:	add    rsp,0x30
   4a727:	jmp    49fb9 <vasnprintf+0x569>
   4a72c:	nop    DWORD PTR [rax+0x0]
   4a730:	sub    rsp,0x8
   4a734:	lea    rax,[rbp-0x3bc]
   4a73b:	push   rax
   4a73c:	sub    rsp,0x10
   4a740:	fstp   TBYTE PTR [rsp]
   4a743:	jmp    4a365 <vasnprintf+0x915>
   4a748:	nop    DWORD PTR [rax+rax*1+0x0]
   4a750:	lea    rax,[rbp-0x3bc]
   4a757:	push   rax
   4a758:	mov    eax,DWORD PTR [rbp-0x3b4]
   4a75e:	push   rax
   4a75f:	mov    r9d,DWORD PTR [rbp-0x3b8]
   4a766:	mov    r8,QWORD PTR [rbp-0x3e0]
   4a76d:	mov    edx,0x1
   4a772:	mov    rsi,r15
   4a775:	mov    rcx,0xffffffffffffffff
   4a77c:	mov    eax,0x1
   4a781:	call   10e30 <__snprintf_chk@plt>
   4a786:	pop    r8
   4a788:	mov    r10,QWORD PTR [rbp-0x418]
   4a78f:	pop    r9
   4a791:	jmp    49fb9 <vasnprintf+0x569>
   4a796:	cs nop WORD PTR [rax+rax*1+0x0]
   4a7a0:	sub    rsp,0x8
   4a7a4:	lea    rax,[rbp-0x3bc]
   4a7ab:	push   rax
   4a7ac:	jmp    4a75f <vasnprintf+0xd0f>
   4a7ae:	mov    rdi,r12
   4a7b1:	mov    QWORD PTR [rbp-0x3d0],r8
   4a7b8:	mov    QWORD PTR [rbp-0x3c8],r10
   4a7bf:	call   11af0 <malloc@plt>
   4a7c4:	mov    r10,QWORD PTR [rbp-0x3c8]
   4a7cb:	mov    r8,QWORD PTR [rbp-0x3d0]
   4a7d2:	test   rax,rax
   4a7d5:	je     4a9a3 <vasnprintf+0xf53>
   4a7db:	test   rbx,rbx
   4a7de:	je     4a99b <vasnprintf+0xf4b>
   4a7e4:	mov    rsi,r8
   4a7e7:	mov    rdx,rbx
   4a7ea:	mov    rdi,rax
   4a7ed:	mov    QWORD PTR [rbp-0x3c8],r10
   4a7f4:	call   11220 <memcpy@plt>
   4a7f9:	mov    r10,QWORD PTR [rbp-0x3c8]
   4a800:	mov    r8,rax
   4a803:	jmp    4a4a6 <vasnprintf+0xa56>
   4a808:	mov    WORD PTR [rax],bx
   4a80b:	mov    r10,rbx
   4a80e:	mov    r15,r8
   4a811:	jmp    4a4ae <vasnprintf+0xa5e>
   4a816:	mov    DWORD PTR [rax],ebx
   4a818:	mov    r10,rbx
   4a81b:	mov    r15,r8
   4a81e:	jmp    4a4ae <vasnprintf+0xa5e>
   4a823:	or     QWORD PTR [rsp+rdx*1-0x8],0x0
   4a829:	jmp    4a2f3 <vasnprintf+0x8a3>
   4a82e:	mov    r13,rbx
   4a831:	mov    r11,r8
   4a834:	add    r13,0x1
   4a838:	jb     4a9bb <vasnprintf+0xf6b>
   4a83e:	cmp    r12,r13
   4a841:	jae    4a887 <vasnprintf+0xe37>
   4a843:	test   r12,r12
   4a846:	jne    4a934 <vasnprintf+0xee4>
   4a84c:	cmp    r13,0xc
   4a850:	ja     4a946 <vasnprintf+0xef6>
   4a856:	mov    r12d,0xc
   4a85c:	cmp    r11,QWORD PTR [rbp-0x3e8]
   4a863:	je     4a958 <vasnprintf+0xf08>
   4a869:	mov    rdi,r11
   4a86c:	mov    rsi,r12
   4a86f:	mov    QWORD PTR [rbp-0x3c8],r11
   4a876:	call   12120 <realloc@plt>
   4a87b:	mov    r11,rax
   4a87e:	test   rax,rax
   4a881:	je     4a57a <vasnprintf+0xb2a>
   4a887:	mov    BYTE PTR [r11+rbx*1],0x0
   4a88c:	cmp    r12,r13
   4a88f:	jbe    4a8ba <vasnprintf+0xe6a>
   4a891:	cmp    r11,QWORD PTR [rbp-0x3e8]
   4a898:	je     4a8ba <vasnprintf+0xe6a>
   4a89a:	mov    rdi,r11
   4a89d:	mov    rsi,r13
   4a8a0:	mov    QWORD PTR [rbp-0x3c8],r11
   4a8a7:	call   12120 <realloc@plt>
   4a8ac:	mov    r11,QWORD PTR [rbp-0x3c8]
   4a8b3:	test   rax,rax
   4a8b6:	cmovne r11,rax
   4a8ba:	mov    rdi,QWORD PTR [rbp-0x408]
   4a8c1:	test   rdi,rdi
   4a8c4:	je     4a8d9 <vasnprintf+0xe89>
   4a8c6:	mov    QWORD PTR [rbp-0x3c8],r11
   4a8cd:	call   10430 <free@plt>
   4a8d2:	mov    r11,QWORD PTR [rbp-0x3c8]
   4a8d9:	mov    rdi,QWORD PTR [rbp-0x2b8]
   4a8e0:	lea    rax,[rbp-0x2a0]
   4a8e7:	cmp    rdi,rax
   4a8ea:	je     4a8ff <vasnprintf+0xeaf>
   4a8ec:	mov    QWORD PTR [rbp-0x3c8],r11
   4a8f3:	call   10430 <free@plt>
   4a8f8:	mov    r11,QWORD PTR [rbp-0x3c8]
   4a8ff:	mov    rdi,QWORD PTR [rbp-0x3a8]
   4a906:	lea    rax,[rbp-0x3a0]
   4a90d:	cmp    rdi,rax
   4a910:	je     4a925 <vasnprintf+0xed5>
   4a912:	mov    QWORD PTR [rbp-0x3c8],r11
   4a919:	call   10430 <free@plt>
   4a91e:	mov    r11,QWORD PTR [rbp-0x3c8]
   4a925:	mov    rax,QWORD PTR [rbp-0x400]
   4a92c:	mov    QWORD PTR [rax],rbx
   4a92f:	jmp    49f1a <vasnprintf+0x4ca>
   4a934:	js     4a573 <vasnprintf+0xb23>
   4a93a:	add    r12,r12
   4a93d:	cmp    r12,r13
   4a940:	jae    4a85c <vasnprintf+0xe0c>
   4a946:	cmp    r13,0xffffffffffffffff
   4a94a:	je     4a573 <vasnprintf+0xb23>
   4a950:	mov    r12,r13
   4a953:	jmp    4a85c <vasnprintf+0xe0c>
   4a958:	mov    rdi,r12
   4a95b:	mov    QWORD PTR [rbp-0x3c8],r11
   4a962:	call   11af0 <malloc@plt>
   4a967:	mov    r11,QWORD PTR [rbp-0x3c8]
   4a96e:	test   rax,rax
   4a971:	je     4a9a3 <vasnprintf+0xf53>
   4a973:	test   rbx,rbx
   4a976:	je     4a9ca <vasnprintf+0xf7a>
   4a978:	mov    rsi,r11
   4a97b:	mov    rdx,rbx
   4a97e:	mov    rdi,rax
   4a981:	call   11220 <memcpy@plt>
   4a986:	mov    r11,rax
   4a989:	jmp    4a887 <vasnprintf+0xe37>
   4a98e:	call   11760 <__stack_chk_fail@plt>
   4a993:	mov    r13,rax
   4a996:	jmp    49e90 <vasnprintf+0x440>
   4a99b:	mov    r8,rax
   4a99e:	jmp    4a4a6 <vasnprintf+0xa56>
   4a9a3:	call   104b0 <__errno_location@plt>
   4a9a8:	mov    r15,QWORD PTR [rbp-0x3e8]
   4a9af:	mov    QWORD PTR [rbp-0x3d0],rax
   4a9b6:	jmp    4a33d <vasnprintf+0x8ed>
   4a9bb:	cmp    r12,0xffffffffffffffff
   4a9bf:	je     4a887 <vasnprintf+0xe37>
   4a9c5:	jmp    4a573 <vasnprintf+0xb23>
   4a9ca:	mov    r11,rax
   4a9cd:	jmp    4a887 <vasnprintf+0xe37>
   4a9d2:	cs nop WORD PTR [rax+rax*1+0x0]
   4a9dc:	nop    DWORD PTR [rax+0x0]

000000000004a9e0 <atexit>:
   4a9e0:	endbr64 
   4a9e4:	mov    rdx,QWORD PTR [rip+0x2c815]        # 77200 <__dso_handle>
   4a9eb:	xor    esi,esi
   4a9ed:	jmp    113b0 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000004a9f4 <_fini>:
   4a9f4:	endbr64 
   4a9f8:	sub    rsp,0x8
   4a9fc:	add    rsp,0x8
   4aa00:	ret    
