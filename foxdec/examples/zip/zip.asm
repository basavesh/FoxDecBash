extern ___bzero
extern ___error
extern ___maskrune
extern ___sprintf_chk
extern ___stack_chk_fail
extern ___strcat_chk
extern ___strcpy_chk
extern ___strncat_chk
extern ___toupper
extern _asctime
extern _atoi
extern _chmod
extern _clearerr
extern _close
extern _closedir
extern _exit
extern _fclose
extern _fdopen
extern _feof
extern _ferror
extern _fflush
extern _fgets
extern _fileno
extern _fopen
extern _fprintf
extern _fputc
extern _fputs
extern _fread
extern _free
extern _fseeko
extern _fstat$INODE64
extern _ftello
extern _fwrite
extern _getc
extern _getenv
extern _getpid
extern _isatty
extern _localtime
extern _lstat$INODE64
extern _malloc
extern _memcpy
extern _memmove
extern _memset
extern _mkstemp
extern _mktime
extern _open
extern _opendir$INODE64
extern _pclose
extern _perror
extern _popen
extern _posix_spawnp
extern _printf
extern _putc
extern _putchar
extern _puts
extern _qsort
extern _rand
extern _read
extern _readdir$INODE64
extern _readlink
extern _realloc
extern _rename
extern _rewind
extern _rmdir
extern _setvbuf
extern _signal
extern _sprintf
extern _srand
extern _sscanf
extern _stat$INODE64
extern _strcat
extern _strchr
extern _strcmp
extern _strcpy
extern _strerror
extern _strlen
extern _strncmp
extern _strncpy
extern _strrchr
extern _strstr
extern _tcgetattr
extern _tcsetattr
extern _time
extern _tzset
extern _ungetc
extern _unlink
extern _utime
extern _waitpid
extern __DefaultRuneLocale
extern ____chkstk_darwin
extern ___stack_chk_guard
extern ___stderrp
extern ___stdinp
extern ___stdoutp
extern dyld_stub_binder


section .text

default rel

; ---------------------
; Function: 0x100002e30
; ---------------------
; Entry 100002e30; block 0; address 100002e30
L100002e30_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    MOV EAX, dword [rel L__DATA___bss + 0]
    LEA ECX, [RAX + 1]
    MOV dword [rel L__DATA___bss + 0], ECX
    TEST EAX, EAX
    JLE L100002e30_2
    JMP L100002e30_1     ; inserted

; Entry 100002e30; block 1; address 100002e51
L100002e30_1:
    MOV EDI, 5
    CALL _exit

; Entry 100002e30; block 2; address 100002e5b
L100002e30_2:
    MOV R15, RSI
    MOV dword [RBP + -44], EDI
    LEA RBX, [rel L__DATA___common + 604]
    CMP dword [RBX], 0
    JE L100002e30_4
    JMP L100002e30_3     ; inserted

; Entry 100002e30; block 3; address 100002e6d
L100002e30_3:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RAX]
    MOV EDI, 10
    CALL _fputc
    JMP L100002e30_5     ; inserted

; Entry 100002e30; block 4; address 100002e87
L100002e30_4:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RSI, qword [RAX]
    LEA R13, [rel L__DATA___common + 608]
    TEST RSI, RSI
    JE L100002e30_7
    JMP L100002e30_6     ; inserted

; Entry 100002e30; block 5; address 100002e81
L100002e30_5:
    MOV dword [RBX], 0
    JMP L100002e30_4     ; inserted

; Entry 100002e30; block 6; address 100002e9d
L100002e30_6:
    CMP dword [R13], 0
    JE L100002e30_7
    JMP L100002e30_8     ; inserted

; Entry 100002e30; block 7; address 100002eb6
L100002e30_7:
    TEST R15, R15
    JE L100002e30_11
    JMP L100002e30_10     ; inserted

; Entry 100002e30; block 8; address 100002ea4
L100002e30_8:
    MOV EDI, 10
    CALL _fputc
    JMP L100002e30_9     ; inserted

; Entry 100002e30; block 9; address 100002eae
L100002e30_9:
    MOV dword [R13], 0
    JMP L100002e30_7     ; inserted

; Entry 100002e30; block 10; address 100002ebf
L100002e30_10:
    MOVSXD RAX, dword [RBP + -44]
    LEA R12, [RAX + RAX * 2]
    LEA R14, [rel L__DATA___data + 3984]
    TEST byte [R14 + R12 * 8 + 16], 16
    JE L100002e30_13
    JMP L100002e30_12     ; inserted

; Entry 100002e30; block 11; address 100002f8f
L100002e30_11:
    LEA RBX, [rel L__DATA___common + 384]
    MOV RDX, qword [RBX]
    TEST RDX, RDX
    JE L100002e30_26
    JMP L100002e30_25     ; inserted

; Entry 100002e30; block 12; address 100002ed6
L100002e30_12:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RBX, qword [RAX]
    CALL ___error
    JMP L100002e30_14     ; inserted

; Entry 100002e30; block 13; address 100002f00
L100002e30_13:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L100002e30_16     ; inserted

; Entry 100002e30; block 14; address 100002ee5
L100002e30_14:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L100002e30_15     ; inserted

; Entry 100002e30; block 15; address 100002eec
L100002e30_15:
    LEA RSI, [rel L__TEXT___cstring_3933]
    MOV RDI, RBX
    MOV RDX, RAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L100002e30_13     ; inserted

; Entry 100002e30; block 16; address 100002f0f
L100002e30_16:
    MOV RDI, qword [RBX]
    MOV RDX, qword [R14 + R12 * 8 + 8]
    LEA RSI, [rel L__TEXT___cstring_3951]
    MOV RCX, R15
    XOR EAX, EAX
    CALL _fprintf
    JMP L100002e30_17     ; inserted

; Entry 100002e30; block 17; address 100002f28
L100002e30_17:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L100002e30_11
    JMP L100002e30_18     ; inserted

; Entry 100002e30; block 18; address 100002f37
L100002e30_18:
    LEA R14, [R14 + R12 * 8]
    ADD R14, 16
    TEST byte [R14], 16
    JE L100002e30_20
    JMP L100002e30_19     ; inserted

; Entry 100002e30; block 19; address 100002f45
L100002e30_19:
    CALL ___error
    JMP L100002e30_21     ; inserted

; Entry 100002e30; block 20; address 100002f6f
L100002e30_20:
    MOV RDX, qword [R14 + -8]
    LEA RSI, [rel L__TEXT___cstring_3951]
    MOV RDI, RBX
    MOV RCX, R15
    XOR EAX, EAX
    CALL _fprintf
    JMP L100002e30_24     ; inserted

; Entry 100002e30; block 21; address 100002f4a
L100002e30_21:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L100002e30_22     ; inserted

; Entry 100002e30; block 22; address 100002f51
L100002e30_22:
    LEA RSI, [rel L__TEXT___cstring_3972]
    MOV RDI, RBX
    MOV RDX, RAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L100002e30_23     ; inserted

; Entry 100002e30; block 23; address 100002f65
L100002e30_23:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RBX, qword [RAX]
    JMP L100002e30_20     ; inserted

; Entry 100002e30; block 24; address 100002f87
L100002e30_24:
    MOV dword [R13], 0
    JMP L100002e30_11     ; inserted

; Entry 100002e30; block 25; address 100002fa2
L100002e30_25:
    LEA R14, [rel L__DATA___common + 6376]
    CMP RDX, qword [R14]
    JNE L100002e30_28
    JMP L100002e30_27     ; inserted

; Entry 100002e30; block 26; address 1000030db
L100002e30_26:
    LEA RBX, [rel L__DATA___common + 312]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L100002e30_48
    JMP L100002e30_47     ; inserted

; Entry 100002e30; block 27; address 100002fb2
L100002e30_27:
    LEA RBX, [rel L__DATA___common + 1200]
    MOV R15, qword [RBX]
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_3991]
    XOR EAX, EAX
    CALL _fprintf
    JMP L100002e30_29     ; inserted

; Entry 100002e30; block 28; address 100003097
L100002e30_28:
    LEA R14, [rel L__DATA___common + 536]
    MOV RDI, qword [R14]
    TEST RDI, RDI
    JNE L100002e30_40
    JMP L100002e30_39     ; inserted

; Entry 100002e30; block 29; address 100002fd4
L100002e30_29:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RDI, qword [RAX]
    TEST RDI, RDI
    JE L100002e30_31
    JMP L100002e30_30     ; inserted

; Entry 100002e30; block 30; address 100002fe3
L100002e30_30:
    MOV RDX, qword [R14]
    LEA RSI, [rel L__TEXT___cstring_3991]
    XOR EAX, EAX
    CALL _fprintf
    JMP L100002e30_31     ; inserted

; Entry 100002e30; block 31; address 100002ff4
L100002e30_31:
    LEA R13, [rel L__DATA___common + 392]
    MOV RDI, qword [R13]
    MOV RSI, qword [RBX]
    XOR R12D, R12D
    XOR EDX, EDX
    CALL _fseeko
    JMP L100002e30_32     ; inserted

; Entry 100002e30; block 32; address 10000300c
L100002e30_32:
    MOV RSI, qword [RBX]
    LEA R14, [rel L__DATA___common + 6344]
    MOV qword [R14], RSI
    LEA RAX, [rel L__DATA___common + 616]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L100002e30_34
    JMP L100002e30_33     ; inserted

; Entry 100002e30; block 33; address 100003028
L100002e30_33:
    XOR R12D, R12D
    JMP L100002e30_36     ; inserted

; Entry 100002e30; block 34; address 100003062
L100002e30_34:
    SUB RSI, R15
    LEA RAX, [rel L__DATA___common + 6352]
    MOVZX ECX, word [RAX]
    LEA RAX, [rel L__DATA___common + 632]
    MOV R8, qword [RAX]
    MOV RDI, R12
    MOV RDX, R15
    CALL L10000de58_0
    JMP L100002e30_37     ; inserted

; Entry 100002e30; block 35; address 100003033
L100002e30_35:
    MOVZX EAX, word [RBX + 40]
    MOVZX ECX, word [RBX + 44]
    ADD RCX, RAX
    MOVZX EAX, word [RBX + 46]
    ADD RAX, RCX
    MOV RCX, qword [R14]
    LEA RSI, [RCX + RAX]
    ADD RSI, 46
    MOV qword [R14], RSI
    INC R12
    MOV RBX, qword [RBX + 152]
    TEST RBX, RBX
    JNE L100002e30_36
    JMP L100002e30_34     ; inserted

; Entry 100002e30; block 36; address 10000302b
L100002e30_36:
    MOV RDI, RBX
    CALL L10000d930_0
    JMP L100002e30_35     ; inserted

; Entry 100002e30; block 37; address 100003084
L100002e30_37:
    MOV RDI, qword [R13]
    CALL _fclose
    JMP L100002e30_38     ; inserted

; Entry 100002e30; block 38; address 10000308d
L100002e30_38:
    MOV qword [R13], 0
    JMP L100002e30_26

; Entry 100002e30; block 39; address 1000030a6
L100002e30_39:
    XOR EAX, EAX
    JMP L100002e30_42

; Entry 100002e30; block 40; address 1000030aa
L100002e30_40:
    CALL _fclose
    JMP L100002e30_41     ; inserted

; Entry 100002e30; block 41; address 1000030af
L100002e30_41:
    MOV RAX, qword [R14]
    JMP L100002e30_42     ; inserted

; Entry 100002e30; block 42; address 1000030b2
L100002e30_42:
    LEA RCX, [rel L__DATA___common + 392]
    MOV RDI, qword [RCX]
    TEST RDI, RDI
    JE L100002e30_44
    JMP L100002e30_43     ; inserted

; Entry 100002e30; block 43; address 1000030c1
L100002e30_43:
    CMP RDI, RAX
    JE L100002e30_44
    JMP L100002e30_45     ; inserted

; Entry 100002e30; block 44; address 1000030cb
L100002e30_44:
    MOV RDI, qword [RBX]
    CALL L10001160a_0
    JMP L100002e30_46     ; inserted

; Entry 100002e30; block 45; address 1000030c6
L100002e30_45:
    CALL _fclose
    JMP L100002e30_44     ; inserted

; Entry 100002e30; block 46; address 1000030d3
L100002e30_46:
    MOV RDI, qword [RBX]
    CALL _free
    JMP L100002e30_26     ; inserted

; Entry 100002e30; block 47; address 1000030ea
L100002e30_47:
    CALL _free
    JMP L100002e30_49     ; inserted

; Entry 100002e30; block 48; address 1000030f6
L100002e30_48:
    LEA RBX, [rel L__DATA___common + 320]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L100002e30_51
    JMP L100002e30_50     ; inserted

; Entry 100002e30; block 49; address 1000030ef
L100002e30_49:
    MOV qword [RBX], 0
    JMP L100002e30_48     ; inserted

; Entry 100002e30; block 50; address 100003105
L100002e30_50:
    CALL _free
    JMP L100002e30_52     ; inserted

; Entry 100002e30; block 51; address 100003111
L100002e30_51:
    LEA RBX, [rel L__DATA___common + 6376]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L100002e30_54
    JMP L100002e30_53     ; inserted

; Entry 100002e30; block 52; address 10000310a
L100002e30_52:
    MOV qword [RBX], 0
    JMP L100002e30_51     ; inserted

; Entry 100002e30; block 53; address 100003120
L100002e30_53:
    CALL _free
    JMP L100002e30_55     ; inserted

; Entry 100002e30; block 54; address 10000312c
L100002e30_54:
    LEA RBX, [rel L__DATA___common + 424]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L100002e30_57
    JMP L100002e30_56     ; inserted

; Entry 100002e30; block 55; address 100003125
L100002e30_55:
    MOV qword [RBX], 0
    JMP L100002e30_54     ; inserted

; Entry 100002e30; block 56; address 10000313b
L100002e30_56:
    CALL _free
    JMP L100002e30_58     ; inserted

; Entry 100002e30; block 57; address 100003147
L100002e30_57:
    LEA RBX, [rel L__DATA___common + 632]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L100002e30_60
    JMP L100002e30_59     ; inserted

; Entry 100002e30; block 58; address 100003140
L100002e30_58:
    MOV qword [RBX], 0
    JMP L100002e30_57     ; inserted

; Entry 100002e30; block 59; address 100003156
L100002e30_59:
    CALL _free
    JMP L100002e30_61     ; inserted

; Entry 100002e30; block 60; address 100003162
L100002e30_60:
    CALL L10000316f_0
    JMP L100002e30_62     ; inserted

; Entry 100002e30; block 61; address 10000315b
L100002e30_61:
    MOV qword [RBX], 0
    JMP L100002e30_60     ; inserted

; Entry 100002e30; block 62; address 100003167
L100002e30_62:
    MOV EDI, dword [RBP + -44]
    CALL _exit



; ---------------------
; Function: 0x10000316f
; ---------------------
; Entry 10000316f; block 0; address 10000316f
L10000316f_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    LEA RAX, [rel L__DATA___common + 640]
    MOV RAX, qword [RAX]
    JMP L10000316f_4     ; inserted

; Entry 10000316f; block 1; address 100003188
L10000316f_1:
    MOV RDI, RAX
    CALL L1000107a9_0
    JMP L10000316f_3     ; inserted

; Entry 10000316f; block 2; address 100003192
L10000316f_2:
    LEA R15, [rel L__DATA___common + 616]
    MOV RDI, qword [R15]
    TEST RDI, RDI
    JE L10000316f_6
    JMP L10000316f_5     ; inserted

; Entry 10000316f; block 3; address 100003190
L10000316f_3:
    JMP L10000316f_4

; Entry 10000316f; block 4; address 100003183
L10000316f_4:
    TEST RAX, RAX
    JE L10000316f_2
    JMP L10000316f_1     ; inserted

; Entry 10000316f; block 5; address 1000031a5
L10000316f_5:
    LEA R14, [rel L__DATA___common + 6360]
    JMP L10000316f_34     ; inserted

; Entry 10000316f; block 6; address 10000327a
L10000316f_6:
    LEA R14, [rel L__DATA___common + 648]
    MOV RDI, qword [R14]
    TEST RDI, RDI
    JE L10000316f_36
    JMP L10000316f_35     ; inserted

; Entry 10000316f; block 7; address 1000031bc
L10000316f_7:
    CMP RAX, qword [RDI + 80]
    JE L10000316f_8
    JMP L10000316f_9     ; inserted

; Entry 10000316f; block 8; address 1000031cd
L10000316f_8:
    MOV RAX, qword [RDI + 80]
    TEST RAX, RAX
    JE L10000316f_12
    JMP L10000316f_11     ; inserted

; Entry 10000316f; block 9; address 1000031c2
L10000316f_9:
    MOV RDI, RAX
    CALL _free
    JMP L10000316f_10     ; inserted

; Entry 10000316f; block 10; address 1000031ca
L10000316f_10:
    MOV RDI, qword [R15]
    JMP L10000316f_8     ; inserted

; Entry 10000316f; block 11; address 1000031d6
L10000316f_11:
    MOV RDI, RAX
    CALL _free
    JMP L10000316f_13     ; inserted

; Entry 10000316f; block 12; address 1000031e1
L10000316f_12:
    MOV RAX, qword [RDI + 112]
    TEST RAX, RAX
    JE L10000316f_15
    JMP L10000316f_14     ; inserted

; Entry 10000316f; block 13; address 1000031de
L10000316f_13:
    MOV RDI, qword [R15]
    JMP L10000316f_12     ; inserted

; Entry 10000316f; block 14; address 1000031ea
L10000316f_14:
    MOV RDI, RAX
    CALL _free
    JMP L10000316f_16     ; inserted

; Entry 10000316f; block 15; address 1000031f5
L10000316f_15:
    CMP word [RDI + 44], 0
    JE L10000316f_18
    JMP L10000316f_17     ; inserted

; Entry 10000316f; block 16; address 1000031f2
L10000316f_16:
    MOV RDI, qword [R15]
    JMP L10000316f_15     ; inserted

; Entry 10000316f; block 17; address 1000031fc
L10000316f_17:
    MOV RAX, qword [RDI + 96]
    TEST RAX, RAX
    JE L10000316f_18
    JMP L10000316f_19     ; inserted

; Entry 10000316f; block 18; address 100003216
L10000316f_18:
    CMP word [RDI + 42], 0
    JE L10000316f_23
    JMP L10000316f_22     ; inserted

; Entry 10000316f; block 19; address 100003205
L10000316f_19:
    CMP RAX, qword [RDI + 88]
    JE L10000316f_18
    JMP L10000316f_20     ; inserted

; Entry 10000316f; block 20; address 10000320b
L10000316f_20:
    MOV RDI, RAX
    CALL _free
    JMP L10000316f_21     ; inserted

; Entry 10000316f; block 21; address 100003213
L10000316f_21:
    MOV RDI, qword [R15]
    JMP L10000316f_18     ; inserted

; Entry 10000316f; block 22; address 10000321d
L10000316f_22:
    MOV RAX, qword [RDI + 88]
    TEST RAX, RAX
    JE L10000316f_23
    JMP L10000316f_24     ; inserted

; Entry 10000316f; block 23; address 100003231
L10000316f_23:
    CMP word [RDI + 46], 0
    JE L10000316f_27
    JMP L10000316f_26     ; inserted

; Entry 10000316f; block 24; address 100003226
L10000316f_24:
    MOV RDI, RAX
    CALL _free
    JMP L10000316f_25     ; inserted

; Entry 10000316f; block 25; address 10000322e
L10000316f_25:
    MOV RDI, qword [R15]
    JMP L10000316f_23     ; inserted

; Entry 10000316f; block 26; address 100003238
L10000316f_26:
    MOV RAX, qword [RDI + 104]
    TEST RAX, RAX
    JE L10000316f_27
    JMP L10000316f_28     ; inserted

; Entry 10000316f; block 27; address 10000324c
L10000316f_27:
    MOV RAX, qword [RDI + 128]
    TEST RAX, RAX
    JE L10000316f_31
    JMP L10000316f_30     ; inserted

; Entry 10000316f; block 28; address 100003241
L10000316f_28:
    MOV RDI, RAX
    CALL _free
    JMP L10000316f_29     ; inserted

; Entry 10000316f; block 29; address 100003249
L10000316f_29:
    MOV RDI, qword [R15]
    JMP L10000316f_27     ; inserted

; Entry 10000316f; block 30; address 100003258
L10000316f_30:
    MOV RDI, RAX
    CALL _free
    JMP L10000316f_32     ; inserted

; Entry 10000316f; block 31; address 100003263
L10000316f_31:
    CALL _free
    JMP L10000316f_33     ; inserted

; Entry 10000316f; block 32; address 100003260
L10000316f_32:
    MOV RDI, qword [R15]
    JMP L10000316f_31     ; inserted

; Entry 10000316f; block 33; address 100003268
L10000316f_33:
    MOV qword [R15], RBX
    DEC qword [R14]
    MOV RDI, RBX
    TEST RBX, RBX
    JNE L10000316f_34
    JMP L10000316f_6     ; inserted

; Entry 10000316f; block 34; address 1000031ac
L10000316f_34:
    MOV RAX, qword [RDI + 120]
    MOV RBX, qword [RDI + 152]
    TEST RAX, RAX
    JE L10000316f_8
    JMP L10000316f_7     ; inserted

; Entry 10000316f; block 35; address 100003289
L10000316f_35:
    LEA RBX, [rel L__DATA___common + 656]
    MOV EAX, dword [RBX]
    SUB EAX, 1
    MOV dword [RBX], EAX
    JB L10000316f_38
    JMP L10000316f_37     ; inserted

; Entry 10000316f; block 36; address 1000032ca
L10000316f_36:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RDI, qword [RAX]
    ADD RSP, 8
    TEST RDI, RDI
    JE L10000316f_46
    JMP L10000316f_45     ; inserted

; Entry 10000316f; block 37; address 100003299
L10000316f_37:
    MOV ECX, EAX
    SHL RCX, 4
    MOV RDI, qword [RDI + RCX]
    TEST RDI, RDI
    JE L10000316f_40
    JMP L10000316f_39     ; inserted

; Entry 10000316f; block 38; address 1000032be
L10000316f_38:
    CALL _free
    JMP L10000316f_44     ; inserted

; Entry 10000316f; block 39; address 1000032a8
L10000316f_39:
    CALL _free
    JMP L10000316f_41     ; inserted

; Entry 10000316f; block 40; address 1000032af
L10000316f_40:
    SUB EAX, 1
    MOV dword [RBX], EAX
    JB L10000316f_43
    JMP L10000316f_42     ; inserted

; Entry 10000316f; block 41; address 1000032ad
L10000316f_41:
    MOV EAX, dword [RBX]
    JMP L10000316f_40     ; inserted

; Entry 10000316f; block 42; address 1000032b6
L10000316f_42:
    MOV RDI, qword [R14]
    JMP L10000316f_37

; Entry 10000316f; block 43; address 1000032bb
L10000316f_43:
    MOV RDI, qword [R14]
    JMP L10000316f_38     ; inserted

; Entry 10000316f; block 44; address 1000032c3
L10000316f_44:
    MOV qword [R14], 0
    JMP L10000316f_36     ; inserted

; Entry 10000316f; block 45; address 1000032dd
L10000316f_45:
    POP RBX
    POP R14
    POP R15
    POP RBP
    JMP _fclose

; Entry 10000316f; block 46; address 1000032e8
L10000316f_46:
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x1000032ef
; ---------------------
; Entry 1000032ef; block 0; address 1000032ef
L1000032ef_0:
    PUSH RBP
    MOV RBP, RSP
    MOV RSI, RDI
    MOV EDI, 5
    CALL L100002e30_0



; ---------------------
; Function: 0x100003300
; ---------------------
; Entry 100003300; block 0; address 100003300
L100003300_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV R14D, ESI
    MOV RBX, RDI
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L100003300_2
    JMP L100003300_1     ; inserted

; Entry 100003300; block 1; address 10000331c
L100003300_1:
    TEST RBX, RBX
    JE L100003300_4
    JMP L100003300_3     ; inserted

; Entry 100003300; block 2; address 10000339a
L100003300_2:
    LEA R15, [rel L__DATA___common + 240]
    MOV RSI, qword [R15]
    TEST RSI, RSI
    JE L100003300_15
    JMP L100003300_14     ; inserted

; Entry 100003300; block 3; address 100003321
L100003300_3:
    CMP byte [RBX], 0
    JE L100003300_6
    JMP L100003300_5     ; inserted

; Entry 100003300; block 4; address 10000335e
L100003300_4:
    TEST R14D, R14D
    JE L100003300_11
    JMP L100003300_9     ; inserted

; Entry 100003300; block 5; address 100003326
L100003300_5:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RAX]
    MOV RDI, RBX
    CALL _fputs
    JMP L100003300_7     ; inserted

; Entry 100003300; block 6; address 100003345
L100003300_6:
    TEST R14D, R14D
    JNE L100003300_9
    JMP L100003300_8     ; inserted

; Entry 100003300; block 7; address 100003338
L100003300_7:
    LEA RAX, [rel L__DATA___common + 604]
    MOV dword [RAX], 1
    JMP L100003300_6     ; inserted

; Entry 100003300; block 8; address 10000334a
L100003300_8:
    CMP byte [RBX], 0
    JE L100003300_11
    JMP L100003300_10     ; inserted

; Entry 100003300; block 9; address 100003363
L100003300_9:
    LEA R15, [rel L__DATA___common + 604]
    CMP dword [R15], 0
    JE L100003300_11
    JMP L100003300_12     ; inserted

; Entry 100003300; block 10; address 10000334f
L100003300_10:
    LEA RAX, [rel L__DATA___common + 604]
    MOV dword [RAX], 1
    JMP L100003300_11

; Entry 100003300; block 11; address 10000338b
L100003300_11:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    CALL _fflush
    JMP L100003300_2     ; inserted

; Entry 100003300; block 12; address 100003370
L100003300_12:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RAX]
    MOV EDI, 10
    CALL _fputc
    JMP L100003300_13     ; inserted

; Entry 100003300; block 13; address 100003384
L100003300_13:
    MOV dword [R15], 0
    JMP L100003300_11     ; inserted

; Entry 100003300; block 14; address 1000033a9
L100003300_14:
    TEST RBX, RBX
    JE L100003300_17
    JMP L100003300_16     ; inserted

; Entry 100003300; block 15; address 1000033e1
L100003300_15:
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100003300; block 16; address 1000033ae
L100003300_16:
    CMP byte [RBX], 0
    JE L100003300_19
    JMP L100003300_18     ; inserted

; Entry 100003300; block 17; address 1000033ec
L100003300_17:
    TEST R14D, R14D
    JE L100003300_24
    JMP L100003300_22     ; inserted

; Entry 100003300; block 18; address 1000033b3
L100003300_18:
    MOV RDI, RBX
    CALL _fputs
    JMP L100003300_20     ; inserted

; Entry 100003300; block 19; address 1000033c8
L100003300_19:
    TEST R14D, R14D
    JNE L100003300_22
    JMP L100003300_21     ; inserted

; Entry 100003300; block 20; address 1000033bb
L100003300_20:
    LEA RAX, [rel L__DATA___common + 608]
    MOV dword [RAX], 1
    JMP L100003300_19     ; inserted

; Entry 100003300; block 21; address 1000033cd
L100003300_21:
    CMP byte [RBX], 0
    JE L100003300_24
    JMP L100003300_23     ; inserted

; Entry 100003300; block 22; address 1000033f1
L100003300_22:
    LEA RBX, [rel L__DATA___common + 608]
    CMP dword [RBX], 0
    JE L100003300_24
    JMP L100003300_25     ; inserted

; Entry 100003300; block 23; address 1000033d2
L100003300_23:
    LEA RAX, [rel L__DATA___common + 608]
    MOV dword [RAX], 1
    JMP L100003300_24

; Entry 100003300; block 24; address 100003410
L100003300_24:
    MOV RDI, qword [R15]
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    JMP _fflush

; Entry 100003300; block 25; address 1000033fd
L100003300_25:
    MOV RSI, qword [R15]
    MOV EDI, 10
    CALL _fputc
    JMP L100003300_26     ; inserted

; Entry 100003300; block 26; address 10000340a
L100003300_26:
    MOV dword [RBX], 0
    JMP L100003300_24     ; inserted



; ---------------------
; Function: 0x100003422
; ---------------------
; Entry 100003422; block 0; address 100003422
L100003422_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    MOV R14, RSI
    MOV R15, RDI
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L100003422_2
    JMP L100003422_1     ; inserted

; Entry 100003422; block 1; address 10000343f
L100003422_1:
    LEA R12, [rel L__DATA___common + 604]
    CMP dword [R12], 0
    JE L100003422_4
    JMP L100003422_3     ; inserted

; Entry 100003422; block 2; address 10000348f
L100003422_2:
    LEA RBX, [rel L__DATA___common + 240]
    MOV RAX, qword [RBX]
    TEST RAX, RAX
    JE L100003422_7
    JMP L100003422_6     ; inserted

; Entry 100003422; block 3; address 10000344d
L100003422_3:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RAX]
    MOV EDI, 10
    CALL _fputc
    JMP L100003422_4     ; inserted

; Entry 100003422; block 4; address 100003461
L100003422_4:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RBX]
    LEA RSI, [rel L__TEXT___cstring_4039]
    MOV RDX, R15
    MOV RCX, R14
    XOR EAX, EAX
    CALL _fprintf
    JMP L100003422_5     ; inserted

; Entry 100003422; block 5; address 10000347f
L100003422_5:
    MOV dword [R12], 0
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L100003422_2     ; inserted

; Entry 100003422; block 6; address 10000349e
L100003422_6:
    LEA R12, [rel L__DATA___common + 608]
    CMP dword [R12], 0
    JE L100003422_9
    JMP L100003422_8     ; inserted

; Entry 100003422; block 7; address 1000034eb
L100003422_7:
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100003422; block 8; address 1000034ac
L100003422_8:
    MOV EDI, 10
    MOV RSI, RAX
    CALL _fputc
    JMP L100003422_10     ; inserted

; Entry 100003422; block 9; address 1000034bc
L100003422_9:
    LEA RSI, [rel L__TEXT___cstring_4039]
    MOV RDI, RAX
    MOV RDX, R15
    MOV RCX, R14
    XOR EAX, EAX
    CALL _fprintf
    JMP L100003422_11     ; inserted

; Entry 100003422; block 10; address 1000034b9
L100003422_10:
    MOV RAX, qword [RBX]
    JMP L100003422_9     ; inserted

; Entry 100003422; block 11; address 1000034d3
L100003422_11:
    MOV dword [R12], 0
    MOV RDI, qword [RBX]
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    JMP _fflush



; ---------------------
; Function: 0x1000034f4
; ---------------------
; Entry 1000034f4; block 0; address 1000034f4
L1000034f4_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    MOV R14, RSI
    MOV R15, RDI
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L1000034f4_2
    JMP L1000034f4_1     ; inserted

; Entry 1000034f4; block 1; address 100003511
L1000034f4_1:
    LEA R12, [rel L__DATA___common + 604]
    CMP dword [R12], 0
    JE L1000034f4_4
    JMP L1000034f4_3     ; inserted

; Entry 1000034f4; block 2; address 100003561
L1000034f4_2:
    LEA RBX, [rel L__DATA___common + 240]
    MOV RAX, qword [RBX]
    TEST RAX, RAX
    JE L1000034f4_7
    JMP L1000034f4_6     ; inserted

; Entry 1000034f4; block 3; address 10000351f
L1000034f4_3:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RAX]
    MOV EDI, 10
    CALL _fputc
    JMP L1000034f4_4     ; inserted

; Entry 1000034f4; block 4; address 100003533
L1000034f4_4:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RBX]
    LEA RSI, [rel L__TEXT___cstring_4045]
    MOV RDX, R15
    MOV RCX, R14
    XOR EAX, EAX
    CALL _fprintf
    JMP L1000034f4_5     ; inserted

; Entry 1000034f4; block 5; address 100003551
L1000034f4_5:
    MOV dword [R12], 0
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L1000034f4_2     ; inserted

; Entry 1000034f4; block 6; address 100003570
L1000034f4_6:
    LEA R12, [rel L__DATA___common + 608]
    CMP dword [R12], 0
    JE L1000034f4_9
    JMP L1000034f4_8     ; inserted

; Entry 1000034f4; block 7; address 1000035bd
L1000034f4_7:
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000034f4; block 8; address 10000357e
L1000034f4_8:
    MOV EDI, 10
    MOV RSI, RAX
    CALL _fputc
    JMP L1000034f4_10     ; inserted

; Entry 1000034f4; block 9; address 10000358e
L1000034f4_9:
    LEA RSI, [rel L__TEXT___cstring_4045]
    MOV RDI, RAX
    MOV RDX, R15
    MOV RCX, R14
    XOR EAX, EAX
    CALL _fprintf
    JMP L1000034f4_11     ; inserted

; Entry 1000034f4; block 10; address 10000358b
L1000034f4_10:
    MOV RAX, qword [RBX]
    JMP L1000034f4_9     ; inserted

; Entry 1000034f4; block 11; address 1000035a5
L1000034f4_11:
    MOV dword [R12], 0
    MOV RDI, qword [RBX]
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    JMP _fflush



; ---------------------
; Function: 0x1000035fe
; ---------------------
; Entry 1000035fe; block 0; address 1000035fe
L1000035fe_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV RBX, RSI
    MOV R15, RDI
    MOV RDI, RSI
    MOV RSI, R15
    CALL L100011614_0
    JMP L1000035fe_1     ; inserted

; Entry 1000035fe; block 1; address 100003619
L1000035fe_1:
    TEST EAX, EAX
    JNE L1000035fe_3
    JMP L1000035fe_2     ; inserted

; Entry 1000035fe; block 2; address 10000361d
L1000035fe_2:
    LEA RAX, [rel L__DATA___common + 432]
    MOV ESI, dword [RAX]
    TEST ESI, ESI
    JE L1000035fe_5
    JMP L1000035fe_4     ; inserted

; Entry 1000035fe; block 3; address 10000363f
L1000035fe_3:
    MOV R14D, EAX
    LEA RDI, [rel L__TEXT___cstring_4120]
    MOV RSI, R15
    CALL L1000034f4_0
    JMP L1000035fe_6     ; inserted

; Entry 1000035fe; block 4; address 10000362a
L1000035fe_4:
    MOV RDI, RBX
    CALL L100011897_0
    JMP L1000035fe_5     ; inserted

; Entry 1000035fe; block 5; address 100003632
L1000035fe_5:
    XOR EAX, EAX
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000035fe; block 6; address 100003651
L1000035fe_6:
    LEA RBX, [rel L__DATA___common + 384]
    MOV RDI, qword [RBX]
    CALL _free
    JMP L1000035fe_7     ; inserted

; Entry 1000035fe; block 7; address 100003660
L1000035fe_7:
    MOV qword [RBX], 0
    LEA RSI, [rel L__TEXT___cstring_4143]
    MOV EDI, R14D
    CALL L100002e30_0



; ---------------------
; Function: 0x100003676
; ---------------------
; Entry 100003676; block 0; address 100003676
L100003676_0:
    PUSH RBP
    MOV RBP, RSP
    XOR EAX, EAX
    POP RBP
    RET 



; ---------------------
; Function: 0x10000367e
; ---------------------
; Entry 10000367e; block 0; address 10000367e
L10000367e_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 312
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -48], RAX
    LEA RBX, [RBP + -280]
    MOV dword [RBX], EDI
    LEA R14, [RBP + -344]
    MOV qword [R14], RSI
    XOR EAX, EAX
    MOV dword [RBP + -284], EAX
    MOV dword [RBP + -276], EAX
    MOV dword [RBP + -292], EAX
    MOV qword [RBP + -176], RAX
    MOV dword [RBP + -184], EAX
    MOV dword [RBP + -328], EAX
    MOV dword [RBP + -324], EAX
    MOV qword [RBP + -208], RAX
    LEA RAX, [rel L__DATA___common + 84]
    MOV dword [RAX], 1
    MOV RAX, qword [rel ___stdoutp]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 6336]
    MOV qword [RCX], RAX
    MOV RAX, qword [rel ___stdinp]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -256], RAX
    CALL L1000150d6_0
    JMP L10000367e_1     ; inserted

; Entry 10000367e; block 1; address 10000371e
L10000367e_1:
    CALL _tzset
    JMP L10000367e_2     ; inserted

; Entry 10000367e; block 2; address 100003723
L10000367e_2:
    MOV RDI, RBX
    MOV RSI, R14
    CALL L100015a33_0
    JMP L10000367e_3     ; inserted

; Entry 10000367e; block 3; address 10000372e
L10000367e_3:
    MOV EAX, dword [RBX]
    CMP EAX, 1
    JNE L10000367e_5
    JMP L10000367e_4     ; inserted

; Entry 10000367e; block 4; address 100003735
L10000367e_4:
    MOV EDI, 1
    CALL _isatty
    JMP L10000367e_6     ; inserted

; Entry 10000367e; block 5; address 10000374d
L10000367e_5:
    CMP EAX, 2
    JNE L10000367e_10
    JMP L10000367e_9     ; inserted

; Entry 10000367e; block 6; address 10000373f
L10000367e_6:
    TEST EAX, EAX
    JNE L10000367e_8
    JMP L10000367e_7     ; inserted

; Entry 10000367e; block 7; address 100003747
L10000367e_7:
    MOV EAX, dword [RBP + -280]
    JMP L10000367e_5     ; inserted

; Entry 10000367e; block 8; address 1000083e1
L10000367e_8:
    CALL L100008cec_0
    JMP L10000367e_1428     ; inserted

; Entry 10000367e; block 9; address 100003752
L10000367e_9:
    MOV RAX, qword [RBP + -344]
    MOV RDI, qword [RAX + 8]
    LEA RSI, [rel L__TEXT___cstring_7555]
    CALL _strcmp
    JMP L10000367e_11     ; inserted

; Entry 10000367e; block 10; address 10000378e
L10000367e_10:
    LEA RDX, [rel L__TEXT___cstring_7558]
    LEA RCX, [rel L__TEXT___cstring_7565]
    LEA RDI, [RBP + -280]
    LEA R14, [RBP + -344]
    MOV RSI, R14
    CALL L1000156c4_0
    JMP L10000367e_17     ; inserted

; Entry 10000367e; block 11; address 100003769
L10000367e_11:
    TEST EAX, EAX
    JNE L10000367e_10
    JMP L10000367e_12     ; inserted

; Entry 10000367e; block 12; address 10000376d
L10000367e_12:
    MOV EDI, 1
    CALL _isatty
    JMP L10000367e_13     ; inserted

; Entry 10000367e; block 13; address 100003777
L10000367e_13:
    TEST EAX, EAX
    JNE L10000367e_15
    JMP L10000367e_14     ; inserted

; Entry 10000367e; block 14; address 10000377f
L10000367e_14:
    XOR EDI, EDI
    CALL _isatty
    JMP L10000367e_16     ; inserted

; Entry 10000367e; block 15; address 10000840c
L10000367e_15:
    CALL L100008d5e_0
    JMP L10000367e_1430     ; inserted

; Entry 10000367e; block 16; address 100003786
L10000367e_16:
    TEST EAX, EAX
    JNE L10000367e_15
    JMP L10000367e_10     ; inserted

; Entry 10000367e; block 17; address 1000037b2
L10000367e_17:
    LEA RAX, [rel L__DATA___common + 384]
    XOR R12D, R12D
    MOV qword [RAX], R12
    LEA RAX, [rel L__DATA___common + 6376]
    MOV qword [RBP + -336], RAX
    MOV qword [RAX], R12
    LEA RAX, [rel L__DATA___common + 392]
    MOV qword [RAX], R12
    LEA RBX, [rel L__TEXT___text + 24718]
    MOV EDI, 2
    MOV RSI, RBX
    CALL _signal
    JMP L10000367e_18     ; inserted

; Entry 10000367e; block 18; address 1000037ee
L10000367e_18:
    MOV EDI, 15
    MOV RSI, RBX
    CALL _signal
    JMP L10000367e_19     ; inserted

; Entry 10000367e; block 19; address 1000037fb
L10000367e_19:
    MOV EDI, 6
    MOV RSI, RBX
    CALL _signal
    JMP L10000367e_20     ; inserted

; Entry 10000367e; block 20; address 100003808
L10000367e_20:
    MOV EDI, 10
    MOV RSI, RBX
    CALL _signal
    JMP L10000367e_21     ; inserted

; Entry 10000367e; block 21; address 100003815
L10000367e_21:
    MOV EDI, 4
    MOV RSI, RBX
    CALL _signal
    JMP L10000367e_22     ; inserted

; Entry 10000367e; block 22; address 100003822
L10000367e_22:
    MOV EDI, 11
    MOV RSI, RBX
    CALL _signal
    JMP L10000367e_23     ; inserted

; Entry 10000367e; block 23; address 10000382f
L10000367e_23:
    MOV RDI, qword [R14]
    XOR ESI, ESI
    CALL L1000137b5_0
    JMP L10000367e_24     ; inserted

; Entry 10000367e; block 24; address 100003839
L10000367e_24:
    LEA RDI, [RBP + -208]
    MOV qword [RDI], RAX
    LEA RDX, [RBP + -276]
    MOV dword [RDX], R12D
    SUB RSP, 8
    LEA R13, [RBP + -324]
    LEA R15, [RBP + -328]
    LEA RSI, [RBP + -284]
    LEA RCX, [RBP + -292]
    LEA R8, [RBP + -176]
    LEA R9, [RBP + -184]
    PUSH R12
    PUSH R13
    PUSH R15
    CALL L100013a58_0
    JMP L10000367e_25     ; inserted

; Entry 10000367e; block 25; address 100003886
L10000367e_25:
    ADD RSP, 32
    TEST RAX, RAX
    JE L10000367e_27
    JMP L10000367e_26     ; inserted

; Entry 10000367e; block 26; address 100003893
L10000367e_26:
    LEA R12, [rel L__TEXT___text + 23992]
    LEA RBX, [RBP + -208]
    LEA R14, [rel L__TEXT___text + 23692]
    MOV ECX, 0
    MOV qword [RBP + -264], RCX
    XOR ECX, ECX
    MOV qword [RBP + -192], RCX
    MOV dword [RBP + -272], 0
    MOV dword [RBP + -180], 0
    MOV dword [RBP + -288], 0
    MOV dword [RBP + -216], 0
    MOV dword [RBP + -164], 0
    MOV dword [RBP + -248], 0
    MOV dword [RBP + -240], 0
    MOV dword [RBP + -196], 0
    MOV dword [RBP + -224], 0
    JMP L10000367e_219     ; inserted

; Entry 10000367e; block 27; address 1000045db
L10000367e_27:
    XOR EAX, EAX
    MOV qword [RBP + -264], RAX
    XOR EAX, EAX
    MOV qword [RBP + -192], RAX
    XOR R14D, R14D
    XOR R12D, R12D
    MOV dword [RBP + -164], 0
    XOR EBX, EBX
    MOV dword [RBP + -240], 0
    MOV dword [RBP + -196], 0
    MOV dword [RBP + -224], 0
    LEA R15, [rel L__DATA___common + 6336]
    JMP L10000367e_285

; Entry 10000367e; block 28; address 100003921
L10000367e_28:
    MOVSXD RCX, dword [R14 + RCX * 4]
    ADD RCX, R14
    MOV RCX, QWORD PTR [L_JUMP_TABLE_100003928 + 8*RCX] ; inserted as implementation of the jump-table based jump below. Manually remove instructions above that originally implemented this jump table.
    JMP RCX; TARGETS: 100003c4b,10000392a,10000392a,10000392a,10000392a,10000392a,10000392a,10000392a,10000392a,10000392a,100008430,100008430,100008430,100008430,100008430,1000062a0,100003c8e,100003d10,100008430,100008430,100003ca6,100008430,100003bbf,100008430,1000062a0,100008430,100003d66,100008430,1000063c4,100008430,100008430,100003d1c,100003cb2,100008430,100003cdf,100008430,100003df6,100003b97,100008430,100008430,100003d4d,100008430,100003be7,100008430,100008430,100008430,100008430,100008430,100008430,100008430,100003d72,100003cf4,100003d8f,100003dab,100003bcb,100003dd9,1000062a0,100003c62,100003c3f,100003dea,100003e11,100003dcd,100003d00,100003bb3,10000425e,100003fb2,100003a65,100003a7a,100003af2,100003f4c,10000396a,100008430,100003c6f,100003fd9

; Entry 10000367e; block 29; address 10000393b
L10000367e_29:
    LEA RCX, [RAX + -261]
    CMP RCX, 64
    JA L10000367e_70
    JMP L10000367e_69     ; inserted

; Entry 10000367e; block 30; address 10000392a
L10000367e_30:
    ADD EAX, 18446744073709551568
    LEA RCX, [rel L__DATA___data + 4496]
    MOV dword [RCX], EAX
    JMP L10000367e_65

; Entry 10000367e; block 31; address 10000396a
L10000367e_31:
    CMP RAX, 321
    JE L10000367e_105
    JMP L10000367e_104     ; inserted

; Entry 10000367e; block 32; address 100003a65
L10000367e_32:
    LEA RAX, [rel L__DATA___common + 48]
    CMP dword [RAX], 2
    JNE L10000367e_128
    JMP L10000367e_127     ; inserted

; Entry 10000367e; block 33; address 100003a7a
L10000367e_33:
    MOV RBX, qword [RBP + -176]
    LEA RSI, [rel L__TEXT___cstring_7743]
    MOV RDI, RBX
    CALL _strcmp
    JMP L10000367e_129     ; inserted

; Entry 10000367e; block 34; address 100003af2
L10000367e_34:
    MOV RDI, qword [RBP + -176]
    LEA RSI, [rel L__TEXT___cstring_7802]
    LEA RDX, [RBP + -160]
    LEA RCX, [RBP + -320]
    LEA R8, [RBP + -232]
    XOR EAX, EAX
    CALL _sscanf
    JMP L10000367e_140     ; inserted

; Entry 10000367e; block 35; address 100003b97
L10000367e_35:
    CMP dword [rel L__DATA___data + 3912], 1
    JNE L10000367e_150
    JMP L10000367e_149     ; inserted

; Entry 10000367e; block 36; address 100003bb3
L10000367e_36:
    MOV byte [rel L__DATA___bss + 16], 1
    JMP L10000367e_65

; Entry 10000367e; block 37; address 100003bbf
L10000367e_37:
    LEA RAX, [rel L__DATA___common + 64]
    JMP L10000367e_128

; Entry 10000367e; block 38; address 100003bcb
L10000367e_38:
    CMP dword [rel L__DATA___data + 3912], 1
    JNE L10000367e_150
    JMP L10000367e_151     ; inserted

; Entry 10000367e; block 39; address 100003be7
L10000367e_39:
    MOV RSI, qword [RBP + -176]
    LEA RDI, [rel L__TEXT___cstring_7953]
    XOR EDX, EDX
    MOV ECX, 1
    CALL L100015f3f_0
    JMP L10000367e_152     ; inserted

; Entry 10000367e; block 40; address 100003c3f
L10000367e_40:
    LEA RAX, [rel L__DATA___data + 4488]
    JMP L10000367e_157

; Entry 10000367e; block 41; address 100003c4b
L10000367e_41:
    LEA RAX, [rel L__DATA___data + 4492]
    XOR ECX, ECX
    MOV dword [RAX], ECX
    LEA RAX, [rel L__DATA___data + 4496]
    JMP L10000367e_212

; Entry 10000367e; block 42; address 100003c62
L10000367e_42:
    LEA RCX, [rel L__DATA___common + 288]
    MOV dword [RCX], 1
    JMP L10000367e_43     ; inserted

; Entry 10000367e; block 43; address 100003c6f
L10000367e_43:
    MOV RSI, qword [RBP + -176]
    MOV EDI, EAX
    CALL L1000090a4_0
    JMP L10000367e_158     ; inserted

; Entry 10000367e; block 44; address 100003c8e
L10000367e_44:
    MOV dword [RBP + -224], 1
    XOR EAX, EAX
    MOV qword [RBP + -256], RAX
    JMP L10000367e_65

; Entry 10000367e; block 45; address 100003ca6
L10000367e_45:
    LEA RAX, [rel L__DATA___data + 4500]
    JMP L10000367e_157

; Entry 10000367e; block 46; address 100003cb2
L10000367e_46:
    LEA RBX, [rel L__DATA___common + 312]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L10000367e_161
    JMP L10000367e_160     ; inserted

; Entry 10000367e; block 47; address 100003cdf
L10000367e_47:
    LEA RAX, [rel L__DATA___common + 48]
    CMP dword [RAX], 1
    JNE L10000367e_163
    JMP L10000367e_162     ; inserted

; Entry 10000367e; block 48; address 100003cf4
L10000367e_48:
    MOV byte [rel L__DATA___bss + 8], 1
    JMP L10000367e_65

; Entry 10000367e; block 49; address 100003d00
L10000367e_49:
    MOV RAX, qword [RBP + -176]
    LEA RCX, [rel L__DATA___data + 4528]
    JMP L10000367e_169

; Entry 10000367e; block 50; address 100003d10
L10000367e_50:
    LEA RAX, [rel L__DATA___common + 72]
    JMP L10000367e_128

; Entry 10000367e; block 51; address 100003d1c
L10000367e_51:
    MOV RDI, qword [RBP + -176]
    CALL L100009c3f_0
    JMP L10000367e_165     ; inserted

; Entry 10000367e; block 52; address 100003d4d
L10000367e_52:
    CMP dword [RBP + -184], 0
    JE L10000367e_168
    JMP L10000367e_167     ; inserted

; Entry 10000367e; block 53; address 100003d66
L10000367e_53:
    MOV byte [rel L__DATA___bss + 12], 1
    JMP L10000367e_65

; Entry 10000367e; block 54; address 100003d72
L10000367e_54:
    MOV byte [rel L__DATA___bss + 4], 1
    MOV RAX, qword [RBP + -176]
    LEA RCX, [rel L__DATA___common + 320]
    JMP L10000367e_169     ; inserted

; Entry 10000367e; block 55; address 100003d8f
L10000367e_55:
    CMP dword [rel L__DATA___data + 3912], 1
    JNE L10000367e_150
    JMP L10000367e_170     ; inserted

; Entry 10000367e; block 56; address 100003dab
L10000367e_56:
    LEA RAX, [rel L__DATA___common + 312]
    MOV RDI, qword [RAX]
    MOV dword [RBP + -180], 1
    TEST RDI, RDI
    JNE L10000367e_172
    JMP L10000367e_171     ; inserted

; Entry 10000367e; block 57; address 100003dcd
L10000367e_57:
    LEA RAX, [rel L__DATA___common + 52]
    JMP L10000367e_128

; Entry 10000367e; block 58; address 100003dd9
L10000367e_58:
    MOV EAX, 1
    MOV qword [RBP + -264], RAX
    JMP L10000367e_65

; Entry 10000367e; block 59; address 100003dea
L10000367e_59:
    LEA RAX, [rel L__DATA___common + 56]
    JMP L10000367e_128

; Entry 10000367e; block 60; address 100003df6
L10000367e_60:
    MOV byte [rel L__DATA___bss + 20], 1
    JMP L10000367e_65

; Entry 10000367e; block 61; address 100003e11
L10000367e_61:
    LEA RAX, [rel L__DATA___common + 76]
    JMP L10000367e_128

; Entry 10000367e; block 62; address 100003f4c
L10000367e_62:
    CMP dword [rel L__DATA___data + 3912], 1
    JNE L10000367e_150
    JMP L10000367e_187     ; inserted

; Entry 10000367e; block 63; address 100003fb2
L10000367e_63:
    LEA RAX, [rel L__DATA___data + 4508]
    MOV dword [RAX], 0
    LEA RCX, [rel L__DATA___common + 60]
    MOV EAX, dword [RCX]
    TEST EAX, EAX
    JE L10000367e_65
    JMP L10000367e_192     ; inserted

; Entry 10000367e; block 64; address 100003fd9
L10000367e_64:
    LEA RAX, [rel L__DATA___common + 276]
    JMP L10000367e_128

; Entry 10000367e; block 65; address 10000425e
L10000367e_65:
    SUB RSP, 8
    MOV RDI, RBX
    LEA RSI, [RBP + -284]
    LEA RDX, [RBP + -276]
    LEA RCX, [RBP + -292]
    LEA R8, [RBP + -176]
    LEA R9, [RBP + -184]
    PUSH 0
    PUSH R13
    PUSH R15
    CALL L100013a58_0
    JMP L10000367e_218     ; inserted

; Entry 10000367e; block 66; address 1000062a0
L10000367e_66:
    CALL L100008cec_0
    JMP L10000367e_845     ; inserted

; Entry 10000367e; block 67; address 1000063c4
L10000367e_67:
    XOR EBX, EBX
    LEA R14, [rel L__DATA___data + 160]
    JMP L10000367e_871     ; inserted

; Entry 10000367e; block 68; address 100008430
L10000367e_68:
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_8278]
    MOV EDX, 5105
    MOV RDI, RBX
    XOR ESI, ESI
    MOV R8, RAX
    JMP L10000367e_1451

; Entry 10000367e; block 69; address 100003948
L10000367e_69:
    MOVSXD RCX, dword [R12 + RCX * 4]
    ADD RCX, R12
    MOV RCX, QWORD PTR [L_JUMP_TABLE_10000394f + 8*RCX] ; inserted as implementation of the jump-table based jump below. Manually remove instructions above that originally implemented this jump table.
    JMP RCX; TARGETS: 100003951,100004078,100003fe5,100004012,100008430,100008430,100008430,100008430,100008430,100008430,100008430,1000040f4,100004091,1000040aa,100003f68,100004110,100003f81,100003f8d,100003fa6,1000063e8,100008430,100008430,100008430,100008430,100008430,100008430,100008430,100008430,10000401e,100003e36,100003e1d,100003e59,10000851b,100003e65,100004147,100003e74,100004037,100008430,100008430,100008430,100008430,100008430,100008430,100004138,100004129,100004043,100003e02,100004059,100008430,100008430,100004153,100003e80,100003f28,100008430,100008430,100008430,100008430,100008430,100008430,100008430,10000396a,100008430,10000415f,100008430

; Entry 10000367e; block 70; address 1000039b4
L10000367e_70:
    CMP RAX, 65535
    JNE L10000367e_68
    JMP L10000367e_109     ; inserted

; Entry 10000367e; block 71; address 100003951
L10000367e_71:
    CMP dword [RBP + -184], 0
    JE L10000367e_103
    JMP L10000367e_102     ; inserted

; Entry 10000367e; block 72; address 100003e02
L10000367e_72:
    MOV dword [RBP + -248], 1
    JMP L10000367e_65

; Entry 10000367e; block 73; address 100003e1d
L10000367e_73:
    CMP dword [RBP + -184], 0
    JE L10000367e_174
    JMP L10000367e_173     ; inserted

; Entry 10000367e; block 74; address 100003e36
L10000367e_74:
    LEA RBX, [rel L__DATA___common + 256]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L10000367e_176
    JMP L10000367e_175     ; inserted

; Entry 10000367e; block 75; address 100003e59
L10000367e_75:
    LEA RAX, [rel L__DATA___common + 76]
    JMP L10000367e_163

; Entry 10000367e; block 76; address 100003e65
L10000367e_76:
    MOV dword [RBP + -240], 1
    JMP L10000367e_65

; Entry 10000367e; block 77; address 100003e74
L10000367e_77:
    LEA RAX, [rel L__DATA___common + 84]
    JMP L10000367e_128

; Entry 10000367e; block 78; address 100003e80
L10000367e_78:
    MOV RDI, qword [RBP + -176]
    LEA RSI, [rel L__TEXT___cstring_7802]
    LEA RDX, [RBP + -160]
    LEA RCX, [RBP + -320]
    LEA R8, [RBP + -232]
    XOR EAX, EAX
    CALL _sscanf
    JMP L10000367e_177     ; inserted

; Entry 10000367e; block 79; address 100003f28
L10000367e_79:
    MOV RDI, qword [rel L__DATA___bss + 24]
    TEST RDI, RDI
    JE L10000367e_186
    JMP L10000367e_185     ; inserted

; Entry 10000367e; block 80; address 100003f68
L10000367e_80:
    CMP dword [RBP + -184], 0
    JE L10000367e_189
    JMP L10000367e_188     ; inserted

; Entry 10000367e; block 81; address 100003f81
L10000367e_81:
    LEA RAX, [rel L__DATA___common + 64]
    JMP L10000367e_163

; Entry 10000367e; block 82; address 100003f8d
L10000367e_82:
    CMP dword [RBP + -184], 0
    JE L10000367e_191
    JMP L10000367e_190     ; inserted

; Entry 10000367e; block 83; address 100003fa6
L10000367e_83:
    LEA RAX, [rel L__DATA___common + 68]
    JMP L10000367e_128

; Entry 10000367e; block 84; address 100003fe5
L10000367e_84:
    LEA RAX, [rel L__DATA___common + 160]
    MOV dword [RAX], 0
    CMP dword [RBP + -184], 0
    JE L10000367e_194
    JMP L10000367e_193     ; inserted

; Entry 10000367e; block 85; address 100004012
L10000367e_85:
    LEA RAX, [rel L__DATA___common + 280]
    JMP L10000367e_128

; Entry 10000367e; block 86; address 10000401e
L10000367e_86:
    CMP dword [RBP + -184], 0
    JE L10000367e_196
    JMP L10000367e_195     ; inserted

; Entry 10000367e; block 87; address 100004037
L10000367e_87:
    LEA RAX, [rel L__DATA___common + 576]
    JMP L10000367e_128

; Entry 10000367e; block 88; address 100004043
L10000367e_88:
    CMP dword [RBP + -184], 0
    JE L10000367e_198
    JMP L10000367e_197     ; inserted

; Entry 10000367e; block 89; address 100004059
L10000367e_89:
    LEA RAX, [rel L__DATA___common + 280]
    MOV dword [RAX], 1
    LEA RAX, [rel L__DATA___common + 564]
    JMP L10000367e_163     ; inserted

; Entry 10000367e; block 90; address 100004078
L10000367e_90:
    CMP dword [RBP + -184], 0
    JE L10000367e_200
    JMP L10000367e_199     ; inserted

; Entry 10000367e; block 91; address 100004091
L10000367e_91:
    CMP dword [RBP + -184], 0
    JE L10000367e_202
    JMP L10000367e_201     ; inserted

; Entry 10000367e; block 92; address 1000040aa
L10000367e_92:
    MOV RDI, qword [RBP + -176]
    TEST RDI, RDI
    JE L10000367e_204
    JMP L10000367e_203     ; inserted

; Entry 10000367e; block 93; address 1000040f4
L10000367e_93:
    LEA RAX, [rel L__DATA___common + 272]
    MOV ECX, 1
    MOV dword [RAX], ECX
    LEA RAX, [rel L__DATA___common + 288]
    JMP L10000367e_212     ; inserted

; Entry 10000367e; block 94; address 100004110
L10000367e_94:
    CMP dword [RBP + -184], 0
    JE L10000367e_214
    JMP L10000367e_213     ; inserted

; Entry 10000367e; block 95; address 100004129
L10000367e_95:
    MOV dword [RBP + -164], 1
    JMP L10000367e_65

; Entry 10000367e; block 96; address 100004138
L10000367e_96:
    MOV dword [RBP + -216], 1
    JMP L10000367e_65

; Entry 10000367e; block 97; address 100004147
L10000367e_97:
    LEA RAX, [rel L__DATA___common + 80]
    JMP L10000367e_128

; Entry 10000367e; block 98; address 100004153
L10000367e_98:
    LEA RAX, [rel L__DATA___common + 600]
    JMP L10000367e_128

; Entry 10000367e; block 99; address 10000415f
L10000367e_99:
    LEA RAX, [rel L__DATA___common + 88]
    JMP L10000367e_128

; Entry 10000367e; block 100; address 1000063e8
L10000367e_100:
    XOR EBX, EBX
    LEA R14, [rel L__DATA_CONST___const + 256]
    JMP L10000367e_874     ; inserted

; Entry 10000367e; block 101; address 10000851b
L10000367e_101:
    LEA RSI, [rel L__TEXT___cstring_7676]
    JMP L10000367e_406

; Entry 10000367e; block 102; address 10000395e
L10000367e_102:
    LEA RAX, [rel L__DATA___common + 156]
    JMP L10000367e_157

; Entry 10000367e; block 103; address 1000041e9
L10000367e_103:
    LEA RAX, [rel L__DATA___common + 156]
    JMP L10000367e_128

; Entry 10000367e; block 104; address 100003976
L10000367e_104:
    CMP dword [RBP + -284], 2
    JNE L10000367e_107
    JMP L10000367e_106     ; inserted

; Entry 10000367e; block 105; address 1000062aa
L10000367e_105:
    CALL L100008d5e_0
    JMP L10000367e_846     ; inserted

; Entry 10000367e; block 106; address 10000397f
L10000367e_106:
    MOV RAX, qword [RBP + -208]
    MOV RDI, qword [RAX + 8]
    CALL _strlen
    JMP L10000367e_108     ; inserted

; Entry 10000367e; block 107; address 100003999
L10000367e_107:
    LEA RAX, [rel L__DATA___data + 4508]
    MOV dword [RAX], 1
    LEA RAX, [rel L__DATA___common + 60]
    INC dword [RAX]
    JMP L10000367e_65

; Entry 10000367e; block 108; address 10000398f
L10000367e_108:
    CMP RAX, 2
    JE L10000367e_105
    JMP L10000367e_107     ; inserted

; Entry 10000367e; block 109; address 1000039c0
L10000367e_109:
    CMP dword [RBP + -192], 0
    JNE L10000367e_111
    JMP L10000367e_110     ; inserted

; Entry 10000367e; block 110; address 1000039c9
L10000367e_110:
    LEA RAX, [rel L__DATA___common + 48]
    CMP dword [RAX], 2
    JE L10000367e_111
    JMP L10000367e_112     ; inserted

; Entry 10000367e; block 111; address 1000039e7
L10000367e_111:
    MOV R12, qword [RBP + -176]
    MOV RDI, R12
    LEA RSI, [rel L__TEXT___cstring_8138]
    CALL _strcmp
    JMP L10000367e_114     ; inserted

; Entry 10000367e; block 112; address 1000039d5
L10000367e_112:
    LEA RAX, [rel L__DATA___common + 648]
    CMP qword [RAX], 0
    JNE L10000367e_111
    JMP L10000367e_113     ; inserted

; Entry 10000367e; block 113; address 1000039e2
L10000367e_113:
    CALL L100009304_0
    JMP L10000367e_111     ; inserted

; Entry 10000367e; block 114; address 1000039fd
L10000367e_114:
    OR EAX, dword [RBP + -288]
    JE L10000367e_116
    JMP L10000367e_115     ; inserted

; Entry 10000367e; block 115; address 100003a09
L10000367e_115:
    MOV RCX, qword [RBP + -192]
    LEA EAX, [RCX + -3]
    CMP EAX, 2
    JB L10000367e_118
    JMP L10000367e_117     ; inserted

; Entry 10000367e; block 116; address 1000042a5
L10000367e_116:
    MOV dword [RBP + -288], 1
    CMP dword [RBP + -192], 0
    LEA R12, [rel L__TEXT___text + 23992]
    LEA RBX, [RBP + -208]
    JNE L10000367e_65
    JMP L10000367e_221     ; inserted

; Entry 10000367e; block 117; address 100003a1c
L10000367e_117:
    TEST ECX, ECX
    JE L10000367e_120
    JMP L10000367e_119     ; inserted

; Entry 10000367e; block 118; address 1000042cb
L10000367e_118:
    CMP dword [RBP + -224], 1
    JNE L10000367e_223
    JMP L10000367e_222     ; inserted

; Entry 10000367e; block 119; address 100003a24
L10000367e_119:
    CMP ECX, 6
    JNE L10000367e_122
    JMP L10000367e_121     ; inserted

; Entry 10000367e; block 120; address 100004365
L10000367e_120:
    MOV RDI, R12
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L10000367e_235     ; inserted

; Entry 10000367e; block 121; address 100003a2d
L10000367e_121:
    MOV EDI, 82
    MOV RSI, R12
    CALL L1000090a4_0
    JMP L10000367e_123     ; inserted

; Entry 10000367e; block 122; address 100004500
L10000367e_122:
    LEA R12, [rel L__TEXT___text + 23992]
    LEA RBX, [RBP + -208]
    JMP L10000367e_65

; Entry 10000367e; block 123; address 100003a3a
L10000367e_123:
    MOV RDI, qword [RBP + -176]
    CALL _free
    JMP L10000367e_124     ; inserted

; Entry 10000367e; block 124; address 100003a46
L10000367e_124:
    CMP dword [RBP + -196], 0
    JNE L10000367e_126
    JMP L10000367e_125     ; inserted

; Entry 10000367e; block 125; address 100003a4f
L10000367e_125:
    MOV EAX, dword [RBP + -276]
    MOV dword [RBP + -196], EAX
    JMP L10000367e_126     ; inserted

; Entry 10000367e; block 126; address 100003a5b
L10000367e_126:
    MOV EAX, 6
    JMP L10000367e_229

; Entry 10000367e; block 127; address 100003a75
L10000367e_127:
    JMP L10000367e_164

; Entry 10000367e; block 128; address 100004258
L10000367e_128:
    MOV dword [RAX], 1
    JMP L10000367e_65     ; inserted

; Entry 10000367e; block 129; address 100003a90
L10000367e_129:
    TEST EAX, EAX
    JE L10000367e_131
    JMP L10000367e_130     ; inserted

; Entry 10000367e; block 130; address 100003a98
L10000367e_130:
    MOV RDI, RBX
    CALL L100015e38_0
    JMP L10000367e_132     ; inserted

; Entry 10000367e; block 131; address 100004181
L10000367e_131:
    LEA RAX, [rel L__DATA___common + 564]
    MOV dword [RAX], 4294967295
    LEA R12, [rel L__TEXT___text + 23992]
    LEA RBX, [RBP + -208]
    JMP L10000367e_159     ; inserted

; Entry 10000367e; block 132; address 100003aa0
L10000367e_132:
    LEA RCX, [rel L__DATA___common + 568]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JE L10000367e_131
    JMP L10000367e_133     ; inserted

; Entry 10000367e; block 133; address 100003ab3
L10000367e_133:
    CMP RAX, 18446744073709551615
    JE L10000367e_135
    JMP L10000367e_134     ; inserted

; Entry 10000367e; block 134; address 100003abd
L10000367e_134:
    LEA RDX, [rel L__DATA___common + 564]
    CMP dword [RDX], 0
    LEA R12, [rel L__TEXT___text + 23992]
    LEA RBX, [RBP + -208]
    JNE L10000367e_137
    JMP L10000367e_136     ; inserted

; Entry 10000367e; block 135; address 100008707
L10000367e_135:
    MOV R8, qword [RBP + -176]
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_7745]
    JMP L10000367e_1436     ; inserted

; Entry 10000367e; block 136; address 100003ad7
L10000367e_136:
    MOV dword [RDX], 1
    JMP L10000367e_137     ; inserted

; Entry 10000367e; block 137; address 100003add
L10000367e_137:
    CMP RAX, 1023
    JA L10000367e_139
    JMP L10000367e_138     ; inserted

; Entry 10000367e; block 138; address 100003ae9
L10000367e_138:
    SHL RAX, 20
    JMP L10000367e_148

; Entry 10000367e; block 139; address 100004354
L10000367e_139:
    CMP RAX, 65535
    JA L10000367e_159
    JMP L10000367e_234     ; inserted

; Entry 10000367e; block 140; address 100003b1c
L10000367e_140:
    CMP EAX, 3
    JE L10000367e_142
    JMP L10000367e_141     ; inserted

; Entry 10000367e; block 141; address 100003b21
L10000367e_141:
    MOV RDI, qword [RBP + -176]
    LEA RSI, [rel L__TEXT___cstring_7814]
    LEA RDX, [RBP + -320]
    LEA RCX, [RBP + -232]
    LEA R8, [RBP + -160]
    XOR EAX, EAX
    CALL _sscanf
    JMP L10000367e_143     ; inserted

; Entry 10000367e; block 142; address 100003b54
L10000367e_142:
    MOV ESI, dword [RBP + -320]
    LEA EAX, [RSI + -1]
    CMP EAX, 11
    JA L10000367e_144
    JMP L10000367e_145     ; inserted

; Entry 10000367e; block 143; address 100003b4b
L10000367e_143:
    CMP EAX, 3
    JNE L10000367e_144
    JMP L10000367e_142     ; inserted

; Entry 10000367e; block 144; address 100008450
L10000367e_144:
    LEA RSI, [rel L__TEXT___cstring_7824]
    JMP L10000367e_406

; Entry 10000367e; block 145; address 100003b66
L10000367e_145:
    MOV EDX, dword [RBP + -232]
    LEA EAX, [RDX + -1]
    CMP EAX, 31
    JAE L10000367e_144
    JMP L10000367e_146     ; inserted

; Entry 10000367e; block 146; address 100003b78
L10000367e_146:
    MOV EDI, dword [RBP + -160]
    XOR ECX, ECX
    XOR R8D, R8D
    XOR R9D, R9D
    CALL L10001147d_0
    JMP L10000367e_147     ; inserted

; Entry 10000367e; block 147; address 100003b8b
L10000367e_147:
    LEA RCX, [rel L__DATA___common + 368]
    JMP L10000367e_148

; Entry 10000367e; block 148; address 100003f20
L10000367e_148:
    MOV qword [RCX], RAX
    JMP L10000367e_159

; Entry 10000367e; block 149; address 100003ba4
L10000367e_149:
    MOV dword [rel L__DATA___data + 3912], 4
    JMP L10000367e_65

; Entry 10000367e; block 150; address 100008336
L10000367e_150:
    LEA RSI, [rel L__TEXT___cstring_7569]
    JMP L10000367e_406

; Entry 10000367e; block 151; address 100003bd8
L10000367e_151:
    MOV dword [rel L__DATA___data + 3912], 3
    JMP L10000367e_65

; Entry 10000367e; block 152; address 100003c01
L10000367e_152:
    MOV ECX, 8
    TEST EAX, EAX
    JNE L10000367e_154
    JMP L10000367e_153     ; inserted

; Entry 10000367e; block 153; address 100003c0a
L10000367e_153:
    MOV RSI, qword [RBP + -176]
    LEA RDI, [rel L__TEXT___cstring_4170]
    XOR EDX, EDX
    MOV ECX, 1
    CALL L100015f3f_0
    JMP L10000367e_155     ; inserted

; Entry 10000367e; block 154; address 100003c31
L10000367e_154:
    LEA RAX, [rel L__DATA___data + 4492]
    MOV dword [RAX], ECX
    JMP L10000367e_159

; Entry 10000367e; block 155; address 100003c24
L10000367e_155:
    MOV ECX, 0
    TEST EAX, EAX
    JE L10000367e_156
    JMP L10000367e_154     ; inserted

; Entry 10000367e; block 156; address 10000864a
L10000367e_156:
    MOV RSI, qword [RBP + -176]
    LEA RDI, [rel L__TEXT___cstring_7961]
    XOR EDX, EDX
    MOV ECX, 1
    CALL L100015f3f_0
    JMP L10000367e_1442     ; inserted

; Entry 10000367e; block 157; address 1000041b4
L10000367e_157:
    MOV dword [RAX], 0
    JMP L10000367e_65

; Entry 10000367e; block 158; address 100003c7d
L10000367e_158:
    JMP L10000367e_159

; Entry 10000367e; block 159; address 10000419c
L10000367e_159:
    MOV RDI, qword [RBP + -176]
    JMP L10000367e_172     ; inserted

; Entry 10000367e; block 160; address 100003cc1
L10000367e_160:
    CALL _free
    JMP L10000367e_161     ; inserted

; Entry 10000367e; block 161; address 100003cc6
L10000367e_161:
    MOV RAX, qword [RBP + -176]
    MOV qword [RBX], RAX
    MOV dword [RBP + -180], 0
    JMP L10000367e_122

; Entry 10000367e; block 162; address 100003cef
L10000367e_162:
    JMP L10000367e_164

; Entry 10000367e; block 163; address 10000406d
L10000367e_163:
    MOV dword [RAX], 2
    JMP L10000367e_65

; Entry 10000367e; block 164; address 1000083f4
L10000367e_164:
    LEA RSI, [rel L__TEXT___cstring_7713]
    JMP L10000367e_406

; Entry 10000367e; block 165; address 100003d28
L10000367e_165:
    LEA RCX, [rel L__DATA___common + 424]
    MOV qword [RCX], RAX
    MOV RDI, qword [RBP + -176]
    CALL _free
    JMP L10000367e_166     ; inserted

; Entry 10000367e; block 166; address 100003d3e
L10000367e_166:
    MOV dword [RBP + -272], 1
    JMP L10000367e_65

; Entry 10000367e; block 167; address 100003d5a
L10000367e_167:
    LEA RAX, [rel L__DATA___data + 4512]
    JMP L10000367e_163

; Entry 10000367e; block 168; address 1000041ad
L10000367e_168:
    LEA RAX, [rel L__DATA___data + 4512]
    JMP L10000367e_157     ; inserted

; Entry 10000367e; block 169; address 100003d87
L10000367e_169:
    MOV qword [RCX], RAX
    JMP L10000367e_65

; Entry 10000367e; block 170; address 100003d9c
L10000367e_170:
    MOV dword [rel L__DATA___data + 3912], 0
    JMP L10000367e_65

; Entry 10000367e; block 171; address 100003dc8
L10000367e_171:
    JMP L10000367e_65

; Entry 10000367e; block 172; address 1000041a3
L10000367e_172:
    CALL _free
    JMP L10000367e_215     ; inserted

; Entry 10000367e; block 173; address 100003e2a
L10000367e_173:
    LEA RAX, [rel L__DATA___common + 232]
    JMP L10000367e_157

; Entry 10000367e; block 174; address 1000041bf
L10000367e_174:
    LEA RAX, [rel L__DATA___common + 232]
    JMP L10000367e_128

; Entry 10000367e; block 175; address 100003e45
L10000367e_175:
    CALL _free
    JMP L10000367e_176     ; inserted

; Entry 10000367e; block 176; address 100003e4a
L10000367e_176:
    MOV RAX, qword [RBP + -176]
    MOV qword [RBX], RAX
    JMP L10000367e_122

; Entry 10000367e; block 177; address 100003eaa
L10000367e_177:
    CMP EAX, 3
    JE L10000367e_179
    JMP L10000367e_178     ; inserted

; Entry 10000367e; block 178; address 100003eaf
L10000367e_178:
    MOV RDI, qword [RBP + -176]
    LEA RSI, [rel L__TEXT___cstring_7814]
    LEA RDX, [RBP + -320]
    LEA RCX, [RBP + -232]
    LEA R8, [RBP + -160]
    XOR EAX, EAX
    CALL _sscanf
    JMP L10000367e_180     ; inserted

; Entry 10000367e; block 179; address 100003ee2
L10000367e_179:
    MOV ESI, dword [RBP + -320]
    LEA EAX, [RSI + -1]
    CMP EAX, 11
    JA L10000367e_181
    JMP L10000367e_182     ; inserted

; Entry 10000367e; block 180; address 100003ed9
L10000367e_180:
    CMP EAX, 3
    JNE L10000367e_181
    JMP L10000367e_179     ; inserted

; Entry 10000367e; block 181; address 10000845c
L10000367e_181:
    LEA RSI, [rel L__TEXT___cstring_7888]
    JMP L10000367e_406

; Entry 10000367e; block 182; address 100003ef4
L10000367e_182:
    MOV EDX, dword [RBP + -232]
    LEA EAX, [RDX + -1]
    CMP EAX, 31
    JAE L10000367e_181
    JMP L10000367e_183     ; inserted

; Entry 10000367e; block 183; address 100003f06
L10000367e_183:
    MOV EDI, dword [RBP + -160]
    XOR ECX, ECX
    XOR R8D, R8D
    XOR R9D, R9D
    CALL L10001147d_0
    JMP L10000367e_184     ; inserted

; Entry 10000367e; block 184; address 100003f19
L10000367e_184:
    LEA RCX, [rel L__DATA___common + 376]
    JMP L10000367e_148     ; inserted

; Entry 10000367e; block 185; address 100003f34
L10000367e_185:
    CALL _free
    JMP L10000367e_186     ; inserted

; Entry 10000367e; block 186; address 100003f39
L10000367e_186:
    MOV RAX, qword [RBP + -176]
    MOV qword [rel L__DATA___bss + 24], RAX
    JMP L10000367e_65

; Entry 10000367e; block 187; address 100003f59
L10000367e_187:
    MOV dword [rel L__DATA___data + 3912], 2
    JMP L10000367e_65

; Entry 10000367e; block 188; address 100003f75
L10000367e_188:
    LEA RAX, [rel L__DATA___common + 168]
    JMP L10000367e_157

; Entry 10000367e; block 189; address 1000041cb
L10000367e_189:
    LEA RAX, [rel L__DATA___common + 168]
    JMP L10000367e_128

; Entry 10000367e; block 190; address 100003f9a
L10000367e_190:
    LEA RAX, [rel L__DATA___common + 296]
    JMP L10000367e_157

; Entry 10000367e; block 191; address 1000041d7
L10000367e_191:
    LEA RAX, [rel L__DATA___common + 296]
    JMP L10000367e_128

; Entry 10000367e; block 192; address 100003fd0
L10000367e_192:
    DEC EAX
    MOV dword [RCX], EAX
    JMP L10000367e_65

; Entry 10000367e; block 193; address 100003fff
L10000367e_193:
    LEA RAX, [rel L__DATA___common + 144]
    MOV qword [RAX], 0
    JMP L10000367e_65

; Entry 10000367e; block 194; address 100004211
L10000367e_194:
    LEA RAX, [rel L__DATA___common + 144]
    CMP qword [RAX], 0
    JNE L10000367e_217
    JMP L10000367e_216     ; inserted

; Entry 10000367e; block 195; address 10000402b
L10000367e_195:
    LEA RAX, [rel L__DATA___common + 248]
    JMP L10000367e_157

; Entry 10000367e; block 196; address 1000041f2
L10000367e_196:
    LEA RAX, [rel L__DATA___common + 248]
    JMP L10000367e_128

; Entry 10000367e; block 197; address 100004050
L10000367e_197:
    LEA RAX, [rel L__DATA___common + 300]
    JMP L10000367e_163

; Entry 10000367e; block 198; address 1000041e0
L10000367e_198:
    LEA RAX, [rel L__DATA___common + 300]
    JMP L10000367e_128

; Entry 10000367e; block 199; address 100004085
L10000367e_199:
    LEA RAX, [rel L__DATA___common + 152]
    JMP L10000367e_157

; Entry 10000367e; block 200; address 1000041fb
L10000367e_200:
    LEA RAX, [rel L__DATA___common + 152]
    JMP L10000367e_128

; Entry 10000367e; block 201; address 10000409e
L10000367e_201:
    LEA RAX, [rel L__DATA___common + 160]
    JMP L10000367e_157

; Entry 10000367e; block 202; address 100004204
L10000367e_202:
    LEA RAX, [rel L__DATA___common + 160]
    MOV dword [RAX], 1
    JMP L10000367e_194     ; inserted

; Entry 10000367e; block 203; address 1000040ba
L10000367e_203:
    CMP byte [RDI], 0
    JE L10000367e_206
    JMP L10000367e_205     ; inserted

; Entry 10000367e; block 204; address 100004235
L10000367e_204:
    LEA RAX, [rel L__DATA___common + 136]
    MOV qword [RAX], 10485760
    JMP L10000367e_233

; Entry 10000367e; block 205; address 1000040c3
L10000367e_205:
    CALL L100015e38_0
    JMP L10000367e_207     ; inserted

; Entry 10000367e; block 206; address 100004319
L10000367e_206:
    LEA RAX, [rel L__DATA___common + 136]
    MOV qword [RAX], 10485760
    JMP L10000367e_232

; Entry 10000367e; block 207; address 1000040c8
L10000367e_207:
    LEA RCX, [rel L__DATA___common + 136]
    MOV qword [RCX], RAX
    CMP RAX, 18446744073709551615
    JE L10000367e_209
    JMP L10000367e_208     ; inserted

; Entry 10000367e; block 208; address 1000040dc
L10000367e_208:
    CMP RAX, 1023
    JG L10000367e_211
    JMP L10000367e_210     ; inserted

; Entry 10000367e; block 209; address 100008630
L10000367e_209:
    MOV R8, qword [RBP + -176]
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_7593]
    JMP L10000367e_1455

; Entry 10000367e; block 210; address 1000040e8
L10000367e_210:
    SHL RAX, 20
    MOV qword [RCX], RAX
    JMP L10000367e_230

; Entry 10000367e; block 211; address 100004329
L10000367e_211:
    CMP RAX, 32767
    JLE L10000367e_231
    JMP L10000367e_230     ; inserted

; Entry 10000367e; block 212; address 100004109
L10000367e_212:
    MOV dword [RAX], ECX
    JMP L10000367e_65

; Entry 10000367e; block 213; address 10000411d
L10000367e_213:
    LEA RAX, [rel L__DATA___common + 164]
    JMP L10000367e_157

; Entry 10000367e; block 214; address 100004248
L10000367e_214:
    LEA RAX, [rel L__DATA___common + 164]
    JMP L10000367e_128

; Entry 10000367e; block 215; address 1000041a8
L10000367e_215:
    JMP L10000367e_65

; Entry 10000367e; block 216; address 100004222
L10000367e_216:
    LEA RCX, [rel L__DATA___common + 136]
    MOV qword [RCX], 10485760
    JMP L10000367e_217

; Entry 10000367e; block 217; address 100004348
L10000367e_217:
    MOV qword [RAX], 18446744073709551615
    JMP L10000367e_65

; Entry 10000367e; block 218; address 100004293
L10000367e_218:
    ADD RSP, 32
    TEST RAX, RAX
    JNE L10000367e_219
    JMP L10000367e_220     ; inserted

; Entry 10000367e; block 219; address 100003917
L10000367e_219:
    LEA RCX, [RAX + -48]
    CMP RCX, 74
    JA L10000367e_29
    JMP L10000367e_28     ; inserted

; Entry 10000367e; block 220; address 1000042a0
L10000367e_220:
    CMP dword [RBP + -180], 0
    JE L10000367e_268
    JMP L10000367e_267     ; inserted

; Entry 10000367e; block 221; address 1000042c6
L10000367e_221:
    LEA RSI, [rel L__TEXT___cstring_8141]
    JMP L10000367e_406

; Entry 10000367e; block 222; address 1000042d4
L10000367e_222:
    MOV RDI, R12
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L10000367e_224     ; inserted

; Entry 10000367e; block 223; address 1000042eb
L10000367e_223:
    MOV RDI, R12
    CALL L100009453_0
    JMP L10000367e_226     ; inserted

; Entry 10000367e; block 224; address 1000042e3
L10000367e_224:
    TEST EAX, EAX
    JE L10000367e_225
    JMP L10000367e_223     ; inserted

; Entry 10000367e; block 225; address 100008813
L10000367e_225:
    LEA RSI, [rel L__TEXT___cstring_8222]
    JMP L10000367e_406

; Entry 10000367e; block 226; address 1000042f3
L10000367e_226:
    CMP dword [RBP + -192], 3
    JNE L10000367e_228
    JMP L10000367e_227     ; inserted

; Entry 10000367e; block 227; address 1000042fc
L10000367e_227:
    MOV EAX, dword [RBP + -276]
    MOV dword [RBP + -196], EAX
    JMP L10000367e_228     ; inserted

; Entry 10000367e; block 228; address 100004308
L10000367e_228:
    MOV EAX, 4
    JMP L10000367e_229     ; inserted

; Entry 10000367e; block 229; address 10000430d
L10000367e_229:
    MOV qword [RBP + -192], RAX
    JMP L10000367e_122

; Entry 10000367e; block 230; address 100004335
L10000367e_230:
    MOV RDI, qword [RBP + -176]
    JMP L10000367e_232     ; inserted

; Entry 10000367e; block 231; address 10000875e
L10000367e_231:
    MOV R8, qword [RBP + -176]
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_7637]
    JMP L10000367e_1455

; Entry 10000367e; block 232; address 10000433c
L10000367e_232:
    CALL _free
    JMP L10000367e_233     ; inserted

; Entry 10000367e; block 233; address 100004341
L10000367e_233:
    LEA RAX, [rel L__DATA___common + 144]
    JMP L10000367e_217     ; inserted

; Entry 10000367e; block 234; address 100004360
L10000367e_234:
    MOV R8, qword [RBP + -176]
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_7767]
    JMP L10000367e_1455     ; inserted

; Entry 10000367e; block 235; address 100004374
L10000367e_235:
    TEST EAX, EAX
    JE L10000367e_237
    JMP L10000367e_236     ; inserted

; Entry 10000367e; block 236; address 100004378
L10000367e_236:
    MOV RDI, R12
    CALL L100009c3f_0
    JMP L10000367e_238     ; inserted

; Entry 10000367e; block 237; address 1000043a1
L10000367e_237:
    CALL L1000093eb_0
    JMP L10000367e_242     ; inserted

; Entry 10000367e; block 238; address 100004380
L10000367e_238:
    LEA RCX, [rel L__DATA___common + 6376]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JE L10000367e_240
    JMP L10000367e_239     ; inserted

; Entry 10000367e; block 239; address 100004393
L10000367e_239:
    MOV RDI, qword [RBP + -176]
    CALL _free
    JMP L10000367e_241     ; inserted

; Entry 10000367e; block 240; address 1000086fb
L10000367e_240:
    LEA RSI, [rel L__TEXT___cstring_8174]
    JMP L10000367e_1431

; Entry 10000367e; block 241; address 10000439f
L10000367e_241:
    JMP L10000367e_242

; Entry 10000367e; block 242; address 1000043a6
L10000367e_242:
    CMP dword [RBP + -164], 0
    LEA R12, [rel L__DATA___common + 48]
    JE L10000367e_244
    JMP L10000367e_243     ; inserted

; Entry 10000367e; block 243; address 1000043b6
L10000367e_243:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RBX, R12
    MOV R12, RAX
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RDX, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_8199]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_245     ; inserted

; Entry 10000367e; block 244; address 1000043ea
L10000367e_244:
    LEA RAX, [rel L__DATA___common + 408]
    CMP qword [RAX], 0
    JNE L10000367e_247
    JMP L10000367e_246     ; inserted

; Entry 10000367e; block 245; address 1000043de
L10000367e_245:
    MOV RDI, qword [R12]
    MOV R12, RBX
    CALL _fflush
    JMP L10000367e_244     ; inserted

; Entry 10000367e; block 246; address 1000043f7
L10000367e_246:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RBX, qword [RAX]
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_248     ; inserted

; Entry 10000367e; block 247; address 100004430
L10000367e_247:
    LEA RAX, [rel L__DATA___common + 424]
    CMP qword [RAX], 0
    JNE L10000367e_252
    JMP L10000367e_251     ; inserted

; Entry 10000367e; block 248; address 100004409
L10000367e_248:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L10000367e_249     ; inserted

; Entry 10000367e; block 249; address 100004412
L10000367e_249:
    LEA RCX, [rel L__DATA___common + 408]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JE L10000367e_240
    JMP L10000367e_250     ; inserted

; Entry 10000367e; block 250; address 100004425
L10000367e_250:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L10000367e_247     ; inserted

; Entry 10000367e; block 251; address 10000443d
L10000367e_251:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RBX, qword [RAX]
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_253     ; inserted

; Entry 10000367e; block 252; address 100004476
L10000367e_252:
    MOV EAX, 3
    CMP dword [RBP + -224], 0
    JE L10000367e_257
    JMP L10000367e_256     ; inserted

; Entry 10000367e; block 253; address 10000444f
L10000367e_253:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L10000367e_254     ; inserted

; Entry 10000367e; block 254; address 100004458
L10000367e_254:
    LEA RCX, [rel L__DATA___common + 424]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JE L10000367e_240
    JMP L10000367e_255     ; inserted

; Entry 10000367e; block 255; address 10000446b
L10000367e_255:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L10000367e_252     ; inserted

; Entry 10000367e; block 256; address 100004484
L10000367e_256:
    MOV RAX, qword [rel ___stdinp]
    MOV RDI, qword [RAX]
    CALL L1000106d0_0
    JMP L10000367e_258     ; inserted

; Entry 10000367e; block 257; address 1000044e2
L10000367e_257:
    CMP dword [R12], 2
    MOV ECX, 6
    CMOVE EAX, ECX
    MOV qword [RBP + -192], RAX
    MOV dword [RBP + -224], 0
    JMP L10000367e_122     ; inserted

; Entry 10000367e; block 258; address 100004493
L10000367e_258:
    MOV RBX, RAX
    MOV EAX, 3
    TEST RBX, RBX
    JE L10000367e_257
    JMP L10000367e_259     ; inserted

; Entry 10000367e; block 259; address 1000044a0
L10000367e_259:
    CMP dword [R12], 2
    JNE L10000367e_261
    JMP L10000367e_260     ; inserted

; Entry 10000367e; block 260; address 1000044a7
L10000367e_260:
    MOV EDI, 82
    MOV RSI, RBX
    CALL L1000090a4_0
    JMP L10000367e_262     ; inserted

; Entry 10000367e; block 261; address 1000044b6
L10000367e_261:
    MOV RDI, RBX
    CALL L100009453_0
    JMP L10000367e_263     ; inserted

; Entry 10000367e; block 262; address 1000044b4
L10000367e_262:
    JMP L10000367e_263

; Entry 10000367e; block 263; address 1000044be
L10000367e_263:
    MOV RDI, RBX
    CALL _free
    JMP L10000367e_264     ; inserted

; Entry 10000367e; block 264; address 1000044c6
L10000367e_264:
    MOV RAX, qword [rel ___stdinp]
    MOV RDI, qword [RAX]
    CALL L1000106d0_0
    JMP L10000367e_265     ; inserted

; Entry 10000367e; block 265; address 1000044d5
L10000367e_265:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L10000367e_259
    JMP L10000367e_266     ; inserted

; Entry 10000367e; block 266; address 1000044dd
L10000367e_266:
    MOV EAX, 4
    JMP L10000367e_257     ; inserted

; Entry 10000367e; block 267; address 100004520
L10000367e_267:
    MOV EDI, 81
    CALL _malloc
    JMP L10000367e_269     ; inserted

; Entry 10000367e; block 268; address 100004626
L10000367e_268:
    LEA R15, [rel L__DATA___common + 6336]
    MOV R14D, dword [RBP + -272]
    MOV EBX, dword [RBP + -248]
    MOV R12D, dword [RBP + -216]
    JMP L10000367e_285     ; inserted

; Entry 10000367e; block 269; address 10000452a
L10000367e_269:
    LEA R14, [rel L__DATA___common + 312]
    MOV qword [R14], RAX
    TEST RAX, RAX
    LEA R15, [rel L__DATA___common + 6336]
    MOV R12D, dword [RBP + -216]
    JE L10000367e_271
    JMP L10000367e_270     ; inserted

; Entry 10000367e; block 270; address 10000454b
L10000367e_270:
    LEA RDI, [rel L__TEXT___cstring_4083]
    MOV RSI, RAX
    MOV EDX, 81
    CALL L100016398_0
    JMP L10000367e_272     ; inserted

; Entry 10000367e; block 271; address 100008418
L10000367e_271:
    LEA RSI, [rel L__TEXT___cstring_8301]
    JMP L10000367e_1431

; Entry 10000367e; block 272; address 10000455f
L10000367e_272:
    TEST RAX, RAX
    JE L10000367e_274
    JMP L10000367e_273     ; inserted

; Entry 10000367e; block 273; address 100004568
L10000367e_273:
    MOV RAX, qword [R14]
    CMP byte [RAX], 0
    JE L10000367e_276
    JMP L10000367e_275     ; inserted

; Entry 10000367e; block 274; address 1000083c1
L10000367e_274:
    LEA RSI, [rel L__TEXT___cstring_4100]
    JMP L10000367e_406

; Entry 10000367e; block 275; address 100004574
L10000367e_275:
    MOV EDI, 81
    CALL _malloc
    JMP L10000367e_277     ; inserted

; Entry 10000367e; block 276; address 10000832a
L10000367e_276:
    LEA RSI, [rel L__TEXT___cstring_8333]
    JMP L10000367e_406

; Entry 10000367e; block 277; address 10000457e
L10000367e_277:
    TEST RAX, RAX
    JE L10000367e_279
    JMP L10000367e_278     ; inserted

; Entry 10000367e; block 278; address 100004587
L10000367e_278:
    MOV RBX, RAX
    LEA RDI, [rel L__TEXT___cstring_4065]
    MOV RSI, RAX
    MOV EDX, 81
    CALL L100016398_0
    JMP L10000367e_280     ; inserted

; Entry 10000367e; block 279; address 100008424
L10000367e_279:
    LEA RSI, [rel L__TEXT___cstring_8366]
    JMP L10000367e_1431

; Entry 10000367e; block 280; address 10000459e
L10000367e_280:
    TEST RAX, RAX
    JE L10000367e_274
    JMP L10000367e_281     ; inserted

; Entry 10000367e; block 281; address 1000045a7
L10000367e_281:
    MOV RDI, qword [R14]
    MOV RSI, RBX
    CALL _strcmp
    JMP L10000367e_282     ; inserted

; Entry 10000367e; block 282; address 1000045b2
L10000367e_282:
    MOV R14D, EAX
    MOV RDI, RBX
    CALL _free
    JMP L10000367e_283     ; inserted

; Entry 10000367e; block 283; address 1000045bd
L10000367e_283:
    TEST R14D, R14D
    MOV R14D, dword [RBP + -272]
    MOV EBX, dword [RBP + -248]
    JE L10000367e_285
    JMP L10000367e_284     ; inserted

; Entry 10000367e; block 284; address 1000045cf
L10000367e_284:
    LEA RSI, [rel L__TEXT___cstring_8400]
    JMP L10000367e_406

; Entry 10000367e; block 285; address 100004641
L10000367e_285:
    LEA RAX, [rel L__DATA___common + 312]
    MOV RAX, qword [RAX]
    TEST RAX, RAX
    JE L10000367e_287
    JMP L10000367e_286     ; inserted

; Entry 10000367e; block 286; address 100004650
L10000367e_286:
    CMP byte [RAX], 0
    JE L10000367e_276
    JMP L10000367e_287     ; inserted

; Entry 10000367e; block 287; address 100004659
L10000367e_287:
    CMP dword [RBP + -164], 0
    JE L10000367e_289
    JMP L10000367e_288     ; inserted

; Entry 10000367e; block 288; address 100004662
L10000367e_288:
    MOV RCX, qword [R15]
    LEA RDI, [rel L__TEXT___cstring_8429]
    MOV ESI, 22
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_290     ; inserted

; Entry 10000367e; block 289; address 100004683
L10000367e_289:
    TEST R12D, R12D
    JNE L10000367e_292
    JMP L10000367e_291     ; inserted

; Entry 10000367e; block 290; address 10000467b
L10000367e_290:
    MOV RDI, qword [R15]
    CALL _fflush
    JMP L10000367e_289     ; inserted

; Entry 10000367e; block 291; address 10000468c
L10000367e_291:
    TEST EBX, EBX
    JE L10000367e_294
    JMP L10000367e_293     ; inserted

; Entry 10000367e; block 292; address 100008342
L10000367e_292:
    MOV RCX, qword [R15]
    LEA RDI, [rel L__TEXT___cstring_8452]
    MOV ESI, 14
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1422     ; inserted

; Entry 10000367e; block 293; address 100004694
L10000367e_293:
    LEA RDI, [rel L__TEXT___cstring_30364]
    CALL _puts
    JMP L10000367e_295     ; inserted

; Entry 10000367e; block 294; address 1000047ca
L10000367e_294:
    LEA R13, [rel L__DATA___common + 256]
    MOV R15, qword [R13]
    TEST R15, R15
    MOV dword [RBP + -272], R14D
    JE L10000367e_312
    JMP L10000367e_311     ; inserted

; Entry 10000367e; block 295; address 1000046a0
L10000367e_295:
    LEA RBX, [rel L__TEXT___cstring_8474]
    LEA RSI, [rel L__TEXT___cstring_8504]
    LEA RDX, [rel L__TEXT___cstring_8507]
    LEA RCX, [rel L__TEXT___cstring_8512]
    LEA R8, [rel L__TEXT___cstring_8516]
    LEA R9, [rel L__TEXT___cstring_8520]
    MOV RDI, RBX
    XOR EAX, EAX
    CALL _printf
    JMP L10000367e_296     ; inserted

; Entry 10000367e; block 296; address 1000046d4
L10000367e_296:
    LEA RSI, [rel L__TEXT___cstring_8138]
    LEA RDX, [rel L__TEXT___cstring_8532]
    LEA RCX, [rel L__TEXT___cstring_8537]
    LEA R9, [rel L__TEXT___cstring_8541]
    MOV RDI, RBX
    MOV R8, RCX
    XOR EAX, EAX
    CALL _printf
    JMP L10000367e_297     ; inserted

; Entry 10000367e; block 297; address 1000046fd
L10000367e_297:
    CMP qword [rel L__DATA___data + 616], 0
    JE L10000367e_299
    JMP L10000367e_298     ; inserted

; Entry 10000367e; block 298; address 10000470b
L10000367e_298:
    LEA R14, [rel L__DATA___data + 592]
    LEA R15, [rel L__TEXT___cstring_8595]
    LEA R13, [rel L__TEXT___cstring_8567]
    LEA R12, [rel L__TEXT___cstring_244]
    LEA RBX, [rel L__TEXT___cstring_8599]
    JMP L10000367e_309     ; inserted

; Entry 10000367e; block 299; address 1000047bc
L10000367e_299:
    XOR EDI, EDI
    CALL L100008eec_0
    JMP L10000367e_310     ; inserted

; Entry 10000367e; block 300; address 100004743
L10000367e_300:
    MOVSXD RAX, dword [R14 + 16]
    MOV RSI, R15
    CMP RAX, 5
    JA L10000367e_302
    JMP L10000367e_301     ; inserted

; Entry 10000367e; block 301; address 100004750
L10000367e_301:
    LEA RCX, [rel L__DATA_CONST___const + 2848]
    MOV RSI, qword [RCX + RAX * 8]
    JMP L10000367e_302     ; inserted

; Entry 10000367e; block 302; address 10000475b
L10000367e_302:
    MOV RDI, R13
    XOR EAX, EAX
    CALL _printf
    JMP L10000367e_303     ; inserted

; Entry 10000367e; block 303; address 100004765
L10000367e_303:
    MOV EAX, dword [R14 + 20]
    TEST EAX, EAX
    MOV RSI, R15
    CMOVE RSI, R12
    CMP EAX, 1
    LEA RAX, [rel L__TEXT___cstring_8516]
    CMOVE RSI, RAX
    MOV RDI, RBX
    XOR EAX, EAX
    CALL _printf
    JMP L10000367e_304     ; inserted

; Entry 10000367e; block 304; address 10000478a
L10000367e_304:
    MOV RSI, qword [R14 + 32]
    TEST RSI, RSI
    JE L10000367e_306
    JMP L10000367e_305     ; inserted

; Entry 10000367e; block 305; address 100004793
L10000367e_305:
    LEA RDI, [rel L__TEXT___cstring_8605]
    XOR EAX, EAX
    CALL _printf
    JMP L10000367e_307     ; inserted

; Entry 10000367e; block 306; address 1000047a3
L10000367e_306:
    MOV EDI, 10
    CALL _putchar
    JMP L10000367e_308     ; inserted

; Entry 10000367e; block 307; address 1000047a1
L10000367e_307:
    JMP L10000367e_308

; Entry 10000367e; block 308; address 1000047ad
L10000367e_308:
    CMP qword [R14 + 64], 0
    LEA R14, [R14 + 40]
    JNE L10000367e_309
    JMP L10000367e_299     ; inserted

; Entry 10000367e; block 309; address 10000472e
L10000367e_309:
    MOV RSI, qword [R14]
    MOV RDX, qword [R14 + 8]
    LEA RDI, [rel L__TEXT___cstring_8553]
    XOR EAX, EAX
    CALL _printf
    JMP L10000367e_300     ; inserted

; Entry 10000367e; block 310; address 1000047c3
L10000367e_310:
    XOR EBX, EBX
    JMP L10000367e_848

; Entry 10000367e; block 311; address 1000047e5
L10000367e_311:
    XOR EAX, EAX
    MOV RDI, R15
    JMP L10000367e_314     ; inserted

; Entry 10000367e; block 312; address 100004a14
L10000367e_312:
    LEA RAX, [rel L__DATA___common + 232]
    MOV dword [RAX], 0
    JMP L10000367e_354     ; inserted

; Entry 10000367e; block 313; address 1000047f7
L10000367e_313:
    LEA RDI, [RAX + 1]
    TEST RAX, RAX
    JNE L10000367e_314
    JMP L10000367e_315     ; inserted

; Entry 10000367e; block 314; address 1000047ea
L10000367e_314:
    MOV RBX, RAX
    MOV ESI, 47
    CALL _strrchr
    JMP L10000367e_313     ; inserted

; Entry 10000367e; block 315; address 100004800
L10000367e_315:
    TEST RBX, RBX
    CMOVE RBX, R15
    MOV RDI, RBX
    MOV ESI, 46
    CALL _strrchr
    JMP L10000367e_316     ; inserted

; Entry 10000367e; block 316; address 100004814
L10000367e_316:
    TEST RAX, RAX
    JNE L10000367e_318
    JMP L10000367e_317     ; inserted

; Entry 10000367e; block 317; address 100004819
L10000367e_317:
    MOV RDI, R15
    CALL _strlen
    JMP L10000367e_319     ; inserted

; Entry 10000367e; block 318; address 100004864
L10000367e_318:
    LEA RAX, [rel L__DATA___common + 248]
    CMP dword [RAX], 0
    LEA RAX, [rel L__TEXT___cstring_8627]
    LEA RCX, [rel L__TEXT___cstring_8625]
    CMOVE RCX, RAX
    LEA RBX, [RBP + -160]
    MOV EDX, 10
    MOV RDI, RBX
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000367e_326     ; inserted

; Entry 10000367e; block 319; address 100004821
L10000367e_319:
    LEA RDI, [RAX + 5]
    CALL _malloc
    JMP L10000367e_320     ; inserted

; Entry 10000367e; block 320; address 10000482a
L10000367e_320:
    TEST RAX, RAX
    JE L10000367e_322
    JMP L10000367e_321     ; inserted

; Entry 10000367e; block 321; address 100004833
L10000367e_321:
    MOV R14, RAX
    MOV RDI, RAX
    MOV RSI, R15
    CALL _strcpy
    JMP L10000367e_323     ; inserted

; Entry 10000367e; block 322; address 1000086e3
L10000367e_322:
    LEA RSI, [rel L__TEXT___cstring_8612]
    JMP L10000367e_1431

; Entry 10000367e; block 323; address 100004841
L10000367e_323:
    MOV RDI, R14
    CALL _strlen
    JMP L10000367e_324     ; inserted

; Entry 10000367e; block 324; address 100004849
L10000367e_324:
    MOV dword [R14 + RAX], 1735355438
    MOV byte [R14 + RAX + 4], 0
    MOV RDI, qword [R13]
    CALL _free
    JMP L10000367e_325     ; inserted

; Entry 10000367e; block 325; address 100004860
L10000367e_325:
    MOV qword [R13], R14
    JMP L10000367e_318     ; inserted

; Entry 10000367e; block 326; address 100004898
L10000367e_326:
    MOV RDI, qword [R13]
    MOV RSI, RBX
    CALL _fopen
    JMP L10000367e_327     ; inserted

; Entry 10000367e; block 327; address 1000048a4
L10000367e_327:
    LEA R12, [rel L__DATA___common + 240]
    MOV qword [R12], RAX
    TEST RAX, RAX
    JE L10000367e_329
    JMP L10000367e_328     ; inserted

; Entry 10000367e; block 328; address 1000048b8
L10000367e_328:
    LEA RBX, [RBP + -320]
    MOV RDI, RBX
    CALL _time
    JMP L10000367e_330     ; inserted

; Entry 10000367e; block 329; address 100008527
L10000367e_329:
    MOV R8, qword [R13]
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_8629]
    JMP L10000367e_1436

; Entry 10000367e; block 330; address 1000048c7
L10000367e_330:
    MOV RDI, RBX
    CALL _localtime
    JMP L10000367e_331     ; inserted

; Entry 10000367e; block 331; address 1000048cf
L10000367e_331:
    MOV R14, RAX
    MOV RCX, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_8657]
    MOV R13D, 1
    MOV ESI, 10
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_332     ; inserted

; Entry 10000367e; block 332; address 1000048f2
L10000367e_332:
    MOV RBX, qword [R12]
    MOV RDI, R14
    CALL _asctime
    JMP L10000367e_333     ; inserted

; Entry 10000367e; block 333; address 1000048fe
L10000367e_333:
    LEA RSI, [rel L__TEXT___cstring_8668]
    MOV RDI, RBX
    MOV RDX, RAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_334     ; inserted

; Entry 10000367e; block 334; address 100004912
L10000367e_334:
    MOV RCX, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_8686]
    MOV ESI, 25
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_335     ; inserted

; Entry 10000367e; block 335; address 10000492c
L10000367e_335:
    MOV RAX, qword [RBP + -208]
    MOV RBX, qword [RAX + 8]
    TEST RBX, RBX
    JE L10000367e_337
    JMP L10000367e_336     ; inserted

; Entry 10000367e; block 336; address 100004940
L10000367e_336:
    MOV R14, qword [rel __DefaultRuneLocale]
    MOV R15D, 16384
    JMP L10000367e_351     ; inserted

; Entry 10000367e; block 337; address 1000049ef
L10000367e_337:
    MOV RCX, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_8722]
    MOV ESI, 2
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_352     ; inserted

; Entry 10000367e; block 338; address 100004953
L10000367e_338:
    MOV R12D, 1
    JMP L10000367e_348     ; inserted

; Entry 10000367e; block 339; address 1000049c2
L10000367e_339:
    MOV RDI, qword [R12]
    LEA RSI, [rel L__TEXT___cstring_8718]
    MOV RDX, RBX
    JMP L10000367e_349     ; inserted

; Entry 10000367e; block 340; address 100004961
L10000367e_340:
    MOV EAX, EDI
    MOV EAX, dword [R14 + RAX * 4 + 60]
    AND EAX, R15D
    JMP L10000367e_342

; Entry 10000367e; block 341; address 10000496d
L10000367e_341:
    MOV ESI, 16384
    CALL ___maskrune
    JMP L10000367e_342     ; inserted

; Entry 10000367e; block 342; address 100004977
L10000367e_342:
    TEST EAX, EAX
    JNE L10000367e_344
    JMP L10000367e_343     ; inserted

; Entry 10000367e; block 343; address 10000497b
L10000367e_343:
    MOV RAX, qword [RBP + -208]
    MOV RBX, qword [RAX + R13 * 8]
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_345     ; inserted

; Entry 10000367e; block 344; address 10000499c
L10000367e_344:
    LEA R12, [rel L__DATA___common + 240]
    MOV RDI, qword [R12]
    MOV RAX, qword [RBP + -208]
    MOV RDX, qword [RAX + R13 * 8]
    LEA RSI, [rel L__TEXT___cstring_8712]
    JMP L10000367e_349

; Entry 10000367e; block 345; address 10000498e
L10000367e_345:
    CMP R12, RAX
    JAE L10000367e_347
    JMP L10000367e_346     ; inserted

; Entry 10000367e; block 346; address 100004993
L10000367e_346:
    MOV AL, byte [RBX + R12]
    INC R12
    JMP L10000367e_348

; Entry 10000367e; block 347; address 1000049bb
L10000367e_347:
    LEA R12, [rel L__DATA___common + 240]
    JMP L10000367e_339     ; inserted

; Entry 10000367e; block 348; address 100004959
L10000367e_348:
    MOVSX EDI, AL
    TEST DIL, DIL
    JS L10000367e_341
    JMP L10000367e_340     ; inserted

; Entry 10000367e; block 349; address 1000049d0
L10000367e_349:
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_350     ; inserted

; Entry 10000367e; block 350; address 1000049d7
L10000367e_350:
    MOV RAX, qword [RBP + -208]
    MOV RBX, qword [RAX + R13 * 8 + 8]
    INC R13
    TEST RBX, RBX
    JNE L10000367e_351
    JMP L10000367e_337     ; inserted

; Entry 10000367e; block 351; address 10000494d
L10000367e_351:
    MOV AL, byte [RBX]
    TEST AL, AL
    JE L10000367e_339
    JMP L10000367e_338     ; inserted

; Entry 10000367e; block 352; address 100004a09
L10000367e_352:
    MOV RDI, qword [R12]
    CALL _fflush
    JMP L10000367e_353     ; inserted

; Entry 10000367e; block 353; address 100004a12
L10000367e_353:
    JMP L10000367e_354

; Entry 10000367e; block 354; address 100004a21
L10000367e_354:
    LEA RAX, [rel L__DATA___common + 564]
    CMP dword [RAX], 0
    LEA R15, [rel L__DATA___common + 424]
    LEA R13, [rel L__DATA___common + 6336]
    JE L10000367e_356
    JMP L10000367e_355     ; inserted

; Entry 10000367e; block 355; address 100004a3b
L10000367e_355:
    MOV RBX, qword [R15]
    TEST RBX, RBX
    JE L10000367e_356
    JMP L10000367e_357     ; inserted

; Entry 10000367e; block 356; address 100004a9f
L10000367e_356:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    JE L10000367e_368
    JMP L10000367e_367     ; inserted

; Entry 10000367e; block 357; address 100004a43
L10000367e_357:
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_358     ; inserted

; Entry 10000367e; block 358; address 100004a4b
L10000367e_358:
    CMP EAX, 4
    JL L10000367e_360
    JMP L10000367e_359     ; inserted

; Entry 10000367e; block 359; address 100004a54
L10000367e_359:
    MOVSXD R14, EAX
    CMP byte [RBX + R14-1], 46
    JNE L10000367e_360
    JMP L10000367e_361     ; inserted

; Entry 10000367e; block 360; address 1000083b5
L10000367e_360:
    LEA RSI, [rel L__TEXT___cstring_8725]
    JMP L10000367e_406

; Entry 10000367e; block 361; address 100004a63
L10000367e_361:
    MOVSX EDI, byte [RBX + R14-1]
    CALL ___toupper
    JMP L10000367e_362     ; inserted

; Entry 10000367e; block 362; address 100004a6e
L10000367e_362:
    CMP EAX, 90
    JNE L10000367e_360
    JMP L10000367e_363     ; inserted

; Entry 10000367e; block 363; address 100004a77
L10000367e_363:
    MOVSX EDI, byte [RBX + R14-1]
    CALL ___toupper
    JMP L10000367e_364     ; inserted

; Entry 10000367e; block 364; address 100004a82
L10000367e_364:
    CMP EAX, 73
    JNE L10000367e_360
    JMP L10000367e_365     ; inserted

; Entry 10000367e; block 365; address 100004a8b
L10000367e_365:
    MOVSX EDI, byte [RBX + R14-1]
    CALL ___toupper
    JMP L10000367e_366     ; inserted

; Entry 10000367e; block 366; address 100004a96
L10000367e_366:
    CMP EAX, 80
    JNE L10000367e_360
    JMP L10000367e_356     ; inserted

; Entry 10000367e; block 367; address 100004aab
L10000367e_367:
    LEA RAX, [rel L__DATA___common + 136]
    LEA RCX, [rel L__DATA___common + 144]
    MOV RCX, qword [RCX]
    OR RCX, qword [RAX]
    JNE L10000367e_368
    JMP L10000367e_369     ; inserted

; Entry 10000367e; block 368; address 100004ac8
L10000367e_368:
    LEA RAX, [rel L__DATA___common + 656]
    CMP dword [RAX], 0
    MOV EBX, dword [RBP + -272]
    JE L10000367e_371
    JMP L10000367e_370     ; inserted

; Entry 10000367e; block 369; address 100004ac1
L10000367e_369:
    MOV qword [RAX], 10485760
    JMP L10000367e_368     ; inserted

; Entry 10000367e; block 370; address 100004ada
L10000367e_370:
    LEA RAX, [rel L__DATA___common + 648]
    CMP qword [RAX], 0
    JNE L10000367e_371
    JMP L10000367e_372     ; inserted

; Entry 10000367e; block 371; address 100004aec
L10000367e_371:
    TEST EBX, EBX
    JE L10000367e_374
    JMP L10000367e_373     ; inserted

; Entry 10000367e; block 372; address 100004ae7
L10000367e_372:
    CALL L100009304_0
    JMP L10000367e_371     ; inserted

; Entry 10000367e; block 373; address 100004af0
L10000367e_373:
    CMP dword [RBP + -192], 3
    JNE L10000367e_374
    JMP L10000367e_375     ; inserted

; Entry 10000367e; block 374; address 100004b10
L10000367e_374:
    TEST EBX, EBX
    JE L10000367e_377
    JMP L10000367e_376     ; inserted

; Entry 10000367e; block 375; address 100004af9
L10000367e_375:
    LEA RAX, [rel L__DATA___common + 292]
    MOV dword [RAX], 1
    MOV dword [rel L__DATA___data + 3912], 4
    JMP L10000367e_374     ; inserted

; Entry 10000367e; block 376; address 100004b14
L10000367e_376:
    LEA RAX, [rel L__DATA___common + 408]
    MOV RDI, qword [RAX]
    MOV RSI, qword [R15]
    CALL L100015685_0
    JMP L10000367e_378     ; inserted

; Entry 10000367e; block 377; address 100004b2e
L10000367e_377:
    LEA R12, [rel L__DATA___common + 64]
    MOV EDX, dword [R12]
    LEA RAX, [rel L__DATA___common + 272]
    MOV ECX, dword [RAX]
    TEST EDX, EDX
    JE L10000367e_381
    JMP L10000367e_380     ; inserted

; Entry 10000367e; block 378; address 100004b26
L10000367e_378:
    TEST EAX, EAX
    JE L10000367e_379
    JMP L10000367e_377     ; inserted

; Entry 10000367e; block 379; address 10000853e
L10000367e_379:
    MOV R8, qword [R15]
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_8766]
    JMP L10000367e_1436

; Entry 10000367e; block 380; address 100004b46
L10000367e_380:
    TEST ECX, ECX
    JNE L10000367e_382
    JMP L10000367e_381     ; inserted

; Entry 10000367e; block 381; address 100004b4e
L10000367e_381:
    MOV EAX, dword [rel L__DATA___data + 3912]
    CMP EAX, 4
    JNE L10000367e_384
    JMP L10000367e_383     ; inserted

; Entry 10000367e; block 382; address 100008468
L10000367e_382:
    LEA RSI, [rel L__TEXT___cstring_8812]
    JMP L10000367e_406

; Entry 10000367e; block 383; address 100004b59
L10000367e_383:
    LEA RSI, [rel L__DATA___common + 300]
    MOV ESI, dword [RSI]
    OR ESI, EBX
    JE L10000367e_385
    JMP L10000367e_384     ; inserted

; Entry 10000367e; block 384; address 100004b6a
L10000367e_384:
    TEST EBX, EBX
    JNE L10000367e_387
    JMP L10000367e_386     ; inserted

; Entry 10000367e; block 385; address 100008474
L10000367e_385:
    LEA RSI, [rel L__TEXT___cstring_8856]
    JMP L10000367e_406

; Entry 10000367e; block 386; address 100004b6e
L10000367e_386:
    TEST EDX, EDX
    JNE L10000367e_388
    JMP L10000367e_387     ; inserted

; Entry 10000367e; block 387; address 100004b76
L10000367e_387:
    TEST EDX, EDX
    JE L10000367e_390
    JMP L10000367e_389     ; inserted

; Entry 10000367e; block 388; address 100008480
L10000367e_388:
    LEA RDI, [rel L__TEXT___cstring_8888]
    LEA RSI, [rel L__TEXT___cstring_8927]
    CALL L1000034f4_0
    JMP L10000367e_1432     ; inserted

; Entry 10000367e; block 389; address 100004b7a
L10000367e_389:
    LEA RDX, [rel L__DATA___common + 292]
    CMP dword [RDX], 0
    JE L10000367e_391
    JMP L10000367e_390     ; inserted

; Entry 10000367e; block 390; address 100004b8a
L10000367e_390:
    TEST EBX, EBX
    JNE L10000367e_393
    JMP L10000367e_392     ; inserted

; Entry 10000367e; block 391; address 10000849f
L10000367e_391:
    LEA RSI, [rel L__TEXT___cstring_9020]
    JMP L10000367e_406

; Entry 10000367e; block 392; address 100004b8e
L10000367e_392:
    TEST ECX, ECX
    JNE L10000367e_394
    JMP L10000367e_393     ; inserted

; Entry 10000367e; block 393; address 100004b96
L10000367e_393:
    TEST ECX, ECX
    JE L10000367e_396
    JMP L10000367e_395     ; inserted

; Entry 10000367e; block 394; address 1000084ab
L10000367e_394:
    LEA RSI, [rel L__TEXT___cstring_9077]
    JMP L10000367e_406

; Entry 10000367e; block 395; address 100004b9a
L10000367e_395:
    MOV ECX, EAX
    AND ECX, 4294967291
    JE L10000367e_397
    JMP L10000367e_396     ; inserted

; Entry 10000367e; block 396; address 100004ba5
L10000367e_396:
    CMP EAX, 4
    JE L10000367e_399
    JMP L10000367e_398     ; inserted

; Entry 10000367e; block 397; address 1000084b7
L10000367e_397:
    LEA RSI, [rel L__TEXT___cstring_9110]
    JMP L10000367e_406

; Entry 10000367e; block 398; address 100004baa
L10000367e_398:
    LEA RCX, [rel L__DATA___common + 48]
    CMP dword [RCX], 2
    SETE CL
    LEA RDX, [rel L__DATA___common + 656]
    CMP dword [RDX], 0
    SETNE DL
    CMP qword [rel L__DATA___common + 24], 0
    JNE L10000367e_399
    JMP L10000367e_400     ; inserted

; Entry 10000367e; block 399; address 100004bf8
L10000367e_399:
    CMP dword [RBP + -192], 2
    JG L10000367e_405
    JMP L10000367e_407     ; inserted

; Entry 10000367e; block 400; address 100004bce
L10000367e_400:
    CMP dword [RBP + -196], 0
    JNE L10000367e_399
    JMP L10000367e_401     ; inserted

; Entry 10000367e; block 401; address 100004bd7
L10000367e_401:
    OR CL, DL
    JE L10000367e_399
    JMP L10000367e_402     ; inserted

; Entry 10000367e; block 402; address 100004bdb
L10000367e_402:
    CMP dword [RBP + -192], 3
    JL L10000367e_404
    JMP L10000367e_403     ; inserted

; Entry 10000367e; block 403; address 100004be4
L10000367e_403:
    AND EAX, 4294967294
    CMP EAX, 2
    JE L10000367e_405
    JMP L10000367e_404     ; inserted

; Entry 10000367e; block 404; address 100004bec
L10000367e_404:
    LEA RSI, [rel L__TEXT___cstring_9147]
    JMP L10000367e_406

; Entry 10000367e; block 405; address 100004c63
L10000367e_405:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RDI, qword [RAX]
    TEST RDI, RDI
    JE L10000367e_419
    JMP L10000367e_418     ; inserted

; Entry 10000367e; block 406; address 1000088f2
L10000367e_406:
    MOV EDI, 16
    CALL L100002e30_0

; Entry 10000367e; block 407; address 100004c01
L10000367e_407:
    CALL L1000093eb_0
    JMP L10000367e_408     ; inserted

; Entry 10000367e; block 408; address 100004c06
L10000367e_408:
    LEA RDI, [rel L__TEXT___cstring_7743]
    XOR ESI, ESI
    CALL L100016494_0
    JMP L10000367e_409     ; inserted

; Entry 10000367e; block 409; address 100004c14
L10000367e_409:
    TEST EAX, EAX
    JE L10000367e_411
    JMP L10000367e_410     ; inserted

; Entry 10000367e; block 410; address 100004c18
L10000367e_410:
    CMP EAX, 18446744073709551615
    JNE L10000367e_413
    JMP L10000367e_412     ; inserted

; Entry 10000367e; block 411; address 100004c41
L10000367e_411:
    CMP dword [RBP + -224], 0
    JNE L10000367e_417
    JMP L10000367e_416     ; inserted

; Entry 10000367e; block 412; address 100004c21
L10000367e_412:
    LEA RDI, [rel L__TEXT___cstring_9170]
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL L1000034f4_0
    JMP L10000367e_414     ; inserted

; Entry 10000367e; block 413; address 10000873a
L10000367e_413:
    LEA RSI, [rel L__TEXT___cstring_7743]
    JMP L10000367e_1433

; Entry 10000367e; block 414; address 100004c34
L10000367e_414:
    CMP dword [RBP + -240], 0
    JNE L10000367e_415
    JMP L10000367e_411     ; inserted

; Entry 10000367e; block 415; address 100008746
L10000367e_415:
    LEA RSI, [rel L__TEXT___cstring_7743]
    JMP L10000367e_1453

; Entry 10000367e; block 416; address 100004c4e
L10000367e_416:
    MOV EAX, 4
    MOV qword [RBP + -192], RAX
    XOR EAX, EAX
    MOV qword [RBP + -256], RAX
    JMP L10000367e_405     ; inserted

; Entry 10000367e; block 417; address 1000085f3
L10000367e_417:
    LEA RSI, [rel L__TEXT___cstring_9189]
    JMP L10000367e_406

; Entry 10000367e; block 418; address 100004c72
L10000367e_418:
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L10000367e_420     ; inserted

; Entry 10000367e; block 419; address 100004cbb
L10000367e_419:
    LEA R14, [rel L__DATA___data + 4528]
    MOV RBX, qword [R14]
    TEST RBX, RBX
    JE L10000367e_426
    JMP L10000367e_425     ; inserted

; Entry 10000367e; block 420; address 100004c7e
L10000367e_420:
    TEST EAX, EAX
    JNE L10000367e_419
    JMP L10000367e_421     ; inserted

; Entry 10000367e; block 421; address 100004c82
L10000367e_421:
    CMP dword [RBP + -164], 0
    JE L10000367e_423
    JMP L10000367e_422     ; inserted

; Entry 10000367e; block 422; address 100004c8b
L10000367e_422:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_9217]
    MOV ESI, 22
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_424     ; inserted

; Entry 10000367e; block 423; address 100004cae
L10000367e_423:
    LEA RAX, [rel L__DATA___common + 284]
    MOV dword [RAX], 1
    JMP L10000367e_419     ; inserted

; Entry 10000367e; block 424; address 100004ca5
L10000367e_424:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_423     ; inserted

; Entry 10000367e; block 425; address 100004cce
L10000367e_425:
    LEA RAX, [rel L__DATA___data + 4496]
    CMP dword [RAX], 9
    JE L10000367e_428
    JMP L10000367e_427     ; inserted

; Entry 10000367e; block 426; address 1000084c3
L10000367e_426:
    LEA RSI, [rel L__TEXT___cstring_9240]
    JMP L10000367e_406

; Entry 10000367e; block 427; address 100004cda
L10000367e_427:
    LEA RSI, [rel L__TEXT___cstring_9260]
    MOV RDI, RBX
    CALL _strcmp
    JMP L10000367e_429     ; inserted

; Entry 10000367e; block 428; address 100004d00
L10000367e_428:
    MOV qword [R14], 0
    JMP L10000367e_432     ; inserted

; Entry 10000367e; block 429; address 100004ce9
L10000367e_429:
    TEST EAX, EAX
    JE L10000367e_428
    JMP L10000367e_430     ; inserted

; Entry 10000367e; block 430; address 100004ced
L10000367e_430:
    LEA RSI, [rel L__TEXT___cstring_9262]
    MOV RDI, RBX
    CALL _strcmp
    JMP L10000367e_431     ; inserted

; Entry 10000367e; block 431; address 100004cfc
L10000367e_431:
    TEST EAX, EAX
    JNE L10000367e_432
    JMP L10000367e_428     ; inserted

; Entry 10000367e; block 432; address 100004d07
L10000367e_432:
    MOV EAX, dword [rel L__DATA___data + 3912]
    TEST EAX, EAX
    JNE L10000367e_434
    JMP L10000367e_433     ; inserted

; Entry 10000367e; block 433; address 100004d15
L10000367e_433:
    LEA RBX, [rel L__DATA___data + 4492]
    LEA R15, [rel L__DATA___common + 52]
    LEA R14, [rel L__DATA___common + 48]
    CMP byte [rel L__DATA___bss + 32], 0
    JNE L10000367e_436
    JMP L10000367e_435     ; inserted

; Entry 10000367e; block 434; address 100004daa
L10000367e_434:
    CMP EAX, 4
    JNE L10000367e_440
    JMP L10000367e_445     ; inserted

; Entry 10000367e; block 435; address 100004d33
L10000367e_435:
    TEST byte [rel L__DATA___bss + 8], 1
    JNE L10000367e_436
    JMP L10000367e_437     ; inserted

; Entry 10000367e; block 436; address 100004d5a
L10000367e_436:
    LEA RDI, [rel L__TEXT___cstring_9264]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000367e_441     ; inserted

; Entry 10000367e; block 437; address 100004d3c
L10000367e_437:
    LEA RAX, [rel L__DATA___common + 312]
    CMP qword [RAX], 0
    JNE L10000367e_436
    JMP L10000367e_438     ; inserted

; Entry 10000367e; block 438; address 100004d49
L10000367e_438:
    CMP dword [RBX], 18446744073709551615
    JNE L10000367e_436
    JMP L10000367e_439     ; inserted

; Entry 10000367e; block 439; address 100004d4e
L10000367e_439:
    MOV EAX, dword [R14]
    OR EAX, dword [R15]
    JE L10000367e_440
    JMP L10000367e_436     ; inserted

; Entry 10000367e; block 440; address 100004e10
L10000367e_440:
    LEA RBX, [rel L__DATA___common + 276]
    CMP dword [RBX], 0
    JE L10000367e_452
    JMP L10000367e_451     ; inserted

; Entry 10000367e; block 441; address 100004d6d
L10000367e_441:
    MOV dword [RBX], 4294967295
    XOR EAX, EAX
    MOV dword [R15], EAX
    MOV dword [R14], EAX
    LEA RBX, [rel L__DATA___common + 312]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L10000367e_443
    JMP L10000367e_442     ; inserted

; Entry 10000367e; block 442; address 100004d8a
L10000367e_442:
    CALL _free
    JMP L10000367e_444     ; inserted

; Entry 10000367e; block 443; address 100004d96
L10000367e_443:
    XOR EAX, EAX
    MOV byte [rel L__DATA___bss + 8], AL
    MOV byte [rel L__DATA___bss + 32], AL
    MOV EAX, dword [rel L__DATA___data + 3912]
    JMP L10000367e_434     ; inserted

; Entry 10000367e; block 444; address 100004d8f
L10000367e_444:
    MOV qword [RBX], 0
    JMP L10000367e_443     ; inserted

; Entry 10000367e; block 445; address 100004daf
L10000367e_445:
    LEA RBX, [rel L__DATA___data + 4492]
    LEA R15, [rel L__DATA___common + 52]
    LEA R14, [rel L__DATA___common + 48]
    CMP byte [rel L__DATA___bss + 32], 0
    JNE L10000367e_447
    JMP L10000367e_446     ; inserted

; Entry 10000367e; block 446; address 100004dcd
L10000367e_446:
    TEST byte [rel L__DATA___bss + 8], 1
    JNE L10000367e_447
    JMP L10000367e_448     ; inserted

; Entry 10000367e; block 447; address 100004de3
L10000367e_447:
    LEA RDI, [rel L__TEXT___cstring_9305]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000367e_450     ; inserted

; Entry 10000367e; block 448; address 100004dd6
L10000367e_448:
    CMP dword [RBX], 18446744073709551615
    JNE L10000367e_447
    JMP L10000367e_449     ; inserted

; Entry 10000367e; block 449; address 100004ddb
L10000367e_449:
    MOV EAX, dword [R14]
    OR EAX, dword [R15]
    JE L10000367e_440
    JMP L10000367e_447     ; inserted

; Entry 10000367e; block 450; address 100004df6
L10000367e_450:
    MOV dword [RBX], 4294967295
    XOR EAX, EAX
    MOV dword [R15], EAX
    MOV dword [R14], EAX
    MOV byte [rel L__DATA___bss + 8], AL
    MOV byte [rel L__DATA___bss + 32], AL
    JMP L10000367e_440     ; inserted

; Entry 10000367e; block 451; address 100004e1c
L10000367e_451:
    LEA RAX, [rel L__DATA___common + 56]
    CMP dword [RAX], 0
    JE L10000367e_452
    JMP L10000367e_453     ; inserted

; Entry 10000367e; block 452; address 100004e41
L10000367e_452:
    MOV ECX, dword [R12]
    LEA R14, [rel L__DATA___common + 72]
    MOV EAX, dword [R14]
    CMP ECX, 1
    LEA R13, [rel L__DATA___common + 564]
    JNE L10000367e_456
    JMP L10000367e_455     ; inserted

; Entry 10000367e; block 453; address 100004e28
L10000367e_453:
    LEA RDI, [rel L__TEXT___cstring_9366]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000367e_454     ; inserted

; Entry 10000367e; block 454; address 100004e3b
L10000367e_454:
    MOV dword [RBX], 0
    JMP L10000367e_452     ; inserted

; Entry 10000367e; block 455; address 100004e5b
L10000367e_455:
    TEST EAX, EAX
    JE L10000367e_456
    JMP L10000367e_457     ; inserted

; Entry 10000367e; block 456; address 100004e68
L10000367e_456:
    CMP ECX, 2
    JNE L10000367e_459
    JMP L10000367e_458     ; inserted

; Entry 10000367e; block 457; address 100004e5f
L10000367e_457:
    LEA RDI, [rel L__TEXT___cstring_9399]
    JMP L10000367e_461

; Entry 10000367e; block 458; address 100004e6d
L10000367e_458:
    TEST EAX, EAX
    JE L10000367e_459
    JMP L10000367e_460     ; inserted

; Entry 10000367e; block 459; address 100004e8c
L10000367e_459:
    LEA RBX, [rel L__DATA___common + 284]
    CMP byte [rel L__DATA___bss + 20], 1
    JNE L10000367e_464
    JMP L10000367e_463     ; inserted

; Entry 10000367e; block 460; address 100004e71
L10000367e_460:
    LEA RDI, [rel L__TEXT___cstring_9432]
    JMP L10000367e_461     ; inserted

; Entry 10000367e; block 461; address 100004e78
L10000367e_461:
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000367e_462     ; inserted

; Entry 10000367e; block 462; address 100004e84
L10000367e_462:
    MOV dword [R12], 0
    JMP L10000367e_459     ; inserted

; Entry 10000367e; block 463; address 100004e9c
L10000367e_463:
    CMP dword [RBX], 0
    JE L10000367e_464
    JMP L10000367e_465     ; inserted

; Entry 10000367e; block 464; address 100004ebb
L10000367e_464:
    CMP dword [R13], 0
    JE L10000367e_467
    JMP L10000367e_466     ; inserted

; Entry 10000367e; block 465; address 100004ea1
L10000367e_465:
    MOV byte [rel L__DATA___bss + 20], 0
    LEA RDI, [rel L__TEXT___cstring_9467]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000367e_464     ; inserted

; Entry 10000367e; block 466; address 100004ec2
L10000367e_466:
    MOV EAX, dword [R14]
    OR EAX, dword [R12]
    JNE L10000367e_469
    JMP L10000367e_468     ; inserted

; Entry 10000367e; block 467; address 100004edd
L10000367e_467:
    MOV EAX, dword [rel L__DATA___data + 3912]
    XOR EAX, 1
    OR EAX, dword [RBP + -264]
    SETNE AL
    JE L10000367e_472
    JMP L10000367e_471     ; inserted

; Entry 10000367e; block 468; address 100004ecf
L10000367e_468:
    MOV EAX, dword [RBX]
    OR EAX, dword [RBP + -264]
    JNE L10000367e_470
    JMP L10000367e_467     ; inserted

; Entry 10000367e; block 469; address 100008554
L10000367e_469:
    LEA RSI, [rel L__TEXT___cstring_9502]
    JMP L10000367e_406

; Entry 10000367e; block 470; address 100008560
L10000367e_470:
    LEA RSI, [rel L__TEXT___cstring_9556]
    JMP L10000367e_406

; Entry 10000367e; block 471; address 100004ef1
L10000367e_471:
    LEA RCX, [rel L__DATA___common + 68]
    CMP dword [RCX], 0
    JNE L10000367e_473
    JMP L10000367e_472     ; inserted

; Entry 10000367e; block 472; address 100004f01
L10000367e_472:
    CMP dword [RBX], 0
    SETE CL
    XOR AL, 1
    OR AL, CL
    JE L10000367e_475
    JMP L10000367e_474     ; inserted

; Entry 10000367e; block 473; address 1000084cf
L10000367e_473:
    LEA RSI, [rel L__TEXT___cstring_9611]
    JMP L10000367e_406

; Entry 10000367e; block 474; address 100004f11
L10000367e_474:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_477
    JMP L10000367e_476     ; inserted

; Entry 10000367e; block 475; address 1000084db
L10000367e_475:
    LEA RSI, [rel L__TEXT___cstring_9662]
    JMP L10000367e_406

; Entry 10000367e; block 476; address 100004f1d
L10000367e_476:
    MOV EAX, dword [R12]
    CMP EAX, 2
    JE L10000367e_479
    JMP L10000367e_478     ; inserted

; Entry 10000367e; block 477; address 100004f47
L10000367e_477:
    CMP dword [RBP + -164], 0
    JE L10000367e_483
    JMP L10000367e_482     ; inserted

; Entry 10000367e; block 478; address 100004f26
L10000367e_478:
    CMP EAX, 1
    JNE L10000367e_477
    JMP L10000367e_480     ; inserted

; Entry 10000367e; block 479; address 100004f34
L10000367e_479:
    LEA RDI, [rel L__TEXT___cstring_9753]
    JMP L10000367e_481     ; inserted

; Entry 10000367e; block 480; address 100004f2b
L10000367e_480:
    LEA RDI, [rel L__TEXT___cstring_9705]
    JMP L10000367e_481

; Entry 10000367e; block 481; address 100004f3b
L10000367e_481:
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L100003422_0
    JMP L10000367e_477     ; inserted

; Entry 10000367e; block 482; address 100004f54
L10000367e_482:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RCX, qword [RBX]
    LEA RDI, [rel L__TEXT___cstring_9790]
    MOV ESI, 20
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_484     ; inserted

; Entry 10000367e; block 483; address 100004fe0
L10000367e_483:
    CMP dword [R12], 2
    JNE L10000367e_487
    JMP L10000367e_492     ; inserted

; Entry 10000367e; block 484; address 100004f74
L10000367e_484:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L10000367e_485     ; inserted

; Entry 10000367e; block 485; address 100004f7c
L10000367e_485:
    CMP dword [R12], 2
    JNE L10000367e_487
    JMP L10000367e_486     ; inserted

; Entry 10000367e; block 486; address 100004f87
L10000367e_486:
    LEA R15, [rel L__DATA___common + 6336]
    MOV RCX, qword [R15]
    LEA RDI, [rel L__TEXT___cstring_9811]
    MOV ESI, 45
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_488     ; inserted

; Entry 10000367e; block 487; address 100005070
L10000367e_487:
    CALL L10000a401_0
    JMP L10000367e_506     ; inserted

; Entry 10000367e; block 488; address 100004fa7
L10000367e_488:
    MOV RDI, qword [R15]
    CALL _fflush
    JMP L10000367e_489     ; inserted

; Entry 10000367e; block 489; address 100004faf
L10000367e_489:
    LEA RAX, [rel L__DATA___common + 6344]
    MOV qword [RAX], 0
    MOV RCX, qword [R15]
    LEA RDI, [rel L__TEXT___cstring_9857]
    MOV ESI, 32
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_490     ; inserted

; Entry 10000367e; block 490; address 100004fd6
L10000367e_490:
    MOV RDI, qword [R15]
    CALL _fflush
    JMP L10000367e_491     ; inserted

; Entry 10000367e; block 491; address 100004fde
L10000367e_491:
    JMP L10000367e_493

; Entry 10000367e; block 492; address 100004feb
L10000367e_492:
    LEA RAX, [rel L__DATA___common + 6344]
    MOV qword [RAX], 0
    LEA R15, [rel L__DATA___common + 6336]
    JMP L10000367e_493     ; inserted

; Entry 10000367e; block 493; address 100005000
L10000367e_493:
    LEA RAX, [rel L__DATA___common + 320]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L10000367e_495
    JMP L10000367e_494     ; inserted

; Entry 10000367e; block 494; address 100005013
L10000367e_494:
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_496     ; inserted

; Entry 10000367e; block 495; address 10000511a
L10000367e_495:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RBX, qword [RAX]
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_519     ; inserted

; Entry 10000367e; block 496; address 10000501b
L10000367e_496:
    LEA RDI, [RAX + 12]
    CALL _malloc
    JMP L10000367e_497     ; inserted

; Entry 10000367e; block 497; address 100005024
L10000367e_497:
    LEA R14, [rel L__DATA___common + 384]
    MOV qword [R14], RAX
    TEST RAX, RAX
    JE L10000367e_499
    JMP L10000367e_498     ; inserted

; Entry 10000367e; block 498; address 100005037
L10000367e_498:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L10000367e_500     ; inserted

; Entry 10000367e; block 499; address 100008580
L10000367e_499:
    LEA RSI, [rel L__TEXT___cstring_9890]
    JMP L10000367e_1431

; Entry 10000367e; block 500; address 100005042
L10000367e_500:
    MOV RBX, qword [R14]
    CMP byte [RBX], 0
    JE L10000367e_502
    JMP L10000367e_501     ; inserted

; Entry 10000367e; block 501; address 10000504a
L10000367e_501:
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_503     ; inserted

; Entry 10000367e; block 502; address 10000505d
L10000367e_502:
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_505     ; inserted

; Entry 10000367e; block 503; address 100005052
L10000367e_503:
    CMP byte [RAX + RBX-1], 47
    JE L10000367e_504
    JMP L10000367e_502     ; inserted

; Entry 10000367e; block 504; address 100005187
L10000367e_504:
    LEA R12, [rel L__DATA___common + 384]
    MOV RBX, qword [R12]
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_528     ; inserted

; Entry 10000367e; block 505; address 100005065
L10000367e_505:
    MOV word [RBX + RAX], 47
    JMP L10000367e_504

; Entry 10000367e; block 506; address 100005075
L10000367e_506:
    TEST EAX, EAX
    JNE L10000367e_508
    JMP L10000367e_507     ; inserted

; Entry 10000367e; block 507; address 10000507d
L10000367e_507:
    MOV EAX, dword [R13]
    CMP EAX, 18446744073709551615
    JE L10000367e_510
    JMP L10000367e_509     ; inserted

; Entry 10000367e; block 508; address 1000084f5
L10000367e_508:
    LEA RCX, [rel L__DATA___common + 6376]
    JMP L10000367e_1429     ; inserted

; Entry 10000367e; block 509; address 10000508a
L10000367e_509:
    OR EAX, dword [R12]
    LEA R12, [rel L__DATA___common + 656]
    JNE L10000367e_512
    JMP L10000367e_511     ; inserted

; Entry 10000367e; block 510; address 1000052a6
L10000367e_510:
    MOV dword [R13], 0
    LEA R12, [rel L__DATA___common + 656]
    JMP L10000367e_512     ; inserted

; Entry 10000367e; block 511; address 10000509b
L10000367e_511:
    LEA RAX, [rel L__DATA___common + 440]
    CMP qword [RAX], 2
    JB L10000367e_512
    JMP L10000367e_513     ; inserted

; Entry 10000367e; block 512; address 1000052b5
L10000367e_512:
    LEA RAX, [rel L__DATA___common + 600]
    CMP dword [RAX], 0
    JE L10000367e_550
    JMP L10000367e_549     ; inserted

; Entry 10000367e; block 513; address 1000050ac
L10000367e_513:
    LEA R14, [RBP + -160]
    MOV qword [R14], 0
    LEA RAX, [rel L__DATA___common + 408]
    MOV RDI, qword [RAX]
    XOR ESI, ESI
    CALL L1000127e1_0
    JMP L10000367e_514     ; inserted

; Entry 10000367e; block 514; address 1000050cb
L10000367e_514:
    LEA R15, [rel L__DATA___common + 416]
    MOV qword [R15], RAX
    MOV RDI, RAX
    XOR ESI, ESI
    MOV RDX, R14
    XOR ECX, ECX
    CALL L1000169ab_0
    JMP L10000367e_515     ; inserted

; Entry 10000367e; block 515; address 1000050e4
L10000367e_515:
    TEST RAX, RAX
    JE L10000367e_517
    JMP L10000367e_516     ; inserted

; Entry 10000367e; block 516; address 1000050ed
L10000367e_516:
    MOV dword [R13], 1
    MOV RAX, qword [RBP + -160]
    LEA RCX, [rel L__DATA___common + 568]
    MOV qword [RCX], RAX
    MOV RDI, qword [R15]
    CALL _free
    JMP L10000367e_518     ; inserted

; Entry 10000367e; block 517; address 1000062b4
L10000367e_517:
    MOV RSI, qword [R15]
    LEA RDI, [rel L__TEXT___cstring_10050]
    CALL L1000034f4_0
    JMP L10000367e_847     ; inserted

; Entry 10000367e; block 518; address 10000510e
L10000367e_518:
    MOV qword [R15], 0
    JMP L10000367e_512

; Entry 10000367e; block 519; address 10000512c
L10000367e_519:
    LEA RDI, [RAX + 12]
    CALL _malloc
    JMP L10000367e_520     ; inserted

; Entry 10000367e; block 520; address 100005135
L10000367e_520:
    LEA R14, [rel L__DATA___common + 384]
    MOV qword [R14], RAX
    TEST RAX, RAX
    JE L10000367e_499
    JMP L10000367e_521     ; inserted

; Entry 10000367e; block 521; address 100005148
L10000367e_521:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L10000367e_522     ; inserted

; Entry 10000367e; block 522; address 100005153
L10000367e_522:
    MOV RBX, qword [R14]
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_523     ; inserted

; Entry 10000367e; block 523; address 10000515e
L10000367e_523:
    MOV EDX, EAX
    XOR ECX, ECX
    TEST EAX, EAX
    CMOVS RCX, RAX
    JMP L10000367e_526     ; inserted

; Entry 10000367e; block 524; address 10000516c
L10000367e_524:
    LEA RAX, [RDX + -1]
    CMP byte [RBX + RDX-1], 47
    MOV RDX, RAX
    JNE L10000367e_526
    JMP L10000367e_527     ; inserted

; Entry 10000367e; block 525; address 100005180
L10000367e_525:
    MOVSXD RAX, ECX
    MOV byte [RBX + RAX], 0
    JMP L10000367e_504     ; inserted

; Entry 10000367e; block 526; address 100005168
L10000367e_526:
    TEST EDX, EDX
    JLE L10000367e_525
    JMP L10000367e_524     ; inserted

; Entry 10000367e; block 527; address 10000517a
L10000367e_527:
    INC RAX
    MOV RCX, RAX
    JMP L10000367e_525     ; inserted

; Entry 10000367e; block 528; address 10000519a
L10000367e_528:
    MOV RCX, 6365935209750751610
    MOV qword [RBX + RAX], RCX
    MOV byte [RBX + RAX + 8], 0
    MOV RDI, qword [R12]
    CALL _mkstemp
    JMP L10000367e_529     ; inserted

; Entry 10000367e; block 529; address 1000051b6
L10000367e_529:
    CMP EAX, 18446744073709551615
    JE L10000367e_531
    JMP L10000367e_530     ; inserted

; Entry 10000367e; block 530; address 1000051bf
L10000367e_530:
    LEA RSI, [rel L__TEXT___cstring_8627]
    MOV EDI, EAX
    CALL _fdopen
    JMP L10000367e_532     ; inserted

; Entry 10000367e; block 531; address 1000084e7
L10000367e_531:
    MOV RSI, qword [R12]
    JMP L10000367e_1460     ; inserted

; Entry 10000367e; block 532; address 1000051cd
L10000367e_532:
    MOV RBX, RAX
    LEA RAX, [rel L__DATA___common + 392]
    MOV qword [RAX], RBX
    TEST RBX, RBX
    JE L10000367e_531
    JMP L10000367e_533     ; inserted

; Entry 10000367e; block 533; address 1000051e3
L10000367e_533:
    MOV EDI, 16384
    CALL _malloc
    JMP L10000367e_534     ; inserted

; Entry 10000367e; block 534; address 1000051ed
L10000367e_534:
    TEST RAX, RAX
    JE L10000367e_536
    JMP L10000367e_535     ; inserted

; Entry 10000367e; block 535; address 1000051f6
L10000367e_535:
    MOV ECX, 16384
    MOV RDI, RBX
    MOV RSI, RAX
    XOR EDX, EDX
    CALL _setvbuf
    JMP L10000367e_537     ; inserted

; Entry 10000367e; block 536; address 10000858c
L10000367e_536:
    MOV RSI, qword [R12]
    JMP L10000367e_1431

; Entry 10000367e; block 537; address 100005208
L10000367e_537:
    CALL L10000a401_0
    JMP L10000367e_538     ; inserted

; Entry 10000367e; block 538; address 10000520d
L10000367e_538:
    TEST EAX, EAX
    JNE L10000367e_508
    JMP L10000367e_539     ; inserted

; Entry 10000367e; block 539; address 100005215
L10000367e_539:
    CMP dword [RBP + -164], 0
    JE L10000367e_541
    JMP L10000367e_540     ; inserted

; Entry 10000367e; block 540; address 10000521e
L10000367e_540:
    MOV RCX, qword [R15]
    LEA RDI, [rel L__TEXT___cstring_9924]
    MOV ESI, 36
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_542     ; inserted

; Entry 10000367e; block 541; address 10000523f
L10000367e_541:
    LEA R13, [rel L__DATA___common + 6344]
    MOV R14, qword [R13]
    LEA RAX, [rel L__DATA___common + 616]
    MOV RBX, qword [RAX]
    XOR R15D, R15D
    TEST RBX, RBX
    JE L10000367e_544
    JMP L10000367e_543     ; inserted

; Entry 10000367e; block 542; address 100005237
L10000367e_542:
    MOV RDI, qword [R15]
    CALL _fflush
    JMP L10000367e_541     ; inserted

; Entry 10000367e; block 543; address 100005260
L10000367e_543:
    MOV RDI, RBX
    CALL L10000d930_0
    JMP L10000367e_545     ; inserted

; Entry 10000367e; block 544; address 100005486
L10000367e_544:
    MOV RSI, R14
    JMP L10000367e_588     ; inserted

; Entry 10000367e; block 545; address 100005268
L10000367e_545:
    TEST EAX, EAX
    JNE L10000367e_547
    JMP L10000367e_546     ; inserted

; Entry 10000367e; block 546; address 100005270
L10000367e_546:
    MOVZX EAX, word [RBX + 40]
    MOVZX ECX, word [RBX + 44]
    ADD RCX, RAX
    MOVZX EAX, word [RBX + 46]
    ADD RAX, RCX
    MOV RCX, qword [R13]
    LEA RSI, [RCX + RAX]
    ADD RSI, 46
    MOV qword [R13], RSI
    INC R15
    MOV RBX, qword [RBX + 152]
    TEST RBX, RBX
    JNE L10000367e_543
    JMP L10000367e_548     ; inserted

; Entry 10000367e; block 547; address 100008310
L10000367e_547:
    MOV RSI, qword [R12]
    JMP L10000367e_1433

; Entry 10000367e; block 548; address 1000052a1
L10000367e_548:
    JMP L10000367e_588

; Entry 10000367e; block 549; address 1000052c1
L10000367e_549:
    LEA RAX, [rel L__DATA___common + 568]
    MOV RDI, qword [RAX]
    TEST RDI, RDI
    JE L10000367e_550
    JMP L10000367e_551     ; inserted

; Entry 10000367e; block 550; address 1000052e8
L10000367e_550:
    LEA RAX, [rel L__DATA___common + 448]
    MOV qword [RAX], 0
    LEA RAX, [rel L__DATA___common + 624]
    CMP dword [RAX], 0
    LEA R13, [rel L__DATA___common + 6336]
    JNE L10000367e_554
    JMP L10000367e_553     ; inserted

; Entry 10000367e; block 551; address 1000052d0
L10000367e_551:
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L100015b84_0
    JMP L10000367e_552     ; inserted

; Entry 10000367e; block 552; address 1000052d9
L10000367e_552:
    LEA RDI, [rel L__TEXT___cstring_10087]
    MOV RSI, RAX
    CALL L100003422_0
    JMP L10000367e_550     ; inserted

; Entry 10000367e; block 553; address 100005309
L10000367e_553:
    LEA RAX, [rel L__DATA___common + 300]
    CMP dword [RAX], 0
    JE L10000367e_554
    JMP L10000367e_555     ; inserted

; Entry 10000367e; block 554; address 10000532f
L10000367e_554:
    LEA RAX, [rel L__DATA___common + 6360]
    CMP qword [RAX], 0
    JNE L10000367e_559
    JMP L10000367e_558     ; inserted

; Entry 10000367e; block 555; address 100005315
L10000367e_555:
    CMP dword [RBP + -192], 3
    JE L10000367e_557
    JMP L10000367e_556     ; inserted

; Entry 10000367e; block 556; address 100005322
L10000367e_556:
    CMP dword [rel L__DATA___data + 3912], 4
    JE L10000367e_557
    JMP L10000367e_554     ; inserted

; Entry 10000367e; block 557; address 1000086ef
L10000367e_557:
    LEA RAX, [rel L__DATA___common + 6376]
    JMP L10000367e_1450

; Entry 10000367e; block 558; address 10000533c
L10000367e_558:
    CMP dword [RBP + -264], 0
    JNE L10000367e_561
    JMP L10000367e_560     ; inserted

; Entry 10000367e; block 559; address 100005364
L10000367e_559:
    LEA RAX, [rel L__DATA___common + 616]
    MOV qword [RBP + -224], RAX
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L10000367e_563
    JMP L10000367e_562     ; inserted

; Entry 10000367e; block 560; address 100005345
L10000367e_560:
    CMP dword [rel L__DATA___data + 3912], 1
    JE L10000367e_559
    JMP L10000367e_561     ; inserted

; Entry 10000367e; block 561; address 10000534e
L10000367e_561:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RDI, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_10100]
    CALL L1000034f4_0
    JMP L10000367e_559     ; inserted

; Entry 10000367e; block 562; address 10000537a
L10000367e_562:
    CMP dword [RBP + -272], 0
    JE L10000367e_563
    JMP L10000367e_564     ; inserted

; Entry 10000367e; block 563; address 1000053bf
L10000367e_563:
    MOV RAX, qword [rel L__DATA___common + 24]
    TEST RAX, RAX
    JE L10000367e_572
    JMP L10000367e_571     ; inserted

; Entry 10000367e; block 564; address 100005383
L10000367e_564:
    CMP dword [RBP + -192], 3
    JNE L10000367e_563
    JMP L10000367e_565     ; inserted

; Entry 10000367e; block 565; address 10000538c
L10000367e_565:
    LEA R14, [rel L__DATA___data + 4504]
    JMP L10000367e_570     ; inserted

; Entry 10000367e; block 566; address 10000539a
L10000367e_566:
    MOV RDI, qword [RBX + 120]
    MOV ESI, dword [R14]
    CALL L100010a07_0
    JMP L10000367e_568     ; inserted

; Entry 10000367e; block 567; address 1000053a8
L10000367e_567:
    MOV EAX, 1
    JMP L10000367e_569     ; inserted

; Entry 10000367e; block 568; address 1000053a6
L10000367e_568:
    JMP L10000367e_569

; Entry 10000367e; block 569; address 1000053ad
L10000367e_569:
    MOV dword [RBX + 136], EAX
    MOV RBX, qword [RBX + 152]
    TEST RBX, RBX
    JNE L10000367e_570
    JMP L10000367e_563     ; inserted

; Entry 10000367e; block 570; address 100005393
L10000367e_570:
    CMP dword [R12], 0
    JE L10000367e_567
    JMP L10000367e_566     ; inserted

; Entry 10000367e; block 571; address 1000053cf
L10000367e_571:
    CMP dword [rel L__DATA___data + 3912], 4
    JNE L10000367e_574
    JMP L10000367e_573     ; inserted

; Entry 10000367e; block 572; address 1000056f5
L10000367e_572:
    LEA RAX, [rel L__DATA___common + 48]
    CMP dword [RAX], 2
    JNE L10000367e_638
    JMP L10000367e_637     ; inserted

; Entry 10000367e; block 573; address 1000053dc
L10000367e_573:
    CMP dword [RBP + -164], 0
    JE L10000367e_576
    JMP L10000367e_575     ; inserted

; Entry 10000367e; block 574; address 100005620
L10000367e_574:
    CMP dword [RBP + -164], 0
    JE L10000367e_622
    JMP L10000367e_621     ; inserted

; Entry 10000367e; block 575; address 1000053e5
L10000367e_575:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10120]
    MOV ESI, 29
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_577     ; inserted

; Entry 10000367e; block 576; address 100005418
L10000367e_576:
    LEA RBX, [rel L__DATA___data + 4504]
    LEA R14, [rel L__TEXT___cstring_10150]
    JMP L10000367e_586     ; inserted

; Entry 10000367e; block 577; address 1000053ff
L10000367e_577:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_578     ; inserted

; Entry 10000367e; block 578; address 100005408
L10000367e_578:
    MOV RAX, qword [rel L__DATA___common + 24]
    TEST RAX, RAX
    JE L10000367e_572
    JMP L10000367e_576     ; inserted

; Entry 10000367e; block 579; address 100005430
L10000367e_579:
    TEST EAX, EAX
    JE L10000367e_581
    JMP L10000367e_580     ; inserted

; Entry 10000367e; block 580; address 100005434
L10000367e_580:
    CMP EAX, 18446744073709551615
    JNE L10000367e_583
    JMP L10000367e_582     ; inserted

; Entry 10000367e; block 581; address 10000544f
L10000367e_581:
    MOV RAX, qword [rel L__DATA___common + 24]
    MOV RDI, qword [RAX]
    CALL _free
    JMP L10000367e_584     ; inserted

; Entry 10000367e; block 582; address 10000543d
L10000367e_582:
    MOV RAX, qword [rel L__DATA___common + 24]
    MOV RSI, qword [RAX]
    MOV RDI, R14
    CALL L1000034f4_0
    JMP L10000367e_581     ; inserted

; Entry 10000367e; block 583; address 100008319
L10000367e_583:
    MOV RCX, qword [rel L__DATA___common + 24]
    JMP L10000367e_1429

; Entry 10000367e; block 584; address 10000545e
L10000367e_584:
    MOV RDI, qword [rel L__DATA___common + 24]
    MOV RAX, qword [RDI + 8]
    MOV qword [rel L__DATA___common + 24], RAX
    CALL _free
    JMP L10000367e_585     ; inserted

; Entry 10000367e; block 585; address 100005475
L10000367e_585:
    MOV RAX, qword [rel L__DATA___common + 24]
    TEST RAX, RAX
    JNE L10000367e_586
    JMP L10000367e_587     ; inserted

; Entry 10000367e; block 586; address 100005426
L10000367e_586:
    MOV RDI, qword [RAX]
    MOV ESI, dword [RBX]
    CALL L1000108f3_0
    JMP L10000367e_579     ; inserted

; Entry 10000367e; block 587; address 100005481
L10000367e_587:
    JMP L10000367e_572

; Entry 10000367e; block 588; address 100005489
L10000367e_588:
    LEA RAX, [rel L__DATA___common + 6360]
    CMP qword [RAX], 0
    JNE L10000367e_590
    JMP L10000367e_589     ; inserted

; Entry 10000367e; block 589; address 100005496
L10000367e_589:
    LEA RDI, [rel L__TEXT___cstring_9961]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000367e_591     ; inserted

; Entry 10000367e; block 590; address 1000054ad
L10000367e_590:
    SUB RSI, R14
    LEA RAX, [rel L__DATA___common + 6352]
    MOVZX ECX, word [RAX]
    LEA RAX, [rel L__DATA___common + 632]
    MOV R8, qword [RAX]
    MOV RDI, R15
    MOV RDX, R14
    CALL L10000de58_0
    JMP L10000367e_592     ; inserted

; Entry 10000367e; block 591; address 1000054a9
L10000367e_591:
    MOV RSI, qword [R13]
    JMP L10000367e_590     ; inserted

; Entry 10000367e; block 592; address 1000054cf
L10000367e_592:
    TEST EAX, EAX
    JNE L10000367e_547
    JMP L10000367e_593     ; inserted

; Entry 10000367e; block 593; address 1000054d7
L10000367e_593:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    CALL _fclose
    JMP L10000367e_594     ; inserted

; Entry 10000367e; block 594; address 1000054e6
L10000367e_594:
    TEST EAX, EAX
    LEA R15, [rel L__DATA___common + 424]
    MOV RBX, qword [RBP + -264]
    JNE L10000367e_596
    JMP L10000367e_595     ; inserted

; Entry 10000367e; block 595; address 1000054fc
L10000367e_595:
    LEA R14, [rel L__DATA___common + 400]
    MOV RDI, qword [R14]
    TEST RDI, RDI
    JE L10000367e_598
    JMP L10000367e_597     ; inserted

; Entry 10000367e; block 596; address 100008595
L10000367e_596:
    XOR EAX, EAX
    TEST EBX, EBX
    SETNE AL
    LEA EDI, [RAX * 4 * 10]
    MOV RSI, qword [R12]
    CALL L100002e30_0

; Entry 10000367e; block 597; address 10000550b
L10000367e_597:
    CALL _fclose
    JMP L10000367e_599     ; inserted

; Entry 10000367e; block 598; address 100005517
L10000367e_598:
    LEA R14, [rel L__DATA___common + 6376]
    MOV RDI, qword [R14]
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L10000367e_600     ; inserted

; Entry 10000367e; block 599; address 100005510
L10000367e_599:
    MOV qword [R14], 0
    JMP L10000367e_598     ; inserted

; Entry 10000367e; block 600; address 10000552d
L10000367e_600:
    TEST EBX, EBX
    JNE L10000367e_602
    JMP L10000367e_601     ; inserted

; Entry 10000367e; block 601; address 100005531
L10000367e_601:
    TEST EAX, EAX
    JE L10000367e_602
    JMP L10000367e_603     ; inserted

; Entry 10000367e; block 602; address 100005555
L10000367e_602:
    MOV qword [R12], 0
    LEA RAX, [rel L__DATA___common + 432]
    MOV EBX, dword [RAX]
    TEST EBX, EBX
    JE L10000367e_608
    JMP L10000367e_607     ; inserted

; Entry 10000367e; block 603; address 100005535
L10000367e_603:
    MOV RDI, qword [R15]
    MOV RSI, qword [R12]
    CALL L100011614_0
    JMP L10000367e_604     ; inserted

; Entry 10000367e; block 604; address 100005541
L10000367e_604:
    MOV RSI, qword [R12]
    TEST EAX, EAX
    JNE L10000367e_606
    JMP L10000367e_605     ; inserted

; Entry 10000367e; block 605; address 10000554d
L10000367e_605:
    MOV RDI, RSI
    CALL _free
    JMP L10000367e_602     ; inserted

; Entry 10000367e; block 606; address 1000086b6
L10000367e_606:
    MOV EBX, EAX
    LEA RDI, [rel L__TEXT___cstring_4120]
    CALL L1000034f4_0
    JMP L10000367e_1448     ; inserted

; Entry 10000367e; block 607; address 10000556a
L10000367e_607:
    MOV RDI, qword [R14]
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L10000367e_609     ; inserted

; Entry 10000367e; block 608; address 100005587
L10000367e_608:
    LEA R14, [rel L__DATA___common + 240]
    MOV RDI, qword [R14]
    TEST RDI, RDI
    JE L10000367e_612
    JMP L10000367e_611     ; inserted

; Entry 10000367e; block 609; address 100005579
L10000367e_609:
    TEST EAX, EAX
    JE L10000367e_608
    JMP L10000367e_610     ; inserted

; Entry 10000367e; block 610; address 10000557d
L10000367e_610:
    MOV RDI, qword [R15]
    MOV ESI, EBX
    CALL L100011897_0
    JMP L10000367e_608     ; inserted

; Entry 10000367e; block 611; address 10000559a
L10000367e_611:
    LEA RAX, [rel L__DATA___common + 192]
    MOV RDX, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_10012]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_613     ; inserted

; Entry 10000367e; block 612; address 1000068b0
L10000367e_612:
    XOR EBX, EBX
    XOR EDI, EDI
    JMP L10000367e_963     ; inserted

; Entry 10000367e; block 613; address 1000055b2
L10000367e_613:
    MOV RDI, qword [R14]
    LEA RAX, [rel L__DATA___common + 224]
    MOV RSI, qword [RAX]
    CALL L100015c88_0
    JMP L10000367e_614     ; inserted

; Entry 10000367e; block 614; address 1000055c4
L10000367e_614:
    MOV RCX, qword [R14]
    LEA RDI, [rel L__TEXT___cstring_10033]
    MOV ESI, 7
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_615     ; inserted

; Entry 10000367e; block 615; address 1000055dd
L10000367e_615:
    LEA RBX, [RBP + -160]
    MOV RDI, RBX
    CALL _time
    JMP L10000367e_616     ; inserted

; Entry 10000367e; block 616; address 1000055ec
L10000367e_616:
    MOV RDI, RBX
    CALL _localtime
    JMP L10000367e_617     ; inserted

; Entry 10000367e; block 617; address 1000055f4
L10000367e_617:
    MOV RBX, qword [R14]
    MOV RDI, RAX
    CALL _asctime
    JMP L10000367e_618     ; inserted

; Entry 10000367e; block 618; address 1000055ff
L10000367e_618:
    LEA RSI, [rel L__TEXT___cstring_10041]
    MOV RDI, RBX
    MOV RDX, RAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_619     ; inserted

; Entry 10000367e; block 619; address 100005613
L10000367e_619:
    MOV RDI, qword [R14]
    CALL _fflush
    JMP L10000367e_620     ; inserted

; Entry 10000367e; block 620; address 10000561b
L10000367e_620:
    JMP L10000367e_612

; Entry 10000367e; block 621; address 100005629
L10000367e_621:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10167]
    MOV ESI, 19
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_623     ; inserted

; Entry 10000367e; block 622; address 10000565c
L10000367e_622:
    LEA R14, [rel L__TEXT___cstring_9170]
    MOV EBX, 25
    LEA R15, [rel L__DATA___data + 4504]
    JMP L10000367e_636     ; inserted

; Entry 10000367e; block 623; address 100005643
L10000367e_623:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_624     ; inserted

; Entry 10000367e; block 624; address 10000564c
L10000367e_624:
    MOV RAX, qword [rel L__DATA___common + 24]
    TEST RAX, RAX
    JE L10000367e_572
    JMP L10000367e_622     ; inserted

; Entry 10000367e; block 625; address 10000567c
L10000367e_625:
    BT EBX, EDX
    JAE L10000367e_626
    JMP L10000367e_627     ; inserted

; Entry 10000367e; block 626; address 100005688
L10000367e_626:
    MOV RDI, qword [RAX]
    MOVZX ESI, CL
    CALL L100016494_0
    JMP L10000367e_628     ; inserted

; Entry 10000367e; block 627; address 100005681
L10000367e_627:
    CMP dword [R15], 0
    SETNE CL
    JMP L10000367e_626     ; inserted

; Entry 10000367e; block 628; address 100005693
L10000367e_628:
    TEST EAX, EAX
    JE L10000367e_630
    JMP L10000367e_629     ; inserted

; Entry 10000367e; block 629; address 100005697
L10000367e_629:
    CMP EAX, 18446744073709551615
    JNE L10000367e_583
    JMP L10000367e_631     ; inserted

; Entry 10000367e; block 630; address 1000056bf
L10000367e_630:
    MOV RAX, qword [rel L__DATA___common + 24]
    MOV RDI, qword [RAX]
    CALL _free
    JMP L10000367e_634     ; inserted

; Entry 10000367e; block 631; address 1000056a0
L10000367e_631:
    MOV RAX, qword [rel L__DATA___common + 24]
    MOV RSI, qword [RAX]
    MOV RDI, R14
    CALL L1000034f4_0
    JMP L10000367e_632     ; inserted

; Entry 10000367e; block 632; address 1000056b2
L10000367e_632:
    CMP dword [RBP + -240], 0
    JNE L10000367e_633
    JMP L10000367e_630     ; inserted

; Entry 10000367e; block 633; address 1000083cd
L10000367e_633:
    MOV RAX, qword [rel L__DATA___common + 24]
    JMP L10000367e_1450     ; inserted

; Entry 10000367e; block 634; address 1000056ce
L10000367e_634:
    MOV RDI, qword [rel L__DATA___common + 24]
    MOV RAX, qword [RDI + 8]
    MOV qword [rel L__DATA___common + 24], RAX
    CALL _free
    JMP L10000367e_635     ; inserted

; Entry 10000367e; block 635; address 1000056e5
L10000367e_635:
    MOV RAX, qword [rel L__DATA___common + 24]
    TEST RAX, RAX
    JNE L10000367e_636
    JMP L10000367e_572     ; inserted

; Entry 10000367e; block 636; address 10000566f
L10000367e_636:
    XOR ECX, ECX
    MOV EDX, dword [rel L__DATA___data + 3912]
    CMP EDX, 4
    JA L10000367e_626
    JMP L10000367e_625     ; inserted

; Entry 10000367e; block 637; address 100005701
L10000367e_637:
    XOR EAX, EAX
    MOV ECX, dword [rel L__DATA___data + 3912]
    CMP ECX, 4
    JA L10000367e_640
    JMP L10000367e_639     ; inserted

; Entry 10000367e; block 638; address 10000576b
L10000367e_638:
    CMP dword [RBP + -164], 0
    JE L10000367e_649
    JMP L10000367e_648     ; inserted

; Entry 10000367e; block 639; address 10000570e
L10000367e_639:
    MOV EDX, 25
    BT EDX, ECX
    JAE L10000367e_640
    JMP L10000367e_641     ; inserted

; Entry 10000367e; block 640; address 100005725
L10000367e_640:
    MOVZX ESI, AL
    LEA RDI, [rel L__TEXT___cstring_10187]
    CALL L100016494_0
    JMP L10000367e_642     ; inserted

; Entry 10000367e; block 641; address 100005718
L10000367e_641:
    LEA RAX, [rel L__DATA___data + 4504]
    CMP dword [RAX], 0
    SETNE AL
    JMP L10000367e_640     ; inserted

; Entry 10000367e; block 642; address 100005734
L10000367e_642:
    TEST EAX, EAX
    JE L10000367e_638
    JMP L10000367e_643     ; inserted

; Entry 10000367e; block 643; address 100005738
L10000367e_643:
    CMP EAX, 18446744073709551615
    JNE L10000367e_645
    JMP L10000367e_644     ; inserted

; Entry 10000367e; block 644; address 100005741
L10000367e_644:
    LEA RDI, [rel L__TEXT___cstring_9170]
    LEA RSI, [rel L__TEXT___cstring_10189]
    CALL L1000034f4_0
    JMP L10000367e_646     ; inserted

; Entry 10000367e; block 645; address 100008786
L10000367e_645:
    LEA RSI, [rel L__TEXT___cstring_10214]
    JMP L10000367e_1433

; Entry 10000367e; block 646; address 100005754
L10000367e_646:
    CMP dword [RBP + -240], 0
    MOV dword [RBP + -240], 0
    JNE L10000367e_647
    JMP L10000367e_638     ; inserted

; Entry 10000367e; block 647; address 100008792
L10000367e_647:
    LEA RSI, [rel L__TEXT___cstring_10214]
    JMP L10000367e_1453

; Entry 10000367e; block 648; address 100005774
L10000367e_648:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10217]
    MOV ESI, 21
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_650     ; inserted

; Entry 10000367e; block 649; address 100005797
L10000367e_649:
    CMP dword [RBP + -196], 0
    JNE L10000367e_652
    JMP L10000367e_651     ; inserted

; Entry 10000367e; block 650; address 10000578e
L10000367e_650:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_649     ; inserted

; Entry 10000367e; block 651; address 1000057a0
L10000367e_651:
    CMP dword [RBP + -192], 4
    JE L10000367e_652
    JMP L10000367e_653     ; inserted

; Entry 10000367e; block 652; address 1000057f9
L10000367e_652:
    CMP dword [RBP + -164], 0
    JE L10000367e_662
    JMP L10000367e_661     ; inserted

; Entry 10000367e; block 653; address 1000057a9
L10000367e_653:
    MOV EAX, dword [rel L__DATA___data + 3912]
    AND EAX, 4294967294
    CMP EAX, 2
    JNE L10000367e_652
    JMP L10000367e_654     ; inserted

; Entry 10000367e; block 654; address 1000057b7
L10000367e_654:
    LEA RAX, [rel L__DATA___common + 616]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L10000367e_652
    JMP L10000367e_655     ; inserted

; Entry 10000367e; block 655; address 1000057c6
L10000367e_655:
    LEA R14, [rel L__DATA___data + 4504]
    JMP L10000367e_660     ; inserted

; Entry 10000367e; block 656; address 1000057d4
L10000367e_656:
    MOV RDI, qword [RBX + 120]
    MOV ESI, dword [R14]
    CALL L100010a07_0
    JMP L10000367e_658     ; inserted

; Entry 10000367e; block 657; address 1000057e2
L10000367e_657:
    MOV EAX, 1
    JMP L10000367e_659     ; inserted

; Entry 10000367e; block 658; address 1000057e0
L10000367e_658:
    JMP L10000367e_659

; Entry 10000367e; block 659; address 1000057e7
L10000367e_659:
    MOV dword [RBX + 136], EAX
    MOV RBX, qword [RBX + 152]
    TEST RBX, RBX
    JNE L10000367e_660
    JMP L10000367e_652     ; inserted

; Entry 10000367e; block 660; address 1000057cd
L10000367e_660:
    CMP dword [R12], 0
    JE L10000367e_657
    JMP L10000367e_656     ; inserted

; Entry 10000367e; block 661; address 100005802
L10000367e_661:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10239]
    MOV ESI, 18
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_663     ; inserted

; Entry 10000367e; block 662; address 100005825
L10000367e_662:
    CALL L100010be1_0
    JMP L10000367e_664     ; inserted

; Entry 10000367e; block 663; address 10000581c
L10000367e_663:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_662     ; inserted

; Entry 10000367e; block 664; address 10000582a
L10000367e_664:
    TEST EAX, EAX
    JNE L10000367e_666
    JMP L10000367e_665     ; inserted

; Entry 10000367e; block 665; address 100005832
L10000367e_665:
    LEA RAX, [rel L__DATA___common + 6360]
    CMP qword [RAX], 0
    JE L10000367e_668
    JMP L10000367e_667     ; inserted

; Entry 10000367e; block 666; address 100008506
L10000367e_666:
    CMP EAX, 16
    JNE L10000367e_1435
    JMP L10000367e_1434     ; inserted

; Entry 10000367e; block 667; address 10000583f
L10000367e_667:
    LEA RAX, [rel L__DATA___common + 6384]
    MOV RDI, qword [RAX]
    CALL _free
    JMP L10000367e_668     ; inserted

; Entry 10000367e; block 668; address 10000584e
L10000367e_668:
    LEA R12, [rel L__DATA___common + 320]
    XOR EAX, EAX
    MOV qword [RBP + -216], RAX
    CMP qword [R12], 0
    JNE L10000367e_670
    JMP L10000367e_669     ; inserted

; Entry 10000367e; block 669; address 100005865
L10000367e_669:
    LEA R15, [rel L__DATA___common + 6376]
    MOV R14, qword [R15]
    MOV RDI, R14
    MOV ESI, 47
    CALL _strrchr
    JMP L10000367e_671     ; inserted

; Entry 10000367e; block 670; address 1000058bb
L10000367e_670:
    CMP dword [RBP + -164], 0
    JE L10000367e_677
    JMP L10000367e_676     ; inserted

; Entry 10000367e; block 671; address 10000587c
L10000367e_671:
    TEST RAX, RAX
    JE L10000367e_670
    JMP L10000367e_672     ; inserted

; Entry 10000367e; block 672; address 100005881
L10000367e_672:
    MOV RBX, RAX
    SUB EAX, R14D
    INC EAX
    MOVSXD RDI, EAX
    CALL _malloc
    JMP L10000367e_673     ; inserted

; Entry 10000367e; block 673; address 100005891
L10000367e_673:
    MOV qword [R12], RAX
    TEST RAX, RAX
    JE L10000367e_240
    JMP L10000367e_674     ; inserted

; Entry 10000367e; block 674; address 10000589e
L10000367e_674:
    MOVSX R14D, byte [RBX]
    MOV byte [RBX], 0
    MOV RDI, qword [R12]
    MOV RSI, qword [R15]
    CALL _strcpy
    JMP L10000367e_675     ; inserted

; Entry 10000367e; block 675; address 1000058b1
L10000367e_675:
    MOV qword [RBP + -216], R14
    MOV byte [RBX], R14B
    JMP L10000367e_670     ; inserted

; Entry 10000367e; block 676; address 1000058c4
L10000367e_676:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10319]
    MOV ESI, 29
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_678     ; inserted

; Entry 10000367e; block 677; address 1000058e7
L10000367e_677:
    LEA RAX, [rel L__DATA___common + 352]
    MOV dword [RAX], 0
    LEA R14, [rel L__DATA___common + 360]
    MOV qword [R14], 0
    LEA RAX, [rel L__DATA___common + 616]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    LEA R15, [rel L__DATA___common + 284]
    JE L10000367e_680
    JMP L10000367e_679     ; inserted

; Entry 10000367e; block 678; address 1000058de
L10000367e_678:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_677     ; inserted

; Entry 10000367e; block 679; address 10000591c
L10000367e_679:
    MOV dword [RBP + -180], 1
    LEA R12, [rel L__DATA___common + 344]
    XOR EAX, EAX
    MOV qword [RBP + -248], RAX
    JMP L10000367e_729     ; inserted

; Entry 10000367e; block 680; address 100005d11
L10000367e_680:
    MOV dword [RBP + -180], 1
    XOR EAX, EAX
    MOV qword [RBP + -248], RAX
    JMP L10000367e_743     ; inserted

; Entry 10000367e; block 681; address 100005946
L10000367e_681:
    CMP qword [R12], 0
    JE L10000367e_682
    JMP L10000367e_683     ; inserted

; Entry 10000367e; block 682; address 1000059f1
L10000367e_682:
    MOV dword [RBX + 144], 0
    CMP dword [RBX + 136], 0
    JE L10000367e_693
    JMP L10000367e_692     ; inserted

; Entry 10000367e; block 683; address 100005951
L10000367e_683:
    MOV RAX, qword [R14]
    INC RAX
    MOV qword [R14], RAX
    MOV RCX, 10330176681277348905
    IMUL RAX, RCX
    ROR RAX, 2
    MOV RCX, 184467440737095516
    CMP RAX, RCX
    JA L10000367e_682
    JMP L10000367e_684     ; inserted

; Entry 10000367e; block 684; address 10000597b
L10000367e_684:
    XOR EDI, EDI
    CALL _time
    JMP L10000367e_685     ; inserted

; Entry 10000367e; block 685; address 100005982
L10000367e_685:
    MOV R13, RAX
    SUB RAX, qword [R12]
    LEA RCX, [rel L__DATA___data + 4552]
    CMP RAX, qword [RCX]
    JLE L10000367e_682
    JMP L10000367e_686     ; inserted

; Entry 10000367e; block 686; address 100005995
L10000367e_686:
    LEA RAX, [rel L__DATA___common + 352]
    CMP dword [RAX], 0
    JNE L10000367e_688
    JMP L10000367e_687     ; inserted

; Entry 10000367e; block 687; address 1000059a1
L10000367e_687:
    LEA RAX, [rel L__DATA___common + 352]
    MOV dword [RAX], 1
    LEA R15, [rel L__DATA___common + 6336]
    MOV RSI, qword [R15]
    MOV EDI, 32
    CALL _fputc
    JMP L10000367e_689     ; inserted

; Entry 10000367e; block 688; address 1000059ca
L10000367e_688:
    MOV qword [R12], R13
    LEA R15, [rel L__DATA___common + 6336]
    MOV RSI, qword [R15]
    MOV EDI, 46
    CALL _fputc
    JMP L10000367e_690     ; inserted

; Entry 10000367e; block 689; address 1000059c2
L10000367e_689:
    MOV RDI, qword [R15]
    CALL _fflush
    JMP L10000367e_688     ; inserted

; Entry 10000367e; block 690; address 1000059e2
L10000367e_690:
    MOV RDI, qword [R15]
    CALL _fflush
    JMP L10000367e_691     ; inserted

; Entry 10000367e; block 691; address 1000059ea
L10000367e_691:
    LEA R15, [rel L__DATA___common + 284]
    JMP L10000367e_682     ; inserted

; Entry 10000367e; block 692; address 100005a04
L10000367e_692:
    MOV R13, qword [RBX + 24]
    MOV RAX, qword [RBX + 32]
    MOV qword [RBP + -232], RAX
    MOV EAX, dword [rel L__DATA___data + 3912]
    CMP EAX, 4
    JE L10000367e_695
    JMP L10000367e_694     ; inserted

; Entry 10000367e; block 693; address 100005a3b
L10000367e_693:
    MOV dword [RBP + -180], 0
    JMP L10000367e_704

; Entry 10000367e; block 694; address 100005a1e
L10000367e_694:
    TEST EAX, EAX
    JNE L10000367e_696
    JMP L10000367e_695     ; inserted

; Entry 10000367e; block 695; address 100005a22
L10000367e_695:
    MOV RDI, RBX
    LEA RSI, [RBP + -320]
    CALL L10000ed53_0
    JMP L10000367e_697     ; inserted

; Entry 10000367e; block 696; address 100005a83
L10000367e_696:
    MOV R13, qword [RBX + 80]
    TEST R13, R13
    JE L10000367e_706
    JMP L10000367e_705     ; inserted

; Entry 10000367e; block 697; address 100005a31
L10000367e_697:
    TEST AL, 1
    JNE L10000367e_699
    JMP L10000367e_698     ; inserted

; Entry 10000367e; block 698; address 100005a35
L10000367e_698:
    MOV RAX, qword [RBX + 8]
    JMP L10000367e_700

; Entry 10000367e; block 699; address 100005a4a
L10000367e_699:
    LEA RDI, [RBP + -312]
    CALL L1000114d4_0
    JMP L10000367e_700     ; inserted

; Entry 10000367e; block 700; address 100005a56
L10000367e_700:
    LEA RCX, [rel L__DATA___common + 368]
    CMP RAX, qword [RCX]
    JB L10000367e_702
    JMP L10000367e_701     ; inserted

; Entry 10000367e; block 701; address 100005a62
L10000367e_701:
    LEA RCX, [rel L__DATA___common + 376]
    MOV RCX, qword [RCX]
    DEC RCX
    CMP RCX, RAX
    JAE L10000367e_703
    JMP L10000367e_702     ; inserted

; Entry 10000367e; block 702; address 100005a74
L10000367e_702:
    MOV dword [RBX + 136], 0
    JMP L10000367e_704

; Entry 10000367e; block 703; address 100005aa0
L10000367e_703:
    LEA RAX, [rel L__DATA___common + 192]
    INC qword [RAX]
    MOV RAX, qword [RBP + -232]
    MOV qword [RBX + 32], RAX
    CMP R13, 18446744073709551613
    JA L10000367e_709
    JMP L10000367e_708     ; inserted

; Entry 10000367e; block 704; address 100005c24
L10000367e_704:
    MOV RBX, qword [RBX + 152]
    TEST RBX, RBX
    JNE L10000367e_729
    JMP L10000367e_730     ; inserted

; Entry 10000367e; block 705; address 100005a8c
L10000367e_705:
    MOV RDI, R13
    CALL _strlen
    JMP L10000367e_707     ; inserted

; Entry 10000367e; block 706; address 100005ad1
L10000367e_706:
    XOR R15D, R15D
    JMP L10000367e_710     ; inserted

; Entry 10000367e; block 707; address 100005a94
L10000367e_707:
    CMP byte [RAX + R13-1], 47
    SETE R15B
    JMP L10000367e_710

; Entry 10000367e; block 708; address 100005abb
L10000367e_708:
    LEA RAX, [rel L__DATA___common + 224]
    ADD qword [RAX], R13
    JMP L10000367e_709     ; inserted

; Entry 10000367e; block 709; address 100005ac5
L10000367e_709:
    INC qword [RBP + -248]
    JMP L10000367e_704

; Entry 10000367e; block 710; address 100005ad4
L10000367e_710:
    MOV RDI, R13
    XOR ESI, ESI
    LEA RDX, [RBP + -232]
    LEA RCX, [RBP + -160]
    CALL L1000169ab_0
    JMP L10000367e_711     ; inserted

; Entry 10000367e; block 711; address 100005aec
L10000367e_711:
    MOV R13, RAX
    TEST RAX, RAX
    MOV EAX, dword [RBP + -180]
    MOV ECX, 0
    CMOVE EAX, ECX
    MOV dword [RBP + -180], EAX
    JE L10000367e_713
    JMP L10000367e_712     ; inserted

; Entry 10000367e; block 712; address 100005b08
L10000367e_712:
    LEA RAX, [rel L__DATA___common + 368]
    CMP R13, qword [RAX]
    JB L10000367e_713
    JMP L10000367e_714     ; inserted

; Entry 10000367e; block 713; address 100005b26
L10000367e_713:
    MOVZX ECX, byte [rel L__DATA___bss + 8]
    ADD ECX, ECX
    XOR EAX, EAX
    MOV dword [RBX + 136], ECX
    TEST R13, R13
    JE L10000367e_717
    JMP L10000367e_716     ; inserted

; Entry 10000367e; block 714; address 100005b14
L10000367e_714:
    LEA RAX, [rel L__DATA___common + 376]
    MOV RAX, qword [RAX]
    DEC RAX
    CMP RAX, R13
    JAE L10000367e_715
    JMP L10000367e_713     ; inserted

; Entry 10000367e; block 715; address 100005b64
L10000367e_715:
    MOV EAX, dword [rel L__DATA___data + 3912]
    AND EAX, 4294967294
    CMP EAX, 2
    JNE L10000367e_721
    JMP L10000367e_720     ; inserted

; Entry 10000367e; block 716; address 100005b3c
L10000367e_716:
    LEA RCX, [rel L__DATA___common + 368]
    CMP R13, qword [RCX]
    LEA R15, [rel L__DATA___common + 284]
    JB L10000367e_719
    JMP L10000367e_718     ; inserted

; Entry 10000367e; block 717; address 100005b98
L10000367e_717:
    LEA R15, [rel L__DATA___common + 284]
    JMP L10000367e_719     ; inserted

; Entry 10000367e; block 718; address 100005b4f
L10000367e_718:
    LEA RAX, [rel L__DATA___common + 376]
    MOV RAX, qword [RAX]
    DEC RAX
    CMP RAX, R13
    SETAE AL
    JMP L10000367e_719

; Entry 10000367e; block 719; address 100005b9f
L10000367e_719:
    MOVZX ECX, AL
    MOV dword [RBX + 140], ECX
    LEA RCX, [rel L__DATA___common + 60]
    CMP dword [RCX], 0
    LEA RCX, [rel L__DATA___common + 6336]
    JE L10000367e_727
    JMP L10000367e_726     ; inserted

; Entry 10000367e; block 720; address 100005b76
L10000367e_720:
    MOV RDI, RBX
    LEA RSI, [RBP + -320]
    CALL L10000ed53_0
    JMP L10000367e_722     ; inserted

; Entry 10000367e; block 721; address 100005c4d
L10000367e_721:
    LEA RAX, [rel L__DATA___common + 272]
    CMP dword [RAX], 0
    MOV RAX, qword [RBX + 8]
    JE L10000367e_732
    JMP L10000367e_731     ; inserted

; Entry 10000367e; block 722; address 100005b85
L10000367e_722:
    TEST AL, 1
    JNE L10000367e_724
    JMP L10000367e_723     ; inserted

; Entry 10000367e; block 723; address 100005b8d
L10000367e_723:
    CMP R13, qword [RBX + 8]
    JBE L10000367e_713
    JMP L10000367e_725     ; inserted

; Entry 10000367e; block 724; address 100005c39
L10000367e_724:
    MOV RAX, qword [RBP + -152]
    CMP RAX, qword [RBP + -312]
    JLE L10000367e_713
    JMP L10000367e_721     ; inserted

; Entry 10000367e; block 725; address 100005b93
L10000367e_725:
    JMP L10000367e_721

; Entry 10000367e; block 726; address 100005bbb
L10000367e_726:
    MOV RDI, qword [RCX]
    MOV RDX, qword [RBX + 128]
    TEST AL, AL
    LEA RCX, [rel L__TEXT___cstring_10385]
    LEA RAX, [rel L__TEXT___cstring_10374]
    CMOVNE RCX, RAX
    LEA RSI, [rel L__TEXT___cstring_10351]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_727     ; inserted

; Entry 10000367e; block 727; address 100005be7
L10000367e_727:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RDI, qword [RAX]
    TEST RDI, RDI
    JE L10000367e_704
    JMP L10000367e_728     ; inserted

; Entry 10000367e; block 728; address 100005bf6
L10000367e_728:
    MOV RDX, qword [RBX + 128]
    CMP dword [RBX + 140], 0
    LEA RCX, [rel L__TEXT___cstring_10374]
    LEA RAX, [rel L__TEXT___cstring_10385]
    CMOVE RCX, RAX
    LEA RSI, [rel L__TEXT___cstring_10351]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_704     ; inserted

; Entry 10000367e; block 729; address 100005936
L10000367e_729:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_682
    JMP L10000367e_681     ; inserted

; Entry 10000367e; block 730; address 100005c34
L10000367e_730:
    JMP L10000367e_743

; Entry 10000367e; block 731; address 100005c5d
L10000367e_731:
    CMP R13, RAX
    JNE L10000367e_732
    JMP L10000367e_733     ; inserted

; Entry 10000367e; block 732; address 100005c8c
L10000367e_732:
    CMP R13, RAX
    LEA R15, [rel L__DATA___common + 284]
    JNE L10000367e_737
    JMP L10000367e_736     ; inserted

; Entry 10000367e; block 733; address 100005c62
L10000367e_733:
    MOV RAX, qword [RBP + -232]
    CMP RAX, 18446744073709551615
    SETE CL
    TEST R15B, CL
    LEA R15, [rel L__DATA___common + 284]
    JNE L10000367e_702
    JMP L10000367e_734     ; inserted

; Entry 10000367e; block 734; address 100005c80
L10000367e_734:
    CMP RAX, qword [RBX + 32]
    JE L10000367e_702
    JMP L10000367e_735     ; inserted

; Entry 10000367e; block 735; address 100005c8a
L10000367e_735:
    JMP L10000367e_736

; Entry 10000367e; block 736; address 100005c98
L10000367e_736:
    MOV RDX, qword [RBX + 32]
    MOV RAX, qword [RBP + -232]
    MOV RCX, RAX
    NOT RCX
    OR RCX, RDX
    SETE CL
    CMP RAX, RDX
    JE L10000367e_739
    JMP L10000367e_738     ; inserted

; Entry 10000367e; block 737; address 100005cc4
L10000367e_737:
    MOV dword [RBP + -180], 0
    MOV RAX, qword [RBP + -232]
    JMP L10000367e_741

; Entry 10000367e; block 738; address 100005cb4
L10000367e_738:
    TEST CL, CL
    JNE L10000367e_739
    JMP L10000367e_740     ; inserted

; Entry 10000367e; block 739; address 100005cd7
L10000367e_739:
    MOV dword [RBX + 144], 1
    JMP L10000367e_741     ; inserted

; Entry 10000367e; block 740; address 100005cb8
L10000367e_740:
    MOV dword [RBP + -180], 0
    JMP L10000367e_741

; Entry 10000367e; block 741; address 100005ce1
L10000367e_741:
    LEA RCX, [rel L__DATA___common + 192]
    INC qword [RCX]
    MOV ECX, 0
    CMP RAX, 18446744073709551613
    CMOVBE RCX, RAX
    MOV qword [RBX + 32], RCX
    JA L10000367e_709
    JMP L10000367e_742     ; inserted

; Entry 10000367e; block 742; address 100005d02
L10000367e_742:
    LEA RCX, [rel L__DATA___common + 224]
    ADD qword [RCX], RAX
    JMP L10000367e_709

; Entry 10000367e; block 743; address 100005d24
L10000367e_743:
    CMP dword [RBP + -164], 0
    JE L10000367e_745
    JMP L10000367e_744     ; inserted

; Entry 10000367e; block 744; address 100005d2d
L10000367e_744:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RBX]
    LEA RAX, [rel L__DATA___common + 6328]
    MOV EDX, dword [RAX]
    LEA RSI, [rel L__TEXT___cstring_10402]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_746     ; inserted

; Entry 10000367e; block 745; address 100005d56
L10000367e_745:
    MOV qword [R14], 0
    LEA RAX, [rel L__DATA___common + 352]
    MOV dword [RAX], 0
    LEA RAX, [rel L__DATA___common + 640]
    MOV R12, qword [RAX]
    TEST R12, R12
    JE L10000367e_748
    JMP L10000367e_747     ; inserted

; Entry 10000367e; block 746; address 100005d4e
L10000367e_746:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L10000367e_745     ; inserted

; Entry 10000367e; block 747; address 100005d7d
L10000367e_747:
    LEA R13, [rel L__DATA___common + 344]
    JMP L10000367e_783     ; inserted

; Entry 10000367e; block 748; address 100005fa2
L10000367e_748:
    LEA RBX, [rel L__DATA___common + 604]
    CMP dword [RBX], 0
    LEA R13, [rel L__DATA___common + 6336]
    JE L10000367e_785
    JMP L10000367e_784     ; inserted

; Entry 10000367e; block 749; address 100005d94
L10000367e_749:
    CMP dword [R15], 0
    MOV RBX, qword [R13]
    JNE L10000367e_752
    JMP L10000367e_751     ; inserted

; Entry 10000367e; block 750; address 100005ee2
L10000367e_750:
    MOV EAX, dword [rel L__DATA___data + 3912]
    TEST EAX, EAX
    JE L10000367e_769
    JMP L10000367e_768     ; inserted

; Entry 10000367e; block 751; address 100005da2
L10000367e_751:
    TEST RBX, RBX
    JNE L10000367e_752
    JMP L10000367e_753     ; inserted

; Entry 10000367e; block 752; address 100005e39
L10000367e_752:
    TEST RBX, RBX
    JE L10000367e_750
    JMP L10000367e_760     ; inserted

; Entry 10000367e; block 753; address 100005dab
L10000367e_753:
    MOV RAX, qword [R14]
    MOV RCX, 10330176681277348905
    IMUL RAX, RCX
    ROR RAX, 2
    MOV RCX, 184467440737095516
    CMP RAX, RCX
    JA L10000367e_750
    JMP L10000367e_754     ; inserted

; Entry 10000367e; block 754; address 100005dd3
L10000367e_754:
    XOR EDI, EDI
    CALL _time
    JMP L10000367e_755     ; inserted

; Entry 10000367e; block 755; address 100005dda
L10000367e_755:
    MOV RBX, RAX
    LEA RCX, [rel L__DATA___common + 336]
    SUB RAX, qword [RCX]
    LEA RCX, [rel L__DATA___data + 4544]
    CMP RAX, qword [RCX]
    JLE L10000367e_757
    JMP L10000367e_756     ; inserted

; Entry 10000367e; block 756; address 100005df3
L10000367e_756:
    LEA R15, [rel L__DATA___common + 6336]
    MOV RCX, qword [R15]
    MOV ESI, 15
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_10419]
    CALL _fwrite
    JMP L10000367e_758     ; inserted

; Entry 10000367e; block 757; address 100005e35
L10000367e_757:
    MOV RBX, qword [R13]
    JMP L10000367e_752     ; inserted

; Entry 10000367e; block 758; address 100005e13
L10000367e_758:
    MOV RDI, qword [R15]
    LEA R15, [rel L__DATA___common + 284]
    CALL _fflush
    JMP L10000367e_759     ; inserted

; Entry 10000367e; block 759; address 100005e22
L10000367e_759:
    LEA RAX, [rel L__DATA___common + 604]
    MOV dword [RAX], 1
    MOV qword [R13], RBX
    JMP L10000367e_752

; Entry 10000367e; block 760; address 100005e42
L10000367e_760:
    MOV RAX, qword [R14]
    INC RAX
    MOV qword [R14], RAX
    MOV RCX, 10330176681277348905
    IMUL RAX, RCX
    ROR RAX, 2
    MOV RCX, 184467440737095516
    CMP RAX, RCX
    JA L10000367e_750
    JMP L10000367e_761     ; inserted

; Entry 10000367e; block 761; address 100005e6c
L10000367e_761:
    XOR EDI, EDI
    CALL _time
    JMP L10000367e_762     ; inserted

; Entry 10000367e; block 762; address 100005e73
L10000367e_762:
    MOV RBX, RAX
    SUB RAX, qword [R13]
    LEA RCX, [rel L__DATA___data + 4552]
    CMP RAX, qword [RCX]
    JLE L10000367e_750
    JMP L10000367e_763     ; inserted

; Entry 10000367e; block 763; address 100005e86
L10000367e_763:
    LEA RAX, [rel L__DATA___common + 352]
    CMP dword [RAX], 0
    JNE L10000367e_765
    JMP L10000367e_764     ; inserted

; Entry 10000367e; block 764; address 100005e92
L10000367e_764:
    LEA RAX, [rel L__DATA___common + 352]
    MOV dword [RAX], 1
    LEA R15, [rel L__DATA___common + 6336]
    MOV RSI, qword [R15]
    MOV EDI, 32
    CALL _fputc
    JMP L10000367e_766     ; inserted

; Entry 10000367e; block 765; address 100005ec2
L10000367e_765:
    MOV qword [R13], RBX
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RBX]
    MOV EDI, 46
    CALL _fputc
    JMP L10000367e_767     ; inserted

; Entry 10000367e; block 766; address 100005eb3
L10000367e_766:
    MOV RDI, qword [R15]
    LEA R15, [rel L__DATA___common + 284]
    CALL _fflush
    JMP L10000367e_765     ; inserted

; Entry 10000367e; block 767; address 100005eda
L10000367e_767:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L10000367e_750     ; inserted

; Entry 10000367e; block 768; address 100005ef0
L10000367e_768:
    CMP EAX, 3
    JE L10000367e_769
    JMP L10000367e_770     ; inserted

; Entry 10000367e; block 769; address 100005f8e
L10000367e_769:
    MOV RDI, R12
    CALL L1000107a9_0
    JMP L10000367e_781     ; inserted

; Entry 10000367e; block 770; address 100005ef9
L10000367e_770:
    MOV RDI, qword [R12]
    XOR ESI, ESI
    LEA RDX, [RBP + -232]
    XOR ECX, ECX
    CALL L1000169ab_0
    JMP L10000367e_771     ; inserted

; Entry 10000367e; block 771; address 100005f0d
L10000367e_771:
    TEST RAX, RAX
    JE L10000367e_769
    JMP L10000367e_772     ; inserted

; Entry 10000367e; block 772; address 100005f12
L10000367e_772:
    MOV ECX, dword [rel L__DATA___data + 3912]
    TEST ECX, ECX
    JE L10000367e_769
    JMP L10000367e_773     ; inserted

; Entry 10000367e; block 773; address 100005f1c
L10000367e_773:
    CMP ECX, 3
    JE L10000367e_769
    JMP L10000367e_774     ; inserted

; Entry 10000367e; block 774; address 100005f21
L10000367e_774:
    LEA RCX, [rel L__DATA___common + 368]
    CMP RAX, qword [RCX]
    JB L10000367e_769
    JMP L10000367e_775     ; inserted

; Entry 10000367e; block 775; address 100005f2d
L10000367e_775:
    LEA RCX, [rel L__DATA___common + 376]
    MOV RCX, qword [RCX]
    DEC RCX
    CMP RCX, RAX
    JB L10000367e_769
    JMP L10000367e_776     ; inserted

; Entry 10000367e; block 776; address 100005f3f
L10000367e_776:
    MOV RDI, qword [R12 + 16]
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RSI, qword [RAX]
    CALL L100015685_0
    JMP L10000367e_777     ; inserted

; Entry 10000367e; block 777; address 100005f53
L10000367e_777:
    OR EAX, dword [R15]
    JE L10000367e_769
    JMP L10000367e_778     ; inserted

; Entry 10000367e; block 778; address 100005f58
L10000367e_778:
    LEA RAX, [rel L__DATA___common + 192]
    INC qword [RAX]
    MOV qword [R12 + 40], 0
    MOV RAX, qword [RBP + -232]
    CMP RAX, 18446744073709551613
    JA L10000367e_780
    JMP L10000367e_779     ; inserted

; Entry 10000367e; block 779; address 100005f78
L10000367e_779:
    LEA RCX, [rel L__DATA___common + 224]
    ADD qword [RCX], RAX
    MOV qword [R12 + 40], RAX
    JMP L10000367e_780     ; inserted

; Entry 10000367e; block 780; address 100005f87
L10000367e_780:
    MOV R12, qword [R12 + 56]
    JMP L10000367e_782

; Entry 10000367e; block 781; address 100005f96
L10000367e_781:
    MOV R12, RAX
    JMP L10000367e_782     ; inserted

; Entry 10000367e; block 782; address 100005f99
L10000367e_782:
    TEST R12, R12
    JNE L10000367e_783
    JMP L10000367e_748     ; inserted

; Entry 10000367e; block 783; address 100005d84
L10000367e_783:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_750
    JMP L10000367e_749     ; inserted

; Entry 10000367e; block 784; address 100005fb5
L10000367e_784:
    MOV RSI, qword [R13]
    MOV EDI, 10
    CALL _fputc
    JMP L10000367e_786     ; inserted

; Entry 10000367e; block 785; address 100005fc9
L10000367e_785:
    LEA RAX, [rel L__DATA___common + 300]
    CMP dword [RAX], 0
    LEA RDX, [rel L__DATA___common + 64]
    LEA RSI, [rel L__DATA___common + 72]
    JE L10000367e_788
    JMP L10000367e_787     ; inserted

; Entry 10000367e; block 786; address 100005fc3
L10000367e_786:
    MOV dword [RBX], 0
    JMP L10000367e_785     ; inserted

; Entry 10000367e; block 787; address 100005fe3
L10000367e_787:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_790
    JMP L10000367e_789     ; inserted

; Entry 10000367e; block 788; address 100006062
L10000367e_788:
    LEA RAX, [rel L__DATA___common + 272]
    CMP dword [RAX], 0
    MOV RDI, qword [RBP + -248]
    JNE L10000367e_801
    JMP L10000367e_800     ; inserted

; Entry 10000367e; block 789; address 100005ff3
L10000367e_789:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_791     ; inserted

; Entry 10000367e; block 790; address 1000065f8
L10000367e_790:
    LEA R14, [rel L__DATA___common + 240]
    MOV RSI, qword [R14]
    TEST RSI, RSI
    JE L10000367e_915
    JMP L10000367e_914     ; inserted

; Entry 10000367e; block 791; address 100005ffc
L10000367e_791:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_790
    JMP L10000367e_792     ; inserted

; Entry 10000367e; block 792; address 10000600c
L10000367e_792:
    LEA RAX, [rel L__DATA___common + 300]
    MOV EAX, dword [RAX]
    CMP EAX, 5
    JA L10000367e_790
    JMP L10000367e_793     ; inserted

; Entry 10000367e; block 793; address 10000601e
L10000367e_793:
    MOV ECX, 42
    BT ECX, EAX
    JAE L10000367e_790
    JMP L10000367e_794     ; inserted

; Entry 10000367e; block 794; address 10000602c
L10000367e_794:
    CMP dword [RBX], 0
    JE L10000367e_796
    JMP L10000367e_795     ; inserted

; Entry 10000367e; block 795; address 100006031
L10000367e_795:
    MOV RSI, qword [R13]
    MOV EDI, 10
    CALL _fputc
    JMP L10000367e_797     ; inserted

; Entry 10000367e; block 796; address 100006045
L10000367e_796:
    CMP dword [RBP + -192], 3
    JNE L10000367e_799
    JMP L10000367e_798     ; inserted

; Entry 10000367e; block 797; address 10000603f
L10000367e_797:
    MOV dword [RBX], 0
    JMP L10000367e_796     ; inserted

; Entry 10000367e; block 798; address 100006052
L10000367e_798:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10435]
    JMP L10000367e_912

; Entry 10000367e; block 799; address 100006354
L10000367e_799:
    MOV EAX, dword [rel L__DATA___data + 3912]
    CMP EAX, 4
    JE L10000367e_862
    JMP L10000367e_861     ; inserted

; Entry 10000367e; block 800; address 100006075
L10000367e_800:
    TEST RDI, RDI
    JNE L10000367e_801
    JMP L10000367e_802     ; inserted

; Entry 10000367e; block 801; address 1000060aa
L10000367e_801:
    CMP dword [RBP + -180], 0
    JE L10000367e_807
    JMP L10000367e_806     ; inserted

; Entry 10000367e; block 802; address 10000607a
L10000367e_802:
    LEA RAX, [rel L__DATA___common + 640]
    CMP qword [RAX], 0
    JNE L10000367e_801
    JMP L10000367e_803     ; inserted

; Entry 10000367e; block 803; address 100006087
L10000367e_803:
    LEA RAX, [rel L__DATA___common + 616]
    MOV RAX, qword [RAX]
    TEST RAX, RAX
    JNE L10000367e_805
    JMP L10000367e_804     ; inserted

; Entry 10000367e; block 804; address 10000609a
L10000367e_804:
    LEA RCX, [rel L__DATA___common + 288]
    CMP dword [RCX], 0
    JE L10000367e_805
    JMP L10000367e_801     ; inserted

; Entry 10000367e; block 805; address 1000062cd
L10000367e_805:
    TEST RAX, RAX
    JE L10000367e_850
    JMP L10000367e_849     ; inserted

; Entry 10000367e; block 806; address 1000060b3
L10000367e_806:
    LEA RAX, [rel L__DATA___common + 68]
    CMP dword [RAX], 0
    JE L10000367e_807
    JMP L10000367e_808     ; inserted

; Entry 10000367e; block 807; address 1000060e4
L10000367e_807:
    MOV dword [RBP + -180], 0
    CMP dword [RBP + -264], 0
    JE L10000367e_812
    JMP L10000367e_811     ; inserted

; Entry 10000367e; block 808; address 1000060bf
L10000367e_808:
    LEA RAX, [rel L__DATA___common + 6328]
    CMP qword [RAX], 0
    JNE L10000367e_807
    JMP L10000367e_809     ; inserted

; Entry 10000367e; block 809; address 1000060cc
L10000367e_809:
    LEA RDI, [rel L__TEXT___cstring_10567]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L100003422_0
    JMP L10000367e_810     ; inserted

; Entry 10000367e; block 810; address 1000060df
L10000367e_810:
    JMP L10000367e_612

; Entry 10000367e; block 811; address 1000060f7
L10000367e_811:
    TEST RDI, RDI
    JNE L10000367e_812
    JMP L10000367e_813     ; inserted

; Entry 10000367e; block 812; address 100006119
L10000367e_812:
    LEA RAX, [rel L__DATA___common + 312]
    CMP qword [RAX], 0
    JE L10000367e_815
    JMP L10000367e_814     ; inserted

; Entry 10000367e; block 813; address 1000060fc
L10000367e_813:
    LEA RAX, [rel L__DATA___common + 6368]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 616]
    OR RAX, qword [RCX]
    SETNE AL
    MOV dword [RBP + -180], EAX
    JMP L10000367e_812     ; inserted

; Entry 10000367e; block 814; address 100006126
L10000367e_814:
    CALL L100016ed5_0
    JMP L10000367e_816     ; inserted

; Entry 10000367e; block 815; address 100006135
L10000367e_815:
    LEA RAX, [rel L__DATA___common + 616]
    MOV R12, qword [RAX]
    LEA R15, [rel L__DATA___common + 440]
    LEA R14, [rel L__DATA___common + 6368]
    MOV RBX, qword [R14]
    TEST R12, R12
    JE L10000367e_818
    JMP L10000367e_817     ; inserted

; Entry 10000367e; block 816; address 10000612b
L10000367e_816:
    LEA RCX, [rel L__DATA___common + 672]
    MOV qword [RCX], RAX
    JMP L10000367e_815     ; inserted

; Entry 10000367e; block 817; address 100006155
L10000367e_817:
    CMP qword [R15], 1
    JE L10000367e_818
    JMP L10000367e_819     ; inserted

; Entry 10000367e; block 818; address 10000616a
L10000367e_818:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RDI, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L10000367e_821     ; inserted

; Entry 10000367e; block 819; address 10000615b
L10000367e_819:
    CMP RBX, 4
    JNE L10000367e_818
    JMP L10000367e_820     ; inserted

; Entry 10000367e; block 820; address 100006161
L10000367e_820:
    MOV qword [R14], 0
    XOR EBX, EBX
    JMP L10000367e_818     ; inserted

; Entry 10000367e; block 821; address 100006180
L10000367e_821:
    TEST EAX, EAX
    JE L10000367e_823
    JMP L10000367e_822     ; inserted

; Entry 10000367e; block 822; address 100006184
L10000367e_822:
    TEST R12, R12
    JNE L10000367e_825
    JMP L10000367e_824     ; inserted

; Entry 10000367e; block 823; address 1000061a3
L10000367e_823:
    LEA RAX, [rel L__DATA___common + 432]
    MOV dword [RAX], 0
    JMP L10000367e_881     ; inserted

; Entry 10000367e; block 824; address 10000618d
L10000367e_824:
    TEST byte [rel L__DATA___bss + 4], 1
    JE L10000367e_825
    JMP L10000367e_826     ; inserted

; Entry 10000367e; block 825; address 10000640c
L10000367e_825:
    LEA RAX, [rel L__TEXT___cstring_8627]
    LEA RSI, [rel L__TEXT___cstring_10586]
    OR R12, RBX
    CMOVE RSI, RAX
    CMP dword [RBP + -272], 0
    LEA RBX, [rel L__DATA___common + 424]
    MOV RDI, qword [RBX]
    CMOVNE RSI, RAX
    CALL _fopen
    JMP L10000367e_876     ; inserted

; Entry 10000367e; block 826; address 10000619a
L10000367e_826:
    TEST RBX, RBX
    JNE L10000367e_825
    JMP L10000367e_823     ; inserted

; Entry 10000367e; block 827; address 1000061b9
L10000367e_827:
    MOV qword [R14], 0
    JMP L10000367e_828     ; inserted

; Entry 10000367e; block 828; address 1000061c0
L10000367e_828:
    CMP dword [RBP + -164], 0
    JE L10000367e_830
    JMP L10000367e_829     ; inserted

; Entry 10000367e; block 829; address 1000061c9
L10000367e_829:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10589]
    MOV ESI, 39
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_831     ; inserted

; Entry 10000367e; block 830; address 1000061ec
L10000367e_830:
    LEA RAX, [rel L__DATA___common + 6344]
    MOV qword [RAX], 0
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RBX, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_7743]
    MOV RDI, RBX
    CALL _strcmp
    JMP L10000367e_832     ; inserted

; Entry 10000367e; block 831; address 1000061e3
L10000367e_831:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_830     ; inserted

; Entry 10000367e; block 832; address 100006213
L10000367e_832:
    TEST EAX, EAX
    JE L10000367e_834
    JMP L10000367e_833     ; inserted

; Entry 10000367e; block 833; address 10000621b
L10000367e_833:
    CMP byte [RBP + -180], 0
    JE L10000367e_836
    JMP L10000367e_835     ; inserted

; Entry 10000367e; block 834; address 100006389
L10000367e_834:
    MOV RAX, qword [rel ___stdoutp]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 392]
    MOV qword [RCX], RAX
    MOV EDI, 4
    CALL _malloc
    JMP L10000367e_867     ; inserted

; Entry 10000367e; block 835; address 100006228
L10000367e_835:
    CMP qword [R15], 2
    JAE L10000367e_838
    JMP L10000367e_837     ; inserted

; Entry 10000367e; block 836; address 10000648c
L10000367e_836:
    CMP dword [RBP + -164], 0
    JE L10000367e_886
    JMP L10000367e_885     ; inserted

; Entry 10000367e; block 837; address 100006232
L10000367e_837:
    LEA RSI, [rel L__TEXT___cstring_10586]
    MOV RDI, RBX
    CALL _fopen
    JMP L10000367e_839     ; inserted

; Entry 10000367e; block 838; address 1000088eb
L10000367e_838:
    LEA RSI, [rel L__TEXT___cstring_10629]
    JMP L10000367e_406     ; inserted

; Entry 10000367e; block 839; address 100006241
L10000367e_839:
    LEA RCX, [rel L__DATA___common + 392]
    MOV qword [RCX], RAX
    LEA RCX, [rel L__DATA___common + 6376]
    MOV RSI, qword [RCX]
    TEST RAX, RAX
    JE L10000367e_841
    JMP L10000367e_840     ; inserted

; Entry 10000367e; block 840; address 10000625e
L10000367e_840:
    LEA RCX, [rel L__DATA___common + 384]
    MOV qword [RCX], RSI
    LEA RBX, [rel L__DATA___common + 1200]
    MOV RSI, qword [RBX]
    MOV RDI, RAX
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000367e_842     ; inserted

; Entry 10000367e; block 841; address 100008ab1
L10000367e_841:
    MOV EDI, 13
    CALL L100002e30_0

; Entry 10000367e; block 842; address 10000627c
L10000367e_842:
    TEST EAX, EAX
    JNE L10000367e_844
    JMP L10000367e_843     ; inserted

; Entry 10000367e; block 843; address 100006284
L10000367e_843:
    MOV RAX, qword [RBX]
    LEA RCX, [rel L__DATA___common + 552]
    MOV qword [RCX], RAX
    LEA RCX, [rel L__DATA___common + 6344]
    MOV qword [RCX], RAX
    JMP L10000367e_869

; Entry 10000367e; block 844; address 1000088fc
L10000367e_844:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    CALL _ferror
    JMP L10000367e_1466     ; inserted

; Entry 10000367e; block 845; address 1000062a5
L10000367e_845:
    JMP L10000367e_612

; Entry 10000367e; block 846; address 1000062af
L10000367e_846:
    JMP L10000367e_612

; Entry 10000367e; block 847; address 1000062c3
L10000367e_847:
    MOV EBX, 18
    JMP L10000367e_848

; Entry 10000367e; block 848; address 1000068b9
L10000367e_848:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -48]
    JNE L10000367e_965
    JMP L10000367e_964     ; inserted

; Entry 10000367e; block 849; address 1000062d2
L10000367e_849:
    CMP byte [rel L__DATA___bss + 32], 0
    JNE L10000367e_801
    JMP L10000367e_851     ; inserted

; Entry 10000367e; block 850; address 100006310
L10000367e_850:
    CMP byte [rel L__DATA___bss + 20], 1
    JNE L10000367e_856
    JMP L10000367e_855     ; inserted

; Entry 10000367e; block 851; address 1000062df
L10000367e_851:
    TEST byte [rel L__DATA___bss + 8], 1
    JNE L10000367e_801
    JMP L10000367e_852     ; inserted

; Entry 10000367e; block 852; address 1000062ec
L10000367e_852:
    TEST byte [rel L__DATA___bss + 12], 1
    JNE L10000367e_801
    JMP L10000367e_853     ; inserted

; Entry 10000367e; block 853; address 1000062f9
L10000367e_853:
    TEST byte [rel L__DATA___bss + 16], 1
    JNE L10000367e_801
    JMP L10000367e_854     ; inserted

; Entry 10000367e; block 854; address 100006306
L10000367e_854:
    MOV ECX, dword [RSI]
    OR ECX, dword [RDX]
    JNE L10000367e_801
    JMP L10000367e_850     ; inserted

; Entry 10000367e; block 855; address 100006319
L10000367e_855:
    TEST RAX, RAX
    JNE L10000367e_858
    JMP L10000367e_857     ; inserted

; Entry 10000367e; block 856; address 100006333
L10000367e_856:
    MOV ECX, dword [rel L__DATA___data + 3912]
    AND ECX, 4294967294
    CMP ECX, 2
    JNE L10000367e_860
    JMP L10000367e_859     ; inserted

; Entry 10000367e; block 857; address 100006322
L10000367e_857:
    LEA RCX, [rel L__DATA___common + 6368]
    CMP qword [RCX], 0
    JNE L10000367e_858
    JMP L10000367e_856     ; inserted

; Entry 10000367e; block 858; address 1000082fc
L10000367e_858:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RDI, qword [RAX]
    CALL L1000094ec_0
    JMP L10000367e_1421     ; inserted

; Entry 10000367e; block 859; address 100006345
L10000367e_859:
    MOV EBX, 12
    MOV EDI, 12
    JMP L10000367e_963

; Entry 10000367e; block 860; address 100008927
L10000367e_860:
    TEST RAX, RAX
    JNE L10000367e_1469
    JMP L10000367e_1468     ; inserted

; Entry 10000367e; block 861; address 100006363
L10000367e_861:
    CMP EAX, 3
    JE L10000367e_864
    JMP L10000367e_863     ; inserted

; Entry 10000367e; block 862; address 1000065b1
L10000367e_862:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10485]
    MOV ESI, 12
    JMP L10000367e_911

; Entry 10000367e; block 863; address 10000636c
L10000367e_863:
    TEST EAX, EAX
    JNE L10000367e_866
    JMP L10000367e_865     ; inserted

; Entry 10000367e; block 864; address 1000065c3
L10000367e_864:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10469]
    MOV ESI, 15
    JMP L10000367e_911

; Entry 10000367e; block 865; address 100006374
L10000367e_865:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10454]
    MOV ESI, 14
    JMP L10000367e_911

; Entry 10000367e; block 866; address 1000065d5
L10000367e_866:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10498]
    JMP L10000367e_912     ; inserted

; Entry 10000367e; block 867; address 1000063a7
L10000367e_867:
    LEA RCX, [rel L__DATA___common + 384]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JE L10000367e_499
    JMP L10000367e_868     ; inserted

; Entry 10000367e; block 868; address 1000063ba
L10000367e_868:
    MOV word [RAX], 45
    JMP L10000367e_869

; Entry 10000367e; block 869; address 1000069ac
L10000367e_869:
    MOV EDI, 16384
    CALL _malloc
    JMP L10000367e_980     ; inserted

; Entry 10000367e; block 870; address 1000063d6
L10000367e_870:
    ADD RBX, 8
    CMP RBX, 432
    JNE L10000367e_871
    JMP L10000367e_872     ; inserted

; Entry 10000367e; block 871; address 1000063cd
L10000367e_871:
    MOV RDI, qword [RBX + R14]
    CALL _puts
    JMP L10000367e_870     ; inserted

; Entry 10000367e; block 872; address 1000063e3
L10000367e_872:
    JMP L10000367e_612

; Entry 10000367e; block 873; address 1000063fa
L10000367e_873:
    ADD RBX, 8
    CMP RBX, 2592
    JNE L10000367e_874
    JMP L10000367e_875     ; inserted

; Entry 10000367e; block 874; address 1000063f1
L10000367e_874:
    MOV RDI, qword [RBX + R14]
    CALL _puts
    JMP L10000367e_873     ; inserted

; Entry 10000367e; block 875; address 100006407
L10000367e_875:
    JMP L10000367e_612

; Entry 10000367e; block 876; address 10000643b
L10000367e_876:
    TEST RAX, RAX
    JE L10000367e_878
    JMP L10000367e_877     ; inserted

; Entry 10000367e; block 877; address 100006444
L10000367e_877:
    MOV RDI, RAX
    CALL _fclose
    JMP L10000367e_879     ; inserted

; Entry 10000367e; block 878; address 100008a67
L10000367e_878:
    MOV RSI, qword [RBX]
    MOV EDI, 15
    CALL L100002e30_0

; Entry 10000367e; block 879; address 10000644c
L10000367e_879:
    MOV RDI, qword [RBX]
    CALL L100011867_0
    JMP L10000367e_880     ; inserted

; Entry 10000367e; block 880; address 100006454
L10000367e_880:
    LEA RCX, [rel L__DATA___common + 432]
    MOV dword [RCX], EAX
    LEA RAX, [rel L__DATA___common + 616]
    CMP qword [RAX], 0
    JNE L10000367e_881
    JMP L10000367e_882     ; inserted

; Entry 10000367e; block 881; address 1000061b0
L10000367e_881:
    CMP byte [rel L__DATA___bss + 12], 1
    JNE L10000367e_828
    JMP L10000367e_827     ; inserted

; Entry 10000367e; block 882; address 10000646e
L10000367e_882:
    CMP qword [R14], 0
    JNE L10000367e_881
    JMP L10000367e_883     ; inserted

; Entry 10000367e; block 883; address 100006478
L10000367e_883:
    LEA RAX, [rel L__DATA___common + 424]
    MOV RDI, qword [RAX]
    CALL L10001160a_0
    JMP L10000367e_884     ; inserted

; Entry 10000367e; block 884; address 100006487
L10000367e_884:
    JMP L10000367e_881

; Entry 10000367e; block 885; address 100006495
L10000367e_885:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10655]
    MOV ESI, 26
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_887     ; inserted

; Entry 10000367e; block 886; address 1000064b8
L10000367e_886:
    CMP qword [R14], 0
    JE L10000367e_889
    JMP L10000367e_888     ; inserted

; Entry 10000367e; block 887; address 1000064af
L10000367e_887:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_886     ; inserted

; Entry 10000367e; block 888; address 1000064be
L10000367e_888:
    LEA R15, [rel L__DATA___common + 408]
    MOV RDI, qword [R15]
    XOR ESI, ESI
    CALL L1000127e1_0
    JMP L10000367e_890     ; inserted

; Entry 10000367e; block 889; address 10000653a
L10000367e_889:
    LEA RAX, [rel L__DATA___common + 320]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L10000367e_901
    JMP L10000367e_900     ; inserted

; Entry 10000367e; block 890; address 1000064cf
L10000367e_890:
    LEA RBX, [rel L__DATA___common + 416]
    MOV qword [RBX], RAX
    LEA RSI, [rel L__TEXT___cstring_6381]
    MOV RDI, RAX
    CALL _fopen
    JMP L10000367e_891     ; inserted

; Entry 10000367e; block 891; address 1000064e8
L10000367e_891:
    LEA R13, [rel L__DATA___common + 400]
    MOV qword [R13], RAX
    TEST RAX, RAX
    JNE L10000367e_889
    JMP L10000367e_892     ; inserted

; Entry 10000367e; block 892; address 1000064f8
L10000367e_892:
    LEA R12, [rel L__TEXT___cstring_6381]
    JMP L10000367e_899     ; inserted

; Entry 10000367e; block 893; address 100006506
L10000367e_893:
    TEST EAX, EAX
    JNE L10000367e_895
    JMP L10000367e_894     ; inserted

; Entry 10000367e; block 894; address 10000650e
L10000367e_894:
    MOV RDI, qword [RBX]
    CALL _free
    JMP L10000367e_896     ; inserted

; Entry 10000367e; block 895; address 100008752
L10000367e_895:
    LEA RSI, [rel L__TEXT___cstring_10682]
    JMP L10000367e_1454

; Entry 10000367e; block 896; address 100006516
L10000367e_896:
    MOV RDI, qword [R15]
    MOV ESI, 1
    CALL L1000127e1_0
    JMP L10000367e_897     ; inserted

; Entry 10000367e; block 897; address 100006523
L10000367e_897:
    MOV qword [RBX], RAX
    MOV RDI, RAX
    MOV RSI, R12
    CALL _fopen
    JMP L10000367e_898     ; inserted

; Entry 10000367e; block 898; address 100006531
L10000367e_898:
    MOV qword [R13], RAX
    TEST RAX, RAX
    JE L10000367e_899
    JMP L10000367e_889     ; inserted

; Entry 10000367e; block 899; address 1000064ff
L10000367e_899:
    XOR EDI, EDI
    CALL L1000128e3_0
    JMP L10000367e_893     ; inserted

; Entry 10000367e; block 900; address 10000654d
L10000367e_900:
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_902     ; inserted

; Entry 10000367e; block 901; address 1000068e1
L10000367e_901:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RBX, qword [RAX]
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_966     ; inserted

; Entry 10000367e; block 902; address 100006555
L10000367e_902:
    LEA RDI, [RAX + 12]
    CALL _malloc
    JMP L10000367e_903     ; inserted

; Entry 10000367e; block 903; address 10000655e
L10000367e_903:
    LEA R15, [rel L__DATA___common + 384]
    MOV qword [R15], RAX
    TEST RAX, RAX
    JE L10000367e_499
    JMP L10000367e_904     ; inserted

; Entry 10000367e; block 904; address 100006571
L10000367e_904:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L10000367e_905     ; inserted

; Entry 10000367e; block 905; address 10000657c
L10000367e_905:
    MOV RBX, qword [R15]
    CMP byte [RBX], 0
    LEA R13, [rel L__DATA___common + 6336]
    JE L10000367e_907
    JMP L10000367e_906     ; inserted

; Entry 10000367e; block 906; address 10000658b
L10000367e_906:
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_908     ; inserted

; Entry 10000367e; block 907; address 10000659e
L10000367e_907:
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_910     ; inserted

; Entry 10000367e; block 908; address 100006593
L10000367e_908:
    CMP byte [RAX + RBX-1], 47
    JE L10000367e_909
    JMP L10000367e_907     ; inserted

; Entry 10000367e; block 909; address 100006955
L10000367e_909:
    LEA R15, [rel L__DATA___common + 384]
    MOV RBX, qword [R15]
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_975     ; inserted

; Entry 10000367e; block 910; address 1000065a6
L10000367e_910:
    MOV word [RBX + RAX], 47
    JMP L10000367e_909

; Entry 10000367e; block 911; address 1000065e5
L10000367e_911:
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_913     ; inserted

; Entry 10000367e; block 912; address 1000065e0
L10000367e_912:
    MOV ESI, 18
    JMP L10000367e_911     ; inserted

; Entry 10000367e; block 913; address 1000065ef
L10000367e_913:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_790     ; inserted

; Entry 10000367e; block 914; address 10000660b
L10000367e_914:
    LEA RBX, [rel L__DATA___common + 608]
    CMP dword [RBX], 0
    JE L10000367e_917
    JMP L10000367e_916     ; inserted

; Entry 10000367e; block 915; address 1000066a4
L10000367e_915:
    LEA RAX, [rel L__DATA___common + 616]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    MOV RAX, qword [RBP + -192]
    JE L10000367e_931
    JMP L10000367e_930     ; inserted

; Entry 10000367e; block 916; address 100006617
L10000367e_916:
    MOV EDI, 10
    CALL _fputc
    JMP L10000367e_918     ; inserted

; Entry 10000367e; block 917; address 100006627
L10000367e_917:
    CMP dword [RBP + -192], 3
    JNE L10000367e_920
    JMP L10000367e_919     ; inserted

; Entry 10000367e; block 918; address 100006621
L10000367e_918:
    MOV dword [RBX], 0
    JMP L10000367e_917     ; inserted

; Entry 10000367e; block 919; address 100006630
L10000367e_919:
    MOV RCX, qword [R14]
    LEA RDI, [rel L__TEXT___cstring_10435]
    JMP L10000367e_928

; Entry 10000367e; block 920; address 10000663c
L10000367e_920:
    MOV EAX, dword [rel L__DATA___data + 3912]
    CMP EAX, 4
    JE L10000367e_922
    JMP L10000367e_921     ; inserted

; Entry 10000367e; block 921; address 100006647
L10000367e_921:
    CMP EAX, 3
    JE L10000367e_924
    JMP L10000367e_923     ; inserted

; Entry 10000367e; block 922; address 100006661
L10000367e_922:
    MOV RCX, qword [R14]
    LEA RDI, [rel L__TEXT___cstring_10485]
    MOV ESI, 12
    JMP L10000367e_927

; Entry 10000367e; block 923; address 10000664c
L10000367e_923:
    TEST EAX, EAX
    JNE L10000367e_926
    JMP L10000367e_925     ; inserted

; Entry 10000367e; block 924; address 100006672
L10000367e_924:
    MOV RCX, qword [R14]
    LEA RDI, [rel L__TEXT___cstring_10469]
    MOV ESI, 15
    JMP L10000367e_927

; Entry 10000367e; block 925; address 100006650
L10000367e_925:
    MOV RCX, qword [R14]
    LEA RDI, [rel L__TEXT___cstring_10454]
    MOV ESI, 14
    JMP L10000367e_927

; Entry 10000367e; block 926; address 100006683
L10000367e_926:
    MOV RCX, qword [R14]
    LEA RDI, [rel L__TEXT___cstring_10498]
    JMP L10000367e_928     ; inserted

; Entry 10000367e; block 927; address 100006692
L10000367e_927:
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_929     ; inserted

; Entry 10000367e; block 928; address 10000668d
L10000367e_928:
    MOV ESI, 18
    JMP L10000367e_927     ; inserted

; Entry 10000367e; block 929; address 10000669c
L10000367e_929:
    MOV RDI, qword [R14]
    CALL _fflush
    JMP L10000367e_915     ; inserted

; Entry 10000367e; block 930; address 1000066be
L10000367e_930:
    XOR R15D, R15D
    XOR R13D, R13D
    XOR R14D, R14D
    JMP L10000367e_943     ; inserted

; Entry 10000367e; block 931; address 100006789
L10000367e_931:
    XOR R14D, R14D
    XOR R12D, R12D
    JMP L10000367e_945     ; inserted

; Entry 10000367e; block 932; address 1000066cc
L10000367e_932:
    CMP dword [RBX + 136], 0
    JNE L10000367e_933
    JMP L10000367e_934     ; inserted

; Entry 10000367e; block 933; address 1000066dd
L10000367e_933:
    MOV R12, qword [RBX + 32]
    TEST R12, R12
    CMOVS R12, R15
    LEA RCX, [rel L__DATA___data + 4508]
    CMP dword [RCX], 0
    JE L10000367e_936
    JMP L10000367e_935     ; inserted

; Entry 10000367e; block 934; address 1000066d5
L10000367e_934:
    MOV R12, R13
    JMP L10000367e_940

; Entry 10000367e; block 935; address 1000066f4
L10000367e_935:
    LEA RAX, [rel L__DATA___common + 300]
    MOV EAX, dword [RAX]
    AND EAX, 4294967293
    CMP EAX, 1
    MOV RAX, qword [RBP + -192]
    JNE L10000367e_936
    JMP L10000367e_937     ; inserted

; Entry 10000367e; block 936; address 100006732
L10000367e_936:
    INC R14
    ADD R12, R13
    LEA RCX, [rel L__DATA___common + 240]
    MOV RDI, qword [RCX]
    TEST RDI, RDI
    JE L10000367e_940
    JMP L10000367e_939     ; inserted

; Entry 10000367e; block 937; address 10000670c
L10000367e_937:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    MOV RDX, qword [RBX + 128]
    LEA RSI, [rel L__TEXT___cstring_10517]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_938     ; inserted

; Entry 10000367e; block 938; address 10000672b
L10000367e_938:
    MOV RAX, qword [RBP + -192]
    JMP L10000367e_936     ; inserted

; Entry 10000367e; block 939; address 100006747
L10000367e_939:
    LEA RAX, [rel L__DATA___common + 300]
    MOV EAX, dword [RAX]
    ADD EAX, 18446744073709551611
    CMP EAX, 2
    JB L10000367e_942
    JMP L10000367e_941     ; inserted

; Entry 10000367e; block 940; address 100006774
L10000367e_940:
    MOV RBX, qword [RBX + 152]
    MOV R13, R12
    TEST RBX, RBX
    JNE L10000367e_943
    JMP L10000367e_944     ; inserted

; Entry 10000367e; block 941; address 100006758
L10000367e_941:
    MOV RDX, qword [RBX + 128]
    LEA RSI, [rel L__TEXT___cstring_10517]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_942     ; inserted

; Entry 10000367e; block 942; address 10000676d
L10000367e_942:
    MOV RAX, qword [RBP + -192]
    JMP L10000367e_940     ; inserted

; Entry 10000367e; block 943; address 1000066c7
L10000367e_943:
    CMP EAX, 3
    JE L10000367e_933
    JMP L10000367e_932     ; inserted

; Entry 10000367e; block 944; address 100006787
L10000367e_944:
    JMP L10000367e_945

; Entry 10000367e; block 945; address 10000678f
L10000367e_945:
    LEA RAX, [rel L__DATA___common + 640]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L10000367e_947
    JMP L10000367e_946     ; inserted

; Entry 10000367e; block 946; address 10000679e
L10000367e_946:
    LEA R15, [rel L__TEXT___cstring_10517]
    JMP L10000367e_954     ; inserted

; Entry 10000367e; block 947; address 10000681d
L10000367e_947:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    LEA R13, [rel L__DATA___common + 240]
    JNE L10000367e_956
    JMP L10000367e_955     ; inserted

; Entry 10000367e; block 948; address 1000067c1
L10000367e_948:
    LEA RAX, [rel L__DATA___common + 300]
    MOV EAX, dword [RAX]
    CMP EAX, 5
    JA L10000367e_949
    JMP L10000367e_950     ; inserted

; Entry 10000367e; block 949; address 1000067f1
L10000367e_949:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RDI, qword [RAX]
    TEST RDI, RDI
    JE L10000367e_953
    JMP L10000367e_952     ; inserted

; Entry 10000367e; block 950; address 1000067cf
L10000367e_950:
    MOV ECX, 42
    BT ECX, EAX
    JAE L10000367e_949
    JMP L10000367e_951     ; inserted

; Entry 10000367e; block 951; address 1000067d9
L10000367e_951:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    MOV RDX, qword [RBX + 24]
    MOV RSI, R15
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_949     ; inserted

; Entry 10000367e; block 952; address 100006800
L10000367e_952:
    MOV RDX, qword [RBX + 24]
    MOV RSI, R15
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_953     ; inserted

; Entry 10000367e; block 953; address 10000680e
L10000367e_953:
    INC R14
    ADD R12, R13
    MOV RBX, qword [RBX + 56]
    TEST RBX, RBX
    JNE L10000367e_954
    JMP L10000367e_947     ; inserted

; Entry 10000367e; block 954; address 1000067a5
L10000367e_954:
    MOV R13, qword [RBX + 40]
    TEST R13, R13
    MOV EAX, 0
    CMOVS R13, RAX
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_949
    JMP L10000367e_948     ; inserted

; Entry 10000367e; block 955; address 100006830
L10000367e_955:
    MOV R15, qword [R13]
    TEST R15, R15
    JNE L10000367e_957
    JMP L10000367e_956     ; inserted

; Entry 10000367e; block 956; address 100006839
L10000367e_956:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV R15, qword [RAX]
    MOV RDI, R14
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L100015b84_0
    JMP L10000367e_958     ; inserted

; Entry 10000367e; block 957; address 10000687e
L10000367e_957:
    MOV RDI, R14
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L100015b84_0
    JMP L10000367e_961     ; inserted

; Entry 10000367e; block 958; address 10000684f
L10000367e_958:
    MOV RBX, RAX
    MOV RDI, R12
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L100015b84_0
    JMP L10000367e_959     ; inserted

; Entry 10000367e; block 959; address 10000685e
L10000367e_959:
    LEA RSI, [rel L__TEXT___cstring_10523]
    MOV RDI, R15
    MOV RDX, RBX
    MOV RCX, RAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_960     ; inserted

; Entry 10000367e; block 960; address 100006875
L10000367e_960:
    MOV R15, qword [R13]
    TEST R15, R15
    JE L10000367e_612
    JMP L10000367e_957     ; inserted

; Entry 10000367e; block 961; address 10000688a
L10000367e_961:
    MOV R14, RAX
    MOV RDI, R12
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L100015b84_0
    JMP L10000367e_962     ; inserted

; Entry 10000367e; block 962; address 100006899
L10000367e_962:
    LEA RSI, [rel L__TEXT___cstring_10523]
    MOV RDI, R15
    MOV RDX, R14
    MOV RCX, RAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_612     ; inserted

; Entry 10000367e; block 963; address 1000068b4
L10000367e_963:
    CALL L100008eec_0
    JMP L10000367e_848     ; inserted

; Entry 10000367e; block 964; address 1000068cd
L10000367e_964:
    MOV EAX, EBX
    ADD RSP, 312
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000367e; block 965; address 100008325
L10000367e_965:
    CALL ___stack_chk_fail

; Entry 10000367e; block 966; address 1000068f3
L10000367e_966:
    LEA RDI, [RAX + 12]
    CALL _malloc
    JMP L10000367e_967     ; inserted

; Entry 10000367e; block 967; address 1000068fc
L10000367e_967:
    LEA R15, [rel L__DATA___common + 384]
    MOV qword [R15], RAX
    TEST RAX, RAX
    JE L10000367e_499
    JMP L10000367e_968     ; inserted

; Entry 10000367e; block 968; address 10000690f
L10000367e_968:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L10000367e_969     ; inserted

; Entry 10000367e; block 969; address 10000691a
L10000367e_969:
    MOV RBX, qword [R15]
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_970     ; inserted

; Entry 10000367e; block 970; address 100006925
L10000367e_970:
    MOV EDX, EAX
    XOR ECX, ECX
    TEST EAX, EAX
    CMOVS RCX, RAX
    LEA R13, [rel L__DATA___common + 6336]
    JMP L10000367e_973     ; inserted

; Entry 10000367e; block 971; address 10000693a
L10000367e_971:
    LEA RAX, [RDX + -1]
    CMP byte [RBX + RDX-1], 47
    MOV RDX, RAX
    JNE L10000367e_973
    JMP L10000367e_974     ; inserted

; Entry 10000367e; block 972; address 10000694e
L10000367e_972:
    MOVSXD RAX, ECX
    MOV byte [RBX + RAX], 0
    JMP L10000367e_909     ; inserted

; Entry 10000367e; block 973; address 100006936
L10000367e_973:
    TEST EDX, EDX
    JLE L10000367e_972
    JMP L10000367e_971     ; inserted

; Entry 10000367e; block 974; address 100006948
L10000367e_974:
    INC RAX
    MOV RCX, RAX
    JMP L10000367e_972     ; inserted

; Entry 10000367e; block 975; address 100006967
L10000367e_975:
    MOV RCX, 6365935209750751610
    MOV qword [RBX + RAX], RCX
    MOV byte [RBX + RAX + 8], 0
    MOV RDI, qword [R15]
    CALL _mkstemp
    JMP L10000367e_976     ; inserted

; Entry 10000367e; block 976; address 100006982
L10000367e_976:
    CMP EAX, 18446744073709551615
    JE L10000367e_978
    JMP L10000367e_977     ; inserted

; Entry 10000367e; block 977; address 10000698b
L10000367e_977:
    LEA RSI, [rel L__TEXT___cstring_8627]
    MOV EDI, EAX
    CALL _fdopen
    JMP L10000367e_979     ; inserted

; Entry 10000367e; block 978; address 100008845
L10000367e_978:
    LEA RAX, [rel L__DATA___common + 384]
    MOV RSI, qword [RAX]
    JMP L10000367e_1460

; Entry 10000367e; block 979; address 100006999
L10000367e_979:
    LEA RCX, [rel L__DATA___common + 392]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JE L10000367e_978
    JMP L10000367e_869     ; inserted

; Entry 10000367e; block 980; address 1000069b6
L10000367e_980:
    TEST RAX, RAX
    JE L10000367e_982
    JMP L10000367e_981     ; inserted

; Entry 10000367e; block 981; address 1000069bf
L10000367e_981:
    LEA RBX, [rel L__DATA___common + 392]
    MOV RDI, qword [RBX]
    MOV ECX, 16384
    MOV qword [RBP + -272], RAX
    MOV RSI, RAX
    XOR EDX, EDX
    CALL _setvbuf
    JMP L10000367e_983     ; inserted

; Entry 10000367e; block 982; address 10000881f
L10000367e_982:
    LEA RAX, [rel L__DATA___common + 384]
    MOV RSI, qword [RAX]
    JMP L10000367e_1431

; Entry 10000367e; block 983; address 1000069df
L10000367e_983:
    LEA R15, [rel L__DATA___data + 4516]
    MOV dword [R15], 1
    MOV RDI, qword [RBX]
    CALL L10000f75c_0
    JMP L10000367e_984     ; inserted

; Entry 10000367e; block 984; address 1000069f5
L10000367e_984:
    TEST EAX, EAX
    JNE L10000367e_986
    JMP L10000367e_985     ; inserted

; Entry 10000367e; block 985; address 1000069f9
L10000367e_985:
    MOV dword [R15], 0
    LEA RAX, [rel L__DATA___common + 280]
    MOV dword [RAX], 1
    JMP L10000367e_986     ; inserted

; Entry 10000367e; block 986; address 100006a0d
L10000367e_986:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RDI, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L10000367e_987     ; inserted

; Entry 10000367e; block 987; address 100006a23
L10000367e_987:
    TEST EAX, EAX
    SETE AL
    OR AL, byte [RBP + -180]
    JNE L10000367e_989
    JMP L10000367e_988     ; inserted

; Entry 10000367e; block 988; address 100006a34
L10000367e_988:
    LEA R15, [rel L__DATA___common + 400]
    MOV RDI, qword [R15]
    TEST RDI, RDI
    JE L10000367e_991
    JMP L10000367e_990     ; inserted

; Entry 10000367e; block 989; address 100006afe
L10000367e_989:
    LEA RAX, [rel L__DATA___common + 616]
    MOV R15, qword [RAX]
    CMP dword [RBP + -164], 0
    JE L10000367e_1006
    JMP L10000367e_1005     ; inserted

; Entry 10000367e; block 990; address 100006a43
L10000367e_990:
    MOV RAX, qword [R14]
    TEST RAX, RAX
    LEA RBX, [rel L__DATA___common + 564]
    JE L10000367e_993
    JMP L10000367e_992     ; inserted

; Entry 10000367e; block 991; address 100006a70
L10000367e_991:
    LEA RBX, [rel L__DATA___common + 564]
    JMP L10000367e_993     ; inserted

; Entry 10000367e; block 992; address 100006a52
L10000367e_992:
    MOV RDI, RAX
    CALL L100011949_0
    JMP L10000367e_994     ; inserted

; Entry 10000367e; block 993; address 100006a77
L10000367e_993:
    TEST RDI, RDI
    JE L10000367e_998
    JMP L10000367e_997     ; inserted

; Entry 10000367e; block 994; address 100006a5a
L10000367e_994:
    TEST EAX, EAX
    JNE L10000367e_996
    JMP L10000367e_995     ; inserted

; Entry 10000367e; block 995; address 100006a62
L10000367e_995:
    MOV RDI, qword [R15]
    XOR EAX, EAX
    MOV qword [RBP + -216], RAX
    JMP L10000367e_993

; Entry 10000367e; block 996; address 100008a74
L10000367e_996:
    CMP EAX, 10
    JNE L10000367e_1489
    JMP L10000367e_1488     ; inserted

; Entry 10000367e; block 997; address 100006a7c
L10000367e_997:
    CALL _fclose
    JMP L10000367e_999     ; inserted

; Entry 10000367e; block 998; address 100006a97
L10000367e_998:
    MOV RAX, qword [R14]
    LEA RCX, [rel L__DATA___common + 6344]
    MOV qword [RCX], RAX
    CMP dword [RBX], 0
    JE L10000367e_989
    JMP L10000367e_1000     ; inserted

; Entry 10000367e; block 999; address 100006a81
L10000367e_999:
    MOV qword [R15], 0
    LEA RAX, [rel L__DATA___common + 416]
    MOV RDI, qword [RAX]
    CALL _free
    JMP L10000367e_998     ; inserted

; Entry 10000367e; block 1000; address 100006aa9
L10000367e_1000:
    CMP dword [RBP + -164], 0
    JE L10000367e_1002
    JMP L10000367e_1001     ; inserted

; Entry 10000367e; block 1001; address 100006ab2
L10000367e_1001:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10713]
    MOV ESI, 58
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1003     ; inserted

; Entry 10000367e; block 1002; address 100006ad5
L10000367e_1002:
    LEA RDI, [rel L__DATA___common + 1216]
    MOV dword [RDI], 134695760
    MOV ESI, 1
    MOV EDX, 4
    XOR ECX, ECX
    CALL L1000121b7_0
    JMP L10000367e_1004     ; inserted

; Entry 10000367e; block 1003; address 100006acc
L10000367e_1003:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_1002     ; inserted

; Entry 10000367e; block 1004; address 100006af3
L10000367e_1004:
    LEA RAX, [rel L__DATA___common + 6344]
    ADD qword [RAX], 4
    JMP L10000367e_989     ; inserted

; Entry 10000367e; block 1005; address 100006b11
L10000367e_1005:
    TEST R15, R15
    JE L10000367e_1006
    JMP L10000367e_1007     ; inserted

; Entry 10000367e; block 1006; address 100006b43
L10000367e_1006:
    TEST R15, R15
    JE L10000367e_1011
    JMP L10000367e_1010     ; inserted

; Entry 10000367e; block 1007; address 100006b16
L10000367e_1007:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_10772]
    MOV ESI, 31
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1008     ; inserted

; Entry 10000367e; block 1008; address 100006b30
L10000367e_1008:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_1009     ; inserted

; Entry 10000367e; block 1009; address 100006b39
L10000367e_1009:
    LEA RAX, [rel L__DATA___common + 616]
    MOV R15, qword [RAX]
    JMP L10000367e_1006     ; inserted

; Entry 10000367e; block 1010; address 100006b4c
L10000367e_1010:
    LEA RAX, [rel L__DATA___common + 616]
    MOV qword [RBP + -224], RAX
    LEA R14, [rel L__DATA___common + 240]
    MOV dword [RBP + -192], 0
    JMP L10000367e_1205     ; inserted

; Entry 10000367e; block 1011; address 1000076a9
L10000367e_1011:
    MOV dword [RBP + -192], 0
    JMP L10000367e_1208     ; inserted

; Entry 10000367e; block 1012; address 100006b79
L10000367e_1012:
    MOV RAX, qword [R15 + 32]
    CMP RAX, 18446744073709551615
    MOV R13D, 0
    CMOVNE R13, RAX
    MOV EBX, dword [rel L__DATA___data + 3912]
    TEST EBX, 4294967291
    LEA R12, [rel L__DATA___common + 64]
    JE L10000367e_1015
    JMP L10000367e_1014     ; inserted

; Entry 10000367e; block 1013; address 100006c0c
L10000367e_1013:
    CMP dword [rel L__DATA___data + 3912], 4
    JE L10000367e_1025
    JMP L10000367e_1024     ; inserted

; Entry 10000367e; block 1014; address 100006ba4
L10000367e_1014:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    JNE L10000367e_1017
    JMP L10000367e_1016     ; inserted

; Entry 10000367e; block 1015; address 100006ecf
L10000367e_1015:
    CALL L100009870_0
    JMP L10000367e_1071     ; inserted

; Entry 10000367e; block 1016; address 100006bb0
L10000367e_1016:
    LEA RAX, [rel L__DATA___common + 68]
    CMP dword [RAX], 0
    JE L10000367e_1017
    JMP L10000367e_1018     ; inserted

; Entry 10000367e; block 1017; address 100006bc6
L10000367e_1017:
    CALL L100009870_0
    JMP L10000367e_1019     ; inserted

; Entry 10000367e; block 1018; address 100006bbc
L10000367e_1018:
    CMP dword [R15 + 144], 0
    JNE L10000367e_1019
    JMP L10000367e_1017     ; inserted

; Entry 10000367e; block 1019; address 100006bcb
L10000367e_1019:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    MOV RBX, qword [RBP + -216]
    JE L10000367e_1021
    JMP L10000367e_1020     ; inserted

; Entry 10000367e; block 1020; address 100006be2
L10000367e_1020:
    CMP dword [rel L__DATA___data + 3912], 3
    JNE L10000367e_1023
    JMP L10000367e_1022     ; inserted

; Entry 10000367e; block 1021; address 100007163
L10000367e_1021:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L10000367e_1110
    JMP L10000367e_1109     ; inserted

; Entry 10000367e; block 1022; address 100006bef
L10000367e_1022:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RBX]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_10804]
    JMP L10000367e_1088

; Entry 10000367e; block 1023; address 100006f80
L10000367e_1023:
    LEA RAX, [rel L__DATA___common + 68]
    CMP dword [RAX], 0
    JE L10000367e_1085
    JMP L10000367e_1084     ; inserted

; Entry 10000367e; block 1024; address 100006c19
L10000367e_1024:
    LEA RAX, [rel L__DATA___common + 68]
    CMP dword [RAX], 0
    LEA RBX, [rel L__DATA___common + 604]
    JE L10000367e_1027
    JMP L10000367e_1026     ; inserted

; Entry 10000367e; block 1025; address 1000075dd
L10000367e_1025:
    MOV RDI, qword [R15 + 112]
    MOV RBX, qword [R15 + 152]
    CALL _free
    JMP L10000367e_1192     ; inserted

; Entry 10000367e; block 1026; address 100006c30
L10000367e_1026:
    LEA RAX, [rel L__DATA___common + 164]
    CMP dword [RAX], 0
    JE L10000367e_1029
    JMP L10000367e_1028     ; inserted

; Entry 10000367e; block 1027; address 100006fcb
L10000367e_1027:
    LEA RAX, [rel L__DATA___common + 272]
    CMP dword [RAX], 0
    SETNE AL
    OR AL, byte [RBP + -180]
    JNE L10000367e_1063
    JMP L10000367e_1089     ; inserted

; Entry 10000367e; block 1028; address 100006c40
L10000367e_1028:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_1031
    JMP L10000367e_1030     ; inserted

; Entry 10000367e; block 1029; address 100006cc2
L10000367e_1029:
    LEA RAX, [rel L__DATA___common + 152]
    CMP dword [RAX], 0
    JE L10000367e_1036
    JMP L10000367e_1035     ; inserted

; Entry 10000367e; block 1030; address 100006c4c
L10000367e_1030:
    MOV RDI, qword [R13]
    LEA RAX, [rel L__DATA___common + 448]
    MOV RDX, qword [RAX]
    INC RDX
    LEA RAX, [rel L__DATA___common + 480]
    MOV RCX, qword [RAX]
    INC RCX
    LEA RSI, [rel L__TEXT___cstring_30302]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1032     ; inserted

; Entry 10000367e; block 1031; address 100006c7e
L10000367e_1031:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L10000367e_1029
    JMP L10000367e_1033     ; inserted

; Entry 10000367e; block 1032; address 100006c78
L10000367e_1032:
    MOV dword [RBX], 1
    JMP L10000367e_1031     ; inserted

; Entry 10000367e; block 1033; address 100006c8a
L10000367e_1033:
    MOV RDI, qword [R14]
    LEA RAX, [rel L__DATA___common + 448]
    MOV RDX, qword [RAX]
    INC RDX
    LEA RAX, [rel L__DATA___common + 480]
    MOV RCX, qword [RAX]
    INC RCX
    LEA RSI, [rel L__TEXT___cstring_30302]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1034     ; inserted

; Entry 10000367e; block 1034; address 100006cb5
L10000367e_1034:
    LEA RAX, [rel L__DATA___common + 608]
    MOV dword [RAX], 1
    JMP L10000367e_1029     ; inserted

; Entry 10000367e; block 1035; address 100006cce
L10000367e_1035:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_1038
    JMP L10000367e_1037     ; inserted

; Entry 10000367e; block 1036; address 100006d2c
L10000367e_1036:
    LEA RAX, [rel L__DATA___common + 156]
    CMP dword [RAX], 0
    JE L10000367e_1043
    JMP L10000367e_1042     ; inserted

; Entry 10000367e; block 1037; address 100006cda
L10000367e_1037:
    MOV RCX, qword [R13]
    MOV ESI, 8
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_30342]
    CALL _fwrite
    JMP L10000367e_1039     ; inserted

; Entry 10000367e; block 1038; address 100006cfa
L10000367e_1038:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L10000367e_1036
    JMP L10000367e_1040     ; inserted

; Entry 10000367e; block 1039; address 100006cf4
L10000367e_1039:
    MOV dword [RBX], 1
    JMP L10000367e_1038     ; inserted

; Entry 10000367e; block 1040; address 100006d06
L10000367e_1040:
    MOV RCX, qword [R14]
    MOV ESI, 8
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_30342]
    CALL _fwrite
    JMP L10000367e_1041     ; inserted

; Entry 10000367e; block 1041; address 100006d1f
L10000367e_1041:
    LEA RAX, [rel L__DATA___common + 608]
    MOV dword [RAX], 1
    JMP L10000367e_1036     ; inserted

; Entry 10000367e; block 1042; address 100006d38
L10000367e_1042:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_1045
    JMP L10000367e_1044     ; inserted

; Entry 10000367e; block 1043; address 100006d96
L10000367e_1043:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_1050
    JMP L10000367e_1049     ; inserted

; Entry 10000367e; block 1044; address 100006d44
L10000367e_1044:
    MOV RCX, qword [R13]
    MOV ESI, 12
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_30351]
    CALL _fwrite
    JMP L10000367e_1046     ; inserted

; Entry 10000367e; block 1045; address 100006d64
L10000367e_1045:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L10000367e_1043
    JMP L10000367e_1047     ; inserted

; Entry 10000367e; block 1046; address 100006d5e
L10000367e_1046:
    MOV dword [RBX], 1
    JMP L10000367e_1045     ; inserted

; Entry 10000367e; block 1047; address 100006d70
L10000367e_1047:
    MOV RCX, qword [R14]
    MOV ESI, 12
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_30351]
    CALL _fwrite
    JMP L10000367e_1048     ; inserted

; Entry 10000367e; block 1048; address 100006d89
L10000367e_1048:
    LEA RAX, [rel L__DATA___common + 608]
    MOV dword [RAX], 1
    JMP L10000367e_1043     ; inserted

; Entry 10000367e; block 1049; address 100006da2
L10000367e_1049:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_1050     ; inserted

; Entry 10000367e; block 1050; address 100006dab
L10000367e_1050:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L10000367e_1052
    JMP L10000367e_1051     ; inserted

; Entry 10000367e; block 1051; address 100006db7
L10000367e_1051:
    MOV RDI, qword [R14]
    CALL _fflush
    JMP L10000367e_1052     ; inserted

; Entry 10000367e; block 1052; address 100006dbf
L10000367e_1052:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_1054
    JMP L10000367e_1053     ; inserted

; Entry 10000367e; block 1053; address 100006dcb
L10000367e_1053:
    MOV RDI, qword [R13]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_11151]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1055     ; inserted

; Entry 10000367e; block 1054; address 100006e42
L10000367e_1054:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L10000367e_1063
    JMP L10000367e_1062     ; inserted

; Entry 10000367e; block 1055; address 100006de4
L10000367e_1055:
    LEA RAX, [rel L__DATA___common + 168]
    CMP dword [RAX], 0
    JE L10000367e_1057
    JMP L10000367e_1056     ; inserted

; Entry 10000367e; block 1056; address 100006df0
L10000367e_1056:
    MOV RCX, qword [R13]
    MOV ESI, 2
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_11053]
    CALL _fwrite
    JMP L10000367e_1058     ; inserted

; Entry 10000367e; block 1057; address 100006e25
L10000367e_1057:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_1060     ; inserted

; Entry 10000367e; block 1058; address 100006e0a
L10000367e_1058:
    MOV RDI, qword [R13]
    MOV RSI, qword [R15 + 32]
    CALL L100015c88_0
    JMP L10000367e_1059     ; inserted

; Entry 10000367e; block 1059; address 100006e17
L10000367e_1059:
    MOV RSI, qword [R13]
    MOV EDI, 41
    CALL _fputc
    JMP L10000367e_1057     ; inserted

; Entry 10000367e; block 1060; address 100006e2e
L10000367e_1060:
    MOV RSI, qword [R13]
    MOV EDI, 10
    CALL _fputc
    JMP L10000367e_1061     ; inserted

; Entry 10000367e; block 1061; address 100006e3c
L10000367e_1061:
    MOV dword [RBX], 0
    JMP L10000367e_1054     ; inserted

; Entry 10000367e; block 1062; address 100006e52
L10000367e_1062:
    MOV RDI, qword [R14]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_11151]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1064     ; inserted

; Entry 10000367e; block 1063; address 100007385
L10000367e_1063:
    MOV RBX, qword [R15 + 152]
    ADD R15, 152
    MOV qword [RBP + -224], R15
    JMP L10000367e_1204

; Entry 10000367e; block 1064; address 100006e6a
L10000367e_1064:
    LEA RAX, [rel L__DATA___common + 168]
    CMP dword [RAX], 0
    JE L10000367e_1066
    JMP L10000367e_1065     ; inserted

; Entry 10000367e; block 1065; address 100006e76
L10000367e_1065:
    MOV RCX, qword [R14]
    MOV ESI, 2
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_11053]
    CALL _fwrite
    JMP L10000367e_1067     ; inserted

; Entry 10000367e; block 1066; address 100006ea8
L10000367e_1066:
    MOV RSI, qword [R14]
    MOV EDI, 10
    CALL _fputc
    JMP L10000367e_1069     ; inserted

; Entry 10000367e; block 1067; address 100006e8f
L10000367e_1067:
    MOV RDI, qword [R14]
    MOV RSI, qword [R15 + 32]
    CALL L100015c88_0
    JMP L10000367e_1068     ; inserted

; Entry 10000367e; block 1068; address 100006e9b
L10000367e_1068:
    MOV RSI, qword [R14]
    MOV EDI, 41
    CALL _fputc
    JMP L10000367e_1066     ; inserted

; Entry 10000367e; block 1069; address 100006eb5
L10000367e_1069:
    MOV RDI, qword [R14]
    CALL _fflush
    JMP L10000367e_1070     ; inserted

; Entry 10000367e; block 1070; address 100006ebd
L10000367e_1070:
    LEA RAX, [rel L__DATA___common + 608]
    MOV dword [RAX], 0
    JMP L10000367e_1063

; Entry 10000367e; block 1071; address 100006ed4
L10000367e_1071:
    CMP EBX, 4
    JNE L10000367e_1073
    JMP L10000367e_1072     ; inserted

; Entry 10000367e; block 1072; address 100006edd
L10000367e_1072:
    LEA RAX, [rel L__DATA___common + 96]
    MOV RCX, qword [RAX]
    LEA RDX, [RCX + -1]
    MOV RAX, qword [R15 + 48]
    CMP RDX, RAX
    LEA R13, [rel L__DATA___common + 6336]
    LEA RBX, [rel L__DATA___common + 604]
    JE L10000367e_1075
    JMP L10000367e_1074     ; inserted

; Entry 10000367e; block 1073; address 100007006
L10000367e_1073:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    LEA R13, [rel L__DATA___common + 6336]
    JE L10000367e_1093
    JMP L10000367e_1092     ; inserted

; Entry 10000367e; block 1074; address 100006f02
L10000367e_1074:
    LEA RCX, [rel L__DATA___common + 96]
    MOV qword [RCX], 0
    XOR ECX, ECX
    JMP L10000367e_1075     ; inserted

; Entry 10000367e; block 1075; address 100006f12
L10000367e_1075:
    DEC RCX
    LEA RDX, [rel L__DATA___data + 4508]
    MOV EDX, dword [RDX]
    CMP RCX, RAX
    JNE L10000367e_1077
    JMP L10000367e_1076     ; inserted

; Entry 10000367e; block 1076; address 100006f27
L10000367e_1076:
    TEST EDX, EDX
    JE L10000367e_1079
    JMP L10000367e_1078     ; inserted

; Entry 10000367e; block 1077; address 10000739f
L10000367e_1077:
    TEST EDX, EDX
    JE L10000367e_1154
    JMP L10000367e_1153     ; inserted

; Entry 10000367e; block 1078; address 100006f2b
L10000367e_1078:
    MOV RDI, qword [R13]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_11026]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1080     ; inserted

; Entry 10000367e; block 1079; address 100006f53
L10000367e_1079:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L10000367e_1082
    JMP L10000367e_1081     ; inserted

; Entry 10000367e; block 1080; address 100006f44
L10000367e_1080:
    MOV dword [RBX], 1
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_1079     ; inserted

; Entry 10000367e; block 1081; address 100006f63
L10000367e_1081:
    MOV RDI, qword [R14]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_11026]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1083     ; inserted

; Entry 10000367e; block 1082; address 100007483
L10000367e_1082:
    LEA RAX, [rel L__DATA___common + 96]
    MOV RAX, qword [RAX]
    DEC RAX
    CMP RAX, qword [R15 + 48]
    JNE L10000367e_1167
    JMP L10000367e_1166     ; inserted

; Entry 10000367e; block 1083; address 100006f7b
L10000367e_1083:
    JMP L10000367e_1163

; Entry 10000367e; block 1084; address 100006f90
L10000367e_1084:
    CMP dword [R15 + 144], 0
    JE L10000367e_1085
    JMP L10000367e_1086     ; inserted

; Entry 10000367e; block 1085; address 100007128
L10000367e_1085:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RBX]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_10832]
    JMP L10000367e_1088     ; inserted

; Entry 10000367e; block 1086; address 100006f9e
L10000367e_1086:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    JE L10000367e_1021
    JMP L10000367e_1087     ; inserted

; Entry 10000367e; block 1087; address 100006fae
L10000367e_1087:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RBX]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_10819]
    JMP L10000367e_1088

; Entry 10000367e; block 1088; address 100007140
L10000367e_1088:
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1108     ; inserted

; Entry 10000367e; block 1089; address 100006fe4
L10000367e_1089:
    MOV RDI, R15
    CALL L10000e1ae_0
    JMP L10000367e_1090     ; inserted

; Entry 10000367e; block 1090; address 100006fec
L10000367e_1090:
    MOV R12D, EAX
    XOR EAX, EAX
    MOV qword [RBP + -216], RAX
    TEST R12D, R12D
    JE L10000367e_1063
    JMP L10000367e_1091     ; inserted

; Entry 10000367e; block 1091; address 100007001
L10000367e_1091:
    JMP L10000367e_1439

; Entry 10000367e; block 1092; address 100007019
L10000367e_1092:
    MOV RDI, qword [R13]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_11151]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1094     ; inserted

; Entry 10000367e; block 1093; address 10000708a
L10000367e_1093:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L10000367e_1101
    JMP L10000367e_1100     ; inserted

; Entry 10000367e; block 1094; address 100007032
L10000367e_1094:
    LEA RAX, [rel L__DATA___common + 168]
    CMP dword [RAX], 0
    JE L10000367e_1096
    JMP L10000367e_1095     ; inserted

; Entry 10000367e; block 1095; address 10000703e
L10000367e_1095:
    MOV RCX, qword [R13]
    MOV ESI, 2
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_11053]
    CALL _fwrite
    JMP L10000367e_1097     ; inserted

; Entry 10000367e; block 1096; address 100007073
L10000367e_1096:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_1099     ; inserted

; Entry 10000367e; block 1097; address 100007058
L10000367e_1097:
    MOV RDI, qword [R13]
    MOV RSI, qword [R15 + 32]
    CALL L100015c88_0
    JMP L10000367e_1098     ; inserted

; Entry 10000367e; block 1098; address 100007065
L10000367e_1098:
    MOV RSI, qword [R13]
    MOV EDI, 41
    CALL _fputc
    JMP L10000367e_1096     ; inserted

; Entry 10000367e; block 1099; address 10000707c
L10000367e_1099:
    MOV RSI, qword [R13]
    MOV EDI, 10
    CALL _fputc
    JMP L10000367e_1093     ; inserted

; Entry 10000367e; block 1100; address 100007096
L10000367e_1100:
    MOV RDI, qword [R14]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_11151]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1102     ; inserted

; Entry 10000367e; block 1101; address 100007101
L10000367e_1101:
    LEA RAX, [rel L__DATA___common + 176]
    INC qword [RAX]
    MOV RAX, qword [R15 + 24]
    LEA RCX, [rel L__DATA___common + 208]
    ADD qword [RCX], RAX
    LEA RCX, [rel L__DATA___common + 200]
    ADD qword [RCX], RAX
    JMP L10000367e_1025

; Entry 10000367e; block 1102; address 1000070ae
L10000367e_1102:
    LEA RAX, [rel L__DATA___common + 168]
    CMP dword [RAX], 0
    JE L10000367e_1104
    JMP L10000367e_1103     ; inserted

; Entry 10000367e; block 1103; address 1000070ba
L10000367e_1103:
    MOV RCX, qword [R14]
    MOV ESI, 2
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_11053]
    CALL _fwrite
    JMP L10000367e_1105     ; inserted

; Entry 10000367e; block 1104; address 1000070ec
L10000367e_1104:
    MOV RSI, qword [R14]
    MOV EDI, 10
    CALL _fputc
    JMP L10000367e_1107     ; inserted

; Entry 10000367e; block 1105; address 1000070d3
L10000367e_1105:
    MOV RDI, qword [R14]
    MOV RSI, qword [R15 + 32]
    CALL L100015c88_0
    JMP L10000367e_1106     ; inserted

; Entry 10000367e; block 1106; address 1000070df
L10000367e_1106:
    MOV RSI, qword [R14]
    MOV EDI, 41
    CALL _fputc
    JMP L10000367e_1104     ; inserted

; Entry 10000367e; block 1107; address 1000070f9
L10000367e_1107:
    MOV RDI, qword [R14]
    CALL _fflush
    JMP L10000367e_1101     ; inserted

; Entry 10000367e; block 1108; address 100007147
L10000367e_1108:
    LEA RAX, [rel L__DATA___common + 604]
    MOV dword [RAX], 1
    MOV RDI, qword [RBX]
    MOV RBX, qword [RBP + -216]
    CALL _fflush
    JMP L10000367e_1021     ; inserted

; Entry 10000367e; block 1109; address 10000716f
L10000367e_1109:
    CMP dword [rel L__DATA___data + 3912], 3
    JNE L10000367e_1112
    JMP L10000367e_1111     ; inserted

; Entry 10000367e; block 1110; address 1000071ed
L10000367e_1110:
    LEA RDI, [RBP + -160]
    MOV RSI, R15
    CALL L100009f39_0
    JMP L10000367e_1119     ; inserted

; Entry 10000367e; block 1111; address 100007178
L10000367e_1111:
    MOV RDI, qword [R14]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_10804]
    JMP L10000367e_1117

; Entry 10000367e; block 1112; address 10000718b
L10000367e_1112:
    LEA RAX, [rel L__DATA___common + 68]
    CMP dword [RAX], 0
    JE L10000367e_1114
    JMP L10000367e_1113     ; inserted

; Entry 10000367e; block 1113; address 100007197
L10000367e_1113:
    CMP dword [R15 + 144], 0
    JE L10000367e_1114
    JMP L10000367e_1115     ; inserted

; Entry 10000367e; block 1114; address 1000071c0
L10000367e_1114:
    MOV RDI, qword [R14]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_10832]
    JMP L10000367e_1117     ; inserted

; Entry 10000367e; block 1115; address 1000071a1
L10000367e_1115:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    JE L10000367e_1110
    JMP L10000367e_1116     ; inserted

; Entry 10000367e; block 1116; address 1000071ad
L10000367e_1116:
    MOV RDI, qword [R14]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_10845]
    JMP L10000367e_1117

; Entry 10000367e; block 1117; address 1000071d1
L10000367e_1117:
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1118     ; inserted

; Entry 10000367e; block 1118; address 1000071d8
L10000367e_1118:
    LEA RAX, [rel L__DATA___common + 608]
    MOV dword [RAX], 1
    MOV RDI, qword [R14]
    CALL _fflush
    JMP L10000367e_1110     ; inserted

; Entry 10000367e; block 1119; address 1000071fc
L10000367e_1119:
    TEST EAX, EAX
    JE L10000367e_1121
    JMP L10000367e_1120     ; inserted

; Entry 10000367e; block 1120; address 100007200
L10000367e_1120:
    MOV RSI, qword [R15 + 128]
    LEA RDI, [rel L__TEXT___cstring_10858]
    CALL L1000034f4_0
    JMP L10000367e_1122     ; inserted

; Entry 10000367e; block 1121; address 100007226
L10000367e_1121:
    MOV RDI, qword [RBP + -160]
    MOVZX EAX, word [RDI + 58]
    MOV word [R15 + 58], AX
    MOVZX EAX, word [RDI + 42]
    MOV word [R15 + 42], AX
    MOV RAX, qword [RDI + 88]
    MOV qword [R15 + 88], RAX
    CMP word [RDI + 40], 0
    JE L10000367e_1124
    JMP L10000367e_1123     ; inserted

; Entry 10000367e; block 1122; address 100007213
L10000367e_1122:
    MOVZX EAX, word [R15 + 4]
    MOV word [R15 + 58], AX
    MOV word [R15 + 42], 0
    JMP L10000367e_1128

; Entry 10000367e; block 1123; address 10000724e
L10000367e_1123:
    MOV RDI, qword [RDI + 112]
    CALL _free
    JMP L10000367e_1125     ; inserted

; Entry 10000367e; block 1124; address 100007275
L10000367e_1124:
    CALL _free
    JMP L10000367e_1128     ; inserted

; Entry 10000367e; block 1125; address 100007257
L10000367e_1125:
    MOV RDI, qword [RBP + -160]
    CMP word [RDI + 40], 0
    JE L10000367e_1124
    JMP L10000367e_1126     ; inserted

; Entry 10000367e; block 1126; address 100007265
L10000367e_1126:
    MOV RDI, qword [RDI + 80]
    CALL _free
    JMP L10000367e_1127     ; inserted

; Entry 10000367e; block 1127; address 10000726e
L10000367e_1127:
    MOV RDI, qword [RBP + -160]
    JMP L10000367e_1124     ; inserted

; Entry 10000367e; block 1128; address 10000727a
L10000367e_1128:
    LEA RAX, [rel L__DATA___common + 68]
    CMP dword [RAX], 0
    JE L10000367e_1130
    JMP L10000367e_1129     ; inserted

; Entry 10000367e; block 1129; address 100007286
L10000367e_1129:
    CMP dword [R15 + 144], 0
    JNE L10000367e_1131
    JMP L10000367e_1130     ; inserted

; Entry 10000367e; block 1130; address 100007290
L10000367e_1130:
    MOV RDI, R15
    CALL L10000f7b9_0
    JMP L10000367e_1132     ; inserted

; Entry 10000367e; block 1131; address 1000072ab
L10000367e_1131:
    LEA RAX, [rel L__DATA___common + 68]
    CMP dword [RAX], 0
    JE L10000367e_1136
    JMP L10000367e_1135     ; inserted

; Entry 10000367e; block 1132; address 100007298
L10000367e_1132:
    MOV EBX, EAX
    LEA EAX, [RBX + 1]
    CMP EAX, 2
    JB L10000367e_1131
    JMP L10000367e_1133     ; inserted

; Entry 10000367e; block 1133; address 1000072a2
L10000367e_1133:
    CMP EBX, 18
    JNE L10000367e_1134
    JMP L10000367e_1131     ; inserted

; Entry 10000367e; block 1134; address 1000087d5
L10000367e_1134:
    LEA RDI, [rel L__TEXT___cstring_244]
    MOV ESI, 1
    CALL L100003300_0
    JMP L10000367e_1458     ; inserted

; Entry 10000367e; block 1135; address 1000072b7
L10000367e_1135:
    CMP dword [R15 + 144], 0
    JE L10000367e_1136
    JMP L10000367e_1137     ; inserted

; Entry 10000367e; block 1136; address 1000072e4
L10000367e_1136:
    CMP EBX, 18
    JE L10000367e_1143
    JMP L10000367e_1142     ; inserted

; Entry 10000367e; block 1137; address 1000072c1
L10000367e_1137:
    MOV RDI, R15
    CALL L10000e1ae_0
    JMP L10000367e_1138     ; inserted

; Entry 10000367e; block 1138; address 1000072c9
L10000367e_1138:
    TEST EAX, EAX
    JNE L10000367e_1140
    JMP L10000367e_1139     ; inserted

; Entry 10000367e; block 1139; address 1000072d1
L10000367e_1139:
    LEA RDI, [rel L__TEXT___cstring_244]
    MOV ESI, 1
    CALL L100003300_0
    JMP L10000367e_1141     ; inserted

; Entry 10000367e; block 1140; address 1000085ff
L10000367e_1140:
    MOV R12D, EAX
    JMP L10000367e_1439     ; inserted

; Entry 10000367e; block 1141; address 1000072e2
L10000367e_1141:
    JMP L10000367e_1152

; Entry 10000367e; block 1142; address 1000072e9
L10000367e_1142:
    CMP EBX, 18446744073709551615
    JNE L10000367e_1144
    JMP L10000367e_1143     ; inserted

; Entry 10000367e; block 1143; address 1000072ee
L10000367e_1143:
    LEA RDI, [rel L__TEXT___cstring_244]
    MOV ESI, 1
    CALL L100003300_0
    JMP L10000367e_1145     ; inserted

; Entry 10000367e; block 1144; address 100007355
L10000367e_1144:
    MOV qword [RBP + -216], RBX
    LEA RAX, [rel L__DATA___common + 176]
    INC qword [RAX]
    MOV RAX, qword [R15 + 32]
    LEA RCX, [rel L__DATA___common + 208]
    ADD qword [RCX], RAX
    LEA RAX, [rel L__DATA___common + 200]
    ADD qword [RAX], R13
    LEA R13, [rel L__DATA___common + 6336]
    JMP L10000367e_1063     ; inserted

; Entry 10000367e; block 1145; address 1000072ff
L10000367e_1145:
    MOV RSI, qword [R15 + 128]
    CMP EBX, 18
    JE L10000367e_1147
    JMP L10000367e_1146     ; inserted

; Entry 10000367e; block 1146; address 10000730f
L10000367e_1146:
    LEA RDI, [rel L__TEXT___cstring_10958]
    CALL L1000034f4_0
    JMP L10000367e_1148     ; inserted

; Entry 10000367e; block 1147; address 100007683
L10000367e_1147:
    LEA RAX, [R15 + 128]
    XOR EDX, EDX
    CMP dword [RBP + -240], 0
    SETE DL
    MOV RDI, RSI
    MOV RSI, RAX
    MOV RCX, R15
    CALL L1000195a8_0
    JMP L10000367e_1207     ; inserted

; Entry 10000367e; block 1148; address 10000731b
L10000367e_1148:
    MOV RSI, qword [R15 + 128]
    LEA RDI, [rel L__TEXT___cstring_10998]
    CALL L1000034f4_0
    JMP L10000367e_1149     ; inserted

; Entry 10000367e; block 1149; address 10000732e
L10000367e_1149:
    MOV RDI, R15
    CALL L10000e1ae_0
    JMP L10000367e_1150     ; inserted

; Entry 10000367e; block 1150; address 100007336
L10000367e_1150:
    TEST EAX, EAX
    JNE L10000367e_1140
    JMP L10000367e_1151     ; inserted

; Entry 10000367e; block 1151; address 10000733e
L10000367e_1151:
    MOV dword [R15 + 136], 0
    MOV dword [RBP + -192], 1
    JMP L10000367e_1152     ; inserted

; Entry 10000367e; block 1152; address 100007353
L10000367e_1152:
    XOR EBX, EBX
    JMP L10000367e_1144     ; inserted

; Entry 10000367e; block 1153; address 1000073a3
L10000367e_1153:
    MOV RDI, qword [R13]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_11040]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1155     ; inserted

; Entry 10000367e; block 1154; address 10000740c
L10000367e_1154:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L10000367e_1082
    JMP L10000367e_1160     ; inserted

; Entry 10000367e; block 1155; address 1000073bc
L10000367e_1155:
    LEA RAX, [rel L__DATA___common + 168]
    CMP dword [RAX], 0
    JE L10000367e_1157
    JMP L10000367e_1156     ; inserted

; Entry 10000367e; block 1156; address 1000073c8
L10000367e_1156:
    MOV RCX, qword [R13]
    MOV ESI, 2
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_11053]
    CALL _fwrite
    JMP L10000367e_1158     ; inserted

; Entry 10000367e; block 1157; address 1000073fd
L10000367e_1157:
    MOV dword [RBX], 1
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_1154     ; inserted

; Entry 10000367e; block 1158; address 1000073e2
L10000367e_1158:
    MOV RDI, qword [R13]
    MOV RSI, qword [R15 + 32]
    CALL L100015c88_0
    JMP L10000367e_1159     ; inserted

; Entry 10000367e; block 1159; address 1000073ef
L10000367e_1159:
    MOV RSI, qword [R13]
    MOV EDI, 41
    CALL _fputc
    JMP L10000367e_1157     ; inserted

; Entry 10000367e; block 1160; address 100007418
L10000367e_1160:
    MOV RDI, qword [R14]
    MOV RDX, qword [R15 + 128]
    LEA RSI, [rel L__TEXT___cstring_11040]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1161     ; inserted

; Entry 10000367e; block 1161; address 100007430
L10000367e_1161:
    LEA RAX, [rel L__DATA___common + 168]
    CMP dword [RAX], 0
    JE L10000367e_1163
    JMP L10000367e_1162     ; inserted

; Entry 10000367e; block 1162; address 10000743c
L10000367e_1162:
    MOV RCX, qword [R14]
    MOV ESI, 2
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_11053]
    CALL _fwrite
    JMP L10000367e_1164     ; inserted

; Entry 10000367e; block 1163; address 10000746e
L10000367e_1163:
    LEA RAX, [rel L__DATA___common + 608]
    MOV dword [RAX], 1
    MOV RDI, qword [R14]
    CALL _fflush
    JMP L10000367e_1082     ; inserted

; Entry 10000367e; block 1164; address 100007455
L10000367e_1164:
    MOV RDI, qword [R14]
    MOV RSI, qword [R15 + 32]
    CALL L100015c88_0
    JMP L10000367e_1165     ; inserted

; Entry 10000367e; block 1165; address 100007461
L10000367e_1165:
    MOV RSI, qword [R14]
    MOV EDI, 41
    CALL _fputc
    JMP L10000367e_1163     ; inserted

; Entry 10000367e; block 1166; address 100007496
L10000367e_1166:
    MOV dword [R15 + 136], 0
    JMP L10000367e_1170

; Entry 10000367e; block 1167; address 1000074a3
L10000367e_1167:
    MOV RDI, R15
    CALL L10000e1ae_0
    JMP L10000367e_1168     ; inserted

; Entry 10000367e; block 1168; address 1000074ab
L10000367e_1168:
    TEST EAX, EAX
    MOV qword [RBP + -216], RAX
    JE L10000367e_1170
    JMP L10000367e_1169     ; inserted

; Entry 10000367e; block 1169; address 1000074b6
L10000367e_1169:
    CMP EAX, 9
    JE L10000367e_1172
    JMP L10000367e_1171     ; inserted

; Entry 10000367e; block 1170; address 10000751e
L10000367e_1170:
    CMP dword [RBP + -216], 0
    JE L10000367e_1180
    JMP L10000367e_1179     ; inserted

; Entry 10000367e; block 1171; address 1000074bf
L10000367e_1171:
    CMP dword [R12], 1
    JNE L10000367e_1174
    JMP L10000367e_1173     ; inserted

; Entry 10000367e; block 1172; address 100008887
L10000367e_1172:
    LEA RSI, [rel L__TEXT___cstring_11056]
    JMP L10000367e_1454

; Entry 10000367e; block 1173; address 1000074ca
L10000367e_1173:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    LEA RBX, [rel L__DATA___common + 544]
    MOV RSI, qword [RBX]
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000367e_1175     ; inserted

; Entry 10000367e; block 1174; address 100008893
L10000367e_1174:
    MOV R8, qword [R15 + 128]
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_10914]
    MOV EDX, 5105
    MOV RDI, RBX
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000367e_1464     ; inserted

; Entry 10000367e; block 1175; address 1000074e5
L10000367e_1175:
    TEST EAX, EAX
    JNE L10000367e_1177
    JMP L10000367e_1176     ; inserted

; Entry 10000367e; block 1176; address 1000074ed
L10000367e_1176:
    MOV RSI, qword [R15 + 128]
    LEA RDI, [rel L__TEXT___cstring_11134]
    CALL L1000034f4_0
    JMP L10000367e_1178     ; inserted

; Entry 10000367e; block 1177; address 1000088d8
L10000367e_1177:
    LEA RSI, [rel L__TEXT___cstring_11104]
    MOV RDI, qword [RBP + -216]
    CALL L100002e30_0

; Entry 10000367e; block 1178; address 100007500
L10000367e_1178:
    MOV RAX, qword [RBX]
    LEA RCX, [rel L__DATA___common + 6344]
    MOV qword [RCX], RAX
    LEA RCX, [rel L__DATA___common + 552]
    MOV qword [RCX], RAX
    LEA RBX, [rel L__DATA___common + 604]
    JMP L10000367e_1170     ; inserted

; Entry 10000367e; block 1179; address 100007527
L10000367e_1179:
    LEA RAX, [rel L__DATA___common + 96]
    CMP qword [RAX], 0
    JNE L10000367e_1180
    JMP L10000367e_1181     ; inserted

; Entry 10000367e; block 1180; address 10000753b
L10000367e_1180:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_1184
    JMP L10000367e_1183     ; inserted

; Entry 10000367e; block 1181; address 100007534
L10000367e_1181:
    CMP dword [R12], 1
    JE L10000367e_1182
    JMP L10000367e_1180     ; inserted

; Entry 10000367e; block 1182; address 1000075a3
L10000367e_1182:
    LEA RAX, [rel L__DATA___common + 176]
    INC qword [RAX]
    MOV RAX, qword [R15 + 24]
    CMP dword [RBP + -216], 0
    JE L10000367e_1191
    JMP L10000367e_1190     ; inserted

; Entry 10000367e; block 1183; address 100007547
L10000367e_1183:
    CMP dword [RBX], 0
    JE L10000367e_1184
    JMP L10000367e_1185     ; inserted

; Entry 10000367e; block 1184; address 100007569
L10000367e_1184:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L10000367e_1182
    JMP L10000367e_1187     ; inserted

; Entry 10000367e; block 1185; address 10000754c
L10000367e_1185:
    MOV RSI, qword [R13]
    MOV EDI, 10
    CALL _fputc
    JMP L10000367e_1186     ; inserted

; Entry 10000367e; block 1186; address 10000755a
L10000367e_1186:
    MOV dword [RBX], 0
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_1184     ; inserted

; Entry 10000367e; block 1187; address 100007575
L10000367e_1187:
    LEA RAX, [rel L__DATA___common + 608]
    CMP dword [RAX], 0
    JE L10000367e_1182
    JMP L10000367e_1188     ; inserted

; Entry 10000367e; block 1188; address 100007581
L10000367e_1188:
    MOV RSI, qword [R14]
    MOV EDI, 10
    CALL _fputc
    JMP L10000367e_1189     ; inserted

; Entry 10000367e; block 1189; address 10000758e
L10000367e_1189:
    LEA RAX, [rel L__DATA___common + 608]
    MOV dword [RAX], 0
    MOV RDI, qword [R14]
    CALL _fflush
    JMP L10000367e_1182     ; inserted

; Entry 10000367e; block 1190; address 1000075be
L10000367e_1190:
    LEA RCX, [rel L__DATA___common + 216]
    ADD qword [RCX], RAX
    LEA RCX, [rel L__DATA___common + 200]
    ADD qword [RCX], RAX
    CMP dword [R12], 1
    JNE L10000367e_1063
    JMP L10000367e_1025     ; inserted

; Entry 10000367e; block 1191; address 10000766a
L10000367e_1191:
    LEA RCX, [rel L__DATA___common + 208]
    ADD qword [RCX], RAX
    LEA RCX, [rel L__DATA___common + 200]
    ADD qword [RCX], RAX
    JMP L10000367e_1063

; Entry 10000367e; block 1192; address 1000075ed
L10000367e_1192:
    MOV RDI, qword [R15 + 120]
    CALL _free
    JMP L10000367e_1193     ; inserted

; Entry 10000367e; block 1193; address 1000075f6
L10000367e_1193:
    MOV RDI, qword [R15 + 128]
    CALL _free
    JMP L10000367e_1194     ; inserted

; Entry 10000367e; block 1194; address 100007602
L10000367e_1194:
    CMP word [R15 + 42], 0
    JE L10000367e_1196
    JMP L10000367e_1195     ; inserted

; Entry 10000367e; block 1195; address 10000760a
L10000367e_1195:
    MOV RDI, qword [R15 + 88]
    TEST RDI, RDI
    JE L10000367e_1196
    JMP L10000367e_1197     ; inserted

; Entry 10000367e; block 1196; address 100007618
L10000367e_1196:
    CMP word [R15 + 44], 0
    JE L10000367e_1199
    JMP L10000367e_1198     ; inserted

; Entry 10000367e; block 1197; address 100007613
L10000367e_1197:
    CALL _free
    JMP L10000367e_1196     ; inserted

; Entry 10000367e; block 1198; address 100007620
L10000367e_1198:
    MOV RDI, qword [R15 + 96]
    CMP RDI, qword [R15 + 88]
    JE L10000367e_1199
    JMP L10000367e_1200     ; inserted

; Entry 10000367e; block 1199; address 10000762f
L10000367e_1199:
    CMP word [R15 + 46], 0
    JE L10000367e_1202
    JMP L10000367e_1201     ; inserted

; Entry 10000367e; block 1200; address 10000762a
L10000367e_1200:
    CALL _free
    JMP L10000367e_1199     ; inserted

; Entry 10000367e; block 1201; address 100007637
L10000367e_1201:
    MOV RDI, qword [R15 + 104]
    CALL _free
    JMP L10000367e_1202     ; inserted

; Entry 10000367e; block 1202; address 100007640
L10000367e_1202:
    MOV RDI, R15
    CALL _free
    JMP L10000367e_1203     ; inserted

; Entry 10000367e; block 1203; address 100007648
L10000367e_1203:
    MOV RAX, qword [RBP + -224]
    MOV qword [RAX], RBX
    LEA RAX, [rel L__DATA___common + 6360]
    DEC qword [RAX]
    JMP L10000367e_1204     ; inserted

; Entry 10000367e; block 1204; address 10000765c
L10000367e_1204:
    MOV R15, RBX
    TEST RBX, RBX
    JNE L10000367e_1205
    JMP L10000367e_1206     ; inserted

; Entry 10000367e; block 1205; address 100006b6b
L10000367e_1205:
    CMP dword [R15 + 136], 1
    JNE L10000367e_1013
    JMP L10000367e_1012     ; inserted

; Entry 10000367e; block 1206; address 100007668
L10000367e_1206:
    JMP L10000367e_1208

; Entry 10000367e; block 1207; address 1000076a4
L10000367e_1207:
    JMP L10000367e_1148

; Entry 10000367e; block 1208; address 1000076b3
L10000367e_1208:
    CMP dword [RBP + -164], 0
    JE L10000367e_1210
    JMP L10000367e_1209     ; inserted

; Entry 10000367e; block 1209; address 1000076bc
L10000367e_1209:
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_11164]
    MOV ESI, 27
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1211     ; inserted

; Entry 10000367e; block 1210; address 1000076df
L10000367e_1210:
    LEA RAX, [rel L__DATA___common + 640]
    MOV R13, qword [RAX]
    TEST R13, R13
    JE L10000367e_1213
    JMP L10000367e_1212     ; inserted

; Entry 10000367e; block 1211; address 1000076d6
L10000367e_1211:
    MOV RDI, qword [R13]
    CALL _fflush
    JMP L10000367e_1210     ; inserted

; Entry 10000367e; block 1212; address 1000076f2
L10000367e_1212:
    MOV EDI, 160
    CALL _malloc
    JMP L10000367e_1214     ; inserted

; Entry 10000367e; block 1213; address 100007914
L10000367e_1213:
    LEA RBX, [rel L__DATA___common + 312]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L10000367e_1244
    JMP L10000367e_1243     ; inserted

; Entry 10000367e; block 1214; address 1000076fc
L10000367e_1214:
    TEST RAX, RAX
    JE L10000367e_1216
    JMP L10000367e_1215     ; inserted

; Entry 10000367e; block 1215; address 100007705
L10000367e_1215:
    MOV RBX, RAX
    MOV qword [RAX + 152], 0
    MOV RAX, qword [R13]
    MOV qword [RBX + 80], RAX
    MOVUPS XMM0, oword [R13 + 8]
    XORPS XMM1, XMM1
    MOVUPS oword [R13], XMM1
    MOVUPS oword [RBX + 112], XMM0
    MOV RAX, qword [R13 + 24]
    LEA R15, [RBX + 128]
    MOV qword [RBX + 128], RAX
    MOVUPS oword [R13 + 16], XMM1
    MOV word [RBX + 46], 0
    MOV dword [RBX + 42], 0
    MOVUPS oword [RBX + 88], XMM1
    MOV dword [RBX + 136], 1
    MOV EAX, dword [R13 + 32]
    MOV dword [RBX + 148], EAX
    CALL L100009870_0
    JMP L10000367e_1217     ; inserted

; Entry 10000367e; block 1216; address 1000083e8
L10000367e_1216:
    LEA RSI, [rel L__TEXT___cstring_11192]
    JMP L10000367e_1431

; Entry 10000367e; block 1217; address 10000776d
L10000367e_1217:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_1219
    JMP L10000367e_1218     ; inserted

; Entry 10000367e; block 1218; address 100007779
L10000367e_1218:
    LEA R14, [rel L__DATA___common + 6336]
    MOV RDI, qword [R14]
    MOV RDX, qword [R15]
    LEA RSI, [rel L__TEXT___cstring_11221]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1220     ; inserted

; Entry 10000367e; block 1219; address 1000077a9
L10000367e_1219:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L10000367e_1222
    JMP L10000367e_1221     ; inserted

; Entry 10000367e; block 1220; address 100007794
L10000367e_1220:
    LEA RAX, [rel L__DATA___common + 604]
    MOV dword [RAX], 1
    MOV RDI, qword [R14]
    CALL _fflush
    JMP L10000367e_1219     ; inserted

; Entry 10000367e; block 1221; address 1000077b5
L10000367e_1221:
    LEA R14, [rel L__DATA___common + 240]
    MOV RDI, qword [R14]
    MOV RDX, qword [R15]
    LEA RSI, [rel L__TEXT___cstring_11221]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1223     ; inserted

; Entry 10000367e; block 1222; address 1000077e5
L10000367e_1222:
    MOV R12, qword [R13 + 40]
    MOV RDI, RBX
    CALL L10000f7b9_0
    JMP L10000367e_1224     ; inserted

; Entry 10000367e; block 1223; address 1000077d0
L10000367e_1223:
    LEA RAX, [rel L__DATA___common + 608]
    MOV dword [RAX], 1
    MOV RDI, qword [R14]
    CALL _fflush
    JMP L10000367e_1222     ; inserted

; Entry 10000367e; block 1224; address 1000077f1
L10000367e_1224:
    MOV R14D, EAX
    CMP EAX, 18446744073709551615
    JE L10000367e_1226
    JMP L10000367e_1225     ; inserted

; Entry 10000367e; block 1225; address 1000077f9
L10000367e_1225:
    TEST R14D, R14D
    JE L10000367e_1228
    JMP L10000367e_1227     ; inserted

; Entry 10000367e; block 1226; address 10000780c
L10000367e_1226:
    LEA RDI, [rel L__TEXT___cstring_244]
    MOV ESI, 1
    CALL L100003300_0
    JMP L10000367e_1230     ; inserted

; Entry 10000367e; block 1227; address 100007802
L10000367e_1227:
    CMP R14D, 18
    JNE L10000367e_1229
    JMP L10000367e_1226     ; inserted

; Entry 10000367e; block 1228; address 100007899
L10000367e_1228:
    LEA RAX, [rel L__DATA___common + 176]
    INC qword [RAX]
    MOV RAX, qword [RBX + 32]
    LEA RCX, [rel L__DATA___common + 208]
    ADD qword [RCX], RAX
    LEA RAX, [rel L__DATA___common + 200]
    ADD qword [RAX], R12
    MOV RAX, qword [RBP + -224]
    MOV qword [RAX], RBX
    ADD RBX, 152
    LEA RAX, [rel L__DATA___common + 6360]
    INC qword [RAX]
    MOV qword [RBP + -224], RBX
    JMP L10000367e_1239     ; inserted

; Entry 10000367e; block 1229; address 1000085ac
L10000367e_1229:
    LEA RDI, [rel L__TEXT___cstring_244]
    MOV ESI, 1
    CALL L100003300_0
    JMP L10000367e_1437     ; inserted

; Entry 10000367e; block 1230; address 10000781d
L10000367e_1230:
    CMP R14D, 18
    JE L10000367e_1232
    JMP L10000367e_1231     ; inserted

; Entry 10000367e; block 1231; address 100007827
L10000367e_1231:
    MOV RSI, qword [R15]
    LEA RDI, [rel L__TEXT___cstring_10958]
    CALL L1000034f4_0
    JMP L10000367e_1233     ; inserted

; Entry 10000367e; block 1232; address 1000078f3
L10000367e_1232:
    MOV RDX, RBX
    ADD RDX, 80
    XOR ESI, ESI
    CMP dword [RBP + -240], 0
    SETE SIL
    MOV RDI, R15
    CALL L10001950d_0
    JMP L10000367e_1242     ; inserted

; Entry 10000367e; block 1233; address 100007836
L10000367e_1233:
    LEA RAX, [rel L__DATA___common + 176]
    INC qword [RAX]
    LEA RAX, [rel L__DATA___common + 200]
    ADD qword [RAX], R12
    LEA RAX, [rel L__DATA___common + 184]
    INC qword [RAX]
    LEA RAX, [rel L__DATA___common + 216]
    ADD qword [RAX], R12
    MOV RDI, qword [RBX + 80]
    CALL _free
    JMP L10000367e_1234     ; inserted

; Entry 10000367e; block 1234; address 100007867
L10000367e_1234:
    MOV RDI, qword [RBX + 112]
    CALL _free
    JMP L10000367e_1235     ; inserted

; Entry 10000367e; block 1235; address 100007870
L10000367e_1235:
    MOV RDI, qword [RBX + 120]
    CALL _free
    JMP L10000367e_1236     ; inserted

; Entry 10000367e; block 1236; address 100007879
L10000367e_1236:
    MOV RDI, qword [RBX + 128]
    CALL _free
    JMP L10000367e_1237     ; inserted

; Entry 10000367e; block 1237; address 100007885
L10000367e_1237:
    MOV RDI, RBX
    CALL _free
    JMP L10000367e_1238     ; inserted

; Entry 10000367e; block 1238; address 10000788d
L10000367e_1238:
    MOV dword [RBP + -192], 1
    JMP L10000367e_1239

; Entry 10000367e; block 1239; address 1000078dd
L10000367e_1239:
    MOV RDI, R13
    CALL L1000107a9_0
    JMP L10000367e_1240     ; inserted

; Entry 10000367e; block 1240; address 1000078e5
L10000367e_1240:
    MOV R13, RAX
    TEST RAX, RAX
    JNE L10000367e_1212
    JMP L10000367e_1241     ; inserted

; Entry 10000367e; block 1241; address 1000078f1
L10000367e_1241:
    JMP L10000367e_1213

; Entry 10000367e; block 1242; address 10000790f
L10000367e_1242:
    JMP L10000367e_1233

; Entry 10000367e; block 1243; address 100007923
L10000367e_1243:
    CALL _free
    JMP L10000367e_1245     ; inserted

; Entry 10000367e; block 1244; address 10000792f
L10000367e_1244:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    LEA R15, [rel L__DATA___common + 184]
    MOV RAX, qword [R15]
    LEA R12, [rel L__DATA___common + 6336]
    JE L10000367e_1247
    JMP L10000367e_1246     ; inserted

; Entry 10000367e; block 1245; address 100007928
L10000367e_1245:
    MOV qword [RBX], 0
    JMP L10000367e_1244     ; inserted

; Entry 10000367e; block 1246; address 100007950
L10000367e_1246:
    TEST RAX, RAX
    JE L10000367e_1247
    JMP L10000367e_1248     ; inserted

; Entry 10000367e; block 1247; address 100007a08
L10000367e_1247:
    LEA RCX, [rel L__DATA___common + 240]
    MOV RCX, qword [RCX]
    TEST RCX, RCX
    JE L10000367e_1258
    JMP L10000367e_1257     ; inserted

; Entry 10000367e; block 1248; address 100007959
L10000367e_1248:
    MOV RCX, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_11263]
    MOV ESI, 42
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1249     ; inserted

; Entry 10000367e; block 1249; address 100007973
L10000367e_1249:
    MOV RDI, qword [R12]
    LEA RAX, [rel L__DATA___common + 192]
    MOV RDX, qword [RAX]
    SUB RDX, qword [R15]
    LEA RSI, [rel L__TEXT___cstring_11306]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1250     ; inserted

; Entry 10000367e; block 1250; address 100007992
L10000367e_1250:
    LEA RAX, [rel L__DATA___common + 208]
    MOV RDI, qword [RAX]
    LEA RBX, [RBP + -160]
    MOV RSI, RBX
    CALL L100015cf7_0
    JMP L10000367e_1251     ; inserted

; Entry 10000367e; block 1251; address 1000079ab
L10000367e_1251:
    MOV RDI, qword [R12]
    LEA RSI, [rel L__TEXT___cstring_11333]
    MOV RDX, RBX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1252     ; inserted

; Entry 10000367e; block 1252; address 1000079c0
L10000367e_1252:
    MOV RDI, qword [R12]
    MOV RDX, qword [R15]
    LEA RSI, [rel L__TEXT___cstring_11345]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1253     ; inserted

; Entry 10000367e; block 1253; address 1000079d5
L10000367e_1253:
    LEA RAX, [rel L__DATA___common + 216]
    MOV RDI, qword [RAX]
    MOV RSI, RBX
    CALL L100015cf7_0
    JMP L10000367e_1254     ; inserted

; Entry 10000367e; block 1254; address 1000079e7
L10000367e_1254:
    MOV RDI, qword [R12]
    LEA RSI, [rel L__TEXT___cstring_11361]
    MOV RDX, RBX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1255     ; inserted

; Entry 10000367e; block 1255; address 1000079fc
L10000367e_1255:
    MOV RDI, qword [R12]
    CALL _fflush
    JMP L10000367e_1256     ; inserted

; Entry 10000367e; block 1256; address 100007a05
L10000367e_1256:
    MOV RAX, qword [R15]
    JMP L10000367e_1247     ; inserted

; Entry 10000367e; block 1257; address 100007a1b
L10000367e_1257:
    TEST RAX, RAX
    JE L10000367e_1258
    JMP L10000367e_1259     ; inserted

; Entry 10000367e; block 1258; address 100007ac9
L10000367e_1258:
    CMP dword [RBP + -164], 0
    LEA RBX, [rel L__DATA___common + 604]
    JE L10000367e_1267
    JMP L10000367e_1266     ; inserted

; Entry 10000367e; block 1259; address 100007a24
L10000367e_1259:
    LEA RDI, [rel L__TEXT___cstring_11263]
    MOV ESI, 42
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1260     ; inserted

; Entry 10000367e; block 1260; address 100007a3a
L10000367e_1260:
    LEA R13, [rel L__DATA___common + 240]
    MOV RDI, qword [R13]
    LEA RAX, [rel L__DATA___common + 192]
    MOV RDX, qword [RAX]
    SUB RDX, qword [R15]
    LEA RSI, [rel L__TEXT___cstring_11306]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1261     ; inserted

; Entry 10000367e; block 1261; address 100007a60
L10000367e_1261:
    LEA RAX, [rel L__DATA___common + 208]
    MOV RDI, qword [RAX]
    LEA RBX, [RBP + -160]
    MOV RSI, RBX
    CALL L100015cf7_0
    JMP L10000367e_1262     ; inserted

; Entry 10000367e; block 1262; address 100007a79
L10000367e_1262:
    MOV RDI, qword [R13]
    LEA R14, [rel L__TEXT___cstring_11333]
    MOV RSI, R14
    MOV RDX, RBX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1263     ; inserted

; Entry 10000367e; block 1263; address 100007a91
L10000367e_1263:
    MOV RDI, qword [R13]
    MOV RDX, qword [R15]
    LEA RSI, [rel L__TEXT___cstring_11345]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1264     ; inserted

; Entry 10000367e; block 1264; address 100007aa6
L10000367e_1264:
    LEA RAX, [rel L__DATA___common + 216]
    MOV RDI, qword [RAX]
    MOV RSI, RBX
    CALL L100015cf7_0
    JMP L10000367e_1265     ; inserted

; Entry 10000367e; block 1265; address 100007ab8
L10000367e_1265:
    MOV RDI, qword [R13]
    MOV RSI, R14
    MOV RDX, RBX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1258     ; inserted

; Entry 10000367e; block 1266; address 100007ad9
L10000367e_1266:
    MOV RCX, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_11374]
    MOV ESI, 23
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1268     ; inserted

; Entry 10000367e; block 1267; address 100007afc
L10000367e_1267:
    CMP byte [rel L__DATA___bss + 8], 1
    JNE L10000367e_1270
    JMP L10000367e_1269     ; inserted

; Entry 10000367e; block 1268; address 100007af3
L10000367e_1268:
    MOV RDI, qword [R12]
    CALL _fflush
    JMP L10000367e_1267     ; inserted

; Entry 10000367e; block 1269; address 100007b09
L10000367e_1269:
    CMP qword [RBP + -256], 0
    JNE L10000367e_1272
    JMP L10000367e_1271     ; inserted

; Entry 10000367e; block 1270; address 100007c19
L10000367e_1270:
    CMP byte [rel L__DATA___bss + 32], 1
    JNE L10000367e_1296
    JMP L10000367e_1295     ; inserted

; Entry 10000367e; block 1271; address 100007b13
L10000367e_1271:
    MOV RAX, qword [rel ___stderrp]
    MOV RDI, qword [RAX]
    CALL _fileno
    JMP L10000367e_1273     ; inserted

; Entry 10000367e; block 1272; address 100007b37
L10000367e_1272:
    MOV EDI, 257
    CALL _malloc
    JMP L10000367e_1275     ; inserted

; Entry 10000367e; block 1273; address 100007b22
L10000367e_1273:
    LEA RSI, [rel L__TEXT___cstring_6381]
    MOV EDI, EAX
    CALL _fdopen
    JMP L10000367e_1274     ; inserted

; Entry 10000367e; block 1274; address 100007b30
L10000367e_1274:
    MOV qword [RBP + -256], RAX
    JMP L10000367e_1272     ; inserted

; Entry 10000367e; block 1275; address 100007b41
L10000367e_1275:
    TEST RAX, RAX
    JE L10000367e_1277
    JMP L10000367e_1276     ; inserted

; Entry 10000367e; block 1276; address 100007b4a
L10000367e_1276:
    MOV R15, RAX
    LEA RAX, [rel L__DATA___common + 616]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L10000367e_1279
    JMP L10000367e_1278     ; inserted

; Entry 10000367e; block 1277; address 100008574
L10000367e_1277:
    LEA RSI, [rel L__TEXT___cstring_11398]
    JMP L10000367e_1431

; Entry 10000367e; block 1278; address 100007b60
L10000367e_1278:
    LEA R14, [rel L__TEXT___cstring_11424]
    JMP L10000367e_1293     ; inserted

; Entry 10000367e; block 1279; address 100007c0a
L10000367e_1279:
    MOV RDI, R15
    CALL _free
    JMP L10000367e_1294     ; inserted

; Entry 10000367e; block 1280; address 100007b74
L10000367e_1280:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_1283
    JMP L10000367e_1282     ; inserted

; Entry 10000367e; block 1281; address 100007bfa
L10000367e_1281:
    MOV RBX, qword [RBX + 152]
    TEST RBX, RBX
    JNE L10000367e_1293
    JMP L10000367e_1279     ; inserted

; Entry 10000367e; block 1282; address 100007b80
L10000367e_1282:
    MOV RDI, qword [R12]
    MOV RDX, qword [RBX + 128]
    MOV RSI, R14
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1283     ; inserted

; Entry 10000367e; block 1283; address 100007b95
L10000367e_1283:
    MOV RDI, R15
    MOV ESI, 257
    MOV RDX, qword [RBP + -256]
    CALL _fgets
    JMP L10000367e_1284     ; inserted

; Entry 10000367e; block 1284; address 100007ba9
L10000367e_1284:
    TEST RAX, RAX
    JE L10000367e_1281
    JMP L10000367e_1285     ; inserted

; Entry 10000367e; block 1285; address 100007bae
L10000367e_1285:
    MOV RDI, R15
    CALL _strlen
    JMP L10000367e_1286     ; inserted

; Entry 10000367e; block 1286; address 100007bb6
L10000367e_1286:
    MOV R12, RAX
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L10000367e_1287     ; inserted

; Entry 10000367e; block 1287; address 100007bc2
L10000367e_1287:
    TEST RAX, RAX
    JE L10000367e_1289
    JMP L10000367e_1288     ; inserted

; Entry 10000367e; block 1288; address 100007bcb
L10000367e_1288:
    MOV R13, RAX
    MOV RDI, RAX
    MOV RSI, R15
    CALL _strcpy
    JMP L10000367e_1290     ; inserted

; Entry 10000367e; block 1289; address 10000856c
L10000367e_1289:
    MOV RDI, R15
    CALL _free
    JMP L10000367e_1277     ; inserted

; Entry 10000367e; block 1290; address 100007bd9
L10000367e_1290:
    CMP byte [R13 + R12-1], 10
    JNE L10000367e_1292
    JMP L10000367e_1291     ; inserted

; Entry 10000367e; block 1291; address 100007be1
L10000367e_1291:
    DEC R12
    MOV byte [R13 + R12], 0
    JMP L10000367e_1292     ; inserted

; Entry 10000367e; block 1292; address 100007bea
L10000367e_1292:
    MOV qword [RBX + 104], R13
    MOV word [RBX + 46], R12W
    LEA R12, [rel L__DATA___common + 6336]
    JMP L10000367e_1281     ; inserted

; Entry 10000367e; block 1293; address 100007b67
L10000367e_1293:
    CMP dword [RBX + 136], 0
    JE L10000367e_1281
    JMP L10000367e_1280     ; inserted

; Entry 10000367e; block 1294; address 100007c12
L10000367e_1294:
    LEA RBX, [rel L__DATA___common + 604]
    JMP L10000367e_1270     ; inserted

; Entry 10000367e; block 1295; address 100007c26
L10000367e_1295:
    CMP qword [RBP + -256], 0
    JNE L10000367e_1298
    JMP L10000367e_1297     ; inserted

; Entry 10000367e; block 1296; address 100007e41
L10000367e_1296:
    LEA RAX, [rel L__DATA___common + 160]
    CMP dword [RAX], 0
    JE L10000367e_1342
    JMP L10000367e_1341     ; inserted

; Entry 10000367e; block 1297; address 100007c30
L10000367e_1297:
    MOV RAX, qword [rel ___stderrp]
    MOV RDI, qword [RAX]
    CALL _fileno
    JMP L10000367e_1299     ; inserted

; Entry 10000367e; block 1298; address 100007c54
L10000367e_1298:
    MOV EDI, 257
    CALL _malloc
    JMP L10000367e_1301     ; inserted

; Entry 10000367e; block 1299; address 100007c3f
L10000367e_1299:
    LEA RSI, [rel L__TEXT___cstring_6381]
    MOV EDI, EAX
    CALL _fdopen
    JMP L10000367e_1300     ; inserted

; Entry 10000367e; block 1300; address 100007c4d
L10000367e_1300:
    MOV qword [RBP + -256], RAX
    JMP L10000367e_1298     ; inserted

; Entry 10000367e; block 1301; address 100007c5e
L10000367e_1301:
    TEST RAX, RAX
    JE L10000367e_1277
    JMP L10000367e_1302     ; inserted

; Entry 10000367e; block 1302; address 100007c67
L10000367e_1302:
    MOV R15, RAX
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    LEA RBX, [rel L__DATA___common + 6352]
    JE L10000367e_1304
    JMP L10000367e_1303     ; inserted

; Entry 10000367e; block 1303; address 100007c7d
L10000367e_1303:
    CMP word [RBX], 0
    JE L10000367e_1304
    JMP L10000367e_1305     ; inserted

; Entry 10000367e; block 1304; address 100007cd1
L10000367e_1304:
    MOV EDI, 1
    CALL _malloc
    JMP L10000367e_1311     ; inserted

; Entry 10000367e; block 1305; address 100007c83
L10000367e_1305:
    MOV RSI, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_11447]
    CALL _fputs
    JMP L10000367e_1306     ; inserted

; Entry 10000367e; block 1306; address 100007c93
L10000367e_1306:
    LEA R14, [rel L__DATA___common + 632]
    MOV RDI, qword [R14]
    MOVZX EDX, word [RBX]
    MOV RCX, qword [R12]
    MOV ESI, 1
    CALL _fwrite
    JMP L10000367e_1307     ; inserted

; Entry 10000367e; block 1307; address 100007cae
L10000367e_1307:
    MOV RDI, qword [R14]
    MOVZX EAX, word [RBX]
    CMP byte [RAX + RDI-1], 10
    JE L10000367e_1309
    JMP L10000367e_1308     ; inserted

; Entry 10000367e; block 1308; address 100007cbb
L10000367e_1308:
    MOV RSI, qword [R12]
    MOV EDI, 10
    CALL _putc
    JMP L10000367e_1310     ; inserted

; Entry 10000367e; block 1309; address 100007ccc
L10000367e_1309:
    CALL _free
    JMP L10000367e_1304     ; inserted

; Entry 10000367e; block 1310; address 100007cc9
L10000367e_1310:
    MOV RDI, qword [R14]
    JMP L10000367e_1309     ; inserted

; Entry 10000367e; block 1311; address 100007cdb
L10000367e_1311:
    LEA R13, [rel L__DATA___common + 632]
    MOV qword [R13], RAX
    TEST RAX, RAX
    JE L10000367e_1313
    JMP L10000367e_1312     ; inserted

; Entry 10000367e; block 1312; address 100007cef
L10000367e_1312:
    MOV byte [RAX], 0
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000367e_1315
    JMP L10000367e_1314     ; inserted

; Entry 10000367e; block 1313; address 100008854
L10000367e_1313:
    LEA RSI, [rel L__TEXT___cstring_11477]
    JMP L10000367e_1431     ; inserted

; Entry 10000367e; block 1314; address 100007cfe
L10000367e_1314:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RAX]
    LEA RDI, [rel L__TEXT___cstring_11506]
    CALL _fputs
    JMP L10000367e_1315     ; inserted

; Entry 10000367e; block 1315; address 100007d14
L10000367e_1315:
    MOV RDI, R15
    MOV ESI, 257
    MOV RDX, qword [RBP + -256]
    CALL _fgets
    JMP L10000367e_1316     ; inserted

; Entry 10000367e; block 1316; address 100007d28
L10000367e_1316:
    TEST RAX, RAX
    JE L10000367e_1318
    JMP L10000367e_1317     ; inserted

; Entry 10000367e; block 1317; address 100007d31
L10000367e_1317:
    LEA R14, [rel L__TEXT___cstring_11548]
    JMP L10000367e_1338     ; inserted

; Entry 10000367e; block 1318; address 100007e18
L10000367e_1318:
    MOV RDI, R15
    CALL _free
    JMP L10000367e_1339     ; inserted

; Entry 10000367e; block 1319; address 100007d43
L10000367e_1319:
    TEST EAX, EAX
    JE L10000367e_1318
    JMP L10000367e_1320     ; inserted

; Entry 10000367e; block 1320; address 100007d4b
L10000367e_1320:
    MOV RDI, R15
    CALL _strlen
    JMP L10000367e_1321     ; inserted

; Entry 10000367e; block 1321; address 100007d53
L10000367e_1321:
    MOV RBX, RAX
    DEC EAX
    CDQE 
    CMP byte [R15 + RAX], 10
    JNE L10000367e_1323
    JMP L10000367e_1322     ; inserted

; Entry 10000367e; block 1322; address 100007d61
L10000367e_1322:
    MOVSXD RBX, EBX
    MOV byte [R15 + RBX-1], 0
    DEC RBX
    JMP L10000367e_1323     ; inserted

; Entry 10000367e; block 1323; address 100007d6d
L10000367e_1323:
    MOV R12, qword [R13]
    CMP byte [R12], 0
    JE L10000367e_1325
    JMP L10000367e_1324     ; inserted

; Entry 10000367e; block 1324; address 100007d78
L10000367e_1324:
    MOV RDI, R12
    CALL _strlen
    JMP L10000367e_1326     ; inserted

; Entry 10000367e; block 1325; address 100007d86
L10000367e_1325:
    MOV EAX, 1
    JMP L10000367e_1327     ; inserted

; Entry 10000367e; block 1326; address 100007d80
L10000367e_1326:
    ADD RAX, 3
    JMP L10000367e_1327

; Entry 10000367e; block 1327; address 100007d8b
L10000367e_1327:
    MOVSXD RDI, EBX
    ADD RDI, RAX
    CALL _malloc
    JMP L10000367e_1328     ; inserted

; Entry 10000367e; block 1328; address 100007d96
L10000367e_1328:
    TEST RAX, RAX
    JE L10000367e_1289
    JMP L10000367e_1329     ; inserted

; Entry 10000367e; block 1329; address 100007d9f
L10000367e_1329:
    MOV RBX, RAX
    CMP byte [R12], 0
    JE L10000367e_1331
    JMP L10000367e_1330     ; inserted

; Entry 10000367e; block 1330; address 100007da9
L10000367e_1330:
    MOV RDI, RBX
    MOV RSI, R12
    CALL _strcpy
    JMP L10000367e_1332     ; inserted

; Entry 10000367e; block 1331; address 100007dd4
L10000367e_1331:
    CMP byte [R15], 0
    MOV RSI, R15
    LEA RAX, [rel L__TEXT___cstring_11551]
    CMOVE RSI, RAX
    MOV RDI, RBX
    CALL _strcpy
    JMP L10000367e_1335     ; inserted

; Entry 10000367e; block 1332; address 100007db4
L10000367e_1332:
    MOV RDI, RBX
    CALL _strlen
    JMP L10000367e_1333     ; inserted

; Entry 10000367e; block 1333; address 100007dbc
L10000367e_1333:
    MOV word [RBX + RAX], 2573
    MOV byte [RBX + RAX + 2], 0
    MOV RDI, RBX
    MOV RSI, R15
    CALL _strcat
    JMP L10000367e_1334     ; inserted

; Entry 10000367e; block 1334; address 100007dd2
L10000367e_1334:
    JMP L10000367e_1335

; Entry 10000367e; block 1335; address 100007dee
L10000367e_1335:
    MOV RDI, qword [R13]
    CALL _free
    JMP L10000367e_1336     ; inserted

; Entry 10000367e; block 1336; address 100007df7
L10000367e_1336:
    MOV qword [R13], RBX
    MOV RDI, R15
    MOV ESI, 257
    MOV RDX, qword [RBP + -256]
    CALL _fgets
    JMP L10000367e_1337     ; inserted

; Entry 10000367e; block 1337; address 100007e0f
L10000367e_1337:
    TEST RAX, RAX
    JNE L10000367e_1338
    JMP L10000367e_1318     ; inserted

; Entry 10000367e; block 1338; address 100007d38
L10000367e_1338:
    MOV RDI, R15
    MOV RSI, R14
    CALL _strcmp
    JMP L10000367e_1319     ; inserted

; Entry 10000367e; block 1339; address 100007e20
L10000367e_1339:
    MOV RDI, qword [R13]
    CALL _strlen
    JMP L10000367e_1340     ; inserted

; Entry 10000367e; block 1340; address 100007e29
L10000367e_1340:
    LEA RCX, [rel L__DATA___common + 6352]
    MOV word [RCX], AX
    LEA R12, [rel L__DATA___common + 6336]
    LEA RBX, [rel L__DATA___common + 604]
    JMP L10000367e_1296     ; inserted

; Entry 10000367e; block 1341; address 100007e4d
L10000367e_1341:
    MOV RSI, qword [R12]
    MOV EDI, 10
    CALL _putc
    JMP L10000367e_1343     ; inserted

; Entry 10000367e; block 1342; address 100007e61
L10000367e_1342:
    CMP dword [RBP + -164], 0
    JE L10000367e_1345
    JMP L10000367e_1344     ; inserted

; Entry 10000367e; block 1343; address 100007e5b
L10000367e_1343:
    MOV dword [RBX], 0
    JMP L10000367e_1342     ; inserted

; Entry 10000367e; block 1344; address 100007e6a
L10000367e_1344:
    MOV RCX, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_11554]
    MOV ESI, 30
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1346     ; inserted

; Entry 10000367e; block 1345; address 100007e8d
L10000367e_1345:
    LEA RAX, [rel L__DATA___common + 6344]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -264], RAX
    LEA RAX, [rel L__DATA___common + 616]
    MOV RBX, qword [RAX]
    XOR R12D, R12D
    TEST RBX, RBX
    JE L10000367e_1348
    JMP L10000367e_1347     ; inserted

; Entry 10000367e; block 1346; address 100007e84
L10000367e_1346:
    MOV RDI, qword [R12]
    CALL _fflush
    JMP L10000367e_1345     ; inserted

; Entry 10000367e; block 1347; address 100007eb0
L10000367e_1347:
    XOR R15D, R15D
    XOR R13D, R13D
    JMP L10000367e_1355     ; inserted

; Entry 10000367e; block 1348; address 100007f29
L10000367e_1348:
    XOR R13D, R13D
    JMP L10000367e_1359     ; inserted

; Entry 10000367e; block 1349; address 100007ebf
L10000367e_1349:
    MOV RDI, RBX
    CALL L10000d930_0
    JMP L10000367e_1351     ; inserted

; Entry 10000367e; block 1350; address 100007f02
L10000367e_1350:
    LEA RAX, [rel L__DATA___common + 68]
    MOV EAX, dword [RAX]
    LEA RCX, [rel L__DATA___common + 272]
    OR EAX, dword [RCX]
    JE L10000367e_1349
    JMP L10000367e_1354     ; inserted

; Entry 10000367e; block 1351; address 100007ec7
L10000367e_1351:
    TEST EAX, EAX
    JNE L10000367e_1353
    JMP L10000367e_1352     ; inserted

; Entry 10000367e; block 1352; address 100007ecf
L10000367e_1352:
    MOVZX EAX, word [RBX + 40]
    MOVZX ECX, word [RBX + 44]
    ADD RCX, RAX
    MOVZX EAX, word [RBX + 46]
    ADD RAX, RCX
    LEA RDX, [rel L__DATA___common + 6344]
    MOV RCX, qword [RDX]
    ADD RAX, RCX
    ADD RAX, 46
    MOV qword [RDX], RAX
    ADD R13, qword [RBX + 32]
    ADD R12, qword [RBX + 24]
    INC R15
    JMP L10000367e_1354

; Entry 10000367e; block 1353; address 100008400
L10000367e_1353:
    LEA RCX, [rel L__DATA___common + 384]
    JMP L10000367e_1429

; Entry 10000367e; block 1354; address 100007f16
L10000367e_1354:
    MOV RBX, qword [RBX + 152]
    TEST RBX, RBX
    JNE L10000367e_1355
    JMP L10000367e_1356     ; inserted

; Entry 10000367e; block 1355; address 100007eb6
L10000367e_1355:
    CMP dword [RBX + 136], 0
    JE L10000367e_1350
    JMP L10000367e_1349     ; inserted

; Entry 10000367e; block 1356; address 100007f22
L10000367e_1356:
    TEST R15, R15
    JNE L10000367e_1358
    JMP L10000367e_1357     ; inserted

; Entry 10000367e; block 1357; address 100007f27
L10000367e_1357:
    JMP L10000367e_1359

; Entry 10000367e; block 1358; address 100007f42
L10000367e_1358:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    JE L10000367e_1362
    JMP L10000367e_1361     ; inserted

; Entry 10000367e; block 1359; address 100007f2c
L10000367e_1359:
    LEA RDI, [rel L__TEXT___cstring_9961]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000367e_1360     ; inserted

; Entry 10000367e; block 1360; address 100007f3f
L10000367e_1360:
    XOR R15D, R15D
    JMP L10000367e_1358     ; inserted

; Entry 10000367e; block 1361; address 100007f4e
L10000367e_1361:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -240], RAX
    LEA RBX, [rel L__TEXT___cstring_7043]
    MOV RDI, R13
    XOR ESI, ESI
    MOV RDX, RBX
    CALL L100015a80_0
    JMP L10000367e_1363     ; inserted

; Entry 10000367e; block 1362; address 100007fbe
L10000367e_1362:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L10000367e_1368
    JMP L10000367e_1367     ; inserted

; Entry 10000367e; block 1363; address 100007f73
L10000367e_1363:
    MOV R14, RAX
    MOV RDI, R12
    XOR ESI, ESI
    MOV RDX, RBX
    CALL L100015a80_0
    JMP L10000367e_1364     ; inserted

; Entry 10000367e; block 1364; address 100007f83
L10000367e_1364:
    MOV RBX, RAX
    MOV RDI, R13
    MOV RSI, R12
    CALL L10000f787_0
    JMP L10000367e_1365     ; inserted

; Entry 10000367e; block 1365; address 100007f91
L10000367e_1365:
    LEA RSI, [rel L__TEXT___cstring_11585]
    MOV RDI, qword [RBP + -240]
    MOV RDX, R14
    MOV RCX, RBX
    MOV R8D, EAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1366     ; inserted

; Entry 10000367e; block 1366; address 100007faf
L10000367e_1366:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    CALL _fflush
    JMP L10000367e_1362     ; inserted

; Entry 10000367e; block 1367; address 100007fca
L10000367e_1367:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -240], RAX
    LEA RBX, [rel L__TEXT___cstring_7043]
    MOV RDI, R13
    XOR ESI, ESI
    MOV RDX, RBX
    CALL L100015a80_0
    JMP L10000367e_1369     ; inserted

; Entry 10000367e; block 1368; address 10000803a
L10000367e_1368:
    LEA RAX, [rel L__DATA___common + 6344]
    MOV RBX, qword [RAX]
    MOV R14, qword [RBP + -264]
    SUB RBX, R14
    CMP dword [RBP + -164], 0
    LEA R12, [rel L__DATA___common + 6336]
    JE L10000367e_1374
    JMP L10000367e_1373     ; inserted

; Entry 10000367e; block 1369; address 100007fef
L10000367e_1369:
    MOV R14, RAX
    MOV RDI, R12
    XOR ESI, ESI
    MOV RDX, RBX
    CALL L100015a80_0
    JMP L10000367e_1370     ; inserted

; Entry 10000367e; block 1370; address 100007fff
L10000367e_1370:
    MOV RBX, RAX
    MOV RDI, R13
    MOV RSI, R12
    CALL L10000f787_0
    JMP L10000367e_1371     ; inserted

; Entry 10000367e; block 1371; address 10000800d
L10000367e_1371:
    LEA RSI, [rel L__TEXT___cstring_11585]
    MOV RDI, qword [RBP + -240]
    MOV RDX, R14
    MOV RCX, RBX
    MOV R8D, EAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1372     ; inserted

; Entry 10000367e; block 1372; address 10000802b
L10000367e_1372:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RDI, qword [RAX]
    CALL _fflush
    JMP L10000367e_1368     ; inserted

; Entry 10000367e; block 1373; address 10000805e
L10000367e_1373:
    MOV RCX, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_11632]
    MOV ESI, 37
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1375     ; inserted

; Entry 10000367e; block 1374; address 100008081
L10000367e_1374:
    LEA RAX, [rel L__DATA___common + 6352]
    MOVZX ECX, word [RAX]
    LEA RAX, [rel L__DATA___common + 632]
    MOV R8, qword [RAX]
    MOV RDI, R15
    MOV RSI, RBX
    MOV RDX, R14
    CALL L10000de58_0
    JMP L10000367e_1376     ; inserted

; Entry 10000367e; block 1375; address 100008078
L10000367e_1375:
    MOV RDI, qword [R12]
    CALL _fflush
    JMP L10000367e_1374     ; inserted

; Entry 10000367e; block 1376; address 1000080a3
L10000367e_1376:
    TEST EAX, EAX
    LEA RBX, [rel L__DATA___common + 392]
    JNE L10000367e_1353
    JMP L10000367e_1377     ; inserted

; Entry 10000367e; block 1377; address 1000080b2
L10000367e_1377:
    MOV RDI, qword [RBX]
    CALL _fclose
    JMP L10000367e_1378     ; inserted

; Entry 10000367e; block 1378; address 1000080ba
L10000367e_1378:
    TEST EAX, EAX
    LEA R15, [rel L__DATA___common + 424]
    JNE L10000367e_1380
    JMP L10000367e_1379     ; inserted

; Entry 10000367e; block 1379; address 1000080c9
L10000367e_1379:
    MOV qword [RBX], 0
    LEA RBX, [rel L__DATA___common + 400]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L10000367e_1382
    JMP L10000367e_1381     ; inserted

; Entry 10000367e; block 1380; address 10000882b
L10000367e_1380:
    MOVZX EAX, byte [RBP + -180]
    LEA EDI, [RAX * 4 * 10]
    LEA RAX, [rel L__DATA___common + 384]
    JMP L10000367e_1467

; Entry 10000367e; block 1381; address 1000080df
L10000367e_1381:
    CALL _fclose
    JMP L10000367e_1383     ; inserted

; Entry 10000367e; block 1382; address 1000080eb
L10000367e_1382:
    CALL L100017374_0
    JMP L10000367e_1384     ; inserted

; Entry 10000367e; block 1383; address 1000080e4
L10000367e_1383:
    MOV qword [RBX], 0
    JMP L10000367e_1382     ; inserted

; Entry 10000367e; block 1384; address 1000080f0
L10000367e_1384:
    CMP byte [rel L__DATA___bss + 20], 1
    JNE L10000367e_1386
    JMP L10000367e_1385     ; inserted

; Entry 10000367e; block 1385; address 1000080f9
L10000367e_1385:
    LEA RAX, [rel L__DATA___common + 384]
    MOV RDI, qword [RAX]
    CALL L1000094ec_0
    JMP L10000367e_1386     ; inserted

; Entry 10000367e; block 1386; address 100008108
L10000367e_1386:
    LEA R14, [rel L__DATA___common + 6376]
    MOV RDI, qword [R14]
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L10000367e_1387     ; inserted

; Entry 10000367e; block 1387; address 10000811e
L10000367e_1387:
    TEST EAX, EAX
    SETE AL
    MOV ECX, dword [RBP + -180]
    OR CL, AL
    JNE L10000367e_1389
    JMP L10000367e_1388     ; inserted

; Entry 10000367e; block 1388; address 10000812d
L10000367e_1388:
    CMP dword [RBP + -164], 0
    JE L10000367e_1391
    JMP L10000367e_1390     ; inserted

; Entry 10000367e; block 1389; address 100008185
L10000367e_1389:
    LEA RAX, [rel L__DATA___common + 384]
    MOV qword [RAX], 0
    LEA RAX, [rel L__DATA___common + 432]
    MOV EBX, dword [RAX]
    TEST EBX, EBX
    JE L10000367e_1398
    JMP L10000367e_1397     ; inserted

; Entry 10000367e; block 1390; address 100008136
L10000367e_1390:
    MOV RCX, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_11670]
    MOV ESI, 27
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1392     ; inserted

; Entry 10000367e; block 1391; address 100008159
L10000367e_1391:
    MOV RDI, qword [R15]
    LEA R15, [rel L__DATA___common + 384]
    MOV RSI, qword [R15]
    CALL L100011614_0
    JMP L10000367e_1393     ; inserted

; Entry 10000367e; block 1392; address 100008150
L10000367e_1392:
    MOV RDI, qword [R12]
    CALL _fflush
    JMP L10000367e_1391     ; inserted

; Entry 10000367e; block 1393; address 10000816b
L10000367e_1393:
    MOV RSI, qword [R15]
    TEST EAX, EAX
    JNE L10000367e_1395
    JMP L10000367e_1394     ; inserted

; Entry 10000367e; block 1394; address 100008176
L10000367e_1394:
    MOV RDI, RSI
    CALL _free
    JMP L10000367e_1396     ; inserted

; Entry 10000367e; block 1395; address 100008865
L10000367e_1395:
    MOV EBX, EAX
    LEA RDI, [rel L__TEXT___cstring_4120]
    CALL L1000034f4_0
    JMP L10000367e_1461     ; inserted

; Entry 10000367e; block 1396; address 10000817e
L10000367e_1396:
    LEA R15, [rel L__DATA___common + 424]
    JMP L10000367e_1389     ; inserted

; Entry 10000367e; block 1397; address 1000081a0
L10000367e_1397:
    MOV RDI, qword [R14]
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L10000367e_1399     ; inserted

; Entry 10000367e; block 1398; address 1000081bd
L10000367e_1398:
    MOV RDI, qword [R14]
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L10000367e_1401     ; inserted

; Entry 10000367e; block 1399; address 1000081af
L10000367e_1399:
    TEST EAX, EAX
    JE L10000367e_1398
    JMP L10000367e_1400     ; inserted

; Entry 10000367e; block 1400; address 1000081b3
L10000367e_1400:
    MOV RDI, qword [R15]
    MOV ESI, EBX
    CALL L100011897_0
    JMP L10000367e_1398     ; inserted

; Entry 10000367e; block 1401; address 1000081cc
L10000367e_1401:
    TEST EAX, EAX
    JE L10000367e_1403
    JMP L10000367e_1402     ; inserted

; Entry 10000367e; block 1402; address 1000081d0
L10000367e_1402:
    CMP dword [RBP + -164], 0
    JE L10000367e_1403
    JMP L10000367e_1404     ; inserted

; Entry 10000367e; block 1403; address 1000081fc
L10000367e_1403:
    LEA R15, [rel L__DATA___common + 240]
    MOV RDI, qword [R15]
    TEST RDI, RDI
    JE L10000367e_1407
    JMP L10000367e_1406     ; inserted

; Entry 10000367e; block 1404; address 1000081d9
L10000367e_1404:
    MOV RCX, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_11698]
    MOV ESI, 22
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1405     ; inserted

; Entry 10000367e; block 1405; address 1000081f3
L10000367e_1405:
    MOV RDI, qword [R12]
    CALL _fflush
    JMP L10000367e_1403     ; inserted

; Entry 10000367e; block 1406; address 10000820f
L10000367e_1406:
    LEA RAX, [rel L__DATA___common + 192]
    MOV RDX, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_10012]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1408     ; inserted

; Entry 10000367e; block 1407; address 1000082d9
L10000367e_1407:
    MOV RDI, qword [RBP + -272]
    CALL _free
    JMP L10000367e_1420     ; inserted

; Entry 10000367e; block 1408; address 100008227
L10000367e_1408:
    LEA R14, [rel L__DATA___common + 208]
    MOV RSI, qword [R14]
    LEA RBX, [rel L__DATA___common + 224]
    MOV RCX, qword [R15]
    CMP RSI, qword [RBX]
    JNE L10000367e_1410
    JMP L10000367e_1409     ; inserted

; Entry 10000367e; block 1409; address 100008240
L10000367e_1409:
    MOV RDI, RCX
    JMP L10000367e_1414

; Entry 10000367e; block 1410; address 100008245
L10000367e_1410:
    LEA RDI, [rel L__TEXT___cstring_11721]
    MOV ESI, 8
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1411     ; inserted

; Entry 10000367e; block 1411; address 10000825b
L10000367e_1411:
    MOV RDI, qword [R15]
    MOV RSI, qword [RBX]
    CALL L100015c88_0
    JMP L10000367e_1412     ; inserted

; Entry 10000367e; block 1412; address 100008266
L10000367e_1412:
    MOV RCX, qword [R15]
    LEA RDI, [rel L__TEXT___cstring_11730]
    MOV ESI, 15
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1413     ; inserted

; Entry 10000367e; block 1413; address 10000827f
L10000367e_1413:
    MOV RDI, qword [R15]
    MOV RSI, qword [R14]
    JMP L10000367e_1414     ; inserted

; Entry 10000367e; block 1414; address 100008285
L10000367e_1414:
    CALL L100015c88_0
    JMP L10000367e_1415     ; inserted

; Entry 10000367e; block 1415; address 10000828a
L10000367e_1415:
    MOV RCX, qword [R15]
    LEA RDI, [rel L__TEXT___cstring_10033]
    MOV ESI, 7
    MOV EDX, 1
    CALL _fwrite
    JMP L10000367e_1416     ; inserted

; Entry 10000367e; block 1416; address 1000082a3
L10000367e_1416:
    LEA RBX, [RBP + -160]
    MOV RDI, RBX
    CALL _time
    JMP L10000367e_1417     ; inserted

; Entry 10000367e; block 1417; address 1000082b2
L10000367e_1417:
    MOV RDI, RBX
    CALL _localtime
    JMP L10000367e_1418     ; inserted

; Entry 10000367e; block 1418; address 1000082ba
L10000367e_1418:
    MOV RBX, qword [R15]
    MOV RDI, RAX
    CALL _asctime
    JMP L10000367e_1419     ; inserted

; Entry 10000367e; block 1419; address 1000082c5
L10000367e_1419:
    LEA RSI, [rel L__TEXT___cstring_10041]
    MOV RDI, RBX
    MOV RDX, RAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1407     ; inserted

; Entry 10000367e; block 1420; address 1000082e5
L10000367e_1420:
    MOV EAX, dword [RBP + -192]
    TEST EAX, EAX
    MOV EBX, 18
    CMOVE EBX, EAX
    MOV EDI, EBX
    JMP L10000367e_963

; Entry 10000367e; block 1421; address 10000830b
L10000367e_1421:
    JMP L10000367e_612

; Entry 10000367e; block 1422; address 10000835b
L10000367e_1422:
    MOV RAX, qword [RBP + -208]
    MOV RDX, qword [RAX]
    TEST RDX, RDX
    JE L10000367e_1424
    JMP L10000367e_1423     ; inserted

; Entry 10000367e; block 1423; address 10000836a
L10000367e_1423:
    MOV EBX, 8
    LEA R14, [rel L__TEXT___cstring_8467]
    JMP L10000367e_1426     ; inserted

; Entry 10000367e; block 1424; address 100008397
L10000367e_1424:
    MOV RSI, qword [R15]
    MOV EDI, 10
    CALL _fputc
    JMP L10000367e_1427     ; inserted

; Entry 10000367e; block 1425; address 100008383
L10000367e_1425:
    MOV RAX, qword [RBP + -208]
    MOV RDX, qword [RAX + RBX]
    ADD RBX, 8
    TEST RDX, RDX
    JNE L10000367e_1426
    JMP L10000367e_1424     ; inserted

; Entry 10000367e; block 1426; address 100008376
L10000367e_1426:
    MOV RDI, qword [R15]
    MOV RSI, R14
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000367e_1425     ; inserted

; Entry 10000367e; block 1427; address 1000083a4
L10000367e_1427:
    LEA RSI, [rel L__TEXT___cstring_6751]
    JMP L10000367e_1454     ; inserted

; Entry 10000367e; block 1428; address 1000083e6
L10000367e_1428:
    JMP L10000367e_1430

; Entry 10000367e; block 1429; address 1000084fc
L10000367e_1429:
    MOV RSI, qword [RCX]
    JMP L10000367e_1433     ; inserted

; Entry 10000367e; block 1430; address 100008411
L10000367e_1430:
    XOR EDI, EDI
    CALL _exit

; Entry 10000367e; block 1431; address 10000885b
L10000367e_1431:
    MOV EDI, 4
    CALL L100002e30_0

; Entry 10000367e; block 1432; address 100008493
L10000367e_1432:
    LEA RSI, [rel L__TEXT___cstring_8994]
    JMP L10000367e_406

; Entry 10000367e; block 1433; address 1000084ff
L10000367e_1433:
    MOV EDI, EAX
    CALL L100002e30_0

; Entry 10000367e; block 1434; address 10000850f
L10000367e_1434:
    LEA RSI, [rel L__TEXT___cstring_10258]
    JMP L10000367e_406

; Entry 10000367e; block 1435; address 1000085e7
L10000367e_1435:
    LEA RSI, [rel L__TEXT___cstring_10290]
    JMP L10000367e_1433

; Entry 10000367e; block 1436; address 10000871c
L10000367e_1436:
    MOV EDX, 5105
    MOV RDI, RBX
    XOR ESI, ESI
    JMP L10000367e_1451     ; inserted

; Entry 10000367e; block 1437; address 1000085bd
L10000367e_1437:
    MOV R8, qword [R15]
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_10899]
    MOV EDX, 5105
    MOV RDI, RBX
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000367e_1438     ; inserted

; Entry 10000367e; block 1438; address 1000085df
L10000367e_1438:
    MOV EDI, R14D
    JMP L10000367e_1441

; Entry 10000367e; block 1439; address 100008602
L10000367e_1439:
    MOV R8, qword [R15 + 128]
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_10914]
    MOV EDX, 5105
    MOV RDI, RBX
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000367e_1440     ; inserted

; Entry 10000367e; block 1440; address 100008628
L10000367e_1440:
    MOV EDI, R12D
    JMP L10000367e_1441

; Entry 10000367e; block 1441; address 100008732
L10000367e_1441:
    MOV RSI, RBX
    CALL L100002e30_0

; Entry 10000367e; block 1442; address 100008664
L10000367e_1442:
    TEST EAX, EAX
    JNE L10000367e_1444
    JMP L10000367e_1443     ; inserted

; Entry 10000367e; block 1443; address 10000866c
L10000367e_1443:
    LEA RDI, [rel L__TEXT___cstring_8004]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000367e_1445     ; inserted

; Entry 10000367e; block 1444; address 100008775
L10000367e_1444:
    LEA RSI, [rel L__TEXT___cstring_7967]
    MOV EDI, 19
    CALL L100002e30_0

; Entry 10000367e; block 1445; address 10000867f
L10000367e_1445:
    MOV RSI, qword [RBP + -176]
    LEA RDI, [rel L__TEXT___cstring_8052]
    CALL L1000034f4_0
    JMP L10000367e_1446     ; inserted

; Entry 10000367e; block 1446; address 100008692
L10000367e_1446:
    MOV RDI, qword [RBP + -176]
    CALL _free
    JMP L10000367e_1447     ; inserted

; Entry 10000367e; block 1447; address 10000869e
L10000367e_1447:
    LEA RSI, [rel L__TEXT___cstring_8088]
    JMP L10000367e_406

; Entry 10000367e; block 1448; address 1000086c4
L10000367e_1448:
    MOV RDI, qword [R12]
    CALL _free
    JMP L10000367e_1449     ; inserted

; Entry 10000367e; block 1449; address 1000086cd
L10000367e_1449:
    MOV qword [R12], 0
    JMP L10000367e_1463     ; inserted

; Entry 10000367e; block 1450; address 1000083d4
L10000367e_1450:
    MOV RSI, qword [RAX]
    JMP L10000367e_1453     ; inserted

; Entry 10000367e; block 1451; address 100008726
L10000367e_1451:
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000367e_1452     ; inserted

; Entry 10000367e; block 1452; address 10000872d
L10000367e_1452:
    MOV EDI, 16
    JMP L10000367e_1441     ; inserted

; Entry 10000367e; block 1453; address 1000083d7
L10000367e_1453:
    MOV EDI, 18
    CALL L100002e30_0

; Entry 10000367e; block 1454; address 1000083ab
L10000367e_1454:
    MOV EDI, 9
    CALL L100002e30_0

; Entry 10000367e; block 1455; address 1000087b3
L10000367e_1455:
    MOV EDX, 5105
    MOV RDI, RBX
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000367e_1456     ; inserted

; Entry 10000367e; block 1456; address 1000087c4
L10000367e_1456:
    MOV RDI, qword [RBP + -176]
    CALL _free
    JMP L10000367e_1457     ; inserted

; Entry 10000367e; block 1457; address 1000087d0
L10000367e_1457:
    JMP L10000367e_1452

; Entry 10000367e; block 1458; address 1000087e6
L10000367e_1458:
    MOV R8, qword [R15 + 80]
    LEA R14, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_10899]
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000367e_1459     ; inserted

; Entry 10000367e; block 1459; address 100008809
L10000367e_1459:
    MOV EDI, EBX
    MOV RSI, R14
    CALL L100002e30_0

; Entry 10000367e; block 1460; address 1000084eb
L10000367e_1460:
    MOV EDI, 10
    CALL L100002e30_0

; Entry 10000367e; block 1461; address 100008873
L10000367e_1461:
    MOV RDI, qword [R15]
    CALL _free
    JMP L10000367e_1462     ; inserted

; Entry 10000367e; block 1462; address 10000887b
L10000367e_1462:
    MOV qword [R15], 0
    JMP L10000367e_1463

; Entry 10000367e; block 1463; address 1000086d5
L10000367e_1463:
    LEA RSI, [rel L__TEXT___cstring_9976]
    MOV EDI, EBX
    CALL L100002e30_0

; Entry 10000367e; block 1464; address 1000088b9
L10000367e_1464:
    LEA RDI, [rel L__TEXT___cstring_11077]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000367e_1465     ; inserted

; Entry 10000367e; block 1465; address 1000088cc
L10000367e_1465:
    MOV RDI, qword [RBP + -216]
    JMP L10000367e_1441

; Entry 10000367e; block 1466; address 10000890b
L10000367e_1466:
    XOR ECX, ECX
    TEST EAX, EAX
    SETNE CL
    LEA EDI, [RCX + RCX * 8]
    ADD EDI, 2
    LEA RAX, [rel L__DATA___common + 6376]
    JMP L10000367e_1467     ; inserted

; Entry 10000367e; block 1467; address 10000891f
L10000367e_1467:
    MOV RSI, qword [RAX]
    CALL L100002e30_0

; Entry 10000367e; block 1468; address 10000892c
L10000367e_1468:
    CMP byte [rel L__DATA___bss + 12], 0
    JNE L10000367e_1471
    JMP L10000367e_1470     ; inserted

; Entry 10000367e; block 1469; address 10000895e
L10000367e_1469:
    CMP dword [RBP + -196], 0
    JLE L10000367e_1474
    JMP L10000367e_1473     ; inserted

; Entry 10000367e; block 1470; address 100008939
L10000367e_1470:
    TEST byte [rel L__DATA___bss + 16], 1
    JNE L10000367e_1471
    JMP L10000367e_1472     ; inserted

; Entry 10000367e; block 1471; address 100008aa7
L10000367e_1471:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RSI, qword [RAX]
    JMP L10000367e_841     ; inserted

; Entry 10000367e; block 1472; address 100008946
L10000367e_1472:
    LEA RAX, [rel L__DATA___common + 72]
    MOV EAX, dword [RAX]
    LEA RCX, [rel L__DATA___common + 64]
    OR EAX, dword [RCX]
    JNE L10000367e_1471
    JMP L10000367e_1469     ; inserted

; Entry 10000367e; block 1473; address 10000896b
L10000367e_1473:
    LEA RAX, [rel L__DATA___common + 48]
    CMP dword [RAX], 0
    JE L10000367e_1474
    JMP L10000367e_1475     ; inserted

; Entry 10000367e; block 1474; address 100008a93
L10000367e_1474:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RSI, qword [RAX]
    JMP L10000367e_1490     ; inserted

; Entry 10000367e; block 1475; address 10000897b
L10000367e_1475:
    LEA RAX, [rel L__DATA___common + 656]
    CMP dword [RAX], 0
    JNE L10000367e_1474
    JMP L10000367e_1476     ; inserted

; Entry 10000367e; block 1476; address 10000898b
L10000367e_1476:
    LEA RAX, [rel L__DATA___common + 1216]
    MOV RCX, 8100139683641127540
    MOV qword [RAX], RCX
    MOV byte [RAX + 8], 0
    CMP dword [RBP + -196], 2
    JL L10000367e_1478
    JMP L10000367e_1477     ; inserted

; Entry 10000367e; block 1477; address 1000089ac
L10000367e_1477:
    MOV R12D, dword [RBP + -196]
    MOV EBX, 1
    LEA R14, [rel L__DATA___common + 1216]
    LEA R15, [rel L__TEXT___cstring_10349]
    JMP L10000367e_1481     ; inserted

; Entry 10000367e; block 1478; address 1000089f1
L10000367e_1478:
    LEA RDI, [rel L__DATA___common + 1216]
    LEA RSI, [rel L__TEXT___cstring_10561]
    MOV EDX, 5105
    CALL ___strcat_chk
    JMP L10000367e_1482     ; inserted

; Entry 10000367e; block 1479; address 1000089d6
L10000367e_1479:
    MOV RCX, qword [RBP + -208]
    MOV RSI, qword [RCX + RBX * 8]
    MOV RDI, RAX
    CALL _strcat
    JMP L10000367e_1480     ; inserted

; Entry 10000367e; block 1480; address 1000089e9
L10000367e_1480:
    INC RBX
    CMP R12, RBX
    JNE L10000367e_1481
    JMP L10000367e_1478     ; inserted

; Entry 10000367e; block 1481; address 1000089c6
L10000367e_1481:
    MOV EDX, 5105
    MOV RDI, R14
    MOV RSI, R15
    CALL ___strcat_chk
    JMP L10000367e_1479     ; inserted

; Entry 10000367e; block 1482; address 100008a09
L10000367e_1482:
    MOV EAX, dword [RBP + -196]
    CMP EAX, dword [RBP + -280]
    JGE L10000367e_1484
    JMP L10000367e_1483     ; inserted

; Entry 10000367e; block 1483; address 100008a17
L10000367e_1483:
    MOVSXD RBX, dword [RBP + -196]
    LEA R14, [rel L__DATA___common + 1216]
    LEA R15, [rel L__TEXT___cstring_10349]
    JMP L10000367e_1487     ; inserted

; Entry 10000367e; block 1484; address 100008a5e
L10000367e_1484:
    LEA RSI, [rel L__DATA___common + 1216]
    JMP L10000367e_1490

; Entry 10000367e; block 1485; address 100008a3c
L10000367e_1485:
    MOV RCX, qword [RBP + -208]
    MOV RSI, qword [RCX + RBX * 8]
    MOV RDI, RAX
    CALL _strcat
    JMP L10000367e_1486     ; inserted

; Entry 10000367e; block 1486; address 100008a4f
L10000367e_1486:
    INC RBX
    MOVSXD RAX, dword [RBP + -280]
    CMP RBX, RAX
    JL L10000367e_1487
    JMP L10000367e_1484     ; inserted

; Entry 10000367e; block 1487; address 100008a2c
L10000367e_1487:
    MOV EDX, 5105
    MOV RDI, R14
    MOV RSI, R15
    CALL ___strcat_chk
    JMP L10000367e_1485     ; inserted

; Entry 10000367e; block 1488; address 100008a79
L10000367e_1488:
    LEA RCX, [rel L__DATA___common + 384]
    MOV qword [RBP + -336], RCX
    JMP L10000367e_1489     ; inserted

; Entry 10000367e; block 1489; address 100008a87
L10000367e_1489:
    MOV RCX, qword [RBP + -336]
    JMP L10000367e_1429

; Entry 10000367e; block 1490; address 100008a9d
L10000367e_1490:
    MOV EDI, 12
    CALL L100002e30_0



; ---------------------
; Function: 0x100008cec
; ---------------------
; Entry 100008cec; block 0; address 100008cec
L100008cec_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    MOV RDI, qword [rel L__DATA___data + 16]
    LEA RSI, [rel L__TEXT___cstring_13083]
    XOR EAX, EAX
    CALL _printf
    JMP L100008cec_1     ; inserted

; Entry 100008cec; block 1; address 100008d0c
L100008cec_1:
    MOV EDI, 10
    CALL _putchar
    JMP L100008cec_2     ; inserted

; Entry 100008cec; block 2; address 100008d16
L100008cec_2:
    LEA R15, [rel L__DATA_CONST___const + 0]
    LEA R14, [rel L__TEXT___cstring_13087]
    LEA R12, [rel L__TEXT___cstring_13091]
    XOR EBX, EBX
    JMP L100008cec_5     ; inserted

; Entry 100008cec; block 3; address 100008d3e
L100008cec_3:
    MOV EDI, 10
    CALL _putchar
    JMP L100008cec_4     ; inserted

; Entry 100008cec; block 4; address 100008d48
L100008cec_4:
    ADD RBX, 8
    CMP RBX, 168
    JNE L100008cec_5
    JMP L100008cec_6     ; inserted

; Entry 100008cec; block 5; address 100008d2d
L100008cec_5:
    MOV RDI, qword [RBX + R15]
    MOV RSI, R14
    MOV RDX, R12
    XOR EAX, EAX
    CALL _printf
    JMP L100008cec_3     ; inserted

; Entry 100008cec; block 6; address 100008d55
L100008cec_6:
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x100008d5e
; ---------------------
; Entry 100008d5e; block 0; address 100008d5e
L100008d5e_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    MOV RDI, qword [rel L__DATA___data + 16]
    LEA RSI, [rel L__TEXT___cstring_13083]
    XOR EAX, EAX
    CALL _printf
    JMP L100008d5e_1     ; inserted

; Entry 100008d5e; block 1; address 100008d81
L100008d5e_1:
    MOV EDI, 10
    CALL _putchar
    JMP L100008d5e_2     ; inserted

; Entry 100008d5e; block 2; address 100008d8b
L100008d5e_2:
    LEA R12, [rel L__DATA___data + 32]
    LEA R14, [rel L__TEXT___cstring_13473]
    LEA R15, [rel L__TEXT___cstring_13087]
    LEA R13, [rel L__TEXT___cstring_13091]
    XOR EBX, EBX
    JMP L100008d5e_5     ; inserted

; Entry 100008d5e; block 3; address 100008dbd
L100008d5e_3:
    MOV EDI, 10
    CALL _putchar
    JMP L100008d5e_4     ; inserted

; Entry 100008d5e; block 4; address 100008dc7
L100008d5e_4:
    ADD RBX, 8
    CMP RBX, 56
    JNE L100008d5e_5
    JMP L100008d5e_6     ; inserted

; Entry 100008d5e; block 5; address 100008da9
L100008d5e_5:
    MOV RDI, qword [RBX + R12]
    MOV RSI, R14
    MOV RDX, R15
    MOV RCX, R13
    XOR EAX, EAX
    CALL _printf
    JMP L100008d5e_3     ; inserted

; Entry 100008d5e; block 6; address 100008dd1
L100008d5e_6:
    CALL L100016ead_0
    JMP L100008d5e_7     ; inserted

; Entry 100008d5e; block 7; address 100008dd6
L100008d5e_7:
    LEA RDI, [rel L__TEXT___cstring_13477]
    CALL _puts
    JMP L100008d5e_8     ; inserted

; Entry 100008d5e; block 8; address 100008de2
L100008d5e_8:
    LEA R14, [rel L__DATA_CONST___const + 176]
    LEA R15, [rel L__TEXT___cstring_13510]
    XOR EBX, EBX
    JMP L100008d5e_10     ; inserted

; Entry 100008d5e; block 9; address 100008e00
L100008d5e_9:
    ADD RBX, 8
    CMP RBX, 48
    JNE L100008d5e_10
    JMP L100008d5e_11     ; inserted

; Entry 100008d5e; block 10; address 100008df2
L100008d5e_10:
    MOV RSI, qword [RBX + R14]
    MOV RDI, R15
    XOR EAX, EAX
    CALL _printf
    JMP L100008d5e_9     ; inserted

; Entry 100008d5e; block 11; address 100008e0a
L100008d5e_11:
    LEA RDI, [rel L__TEXT___cstring_13515]
    LEA RCX, [rel L__TEXT___cstring_244]
    LEA R8, [rel L__TEXT___cstring_13575]
    XOR EBX, EBX
    MOV ESI, 2
    MOV EDX, 91
    XOR EAX, EAX
    CALL _printf
    JMP L100008d5e_12     ; inserted

; Entry 100008d5e; block 12; address 100008e32
L100008d5e_12:
    LEA R14, [rel L__DATA___data + 96]
    JMP L100008d5e_14     ; inserted

; Entry 100008d5e; block 13; address 100008e42
L100008d5e_13:
    ADD RBX, 8
    CMP RBX, 56
    JNE L100008d5e_14
    JMP L100008d5e_15     ; inserted

; Entry 100008d5e; block 14; address 100008e39
L100008d5e_14:
    MOV RDI, qword [RBX + R14]
    CALL _puts
    JMP L100008d5e_13     ; inserted

; Entry 100008d5e; block 15; address 100008e4c
L100008d5e_15:
    LEA RDI, [rel L__TEXT___cstring_13587]
    CALL _puts
    JMP L100008d5e_16     ; inserted

; Entry 100008d5e; block 16; address 100008e58
L100008d5e_16:
    MOV R15B, 1
    XOR EAX, EAX
    LEA R12, [rel L__DATA_CONST___const + 240]
    LEA R13, [rel L__TEXT___cstring_13624]
    LEA R14, [rel L__TEXT___cstring_13613]
    JMP L100008d5e_22     ; inserted

; Entry 100008d5e; block 17; address 100008e7e
L100008d5e_17:
    MOV RDX, R13
    TEST RAX, RAX
    JE L100008d5e_19
    JMP L100008d5e_18     ; inserted

; Entry 100008d5e; block 18; address 100008e86
L100008d5e_18:
    CMP byte [RAX], 0
    MOV RDX, R13
    JE L100008d5e_19
    JMP L100008d5e_20     ; inserted

; Entry 100008d5e; block 19; address 100008e91
L100008d5e_19:
    MOV RDI, R14
    MOV RSI, RBX
    XOR EAX, EAX
    CALL _printf
    JMP L100008d5e_21     ; inserted

; Entry 100008d5e; block 20; address 100008e8e
L100008d5e_20:
    MOV RDX, RAX
    JMP L100008d5e_19     ; inserted

; Entry 100008d5e; block 21; address 100008e9e
L100008d5e_21:
    MOV EAX, 1
    TEST R15B, 1
    MOV R15D, 0
    JNE L100008d5e_22
    JMP L100008d5e_23     ; inserted

; Entry 100008d5e; block 22; address 100008e72
L100008d5e_22:
    MOV RBX, qword [R12 + RAX * 8]
    MOV RDI, RBX
    CALL _getenv
    JMP L100008d5e_17     ; inserted

; Entry 100008d5e; block 23; address 100008eaf
L100008d5e_23:
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x100008eec
; ---------------------
; Entry 100008eec; block 0; address 100008eec
L100008eec_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 40
    MOV R15D, EDI
    LEA R14, [rel L__DATA___common + 6376]
    CMP byte [rel L__DATA___bss + 16], 1
    JNE L100008eec_2
    JMP L100008eec_1     ; inserted

; Entry 100008eec; block 1; address 100008f14
L100008eec_1:
    MOV RDI, qword [R14]
    TEST RDI, RDI
    JE L100008eec_2
    JMP L100008eec_3     ; inserted

; Entry 100008eec; block 2; address 100008fcf
L100008eec_2:
    LEA RBX, [rel L__DATA___common + 320]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L100008eec_22
    JMP L100008eec_21     ; inserted

; Entry 100008eec; block 3; address 100008f20
L100008eec_3:
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L100008eec_4     ; inserted

; Entry 100008eec; block 4; address 100008f2c
L100008eec_4:
    TEST EAX, EAX
    JE L100008eec_2
    JMP L100008eec_5     ; inserted

; Entry 100008eec; block 5; address 100008f34
L100008eec_5:
    LEA RAX, [rel L__DATA___common + 616]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L100008eec_7
    JMP L100008eec_6     ; inserted

; Entry 100008eec; block 6; address 100008f43
L100008eec_6:
    MOV dword [RBP + -44], R15D
    LEA R12, [RBP + -64]
    XOR R15D, R15D
    LEA R13, [RBP + -72]
    JMP L100008eec_14     ; inserted

; Entry 100008eec; block 7; address 100008fa3
L100008eec_7:
    LEA RDI, [rel L__TEXT___cstring_13640]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L100008eec_19     ; inserted

; Entry 100008eec; block 8; address 100008f61
L100008eec_8:
    MOV RDI, RBX
    MOV RSI, R13
    CALL L10000ed53_0
    JMP L100008eec_10     ; inserted

; Entry 100008eec; block 9; address 100008f85
L100008eec_9:
    MOV RBX, qword [RBX + 152]
    TEST RBX, RBX
    JNE L100008eec_14
    JMP L100008eec_15     ; inserted

; Entry 100008eec; block 10; address 100008f6c
L100008eec_10:
    TEST AL, 1
    JNE L100008eec_12
    JMP L100008eec_11     ; inserted

; Entry 100008eec; block 11; address 100008f70
L100008eec_11:
    MOV RAX, qword [RBX + 8]
    JMP L100008eec_13

; Entry 100008eec; block 12; address 100008f76
L100008eec_12:
    MOV RDI, R12
    CALL L1000114d4_0
    JMP L100008eec_13     ; inserted

; Entry 100008eec; block 13; address 100008f7e
L100008eec_13:
    CMP R15, RAX
    CMOVB R15, RAX
    JMP L100008eec_9     ; inserted

; Entry 100008eec; block 14; address 100008f52
L100008eec_14:
    MOV RAX, qword [RBX + 112]
    MOVZX ECX, word [RBX + 40]
    CMP byte [RCX + RAX-1], 47
    JE L100008eec_9
    JMP L100008eec_8     ; inserted

; Entry 100008eec; block 15; address 100008f91
L100008eec_15:
    TEST R15, R15
    JE L100008eec_17
    JMP L100008eec_16     ; inserted

; Entry 100008eec; block 16; address 100008f96
L100008eec_16:
    MOV RDI, qword [R14]
    MOV RSI, R15
    CALL L10001697d_0
    JMP L100008eec_18     ; inserted

; Entry 100008eec; block 17; address 100008fb8
L100008eec_17:
    LEA RDI, [rel L__TEXT___cstring_13696]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L100008eec_20     ; inserted

; Entry 100008eec; block 18; address 100008fa1
L100008eec_18:
    JMP L100008eec_20

; Entry 100008eec; block 19; address 100008fb6
L100008eec_19:
    JMP L100008eec_2

; Entry 100008eec; block 20; address 100008fcb
L100008eec_20:
    MOV R15D, dword [RBP + -44]
    JMP L100008eec_2     ; inserted

; Entry 100008eec; block 21; address 100008fde
L100008eec_21:
    CALL _free
    JMP L100008eec_23     ; inserted

; Entry 100008eec; block 22; address 100008fea
L100008eec_22:
    MOV RDI, qword [R14]
    TEST RDI, RDI
    JE L100008eec_25
    JMP L100008eec_24     ; inserted

; Entry 100008eec; block 23; address 100008fe3
L100008eec_23:
    MOV qword [RBX], 0
    JMP L100008eec_22     ; inserted

; Entry 100008eec; block 24; address 100008ff2
L100008eec_24:
    CALL _free
    JMP L100008eec_26     ; inserted

; Entry 100008eec; block 25; address 100008ffe
L100008eec_25:
    LEA RBX, [rel L__DATA___common + 400]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L100008eec_28
    JMP L100008eec_27     ; inserted

; Entry 100008eec; block 26; address 100008ff7
L100008eec_26:
    MOV qword [R14], 0
    JMP L100008eec_25     ; inserted

; Entry 100008eec; block 27; address 10000900d
L100008eec_27:
    CALL _fclose
    JMP L100008eec_29     ; inserted

; Entry 100008eec; block 28; address 100009019
L100008eec_28:
    LEA RBX, [rel L__DATA___common + 408]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L100008eec_31
    JMP L100008eec_30     ; inserted

; Entry 100008eec; block 29; address 100009012
L100008eec_29:
    MOV qword [RBX], 0
    JMP L100008eec_28     ; inserted

; Entry 100008eec; block 30; address 100009028
L100008eec_30:
    CALL _free
    JMP L100008eec_32     ; inserted

; Entry 100008eec; block 31; address 100009034
L100008eec_31:
    LEA RBX, [rel L__DATA___common + 424]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L100008eec_34
    JMP L100008eec_33     ; inserted

; Entry 100008eec; block 32; address 10000902d
L100008eec_32:
    MOV qword [RBX], 0
    JMP L100008eec_31     ; inserted

; Entry 100008eec; block 33; address 100009043
L100008eec_33:
    CALL _free
    JMP L100008eec_35     ; inserted

; Entry 100008eec; block 34; address 10000904f
L100008eec_34:
    LEA RBX, [rel L__DATA___common + 632]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L100008eec_37
    JMP L100008eec_36     ; inserted

; Entry 100008eec; block 35; address 100009048
L100008eec_35:
    MOV qword [RBX], 0
    JMP L100008eec_34     ; inserted

; Entry 100008eec; block 36; address 10000905e
L100008eec_36:
    CALL _free
    JMP L100008eec_38     ; inserted

; Entry 100008eec; block 37; address 10000906a
L100008eec_37:
    LEA RAX, [rel L__DATA___common + 52]
    CMP dword [RAX], 0
    JE L100008eec_40
    JMP L100008eec_39     ; inserted

; Entry 100008eec; block 38; address 100009063
L100008eec_38:
    MOV qword [RBX], 0
    JMP L100008eec_37     ; inserted

; Entry 100008eec; block 39; address 100009076
L100008eec_39:
    CALL L10000eee4_0
    JMP L100008eec_41     ; inserted

; Entry 100008eec; block 40; address 10000907f
L100008eec_40:
    CALL L10000316f_0
    JMP L100008eec_43     ; inserted

; Entry 100008eec; block 41; address 10000907b
L100008eec_41:
    TEST EAX, EAX
    JNE L100008eec_42
    JMP L100008eec_40     ; inserted

; Entry 100008eec; block 42; address 100009096
L100008eec_42:
    LEA RSI, [rel L__TEXT___cstring_13764]
    MOV EDI, EAX
    CALL L100002e30_0

; Entry 100008eec; block 43; address 100009084
L100008eec_43:
    MOV EAX, R15D
    ADD RSP, 40
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x1000090a4
; ---------------------
; Entry 1000090a4; block 0; address 1000090a4
L1000090a4_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    MOV R14D, EDI
    LEA EAX, [R14 + -82]
    CMP EAX, 38
    JA L1000090a4_2
    JMP L1000090a4_1     ; inserted

; Entry 1000090a4; block 1; address 1000090c2
L1000090a4_1:
    MOV RCX, 274886295553
    BT RCX, RAX
    JAE L1000090a4_2
    JMP L1000090a4_3     ; inserted

; Entry 1000090a4; block 2; address 1000092f3
L1000090a4_2:
    LEA RSI, [rel L__TEXT___cstring_29848]
    JMP L1000090a4_37     ; inserted

; Entry 1000090a4; block 3; address 1000090d6
L1000090a4_3:
    MOV R15, RSI
    TEST RSI, RSI
    JE L1000090a4_5
    JMP L1000090a4_4     ; inserted

; Entry 1000090a4; block 4; address 1000090e2
L1000090a4_4:
    CMP byte [R15], 64
    JNE L1000090a4_7
    JMP L1000090a4_6     ; inserted

; Entry 1000090a4; block 5; address 1000092a7
L1000090a4_5:
    LEA RSI, [rel L__TEXT___cstring_29871]
    JMP L1000090a4_37

; Entry 1000090a4; block 6; address 1000090ec
L1000090a4_6:
    CMP byte [R15 + 1], 0
    JE L1000090a4_9
    JMP L1000090a4_8     ; inserted

; Entry 1000090a4; block 7; address 1000091f1
L1000090a4_7:
    MOV EDI, 24
    CALL _malloc
    JMP L1000090a4_28     ; inserted

; Entry 1000090a4; block 8; address 1000090f7
L1000090a4_8:
    LEA RDI, [R15 + 1]
    LEA RSI, [rel L__TEXT___cstring_6381]
    CALL _fopen
    JMP L1000090a4_10     ; inserted

; Entry 1000090a4; block 9; address 1000092b0
L1000090a4_9:
    LEA RSI, [rel L__TEXT___cstring_29898]
    MOV EDI, 16
    CALL L100002e30_0

; Entry 1000090a4; block 10; address 100009107
L1000090a4_10:
    TEST RAX, RAX
    JE L1000090a4_12
    JMP L1000090a4_11     ; inserted

; Entry 1000090a4; block 11; address 100009110
L1000090a4_11:
    MOV R12, RAX
    MOV RDI, RAX
    CALL L1000106d0_0
    JMP L1000090a4_13     ; inserted

; Entry 1000090a4; block 12; address 1000092c1
L1000090a4_12:
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_29919]
    MOV EDX, 5105
    MOV RDI, RBX
    XOR ESI, ESI
    MOV R8D, R14D
    MOV R9, R15
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L1000090a4_36     ; inserted

; Entry 1000090a4; block 13; address 10000911b
L1000090a4_13:
    TEST RAX, RAX
    JE L1000090a4_15
    JMP L1000090a4_14     ; inserted

; Entry 1000090a4; block 14; address 100009124
L1000090a4_14:
    MOV RBX, RAX
    LEA R13, [rel L__DATA___common + 656]
    JMP L1000090a4_27     ; inserted

; Entry 1000090a4; block 15; address 1000091db
L1000090a4_15:
    MOV RDI, R12
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    JMP _fclose

; Entry 1000090a4; block 16; address 100009138
L1000090a4_16:
    TEST RAX, RAX
    JE L1000090a4_18
    JMP L1000090a4_17     ; inserted

; Entry 1000090a4; block 17; address 100009141
L1000090a4_17:
    MOV RCX, qword [rel L__DATA___common + 8]
    ADD RCX, 16
    CMP qword [rel L__DATA___common + 0], 0
    LEA RDX, [rel L__DATA___common + 0]
    CMOVE RCX, RDX
    MOV qword [RCX], RAX
    MOV qword [rel L__DATA___common + 8], RAX
    MOV RDI, RBX
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L10001683e_0
    JMP L1000090a4_19     ; inserted

; Entry 1000090a4; block 18; address 100009296
L1000090a4_18:
    LEA RSI, [rel L__TEXT___cstring_29940]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 1000090a4; block 19; address 100009175
L1000090a4_19:
    MOV R15, RAX
    MOV RDI, RBX
    CALL _free
    JMP L1000090a4_20     ; inserted

; Entry 1000090a4; block 20; address 100009180
L1000090a4_20:
    TEST R15, R15
    JE L1000090a4_22
    JMP L1000090a4_21     ; inserted

; Entry 1000090a4; block 21; address 100009185
L1000090a4_21:
    MOV RDI, R15
    CALL L10001694a_0
    JMP L1000090a4_23     ; inserted

; Entry 1000090a4; block 22; address 1000091a9
L1000090a4_22:
    MOV RAX, qword [rel L__DATA___common + 8]
    MOV qword [RAX + 8], 0
    JMP L1000090a4_25     ; inserted

; Entry 1000090a4; block 23; address 10000918d
L1000090a4_23:
    MOV RCX, qword [rel L__DATA___common + 8]
    MOV qword [RCX + 8], RAX
    MOV RDI, R15
    CALL _free
    JMP L1000090a4_24     ; inserted

; Entry 1000090a4; block 24; address 1000091a0
L1000090a4_24:
    MOV RAX, qword [rel L__DATA___common + 8]
    JMP L1000090a4_25

; Entry 1000090a4; block 25; address 1000091b8
L1000090a4_25:
    MOV byte [RAX], R14B
    INC dword [R13]
    MOV qword [RAX + 16], 0
    MOV RDI, R12
    CALL L1000106d0_0
    JMP L1000090a4_26     ; inserted

; Entry 1000090a4; block 26; address 1000091cf
L1000090a4_26:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L1000090a4_27
    JMP L1000090a4_15     ; inserted

; Entry 1000090a4; block 27; address 10000912e
L1000090a4_27:
    MOV EDI, 24
    CALL _malloc
    JMP L1000090a4_16     ; inserted

; Entry 1000090a4; block 28; address 1000091fb
L1000090a4_28:
    TEST RAX, RAX
    JE L1000090a4_18
    JMP L1000090a4_29     ; inserted

; Entry 1000090a4; block 29; address 100009204
L1000090a4_29:
    LEA RCX, [rel L__DATA___common + 0]
    MOV RDX, qword [rel L__DATA___common + 8]
    ADD RDX, 16
    CMP qword [rel L__DATA___common + 0], 0
    CMOVE RDX, RCX
    MOV qword [RDX], RAX
    MOV qword [rel L__DATA___common + 8], RAX
    MOV RDI, R15
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L10001683e_0
    JMP L1000090a4_30     ; inserted

; Entry 1000090a4; block 30; address 100009238
L1000090a4_30:
    TEST RAX, RAX
    JE L1000090a4_32
    JMP L1000090a4_31     ; inserted

; Entry 1000090a4; block 31; address 10000923d
L1000090a4_31:
    MOV RBX, RAX
    MOV RDI, RAX
    CALL L10001694a_0
    JMP L1000090a4_33     ; inserted

; Entry 1000090a4; block 32; address 100009264
L1000090a4_32:
    MOV RAX, qword [rel L__DATA___common + 8]
    MOV qword [RAX + 8], 0
    JMP L1000090a4_35     ; inserted

; Entry 1000090a4; block 33; address 100009248
L1000090a4_33:
    MOV RCX, qword [rel L__DATA___common + 8]
    MOV qword [RCX + 8], RAX
    MOV RDI, RBX
    CALL _free
    JMP L1000090a4_34     ; inserted

; Entry 1000090a4; block 34; address 10000925b
L1000090a4_34:
    MOV RAX, qword [rel L__DATA___common + 8]
    JMP L1000090a4_35

; Entry 1000090a4; block 35; address 100009273
L1000090a4_35:
    MOV byte [RAX], R14B
    LEA RCX, [rel L__DATA___common + 656]
    INC dword [RCX]
    MOV qword [RAX + 16], 0
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000090a4; block 36; address 1000092e6
L1000090a4_36:
    MOV EDI, 18
    MOV RSI, RBX
    CALL L100002e30_0

; Entry 1000090a4; block 37; address 1000092fa
L1000090a4_37:
    MOV EDI, 5
    CALL L100002e30_0



; ---------------------
; Function: 0x100009304
; ---------------------
; Entry 100009304; block 0; address 100009304
L100009304_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    LEA RAX, [rel L__DATA___common + 656]
    MOV EDI, dword [RAX]
    TEST EDI, EDI
    JE L100009304_2
    JMP L100009304_1     ; inserted

; Entry 100009304; block 1; address 100009323
L100009304_1:
    INC EDI
    SHL RDI, 4
    CALL _malloc
    JMP L100009304_3     ; inserted

; Entry 100009304; block 2; address 1000093bd
L100009304_2:
    LEA RAX, [rel L__DATA___common + 648]
    MOV qword [RAX], 0
    JMP L100009304_7     ; inserted

; Entry 100009304; block 3; address 10000932e
L100009304_3:
    LEA R15, [rel L__DATA___common + 648]
    MOV qword [R15], RAX
    TEST RAX, RAX
    JE L100009304_5
    JMP L100009304_4     ; inserted

; Entry 100009304; block 4; address 100009341
L100009304_4:
    MOV R12, qword [rel L__DATA___common + 0]
    TEST R12, R12
    JE L100009304_7
    JMP L100009304_6     ; inserted

; Entry 100009304; block 5; address 1000093da
L100009304_5:
    LEA RSI, [rel L__TEXT___cstring_29954]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100009304; block 6; address 10000934d
L100009304_6:
    MOV EBX, 8
    MOV R13D, 1
    LEA R14, [rel L__DATA___common + 660]
    JMP L100009304_14     ; inserted

; Entry 100009304; block 7; address 1000093cb
L100009304_7:
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100009304; block 8; address 10000936c
L100009304_8:
    CMP EAX, 82
    JNE L100009304_11
    JMP L100009304_10     ; inserted

; Entry 100009304; block 9; address 100009378
L100009304_9:
    INC dword [RCX]
    JMP L100009304_11     ; inserted

; Entry 100009304; block 10; address 100009371
L100009304_10:
    LEA RCX, [rel L__DATA___common + 664]
    JMP L100009304_9     ; inserted

; Entry 100009304; block 11; address 10000937a
L100009304_11:
    MOV RCX, qword [R15]
    MOV dword [RCX + RBX], EAX
    MOV RAX, qword [R12 + 8]
    MOV qword [RCX + RBX-1], RAX
    MOV RDI, qword [rel L__DATA___common + 0]
    MOV R12, qword [RDI + 16]
    CALL _free
    JMP L100009304_12     ; inserted

; Entry 100009304; block 12; address 10000939a
L100009304_12:
    MOV qword [rel L__DATA___common + 0], R12
    LEA RAX, [rel L__DATA___common + 656]
    MOV EAX, dword [RAX]
    CMP R13, RAX
    JAE L100009304_7
    JMP L100009304_13     ; inserted

; Entry 100009304; block 13; address 1000093af
L100009304_13:
    ADD RBX, 16
    INC R13
    TEST R12, R12
    JNE L100009304_14
    JMP L100009304_15     ; inserted

; Entry 100009304; block 14; address 10000935f
L100009304_14:
    MOVSX EAX, byte [R12]
    MOV RCX, R14
    CMP EAX, 105
    JE L100009304_9
    JMP L100009304_8     ; inserted

; Entry 100009304; block 15; address 1000093bb
L100009304_15:
    JMP L100009304_7



; ---------------------
; Function: 0x1000093eb
; ---------------------
; Entry 1000093eb; block 0; address 1000093eb
L1000093eb_0:
    PUSH RBP
    MOV RBP, RSP
    MOV RAX, qword [rel ___stderrp]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 6336]
    MOV qword [RCX], RAX
    MOV EDI, 1
    CALL _isatty
    JMP L1000093eb_1     ; inserted

; Entry 1000093eb; block 1; address 10000940d
L1000093eb_1:
    TEST EAX, EAX
    JNE L1000093eb_3
    JMP L1000093eb_2     ; inserted

; Entry 1000093eb; block 2; address 100009411
L1000093eb_2:
    MOV EDI, 4
    CALL _malloc
    JMP L1000093eb_4     ; inserted

; Entry 1000093eb; block 3; address 100009431
L1000093eb_3:
    LEA RSI, [rel L__TEXT___cstring_29980]
    MOV EDI, 16
    CALL L100002e30_0

; Entry 1000093eb; block 4; address 10000941b
L1000093eb_4:
    LEA RCX, [rel L__DATA___common + 6376]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JE L1000093eb_6
    JMP L1000093eb_5     ; inserted

; Entry 1000093eb; block 5; address 10000942a
L1000093eb_5:
    MOV word [RAX], 45
    POP RBP
    RET 

; Entry 1000093eb; block 6; address 100009442
L1000093eb_6:
    LEA RSI, [rel L__TEXT___cstring_8174]
    MOV EDI, 4
    CALL L100002e30_0



; ---------------------
; Function: 0x100009453
; ---------------------
; Entry 100009453; block 0; address 100009453
L100009453_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV R14, RDI
    MOV EDI, 16
    CALL _malloc
    JMP L100009453_1     ; inserted

; Entry 100009453; block 1; address 10000946a
L100009453_1:
    TEST RAX, RAX
    JE L100009453_3
    JMP L100009453_2     ; inserted

; Entry 100009453; block 2; address 10000946f
L100009453_2:
    MOV R15, RAX
    MOV RDI, R14
    CALL _strlen
    JMP L100009453_4     ; inserted

; Entry 100009453; block 3; address 1000094db
L100009453_3:
    LEA RSI, [rel L__TEXT___cstring_30014]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100009453; block 4; address 10000947a
L100009453_4:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100009453_5     ; inserted

; Entry 100009453; block 5; address 100009483
L100009453_5:
    TEST RAX, RAX
    JE L100009453_3
    JMP L100009453_6     ; inserted

; Entry 100009453; block 6; address 100009488
L100009453_6:
    MOV RBX, RAX
    MOV RDI, RAX
    MOV RSI, R14
    CALL _strcpy
    JMP L100009453_7     ; inserted

; Entry 100009453; block 7; address 100009496
L100009453_7:
    MOV qword [R15 + 8], 0
    MOV qword [R15], RBX
    MOV RAX, qword [rel L__DATA___common + 32]
    ADD RAX, 8
    CMP qword [rel L__DATA___common + 24], 0
    LEA RCX, [rel L__DATA___common + 24]
    CMOVE RAX, RCX
    MOV qword [RAX], R15
    MOV qword [rel L__DATA___common + 32], R15
    INC qword [rel L__DATA___common + 16]
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x1000094ec
; ---------------------
; Entry 1000094ec; block 0; address 1000094ec
L1000094ec_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    MOV EAX, 5120
    CALL L100009bb0_0
    JMP L1000094ec_1     ; inserted

; Entry 1000094ec; block 1; address 100009501
L1000094ec_1:
    SUB RSP, RAX
    MOV R14, RDI
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -40], RAX
    MOV RBX, qword [rel L__DATA___bss + 24]
    TEST RBX, RBX
    JE L1000094ec_3
    JMP L1000094ec_2     ; inserted

; Entry 1000094ec; block 2; address 100009521
L1000094ec_2:
    LEA RSI, [rel L__TEXT___cstring_30026]
    MOV RDI, RBX
    CALL _strstr
    JMP L1000094ec_4     ; inserted

; Entry 1000094ec; block 3; address 100009598
L1000094ec_3:
    LEA RAX, [rel L__TEXT___cstring_30053]
    MOV qword [RBP + -5136], RAX
    LEA RAX, [rel L__TEXT___cstring_30059]
    MOV qword [RBP + -5128], RAX
    LEA RAX, [rel L__DATA___common + 60]
    MOV R12D, 2
    CMP dword [RAX], 0
    JNE L1000094ec_12
    JMP L1000094ec_11     ; inserted

; Entry 1000094ec; block 4; address 100009530
L1000094ec_4:
    TEST RAX, RAX
    JNE L1000094ec_6
    JMP L1000094ec_5     ; inserted

; Entry 1000094ec; block 5; address 100009539
L1000094ec_5:
    LEA R8, [RBP + -4048]
    MOV qword [R8], RBX
    MOV qword [R8 + 8], R14
    XOR R14D, R14D
    MOV qword [R8 + 16], R14
    LEA RDI, [RBP + -5056]
    MOV RSI, RBX
    XOR EDX, EDX
    XOR ECX, ECX
    XOR R9D, R9D
    CALL _posix_spawnp
    JMP L1000094ec_7     ; inserted

; Entry 1000094ec; block 6; address 100009807
L1000094ec_6:
    LEA RSI, [rel L__TEXT___cstring_30029]
    MOV EDI, 16
    CALL L100002e30_0

; Entry 1000094ec; block 7; address 100009564
L1000094ec_7:
    MOV EBX, EAX
    MOV RDI, qword [rel L__DATA___bss + 24]
    CALL _free
    JMP L1000094ec_8     ; inserted

; Entry 1000094ec; block 8; address 100009572
L1000094ec_8:
    MOV qword [rel L__DATA___bss + 24], R14
    MOV ECX, 1
    TEST EBX, EBX
    JNE L1000094ec_10
    JMP L1000094ec_9     ; inserted

; Entry 1000094ec; block 9; address 100009586
L1000094ec_9:
    MOV EDI, dword [RBP + -5056]
    LEA RBX, [RBP + -5136]
    JMP L1000094ec_35

; Entry 1000094ec; block 10; address 100009739
L1000094ec_10:
    TEST ECX, ECX
    JNE L1000094ec_38
    JMP L1000094ec_37     ; inserted

; Entry 1000094ec; block 11; address 1000095c6
L1000094ec_11:
    LEA RAX, [rel L__TEXT___cstring_30062]
    MOV qword [RBP + -5120], RAX
    MOV R12D, 3
    JMP L1000094ec_12     ; inserted

; Entry 1000094ec; block 12; address 1000095da
L1000094ec_12:
    MOV dword [RBP + -5140], 0
    LEA RBX, [RBP + -4048]
    MOV byte [RBX], 0
    LEA RSI, [rel L__TEXT___cstring_30053]
    MOV EDX, 4000
    MOV ECX, 4004
    MOV RDI, RBX
    CALL ___strncat_chk
    JMP L1000094ec_13     ; inserted

; Entry 1000094ec; block 13; address 100009607
L1000094ec_13:
    LEA RSI, [rel L__TEXT___cstring_30126]
    MOV EDX, 4004
    MOV RDI, RBX
    CALL ___strcat_chk
    JMP L1000094ec_14     ; inserted

; Entry 1000094ec; block 14; address 10000961b
L1000094ec_14:
    LEA RSI, [rel L__TEXT___cstring_6381]
    MOV RDI, RBX
    CALL _popen
    JMP L1000094ec_15     ; inserted

; Entry 1000094ec; block 15; address 10000962a
L1000094ec_15:
    TEST RAX, RAX
    JE L1000094ec_17
    JMP L1000094ec_16     ; inserted

; Entry 1000094ec; block 16; address 100009633
L1000094ec_16:
    MOV RBX, RAX
    LEA RDI, [RBP + -5056]
    MOV ESI, 1000
    MOV RDX, RAX
    CALL _fgets
    JMP L1000094ec_18     ; inserted

; Entry 1000094ec; block 17; address 1000097c6
L1000094ec_17:
    LEA RDI, [rel L__TEXT___cstring_30130]
    CALL _perror
    JMP L1000094ec_47     ; inserted

; Entry 1000094ec; block 18; address 10000964a
L1000094ec_18:
    TEST RAX, RAX
    JE L1000094ec_20
    JMP L1000094ec_19     ; inserted

; Entry 1000094ec; block 19; address 10000964f
L1000094ec_19:
    LEA RSI, [rel L__TEXT___cstring_30184]
    LEA RDI, [RBP + -5056]
    LEA RDX, [RBP + -5140]
    XOR EAX, EAX
    CALL _sscanf
    JMP L1000094ec_21     ; inserted

; Entry 1000094ec; block 20; address 10000968d
L1000094ec_20:
    LEA RDI, [rel L__TEXT___cstring_30147]
    JMP L1000094ec_27

; Entry 1000094ec; block 21; address 10000966b
L1000094ec_21:
    TEST EAX, EAX
    JLE L1000094ec_23
    JMP L1000094ec_22     ; inserted

; Entry 1000094ec; block 22; address 10000966f
L1000094ec_22:
    LEA R15, [RBP + -5056]
    JMP L1000094ec_25     ; inserted

; Entry 1000094ec; block 23; address 100009696
L1000094ec_23:
    LEA RDI, [rel L__TEXT___cstring_30194]
    JMP L1000094ec_27     ; inserted

; Entry 1000094ec; block 24; address 100009686
L1000094ec_24:
    TEST RAX, RAX
    JNE L1000094ec_25
    JMP L1000094ec_26     ; inserted

; Entry 1000094ec; block 25; address 100009676
L1000094ec_25:
    MOV RDI, R15
    MOV ESI, 1000
    MOV RDX, RBX
    CALL _fgets
    JMP L1000094ec_24     ; inserted

; Entry 1000094ec; block 26; address 10000968b
L1000094ec_26:
    JMP L1000094ec_28

; Entry 1000094ec; block 27; address 10000969d
L1000094ec_27:
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L1000094ec_28     ; inserted

; Entry 1000094ec; block 28; address 1000096a9
L1000094ec_28:
    MOV RDI, RBX
    CALL _pclose
    JMP L1000094ec_29     ; inserted

; Entry 1000094ec; block 29; address 1000096b1
L1000094ec_29:
    MOVSS XMM0, dword [RBP + -5140]
    MOVSS XMM1, dword [rel L__TEXT___const + 0]
    UCOMISS XMM1, XMM0
    JBE L1000094ec_31
    JMP L1000094ec_30     ; inserted

; Entry 1000094ec; block 30; address 1000096c6
L1000094ec_30:
    LEA RAX, [rel L__DATA___common + 308]
    CMP dword [RAX], 0
    JNE L1000094ec_32
    JMP L1000094ec_31     ; inserted

; Entry 1000094ec; block 31; address 1000096d6
L1000094ec_31:
    MOV EAX, R12D
    MOV qword [RBP + RAX * 8 + -5136], R14
    MOV qword [RBP + RAX * 8 + -5128], 0
    LEA R8, [RBP + -5136]
    MOV RSI, qword [R8]
    LEA RDI, [RBP + -4048]
    XOR EDX, EDX
    XOR ECX, ECX
    XOR R9D, R9D
    CALL _posix_spawnp
    JMP L1000094ec_33     ; inserted

; Entry 1000094ec; block 32; address 100009818
L1000094ec_32:
    CVTSS2SD XMM0, XMM0
    LEA RCX, [rel L__TEXT___cstring_30224]
    LEA R14, [RBP + -5056]
    MOV EDX, 1001
    MOV RDI, R14
    XOR ESI, ESI
    MOV AL, 1
    CALL ___sprintf_chk
    JMP L1000094ec_49     ; inserted

; Entry 1000094ec; block 33; address 10000970a
L1000094ec_33:
    MOV ECX, 1
    TEST EAX, EAX
    JNE L1000094ec_10
    JMP L1000094ec_34     ; inserted

; Entry 1000094ec; block 34; address 100009713
L1000094ec_34:
    MOV EDI, dword [RBP + -4048]
    LEA RBX, [RBP + -5056]
    JMP L1000094ec_35     ; inserted

; Entry 1000094ec; block 35; address 100009720
L1000094ec_35:
    MOV RSI, RBX
    XOR EDX, EDX
    CALL _waitpid
    JMP L1000094ec_36     ; inserted

; Entry 1000094ec; block 36; address 10000972a
L1000094ec_36:
    MOV EAX, dword [RBX]
    TEST AL, 127
    MOVZX EAX, AH
    MOV ECX, 1
    CMOVE ECX, EAX
    JMP L1000094ec_10     ; inserted

; Entry 1000094ec; block 37; address 100009741
L1000094ec_37:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L1000094ec_40
    JMP L1000094ec_39     ; inserted

; Entry 1000094ec; block 38; address 1000097d7
L1000094ec_38:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RDX, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_30066]
    XOR EAX, EAX
    CALL _fprintf
    JMP L1000094ec_48     ; inserted

; Entry 1000094ec; block 39; address 10000974d
L1000094ec_39:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RBX]
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RDX, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_30111]
    XOR EAX, EAX
    CALL _fprintf
    JMP L1000094ec_41     ; inserted

; Entry 1000094ec; block 40; address 100009777
L1000094ec_40:
    LEA RBX, [rel L__DATA___common + 240]
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L1000094ec_43
    JMP L1000094ec_42     ; inserted

; Entry 1000094ec; block 41; address 10000976f
L1000094ec_41:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L1000094ec_40     ; inserted

; Entry 1000094ec; block 42; address 100009786
L1000094ec_42:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RDX, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_30111]
    XOR EAX, EAX
    CALL _fprintf
    JMP L1000094ec_44     ; inserted

; Entry 1000094ec; block 43; address 1000097a6
L1000094ec_43:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -40]
    JNE L1000094ec_46
    JMP L1000094ec_45     ; inserted

; Entry 1000094ec; block 44; address 10000979e
L1000094ec_44:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L1000094ec_43     ; inserted

; Entry 1000094ec; block 45; address 1000097b6
L1000094ec_45:
    ADD RSP, 5120
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000094ec; block 46; address 100009802
L1000094ec_46:
    CALL ___stack_chk_fail

; Entry 1000094ec; block 47; address 1000097d2
L1000094ec_47:
    JMP L1000094ec_29

; Entry 1000094ec; block 48; address 1000097f9
L1000094ec_48:
    LEA RSI, [rel L__TEXT___cstring_30085]
    JMP L1000094ec_52

; Entry 1000094ec; block 49; address 10000983b
L1000094ec_49:
    LEA RBX, [rel L__TEXT___cstring_244]
    MOV RDI, R14
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L1000094ec_50     ; inserted

; Entry 1000094ec; block 50; address 10000984d
L1000094ec_50:
    LEA RDI, [rel L__TEXT___cstring_30250]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L1000094ec_51     ; inserted

; Entry 1000094ec; block 51; address 10000985c
L1000094ec_51:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RSI, qword [RAX]
    JMP L1000094ec_52     ; inserted

; Entry 1000094ec; block 52; address 100009866
L1000094ec_52:
    MOV EDI, 8
    CALL L100002e30_0



; ---------------------
; Function: 0x100009870
; ---------------------
; Entry 100009870; block 0; address 100009870
L100009870_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    SUB RSP, 112
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -40], RAX
    LEA R15, [rel L__DATA___common + 604]
    CMP dword [R15], 0
    JE L100009870_2
    JMP L100009870_1     ; inserted

; Entry 100009870; block 1; address 10000989a
L100009870_1:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RAX]
    MOV EDI, 10
    CALL _fputc
    JMP L100009870_3     ; inserted

; Entry 100009870; block 2; address 1000098b5
L100009870_2:
    LEA R14, [rel L__DATA___common + 608]
    CMP dword [R14], 0
    JE L100009870_5
    JMP L100009870_4     ; inserted

; Entry 100009870; block 3; address 1000098ae
L100009870_3:
    MOV dword [R15], 0
    JMP L100009870_2     ; inserted

; Entry 100009870; block 4; address 1000098c2
L100009870_4:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RSI, qword [RAX]
    MOV EDI, 10
    CALL _fputc
    JMP L100009870_6     ; inserted

; Entry 100009870; block 5; address 1000098dd
L100009870_5:
    LEA RAX, [rel L__DATA___common + 164]
    CMP dword [RAX], 0
    JE L100009870_8
    JMP L100009870_7     ; inserted

; Entry 100009870; block 6; address 1000098d6
L100009870_6:
    MOV dword [R14], 0
    JMP L100009870_5     ; inserted

; Entry 100009870; block 7; address 1000098ed
L100009870_7:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L100009870_10
    JMP L100009870_9     ; inserted

; Entry 100009870; block 8; address 100009977
L100009870_8:
    LEA RAX, [rel L__DATA___common + 152]
    CMP dword [RAX], 0
    JE L100009870_15
    JMP L100009870_14     ; inserted

; Entry 100009870; block 9; address 1000098f9
L100009870_9:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 448]
    MOV RDX, qword [RAX]
    INC RDX
    LEA RAX, [rel L__DATA___common + 480]
    MOV RCX, qword [RAX]
    INC RCX
    LEA RSI, [rel L__TEXT___cstring_30302]
    XOR EAX, EAX
    CALL _fprintf
    JMP L100009870_11     ; inserted

; Entry 100009870; block 10; address 100009932
L100009870_10:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L100009870_8
    JMP L100009870_12     ; inserted

; Entry 100009870; block 11; address 10000992b
L100009870_11:
    MOV dword [R15], 1
    JMP L100009870_10     ; inserted

; Entry 100009870; block 12; address 10000993e
L100009870_12:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 448]
    MOV RDX, qword [RAX]
    INC RDX
    LEA RAX, [rel L__DATA___common + 480]
    MOV RCX, qword [RAX]
    INC RCX
    LEA RSI, [rel L__TEXT___cstring_30302]
    XOR EAX, EAX
    CALL _fprintf
    JMP L100009870_13     ; inserted

; Entry 100009870; block 13; address 100009970
L100009870_13:
    MOV dword [R14], 1
    JMP L100009870_8     ; inserted

; Entry 100009870; block 14; address 100009987
L100009870_14:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L100009870_17
    JMP L100009870_16     ; inserted

; Entry 100009870; block 15; address 100009a0b
L100009870_15:
    LEA RAX, [rel L__DATA___common + 156]
    CMP dword [RAX], 0
    JE L100009870_22
    JMP L100009870_21     ; inserted

; Entry 100009870; block 16; address 100009993
L100009870_16:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 176]
    MOV RDX, qword [RAX]
    LEA RAX, [rel L__DATA___common + 192]
    MOV RCX, qword [RAX]
    SUB RCX, RDX
    LEA RSI, [rel L__TEXT___cstring_30312]
    XOR EAX, EAX
    CALL _fprintf
    JMP L100009870_18     ; inserted

; Entry 100009870; block 17; address 1000099c9
L100009870_17:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L100009870_15
    JMP L100009870_19     ; inserted

; Entry 100009870; block 18; address 1000099c2
L100009870_18:
    MOV dword [R15], 1
    JMP L100009870_17     ; inserted

; Entry 100009870; block 19; address 1000099d5
L100009870_19:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 176]
    MOV RDX, qword [RAX]
    LEA RAX, [rel L__DATA___common + 192]
    MOV RCX, qword [RAX]
    SUB RCX, RDX
    LEA RSI, [rel L__TEXT___cstring_30312]
    XOR EAX, EAX
    CALL _fprintf
    JMP L100009870_20     ; inserted

; Entry 100009870; block 20; address 100009a04
L100009870_20:
    MOV dword [R14], 1
    JMP L100009870_15     ; inserted

; Entry 100009870; block 21; address 100009a1b
L100009870_21:
    LEA RBX, [rel L__DATA___common + 200]
    MOV RDI, qword [RBX]
    LEA RSI, [RBP + -144]
    CALL L100015cf7_0
    JMP L100009870_23     ; inserted

; Entry 100009870; block 22; address 100009b55
L100009870_22:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L100009870_42
    JMP L100009870_41     ; inserted

; Entry 100009870; block 23; address 100009a31
L100009870_23:
    LEA R12, [rel L__DATA___data + 4508]
    CMP dword [R12], 0
    JE L100009870_25
    JMP L100009870_24     ; inserted

; Entry 100009870; block 24; address 100009a3f
L100009870_24:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_30323]
    LEA RDX, [RBP + -144]
    XOR EAX, EAX
    CALL _fprintf
    JMP L100009870_26     ; inserted

; Entry 100009870; block 25; address 100009a65
L100009870_25:
    LEA R15, [rel L__DATA___common + 232]
    CMP dword [R15], 0
    JE L100009870_28
    JMP L100009870_27     ; inserted

; Entry 100009870; block 26; address 100009a5e
L100009870_26:
    MOV dword [R15], 1
    JMP L100009870_25     ; inserted

; Entry 100009870; block 27; address 100009a72
L100009870_27:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RDI, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_30323]
    LEA RDX, [RBP + -144]
    XOR EAX, EAX
    CALL _fprintf
    JMP L100009870_29     ; inserted

; Entry 100009870; block 28; address 100009a98
L100009870_28:
    LEA RAX, [rel L__DATA___common + 224]
    MOV RCX, qword [RAX]
    MOV RDI, qword [RBX]
    MOV RAX, RCX
    SUB RAX, RDI
    JAE L100009870_31
    JMP L100009870_30     ; inserted

; Entry 100009870; block 29; address 100009a91
L100009870_29:
    MOV dword [R14], 1
    JMP L100009870_28     ; inserted

; Entry 100009870; block 30; address 100009aad
L100009870_30:
    SUB RDI, RCX
    LEA RSI, [RBP + -144]
    CALL L100015cf7_0
    JMP L100009870_32     ; inserted

; Entry 100009870; block 31; address 100009afb
L100009870_31:
    LEA RSI, [RBP + -144]
    MOV RDI, RAX
    CALL L100015cf7_0
    JMP L100009870_36     ; inserted

; Entry 100009870; block 32; address 100009abc
L100009870_32:
    CMP dword [R12], 0
    JE L100009870_34
    JMP L100009870_33     ; inserted

; Entry 100009870; block 33; address 100009ac3
L100009870_33:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_30335]
    LEA RDX, [RBP + -144]
    XOR EAX, EAX
    CALL _fprintf
    JMP L100009870_34     ; inserted

; Entry 100009870; block 34; address 100009ae2
L100009870_34:
    CMP dword [R15], 0
    JE L100009870_22
    JMP L100009870_35     ; inserted

; Entry 100009870; block 35; address 100009ae8
L100009870_35:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RDI, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_30335]
    JMP L100009870_40

; Entry 100009870; block 36; address 100009b0a
L100009870_36:
    CMP dword [R12], 0
    JE L100009870_38
    JMP L100009870_37     ; inserted

; Entry 100009870; block 37; address 100009b11
L100009870_37:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_30328]
    LEA RDX, [RBP + -144]
    XOR EAX, EAX
    CALL _fprintf
    JMP L100009870_38     ; inserted

; Entry 100009870; block 38; address 100009b30
L100009870_38:
    CMP dword [R15], 0
    JE L100009870_22
    JMP L100009870_39     ; inserted

; Entry 100009870; block 39; address 100009b36
L100009870_39:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RDI, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_30328]
    JMP L100009870_40     ; inserted

; Entry 100009870; block 40; address 100009b47
L100009870_40:
    LEA RDX, [RBP + -144]
    XOR EAX, EAX
    CALL _fprintf
    JMP L100009870_22     ; inserted

; Entry 100009870; block 41; address 100009b61
L100009870_41:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    CALL _fflush
    JMP L100009870_42     ; inserted

; Entry 100009870; block 42; address 100009b70
L100009870_42:
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L100009870_44
    JMP L100009870_43     ; inserted

; Entry 100009870; block 43; address 100009b7c
L100009870_43:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RDI, qword [RAX]
    CALL _fflush
    JMP L100009870_44     ; inserted

; Entry 100009870; block 44; address 100009b8b
L100009870_44:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -40]
    JNE L100009870_46
    JMP L100009870_45     ; inserted

; Entry 100009870; block 45; address 100009b9b
L100009870_45:
    ADD RSP, 112
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100009870; block 46; address 100009ba8
L100009870_46:
    CALL ___stack_chk_fail



; ---------------------
; Function: 0x100009bb0
; ---------------------
; Entry 100009bb0; block 0; address 100009bb0
L100009bb0_0:
    PUSH RCX
    PUSH RAX
    MOV RCX, qword [rel ____chkstk_darwin]
    TEST RCX, RCX
    JNE L100009bb0_2
    JMP L100009bb0_1     ; inserted

; Entry 100009bb0; block 1; address 100009bbe
L100009bb0_1:
    LEA RCX, [rel L100009bd0_0]
    JMP L100009bb0_2     ; inserted

; Entry 100009bb0; block 2; address 100009bc5
L100009bb0_2:
    ; NO JUMP TABLE FOUND.
    CALL RCX; TARGETS: ____chkstk_darwin,100009bd0
    JMP L100009bb0_3     ; inserted

; Entry 100009bb0; block 3; address 100009bc7
L100009bb0_3:
    POP RAX
    POP RCX
    RET 



; ---------------------
; Function: 0x100009bd0
; ---------------------
; Entry 100009bd0; block 0; address 100009bd0
L100009bd0_0:
    CMP RAX, 4096
    LEA RCX, [RSP + 24]
    JB L100009bd0_2
    JMP L100009bd0_1     ; inserted

; Entry 100009bd0; block 1; address 100009bdd
L100009bd0_1:
    SUB RCX, 4096
    TEST byte [RCX], CL
    SUB RAX, 4096
    CMP RAX, 4096
    JA L100009bd0_1
    JMP L100009bd0_2     ; inserted

; Entry 100009bd0; block 2; address 100009bf4
L100009bd0_2:
    SUB RCX, RAX
    TEST byte [RCX], CL
    RET 



; ---------------------
; Function: 0x100009bfa
; ---------------------
; Entry 100009bfa; block 0; address 100009bfa
L100009bfa_0:
    PUSH RBP
    MOV RBP, RSP
    LEA RAX, [rel L__DATA___common + 6360]
    MOV RDX, qword [RAX]
    TEST RDX, RDX
    JE L100009bfa_2
    JMP L100009bfa_1     ; inserted

; Entry 100009bfa; block 1; address 100009c0d
L100009bfa_1:
    LEA RAX, [rel L__DATA___common + 6384]
    MOV RSI, qword [RAX]
    LEA RCX, [rel L__TEXT___text + 28161]
    CALL L100015063_0
    JMP L100009bfa_3     ; inserted

; Entry 100009bfa; block 2; address 100009c2d
L100009bfa_2:
    XOR EAX, EAX
    JMP L100009bfa_5     ; inserted

; Entry 100009bfa; block 3; address 100009c23
L100009bfa_3:
    TEST RAX, RAX
    JE L100009bfa_2
    JMP L100009bfa_4     ; inserted

; Entry 100009bfa; block 4; address 100009c28
L100009bfa_4:
    MOV RAX, qword [RAX]
    JMP L100009bfa_5

; Entry 100009bfa; block 5; address 100009c2f
L100009bfa_5:
    POP RBP
    RET 



; ---------------------
; Function: 0x100009c3f
; ---------------------
; Entry 100009c3f; block 0; address 100009c3f
L100009c3f_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R14
    PUSH RBX
    MOV R14, RDI
    CALL _strlen
    JMP L100009c3f_1     ; inserted

; Entry 100009c3f; block 1; address 100009c4e
L100009c3f_1:
    LEA RDI, [RAX + 5]
    CALL _malloc
    JMP L100009c3f_2     ; inserted

; Entry 100009c3f; block 2; address 100009c57
L100009c3f_2:
    MOV RBX, RAX
    TEST RAX, RAX
    JE L100009c3f_4
    JMP L100009c3f_3     ; inserted

; Entry 100009c3f; block 3; address 100009c5f
L100009c3f_3:
    MOV RDI, RBX
    MOV RSI, R14
    CALL _strcpy
    JMP L100009c3f_5     ; inserted

; Entry 100009c3f; block 4; address 100009cb1
L100009c3f_4:
    MOV RAX, RBX
    POP RBX
    POP R14
    POP RBP
    RET 

; Entry 100009c3f; block 5; address 100009c6a
L100009c3f_5:
    LEA RAX, [rel L__DATA___common + 72]
    CMP dword [RAX], 0
    JNE L100009c3f_4
    JMP L100009c3f_6     ; inserted

; Entry 100009c3f; block 6; address 100009c76
L100009c3f_6:
    MOV RDI, RBX
    MOV ESI, 47
    CALL _strrchr
    JMP L100009c3f_7     ; inserted

; Entry 100009c3f; block 7; address 100009c83
L100009c3f_7:
    LEA RDI, [RAX + 1]
    TEST RAX, RAX
    CMOVE RDI, RBX
    MOV ESI, 46
    CALL _strrchr
    JMP L100009c3f_8     ; inserted

; Entry 100009c3f; block 8; address 100009c98
L100009c3f_8:
    TEST RAX, RAX
    JNE L100009c3f_4
    JMP L100009c3f_9     ; inserted

; Entry 100009c3f; block 9; address 100009c9d
L100009c3f_9:
    MOV RDI, RBX
    CALL _strlen
    JMP L100009c3f_10     ; inserted

; Entry 100009c3f; block 10; address 100009ca5
L100009c3f_10:
    MOV dword [RBX + RAX], 1885960750
    MOV byte [RBX + RAX + 4], 0
    JMP L100009c3f_4     ; inserted



; ---------------------
; Function: 0x100009cf1
; ---------------------
; Entry 100009cf1; block 0; address 100009cf1
L100009cf1_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 56
    MOV R12, R8
    MOV R13D, ECX
    MOV R15, RDX
    TEST RDI, RDI
    JE L100009cf1_2
    JMP L100009cf1_1     ; inserted

; Entry 100009cf1; block 1; address 100009d14
L100009cf1_1:
    MOV R14D, ESI
    MOV RBX, RDI
    MOV EDI, 65535
    CALL _malloc
    JMP L100009cf1_3     ; inserted

; Entry 100009cf1; block 2; address 100009deb
L100009cf1_2:
    XOR R14D, R14D
    TEST R15, R15
    JE L100009cf1_17
    JMP L100009cf1_16     ; inserted

; Entry 100009cf1; block 3; address 100009d24
L100009cf1_3:
    TEST RAX, RAX
    MOV qword [RBP + -80], R12
    JNE L100009cf1_5
    JMP L100009cf1_4     ; inserted

; Entry 100009cf1; block 4; address 100009d2d
L100009cf1_4:
    MOV R12, RAX
    LEA RSI, [rel L__TEXT___cstring_30388]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100009cf1; block 5; address 100009d44
L100009cf1_5:
    TEST R14D, R14D
    MOV qword [RBP + -56], R15
    JE L100009cf1_7
    JMP L100009cf1_6     ; inserted

; Entry 100009cf1; block 6; address 100009d51
L100009cf1_6:
    MOV ECX, R14D
    ADD RCX, RBX
    MOV qword [RBP + -88], RCX
    TEST R15, R15
    SETE CL
    MOV qword [RBP + -72], R13
    MOV EDX, R13D
    MOV qword [RBP + -64], RDX
    LEA R13, [R15 + RDX]
    ADD R13, 18446744073709551612
    CMP R13, R15
    SETBE DL
    OR DL, CL
    MOV byte [RBP + -41], DL
    XOR R14D, R14D
    JMP L100009cf1_14     ; inserted

; Entry 100009cf1; block 7; address 100009e3d
L100009cf1_7:
    MOV EDX, R13D
    XOR R14D, R14D
    JMP L100009cf1_24     ; inserted

; Entry 100009cf1; block 8; address 100009d8d
L100009cf1_8:
    MOVZX ESI, word [RBX]
    MOV RCX, qword [RBP + -56]
    JMP L100009cf1_12     ; inserted

; Entry 100009cf1; block 9; address 100009dab
L100009cf1_9:
    MOVZX EDI, R14W
    ADD RDI, RAX
    MOV dword [RBP + -48], R14D
    LEA R14, [R12 + 4]
    MOV R15, RAX
    MOV RSI, RBX
    MOV RDX, R14
    CALL _memcpy
    JMP L100009cf1_13     ; inserted

; Entry 100009cf1; block 10; address 100009d9b
L100009cf1_10:
    MOVZX EDX, word [RCX + 2]
    ADD RCX, RDX
    ADD RCX, 4
    CMP RCX, R13
    JB L100009cf1_12
    JMP L100009cf1_9     ; inserted

; Entry 100009cf1; block 11; address 100009dd0
L100009cf1_11:
    MOVZX ECX, R12W
    ADD RBX, RCX
    ADD RBX, 4
    CMP RBX, qword [RBP + -88]
    JB L100009cf1_14
    JMP L100009cf1_15     ; inserted

; Entry 100009cf1; block 12; address 100009d94
L100009cf1_12:
    MOVZX EDX, word [RCX]
    CMP EDX, ESI
    JE L100009cf1_11
    JMP L100009cf1_10     ; inserted

; Entry 100009cf1; block 13; address 100009dc9
L100009cf1_13:
    MOV RAX, R15
    ADD R14D, dword [RBP + -48]
    JMP L100009cf1_11     ; inserted

; Entry 100009cf1; block 14; address 100009d82
L100009cf1_14:
    MOVZX R12D, word [RBX + 2]
    CMP byte [RBP + -41], 0
    JNE L100009cf1_9
    JMP L100009cf1_8     ; inserted

; Entry 100009cf1; block 15; address 100009de1
L100009cf1_15:
    MOV R13, qword [RBP + -72]
    MOV RDX, qword [RBP + -64]
    JMP L100009cf1_24

; Entry 100009cf1; block 16; address 100009df7
L100009cf1_16:
    MOV EBX, 0
    TEST R13D, R13D
    JE L100009cf1_19
    JMP L100009cf1_18     ; inserted

; Entry 100009cf1; block 17; address 100009eae
L100009cf1_17:
    XOR EBX, EBX
    JMP L100009cf1_19

; Entry 100009cf1; block 18; address 100009e05
L100009cf1_18:
    MOV R14D, R13D
    MOV RDI, R14
    CALL _malloc
    JMP L100009cf1_20     ; inserted

; Entry 100009cf1; block 19; address 100009e98
L100009cf1_19:
    MOV dword [R12], R14D
    MOV RAX, RBX
    ADD RSP, 56
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100009cf1; block 20; address 100009e10
L100009cf1_20:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L100009cf1_22
    JMP L100009cf1_21     ; inserted

; Entry 100009cf1; block 21; address 100009e18
L100009cf1_21:
    LEA RSI, [rel L__TEXT___cstring_30388]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100009cf1; block 22; address 100009e29
L100009cf1_22:
    MOV RDI, RBX
    MOV RSI, R15
    MOV RDX, R14
    CALL _memcpy
    JMP L100009cf1_23     ; inserted

; Entry 100009cf1; block 23; address 100009e37
L100009cf1_23:
    MOVZX R14D, R13W
    JMP L100009cf1_19

; Entry 100009cf1; block 24; address 100009e43
L100009cf1_24:
    MOVZX EDI, R14W
    ADD RDI, RAX
    MOV R12, RAX
    MOV RSI, qword [RBP + -56]
    CALL _memcpy
    JMP L100009cf1_25     ; inserted

; Entry 100009cf1; block 25; address 100009e56
L100009cf1_25:
    ADD R13D, R14D
    MOVZX R14D, R13W
    MOV RDI, R14
    CALL _malloc
    JMP L100009cf1_26     ; inserted

; Entry 100009cf1; block 26; address 100009e65
L100009cf1_26:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L100009cf1_28
    JMP L100009cf1_27     ; inserted

; Entry 100009cf1; block 27; address 100009e6d
L100009cf1_27:
    LEA RSI, [rel L__TEXT___cstring_30388]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100009cf1; block 28; address 100009e7e
L100009cf1_28:
    MOV RDI, RBX
    MOV RSI, R12
    MOV RDX, R14
    CALL _memcpy
    JMP L100009cf1_29     ; inserted

; Entry 100009cf1; block 29; address 100009e8c
L100009cf1_29:
    MOV RDI, R12
    CALL _free
    JMP L100009cf1_30     ; inserted

; Entry 100009cf1; block 30; address 100009e94
L100009cf1_30:
    MOV R12, qword [RBP + -80]
    JMP L100009cf1_19     ; inserted



; ---------------------
; Function: 0x100009f39
; ---------------------
; Entry 100009f39; block 0; address 100009f39
L100009f39_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 72
    MOV R13, RSI
    MOV qword [RBP + -104], RDI
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -48], RAX
    MOV R15, qword [RSI + 48]
    LEA RBX, [rel L__DATA___common + 448]
    LEA R14, [rel L__DATA___common + 400]
    CMP R15, qword [RBX]
    JE L100009f39_2
    JMP L100009f39_1     ; inserted

; Entry 100009f39; block 1; address 100009f76
L100009f39_1:
    MOV RDI, qword [R14]
    TEST RDI, RDI
    JE L100009f39_2
    JMP L100009f39_3     ; inserted

; Entry 100009f39; block 2; address 100009f8a
L100009f39_2:
    MOV qword [RBX], R15
    LEA R12, [rel L__DATA___common + 408]
    MOV RDI, qword [R12]
    MOV RSI, R15
    CALL L1000127e1_0
    JMP L100009f39_5     ; inserted

; Entry 100009f39; block 3; address 100009f7e
L100009f39_3:
    CALL _fclose
    JMP L100009f39_4     ; inserted

; Entry 100009f39; block 4; address 100009f83
L100009f39_4:
    MOV qword [R14], 0
    JMP L100009f39_2     ; inserted

; Entry 100009f39; block 5; address 100009fa0
L100009f39_5:
    MOV RBX, RAX
    MOV RAX, qword [R14]
    TEST RAX, RAX
    JNE L100009f39_7
    JMP L100009f39_6     ; inserted

; Entry 100009f39; block 6; address 100009fab
L100009f39_6:
    LEA RSI, [rel L__TEXT___cstring_6381]
    MOV RDI, RBX
    CALL _fopen
    JMP L100009f39_8     ; inserted

; Entry 100009f39; block 7; address 10000a00b
L100009f39_7:
    MOV RSI, qword [R13 + 64]
    MOV RDI, RAX
    XOR EDX, EDX
    CALL _fseeko
    JMP L100009f39_18     ; inserted

; Entry 100009f39; block 8; address 100009fba
L100009f39_8:
    MOV qword [R14], RAX
    TEST RAX, RAX
    JNE L100009f39_7
    JMP L100009f39_9     ; inserted

; Entry 100009f39; block 9; address 100009fc2
L100009f39_9:
    MOV qword [RBP + -88], R13
    LEA R13, [rel L__TEXT___cstring_6381]
    JMP L100009f39_16     ; inserted

; Entry 100009f39; block 10; address 100009fd5
L100009f39_10:
    TEST EAX, EAX
    JNE L100009f39_12
    JMP L100009f39_11     ; inserted

; Entry 100009f39; block 11; address 100009fdd
L100009f39_11:
    MOV RDI, RBX
    CALL _free
    JMP L100009f39_13     ; inserted

; Entry 100009f39; block 12; address 10000a2c3
L100009f39_12:
    MOV EBX, 9
    JMP L100009f39_37

; Entry 100009f39; block 13; address 100009fe5
L100009f39_13:
    MOV RDI, qword [R12]
    MOV RSI, R15
    CALL L1000127e1_0
    JMP L100009f39_14     ; inserted

; Entry 100009f39; block 14; address 100009ff1
L100009f39_14:
    MOV RBX, RAX
    MOV RDI, RAX
    MOV RSI, R13
    CALL _fopen
    JMP L100009f39_15     ; inserted

; Entry 100009f39; block 15; address 100009fff
L100009f39_15:
    MOV qword [R14], RAX
    TEST RAX, RAX
    JE L100009f39_16
    JMP L100009f39_17     ; inserted

; Entry 100009f39; block 16; address 100009fcd
L100009f39_16:
    MOV RDI, R15
    CALL L1000128e3_0
    JMP L100009f39_10     ; inserted

; Entry 100009f39; block 17; address 10000a007
L100009f39_17:
    MOV R13, qword [RBP + -88]
    JMP L100009f39_7     ; inserted

; Entry 100009f39; block 18; address 10000a019
L100009f39_18:
    MOV RDI, qword [R14]
    TEST EAX, EAX
    JE L100009f39_20
    JMP L100009f39_19     ; inserted

; Entry 100009f39; block 19; address 10000a020
L100009f39_19:
    CALL _fclose
    JMP L100009f39_21     ; inserted

; Entry 100009f39; block 20; address 10000a071
L100009f39_20:
    LEA RSI, [rel L__TEXT___cstring_30429]
    CALL L10000a311_0
    JMP L100009f39_27     ; inserted

; Entry 100009f39; block 21; address 10000a025
L100009f39_21:
    MOV qword [R14], 0
    CALL ___error
    JMP L100009f39_22     ; inserted

; Entry 100009f39; block 22; address 10000a031
L100009f39_22:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L100009f39_23     ; inserted

; Entry 100009f39; block 23; address 10000a038
L100009f39_23:
    LEA RDI, [rel L__TEXT___cstring_30405]
    MOV RSI, RAX
    CALL L1000034f4_0
    JMP L100009f39_24     ; inserted

; Entry 100009f39; block 24; address 10000a047
L100009f39_24:
    MOV EBX, 11
    JMP L100009f39_37     ; inserted

; Entry 100009f39; block 25; address 10000a060
L100009f39_25:
    MOV EAX, EBX
    ADD RSP, 72
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100009f39; block 26; address 10000a30c
L100009f39_26:
    CALL ___stack_chk_fail

; Entry 100009f39; block 27; address 10000a07d
L100009f39_27:
    MOV RCX, qword [R14]
    TEST EAX, EAX
    JE L100009f39_29
    JMP L100009f39_28     ; inserted

; Entry 100009f39; block 28; address 10000a088
L100009f39_28:
    LEA RDI, [RBP + -80]
    MOV ESI, 26
    MOV EDX, 1
    CALL _fread
    JMP L100009f39_30     ; inserted

; Entry 100009f39; block 29; address 10000a25b
L100009f39_29:
    MOV RDI, RCX
    CALL _fclose
    JMP L100009f39_59     ; inserted

; Entry 100009f39; block 30; address 10000a09b
L100009f39_30:
    CMP RAX, 1
    JNE L100009f39_32
    JMP L100009f39_31     ; inserted

; Entry 100009f39; block 31; address 10000a0a5
L100009f39_31:
    MOV EDI, 160
    CALL _malloc
    JMP L100009f39_33     ; inserted

; Entry 100009f39; block 32; address 10000a284
L100009f39_32:
    MOV RDI, qword [R14]
    CALL _ferror
    JMP L100009f39_61     ; inserted

; Entry 100009f39; block 33; address 10000a0af
L100009f39_33:
    TEST RAX, RAX
    JE L100009f39_35
    JMP L100009f39_34     ; inserted

; Entry 100009f39; block 34; address 10000a0b8
L100009f39_34:
    MOV R15, RAX
    MOV qword [RBP + -88], R13
    MOVZX EAX, word [RBP + -80]
    MOV word [R15 + 2], AX
    MOVZX EAX, word [RBP + -78]
    MOV word [R15 + 58], AX
    MOVZX EAX, word [RBP + -76]
    MOV word [R15 + 6], AX
    MOV EAX, dword [RBP + -74]
    MOV qword [R15 + 8], RAX
    MOV EAX, dword [RBP + -70]
    MOV qword [R15 + 16], RAX
    MOVZX EAX, word [RBP + -58]
    MOV word [R15 + 40], AX
    MOVZX ECX, word [RBP + -56]
    MOV R12, RCX
    MOV word [R15 + 42], CX
    MOV qword [RBP + -96], RAX
    LEA RDI, [RAX + 1]
    XORPS XMM0, XMM0
    MOVUPS oword [R15 + 80], XMM0
    MOVUPS oword [R15 + 120], XMM0
    CALL _malloc
    JMP L100009f39_36     ; inserted

; Entry 100009f39; block 35; address 10000a2cd
L100009f39_35:
    LEA RDI, [rel L__TEXT___cstring_30480]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L100009f39_66     ; inserted

; Entry 100009f39; block 36; address 10000a117
L100009f39_36:
    MOV qword [R15 + 112], RAX
    MOV EBX, 4
    TEST RAX, RAX
    JE L100009f39_37
    JMP L100009f39_38     ; inserted

; Entry 100009f39; block 37; address 10000a04c
L100009f39_37:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -48]
    JNE L100009f39_26
    JMP L100009f39_25     ; inserted

; Entry 100009f39; block 38; address 10000a129
L100009f39_38:
    MOV R13, RAX
    TEST R12W, R12W
    JE L100009f39_40
    JMP L100009f39_39     ; inserted

; Entry 100009f39; block 39; address 10000a132
L100009f39_39:
    MOV RDI, R12
    CALL _malloc
    JMP L100009f39_41     ; inserted

; Entry 100009f39; block 40; address 10000a147
L100009f39_40:
    MOV RCX, qword [R14]
    MOV EDX, 1
    MOV RDI, R13
    MOV RSI, qword [RBP + -96]
    CALL _fread
    JMP L100009f39_42     ; inserted

; Entry 100009f39; block 41; address 10000a13a
L100009f39_41:
    MOV qword [R15 + 88], RAX
    TEST RAX, RAX
    JE L100009f39_37
    JMP L100009f39_40     ; inserted

; Entry 100009f39; block 42; address 10000a15b
L100009f39_42:
    CMP RAX, 1
    JNE L100009f39_44
    JMP L100009f39_43     ; inserted

; Entry 100009f39; block 43; address 10000a165
L100009f39_43:
    MOVZX ESI, word [R15 + 42]
    TEST RSI, RSI
    JE L100009f39_46
    JMP L100009f39_45     ; inserted

; Entry 100009f39; block 44; address 10000a2f2
L100009f39_44:
    MOV RDI, qword [R14]
    CALL _ferror
    JMP L100009f39_68     ; inserted

; Entry 100009f39; block 45; address 10000a16f
L100009f39_45:
    MOV RDI, qword [R15 + 88]
    MOV RCX, qword [R14]
    MOV EDX, 1
    CALL _fread
    JMP L100009f39_47     ; inserted

; Entry 100009f39; block 46; address 10000a18a
L100009f39_46:
    MOV RAX, qword [R15 + 112]
    MOV R14, qword [RBP + -88]
    MOVZX ECX, word [R14 + 40]
    MOV byte [RAX + RCX], 0
    MOVZX EDI, word [R15 + 40]
    INC RDI
    CALL _malloc
    JMP L100009f39_48     ; inserted

; Entry 100009f39; block 47; address 10000a180
L100009f39_47:
    CMP RAX, 1
    JNE L100009f39_44
    JMP L100009f39_46     ; inserted

; Entry 100009f39; block 48; address 10000a1a8
L100009f39_48:
    MOV qword [R15 + 80], RAX
    TEST RAX, RAX
    JE L100009f39_37
    JMP L100009f39_49     ; inserted

; Entry 100009f39; block 49; address 10000a1b5
L100009f39_49:
    MOV RSI, qword [R15 + 112]
    MOV RDI, RAX
    CALL _strcpy
    JMP L100009f39_50     ; inserted

; Entry 100009f39; block 50; address 10000a1c1
L100009f39_50:
    MOV RDI, R15
    CALL L10000a384_0
    JMP L100009f39_51     ; inserted

; Entry 100009f39; block 51; address 10000a1c9
L100009f39_51:
    LEA RCX, [rel L__DATA___common + 304]
    MOV dword [RCX], EAX
    MOVZX R8D, word [R15 + 2]
    MOVZX R9D, word [R14 + 2]
    CMP R8W, R9W
    JE L100009f39_53
    JMP L100009f39_52     ; inserted

; Entry 100009f39; block 52; address 10000a1e2
L100009f39_52:
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_30494]
    MOV EDX, 5105
    MOV RDI, RBX
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L100009f39_54     ; inserted

; Entry 100009f39; block 53; address 10000a20d
L100009f39_53:
    MOVZX EAX, word [R15 + 58]
    CMP AX, word [R14 + 4]
    JE L100009f39_56
    JMP L100009f39_55     ; inserted

; Entry 100009f39; block 54; address 10000a201
L100009f39_54:
    MOV RSI, qword [R14 + 112]
    MOV RDI, RBX
    CALL L1000034f4_0
    JMP L100009f39_53     ; inserted

; Entry 100009f39; block 55; address 10000a219
L100009f39_55:
    MOV RSI, qword [R14 + 112]
    LEA RDI, [rel L__TEXT___cstring_30545]
    CALL L1000034f4_0
    JMP L100009f39_56     ; inserted

; Entry 100009f39; block 56; address 10000a229
L100009f39_56:
    MOV RAX, qword [R15 + 16]
    CMP RAX, qword [R14 + 16]
    JE L100009f39_58
    JMP L100009f39_57     ; inserted

; Entry 100009f39; block 57; address 10000a233
L100009f39_57:
    MOV RSI, qword [R14 + 112]
    LEA RDI, [rel L__TEXT___cstring_30582]
    CALL L1000034f4_0
    JMP L100009f39_58     ; inserted

; Entry 100009f39; block 58; address 10000a243
L100009f39_58:
    MOVUPS XMM0, oword [R14 + 24]
    MOVUPS oword [R15 + 24], XMM0
    MOV RAX, qword [RBP + -104]
    MOV qword [RAX], R15
    XOR EBX, EBX
    JMP L100009f39_37

; Entry 100009f39; block 59; address 10000a263
L100009f39_59:
    MOV qword [R14], 0
    MOV RSI, qword [R13 + 112]
    LEA RDI, [rel L__TEXT___cstring_30434]
    CALL L1000034f4_0
    JMP L100009f39_60     ; inserted

; Entry 100009f39; block 60; address 10000a27a
L100009f39_60:
    MOV EBX, 3
    JMP L100009f39_37

; Entry 100009f39; block 61; address 10000a28c
L100009f39_61:
    MOV EBX, EAX
    CALL ___error
    JMP L100009f39_62     ; inserted

; Entry 100009f39; block 62; address 10000a293
L100009f39_62:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L100009f39_63     ; inserted

; Entry 100009f39; block 63; address 10000a29a
L100009f39_63:
    LEA RDI, [rel L__TEXT___cstring_30458]
    MOV RSI, RAX
    CALL L1000034f4_0
    JMP L100009f39_64     ; inserted

; Entry 100009f39; block 64; address 10000a2a9
L100009f39_64:
    MOV RDI, qword [R14]
    CALL _fclose
    JMP L100009f39_65     ; inserted

; Entry 100009f39; block 65; address 10000a2b1
L100009f39_65:
    XOR EAX, EAX
    TEST EBX, EBX
    SETNE AL
    LEA EBX, [RAX + RAX * 8]
    ADD EBX, 2
    JMP L100009f39_37

; Entry 100009f39; block 66; address 10000a2e0
L100009f39_66:
    MOV RDI, qword [R14]
    CALL _fclose
    JMP L100009f39_67     ; inserted

; Entry 100009f39; block 67; address 10000a2e8
L100009f39_67:
    MOV EBX, 4
    JMP L100009f39_37

; Entry 100009f39; block 68; address 10000a2fa
L100009f39_68:
    XOR ECX, ECX
    TEST EAX, EAX
    SETNE CL
    LEA EBX, [RCX + RCX * 8]
    ADD EBX, 2
    JMP L100009f39_37



; ---------------------
; Function: 0x10000a311
; ---------------------
; Entry 10000a311; block 0; address 10000a311
L10000a311_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH RBX
    PUSH RAX
    MOV RCX, RDI
    MOV EBX, dword [RSI]
    MOV dword [RBP + -12], EBX
    CMP BL, 80
    JNE L10000a311_2
    JMP L10000a311_1     ; inserted

; Entry 10000a311; block 1; address 10000a324
L10000a311_1:
    MOV byte [RBP + -12], 80
    JMP L10000a311_2     ; inserted

; Entry 10000a311; block 2; address 10000a328
L10000a311_2:
    CMP byte [RBP + -11], 75
    JNE L10000a311_4
    JMP L10000a311_3     ; inserted

; Entry 10000a311; block 3; address 10000a32e
L10000a311_3:
    MOV byte [RBP + -11], 75
    JMP L10000a311_4     ; inserted

; Entry 10000a311; block 4; address 10000a332
L10000a311_4:
    LEA RDI, [RBP + -16]
    MOV ESI, 1
    MOV EDX, 4
    CALL _fread
    JMP L10000a311_5     ; inserted

; Entry 10000a311; block 5; address 10000a345
L10000a311_5:
    MOV RCX, RAX
    XOR EAX, EAX
    CMP RCX, 4
    JNE L10000a311_7
    JMP L10000a311_6     ; inserted

; Entry 10000a311; block 6; address 10000a350
L10000a311_6:
    CMP BL, byte [RBP + -16]
    JNE L10000a311_7
    JMP L10000a311_8     ; inserted

; Entry 10000a311; block 7; address 10000a37d
L10000a311_7:
    ADD RSP, 8
    POP RBX
    POP RBP
    RET 

; Entry 10000a311; block 8; address 10000a355
L10000a311_8:
    XOR EAX, EAX
    JMP L10000a311_11     ; inserted

; Entry 10000a311; block 9; address 10000a35d
L10000a311_9:
    LEA RCX, [RAX + 1]
    MOV DL, byte [RBP + RAX-1]
    CMP DL, byte [RBP + RAX-1]
    MOV RAX, RCX
    JE L10000a311_11
    JMP L10000a311_12     ; inserted

; Entry 10000a311; block 10; address 10000a378
L10000a311_10:
    MOV EAX, 1
    JMP L10000a311_7     ; inserted

; Entry 10000a311; block 11; address 10000a357
L10000a311_11:
    CMP RAX, 3
    JE L10000a311_10
    JMP L10000a311_9     ; inserted

; Entry 10000a311; block 12; address 10000a36e
L10000a311_12:
    XOR EAX, EAX
    CMP ECX, 4
    SETE AL
    JMP L10000a311_7



; ---------------------
; Function: 0x10000a384
; ---------------------
; Entry 10000a384; block 0; address 10000a384
L10000a384_0:
    PUSH RBP
    MOV RBP, RSP
    LEA R8, [rel L__DATA___common + 304]
    MOV dword [R8], 0
    MOV RCX, qword [RDI + 88]
    XOR EAX, EAX
    TEST RCX, RCX
    JE L10000a384_2
    JMP L10000a384_1     ; inserted

; Entry 10000a384; block 1; address 10000a3a1
L10000a384_1:
    MOVZX ESI, word [RDI + 42]
    ADD RSI, RCX
    ADD RSI, 18446744073709551612
    CMP RSI, RCX
    JBE L10000a384_2
    JMP L10000a384_3     ; inserted

; Entry 10000a384; block 2; address 10000a3ff
L10000a384_2:
    POP RBP
    RET 

; Entry 10000a384; block 3; address 10000a3b1
L10000a384_3:
    CMP word [RCX], 1
    JE L10000a384_5
    JMP L10000a384_4     ; inserted

; Entry 10000a384; block 4; address 10000a3b7
L10000a384_4:
    MOVZX EDX, word [RCX + 2]
    ADD RCX, RDX
    ADD RCX, 4
    CMP RCX, RSI
    JB L10000a384_3
    JMP L10000a384_6     ; inserted

; Entry 10000a384; block 5; address 10000a3c9
L10000a384_5:
    MOV dword [R8], 1
    MOV EDX, 4294967295
    CMP qword [RDI + 32], RDX
    JNE L10000a384_8
    JMP L10000a384_7     ; inserted

; Entry 10000a384; block 6; address 10000a3c7
L10000a384_6:
    JMP L10000a384_2

; Entry 10000a384; block 7; address 10000a3db
L10000a384_7:
    MOV RAX, qword [RCX + 4]
    MOV qword [RDI + 32], RAX
    ADD RCX, 12
    JMP L10000a384_9

; Entry 10000a384; block 8; address 10000a3e9
L10000a384_8:
    ADD RCX, 4
    JMP L10000a384_9     ; inserted

; Entry 10000a384; block 9; address 10000a3ed
L10000a384_9:
    MOV EAX, 1
    CMP qword [RDI + 24], RDX
    JNE L10000a384_2
    JMP L10000a384_10     ; inserted

; Entry 10000a384; block 10; address 10000a3f8
L10000a384_10:
    MOV RCX, qword [RCX]
    MOV qword [RDI + 24], RCX
    JMP L10000a384_2     ; inserted



; ---------------------
; Function: 0x10000a401
; ---------------------
; Entry 10000a401; block 0; address 10000a401
L10000a401_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 200
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -48], RAX
    LEA RCX, [rel L__DATA___common + 6368]
    XOR EAX, EAX
    MOV qword [RCX], RAX
    LEA RCX, [rel L__DATA___common + 616]
    MOV qword [RCX], RAX
    LEA RCX, [rel L__DATA___common + 6360]
    MOV qword [RCX], RAX
    LEA R14, [rel L__DATA___common + 6352]
    MOV word [R14], 0
    LEA R15, [rel L__DATA___common + 624]
    MOV dword [R15], 0
    LEA R13, [rel L__DATA___common + 6376]
    MOV RBX, qword [R13]
    TEST RBX, RBX
    JE L10000a401_2
    JMP L10000a401_1     ; inserted

; Entry 10000a401; block 1; address 10000a46e
L10000a401_1:
    CMP byte [RBX], 0
    JE L10000a401_2
    JMP L10000a401_3     ; inserted

; Entry 10000a401; block 2; address 10000a4a6
L10000a401_2:
    LEA RAX, [rel L__DATA___common + 284]
    CMP dword [RAX], 0
    LEA RAX, [rel L__DATA___common + 64]
    MOV EBX, dword [RAX]
    JNE L10000a401_9
    JMP L10000a401_8     ; inserted

; Entry 10000a401; block 3; address 10000a473
L10000a401_3:
    LEA RSI, [rel L__TEXT___cstring_7743]
    MOV RDI, RBX
    CALL _strcmp
    JMP L10000a401_4     ; inserted

; Entry 10000a401; block 4; address 10000a482
L10000a401_4:
    TEST EAX, EAX
    JE L10000a401_2
    JMP L10000a401_5     ; inserted

; Entry 10000a401; block 5; address 10000a486
L10000a401_5:
    LEA RSI, [rel L__TEXT___cstring_6381]
    MOV RDI, RBX
    CALL _fopen
    JMP L10000a401_6     ; inserted

; Entry 10000a401; block 6; address 10000a495
L10000a401_6:
    TEST RAX, RAX
    JE L10000a401_2
    JMP L10000a401_7     ; inserted

; Entry 10000a401; block 7; address 10000a49a
L10000a401_7:
    MOV dword [R15], 1
    MOV R12B, 1
    JMP L10000a401_16

; Entry 10000a401; block 8; address 10000a4bf
L10000a401_8:
    CMP EBX, 2
    JE L10000a401_9
    JMP L10000a401_10     ; inserted

; Entry 10000a401; block 9; address 10000a559
L10000a401_9:
    XOR R12D, R12D
    CMP EBX, 2
    JNE L10000a401_20
    JMP L10000a401_18     ; inserted

; Entry 10000a401; block 10; address 10000a4c8
L10000a401_10:
    LEA RAX, [rel L__DATA___common + 408]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 424]
    MOV RSI, qword [RAX]
    CALL _strcmp
    JMP L10000a401_11     ; inserted

; Entry 10000a401; block 11; address 10000a4e1
L10000a401_11:
    TEST EAX, EAX
    JE L10000a401_13
    JMP L10000a401_12     ; inserted

; Entry 10000a401; block 12; address 10000a4e5
L10000a401_12:
    CMP EBX, 1
    JNE L10000a401_15
    JMP L10000a401_14     ; inserted

; Entry 10000a401; block 13; address 10000a50b
L10000a401_13:
    XOR R12D, R12D
    XOR EAX, EAX
    JMP L10000a401_16     ; inserted

; Entry 10000a401; block 14; address 10000a4ea
L10000a401_14:
    LEA RDI, [rel L__TEXT___cstring_30618]
    LEA RSI, [rel L__TEXT___cstring_30646]
    CALL L1000034f4_0
    JMP L10000a401_15     ; inserted

; Entry 10000a401; block 15; address 10000a4fd
L10000a401_15:
    MOV RSI, qword [R13]
    MOV EDI, 18
    CALL L100002e30_0

; Entry 10000a401; block 16; address 10000a510
L10000a401_16:
    LEA RBX, [rel L__DATA___common + 64]
    CMP dword [RBX], 2
    JE L10000a401_18
    JMP L10000a401_17     ; inserted

; Entry 10000a401; block 17; address 10000a51c
L10000a401_17:
    TEST R12B, R12B
    MOV R12D, 0
    JE L10000a401_20
    JMP L10000a401_19     ; inserted

; Entry 10000a401; block 18; address 10000a565
L10000a401_18:
    CALL L10000bca0_0
    JMP L10000a401_26     ; inserted

; Entry 10000a401; block 19; address 10000a52b
L10000a401_19:
    MOV RDI, RAX
    CALL _fclose
    JMP L10000a401_21     ; inserted

; Entry 10000a401; block 20; address 10000a5fb
L10000a401_20:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -48]
    JNE L10000a401_39
    JMP L10000a401_38     ; inserted

; Entry 10000a401; block 21; address 10000a533
L10000a401_21:
    CMP dword [RBX], 2
    LEA RAX, [rel L__DATA___common + 72]
    JNE L10000a401_23
    JMP L10000a401_22     ; inserted

; Entry 10000a401; block 22; address 10000a543
L10000a401_22:
    CMP dword [RAX], 0
    JNE L10000a401_23
    JMP L10000a401_24     ; inserted

; Entry 10000a401; block 23; address 10000a624
L10000a401_23:
    LEA R15, [rel L__DATA___common + 408]
    MOV RDI, qword [R15]
    LEA RSI, [rel L__TEXT___cstring_6381]
    CALL _fopen
    JMP L10000a401_40     ; inserted

; Entry 10000a401; block 24; address 10000a54c
L10000a401_24:
    MOV R12B, 1
    CALL L10000bca0_0
    JMP L10000a401_25     ; inserted

; Entry 10000a401; block 25; address 10000a554
L10000a401_25:
    MOV R14D, EAX
    JMP L10000a401_27

; Entry 10000a401; block 26; address 10000a56a
L10000a401_26:
    XOR R14D, R14D
    JMP L10000a401_27     ; inserted

; Entry 10000a401; block 27; address 10000a56d
L10000a401_27:
    TEST R12B, R12B
    JE L10000a401_29
    JMP L10000a401_28     ; inserted

; Entry 10000a401; block 28; address 10000a576
L10000a401_28:
    LEA RAX, [rel L__DATA___common + 64]
    CMP dword [RAX], 2
    JE L10000a401_29
    JMP L10000a401_30     ; inserted

; Entry 10000a401; block 29; address 10000a5f8
L10000a401_29:
    MOV R12D, R14D
    JMP L10000a401_20     ; inserted

; Entry 10000a401; block 30; address 10000a582
L10000a401_30:
    LEA RAX, [rel L__DATA___common + 6360]
    MOV R15, qword [RAX]
    TEST R15, R15
    JE L10000a401_29
    JMP L10000a401_31     ; inserted

; Entry 10000a401; block 31; address 10000a591
L10000a401_31:
    MOV RAX, R15
    SHR RAX, 61
    MOV R12D, 4
    JNE L10000a401_20
    JMP L10000a401_32     ; inserted

; Entry 10000a401; block 32; address 10000a5a0
L10000a401_32:
    LEA RDI, [R15 * 8]
    CALL _malloc
    JMP L10000a401_33     ; inserted

; Entry 10000a401; block 33; address 10000a5ad
L10000a401_33:
    LEA RCX, [rel L__DATA___common + 6384]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JE L10000a401_20
    JMP L10000a401_34     ; inserted

; Entry 10000a401; block 34; address 10000a5bc
L10000a401_34:
    LEA RCX, [rel L__DATA___common + 616]
    MOV RCX, qword [RCX]
    TEST RCX, RCX
    JE L10000a401_36
    JMP L10000a401_35     ; inserted

; Entry 10000a401; block 35; address 10000a5cb
L10000a401_35:
    MOV RDX, RAX
    JMP L10000a401_37     ; inserted

; Entry 10000a401; block 36; address 10000a5e1
L10000a401_36:
    LEA RCX, [rel L__TEXT___text + 41544]
    MOV EDX, 8
    MOV RDI, RAX
    MOV RSI, R15
    CALL _qsort
    JMP L10000a401_29     ; inserted

; Entry 10000a401; block 37; address 10000a5ce
L10000a401_37:
    MOV qword [RDX], RCX
    ADD RDX, 8
    MOV RCX, qword [RCX + 152]
    TEST RCX, RCX
    JNE L10000a401_37
    JMP L10000a401_36     ; inserted

; Entry 10000a401; block 38; address 10000a60f
L10000a401_38:
    MOV EAX, R12D
    ADD RSP, 200
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000a401; block 39; address 10000b11a
L10000a401_39:
    CALL ___stack_chk_fail

; Entry 10000a401; block 40; address 10000a63a
L10000a401_40:
    LEA R12, [rel L__DATA___common + 400]
    MOV qword [R12], RAX
    TEST RAX, RAX
    JE L10000a401_42
    JMP L10000a401_41     ; inserted

; Entry 10000a401; block 41; address 10000a64a
L10000a401_41:
    MOV RDI, RAX
    MOV RSI, 18446744073709420544
    MOV EDX, 2
    CALL _fseeko
    JMP L10000a401_43     ; inserted

; Entry 10000a401; block 42; address 10000a68c
L10000a401_42:
    MOV RSI, qword [R15]
    LEA RDI, [rel L__TEXT___cstring_33431]
    CALL L1000034f4_0
    JMP L10000a401_50     ; inserted

; Entry 10000a401; block 43; address 10000a65e
L10000a401_43:
    TEST EAX, EAX
    JE L10000a401_45
    JMP L10000a401_44     ; inserted

; Entry 10000a401; block 44; address 10000a662
L10000a401_44:
    MOV RDI, qword [R12]
    XOR ESI, ESI
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000a401_46     ; inserted

; Entry 10000a401; block 45; address 10000a6a6
L10000a401_45:
    MOV RDI, qword [R12]
    CALL _ftello
    JMP L10000a401_51     ; inserted

; Entry 10000a401; block 46; address 10000a66f
L10000a401_46:
    TEST EAX, EAX
    JE L10000a401_48
    JMP L10000a401_47     ; inserted

; Entry 10000a401; block 47; address 10000a673
L10000a401_47:
    MOV RDI, qword [R12]
    CALL _fclose
    JMP L10000a401_49     ; inserted

; Entry 10000a401; block 48; address 10000a6b5
L10000a401_48:
    MOV RDI, qword [R12]
    LEA RSI, [rel L__TEXT___cstring_31766]
    CALL L10000f1b1_0
    JMP L10000a401_52     ; inserted

; Entry 10000a401; block 49; address 10000a67c
L10000a401_49:
    MOV qword [R12], 0
    MOV RSI, qword [R15]
    JMP L10000a401_66

; Entry 10000a401; block 50; address 10000a69b
L10000a401_50:
    MOV R14D, 18
    JMP L10000a401_68

; Entry 10000a401; block 51; address 10000a6af
L10000a401_51:
    CMP RAX, 18446744073709551615
    JE L10000a401_44
    JMP L10000a401_48     ; inserted

; Entry 10000a401; block 52; address 10000a6c5
L10000a401_52:
    MOV RDI, qword [R12]
    TEST EAX, EAX
    JE L10000a401_54
    JMP L10000a401_53     ; inserted

; Entry 10000a401; block 53; address 10000a6d1
L10000a401_53:
    CALL _ftello
    JMP L10000a401_55     ; inserted

; Entry 10000a401; block 54; address 10000a75b
L10000a401_54:
    CALL _fclose
    JMP L10000a401_69     ; inserted

; Entry 10000a401; block 55; address 10000a6d6
L10000a401_55:
    MOV R15, RAX
    MOV RDI, qword [R12]
    LEA RSI, [rel L__TEXT___cstring_31766]
    CALL L10000f1b1_0
    JMP L10000a401_56     ; inserted

; Entry 10000a401; block 56; address 10000a6e9
L10000a401_56:
    TEST EAX, EAX
    JE L10000a401_58
    JMP L10000a401_57     ; inserted

; Entry 10000a401; block 57; address 10000a6ed
L10000a401_57:
    LEA RBX, [rel L__TEXT___cstring_31766]
    JMP L10000a401_61     ; inserted

; Entry 10000a401; block 58; address 10000a710
L10000a401_58:
    MOV RDI, qword [R12]
    MOV RSI, R15
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000a401_62     ; inserted

; Entry 10000a401; block 59; address 10000a6fd
L10000a401_59:
    MOV R15, RAX
    MOV RDI, qword [R12]
    MOV RSI, RBX
    CALL L10000f1b1_0
    JMP L10000a401_60     ; inserted

; Entry 10000a401; block 60; address 10000a70c
L10000a401_60:
    TEST EAX, EAX
    JNE L10000a401_61
    JMP L10000a401_58     ; inserted

; Entry 10000a401; block 61; address 10000a6f4
L10000a401_61:
    MOV RDI, qword [R12]
    CALL _ftello
    JMP L10000a401_59     ; inserted

; Entry 10000a401; block 62; address 10000a71e
L10000a401_62:
    MOV RCX, qword [R12]
    TEST EAX, EAX
    JE L10000a401_64
    JMP L10000a401_63     ; inserted

; Entry 10000a401; block 63; address 10000a72a
L10000a401_63:
    MOV RDI, RCX
    CALL _fclose
    JMP L10000a401_65     ; inserted

; Entry 10000a401; block 64; address 10000a7b1
L10000a401_64:
    LEA RBX, [RBP + -112]
    MOV ESI, 1
    MOV EDX, 18
    MOV RDI, RBX
    CALL _fread
    JMP L10000a401_75     ; inserted

; Entry 10000a401; block 65; address 10000a732
L10000a401_65:
    MOV qword [R12], 0
    LEA RAX, [rel L__DATA___common + 408]
    MOV RSI, qword [RAX]
    JMP L10000a401_66     ; inserted

; Entry 10000a401; block 66; address 10000a744
L10000a401_66:
    LEA RDI, [rel L__TEXT___cstring_31736]
    JMP L10000a401_211     ; inserted

; Entry 10000a401; block 67; address 10000a750
L10000a401_67:
    MOV R14D, 11
    JMP L10000a401_68

; Entry 10000a401; block 68; address 10000a9bd
L10000a401_68:
    MOV R12B, 1
    JMP L10000a401_27

; Entry 10000a401; block 69; address 10000a760
L10000a401_69:
    MOV qword [R12], 0
    CMP dword [RBX], 1
    JNE L10000a401_71
    JMP L10000a401_70     ; inserted

; Entry 10000a401; block 70; address 10000a771
L10000a401_70:
    LEA RDI, [rel L__TEXT___cstring_33460]
    LEA RBX, [rel L__TEXT___cstring_244]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_72     ; inserted

; Entry 10000a401; block 71; address 10000a983
L10000a401_71:
    LEA RDI, [rel L__TEXT___cstring_33624]
    LEA RBX, [rel L__TEXT___cstring_244]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_108     ; inserted

; Entry 10000a401; block 72; address 10000a787
L10000a401_72:
    LEA RDI, [rel L__TEXT___cstring_33496]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_73     ; inserted

; Entry 10000a401; block 73; address 10000a796
L10000a401_73:
    LEA RDI, [rel L__TEXT___cstring_33547]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_74     ; inserted

; Entry 10000a401; block 74; address 10000a7a5
L10000a401_74:
    LEA RDI, [rel L__TEXT___cstring_33594]
    JMP L10000a401_110

; Entry 10000a401; block 75; address 10000a7c7
L10000a401_75:
    MOVZX EAX, word [RBX]
    LEA RCX, [RAX + 1]
    LEA RDX, [rel L__DATA___common + 440]
    MOV qword [RDX], RCX
    LEA RCX, [rel L__DATA___common + 448]
    MOV qword [RCX], RAX
    MOVZX EAX, word [RBX + 2]
    MOV qword [RBP + -176], RAX
    MOV EAX, dword [RBX + 8]
    MOV qword [RBP + -168], RAX
    MOV EAX, dword [RBX + 12]
    MOV qword [RBP + -184], RAX
    MOVZX EAX, word [RBX + 6]
    MOVZX EBX, word [RBX + 16]
    MOV word [R14], BX
    TEST BX, BX
    MOV qword [RBP + -192], RAX
    JE L10000a401_77
    JMP L10000a401_76     ; inserted

; Entry 10000a401; block 76; address 10000a819
L10000a401_76:
    LEA RDI, [RBX + 1]
    CALL _malloc
    JMP L10000a401_78     ; inserted

; Entry 10000a401; block 77; address 10000a86c
L10000a401_77:
    TEST RAX, RAX
    JE L10000a401_85
    JMP L10000a401_84     ; inserted

; Entry 10000a401; block 78; address 10000a822
L10000a401_78:
    LEA RCX, [rel L__DATA___common + 632]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JE L10000a401_80
    JMP L10000a401_79     ; inserted

; Entry 10000a401; block 79; address 10000a835
L10000a401_79:
    MOV RCX, qword [R12]
    MOV EDX, 1
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _fread
    JMP L10000a401_81     ; inserted

; Entry 10000a401; block 80; address 10000bbe4
L10000a401_80:
    MOV R14D, 4
    JMP L10000a401_68

; Entry 10000a401; block 81; address 10000a849
L10000a401_81:
    LEA RBX, [rel L__DATA___common + 632]
    MOV RDI, qword [RBX]
    CMP RAX, 1
    JNE L10000a401_83
    JMP L10000a401_82     ; inserted

; Entry 10000a401; block 82; address 10000a85d
L10000a401_82:
    MOVZX EAX, word [R14]
    MOV byte [RDI + RAX], 0
    MOV RAX, qword [RBP + -192]
    JMP L10000a401_77     ; inserted

; Entry 10000a401; block 83; address 10000a9db
L10000a401_83:
    CALL _free
    JMP L10000a401_113     ; inserted

; Entry 10000a401; block 84; address 10000a875
L10000a401_84:
    MOV R14D, 1
    LEA RAX, [rel L__DATA___common + 440]
    CMP qword [RAX], 1
    JNE L10000a401_87
    JMP L10000a401_86     ; inserted

; Entry 10000a401; block 85; address 10000a9c5
L10000a401_85:
    MOV RDI, qword [R12]
    CALL _fclose
    JMP L10000a401_112     ; inserted

; Entry 10000a401; block 86; address 10000a88c
L10000a401_86:
    CMP R14, 1
    SETE AL
    LEA RCX, [rel L__DATA___common + 564]
    CMP dword [RCX], 0
    SETE CL
    TEST AL, CL
    JNE L10000a401_89
    JMP L10000a401_88     ; inserted

; Entry 10000a401; block 87; address 10000aa01
L10000a401_87:
    LEA RAX, [rel L__DATA___common + 408]
    MOV RDI, qword [RAX]
    CALL _strlen
    JMP L10000a401_115     ; inserted

; Entry 10000a401; block 88; address 10000a8a4
L10000a401_88:
    LEA RAX, [rel L__DATA___common + 300]
    CMP dword [RAX], 0
    JNE L10000a401_89
    JMP L10000a401_90     ; inserted

; Entry 10000a401; block 89; address 10000a8d1
L10000a401_89:
    LEA RAX, [rel L__DATA___common + 64]
    MOV EBX, dword [RAX]
    CMP EBX, 1
    JNE L10000a401_94
    JMP L10000a401_93     ; inserted

; Entry 10000a401; block 90; address 10000a8b0
L10000a401_90:
    LEA RAX, [rel L__DATA___common + 408]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 424]
    MOV RSI, qword [RAX]
    CALL _strcmp
    JMP L10000a401_91     ; inserted

; Entry 10000a401; block 91; address 10000a8c9
L10000a401_91:
    TEST EAX, EAX
    JE L10000a401_92
    JMP L10000a401_89     ; inserted

; Entry 10000a401; block 92; address 10000ab0e
L10000a401_92:
    MOV RDI, qword [R12]
    CALL _fclose
    JMP L10000a401_140     ; inserted

; Entry 10000a401; block 93; address 10000a8df
L10000a401_93:
    LEA RAX, [rel L__DATA___common + 408]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 424]
    MOV RSI, qword [RAX]
    CALL _strcmp
    JMP L10000a401_95     ; inserted

; Entry 10000a401; block 94; address 10000a900
L10000a401_94:
    CMP EBX, 1
    SETE AL
    CMP R14, 1
    SETE CL
    TEST CL, AL
    LEA RAX, [rel L__DATA___common + 72]
    JNE L10000a401_98
    JMP L10000a401_97     ; inserted

; Entry 10000a401; block 95; address 10000a8f8
L10000a401_95:
    TEST EAX, EAX
    JE L10000a401_96
    JMP L10000a401_94     ; inserted

; Entry 10000a401; block 96; address 10000ab93
L10000a401_96:
    MOV RDI, qword [R12]
    CALL _fclose
    JMP L10000a401_151     ; inserted

; Entry 10000a401; block 97; address 10000a91c
L10000a401_97:
    CMP dword [RAX], 0
    JNE L10000a401_98
    JMP L10000a401_99     ; inserted

; Entry 10000a401; block 98; address 10000aaa4
L10000a401_98:
    CMP dword [RBP + -184], 18446744073709551615
    MOV RAX, qword [RBP + -168]
    JE L10000a401_130
    JMP L10000a401_129     ; inserted

; Entry 10000a401; block 99; address 10000a925
L10000a401_99:
    XOR EAX, EAX
    MOV qword [RBP + -168], RAX
    JMP L10000a401_202     ; inserted

; Entry 10000a401; block 100; address 10000a940
L10000a401_100:
    MOV RDI, qword [R12]
    TEST EAX, EAX
    JE L10000a401_102
    JMP L10000a401_101     ; inserted

; Entry 10000a401; block 101; address 10000a94c
L10000a401_101:
    CALL _fclose
    JMP L10000a401_103     ; inserted

; Entry 10000a401; block 102; address 10000abc2
L10000a401_102:
    LEA RSI, [rel L__TEXT___cstring_32410]
    CALL L10000a311_0
    JMP L10000a401_154     ; inserted

; Entry 10000a401; block 103; address 10000a951
L10000a401_103:
    MOV qword [R12], 0
    LEA RAX, [rel L__DATA___common + 64]
    MOV EBX, dword [RAX]
    CALL ___error
    JMP L10000a401_104     ; inserted

; Entry 10000a401; block 104; address 10000a967
L10000a401_104:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000a401_105     ; inserted

; Entry 10000a401; block 105; address 10000a96e
L10000a401_105:
    CMP EBX, 1
    JNE L10000a401_107
    JMP L10000a401_106     ; inserted

; Entry 10000a401; block 106; address 10000a977
L10000a401_106:
    LEA RDI, [rel L__TEXT___cstring_34339]
    JMP L10000a401_139

; Entry 10000a401; block 107; address 10000ad27
L10000a401_107:
    LEA RDI, [rel L__TEXT___cstring_30405]
    MOV RSI, RAX
    JMP L10000a401_150

; Entry 10000a401; block 108; address 10000a999
L10000a401_108:
    LEA RDI, [rel L__TEXT___cstring_33680]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_109     ; inserted

; Entry 10000a401; block 109; address 10000a9a8
L10000a401_109:
    LEA RDI, [rel L__TEXT___cstring_33734]
    JMP L10000a401_110     ; inserted

; Entry 10000a401; block 110; address 10000a9af
L10000a401_110:
    MOV RSI, RBX
    JMP L10000a401_150     ; inserted

; Entry 10000a401; block 111; address 10000a9b7
L10000a401_111:
    MOV R14D, 3
    JMP L10000a401_68     ; inserted

; Entry 10000a401; block 112; address 10000a9ce
L10000a401_112:
    MOV qword [R12], 0
    XOR R14D, R14D
    JMP L10000a401_68

; Entry 10000a401; block 113; address 10000a9e0
L10000a401_113:
    MOV qword [RBX], 0
    JMP L10000a401_324     ; inserted

; Entry 10000a401; block 114; address 10000a9f0
L10000a401_114:
    XOR ECX, ECX
    TEST EAX, EAX
    SETNE CL
    LEA R14D, [RCX + RCX * 8]
    ADD R14D, 2
    JMP L10000a401_68

; Entry 10000a401; block 115; address 10000aa10
L10000a401_115:
    LEA RCX, [rel L__DATA___common + 72]
    CMP dword [RCX], 0
    JE L10000a401_117
    JMP L10000a401_116     ; inserted

; Entry 10000a401; block 116; address 10000aa1c
L10000a401_116:
    LEA RDI, [rel L__TEXT___cstring_33787]
    JMP L10000a401_149

; Entry 10000a401; block 117; address 10000aa28
L10000a401_117:
    CMP EAX, 4
    JL L10000a401_119
    JMP L10000a401_118     ; inserted

; Entry 10000a401; block 118; address 10000aa2d
L10000a401_118:
    MOV R14, qword [R13]
    MOVSXD RBX, EAX
    CMP byte [R14 + RBX-1], 46
    JNE L10000a401_119
    JMP L10000a401_120     ; inserted

; Entry 10000a401; block 119; address 10000aa7b
L10000a401_119:
    LEA RDI, [rel L__TEXT___cstring_8725]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000a401_127     ; inserted

; Entry 10000a401; block 120; address 10000aa3c
L10000a401_120:
    MOVSX EDI, byte [R14 + RBX-1]
    CALL ___toupper
    JMP L10000a401_121     ; inserted

; Entry 10000a401; block 121; address 10000aa47
L10000a401_121:
    CMP EAX, 90
    JNE L10000a401_119
    JMP L10000a401_122     ; inserted

; Entry 10000a401; block 122; address 10000aa4c
L10000a401_122:
    MOVSX EDI, byte [R14 + RBX-1]
    CALL ___toupper
    JMP L10000a401_123     ; inserted

; Entry 10000a401; block 123; address 10000aa57
L10000a401_123:
    CMP EAX, 73
    JNE L10000a401_119
    JMP L10000a401_124     ; inserted

; Entry 10000a401; block 124; address 10000aa5c
L10000a401_124:
    MOVSX EDI, byte [R14 + RBX-1]
    CALL ___toupper
    JMP L10000a401_125     ; inserted

; Entry 10000a401; block 125; address 10000aa67
L10000a401_125:
    CMP EAX, 80
    JNE L10000a401_119
    JMP L10000a401_126     ; inserted

; Entry 10000a401; block 126; address 10000aa6c
L10000a401_126:
    LEA RAX, [rel L__DATA___common + 440]
    MOV R14, qword [RAX]
    JMP L10000a401_86

; Entry 10000a401; block 127; address 10000aa8e
L10000a401_127:
    MOV RDI, qword [R12]
    CALL _fclose
    JMP L10000a401_128     ; inserted

; Entry 10000a401; block 128; address 10000aa97
L10000a401_128:
    MOV qword [R12], 0
    JMP L10000a401_153

; Entry 10000a401; block 129; address 10000aab4
L10000a401_129:
    CMP EAX, 18446744073709551615
    JE L10000a401_130
    JMP L10000a401_131     ; inserted

; Entry 10000a401; block 130; address 10000ab2b
L10000a401_130:
    MOV RDI, qword [R12]
    LEA RSI, [R15 + -24]
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000a401_141     ; inserted

; Entry 10000a401; block 131; address 10000aab9
L10000a401_131:
    MOV RSI, R15
    SUB RSI, RAX
    ADD RSI, 18446744073709551536
    MOV RDI, qword [R12]
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000a401_132     ; inserted

; Entry 10000a401; block 132; address 10000aace
L10000a401_132:
    MOV RDI, qword [R12]
    TEST EAX, EAX
    JE L10000a401_134
    JMP L10000a401_133     ; inserted

; Entry 10000a401; block 133; address 10000aada
L10000a401_133:
    CALL _fclose
    JMP L10000a401_135     ; inserted

; Entry 10000a401; block 134; address 10000ad36
L10000a401_134:
    LEA RSI, [rel L__TEXT___cstring_32542]
    CALL L10000f1b1_0
    JMP L10000a401_183     ; inserted

; Entry 10000a401; block 135; address 10000aadf
L10000a401_135:
    MOV qword [R12], 0
    LEA RAX, [rel L__DATA___common + 64]
    MOV EBX, dword [RAX]
    CALL ___error
    JMP L10000a401_136     ; inserted

; Entry 10000a401; block 136; address 10000aaf5
L10000a401_136:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000a401_137     ; inserted

; Entry 10000a401; block 137; address 10000aafc
L10000a401_137:
    CMP EBX, 1
    JNE L10000a401_107
    JMP L10000a401_138     ; inserted

; Entry 10000a401; block 138; address 10000ab05
L10000a401_138:
    LEA RDI, [rel L__TEXT___cstring_33917]
    JMP L10000a401_139

; Entry 10000a401; block 139; address 10000ab78
L10000a401_139:
    MOV RSI, RAX
    JMP L10000a401_225     ; inserted

; Entry 10000a401; block 140; address 10000ab17
L10000a401_140:
    MOV qword [R12], 0
    LEA RDI, [rel L__TEXT___cstring_33830]
    JMP L10000a401_152

; Entry 10000a401; block 141; address 10000ab3a
L10000a401_141:
    MOV RDI, qword [R12]
    TEST EAX, EAX
    JE L10000a401_143
    JMP L10000a401_142     ; inserted

; Entry 10000a401; block 142; address 10000ab46
L10000a401_142:
    CALL _fclose
    JMP L10000a401_144     ; inserted

; Entry 10000a401; block 143; address 10000ad69
L10000a401_143:
    LEA RSI, [rel L__TEXT___cstring_32410]
    CALL L10000a311_0
    JMP L10000a401_187     ; inserted

; Entry 10000a401; block 144; address 10000ab4b
L10000a401_144:
    MOV qword [R12], 0
    LEA RAX, [rel L__DATA___common + 64]
    MOV EBX, dword [RAX]
    CALL ___error
    JMP L10000a401_145     ; inserted

; Entry 10000a401; block 145; address 10000ab61
L10000a401_145:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000a401_146     ; inserted

; Entry 10000a401; block 146; address 10000ab68
L10000a401_146:
    CMP EBX, 1
    JNE L10000a401_107
    JMP L10000a401_147     ; inserted

; Entry 10000a401; block 147; address 10000ab71
L10000a401_147:
    LEA RDI, [rel L__TEXT___cstring_34037]
    JMP L10000a401_139     ; inserted

; Entry 10000a401; block 148; address 10000ab80
L10000a401_148:
    LEA RDI, [rel L__TEXT___cstring_33969]
    JMP L10000a401_149     ; inserted

; Entry 10000a401; block 149; address 10000ab87
L10000a401_149:
    LEA RSI, [rel L__TEXT___cstring_244]
    JMP L10000a401_150

; Entry 10000a401; block 150; address 10000a9b2
L10000a401_150:
    CALL L1000034f4_0
    JMP L10000a401_111     ; inserted

; Entry 10000a401; block 151; address 10000ab9c
L10000a401_151:
    MOV qword [R12], 0
    LEA RDI, [rel L__TEXT___cstring_33879]
    JMP L10000a401_152     ; inserted

; Entry 10000a401; block 152; address 10000abab
L10000a401_152:
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000a401_153     ; inserted

; Entry 10000a401; block 153; address 10000abb7
L10000a401_153:
    MOV R14D, 16
    JMP L10000a401_68

; Entry 10000a401; block 154; address 10000abce
L10000a401_154:
    TEST EAX, EAX
    JE L10000a401_156
    JMP L10000a401_155     ; inserted

; Entry 10000a401; block 155; address 10000abd6
L10000a401_155:
    MOV RDI, qword [R12]
    CALL _ftello
    JMP L10000a401_157     ; inserted

; Entry 10000a401; block 156; address 10000b1be
L10000a401_156:
    MOV RAX, qword [RBP + -184]
    MOV RCX, RAX
    ADD RCX, qword [RBP + -168]
    LEA RAX, [rel L__DATA___common + 1200]
    MOV qword [RBP + -184], RCX
    MOV qword [RAX], RCX
    LEA RAX, [rel L__DATA___common + 6368]
    MOV qword [RAX], 0
    LEA RAX, [rel L__DATA___common + 448]
    MOV RCX, qword [RBP + -176]
    CMP qword [RAX], RCX
    JE L10000a401_263
    JMP L10000a401_262     ; inserted

; Entry 10000a401; block 157; address 10000abdf
L10000a401_157:
    MOV qword [RBP + -192], RAX
    MOV RCX, qword [R12]
    LEA RDI, [RBP + -112]
    MOV ESI, 16
    MOV EDX, 1
    CALL _fread
    JMP L10000a401_158     ; inserted

; Entry 10000a401; block 158; address 10000abfd
L10000a401_158:
    MOV RDI, qword [R12]
    CMP RAX, 1
    JNE L10000a401_160
    JMP L10000a401_159     ; inserted

; Entry 10000a401; block 159; address 10000ac0b
L10000a401_159:
    LEA RSI, [rel L__TEXT___cstring_31766]
    CALL L10000a311_0
    JMP L10000a401_161     ; inserted

; Entry 10000a401; block 160; address 10000ae66
L10000a401_160:
    CALL _fclose
    JMP L10000a401_208     ; inserted

; Entry 10000a401; block 161; address 10000ac17
L10000a401_161:
    TEST EAX, EAX
    JE L10000a401_163
    JMP L10000a401_162     ; inserted

; Entry 10000a401; block 162; address 10000ac1f
L10000a401_162:
    MOV R14D, dword [RBP + -112]
    MOV EAX, dword [RBP + -100]
    MOV RCX, qword [RBP + -108]
    ADD RCX, qword [RBP + -168]
    MOV qword [RBP + -184], RCX
    LEA RCX, [rel L__DATA___common + 440]
    MOV qword [RCX], RAX
    DEC RAX
    LEA RCX, [rel L__DATA___common + 448]
    MOV qword [RCX], RAX
    CMP R14, RAX
    JE L10000a401_165
    JMP L10000a401_164     ; inserted

; Entry 10000a401; block 163; address 10000ae8e
L10000a401_163:
    MOV RDI, qword [R12]
    CALL _fclose
    JMP L10000a401_212     ; inserted

; Entry 10000a401; block 164; address 10000ac58
L10000a401_164:
    MOV RDI, qword [R12]
    CALL _fclose
    JMP L10000a401_166     ; inserted

; Entry 10000a401; block 165; address 10000ace6
L10000a401_165:
    LEA RAX, [rel L__DATA___common + 448]
    MOV qword [RAX], R14
    MOV RDI, qword [R12]
    MOV RSI, qword [RBP + -184]
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000a401_178     ; inserted

; Entry 10000a401; block 166; address 10000ac61
L10000a401_166:
    MOV qword [R12], 0
    LEA RAX, [rel L__DATA___common + 408]
    MOV RDI, qword [RAX]
    MOV RSI, R14
    CALL L1000127e1_0
    JMP L10000a401_167     ; inserted

; Entry 10000a401; block 167; address 10000ac7b
L10000a401_167:
    MOV RBX, RAX
    LEA RSI, [rel L__TEXT___cstring_6381]
    MOV RDI, RAX
    CALL _fopen
    JMP L10000a401_168     ; inserted

; Entry 10000a401; block 168; address 10000ac8d
L10000a401_168:
    MOV qword [R12], RAX
    TEST RAX, RAX
    JNE L10000a401_170
    JMP L10000a401_169     ; inserted

; Entry 10000a401; block 169; address 10000ac96
L10000a401_169:
    LEA R15, [rel L__TEXT___cstring_6381]
    JMP L10000a401_177     ; inserted

; Entry 10000a401; block 170; address 10000acde
L10000a401_170:
    MOV RDI, RBX
    CALL _free
    JMP L10000a401_165     ; inserted

; Entry 10000a401; block 171; address 10000aca5
L10000a401_171:
    TEST EAX, EAX
    JNE L10000a401_173
    JMP L10000a401_172     ; inserted

; Entry 10000a401; block 172; address 10000acad
L10000a401_172:
    MOV RDI, RBX
    CALL _free
    JMP L10000a401_174     ; inserted

; Entry 10000a401; block 173; address 10000bbae
L10000a401_173:
    MOV R14D, 9
    JMP L10000a401_68

; Entry 10000a401; block 174; address 10000acb5
L10000a401_174:
    LEA RAX, [rel L__DATA___common + 408]
    MOV RDI, qword [RAX]
    MOV RSI, R14
    CALL L1000127e1_0
    JMP L10000a401_175     ; inserted

; Entry 10000a401; block 175; address 10000acc7
L10000a401_175:
    MOV RBX, RAX
    MOV RDI, RAX
    MOV RSI, R15
    CALL _fopen
    JMP L10000a401_176     ; inserted

; Entry 10000a401; block 176; address 10000acd5
L10000a401_176:
    MOV qword [R12], RAX
    TEST RAX, RAX
    JE L10000a401_177
    JMP L10000a401_170     ; inserted

; Entry 10000a401; block 177; address 10000ac9d
L10000a401_177:
    MOV RDI, R14
    CALL L1000128e3_0
    JMP L10000a401_171     ; inserted

; Entry 10000a401; block 178; address 10000ad02
L10000a401_178:
    MOV RDI, qword [R12]
    TEST EAX, EAX
    JE L10000a401_180
    JMP L10000a401_179     ; inserted

; Entry 10000a401; block 179; address 10000ad0e
L10000a401_179:
    CALL _fclose
    JMP L10000a401_181     ; inserted

; Entry 10000a401; block 180; address 10000af0b
L10000a401_180:
    LEA RSI, [rel L__TEXT___cstring_32373]
    CALL L10000a311_0
    JMP L10000a401_216     ; inserted

; Entry 10000a401; block 181; address 10000ad13
L10000a401_181:
    MOV qword [R12], 0
    CALL ___error
    JMP L10000a401_182     ; inserted

; Entry 10000a401; block 182; address 10000ad20
L10000a401_182:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000a401_107     ; inserted

; Entry 10000a401; block 183; address 10000ad42
L10000a401_183:
    TEST EAX, EAX
    JE L10000a401_185
    JMP L10000a401_184     ; inserted

; Entry 10000a401; block 184; address 10000ad4a
L10000a401_184:
    MOV RDI, qword [R12]
    CALL _ftello
    JMP L10000a401_186     ; inserted

; Entry 10000a401; block 185; address 10000aeb5
L10000a401_185:
    LEA RDI, [rel L__TEXT___cstring_33979]
    JMP L10000a401_430     ; inserted

; Entry 10000a401; block 186; address 10000ad53
L10000a401_186:
    MOV RCX, qword [RBP + -184]
    NEG RCX
    ADD RAX, RCX
    ADD RAX, 18446744073709551612
    JMP L10000a401_201

; Entry 10000a401; block 187; address 10000ad75
L10000a401_187:
    TEST EAX, EAX
    JE L10000a401_189
    JMP L10000a401_188     ; inserted

; Entry 10000a401; block 188; address 10000ad7d
L10000a401_188:
    MOV RDI, qword [R12]
    CALL _ftello
    JMP L10000a401_190     ; inserted

; Entry 10000a401; block 189; address 10000ae0b
L10000a401_189:
    XOR EAX, EAX
    JMP L10000a401_201     ; inserted

; Entry 10000a401; block 190; address 10000ad86
L10000a401_190:
    MOV RBX, RAX
    MOV RCX, qword [R12]
    LEA RDI, [RBP + -112]
    MOV ESI, 16
    MOV EDX, 1
    CALL _fread
    JMP L10000a401_191     ; inserted

; Entry 10000a401; block 191; address 10000ada0
L10000a401_191:
    MOV RDI, qword [R12]
    CMP RAX, 1
    JNE L10000a401_160
    JMP L10000a401_192     ; inserted

; Entry 10000a401; block 192; address 10000adae
L10000a401_192:
    LEA RSI, [rel L__TEXT___cstring_31766]
    CALL L10000a311_0
    JMP L10000a401_193     ; inserted

; Entry 10000a401; block 193; address 10000adba
L10000a401_193:
    TEST EAX, EAX
    JE L10000a401_163
    JMP L10000a401_194     ; inserted

; Entry 10000a401; block 194; address 10000adc2
L10000a401_194:
    MOV R14, qword [RBP + -108]
    MOV EAX, dword [RBP + -100]
    LEA RCX, [rel L__DATA___common + 440]
    MOV qword [RCX], RAX
    CMP RAX, 1
    JNE L10000a401_196
    JMP L10000a401_195     ; inserted

; Entry 10000a401; block 195; address 10000addd
L10000a401_195:
    MOV RDI, qword [R12]
    MOV RSI, R14
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000a401_197     ; inserted

; Entry 10000a401; block 196; address 10000af6b
L10000a401_196:
    LEA RAX, [rel L__DATA___common + 408]
    MOV RSI, qword [RAX]
    LEA RDI, [rel L__TEXT___cstring_34125]
    JMP L10000a401_225

; Entry 10000a401; block 197; address 10000adeb
L10000a401_197:
    MOV RDI, qword [R12]
    TEST EAX, EAX
    JNE L10000a401_179
    JMP L10000a401_198     ; inserted

; Entry 10000a401; block 198; address 10000adf7
L10000a401_198:
    LEA RSI, [rel L__TEXT___cstring_32373]
    CALL L10000a311_0
    JMP L10000a401_199     ; inserted

; Entry 10000a401; block 199; address 10000ae03
L10000a401_199:
    TEST EAX, EAX
    JE L10000a401_200
    JMP L10000a401_189     ; inserted

; Entry 10000a401; block 200; address 10000b11f
L10000a401_200:
    ADD RBX, 18446744073709551532
    MOV RDI, qword [R12]
    MOV RSI, RBX
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000a401_251     ; inserted

; Entry 10000a401; block 201; address 10000ae0d
L10000a401_201:
    MOV qword [RBP + -168], RAX
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000a401_202
    JMP L10000a401_203     ; inserted

; Entry 10000a401; block 202; address 10000a92e
L10000a401_202:
    MOV RDI, qword [R12]
    ADD R15, 18446744073709551592
    MOV RSI, R15
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000a401_100     ; inserted

; Entry 10000a401; block 203; address 10000ae24
L10000a401_203:
    CMP qword [RBP + -168], 0
    JE L10000a401_205
    JMP L10000a401_204     ; inserted

; Entry 10000a401; block 204; address 10000ae32
L10000a401_204:
    MOV RDI, qword [RBP + -168]
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L100015a80_0
    JMP L10000a401_206     ; inserted

; Entry 10000a401; block 205; address 10000aed7
L10000a401_205:
    LEA RDI, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_34299]
    MOV EDX, 5105
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000a401_214     ; inserted

; Entry 10000a401; block 206; address 10000ae42
L10000a401_206:
    LEA RDI, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_34242]
    MOV EDX, 5105
    XOR ESI, ESI
    MOV R8, RAX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000a401_207     ; inserted

; Entry 10000a401; block 207; address 10000ae61
L10000a401_207:
    JMP L10000a401_214

; Entry 10000a401; block 208; address 10000ae6b
L10000a401_208:
    MOV qword [R12], 0
    CALL ___error
    JMP L10000a401_209     ; inserted

; Entry 10000a401; block 209; address 10000ae78
L10000a401_209:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000a401_210     ; inserted

; Entry 10000a401; block 210; address 10000ae7f
L10000a401_210:
    LEA RDI, [rel L__TEXT___cstring_34074]
    MOV RSI, RAX
    JMP L10000a401_211

; Entry 10000a401; block 211; address 10000a74b
L10000a401_211:
    CALL L1000034f4_0
    JMP L10000a401_67     ; inserted

; Entry 10000a401; block 212; address 10000ae97
L10000a401_212:
    MOV qword [R12], 0
    LEA RAX, [rel L__DATA___common + 408]
    MOV RSI, qword [RAX]
    LEA RDI, [rel L__TEXT___cstring_34092]
    JMP L10000a401_211

; Entry 10000a401; block 213; address 10000aecb
L10000a401_213:
    LEA RDI, [rel L__TEXT___cstring_33969]
    JMP L10000a401_110

; Entry 10000a401; block 214; address 10000aef3
L10000a401_214:
    LEA RDI, [rel L__DATA___common + 1216]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L100003422_0
    JMP L10000a401_215     ; inserted

; Entry 10000a401; block 215; address 10000af06
L10000a401_215:
    JMP L10000a401_202

; Entry 10000a401; block 216; address 10000af17
L10000a401_216:
    TEST EAX, EAX
    JE L10000a401_218
    JMP L10000a401_217     ; inserted

; Entry 10000a401; block 217; address 10000af1b
L10000a401_217:
    MOV RCX, qword [R12]
    LEA RDI, [RBP + -112]
    MOV ESI, 1
    MOV EDX, 52
    CALL _fread
    JMP L10000a401_219     ; inserted

; Entry 10000a401; block 218; address 10000af81
L10000a401_218:
    MOV RSI, qword [RBP + -192]
    ADD RSI, 18446744073709551532
    MOV RDI, qword [R12]
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000a401_226     ; inserted

; Entry 10000a401; block 219; address 10000af32
L10000a401_219:
    CMP RAX, 51
    JA L10000a401_221
    JMP L10000a401_220     ; inserted

; Entry 10000a401; block 220; address 10000af3c
L10000a401_220:
    LEA RAX, [rel L__DATA___common + 64]
    CMP dword [RAX], 1
    JNE L10000a401_223
    JMP L10000a401_222     ; inserted

; Entry 10000a401; block 221; address 10000afda
L10000a401_221:
    MOVZX R9D, word [RBP + -102]
    MOV EAX, dword [RBP + -96]
    MOV qword [RBP + -176], RAX
    MOV RAX, qword [RBP + -84]
    MOV qword [RBP + -192], RAX
    MOV RAX, qword [RBP + -68]
    ADD RAX, qword [RBP + -168]
    MOV qword [RBP + -184], RAX
    CMP R9D, 47
    JB L10000a401_156
    JMP L10000a401_233     ; inserted

; Entry 10000a401; block 222; address 10000af4c
L10000a401_222:
    LEA RDI, [rel L__TEXT___cstring_34619]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000a401_224     ; inserted

; Entry 10000a401; block 223; address 10000b0a1
L10000a401_223:
    LEA RDI, [rel L__TEXT___cstring_34662]
    JMP L10000a401_242

; Entry 10000a401; block 224; address 10000af5f
L10000a401_224:
    LEA RDI, [rel L__TEXT___cstring_33969]
    JMP L10000a401_242

; Entry 10000a401; block 225; address 10000ab7b
L10000a401_225:
    CALL L1000034f4_0
    JMP L10000a401_148     ; inserted

; Entry 10000a401; block 226; address 10000af97
L10000a401_226:
    MOV RDI, qword [R12]
    TEST EAX, EAX
    JE L10000a401_228
    JMP L10000a401_227     ; inserted

; Entry 10000a401; block 227; address 10000afa3
L10000a401_227:
    CALL _fclose
    JMP L10000a401_229     ; inserted

; Entry 10000a401; block 228; address 10000b0ad
L10000a401_228:
    CALL L10000f226_0
    JMP L10000a401_243     ; inserted

; Entry 10000a401; block 229; address 10000afa8
L10000a401_229:
    MOV qword [R12], 0
    LEA RAX, [rel L__DATA___common + 64]
    MOV EBX, dword [RAX]
    CALL ___error
    JMP L10000a401_230     ; inserted

; Entry 10000a401; block 230; address 10000afbe
L10000a401_230:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000a401_231     ; inserted

; Entry 10000a401; block 231; address 10000afc5
L10000a401_231:
    CMP EBX, 1
    JNE L10000a401_107
    JMP L10000a401_232     ; inserted

; Entry 10000a401; block 232; address 10000afce
L10000a401_232:
    LEA RDI, [rel L__TEXT___cstring_34390]
    JMP L10000a401_139

; Entry 10000a401; block 233; address 10000b010
L10000a401_233:
    MOV EAX, R9D
    MOV R8D, 3435973837
    IMUL R8, RAX
    SHR R8, 35
    LEA EAX, [R8 + R8]
    LEA EAX, [RAX + RAX * 4]
    SUB R9D, EAX
    LEA R14, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_34697]
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000a401_234     ; inserted

; Entry 10000a401; block 234; address 10000b04a
L10000a401_234:
    LEA RBX, [rel L__TEXT___cstring_244]
    MOV RDI, R14
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_235     ; inserted

; Entry 10000a401; block 235; address 10000b05c
L10000a401_235:
    LEA RDI, [rel L__TEXT___cstring_34733]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_236     ; inserted

; Entry 10000a401; block 236; address 10000b06b
L10000a401_236:
    LEA RDI, [rel L__TEXT___cstring_34788]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_237     ; inserted

; Entry 10000a401; block 237; address 10000b07a
L10000a401_237:
    LEA RAX, [rel L__DATA___common + 64]
    MOV EAX, dword [RAX]
    CMP EAX, 2
    JE L10000a401_239
    JMP L10000a401_238     ; inserted

; Entry 10000a401; block 238; address 10000b08c
L10000a401_238:
    CMP EAX, 1
    JNE L10000a401_241
    JMP L10000a401_240     ; inserted

; Entry 10000a401; block 239; address 10000b1ab
L10000a401_239:
    LEA RDI, [rel L__TEXT___cstring_34876]
    JMP L10000a401_261     ; inserted

; Entry 10000a401; block 240; address 10000b095
L10000a401_240:
    LEA RDI, [rel L__TEXT___cstring_34828]
    JMP L10000a401_261

; Entry 10000a401; block 241; address 10000bc12
L10000a401_241:
    LEA RDI, [rel L__TEXT___cstring_34907]
    JMP L10000a401_242     ; inserted

; Entry 10000a401; block 242; address 10000bc19
L10000a401_242:
    LEA RSI, [rel L__TEXT___cstring_244]
    JMP L10000a401_421     ; inserted

; Entry 10000a401; block 243; address 10000b0b2
L10000a401_243:
    TEST EAX, EAX
    JE L10000a401_245
    JMP L10000a401_244     ; inserted

; Entry 10000a401; block 244; address 10000b0ba
L10000a401_244:
    LEA RDI, [rel L__DATA___bss + 33]
    LEA RSI, [rel L__TEXT___cstring_32373]
    CALL L10000f2ed_0
    JMP L10000a401_246     ; inserted

; Entry 10000a401; block 245; address 10000b174
L10000a401_245:
    MOV RDI, qword [R12]
    CALL _fclose
    JMP L10000a401_258     ; inserted

; Entry 10000a401; block 246; address 10000b0cd
L10000a401_246:
    TEST EAX, EAX
    JE L10000a401_245
    JMP L10000a401_247     ; inserted

; Entry 10000a401; block 247; address 10000b0d5
L10000a401_247:
    MOV RDI, qword [R12]
    CALL _ftello
    JMP L10000a401_248     ; inserted

; Entry 10000a401; block 248; address 10000b0de
L10000a401_248:
    SUB RAX, qword [RBP + -184]
    ADD RAX, 18446744073709551612
    MOV qword [RBP + -168], RAX
    LEA RDI, [rel L__TEXT___cstring_34441]
    LEA RBX, [rel L__TEXT___cstring_244]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_249     ; inserted

; Entry 10000a401; block 249; address 10000b106
L10000a401_249:
    LEA RDI, [rel L__TEXT___cstring_34493]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_250     ; inserted

; Entry 10000a401; block 250; address 10000b115
L10000a401_250:
    JMP L10000a401_217

; Entry 10000a401; block 251; address 10000b131
L10000a401_251:
    MOV RDI, qword [R12]
    TEST EAX, EAX
    JE L10000a401_253
    JMP L10000a401_252     ; inserted

; Entry 10000a401; block 252; address 10000b13d
L10000a401_252:
    CALL _fclose
    JMP L10000a401_254     ; inserted

; Entry 10000a401; block 253; address 10000bc47
L10000a401_253:
    CALL L10000f226_0
    JMP L10000a401_424     ; inserted

; Entry 10000a401; block 254; address 10000b142
L10000a401_254:
    MOV qword [R12], 0
    LEA RAX, [rel L__DATA___common + 64]
    MOV EBX, dword [RAX]
    CALL ___error
    JMP L10000a401_255     ; inserted

; Entry 10000a401; block 255; address 10000b158
L10000a401_255:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000a401_256     ; inserted

; Entry 10000a401; block 256; address 10000b15f
L10000a401_256:
    CMP EBX, 1
    JNE L10000a401_107
    JMP L10000a401_257     ; inserted

; Entry 10000a401; block 257; address 10000b168
L10000a401_257:
    LEA RDI, [rel L__TEXT___cstring_34167]
    JMP L10000a401_139

; Entry 10000a401; block 258; address 10000b17d
L10000a401_258:
    MOV qword [R12], 0
    LEA RAX, [rel L__DATA___common + 64]
    CMP dword [RAX], 1
    LEA RAX, [rel L__DATA___common + 408]
    MOV RSI, qword [RAX]
    JNE L10000a401_260
    JMP L10000a401_259     ; inserted

; Entry 10000a401; block 259; address 10000b19f
L10000a401_259:
    LEA RDI, [rel L__TEXT___cstring_34520]
    JMP L10000a401_225

; Entry 10000a401; block 260; address 10000bc3b
L10000a401_260:
    LEA RDI, [rel L__TEXT___cstring_34568]
    JMP L10000a401_150

; Entry 10000a401; block 261; address 10000b1b2
L10000a401_261:
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000a401_156     ; inserted

; Entry 10000a401; block 262; address 10000b201
L10000a401_262:
    MOV RDI, qword [R12]
    CALL _fclose
    JMP L10000a401_264     ; inserted

; Entry 10000a401; block 263; address 10000b212
L10000a401_263:
    LEA RAX, [rel L__DATA___common + 448]
    MOV RSI, qword [RBP + -176]
    MOV qword [RAX], RSI
    LEA RAX, [rel L__DATA___common + 440]
    MOV RAX, qword [RAX]
    CMP RSI, RAX
    JAE L10000a401_266
    JMP L10000a401_265     ; inserted

; Entry 10000a401; block 264; address 10000b20a
L10000a401_264:
    MOV qword [R12], 0
    JMP L10000a401_263     ; inserted

; Entry 10000a401; block 265; address 10000b236
L10000a401_265:
    MOV R14D, 1
    MOV dword [RBP + -200], 0
    MOV dword [RBP + -196], 0
    JMP L10000a401_390     ; inserted

; Entry 10000a401; block 266; address 10000baa6
L10000a401_266:
    XOR R14D, R14D
    LEA RAX, [rel L__DATA___common + 6360]
    MOV RCX, qword [RBP + -192]
    CMP qword [RAX], RCX
    JE L10000a401_68
    JMP L10000a401_411     ; inserted

; Entry 10000a401; block 267; address 10000b262
L10000a401_267:
    MOV RDI, RBX
    CALL _strlen
    JMP L10000a401_269     ; inserted

; Entry 10000a401; block 268; address 10000b294
L10000a401_268:
    MOV RDI, RBX
    CALL L1000127e1_0
    JMP L10000a401_274     ; inserted

; Entry 10000a401; block 269; address 10000b26a
L10000a401_269:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L10000a401_270     ; inserted

; Entry 10000a401; block 270; address 10000b273
L10000a401_270:
    MOV qword [RBP + -176], RAX
    TEST RAX, RAX
    JE L10000a401_272
    JMP L10000a401_271     ; inserted

; Entry 10000a401; block 271; address 10000b283
L10000a401_271:
    MOV RDI, qword [RBP + -176]
    MOV RSI, RBX
    CALL _strcpy
    JMP L10000a401_273     ; inserted

; Entry 10000a401; block 272; address 10000bbd5
L10000a401_272:
    LEA RDI, [rel L__TEXT___cstring_34074]
    MOV RSI, RBX
    JMP L10000a401_419     ; inserted

; Entry 10000a401; block 273; address 10000b292
L10000a401_273:
    JMP L10000a401_275

; Entry 10000a401; block 274; address 10000b29c
L10000a401_274:
    MOV qword [RBP + -176], RAX
    JMP L10000a401_275     ; inserted

; Entry 10000a401; block 275; address 10000b2a3
L10000a401_275:
    MOV RAX, qword [R12]
    TEST RAX, RAX
    JE L10000a401_277
    JMP L10000a401_276     ; inserted

; Entry 10000a401; block 276; address 10000b2b0
L10000a401_276:
    CMP dword [RBP + -200], 0
    JNE L10000a401_279
    JMP L10000a401_278     ; inserted

; Entry 10000a401; block 277; address 10000b9b7
L10000a401_277:
    MOV RDI, qword [RBP + -176]
    JMP L10000a401_408     ; inserted

; Entry 10000a401; block 278; address 10000b2b9
L10000a401_278:
    TEST R14D, R14D
    JE L10000a401_279
    JMP L10000a401_280     ; inserted

; Entry 10000a401; block 279; address 10000b2eb
L10000a401_279:
    MOV RDI, RAX
    JMP L10000a401_385     ; inserted

; Entry 10000a401; block 280; address 10000b2be
L10000a401_280:
    MOV RDI, RAX
    MOV RSI, qword [RBP + -184]
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000a401_281     ; inserted

; Entry 10000a401; block 281; address 10000b2cf
L10000a401_281:
    MOV ECX, EAX
    MOV RAX, qword [R12]
    TEST ECX, ECX
    JNE L10000a401_283
    JMP L10000a401_282     ; inserted

; Entry 10000a401; block 282; address 10000b2dd
L10000a401_282:
    LEA RCX, [rel L__DATA___common + 616]
    MOV qword [RBP + -208], RCX
    JMP L10000a401_279     ; inserted

; Entry 10000a401; block 283; address 10000bbef
L10000a401_283:
    MOV RDI, RAX
    CALL _fclose
    JMP L10000a401_420     ; inserted

; Entry 10000a401; block 284; address 10000b2f3
L10000a401_284:
    TEST EAX, EAX
    JE L10000a401_286
    JMP L10000a401_285     ; inserted

; Entry 10000a401; block 285; address 10000b2fb
L10000a401_285:
    LEA R14, [rel L__DATA___common + 64]
    LEA R15, [rel L__DATA___bss + 33]
    JMP L10000a401_352     ; inserted

; Entry 10000a401; block 286; address 10000b954
L10000a401_286:
    MOV RDI, qword [R12]
    CALL _fclose
    JMP L10000a401_386     ; inserted

; Entry 10000a401; block 287; address 10000b312
L10000a401_287:
    MOV RBX, RAX
    LEA RAX, [rel L__DATA___common + 456]
    MOV qword [RAX], RBX
    MOV RDI, R15
    LEA RSI, [rel L__TEXT___cstring_31766]
    CALL L10000f2ed_0
    JMP L10000a401_288     ; inserted

; Entry 10000a401; block 288; address 10000b32e
L10000a401_288:
    TEST EAX, EAX
    JNE L10000a401_286
    JMP L10000a401_289     ; inserted

; Entry 10000a401; block 289; address 10000b336
L10000a401_289:
    MOV RDI, R15
    LEA RSI, [rel L__TEXT___cstring_32373]
    CALL L10000f2ed_0
    JMP L10000a401_290     ; inserted

; Entry 10000a401; block 290; address 10000b345
L10000a401_290:
    TEST EAX, EAX
    JNE L10000a401_286
    JMP L10000a401_291     ; inserted

; Entry 10000a401; block 291; address 10000b34d
L10000a401_291:
    MOV RDI, R15
    LEA RSI, [rel L__TEXT___cstring_32542]
    CALL L10000f2ed_0
    JMP L10000a401_292     ; inserted

; Entry 10000a401; block 292; address 10000b35c
L10000a401_292:
    TEST EAX, EAX
    JE L10000a401_294
    JMP L10000a401_293     ; inserted

; Entry 10000a401; block 293; address 10000b364
L10000a401_293:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    JE L10000a401_296
    JMP L10000a401_295     ; inserted

; Entry 10000a401; block 294; address 10000b5bf
L10000a401_294:
    CMP dword [R14], 1
    JNE L10000a401_330
    JMP L10000a401_329     ; inserted

; Entry 10000a401; block 295; address 10000b370
L10000a401_295:
    CMP dword [R14], 1
    JNE L10000a401_296
    JMP L10000a401_297     ; inserted

; Entry 10000a401; block 296; address 10000b3c4
L10000a401_296:
    MOV RCX, qword [R12]
    MOV ESI, 42
    MOV EDX, 1
    LEA RDI, [RBP + -112]
    CALL _fread
    JMP L10000a401_299     ; inserted

; Entry 10000a401; block 297; address 10000b376
L10000a401_297:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV R14, qword [RAX]
    LEA RAX, [rel L__DATA___common + 448]
    MOV R15, qword [RAX]
    ADD RBX, 18446744073709551612
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RDX, [rel L__TEXT___cstring_7043]
    CALL L100015a80_0
    JMP L10000a401_298     ; inserted

; Entry 10000a401; block 298; address 10000b39f
L10000a401_298:
    MOV RDI, R14
    LEA RSI, [rel L__TEXT___cstring_35077]
    MOV RDX, R15
    LEA R15, [rel L__DATA___bss + 33]
    LEA R14, [rel L__DATA___common + 64]
    MOV RCX, RAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000a401_296     ; inserted

; Entry 10000a401; block 299; address 10000b3db
L10000a401_299:
    CMP RAX, 1
    JNE L10000a401_301
    JMP L10000a401_300     ; inserted

; Entry 10000a401; block 300; address 10000b3e5
L10000a401_300:
    MOV EDI, 160
    CALL _malloc
    JMP L10000a401_302     ; inserted

; Entry 10000a401; block 301; address 10000b6ba
L10000a401_301:
    CALL ___error
    JMP L10000a401_340     ; inserted

; Entry 10000a401; block 302; address 10000b3ef
L10000a401_302:
    TEST RAX, RAX
    JE L10000a401_304
    JMP L10000a401_303     ; inserted

; Entry 10000a401; block 303; address 10000b3f8
L10000a401_303:
    MOV R15, RAX
    MOVZX EAX, word [RBP + -112]
    MOV word [R15], AX
    MOVZX ECX, word [RBP + -110]
    MOV word [R15 + 2], CX
    MOVZX ECX, word [RBP + -108]
    MOV word [R15 + 4], CX
    MOVZX ECX, word [RBP + -106]
    MOV word [R15 + 6], CX
    MOV ECX, dword [RBP + -104]
    MOV qword [R15 + 8], RCX
    MOV ECX, dword [RBP + -100]
    MOV qword [R15 + 16], RCX
    MOV ECX, dword [RBP + -96]
    MOV qword [R15 + 24], RCX
    MOV ECX, dword [RBP + -92]
    MOV qword [R15 + 32], RCX
    MOVZX EDX, word [RBP + -88]
    MOV word [R15 + 40], DX
    MOVZX ECX, word [RBP + -86]
    MOV qword [RBP + -224], RCX
    MOV word [R15 + 44], CX
    MOVZX ECX, word [RBP + -84]
    MOV qword [RBP + -216], RCX
    MOV word [R15 + 46], CX
    MOVZX ECX, word [RBP + -82]
    MOV qword [R15 + 48], RCX
    MOVZX ECX, word [RBP + -80]
    MOV word [R15 + 56], CX
    MOV ECX, dword [RBP + -78]
    MOV qword [R15 + 72], RCX
    MOV ECX, dword [RBP + -74]
    MOV qword [R15 + 64], RCX
    XOR ECX, ECX
    CMP EAX, 256
    SETB CL
    MOV dword [R15 + 148], ECX
    XORPS XMM0, XMM0
    MOVUPS oword [R15 + 80], XMM0
    MOVUPS oword [R15 + 96], XMM0
    MOVUPS oword [R15 + 112], XMM0
    MOV qword [R15 + 128], 0
    TEST DX, DX
    JE L10000a401_306
    JMP L10000a401_305     ; inserted

; Entry 10000a401; block 304; address 10000bbb9
L10000a401_304:
    LEA RDI, [rel L__TEXT___cstring_32466]
    LEA RSI, [rel L__TEXT___cstring_244]
    JMP L10000a401_419

; Entry 10000a401; block 305; address 10000b4b9
L10000a401_305:
    MOV qword [RBP + -232], RDX
    LEA RDI, [RDX + 1]
    CALL _malloc
    JMP L10000a401_307     ; inserted

; Entry 10000a401; block 306; address 10000b706
L10000a401_306:
    LEA RAX, [rel L__DATA___common + 6360]
    MOV R8, qword [RAX]
    INC R8
    MOV EDX, 5105
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_32691]
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000a401_347     ; inserted

; Entry 10000a401; block 307; address 10000b4c9
L10000a401_307:
    MOV qword [R15 + 112], RAX
    MOV R14D, 4
    TEST RAX, RAX
    JE L10000a401_68
    JMP L10000a401_308     ; inserted

; Entry 10000a401; block 308; address 10000b4dc
L10000a401_308:
    MOV RBX, RAX
    CMP word [RBP + -224], 0
    JE L10000a401_310
    JMP L10000a401_309     ; inserted

; Entry 10000a401; block 309; address 10000b4e9
L10000a401_309:
    MOV RDI, qword [RBP + -224]
    CALL _malloc
    JMP L10000a401_311     ; inserted

; Entry 10000a401; block 310; address 10000b502
L10000a401_310:
    CMP word [RBP + -216], 0
    JE L10000a401_313
    JMP L10000a401_312     ; inserted

; Entry 10000a401; block 311; address 10000b4f5
L10000a401_311:
    MOV qword [R15 + 96], RAX
    TEST RAX, RAX
    JE L10000a401_68
    JMP L10000a401_310     ; inserted

; Entry 10000a401; block 312; address 10000b50c
L10000a401_312:
    MOV RDI, qword [RBP + -216]
    CALL _malloc
    JMP L10000a401_314     ; inserted

; Entry 10000a401; block 313; address 10000b525
L10000a401_313:
    MOV RCX, qword [R12]
    MOV EDX, 1
    MOV RDI, RBX
    MOV RSI, qword [RBP + -232]
    CALL _fread
    JMP L10000a401_315     ; inserted

; Entry 10000a401; block 314; address 10000b518
L10000a401_314:
    MOV qword [R15 + 104], RAX
    TEST RAX, RAX
    JE L10000a401_68
    JMP L10000a401_313     ; inserted

; Entry 10000a401; block 315; address 10000b53d
L10000a401_315:
    CMP RAX, 1
    JNE L10000a401_317
    JMP L10000a401_316     ; inserted

; Entry 10000a401; block 316; address 10000b543
L10000a401_316:
    MOVZX ESI, word [R15 + 44]
    TEST RSI, RSI
    JE L10000a401_319
    JMP L10000a401_318     ; inserted

; Entry 10000a401; block 317; address 10000b58f
L10000a401_317:
    LEA RAX, [rel L__DATA___common + 64]
    CMP dword [RAX], 1
    JNE L10000a401_324
    JMP L10000a401_325     ; inserted

; Entry 10000a401; block 318; address 10000b54d
L10000a401_318:
    MOV RDI, qword [R15 + 96]
    MOV RCX, qword [R12]
    MOV EDX, 1
    CALL _fread
    JMP L10000a401_320     ; inserted

; Entry 10000a401; block 319; address 10000b565
L10000a401_319:
    MOVZX ESI, word [R15 + 46]
    TEST RSI, RSI
    JE L10000a401_322
    JMP L10000a401_321     ; inserted

; Entry 10000a401; block 320; address 10000b55f
L10000a401_320:
    CMP RAX, 1
    JNE L10000a401_317
    JMP L10000a401_319     ; inserted

; Entry 10000a401; block 321; address 10000b573
L10000a401_321:
    MOV RDI, qword [R15 + 104]
    MOV RCX, qword [R12]
    MOV EDX, 1
    CALL _fread
    JMP L10000a401_323     ; inserted

; Entry 10000a401; block 322; address 10000b788
L10000a401_322:
    MOV RAX, qword [R15 + 112]
    MOVZX ECX, word [R15 + 40]
    MOV byte [RAX + RCX], 0
    LEA RAX, [rel L__DATA___common + 304]
    MOV dword [RAX], 0
    MOV RAX, qword [R15 + 96]
    TEST RAX, RAX
    JE L10000a401_355
    JMP L10000a401_354     ; inserted

; Entry 10000a401; block 323; address 10000b585
L10000a401_323:
    CMP RAX, 1
    JE L10000a401_322
    JMP L10000a401_317     ; inserted

; Entry 10000a401; block 324; address 10000a9e7
L10000a401_324:
    MOV RDI, qword [R12]
    CALL _ferror
    JMP L10000a401_114     ; inserted

; Entry 10000a401; block 325; address 10000b59f
L10000a401_325:
    CALL ___error
    JMP L10000a401_326     ; inserted

; Entry 10000a401; block 326; address 10000b5a4
L10000a401_326:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000a401_327     ; inserted

; Entry 10000a401; block 327; address 10000b5ab
L10000a401_327:
    LEA RDI, [rel L__TEXT___cstring_32724]
    MOV RSI, RAX
    CALL L1000034f4_0
    JMP L10000a401_328     ; inserted

; Entry 10000a401; block 328; address 10000b5ba
L10000a401_328:
    JMP L10000a401_349

; Entry 10000a401; block 329; address 10000b5c9
L10000a401_329:
    MOVUPS XMM0, oword [rel L__TEXT___cstring_34940]
    LEA R14, [rel L__DATA___common + 1216]
    MOVAPS oword [R14], XMM0
    MOVUPS XMM0, oword [rel L__TEXT___cstring_34956]
    MOVAPS oword [R14 + 16], XMM0
    MOV dword [R14 + 32], 2123122
    XOR EBX, EBX
    LEA R14, [RBP + -160]
    JMP L10000a401_333     ; inserted

; Entry 10000a401; block 330; address 10000bb23
L10000a401_330:
    LEA RAX, [rel L__DATA___common + 448]
    MOV R14, qword [RAX]
    ADD RBX, 18446744073709551612
    LEA RDX, [rel L__TEXT___cstring_7043]
    MOV RDI, RBX
    XOR ESI, ESI
    CALL L100015a80_0
    JMP L10000a401_415     ; inserted

; Entry 10000a401; block 331; address 10000b615
L10000a401_331:
    MOV EDX, 5105
    LEA RDI, [rel L__DATA___common + 1216]
    MOV RSI, R14
    CALL ___strcat_chk
    JMP L10000a401_332     ; inserted

; Entry 10000a401; block 332; address 10000b629
L10000a401_332:
    INC RBX
    CMP RBX, 4
    JNE L10000a401_333
    JMP L10000a401_334     ; inserted

; Entry 10000a401; block 333; address 10000b5f8
L10000a401_333:
    MOVSX R8D, byte [RBX + R15]
    MOV EDX, 40
    MOV RDI, R14
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_33126]
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000a401_331     ; inserted

; Entry 10000a401; block 334; address 10000b632
L10000a401_334:
    LEA RAX, [rel L__DATA___common + 448]
    MOV RBX, qword [RAX]
    LEA RAX, [rel L__DATA___common + 456]
    MOV RDI, qword [RAX]
    ADD RDI, 18446744073709551612
    XOR ESI, ESI
    LEA RDX, [rel L__TEXT___cstring_7043]
    CALL L100015a80_0
    JMP L10000a401_335     ; inserted

; Entry 10000a401; block 335; address 10000b658
L10000a401_335:
    MOV EDX, 40
    MOV RDI, R14
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_33132]
    MOV R8, RBX
    MOV R9, RAX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000a401_336     ; inserted

; Entry 10000a401; block 336; address 10000b676
L10000a401_336:
    MOV EDX, 5105
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    MOV RSI, R14
    CALL ___strcat_chk
    JMP L10000a401_337     ; inserted

; Entry 10000a401; block 337; address 10000b68d
L10000a401_337:
    MOV RDI, RBX
    LEA RBX, [rel L__TEXT___cstring_244]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_338     ; inserted

; Entry 10000a401; block 338; address 10000b69f
L10000a401_338:
    LEA RDI, [rel L__TEXT___cstring_33151]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_339     ; inserted

; Entry 10000a401; block 339; address 10000b6ae
L10000a401_339:
    LEA R14, [rel L__DATA___common + 64]
    JMP L10000a401_346

; Entry 10000a401; block 340; address 10000b6bf
L10000a401_340:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000a401_341     ; inserted

; Entry 10000a401; block 341; address 10000b6c6
L10000a401_341:
    LEA RDI, [rel L__TEXT___cstring_32594]
    MOV RSI, RAX
    CALL L1000034f4_0
    JMP L10000a401_342     ; inserted

; Entry 10000a401; block 342; address 10000b6d5
L10000a401_342:
    CMP dword [R14], 1
    JNE L10000a401_324
    JMP L10000a401_343     ; inserted

; Entry 10000a401; block 343; address 10000b6df
L10000a401_343:
    LEA RDI, [rel L__TEXT___cstring_32622]
    LEA RBX, [rel L__TEXT___cstring_244]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_344     ; inserted

; Entry 10000a401; block 344; address 10000b6f5
L10000a401_344:
    LEA RDI, [rel L__TEXT___cstring_32668]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_345     ; inserted

; Entry 10000a401; block 345; address 10000b704
L10000a401_345:
    JMP L10000a401_346

; Entry 10000a401; block 346; address 10000b772
L10000a401_346:
    MOV RDI, qword [R12]
    CALL L10000f226_0
    JMP L10000a401_351     ; inserted

; Entry 10000a401; block 347; address 10000b732
L10000a401_347:
    LEA RDI, [rel L__TEXT___cstring_32695]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_348     ; inserted

; Entry 10000a401; block 348; address 10000b741
L10000a401_348:
    LEA RAX, [rel L__DATA___common + 64]
    CMP dword [RAX], 1
    JNE L10000a401_111
    JMP L10000a401_349     ; inserted

; Entry 10000a401; block 349; address 10000b751
L10000a401_349:
    LEA RDI, [rel L__TEXT___cstring_32668]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000a401_350     ; inserted

; Entry 10000a401; block 350; address 10000b764
L10000a401_350:
    LEA R14, [rel L__DATA___common + 64]
    LEA R15, [rel L__DATA___bss + 33]
    JMP L10000a401_346     ; inserted

; Entry 10000a401; block 351; address 10000b77b
L10000a401_351:
    TEST EAX, EAX
    JNE L10000a401_352
    JMP L10000a401_353     ; inserted

; Entry 10000a401; block 352; address 10000b309
L10000a401_352:
    MOV RDI, qword [R12]
    CALL _ftello
    JMP L10000a401_287     ; inserted

; Entry 10000a401; block 353; address 10000b783
L10000a401_353:
    JMP L10000a401_286

; Entry 10000a401; block 354; address 10000b7af
L10000a401_354:
    MOVZX ECX, word [R15 + 44]
    ADD RCX, RAX
    ADD RCX, 18446744073709551612
    CMP RCX, RAX
    JBE L10000a401_355
    JMP L10000a401_356     ; inserted

; Entry 10000a401; block 355; address 10000b83e
L10000a401_355:
    LEA RAX, [rel L__DATA___common + 64]
    CMP dword [RAX], 1
    SETE AL
    LEA RCX, [rel L__DATA___common + 440]
    CMP qword [RCX], 1
    SETE CL
    TEST AL, CL
    JNE L10000a401_369
    JMP L10000a401_368     ; inserted

; Entry 10000a401; block 356; address 10000b7c0
L10000a401_356:
    CMP word [RAX], 1
    JE L10000a401_358
    JMP L10000a401_357     ; inserted

; Entry 10000a401; block 357; address 10000b7c6
L10000a401_357:
    MOVZX EDX, word [RAX + 2]
    ADD RAX, RDX
    ADD RAX, 4
    CMP RAX, RCX
    JB L10000a401_356
    JMP L10000a401_359     ; inserted

; Entry 10000a401; block 358; address 10000b7d8
L10000a401_358:
    LEA RCX, [rel L__DATA___common + 304]
    MOV dword [RCX], 1
    MOV ECX, 4294967295
    CMP qword [R15 + 32], RCX
    JNE L10000a401_361
    JMP L10000a401_360     ; inserted

; Entry 10000a401; block 359; address 10000b7d6
L10000a401_359:
    JMP L10000a401_355

; Entry 10000a401; block 360; address 10000b7f0
L10000a401_360:
    MOV RCX, qword [RAX + 4]
    MOV qword [R15 + 32], RCX
    ADD RAX, 12
    JMP L10000a401_362

; Entry 10000a401; block 361; address 10000b7fe
L10000a401_361:
    ADD RAX, 4
    JMP L10000a401_362     ; inserted

; Entry 10000a401; block 362; address 10000b802
L10000a401_362:
    MOV ECX, 4294967295
    CMP qword [R15 + 24], RCX
    JNE L10000a401_364
    JMP L10000a401_363     ; inserted

; Entry 10000a401; block 363; address 10000b80d
L10000a401_363:
    MOV RCX, qword [RAX]
    MOV qword [R15 + 24], RCX
    ADD RAX, 8
    JMP L10000a401_364     ; inserted

; Entry 10000a401; block 364; address 10000b818
L10000a401_364:
    MOV ECX, 4294967295
    CMP qword [R15 + 64], RCX
    JNE L10000a401_366
    JMP L10000a401_365     ; inserted

; Entry 10000a401; block 365; address 10000b823
L10000a401_365:
    MOV RCX, qword [RAX]
    MOV qword [R15 + 64], RCX
    ADD RAX, 8
    JMP L10000a401_366     ; inserted

; Entry 10000a401; block 366; address 10000b82e
L10000a401_366:
    CMP qword [R15 + 48], 65535
    JNE L10000a401_355
    JMP L10000a401_367     ; inserted

; Entry 10000a401; block 367; address 10000b838
L10000a401_367:
    MOV EAX, dword [RAX]
    MOV qword [R15 + 48], RAX
    JMP L10000a401_355     ; inserted

; Entry 10000a401; block 368; address 10000b85d
L10000a401_368:
    LEA RAX, [rel L__DATA___common + 72]
    CMP dword [RAX], 0
    JE L10000a401_370
    JMP L10000a401_369     ; inserted

; Entry 10000a401; block 369; address 10000b869
L10000a401_369:
    MOV RAX, qword [RBP + -168]
    ADD qword [R15 + 64], RAX
    JMP L10000a401_370     ; inserted

; Entry 10000a401; block 370; address 10000b874
L10000a401_370:
    CMP qword [R15 + 48], 0
    JNE L10000a401_372
    JMP L10000a401_371     ; inserted

; Entry 10000a401; block 371; address 10000b87b
L10000a401_371:
    MOV RAX, qword [R15 + 64]
    CMP dword [RBP + -196], 0
    MOV dword [RBP + -196], 1
    JE L10000a401_374
    JMP L10000a401_373     ; inserted

; Entry 10000a401; block 372; address 10000b8a8
L10000a401_372:
    LEA RAX, [rel L__DATA___common + 6360]
    INC qword [RAX]
    MOV qword [R15 + 136], 0
    MOV RDI, qword [R15 + 112]
    CALL L10001694a_0
    JMP L10000a401_375     ; inserted

; Entry 10000a401; block 373; address 10000b892
L10000a401_373:
    LEA RCX, [rel L__DATA___common + 6368]
    CMP RAX, qword [RCX]
    JAE L10000a401_372
    JMP L10000a401_374     ; inserted

; Entry 10000a401; block 374; address 10000b89e
L10000a401_374:
    LEA RCX, [rel L__DATA___common + 6368]
    MOV qword [RCX], RAX
    JMP L10000a401_372     ; inserted

; Entry 10000a401; block 375; address 10000b8c6
L10000a401_375:
    MOV qword [R15 + 120], RAX
    TEST RAX, RAX
    JE L10000a401_68
    JMP L10000a401_376     ; inserted

; Entry 10000a401; block 376; address 10000b8d3
L10000a401_376:
    MOV RBX, RAX
    MOV qword [R15 + 80], RAX
    MOV RDI, RAX
    CALL _strlen
    JMP L10000a401_377     ; inserted

; Entry 10000a401; block 377; address 10000b8e2
L10000a401_377:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L10000a401_378     ; inserted

; Entry 10000a401; block 378; address 10000b8eb
L10000a401_378:
    MOV qword [R15 + 128], RAX
    TEST RAX, RAX
    JE L10000a401_380
    JMP L10000a401_379     ; inserted

; Entry 10000a401; block 379; address 10000b8fb
L10000a401_379:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L10000a401_381     ; inserted

; Entry 10000a401; block 380; address 10000bc88
L10000a401_380:
    LEA RDI, [rel L__TEXT___cstring_35131]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000a401_431     ; inserted

; Entry 10000a401; block 381; address 10000b906
L10000a401_381:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    JE L10000a401_383
    JMP L10000a401_382     ; inserted

; Entry 10000a401; block 382; address 10000b912
L10000a401_382:
    LEA RAX, [rel L__DATA___common + 64]
    CMP dword [RAX], 0
    JNE L10000a401_383
    JMP L10000a401_384     ; inserted

; Entry 10000a401; block 383; address 10000b926
L10000a401_383:
    MOV RAX, qword [RBP + -208]
    MOV qword [RAX], R15
    MOV RAX, R15
    ADD RAX, 152
    MOV qword [RBP + -208], RAX
    MOV qword [R15 + 152], 0
    MOV RDI, qword [R12]
    JMP L10000a401_385

; Entry 10000a401; block 384; address 10000b91e
L10000a401_384:
    MOV RDI, R15
    CALL L10000f354_0
    JMP L10000a401_383     ; inserted

; Entry 10000a401; block 385; address 10000b2ee
L10000a401_385:
    CALL L10000f226_0
    JMP L10000a401_284     ; inserted

; Entry 10000a401; block 386; address 10000b95d
L10000a401_386:
    MOV qword [R12], 0
    MOV RDI, qword [RBP + -176]
    CALL _free
    JMP L10000a401_387     ; inserted

; Entry 10000a401; block 387; address 10000b971
L10000a401_387:
    LEA RDI, [rel L__DATA___bss + 33]
    LEA RSI, [rel L__TEXT___cstring_32542]
    CALL L10000f2ed_0
    JMP L10000a401_388     ; inserted

; Entry 10000a401; block 388; address 10000b984
L10000a401_388:
    XOR R14D, R14D
    TEST EAX, EAX
    JE L10000a401_266
    JMP L10000a401_389     ; inserted

; Entry 10000a401; block 389; address 10000b98f
L10000a401_389:
    LEA RAX, [rel L__DATA___common + 448]
    MOV RSI, qword [RAX]
    INC RSI
    MOV qword [RAX], RSI
    LEA RAX, [rel L__DATA___common + 440]
    MOV RAX, qword [RAX]
    CMP RSI, RAX
    JB L10000a401_390
    JMP L10000a401_391     ; inserted

; Entry 10000a401; block 390; address 10000b250
L10000a401_390:
    DEC RAX
    LEA RCX, [rel L__DATA___common + 408]
    MOV RBX, qword [RCX]
    CMP RSI, RAX
    JNE L10000a401_268
    JMP L10000a401_267     ; inserted

; Entry 10000a401; block 391; address 10000b9b2
L10000a401_391:
    JMP L10000a401_266

; Entry 10000a401; block 392; address 10000b9ca
L10000a401_392:
    MOV qword [R12], RAX
    TEST RAX, RAX
    JNE L10000a401_276
    JMP L10000a401_393     ; inserted

; Entry 10000a401; block 393; address 10000b9d7
L10000a401_393:
    LEA RAX, [rel L__DATA___common + 448]
    MOV RDI, qword [RAX]
    CALL L1000128e3_0
    JMP L10000a401_394     ; inserted

; Entry 10000a401; block 394; address 10000b9e6
L10000a401_394:
    CMP EAX, 3
    JE L10000a401_396
    JMP L10000a401_395     ; inserted

; Entry 10000a401; block 395; address 10000b9eb
L10000a401_395:
    CMP EAX, 9
    JE L10000a401_398
    JMP L10000a401_397     ; inserted

; Entry 10000a401; block 396; address 10000ba5f
L10000a401_396:
    LEA RAX, [rel L__DATA___common + 448]
    MOV R8, qword [RAX]
    MOV EDX, 5105
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_32324]
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000a401_409     ; inserted

; Entry 10000a401; block 397; address 10000b9f4
L10000a401_397:
    LEA RAX, [rel L__DATA___common + 448]
    MOV RSI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 440]
    MOV RAX, qword [RAX]
    DEC RAX
    CMP RSI, RAX
    JNE L10000a401_400
    JMP L10000a401_399     ; inserted

; Entry 10000a401; block 398; address 10000bb9b
L10000a401_398:
    LEA RDI, [rel L__TEXT___cstring_32264]
    MOV RSI, qword [RBP + -176]
    CALL L1000034f4_0
    JMP L10000a401_173     ; inserted

; Entry 10000a401; block 399; address 10000ba10
L10000a401_399:
    LEA RAX, [rel L__DATA___common + 408]
    MOV R15, qword [RAX]
    MOV RDI, R15
    CALL _strlen
    JMP L10000a401_401     ; inserted

; Entry 10000a401; block 400; address 10000ba44
L10000a401_400:
    MOV RDI, qword [R13]
    CALL L1000127e1_0
    JMP L10000a401_406     ; inserted

; Entry 10000a401; block 401; address 10000ba22
L10000a401_401:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L10000a401_402     ; inserted

; Entry 10000a401; block 402; address 10000ba2b
L10000a401_402:
    TEST RAX, RAX
    JE L10000a401_404
    JMP L10000a401_403     ; inserted

; Entry 10000a401; block 403; address 10000ba34
L10000a401_403:
    MOV RBX, RAX
    MOV RDI, RAX
    MOV RSI, R15
    CALL _strcpy
    JMP L10000a401_405     ; inserted

; Entry 10000a401; block 404; address 10000bbc9
L10000a401_404:
    LEA RDI, [rel L__TEXT___cstring_34074]
    MOV RSI, R15
    JMP L10000a401_419

; Entry 10000a401; block 405; address 10000ba42
L10000a401_405:
    JMP L10000a401_407

; Entry 10000a401; block 406; address 10000ba4d
L10000a401_406:
    MOV RBX, RAX
    JMP L10000a401_407     ; inserted

; Entry 10000a401; block 407; address 10000ba50
L10000a401_407:
    MOV qword [RBP + -176], RBX
    MOV RDI, RBX
    JMP L10000a401_408

; Entry 10000a401; block 408; address 10000b9be
L10000a401_408:
    LEA RSI, [rel L__TEXT___cstring_6381]
    CALL _fopen
    JMP L10000a401_392     ; inserted

; Entry 10000a401; block 409; address 10000ba88
L10000a401_409:
    MOV RDI, RBX
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000a401_410     ; inserted

; Entry 10000a401; block 410; address 10000ba97
L10000a401_410:
    MOV dword [RBP + -200], 1
    JMP L10000a401_389

; Entry 10000a401; block 411; address 10000bac0
L10000a401_411:
    LEA R14, [rel L__TEXT___cstring_7043]
    MOV RDI, qword [RBP + -192]
    XOR ESI, ESI
    MOV RDX, R14
    CALL L100015a80_0
    JMP L10000a401_412     ; inserted

; Entry 10000a401; block 412; address 10000bad8
L10000a401_412:
    MOV RBX, RAX
    LEA RAX, [rel L__DATA___common + 6360]
    MOV RDI, qword [RAX]
    XOR ESI, ESI
    MOV RDX, R14
    CALL L100015a80_0
    JMP L10000a401_413     ; inserted

; Entry 10000a401; block 413; address 10000baef
L10000a401_413:
    LEA R14, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_35171]
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    MOV R8, RBX
    MOV R9, RAX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000a401_414     ; inserted

; Entry 10000a401; block 414; address 10000bb14
L10000a401_414:
    LEA RSI, [rel L__TEXT___cstring_244]
    MOV RDI, R14
    JMP L10000a401_150

; Entry 10000a401; block 415; address 10000bb42
L10000a401_415:
    LEA R15, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_34976]
    MOV EDX, 5105
    MOV RDI, R15
    XOR ESI, ESI
    MOV R8, R14
    MOV R9, RAX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000a401_416     ; inserted

; Entry 10000a401; block 416; address 10000bb67
L10000a401_416:
    LEA RBX, [rel L__TEXT___cstring_244]
    MOV RDI, R15
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_417     ; inserted

; Entry 10000a401; block 417; address 10000bb79
L10000a401_417:
    LEA RDI, [rel L__TEXT___cstring_35016]
    MOV RSI, qword [RBP + -176]
    CALL L1000034f4_0
    JMP L10000a401_418     ; inserted

; Entry 10000a401; block 418; address 10000bb8c
L10000a401_418:
    LEA RDI, [rel L__TEXT___cstring_35048]
    MOV RSI, RBX
    JMP L10000a401_421

; Entry 10000a401; block 419; address 10000bbdf
L10000a401_419:
    CALL L1000034f4_0
    JMP L10000a401_80     ; inserted

; Entry 10000a401; block 420; address 10000bbf7
L10000a401_420:
    MOV qword [R12], 0
    LEA RDI, [rel L__TEXT___cstring_31736]
    MOV RSI, qword [RBP + -176]
    JMP L10000a401_211

; Entry 10000a401; block 421; address 10000bc20
L10000a401_421:
    CALL L1000034f4_0
    JMP L10000a401_422     ; inserted

; Entry 10000a401; block 422; address 10000bc25
L10000a401_422:
    MOV RDI, qword [R12]
    CALL _fclose
    JMP L10000a401_423     ; inserted

; Entry 10000a401; block 423; address 10000bc2e
L10000a401_423:
    MOV qword [R12], 0
    JMP L10000a401_111

; Entry 10000a401; block 424; address 10000bc4c
L10000a401_424:
    TEST EAX, EAX
    JE L10000a401_426
    JMP L10000a401_425     ; inserted

; Entry 10000a401; block 425; address 10000bc50
L10000a401_425:
    LEA RDI, [rel L__DATA___bss + 33]
    LEA RSI, [rel L__TEXT___cstring_32373]
    CALL L10000f2ed_0
    JMP L10000a401_427     ; inserted

; Entry 10000a401; block 426; address 10000bc7c
L10000a401_426:
    LEA RDI, [rel L__TEXT___cstring_34204]
    JMP L10000a401_430

; Entry 10000a401; block 427; address 10000bc63
L10000a401_427:
    TEST EAX, EAX
    JE L10000a401_426
    JMP L10000a401_428     ; inserted

; Entry 10000a401; block 428; address 10000bc67
L10000a401_428:
    MOV RDI, qword [R12]
    CALL _ftello
    JMP L10000a401_429     ; inserted

; Entry 10000a401; block 429; address 10000bc70
L10000a401_429:
    SUB RAX, R14
    ADD RAX, 18446744073709551612
    JMP L10000a401_201

; Entry 10000a401; block 430; address 10000aebc
L10000a401_430:
    LEA RBX, [rel L__TEXT___cstring_244]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000a401_213     ; inserted

; Entry 10000a401; block 431; address 10000bc9b
L10000a401_431:
    JMP L10000a401_68



; ---------------------
; Function: 0x10000bca0
; ---------------------
; Entry 10000bca0; block 0; address 10000bca0
L10000bca0_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 136
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -48], RAX
    LEA RAX, [rel L__DATA___common + 440]
    MOV qword [RAX], 1000000
    LEA R13, [rel L__DATA___common + 408]
    MOV RDI, qword [R13]
    CALL _strlen
    JMP L10000bca0_1     ; inserted

; Entry 10000bca0; block 1; address 10000bce0
L10000bca0_1:
    MOV RBX, RAX
    CMP EBX, 4
    JL L10000bca0_3
    JMP L10000bca0_2     ; inserted

; Entry 10000bca0; block 2; address 10000bcec
L10000bca0_2:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV R14, qword [RAX]
    MOVSXD R15, EBX
    CMP byte [R14 + R15-1], 46
    JNE L10000bca0_3
    JMP L10000bca0_4     ; inserted

; Entry 10000bca0; block 3; address 10000bdc1
L10000bca0_3:
    MOV RDI, qword [R13]
    LEA RSI, [rel L__TEXT___cstring_6381]
    CALL _fopen
    JMP L10000bca0_14     ; inserted

; Entry 10000bca0; block 4; address 10000bd05
L10000bca0_4:
    MOVSX EDI, byte [R14 + R15-1]
    CALL ___toupper
    JMP L10000bca0_5     ; inserted

; Entry 10000bca0; block 5; address 10000bd10
L10000bca0_5:
    CMP EAX, 90
    JNE L10000bca0_3
    JMP L10000bca0_6     ; inserted

; Entry 10000bca0; block 6; address 10000bd19
L10000bca0_6:
    MOV AL, byte [R14 + R15-1]
    ADD AL, 208
    CMP AL, 9
    JA L10000bca0_3
    JMP L10000bca0_7     ; inserted

; Entry 10000bca0; block 7; address 10000bd28
L10000bca0_7:
    MOV AL, byte [R14 + R15-1]
    ADD AL, 208
    CMP AL, 9
    JA L10000bca0_3
    JMP L10000bca0_8     ; inserted

; Entry 10000bca0; block 8; address 10000bd37
L10000bca0_8:
    CMP EBX, 4
    JE L10000bca0_10
    JMP L10000bca0_9     ; inserted

; Entry 10000bca0; block 9; address 10000bd3c
L10000bca0_9:
    MOV AL, byte [R14 + R15]
    ADD AL, 208
    CMP AL, 9
    JA L10000bca0_3
    JMP L10000bca0_10     ; inserted

; Entry 10000bca0; block 10; address 10000bd46
L10000bca0_10:
    MOVUPS XMM0, oword [rel L__TEXT___cstring_31576]
    LEA RBX, [rel L__DATA___common + 1216]
    MOVAPS oword [RBX + 32], XMM0
    MOVUPS XMM0, oword [rel L__TEXT___cstring_31560]
    MOVAPS oword [RBX + 16], XMM0
    MOVUPS XMM0, oword [rel L__TEXT___cstring_31544]
    MOVAPS oword [RBX], XMM0
    MOV RAX, 2926231707610994
    MOV qword [RBX + 45], RAX
    LEA RSI, [rel L__TEXT___cstring_31597]
    MOV EDX, 5105
    MOV RDI, RBX
    CALL ___strcat_chk
    JMP L10000bca0_11     ; inserted

; Entry 10000bca0; block 11; address 10000bd8f
L10000bca0_11:
    LEA RSI, [rel L__TEXT___cstring_31648]
    MOV EDX, 5105
    MOV RDI, RBX
    CALL ___strcat_chk
    JMP L10000bca0_12     ; inserted

; Entry 10000bca0; block 12; address 10000bda3
L10000bca0_12:
    LEA RSI, [rel L__TEXT___cstring_244]
    MOV RDI, RBX
    CALL L1000034f4_0
    JMP L10000bca0_13     ; inserted

; Entry 10000bca0; block 13; address 10000bdb2
L10000bca0_13:
    MOV dword [RBP + -148], 3
    JMP L10000bca0_73

; Entry 10000bca0; block 14; address 10000bdd1
L10000bca0_14:
    LEA R12, [rel L__DATA___common + 400]
    MOV qword [R12], RAX
    TEST RAX, RAX
    JE L10000bca0_16
    JMP L10000bca0_15     ; inserted

; Entry 10000bca0; block 15; address 10000bde5
L10000bca0_15:
    MOV RDI, RAX
    MOV RSI, 18446744073709289472
    MOV EDX, 2
    CALL _fseeko
    JMP L10000bca0_17     ; inserted

; Entry 10000bca0; block 16; address 10000be94
L10000bca0_16:
    MOV RSI, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_31705]
    CALL L1000034f4_0
    JMP L10000bca0_36     ; inserted

; Entry 10000bca0; block 17; address 10000bdf9
L10000bca0_17:
    TEST EAX, EAX
    JE L10000bca0_19
    JMP L10000bca0_18     ; inserted

; Entry 10000bca0; block 18; address 10000bdfd
L10000bca0_18:
    MOV RDI, qword [R12]
    XOR ESI, ESI
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000bca0_20     ; inserted

; Entry 10000bca0; block 19; address 10000be17
L10000bca0_19:
    MOV RDI, qword [R12]
    LEA RSI, [rel L__TEXT___cstring_31766]
    CALL L10000f1b1_0
    JMP L10000bca0_22     ; inserted

; Entry 10000bca0; block 20; address 10000be0a
L10000bca0_20:
    TEST EAX, EAX
    JE L10000bca0_19
    JMP L10000bca0_21     ; inserted

; Entry 10000bca0; block 21; address 10000be0e
L10000bca0_21:
    MOV RDI, qword [R12]
    JMP L10000bca0_35

; Entry 10000bca0; block 22; address 10000be27
L10000bca0_22:
    TEST EAX, EAX
    JE L10000bca0_24
    JMP L10000bca0_23     ; inserted

; Entry 10000bca0; block 23; address 10000be2f
L10000bca0_23:
    MOV RDI, qword [R12]
    CALL _ftello
    JMP L10000bca0_25     ; inserted

; Entry 10000bca0; block 24; address 10000caea
L10000bca0_24:
    MOVUPS XMM0, oword [rel L__TEXT___cstring_31803]
    LEA RBX, [rel L__DATA___common + 1216]
    MOVAPS oword [RBX + 32], XMM0
    MOVUPS XMM0, oword [rel L__TEXT___cstring_31787]
    MOVAPS oword [RBX + 16], XMM0
    MOVUPS XMM0, oword [rel L__TEXT___cstring_31771]
    MOVAPS oword [RBX], XMM0
    MOV RAX, 2926309016101746
    MOV qword [RBX + 45], RAX
    LEA RSI, [rel L__TEXT___cstring_31824]
    MOV EDX, 5105
    MOV RDI, RBX
    CALL ___strcat_chk
    JMP L10000bca0_218     ; inserted

; Entry 10000bca0; block 25; address 10000be38
L10000bca0_25:
    MOV RBX, RAX
    MOV RDI, qword [R12]
    LEA RSI, [rel L__TEXT___cstring_31766]
    CALL L10000f1b1_0
    JMP L10000bca0_26     ; inserted

; Entry 10000bca0; block 26; address 10000be4b
L10000bca0_26:
    TEST EAX, EAX
    JE L10000bca0_28
    JMP L10000bca0_27     ; inserted

; Entry 10000bca0; block 27; address 10000be4f
L10000bca0_27:
    LEA R14, [rel L__TEXT___cstring_31766]
    JMP L10000bca0_31     ; inserted

; Entry 10000bca0; block 28; address 10000be72
L10000bca0_28:
    MOV RDI, qword [R12]
    MOV RSI, RBX
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000bca0_32     ; inserted

; Entry 10000bca0; block 29; address 10000be5f
L10000bca0_29:
    MOV RBX, RAX
    MOV RDI, qword [R12]
    MOV RSI, R14
    CALL L10000f1b1_0
    JMP L10000bca0_30     ; inserted

; Entry 10000bca0; block 30; address 10000be6e
L10000bca0_30:
    TEST EAX, EAX
    JNE L10000bca0_31
    JMP L10000bca0_28     ; inserted

; Entry 10000bca0; block 31; address 10000be56
L10000bca0_31:
    MOV RDI, qword [R12]
    CALL _ftello
    JMP L10000bca0_29     ; inserted

; Entry 10000bca0; block 32; address 10000be80
L10000bca0_32:
    MOV RCX, qword [R12]
    TEST EAX, EAX
    JE L10000bca0_34
    JMP L10000bca0_33     ; inserted

; Entry 10000bca0; block 33; address 10000be8c
L10000bca0_33:
    MOV RDI, RCX
    JMP L10000bca0_35

; Entry 10000bca0; block 34; address 10000cb35
L10000bca0_34:
    LEA RDI, [RBP + -96]
    MOV ESI, 1
    MOV EDX, 18
    CALL _fread
    JMP L10000bca0_219     ; inserted

; Entry 10000bca0; block 35; address 10000cc72
L10000bca0_35:
    CALL _fclose
    JMP L10000bca0_239     ; inserted

; Entry 10000bca0; block 36; address 10000bea4
L10000bca0_36:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000bca0_38
    JMP L10000bca0_37     ; inserted

; Entry 10000bca0; block 37; address 10000beb0
L10000bca0_37:
    MOV RDI, qword [R12]
    TEST RDI, RDI
    JE L10000bca0_38
    JMP L10000bca0_39     ; inserted

; Entry 10000bca0; block 38; address 10000bec6
L10000bca0_38:
    LEA RDI, [rel L__TEXT___cstring_32240]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L100003422_0
    JMP L10000bca0_41     ; inserted

; Entry 10000bca0; block 39; address 10000beb9
L10000bca0_39:
    CALL _fclose
    JMP L10000bca0_40     ; inserted

; Entry 10000bca0; block 40; address 10000bebe
L10000bca0_40:
    MOV qword [R12], 0
    JMP L10000bca0_38     ; inserted

; Entry 10000bca0; block 41; address 10000bed9
L10000bca0_41:
    LEA RAX, [rel L__DATA___common + 448]
    MOV qword [RAX], 0
    LEA RAX, [rel L__DATA___common + 440]
    CMP qword [RAX], 0
    JE L10000bca0_43
    JMP L10000bca0_42     ; inserted

; Entry 10000bca0; block 42; address 10000bef8
L10000bca0_42:
    XOR R15D, R15D
    MOV dword [RBP + -152], 0
    XOR ESI, ESI
    JMP L10000bca0_201     ; inserted

; Entry 10000bca0; block 43; address 10000cadb
L10000bca0_43:
    MOV dword [RBP + -148], 0
    JMP L10000bca0_73

; Entry 10000bca0; block 44; address 10000bf10
L10000bca0_44:
    MOV RDI, RAX
    LEA RBX, [rel L__DATA___common + 400]
    MOV RAX, qword [RBX]
    TEST RAX, RAX
    MOV qword [RBP + -160], RDI
    JNE L10000bca0_46
    JMP L10000bca0_45     ; inserted

; Entry 10000bca0; block 45; address 10000bf29
L10000bca0_45:
    LEA RSI, [rel L__TEXT___cstring_6381]
    CALL _fopen
    JMP L10000bca0_47     ; inserted

; Entry 10000bca0; block 46; address 10000bf41
L10000bca0_46:
    LEA R12, [RBP + -144]
    JMP L10000bca0_214     ; inserted

; Entry 10000bca0; block 47; address 10000bf35
L10000bca0_47:
    MOV qword [RBX], RAX
    TEST RAX, RAX
    JE L10000bca0_48
    JMP L10000bca0_46     ; inserted

; Entry 10000bca0; block 48; address 10000ca14
L10000bca0_48:
    MOV dword [RBP + -148], R15D
    MOV R15, RBX
    LEA R14, [rel L__DATA___common + 448]
    MOV RBX, qword [RBP + -160]
    JMP L10000bca0_212     ; inserted

; Entry 10000bca0; block 49; address 10000bf50
L10000bca0_49:
    TEST EAX, EAX
    JE L10000bca0_51
    JMP L10000bca0_50     ; inserted

; Entry 10000bca0; block 50; address 10000bf58
L10000bca0_50:
    LEA R14, [rel L__DATA___bss + 33]
    JMP L10000bca0_123     ; inserted

; Entry 10000bca0; block 51; address 10000c9b8
L10000bca0_51:
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L10000bca0_198
    JMP L10000bca0_197     ; inserted

; Entry 10000bca0; block 52; address 10000bf67
L10000bca0_52:
    MOV RBX, RAX
    LEA RAX, [rel L__DATA___common + 456]
    MOV qword [RAX], RBX
    MOV RDI, R14
    LEA RSI, [rel L__TEXT___cstring_31766]
    CALL L10000f2ed_0
    JMP L10000bca0_53     ; inserted

; Entry 10000bca0; block 53; address 10000bf83
L10000bca0_53:
    TEST EAX, EAX
    JNE L10000bca0_55
    JMP L10000bca0_54     ; inserted

; Entry 10000bca0; block 54; address 10000bf8b
L10000bca0_54:
    MOV RDI, R14
    LEA RSI, [rel L__TEXT___cstring_32373]
    CALL L10000f2ed_0
    JMP L10000bca0_56     ; inserted

; Entry 10000bca0; block 55; address 10000c3a6
L10000bca0_55:
    LEA RAX, [rel L__DATA___common + 448]
    MOV R14, qword [RAX]
    INC R14
    ADD RBX, 18446744073709551612
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RDX, [rel L__TEXT___cstring_7043]
    CALL L100015a80_0
    JMP L10000bca0_125     ; inserted

; Entry 10000bca0; block 56; address 10000bf9a
L10000bca0_56:
    TEST EAX, EAX
    JNE L10000bca0_58
    JMP L10000bca0_57     ; inserted

; Entry 10000bca0; block 57; address 10000bfa2
L10000bca0_57:
    MOV RDI, R14
    LEA RSI, [rel L__TEXT___cstring_32410]
    CALL L10000f2ed_0
    JMP L10000bca0_59     ; inserted

; Entry 10000bca0; block 58; address 10000c3e2
L10000bca0_58:
    LEA RAX, [rel L__DATA___common + 448]
    MOV R14, qword [RAX]
    INC R14
    ADD RBX, 18446744073709551612
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RDX, [rel L__TEXT___cstring_7043]
    CALL L100015a80_0
    JMP L10000bca0_126     ; inserted

; Entry 10000bca0; block 59; address 10000bfb1
L10000bca0_59:
    TEST EAX, EAX
    JNE L10000bca0_61
    JMP L10000bca0_60     ; inserted

; Entry 10000bca0; block 60; address 10000bfb9
L10000bca0_60:
    MOV RDI, R14
    LEA RSI, [rel L__TEXT___cstring_30429]
    CALL L10000f2ed_0
    JMP L10000bca0_62     ; inserted

; Entry 10000bca0; block 61; address 10000c41e
L10000bca0_61:
    LEA RAX, [rel L__DATA___common + 448]
    MOV R14, qword [RAX]
    INC R14
    ADD RBX, 18446744073709551612
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RDX, [rel L__TEXT___cstring_7043]
    CALL L100015a80_0
    JMP L10000bca0_128     ; inserted

; Entry 10000bca0; block 62; address 10000bfc8
L10000bca0_62:
    TEST EAX, EAX
    JNE L10000bca0_64
    JMP L10000bca0_63     ; inserted

; Entry 10000bca0; block 63; address 10000bfd0
L10000bca0_63:
    MOV RDI, R14
    LEA RSI, [rel L__TEXT___cstring_32542]
    CALL L10000f2ed_0
    JMP L10000bca0_65     ; inserted

; Entry 10000bca0; block 64; address 10000c48d
L10000bca0_64:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    JE L10000bca0_134
    JMP L10000bca0_133     ; inserted

; Entry 10000bca0; block 65; address 10000bfdf
L10000bca0_65:
    TEST EAX, EAX
    JE L10000bca0_67
    JMP L10000bca0_66     ; inserted

; Entry 10000bca0; block 66; address 10000bfe7
L10000bca0_66:
    TEST R15D, R15D
    LEA R15, [rel L__TEXT___cstring_244]
    JNE L10000bca0_69
    JMP L10000bca0_68     ; inserted

; Entry 10000bca0; block 67; address 10000c5db
L10000bca0_67:
    LEA RAX, [rel L__DATA___common + 616]
    CMP qword [RAX], 0
    JE L10000bca0_150
    JMP L10000bca0_149     ; inserted

; Entry 10000bca0; block 68; address 10000bff7
L10000bca0_68:
    LEA RDI, [rel L__TEXT___cstring_32547]
    MOV RSI, R15
    CALL L100003422_0
    JMP L10000bca0_70     ; inserted

; Entry 10000bca0; block 69; address 10000c0a1
L10000bca0_69:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    JE L10000bca0_81
    JMP L10000bca0_80     ; inserted

; Entry 10000bca0; block 70; address 10000c006
L10000bca0_70:
    LEA RAX, [rel L__DATA___common + 6360]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L10000bca0_69
    JMP L10000bca0_71     ; inserted

; Entry 10000bca0; block 71; address 10000c019
L10000bca0_71:
    MOV RAX, RBX
    SHR RAX, 61
    MOV dword [RBP + -148], 4
    JNE L10000bca0_73
    JMP L10000bca0_72     ; inserted

; Entry 10000bca0; block 72; address 10000c030
L10000bca0_72:
    LEA RDI, [RBX * 8]
    CALL _malloc
    JMP L10000bca0_74     ; inserted

; Entry 10000bca0; block 73; address 10000ccb8
L10000bca0_73:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -48]
    JNE L10000bca0_242
    JMP L10000bca0_241     ; inserted

; Entry 10000bca0; block 74; address 10000c03d
L10000bca0_74:
    LEA RCX, [rel L__DATA___common + 6384]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JE L10000bca0_73
    JMP L10000bca0_75     ; inserted

; Entry 10000bca0; block 75; address 10000c050
L10000bca0_75:
    LEA RCX, [rel L__DATA___common + 616]
    MOV RCX, qword [RCX]
    TEST RCX, RCX
    JE L10000bca0_77
    JMP L10000bca0_76     ; inserted

; Entry 10000bca0; block 76; address 10000c05f
L10000bca0_76:
    MOV RDX, RAX
    JMP L10000bca0_78     ; inserted

; Entry 10000bca0; block 77; address 10000c075
L10000bca0_77:
    MOV EDX, 8
    MOV RDI, RAX
    MOV RSI, RBX
    LEA RCX, [rel L__TEXT___text + 41544]
    CALL _qsort
    JMP L10000bca0_79     ; inserted

; Entry 10000bca0; block 78; address 10000c062
L10000bca0_78:
    MOV qword [RDX], RCX
    MOV RCX, qword [RCX + 152]
    ADD RDX, 8
    TEST RCX, RCX
    JNE L10000bca0_78
    JMP L10000bca0_77     ; inserted

; Entry 10000bca0; block 79; address 10000c08c
L10000bca0_79:
    LEA R15, [rel L__TEXT___cstring_244]
    LEA R14, [rel L__DATA___bss + 33]
    LEA R12, [RBP + -144]
    JMP L10000bca0_69     ; inserted

; Entry 10000bca0; block 80; address 10000c0ad
L10000bca0_80:
    LEA RAX, [rel L__DATA___common + 448]
    MOV RBX, qword [RAX]
    INC RBX
    LEA RAX, [rel L__DATA___common + 456]
    MOV RDI, qword [RAX]
    ADD RDI, 18446744073709551612
    XOR ESI, ESI
    LEA RDX, [rel L__TEXT___cstring_7043]
    CALL L100015a80_0
    JMP L10000bca0_82     ; inserted

; Entry 10000bca0; block 81; address 10000c112
L10000bca0_81:
    LEA RBX, [rel L__DATA___common + 400]
    MOV RCX, qword [RBX]
    MOV ESI, 42
    MOV EDX, 1
    LEA RDI, [RBP + -96]
    CALL _fread
    JMP L10000bca0_84     ; inserted

; Entry 10000bca0; block 82; address 10000c0d6
L10000bca0_82:
    MOV EDX, 5105
    MOV R14, R13
    LEA R13, [rel L__DATA___common + 1216]
    MOV RDI, R13
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_32574]
    MOV R8, RBX
    MOV R9, RAX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_83     ; inserted

; Entry 10000bca0; block 83; address 10000c0fe
L10000bca0_83:
    MOV RDI, R13
    MOV R13, R14
    LEA R14, [rel L__DATA___bss + 33]
    XOR ESI, ESI
    CALL L100003300_0
    JMP L10000bca0_81     ; inserted

; Entry 10000bca0; block 84; address 10000c12f
L10000bca0_84:
    CMP RAX, 1
    JNE L10000bca0_86
    JMP L10000bca0_85     ; inserted

; Entry 10000bca0; block 85; address 10000c139
L10000bca0_85:
    MOV EDI, 160
    CALL _malloc
    JMP L10000bca0_87     ; inserted

; Entry 10000bca0; block 86; address 10000c2f9
L10000bca0_86:
    CALL ___error
    JMP L10000bca0_113     ; inserted

; Entry 10000bca0; block 87; address 10000c143
L10000bca0_87:
    TEST RAX, RAX
    JE L10000bca0_89
    JMP L10000bca0_88     ; inserted

; Entry 10000bca0; block 88; address 10000c14c
L10000bca0_88:
    MOV R14, RAX
    MOVZX EAX, word [RBP + -96]
    MOV word [R14], AX
    MOVZX ECX, word [RBP + -94]
    MOV word [R14 + 2], CX
    MOVZX ECX, word [RBP + -92]
    MOV word [R14 + 4], CX
    MOVZX ECX, word [RBP + -90]
    MOV word [R14 + 6], CX
    MOV ECX, dword [RBP + -88]
    MOV qword [R14 + 8], RCX
    MOV ECX, dword [RBP + -84]
    MOV qword [R14 + 16], RCX
    MOV ECX, dword [RBP + -80]
    MOV qword [R14 + 24], RCX
    MOV ECX, dword [RBP + -76]
    MOV qword [R14 + 32], RCX
    MOVZX R12D, word [RBP + -72]
    MOV word [R14 + 40], R12W
    MOVZX R13D, word [RBP + -70]
    MOV word [R14 + 44], R13W
    MOVZX EBX, word [RBP + -68]
    MOV word [R14 + 46], BX
    MOVZX ECX, word [RBP + -66]
    MOV qword [R14 + 48], RCX
    MOVZX ECX, word [RBP + -64]
    MOV word [R14 + 56], CX
    MOV ECX, dword [RBP + -62]
    MOV qword [R14 + 72], RCX
    MOV ECX, dword [RBP + -58]
    MOV qword [R14 + 64], RCX
    XOR ECX, ECX
    CMP EAX, 256
    SETB CL
    MOV dword [R14 + 148], ECX
    XORPS XMM0, XMM0
    MOVUPS oword [R14 + 80], XMM0
    MOVUPS oword [R14 + 96], XMM0
    MOVUPS oword [R14 + 112], XMM0
    MOV qword [R14 + 128], 0
    TEST R12W, R12W
    JE L10000bca0_91
    JMP L10000bca0_90     ; inserted

; Entry 10000bca0; block 89; address 10000cc9b
L10000bca0_89:
    LEA RDI, [rel L__TEXT___cstring_32466]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000bca0_94     ; inserted

; Entry 10000bca0; block 90; address 10000c202
L10000bca0_90:
    LEA RDI, [R12 + 1]
    CALL _malloc
    JMP L10000bca0_92     ; inserted

; Entry 10000bca0; block 91; address 10000c325
L10000bca0_91:
    LEA RAX, [rel L__DATA___common + 6360]
    MOV R8, qword [RAX]
    INC R8
    MOV EDX, 5105
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_32691]
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_117     ; inserted

; Entry 10000bca0; block 92; address 10000c20c
L10000bca0_92:
    MOV qword [R14 + 112], RAX
    TEST RAX, RAX
    JE L10000bca0_94
    JMP L10000bca0_93     ; inserted

; Entry 10000bca0; block 93; address 10000c219
L10000bca0_93:
    MOV R15, RAX
    MOV dword [RBP + -148], 4
    TEST R13W, R13W
    JE L10000bca0_96
    JMP L10000bca0_95     ; inserted

; Entry 10000bca0; block 94; address 10000ccae
L10000bca0_94:
    MOV dword [RBP + -148], 4
    JMP L10000bca0_73     ; inserted

; Entry 10000bca0; block 95; address 10000c22c
L10000bca0_95:
    INC R13
    MOV RDI, R13
    CALL _malloc
    JMP L10000bca0_97     ; inserted

; Entry 10000bca0; block 96; address 10000c244
L10000bca0_96:
    TEST BX, BX
    LEA R13, [rel L__DATA___common + 408]
    JE L10000bca0_99
    JMP L10000bca0_98     ; inserted

; Entry 10000bca0; block 97; address 10000c237
L10000bca0_97:
    MOV qword [R14 + 96], RAX
    TEST RAX, RAX
    JE L10000bca0_73
    JMP L10000bca0_96     ; inserted

; Entry 10000bca0; block 98; address 10000c250
L10000bca0_98:
    INC RBX
    MOV RDI, RBX
    CALL _malloc
    JMP L10000bca0_100     ; inserted

; Entry 10000bca0; block 99; address 10000c268
L10000bca0_99:
    LEA RAX, [rel L__DATA___common + 400]
    MOV RCX, qword [RAX]
    MOV EDX, 1
    MOV RDI, R15
    MOV RSI, R12
    MOV RBX, RAX
    CALL _fread
    JMP L10000bca0_101     ; inserted

; Entry 10000bca0; block 100; address 10000c25b
L10000bca0_100:
    MOV qword [R14 + 104], RAX
    TEST RAX, RAX
    JE L10000bca0_73
    JMP L10000bca0_99     ; inserted

; Entry 10000bca0; block 101; address 10000c285
L10000bca0_101:
    CMP RAX, 1
    JNE L10000bca0_103
    JMP L10000bca0_102     ; inserted

; Entry 10000bca0; block 102; address 10000c28b
L10000bca0_102:
    MOVZX ESI, word [R14 + 44]
    TEST RSI, RSI
    JE L10000bca0_105
    JMP L10000bca0_104     ; inserted

; Entry 10000bca0; block 103; address 10000c2d5
L10000bca0_103:
    CALL ___error
    JMP L10000bca0_110     ; inserted

; Entry 10000bca0; block 104; address 10000c295
L10000bca0_104:
    MOV RDI, qword [R14 + 96]
    MOV RCX, qword [RBX]
    MOV EDX, 1
    CALL _fread
    JMP L10000bca0_106     ; inserted

; Entry 10000bca0; block 105; address 10000c2ac
L10000bca0_105:
    MOVZX ESI, word [R14 + 46]
    TEST RSI, RSI
    JE L10000bca0_108
    JMP L10000bca0_107     ; inserted

; Entry 10000bca0; block 106; address 10000c2a6
L10000bca0_106:
    CMP RAX, 1
    JNE L10000bca0_103
    JMP L10000bca0_105     ; inserted

; Entry 10000bca0; block 107; address 10000c2ba
L10000bca0_107:
    MOV RDI, qword [R14 + 104]
    MOV RCX, qword [RBX]
    MOV EDX, 1
    CALL _fread
    JMP L10000bca0_109     ; inserted

; Entry 10000bca0; block 108; address 10000c793
L10000bca0_108:
    MOV RAX, qword [R14 + 112]
    MOVZX ECX, word [R14 + 40]
    MOV byte [RAX + RCX], 0
    MOV RDI, qword [R14 + 112]
    CALL L100009bfa_0
    JMP L10000bca0_166     ; inserted

; Entry 10000bca0; block 109; address 10000c2cb
L10000bca0_109:
    CMP RAX, 1
    JE L10000bca0_108
    JMP L10000bca0_103     ; inserted

; Entry 10000bca0; block 110; address 10000c2da
L10000bca0_110:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000bca0_111     ; inserted

; Entry 10000bca0; block 111; address 10000c2e1
L10000bca0_111:
    LEA RDI, [rel L__TEXT___cstring_32724]
    MOV RSI, RAX
    CALL L1000034f4_0
    JMP L10000bca0_112     ; inserted

; Entry 10000bca0; block 112; address 10000c2f0
L10000bca0_112:
    LEA R15, [rel L__TEXT___cstring_244]
    JMP L10000bca0_119

; Entry 10000bca0; block 113; address 10000c2fe
L10000bca0_113:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000bca0_114     ; inserted

; Entry 10000bca0; block 114; address 10000c305
L10000bca0_114:
    LEA RDI, [rel L__TEXT___cstring_32594]
    MOV RSI, RAX
    CALL L1000034f4_0
    JMP L10000bca0_115     ; inserted

; Entry 10000bca0; block 115; address 10000c314
L10000bca0_115:
    LEA RDI, [rel L__TEXT___cstring_32622]
    MOV RSI, R15
    CALL L1000034f4_0
    JMP L10000bca0_116     ; inserted

; Entry 10000bca0; block 116; address 10000c323
L10000bca0_116:
    JMP L10000bca0_120

; Entry 10000bca0; block 117; address 10000c351
L10000bca0_117:
    LEA RDI, [rel L__TEXT___cstring_32695]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000bca0_118     ; inserted

; Entry 10000bca0; block 118; address 10000c360
L10000bca0_118:
    LEA R13, [rel L__DATA___common + 408]
    LEA RBX, [rel L__DATA___common + 400]
    JMP L10000bca0_119     ; inserted

; Entry 10000bca0; block 119; address 10000c36e
L10000bca0_119:
    LEA R14, [rel L__DATA___bss + 33]
    LEA R12, [RBP + -144]
    JMP L10000bca0_120     ; inserted

; Entry 10000bca0; block 120; address 10000c37c
L10000bca0_120:
    LEA RDI, [rel L__TEXT___cstring_32668]
    MOV RSI, R15
    CALL L1000034f4_0
    JMP L10000bca0_121     ; inserted

; Entry 10000bca0; block 121; address 10000c38b
L10000bca0_121:
    MOV RDI, qword [RBX]
    CALL L10000f226_0
    JMP L10000bca0_122     ; inserted

; Entry 10000bca0; block 122; address 10000c393
L10000bca0_122:
    MOV R15D, 1
    JMP L10000bca0_132     ; inserted

; Entry 10000bca0; block 123; address 10000bf5f
L10000bca0_123:
    MOV RDI, qword [RBX]
    CALL _ftello
    JMP L10000bca0_52     ; inserted

; Entry 10000bca0; block 124; address 10000c3a1
L10000bca0_124:
    JMP L10000bca0_51

; Entry 10000bca0; block 125; address 10000c3c8
L10000bca0_125:
    MOV EDX, 5105
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_32347]
    JMP L10000bca0_127

; Entry 10000bca0; block 126; address 10000c404
L10000bca0_126:
    MOV EDX, 5105
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_32378]
    JMP L10000bca0_127

; Entry 10000bca0; block 127; address 10000c458
L10000bca0_127:
    MOV R8, R14
    LEA R14, [rel L__DATA___bss + 33]
    MOV R9, RAX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_129     ; inserted

; Entry 10000bca0; block 128; address 10000c440
L10000bca0_128:
    MOV EDX, 5105
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_32415]
    JMP L10000bca0_127     ; inserted

; Entry 10000bca0; block 129; address 10000c46c
L10000bca0_129:
    MOV RDI, RBX
    MOV ESI, 1
    CALL L100003300_0
    JMP L10000bca0_130     ; inserted

; Entry 10000bca0; block 130; address 10000c479
L10000bca0_130:
    LEA RBX, [rel L__DATA___common + 400]
    JMP L10000bca0_147     ; inserted

; Entry 10000bca0; block 131; address 10000c488
L10000bca0_131:
    JMP L10000bca0_132

; Entry 10000bca0; block 132; address 10000c399
L10000bca0_132:
    TEST EAX, EAX
    JNE L10000bca0_123
    JMP L10000bca0_124     ; inserted

; Entry 10000bca0; block 133; address 10000c499
L10000bca0_133:
    LEA RAX, [rel L__DATA___common + 448]
    MOV R14, qword [RAX]
    INC R14
    ADD RBX, 18446744073709551612
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RDX, [rel L__TEXT___cstring_7043]
    CALL L100015a80_0
    JMP L10000bca0_135     ; inserted

; Entry 10000bca0; block 134; address 10000c4f1
L10000bca0_134:
    MOV EDI, 160
    CALL _malloc
    JMP L10000bca0_137     ; inserted

; Entry 10000bca0; block 135; address 10000c4bb
L10000bca0_135:
    MOV EDX, 5105
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_32447]
    MOV R8, R14
    LEA R14, [rel L__DATA___bss + 33]
    MOV R9, RAX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_136     ; inserted

; Entry 10000bca0; block 136; address 10000c4e7
L10000bca0_136:
    MOV RDI, RBX
    XOR ESI, ESI
    CALL L100003300_0
    JMP L10000bca0_134     ; inserted

; Entry 10000bca0; block 137; address 10000c4fb
L10000bca0_137:
    TEST RAX, RAX
    JE L10000bca0_89
    JMP L10000bca0_138     ; inserted

; Entry 10000bca0; block 138; address 10000c504
L10000bca0_138:
    MOV RBX, RAX
    MOV dword [RAX + 148], 0
    XORPS XMM0, XMM0
    MOVUPS oword [RAX], XMM0
    MOVUPS oword [RAX + 16], XMM0
    MOVUPS oword [RAX + 26], XMM0
    XOR EAX, EAX
    MOV qword [RBX + 44], RAX
    MOV qword [RBX + 50], RAX
    MOVUPS oword [RBX + 64], XMM0
    MOVUPS oword [RBX + 80], XMM0
    MOVUPS oword [RBX + 96], XMM0
    MOVUPS oword [RBX + 112], XMM0
    MOV qword [RBX + 128], RAX
    MOV RDI, RBX
    CALL L10000e1ae_0
    JMP L10000bca0_139     ; inserted

; Entry 10000bca0; block 139; address 10000c548
L10000bca0_139:
    TEST R15D, R15D
    LEA R15, [rel L__DATA___common + 1216]
    MOV dword [RBP + -152], EAX
    JE L10000bca0_141
    JMP L10000bca0_140     ; inserted

; Entry 10000bca0; block 140; address 10000c55a
L10000bca0_140:
    LEA RAX, [rel L__DATA___common + 448]
    MOV R14, qword [RAX]
    INC R14
    LEA RAX, [rel L__DATA___common + 456]
    MOV RDI, qword [RAX]
    ADD RDI, 18446744073709551612
    XOR ESI, ESI
    LEA RDX, [rel L__TEXT___cstring_7043]
    CALL L100015a80_0
    JMP L10000bca0_142     ; inserted

; Entry 10000bca0; block 141; address 10000c5bb
L10000bca0_141:
    TEST EAX, EAX
    JE L10000bca0_146
    JMP L10000bca0_145     ; inserted

; Entry 10000bca0; block 142; address 10000c583
L10000bca0_142:
    MOV EDX, 5105
    MOV RDI, R15
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_32492]
    MOV R8, R14
    LEA R14, [rel L__DATA___bss + 33]
    MOV R9, RAX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_143     ; inserted

; Entry 10000bca0; block 143; address 10000c5a8
L10000bca0_143:
    MOV RDI, R15
    MOV ESI, 1
    CALL L100003300_0
    JMP L10000bca0_144     ; inserted

; Entry 10000bca0; block 144; address 10000c5b5
L10000bca0_144:
    MOV EAX, dword [RBP + -152]
    JMP L10000bca0_141     ; inserted

; Entry 10000bca0; block 145; address 10000c5c3
L10000bca0_145:
    XOR R15D, R15D
    CMP EAX, 2
    LEA RBX, [rel L__DATA___common + 400]
    JNE L10000bca0_147
    JMP L10000bca0_148     ; inserted

; Entry 10000bca0; block 146; address 10000c6e4
L10000bca0_146:
    LEA RAX, [rel L__DATA___common + 6360]
    INC qword [RAX]
    LEA RAX, [rel L__DATA___common + 192]
    INC qword [RAX]
    MOV RAX, qword [RBX + 24]
    LEA RCX, [rel L__DATA___common + 224]
    ADD qword [RCX], RAX
    LEA RAX, [rel L__DATA___common + 616]
    CMP qword [RAX], 0
    MOV RCX, qword [RBP + -168]
    CMOVE RCX, RAX
    MOV qword [RCX], RBX
    MOV RAX, RBX
    ADD RAX, 152
    MOV qword [RBP + -168], RAX
    MOV qword [RBX + 152], 0
    MOV dword [RBP + -152], 0
    XOR R15D, R15D
    JMP L10000bca0_130

; Entry 10000bca0; block 147; address 10000c480
L10000bca0_147:
    MOV RDI, qword [RBX]
    CALL L10000f226_0
    JMP L10000bca0_131     ; inserted

; Entry 10000bca0; block 148; address 10000c5d6
L10000bca0_148:
    JMP L10000bca0_51

; Entry 10000bca0; block 149; address 10000c5ec
L10000bca0_149:
    MOV dword [RBP + -148], R15D
    MOVUPS XMM0, oword [rel L__TEXT___cstring_33104]
    LEA R13, [rel L__DATA___common + 1216]
    MOVAPS oword [R13], XMM0
    MOV RAX, 9118741525979502
    MOV qword [R13 + 14], RAX
    XOR EBX, EBX
    MOV R15, R12
    LEA R12, [rel L__TEXT___cstring_33126]
    JMP L10000bca0_153     ; inserted

; Entry 10000bca0; block 150; address 10000c74c
L10000bca0_150:
    MOV RDI, R14
    LEA RSI, [rel L__TEXT___cstring_32897]
    CALL L10000f2ed_0
    JMP L10000bca0_160     ; inserted

; Entry 10000bca0; block 151; address 10000c639
L10000bca0_151:
    MOV EDX, 5105
    MOV RDI, R13
    MOV RSI, R15
    CALL ___strcat_chk
    JMP L10000bca0_152     ; inserted

; Entry 10000bca0; block 152; address 10000c649
L10000bca0_152:
    INC RBX
    CMP RBX, 4
    JNE L10000bca0_153
    JMP L10000bca0_154     ; inserted

; Entry 10000bca0; block 153; address 10000c620
L10000bca0_153:
    MOVSX R8D, byte [RBX + R14]
    MOV EDX, 40
    MOV RDI, R15
    XOR ESI, ESI
    MOV RCX, R12
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_151     ; inserted

; Entry 10000bca0; block 154; address 10000c652
L10000bca0_154:
    LEA RAX, [rel L__DATA___common + 448]
    MOV RBX, qword [RAX]
    LEA RAX, [rel L__DATA___common + 456]
    MOV RDI, qword [RAX]
    ADD RDI, 18446744073709551612
    XOR ESI, ESI
    LEA RDX, [rel L__TEXT___cstring_7043]
    CALL L100015a80_0
    JMP L10000bca0_155     ; inserted

; Entry 10000bca0; block 155; address 10000c678
L10000bca0_155:
    MOV EDX, 40
    MOV RDI, R15
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_33132]
    MOV R8, RBX
    MOV R9, RAX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_156     ; inserted

; Entry 10000bca0; block 156; address 10000c696
L10000bca0_156:
    MOV EDX, 5105
    MOV RDI, R13
    MOV RSI, R15
    CALL ___strcat_chk
    JMP L10000bca0_157     ; inserted

; Entry 10000bca0; block 157; address 10000c6a6
L10000bca0_157:
    MOV RDI, R13
    LEA RBX, [rel L__TEXT___cstring_244]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000bca0_158     ; inserted

; Entry 10000bca0; block 158; address 10000c6b8
L10000bca0_158:
    LEA RDI, [rel L__TEXT___cstring_33151]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000bca0_159     ; inserted

; Entry 10000bca0; block 159; address 10000c6c7
L10000bca0_159:
    LEA R13, [rel L__DATA___common + 408]
    MOV R12, R15
    LEA RBX, [rel L__DATA___common + 400]
    MOV R15D, dword [RBP + -148]
    JMP L10000bca0_147

; Entry 10000bca0; block 160; address 10000c75b
L10000bca0_160:
    TEST EAX, EAX
    JE L10000bca0_149
    JMP L10000bca0_161     ; inserted

; Entry 10000bca0; block 161; address 10000c763
L10000bca0_161:
    LEA RAX, [rel L__DATA___common + 440]
    MOV RAX, qword [RAX]
    TEST RAX, RAX
    LEA RBX, [rel L__DATA___common + 400]
    JE L10000bca0_163
    JMP L10000bca0_162     ; inserted

; Entry 10000bca0; block 162; address 10000c77d
L10000bca0_162:
    CMP RAX, 1
    JNE L10000bca0_165
    JMP L10000bca0_164     ; inserted

; Entry 10000bca0; block 163; address 10000c997
L10000bca0_163:
    LEA RDI, [rel L__TEXT___cstring_33052]
    JMP L10000bca0_195

; Entry 10000bca0; block 164; address 10000c787
L10000bca0_164:
    LEA RDI, [rel L__TEXT___cstring_32902]
    JMP L10000bca0_195

; Entry 10000bca0; block 165; address 10000c9a0
L10000bca0_165:
    LEA RDI, [rel L__TEXT___cstring_32976]
    JMP L10000bca0_195     ; inserted

; Entry 10000bca0; block 166; address 10000c7a9
L10000bca0_166:
    TEST RAX, RAX
    JE L10000bca0_168
    JMP L10000bca0_167     ; inserted

; Entry 10000bca0; block 167; address 10000c7b2
L10000bca0_167:
    MOV R15, RAX
    MOV RAX, qword [RAX + 8]
    CMP RAX, qword [R14 + 8]
    JNE L10000bca0_168
    JMP L10000bca0_169     ; inserted

; Entry 10000bca0; block 168; address 10000c94e
L10000bca0_168:
    MOV R8, qword [R14 + 112]
    MOV EDX, 5105
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_32878]
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_193     ; inserted

; Entry 10000bca0; block 169; address 10000c7c3
L10000bca0_169:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    LEA R12, [RBP + -144]
    JE L10000bca0_171
    JMP L10000bca0_170     ; inserted

; Entry 10000bca0; block 170; address 10000c7d6
L10000bca0_170:
    MOV R8, qword [R14 + 112]
    MOV EDX, 5105
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_10832]
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_172     ; inserted

; Entry 10000bca0; block 171; address 10000c803
L10000bca0_171:
    MOV R8, qword [R15 + 16]
    MOV R9, qword [R14 + 16]
    CMP R8, R9
    JE L10000bca0_174
    JMP L10000bca0_173     ; inserted

; Entry 10000bca0; block 172; address 10000c7f9
L10000bca0_172:
    MOV RDI, RBX
    XOR ESI, ESI
    CALL L100003300_0
    JMP L10000bca0_171     ; inserted

; Entry 10000bca0; block 173; address 10000c810
L10000bca0_173:
    MOV EDX, 5105
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_32747]
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_175     ; inserted

; Entry 10000bca0; block 174; address 10000c83e
L10000bca0_174:
    MOVZX EAX, word [R14]
    MOV word [R15], AX
    MOVZX EAX, word [R14 + 44]
    MOV word [R15 + 44], AX
    MOVZX EAX, word [R14 + 46]
    MOV word [R15 + 46], AX
    MOVUPS XMM0, oword [R14 + 96]
    MOVUPS oword [R15 + 96], XMM0
    MOVZX EAX, word [R14 + 56]
    MOV word [R15 + 56], AX
    MOV RAX, qword [R14 + 72]
    MOV qword [R15 + 72], RAX
    MOV EAX, dword [R14 + 148]
    MOV dword [R15 + 148], EAX
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    LEA RBX, [rel L__DATA___common + 392]
    JE L10000bca0_177
    JMP L10000bca0_176     ; inserted

; Entry 10000bca0; block 175; address 10000c82f
L10000bca0_175:
    MOV RDI, RBX
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000bca0_174     ; inserted

; Entry 10000bca0; block 176; address 10000c897
L10000bca0_176:
    MOV RDI, R15
    CALL L10000f354_0
    JMP L10000bca0_177     ; inserted

; Entry 10000bca0; block 177; address 10000c89f
L10000bca0_177:
    MOV RDI, qword [RBX]
    CALL _ftello
    JMP L10000bca0_178     ; inserted

; Entry 10000bca0; block 178; address 10000c8a7
L10000bca0_178:
    MOV RCX, RBX
    MOV RBX, RAX
    MOV RDI, qword [RCX]
    MOV RSI, qword [R15 + 64]
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000bca0_179     ; inserted

; Entry 10000bca0; block 179; address 10000c8bb
L10000bca0_179:
    TEST EAX, EAX
    JNE L10000bca0_181
    JMP L10000bca0_180     ; inserted

; Entry 10000bca0; block 180; address 10000c8c3
L10000bca0_180:
    MOV RDI, R15
    MOV ESI, 1
    CALL L10000d090_0
    JMP L10000bca0_182     ; inserted

; Entry 10000bca0; block 181; address 10000cfdd
L10000bca0_181:
    LEA RBX, [rel L__DATA___common + 400]
    MOV RDI, qword [RBX]
    CALL _fclose
    JMP L10000bca0_289     ; inserted

; Entry 10000bca0; block 182; address 10000c8d0
L10000bca0_182:
    TEST EAX, EAX
    LEA RSI, [rel L__TEXT___cstring_244]
    JE L10000bca0_184
    JMP L10000bca0_183     ; inserted

; Entry 10000bca0; block 183; address 10000c8db
L10000bca0_183:
    LEA RDI, [rel L__TEXT___cstring_32809]
    CALL L1000034f4_0
    JMP L10000bca0_184     ; inserted

; Entry 10000bca0; block 184; address 10000c8e7
L10000bca0_184:
    LEA R15, [rel L__DATA___common + 392]
    MOV RDI, qword [R15]
    MOV RSI, RBX
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000bca0_185     ; inserted

; Entry 10000bca0; block 185; address 10000c8fb
L10000bca0_185:
    TEST EAX, EAX
    LEA R14, [rel L__DATA___bss + 33]
    JNE L10000bca0_187
    JMP L10000bca0_186     ; inserted

; Entry 10000bca0; block 186; address 10000c90a
L10000bca0_186:
    MOV RDI, qword [R15]
    CALL _ftello
    JMP L10000bca0_188     ; inserted

; Entry 10000bca0; block 187; address 10000d008
L10000bca0_187:
    LEA RBX, [rel L__DATA___common + 400]
    MOV RDI, qword [RBX]
    CALL _fclose
    JMP L10000bca0_292     ; inserted

; Entry 10000bca0; block 188; address 10000c912
L10000bca0_188:
    CMP RBX, RAX
    JNE L10000bca0_190
    JMP L10000bca0_189     ; inserted

; Entry 10000bca0; block 189; address 10000c91b
L10000bca0_189:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    LEA RBX, [rel L__DATA___common + 400]
    MOV R15D, 1
    JE L10000bca0_147
    JMP L10000bca0_191     ; inserted

; Entry 10000bca0; block 190; address 10000d033
L10000bca0_190:
    LEA RBX, [rel L__DATA___common + 400]
    MOV RDI, qword [RBX]
    CALL _fclose
    JMP L10000bca0_296     ; inserted

; Entry 10000bca0; block 191; address 10000c938
L10000bca0_191:
    LEA RDI, [rel L__TEXT___cstring_244]
    MOV ESI, 1
    CALL L100003300_0
    JMP L10000bca0_192     ; inserted

; Entry 10000bca0; block 192; address 10000c949
L10000bca0_192:
    JMP L10000bca0_147

; Entry 10000bca0; block 193; address 10000c971
L10000bca0_193:
    MOV R15D, 1
    MOV RDI, RBX
    MOV ESI, 1
    CALL L100003300_0
    JMP L10000bca0_194     ; inserted

; Entry 10000bca0; block 194; address 10000c984
L10000bca0_194:
    LEA R14, [rel L__DATA___bss + 33]
    LEA R12, [RBP + -144]
    JMP L10000bca0_130

; Entry 10000bca0; block 195; address 10000c9a7
L10000bca0_195:
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L100003422_0
    JMP L10000bca0_196     ; inserted

; Entry 10000bca0; block 196; address 10000c9b3
L10000bca0_196:
    JMP L10000bca0_147

; Entry 10000bca0; block 197; address 10000c9c0
L10000bca0_197:
    CALL _fclose
    JMP L10000bca0_198     ; inserted

; Entry 10000bca0; block 198; address 10000c9c5
L10000bca0_198:
    MOV qword [RBX], 0
    MOV RDI, qword [RBP + -160]
    CALL _free
    JMP L10000bca0_199     ; inserted

; Entry 10000bca0; block 199; address 10000c9d8
L10000bca0_199:
    CMP dword [RBP + -152], 2
    LEA R14, [rel L__DATA___common + 448]
    JE L10000bca0_43
    JMP L10000bca0_200     ; inserted

; Entry 10000bca0; block 200; address 10000c9ec
L10000bca0_200:
    MOV RSI, qword [R14]
    INC RSI
    MOV qword [R14], RSI
    MOV dword [RBP + -148], 0
    LEA RAX, [rel L__DATA___common + 440]
    CMP RSI, qword [RAX]
    JB L10000bca0_201
    JMP L10000bca0_202     ; inserted

; Entry 10000bca0; block 201; address 10000bf07
L10000bca0_201:
    MOV RDI, qword [R13]
    CALL L1000127e1_0
    JMP L10000bca0_44     ; inserted

; Entry 10000bca0; block 202; address 10000ca0f
L10000bca0_202:
    JMP L10000bca0_73

; Entry 10000bca0; block 203; address 10000ca34
L10000bca0_203:
    CMP EAX, 2
    JE L10000bca0_205
    JMP L10000bca0_204     ; inserted

; Entry 10000bca0; block 204; address 10000ca3d
L10000bca0_204:
    CMP EAX, 3
    JE L10000bca0_207
    JMP L10000bca0_206     ; inserted

; Entry 10000bca0; block 205; address 10000cdfd
L10000bca0_205:
    LEA RBX, [rel L__TEXT___cstring_244]
    MOV RDI, RBX
    MOV ESI, 1
    CALL L100003300_0
    JMP L10000bca0_263     ; inserted

; Entry 10000bca0; block 206; address 10000ca42
L10000bca0_206:
    CMP EAX, 9
    JE L10000bca0_209
    JMP L10000bca0_208     ; inserted

; Entry 10000bca0; block 207; address 10000ca8e
L10000bca0_207:
    LEA R12, [rel L__TEXT___cstring_244]
    MOV RDI, R12
    MOV ESI, 1
    CALL L100003300_0
    JMP L10000bca0_215     ; inserted

; Entry 10000bca0; block 208; address 10000ca4b
L10000bca0_208:
    MOV RDI, qword [R13]
    MOV RSI, qword [R14]
    CALL L1000127e1_0
    JMP L10000bca0_210     ; inserted

; Entry 10000bca0; block 209; address 10000ce2f
L10000bca0_209:
    LEA RDI, [rel L__TEXT___cstring_32264]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000bca0_265     ; inserted

; Entry 10000bca0; block 210; address 10000ca57
L10000bca0_210:
    MOV RBX, RAX
    MOV RDI, RAX
    LEA RSI, [rel L__TEXT___cstring_6381]
    CALL _fopen
    JMP L10000bca0_211     ; inserted

; Entry 10000bca0; block 211; address 10000ca69
L10000bca0_211:
    MOV qword [R15], RAX
    TEST RAX, RAX
    LEA R12, [RBP + -144]
    JE L10000bca0_212
    JMP L10000bca0_213     ; inserted

; Entry 10000bca0; block 212; address 10000ca2c
L10000bca0_212:
    MOV RDI, qword [R14]
    CALL L1000128e3_0
    JMP L10000bca0_203     ; inserted

; Entry 10000bca0; block 213; address 10000ca78
L10000bca0_213:
    MOV qword [RBP + -160], RBX
    MOV RBX, R15
    MOV R15D, dword [RBP + -148]
    JMP L10000bca0_214

; Entry 10000bca0; block 214; address 10000bf48
L10000bca0_214:
    MOV RDI, RAX
    CALL L10000f226_0
    JMP L10000bca0_49     ; inserted

; Entry 10000bca0; block 215; address 10000caa2
L10000bca0_215:
    MOV R8, qword [R14]
    MOV EDX, 5105
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___cstring_32324]
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_216     ; inserted

; Entry 10000bca0; block 216; address 10000cac4
L10000bca0_216:
    MOV RDI, RBX
    MOV RSI, R12
    CALL L1000034f4_0
    JMP L10000bca0_217     ; inserted

; Entry 10000bca0; block 217; address 10000cacf
L10000bca0_217:
    MOV R15D, dword [RBP + -148]
    JMP L10000bca0_200

; Entry 10000bca0; block 218; address 10000cb33
L10000bca0_218:
    JMP L10000bca0_223

; Entry 10000bca0; block 219; address 10000cb48
L10000bca0_219:
    CMP RAX, 17
    JA L10000bca0_221
    JMP L10000bca0_220     ; inserted

; Entry 10000bca0; block 220; address 10000cb52
L10000bca0_220:
    LEA RDX, [rel L__TEXT___cstring_7043]
    MOV RDI, RAX
    XOR ESI, ESI
    CALL L100015a80_0
    JMP L10000bca0_222     ; inserted

; Entry 10000bca0; block 221; address 10000ccf7
L10000bca0_221:
    MOVZX ECX, word [RBP + -96]
    LEA RAX, [RCX + 1]
    LEA RDX, [rel L__DATA___common + 440]
    MOV qword [RDX], RAX
    LEA RDX, [rel L__DATA___common + 448]
    MOV qword [RDX], RCX
    CMP RCX, 65535
    JE L10000bca0_244
    JMP L10000bca0_243     ; inserted

; Entry 10000bca0; block 222; address 10000cb63
L10000bca0_222:
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_31883]
    MOV EDX, 5105
    MOV RDI, RBX
    XOR ESI, ESI
    MOV R8, RAX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_223     ; inserted

; Entry 10000bca0; block 223; address 10000cb85
L10000bca0_223:
    LEA RSI, [rel L__TEXT___cstring_244]
    MOV RDI, RBX
    CALL L1000034f4_0
    JMP L10000bca0_224     ; inserted

; Entry 10000bca0; block 224; address 10000cb94
L10000bca0_224:
    LEA RAX, [rel L__DATA___common + 440]
    CMP qword [RAX], 0
    JE L10000bca0_226
    JMP L10000bca0_225     ; inserted

; Entry 10000bca0; block 225; address 10000cba5
L10000bca0_225:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000bca0_228
    JMP L10000bca0_227     ; inserted

; Entry 10000bca0; block 226; address 10000cc59
L10000bca0_226:
    MOV RDI, qword [R12]
    XOR ESI, ESI
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000bca0_237     ; inserted

; Entry 10000bca0; block 227; address 10000cbb5
L10000bca0_227:
    LEA RAX, [rel L__DATA___common + 440]
    CMP qword [RAX], 1000000
    JNE L10000bca0_36
    JMP L10000bca0_229     ; inserted

; Entry 10000bca0; block 228; address 10000cce4
L10000bca0_228:
    LEA RAX, [rel L__DATA___common + 440]
    MOV qword [RAX], 1
    JMP L10000bca0_36

; Entry 10000bca0; block 229; address 10000cbc9
L10000bca0_229:
    LEA RDI, [rel L__TEXT___cstring_32169]
    XOR EAX, EAX
    CALL _printf
    JMP L10000bca0_230     ; inserted

; Entry 10000bca0; block 230; address 10000cbd7
L10000bca0_230:
    MOV RAX, qword [rel ___stdoutp]
    MOV RDI, qword [RAX]
    CALL _fflush
    JMP L10000bca0_231     ; inserted

; Entry 10000bca0; block 231; address 10000cbe6
L10000bca0_231:
    MOV RAX, qword [rel ___stdinp]
    MOV RDX, qword [RAX]
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    MOV ESI, 100
    CALL _fgets
    JMP L10000bca0_232     ; inserted

; Entry 10000bca0; block 232; address 10000cc04
L10000bca0_232:
    TEST RAX, RAX
    JE L10000bca0_234
    JMP L10000bca0_233     ; inserted

; Entry 10000bca0; block 233; address 10000cc09
L10000bca0_233:
    MOV AL, byte [RBX]
    OR AL, 32
    CMP AL, 121
    JNE L10000bca0_234
    JMP L10000bca0_235     ; inserted

; Entry 10000bca0; block 234; address 10000cc32
L10000bca0_234:
    LEA RAX, [rel L__DATA___common + 440]
    CMP qword [RAX], 1000000
    JNE L10000bca0_36
    JMP L10000bca0_236     ; inserted

; Entry 10000bca0; block 235; address 10000cc11
L10000bca0_235:
    LEA RAX, [rel L__DATA___common + 440]
    MOV qword [RAX], 1
    LEA RDI, [rel L__TEXT___cstring_32209]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L100003422_0
    JMP L10000bca0_234     ; inserted

; Entry 10000bca0; block 236; address 10000cc46
L10000bca0_236:
    LEA RAX, [rel L__DATA___common + 440]
    MOV qword [RAX], 100000
    JMP L10000bca0_36

; Entry 10000bca0; block 237; address 10000cc66
L10000bca0_237:
    MOV RDI, qword [R12]
    TEST EAX, EAX
    JE L10000bca0_238
    JMP L10000bca0_35     ; inserted

; Entry 10000bca0; block 238; address 10000cdb0
L10000bca0_238:
    CALL L10000f226_0
    JMP L10000bca0_254     ; inserted

; Entry 10000bca0; block 239; address 10000cc77
L10000bca0_239:
    MOV qword [R12], 0
    MOV RSI, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_31736]
    CALL L1000034f4_0
    JMP L10000bca0_240     ; inserted

; Entry 10000bca0; block 240; address 10000cc8f
L10000bca0_240:
    MOV dword [RBP + -148], 11
    JMP L10000bca0_73

; Entry 10000bca0; block 241; address 10000cccc
L10000bca0_241:
    MOV EAX, dword [RBP + -148]
    ADD RSP, 136
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000bca0; block 242; address 10000d073
L10000bca0_242:
    CALL ___stack_chk_fail

; Entry 10000bca0; block 243; address 10000cd1c
L10000bca0_243:
    MOVZX ECX, word [RBP + -94]
    CMP RCX, RAX
    JBE L10000bca0_244
    JMP L10000bca0_245     ; inserted

; Entry 10000bca0; block 244; address 10000cd4e
L10000bca0_244:
    MOVZX EBX, word [RBP + -80]
    LEA R14, [rel L__DATA___common + 6352]
    MOV word [R14], BX
    TEST BX, BX
    JE L10000bca0_248
    JMP L10000bca0_247     ; inserted

; Entry 10000bca0; block 245; address 10000cd25
L10000bca0_245:
    LEA RDI, [rel L__TEXT___cstring_31935]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000bca0_246     ; inserted

; Entry 10000bca0; block 246; address 10000cd38
L10000bca0_246:
    LEA RAX, [rel L__DATA___common + 440]
    MOV qword [RAX], 0
    XOR R8D, R8D
    JMP L10000bca0_283

; Entry 10000bca0; block 247; address 10000cd66
L10000bca0_247:
    LEA RDI, [RBX + 1]
    CALL _malloc
    JMP L10000bca0_249     ; inserted

; Entry 10000bca0; block 248; address 10000cf57
L10000bca0_248:
    LEA RAX, [rel L__DATA___common + 440]
    MOV R8, qword [RAX]
    CMP R8, 1
    JNE L10000bca0_283
    JMP L10000bca0_282     ; inserted

; Entry 10000bca0; block 249; address 10000cd6f
L10000bca0_249:
    LEA R15, [rel L__DATA___common + 632]
    MOV qword [R15], RAX
    TEST RAX, RAX
    JE L10000bca0_94
    JMP L10000bca0_250     ; inserted

; Entry 10000bca0; block 250; address 10000cd82
L10000bca0_250:
    MOV RCX, qword [R12]
    MOV EDX, 1
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _fread
    JMP L10000bca0_251     ; inserted

; Entry 10000bca0; block 251; address 10000cd96
L10000bca0_251:
    MOV RDI, qword [R15]
    CMP RAX, 1
    JNE L10000bca0_253
    JMP L10000bca0_252     ; inserted

; Entry 10000bca0; block 252; address 10000cda3
L10000bca0_252:
    MOVZX EAX, word [R14]
    MOV byte [RDI + RAX], 0
    JMP L10000bca0_248

; Entry 10000bca0; block 253; address 10000cf38
L10000bca0_253:
    CALL _free
    JMP L10000bca0_281     ; inserted

; Entry 10000bca0; block 254; address 10000cdb5
L10000bca0_254:
    TEST EAX, EAX
    JE L10000bca0_225
    JMP L10000bca0_255     ; inserted

; Entry 10000bca0; block 255; address 10000cdbd
L10000bca0_255:
    MOV RDI, qword [R12]
    CALL _ftello
    JMP L10000bca0_256     ; inserted

; Entry 10000bca0; block 256; address 10000cdc6
L10000bca0_256:
    LEA RBX, [rel L__DATA___common + 456]
    MOV qword [RBX], RAX
    CMP RAX, 4
    JNE L10000bca0_258
    JMP L10000bca0_257     ; inserted

; Entry 10000bca0; block 257; address 10000cdd6
L10000bca0_257:
    LEA RDI, [rel L__DATA___bss + 33]
    LEA RSI, [rel L__TEXT___cstring_32164]
    CALL L10000f2ed_0
    JMP L10000bca0_259     ; inserted

; Entry 10000bca0; block 258; address 10000ce4d
L10000bca0_258:
    MOV CL, 1
    JA L10000bca0_266
    JMP L10000bca0_261     ; inserted

; Entry 10000bca0; block 259; address 10000cde9
L10000bca0_259:
    TEST EAX, EAX
    JE L10000bca0_261
    JMP L10000bca0_260     ; inserted

; Entry 10000bca0; block 260; address 10000cded
L10000bca0_260:
    MOV RDI, qword [R12]
    CALL L10000f226_0
    JMP L10000bca0_262     ; inserted

; Entry 10000bca0; block 261; address 10000ce51
L10000bca0_261:
    LEA RDI, [rel L__DATA___bss + 33]
    LEA RSI, [rel L__TEXT___cstring_32164]
    CALL L10000f2ed_0
    JMP L10000bca0_267     ; inserted

; Entry 10000bca0; block 262; address 10000cdf6
L10000bca0_262:
    TEST EAX, EAX
    SETNE CL
    JMP L10000bca0_266

; Entry 10000bca0; block 263; address 10000ce11
L10000bca0_263:
    LEA RDI, [rel L__TEXT___cstring_32287]
    MOV RSI, RBX
    CALL L1000034f4_0
    JMP L10000bca0_264     ; inserted

; Entry 10000bca0; block 264; address 10000ce20
L10000bca0_264:
    MOV dword [RBP + -148], 2
    JMP L10000bca0_73

; Entry 10000bca0; block 265; address 10000ce3e
L10000bca0_265:
    MOV dword [RBP + -148], 9
    JMP L10000bca0_73

; Entry 10000bca0; block 266; address 10000ce78
L10000bca0_266:
    TEST CL, CL
    JE L10000bca0_225
    JMP L10000bca0_269     ; inserted

; Entry 10000bca0; block 267; address 10000ce64
L10000bca0_267:
    MOV CL, 1
    TEST EAX, EAX
    JE L10000bca0_266
    JMP L10000bca0_268     ; inserted

; Entry 10000bca0; block 268; address 10000ce6a
L10000bca0_268:
    LEA RAX, [rel L__DATA___common + 440]
    MOV qword [RAX], 99999
    JMP L10000bca0_266     ; inserted

; Entry 10000bca0; block 269; address 10000ce80
L10000bca0_269:
    LEA RAX, [rel L__DATA___common + 440]
    CMP qword [RAX], 0
    JNE L10000bca0_225
    JMP L10000bca0_270     ; inserted

; Entry 10000bca0; block 270; address 10000ce91
L10000bca0_270:
    MOV RDI, qword [R12]
    CALL _ftello
    JMP L10000bca0_271     ; inserted

; Entry 10000bca0; block 271; address 10000ce9a
L10000bca0_271:
    MOV qword [RBX], RAX
    CMP RAX, 8
    JNE L10000bca0_225
    JMP L10000bca0_272     ; inserted

; Entry 10000bca0; block 272; address 10000cea7
L10000bca0_272:
    LEA RDI, [rel L__DATA___bss + 33]
    LEA RSI, [rel L__TEXT___cstring_30429]
    CALL L10000f2ed_0
    JMP L10000bca0_273     ; inserted

; Entry 10000bca0; block 273; address 10000ceba
L10000bca0_273:
    TEST EAX, EAX
    JE L10000bca0_225
    JMP L10000bca0_274     ; inserted

; Entry 10000bca0; block 274; address 10000cec2
L10000bca0_274:
    LEA RDI, [rel L__TEXT___cstring_32169]
    XOR EAX, EAX
    CALL _printf
    JMP L10000bca0_275     ; inserted

; Entry 10000bca0; block 275; address 10000ced0
L10000bca0_275:
    MOV RAX, qword [rel ___stdoutp]
    MOV RDI, qword [RAX]
    CALL _fflush
    JMP L10000bca0_276     ; inserted

; Entry 10000bca0; block 276; address 10000cedf
L10000bca0_276:
    MOV RAX, qword [rel ___stdinp]
    MOV RDX, qword [RAX]
    LEA RBX, [rel L__DATA___common + 1216]
    MOV RDI, RBX
    MOV ESI, 100
    CALL _fgets
    JMP L10000bca0_277     ; inserted

; Entry 10000bca0; block 277; address 10000cefd
L10000bca0_277:
    TEST RAX, RAX
    JE L10000bca0_225
    JMP L10000bca0_278     ; inserted

; Entry 10000bca0; block 278; address 10000cf06
L10000bca0_278:
    MOV AL, byte [RBX]
    OR AL, 32
    CMP AL, 121
    JNE L10000bca0_225
    JMP L10000bca0_279     ; inserted

; Entry 10000bca0; block 279; address 10000cf12
L10000bca0_279:
    LEA RAX, [rel L__DATA___common + 440]
    MOV qword [RAX], 1
    LEA RDI, [rel L__TEXT___cstring_32209]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L100003422_0
    JMP L10000bca0_280     ; inserted

; Entry 10000bca0; block 280; address 10000cf33
L10000bca0_280:
    JMP L10000bca0_225

; Entry 10000bca0; block 281; address 10000cf3d
L10000bca0_281:
    MOV qword [R15], 0
    LEA RDI, [rel L__TEXT___cstring_31992]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000bca0_248     ; inserted

; Entry 10000bca0; block 282; address 10000cf67
L10000bca0_282:
    LEA RDI, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_32080]
    MOV EDX, 5105
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_284     ; inserted

; Entry 10000bca0; block 283; address 10000cf85
L10000bca0_283:
    LEA RDI, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_32029]
    MOV EDX, 5105
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000bca0_285     ; inserted

; Entry 10000bca0; block 284; address 10000cf83
L10000bca0_284:
    JMP L10000bca0_285

; Entry 10000bca0; block 285; address 10000cfa1
L10000bca0_285:
    LEA RDI, [rel L__DATA___common + 1216]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L100003422_0
    JMP L10000bca0_286     ; inserted

; Entry 10000bca0; block 286; address 10000cfb4
L10000bca0_286:
    LEA RAX, [rel L__DATA___common + 632]
    CMP qword [RAX], 0
    JE L10000bca0_224
    JMP L10000bca0_287     ; inserted

; Entry 10000bca0; block 287; address 10000cfc5
L10000bca0_287:
    LEA RDI, [rel L__TEXT___cstring_32140]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L100003422_0
    JMP L10000bca0_288     ; inserted

; Entry 10000bca0; block 288; address 10000cfd8
L10000bca0_288:
    JMP L10000bca0_224

; Entry 10000bca0; block 289; address 10000cfec
L10000bca0_289:
    MOV qword [RBX], 0
    CALL ___error
    JMP L10000bca0_290     ; inserted

; Entry 10000bca0; block 290; address 10000cff8
L10000bca0_290:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000bca0_291     ; inserted

; Entry 10000bca0; block 291; address 10000cfff
L10000bca0_291:
    LEA RDI, [rel L__TEXT___cstring_32786]
    JMP L10000bca0_295

; Entry 10000bca0; block 292; address 10000d017
L10000bca0_292:
    MOV qword [RBX], 0
    CALL ___error
    JMP L10000bca0_293     ; inserted

; Entry 10000bca0; block 293; address 10000d023
L10000bca0_293:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000bca0_294     ; inserted

; Entry 10000bca0; block 294; address 10000d02a
L10000bca0_294:
    LEA RDI, [rel L__TEXT___cstring_32838]
    JMP L10000bca0_295

; Entry 10000bca0; block 295; address 10000d05c
L10000bca0_295:
    MOV RSI, RAX
    CALL L1000034f4_0
    JMP L10000bca0_299     ; inserted

; Entry 10000bca0; block 296; address 10000d042
L10000bca0_296:
    MOV qword [RBX], 0
    CALL ___error
    JMP L10000bca0_297     ; inserted

; Entry 10000bca0; block 297; address 10000d04e
L10000bca0_297:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000bca0_298     ; inserted

; Entry 10000bca0; block 298; address 10000d055
L10000bca0_298:
    LEA RDI, [rel L__TEXT___cstring_32859]
    JMP L10000bca0_295     ; inserted

; Entry 10000bca0; block 299; address 10000d064
L10000bca0_299:
    MOV dword [RBP + -148], 14
    JMP L10000bca0_73



; ---------------------
; Function: 0x10000d090
; ---------------------
; Entry 10000d090; block 0; address 10000d090
L10000d090_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 56
    MOV EBX, ESI
    MOV R15, RDI
    XOR EAX, EAX
    MOV qword [RBP + -56], RAX
    MOV qword [RBP + -48], RAX
    MOV qword [RBP + -64], RAX
    MOV RDI, qword [RDI + 80]
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L10000d090_1     ; inserted

; Entry 10000d090; block 1; address 10000d0c4
L10000d090_1:
    TEST EBX, EBX
    MOV dword [RBP + -68], EBX
    LEA R14, [rel L__DATA___common + 304]
    JE L10000d090_3
    JMP L10000d090_2     ; inserted

; Entry 10000d090; block 2; address 10000d0d6
L10000d090_2:
    MOV EBX, dword [R14]
    MOV dword [R14], 0
    CMP dword [R15 + 28], 0
    JE L10000d090_5
    JMP L10000d090_4     ; inserted

; Entry 10000d090; block 3; address 10000d195
L10000d090_3:
    MOV dword [R14], 0
    CMP dword [R15 + 28], 0
    JE L10000d090_18
    JMP L10000d090_17     ; inserted

; Entry 10000d090; block 4; address 10000d0eb
L10000d090_4:
    LEA RAX, [rel L__DATA___data + 4520]
    MOV ECX, dword [RAX]
    JMP L10000d090_19     ; inserted

; Entry 10000d090; block 5; address 10000d1ae
L10000d090_5:
    TEST EAX, EAX
    SETE AL
    LEA RCX, [rel L__DATA___data + 4520]
    MOV ECX, dword [RCX]
    TEST ECX, ECX
    SETNE DL
    CMP dword [R15 + 36], 0
    JNE L10000d090_19
    JMP L10000d090_20     ; inserted

; Entry 10000d090; block 6; address 10000d104
L10000d090_6:
    MOV RSI, qword [R15 + 128]
    LEA RDI, [rel L__TEXT___cstring_30714]
    CALL L1000034f4_0
    JMP L10000d090_8     ; inserted

; Entry 10000d090; block 7; address 10000d12b
L10000d090_7:
    TEST EBX, EBX
    JNE L10000d090_10
    JMP L10000d090_9     ; inserted

; Entry 10000d090; block 8; address 10000d117
L10000d090_8:
    LEA RSI, [rel L__TEXT___cstring_30779]
    MOV EDI, 6
    CALL L100002e30_0

; Entry 10000d090; block 9; address 10000d12f
L10000d090_9:
    CMP EAX, 1
    JNE L10000d090_10
    JMP L10000d090_11     ; inserted

; Entry 10000d090; block 10; address 10000d170
L10000d090_10:
    TEST EAX, EAX
    JE L10000d090_14
    JMP L10000d090_13     ; inserted

; Entry 10000d090; block 11; address 10000d134
L10000d090_11:
    MOV RSI, qword [R15 + 128]
    LEA RDI, [rel L__TEXT___cstring_30714]
    CALL L1000034f4_0
    JMP L10000d090_12     ; inserted

; Entry 10000d090; block 12; address 10000d147
L10000d090_12:
    LEA RAX, [rel L__DATA___data + 4520]
    CMP dword [RAX], 0
    LEA RAX, [rel L__TEXT___cstring_30834]
    LEA RSI, [rel L__TEXT___cstring_30895]
    CMOVE RSI, RAX
    MOV EDI, 6
    CALL L100002e30_0

; Entry 10000d090; block 13; address 10000d174
L10000d090_13:
    LEA RCX, [rel L__DATA___common + 308]
    MOV dword [RCX], 1
    CMP word [R15 + 2], 44
    JA L10000d090_16
    JMP L10000d090_15     ; inserted

; Entry 10000d090; block 14; address 10000d1dd
L10000d090_14:
    MOV dword [R14], 0
    XOR EAX, EAX
    JMP L10000d090_16     ; inserted

; Entry 10000d090; block 15; address 10000d189
L10000d090_15:
    MOV word [R15 + 2], 45
    MOV EAX, dword [R14]
    JMP L10000d090_16

; Entry 10000d090; block 16; address 10000d1e6
L10000d090_16:
    TEST EBX, EBX
    JE L10000d090_23
    JMP L10000d090_22     ; inserted

; Entry 10000d090; block 17; address 10000d1a3
L10000d090_17:
    LEA RAX, [rel L__DATA___data + 4520]
    MOV ECX, dword [RAX]
    JMP L10000d090_26

; Entry 10000d090; block 18; address 10000d1fc
L10000d090_18:
    TEST EAX, EAX
    SETE DL
    LEA RAX, [rel L__DATA___data + 4520]
    MOV ECX, dword [RAX]
    TEST ECX, ECX
    SETNE SIL
    CMP dword [R15 + 36], 0
    JNE L10000d090_26
    JMP L10000d090_25     ; inserted

; Entry 10000d090; block 19; address 10000d0f4
L10000d090_19:
    MOV dword [R14], 1
    MOV EAX, 1
    TEST ECX, ECX
    JNE L10000d090_7
    JMP L10000d090_6     ; inserted

; Entry 10000d090; block 20; address 10000d1cc
L10000d090_20:
    CMP ECX, 1
    JE L10000d090_19
    JMP L10000d090_21     ; inserted

; Entry 10000d090; block 21; address 10000d1d5
L10000d090_21:
    AND AL, DL
    JNE L10000d090_19
    JMP L10000d090_14     ; inserted

; Entry 10000d090; block 22; address 10000d1ee
L10000d090_22:
    CMP EAX, 1
    JE L10000d090_23
    JMP L10000d090_24     ; inserted

; Entry 10000d090; block 23; address 10000d270
L10000d090_23:
    OR EAX, EBX
    JE L10000d090_34
    JMP L10000d090_33     ; inserted

; Entry 10000d090; block 24; address 10000d1f3
L10000d090_24:
    MOV word [R15 + 2], 20
    JMP L10000d090_32

; Entry 10000d090; block 25; address 10000d217
L10000d090_25:
    CMP ECX, 1
    JE L10000d090_26
    JMP L10000d090_27     ; inserted

; Entry 10000d090; block 26; address 10000d228
L10000d090_26:
    TEST ECX, ECX
    JNE L10000d090_29
    JMP L10000d090_28     ; inserted

; Entry 10000d090; block 27; address 10000d21c
L10000d090_27:
    XOR EAX, EAX
    MOV EBX, 0
    AND DL, SIL
    JE L10000d090_23
    JMP L10000d090_26     ; inserted

; Entry 10000d090; block 28; address 10000d22c
L10000d090_28:
    MOV RSI, qword [R15 + 128]
    LEA RDI, [rel L__TEXT___cstring_30714]
    CALL L1000034f4_0
    JMP L10000d090_30     ; inserted

; Entry 10000d090; block 29; address 10000d250
L10000d090_29:
    MOV dword [R14], 1
    MOV EAX, 1
    CMP word [R15 + 2], 44
    JA L10000d090_32
    JMP L10000d090_31     ; inserted

; Entry 10000d090; block 30; address 10000d23f
L10000d090_30:
    LEA RSI, [rel L__TEXT___cstring_30729]
    MOV EDI, 6
    CALL L100002e30_0

; Entry 10000d090; block 31; address 10000d264
L10000d090_31:
    MOV word [R15 + 2], 45
    JMP L10000d090_32     ; inserted

; Entry 10000d090; block 32; address 10000d26b
L10000d090_32:
    MOV EBX, 1
    JMP L10000d090_23     ; inserted

; Entry 10000d090; block 33; address 10000d278
L10000d090_33:
    MOVZX R12D, word [R15 + 42]
    TEST R12, R12
    JE L10000d090_36
    JMP L10000d090_35     ; inserted

; Entry 10000d090; block 34; address 10000d365
L10000d090_34:
    LEA RBX, [RBP + -56]
    LEA R12, [RBP + -48]
    LEA R13, [RBP + -64]
    MOV EDI, 67324752
    MOV RSI, RBX
    MOV RDX, R12
    MOV RCX, R13
    CALL L10000d62f_0
    JMP L10000d090_52     ; inserted

; Entry 10000d090; block 35; address 10000d286
L10000d090_35:
    MOV R13, qword [R15 + 88]
    TEST R13, R13
    JE L10000d090_36
    JMP L10000d090_37     ; inserted

; Entry 10000d090; block 36; address 10000d321
L10000d090_36:
    MOV EDI, 20
    CALL _malloc
    JMP L10000d090_48     ; inserted

; Entry 10000d090; block 37; address 10000d293
L10000d090_37:
    LEA RAX, [R12 + R13]
    ADD RAX, 18446744073709551612
    CMP RAX, R13
    JBE L10000d090_39
    JMP L10000d090_38     ; inserted

; Entry 10000d090; block 38; address 10000d2a0
L10000d090_38:
    MOV RBX, R13
    JMP L10000d090_42     ; inserted

; Entry 10000d090; block 39; address 10000d2c8
L10000d090_39:
    LEA RDI, [R12 + 20]
    CALL _malloc
    JMP L10000d090_43     ; inserted

; Entry 10000d090; block 40; address 10000d2b1
L10000d090_40:
    MOVZX EDX, byte [RBX + 3]
    SHL RDX, 8
    OR RDX, RCX
    ADD RBX, RDX
    ADD RBX, 4
    CMP RBX, RAX
    JB L10000d090_42
    JMP L10000d090_39     ; inserted

; Entry 10000d090; block 41; address 10000d57c
L10000d090_41:
    MOVZX R14D, byte [RBX + 3]
    SHL R14, 8
    OR R14, RCX
    CMP R14D, 16
    JE L10000d090_51
    JMP L10000d090_83     ; inserted

; Entry 10000d090; block 42; address 10000d2a3
L10000d090_42:
    CMP word [RBX], 1
    MOVZX ECX, byte [RBX + 2]
    JE L10000d090_41
    JMP L10000d090_40     ; inserted

; Entry 10000d090; block 43; address 10000d2d2
L10000d090_43:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L10000d090_45
    JMP L10000d090_44     ; inserted

; Entry 10000d090; block 44; address 10000d2da
L10000d090_44:
    LEA RSI, [rel L__TEXT___cstring_35228]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 10000d090; block 45; address 10000d2f4
L10000d090_45:
    MOV RDI, RBX
    MOV RSI, R13
    MOV RDX, R12
    CALL _memmove
    JMP L10000d090_46     ; inserted

; Entry 10000d090; block 46; address 10000d302
L10000d090_46:
    MOV RDI, qword [R15 + 88]
    CALL _free
    JMP L10000d090_47     ; inserted

; Entry 10000d090; block 47; address 10000d30b
L10000d090_47:
    MOV qword [R15 + 88], RBX
    MOVZX EAX, word [R15 + 42]
    ADD RBX, RAX
    ADD EAX, 20
    MOV word [R15 + 42], AX
    JMP L10000d090_51

; Entry 10000d090; block 48; address 10000d32b
L10000d090_48:
    MOV RBX, RAX
    MOV qword [R15 + 88], RAX
    TEST RAX, RAX
    JNE L10000d090_50
    JMP L10000d090_49     ; inserted

; Entry 10000d090; block 49; address 10000d337
L10000d090_49:
    LEA RSI, [rel L__TEXT___cstring_35204]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 10000d090; block 50; address 10000d348
L10000d090_50:
    MOV word [R15 + 42], 20
    JMP L10000d090_51     ; inserted

; Entry 10000d090; block 51; address 10000d34f
L10000d090_51:
    MOV dword [RBX], 1048577
    MOV RAX, qword [R15 + 32]
    MOV qword [RBX + 4], RAX
    MOV RAX, qword [R15 + 24]
    MOV qword [RBX + 12], RAX
    JMP L10000d090_34     ; inserted

; Entry 10000d090; block 52; address 10000d384
L10000d090_52:
    MOVZX EDI, word [R15 + 2]
    MOV RSI, RBX
    MOV RDX, R12
    MOV RCX, R13
    CALL L10000d6aa_0
    JMP L10000d090_53     ; inserted

; Entry 10000d090; block 53; address 10000d397
L10000d090_53:
    MOVZX EDI, word [R15 + 58]
    MOV RSI, RBX
    MOV RDX, R12
    MOV RCX, R13
    CALL L10000d6aa_0
    JMP L10000d090_54     ; inserted

; Entry 10000d090; block 54; address 10000d3aa
L10000d090_54:
    MOVZX EDI, word [R15 + 6]
    MOV RSI, RBX
    MOV RDX, R12
    MOV RCX, R13
    CALL L10000d6aa_0
    JMP L10000d090_55     ; inserted

; Entry 10000d090; block 55; address 10000d3bd
L10000d090_55:
    MOV RDI, qword [R15 + 8]
    MOV RSI, RBX
    MOV RDX, R12
    MOV RCX, R13
    CALL L10000d62f_0
    JMP L10000d090_56     ; inserted

; Entry 10000d090; block 56; address 10000d3cf
L10000d090_56:
    MOV RDI, qword [R15 + 16]
    MOV RSI, RBX
    MOV RDX, R12
    MOV RCX, R13
    CALL L10000d62f_0
    JMP L10000d090_57     ; inserted

; Entry 10000d090; block 57; address 10000d3e1
L10000d090_57:
    LEA RAX, [rel L__DATA___common + 304]
    CMP dword [RAX], 0
    JE L10000d090_59
    JMP L10000d090_58     ; inserted

; Entry 10000d090; block 58; address 10000d3ed
L10000d090_58:
    MOV R12D, 4294967295
    LEA RSI, [RBP + -56]
    LEA RDX, [RBP + -48]
    LEA RCX, [RBP + -64]
    MOV EDI, 4294967295
    CALL L10000d62f_0
    JMP L10000d090_60     ; inserted

; Entry 10000d090; block 59; address 10000d40b
L10000d090_59:
    MOV RDI, qword [R15 + 24]
    LEA RSI, [RBP + -56]
    LEA RDX, [RBP + -48]
    LEA RCX, [RBP + -64]
    CALL L10000d62f_0
    JMP L10000d090_61     ; inserted

; Entry 10000d090; block 60; address 10000d409
L10000d090_60:
    JMP L10000d090_62

; Entry 10000d090; block 61; address 10000d420
L10000d090_61:
    MOV R12, qword [R15 + 32]
    JMP L10000d090_62     ; inserted

; Entry 10000d090; block 62; address 10000d424
L10000d090_62:
    LEA RBX, [RBP + -56]
    LEA R13, [RBP + -48]
    LEA R14, [RBP + -64]
    MOV RDI, R12
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d62f_0
    JMP L10000d090_63     ; inserted

; Entry 10000d090; block 63; address 10000d441
L10000d090_63:
    MOVZX EDI, word [R15 + 40]
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d6aa_0
    JMP L10000d090_64     ; inserted

; Entry 10000d090; block 64; address 10000d454
L10000d090_64:
    MOVZX EDI, word [R15 + 42]
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d6aa_0
    JMP L10000d090_65     ; inserted

; Entry 10000d090; block 65; address 10000d467
L10000d090_65:
    MOV RDI, qword [R15 + 112]
    MOVZX ESI, word [R15 + 40]
    MOV RDX, RBX
    MOV RCX, R13
    MOV R8, R14
    CALL L10000d726_0
    JMP L10000d090_66     ; inserted

; Entry 10000d090; block 66; address 10000d47e
L10000d090_66:
    MOVZX ESI, word [R15 + 42]
    TEST ESI, ESI
    JE L10000d090_68
    JMP L10000d090_67     ; inserted

; Entry 10000d090; block 67; address 10000d487
L10000d090_67:
    MOV RDI, qword [R15 + 88]
    LEA RDX, [RBP + -56]
    LEA RCX, [RBP + -48]
    LEA R8, [RBP + -64]
    CALL L10000d726_0
    JMP L10000d090_68     ; inserted

; Entry 10000d090; block 68; address 10000d49c
L10000d090_68:
    CMP dword [RBP + -68], 1
    JNE L10000d090_70
    JMP L10000d090_69     ; inserted

; Entry 10000d090; block 69; address 10000d4a2
L10000d090_69:
    LEA RAX, [rel L__DATA___common + 564]
    CMP dword [RAX], 1
    MOV R14, qword [RBP + -56]
    MOV R15, qword [RBP + -48]
    JNE L10000d090_72
    JMP L10000d090_71     ; inserted

; Entry 10000d090; block 70; address 10000d51e
L10000d090_70:
    MOV R14, qword [RBP + -56]
    MOV R15, qword [RBP + -48]
    MOV ESI, 1
    MOV RDI, R14
    MOV RDX, R15
    MOV ECX, 1
    CALL L1000121b7_0
    JMP L10000d090_80     ; inserted

; Entry 10000d090; block 71; address 10000d4ba
L10000d090_71:
    LEA R12, [rel L__DATA___common + 536]
    MOV RCX, qword [R12]
    MOV ESI, 1
    MOV RDI, R14
    MOV RDX, R15
    CALL _fwrite
    JMP L10000d090_73     ; inserted

; Entry 10000d090; block 72; address 10000d53d
L10000d090_72:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RCX, qword [RAX]
    MOV ESI, 1
    MOV RDI, R14
    MOV RDX, R15
    CALL _fwrite
    JMP L10000d090_81     ; inserted

; Entry 10000d090; block 73; address 10000d4d5
L10000d090_73:
    MOV EBX, 10
    CMP RAX, R15
    JNE L10000d090_75
    JMP L10000d090_74     ; inserted

; Entry 10000d090; block 74; address 10000d4e3
L10000d090_74:
    LEA RAX, [rel L__DATA___common + 472]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 480]
    CMP RDI, qword [RAX]
    JE L10000d090_77
    JMP L10000d090_76     ; inserted

; Entry 10000d090; block 75; address 10000d563
L10000d090_75:
    MOV RDI, R14
    CALL _free
    JMP L10000d090_82     ; inserted

; Entry 10000d090; block 76; address 10000d4f9
L10000d090_76:
    MOV RSI, qword [R12]
    LEA RBX, [rel L__DATA___common + 528]
    MOV RDX, qword [RBX]
    CALL L10001374d_0
    JMP L10000d090_78     ; inserted

; Entry 10000d090; block 77; address 10000d561
L10000d090_77:
    XOR EBX, EBX
    JMP L10000d090_75     ; inserted

; Entry 10000d090; block 78; address 10000d50c
L10000d090_78:
    MOV qword [R12], 0
    MOV RDI, qword [RBX]
    CALL _free
    JMP L10000d090_79     ; inserted

; Entry 10000d090; block 79; address 10000d51c
L10000d090_79:
    JMP L10000d090_77

; Entry 10000d090; block 80; address 10000d53b
L10000d090_80:
    JMP L10000d090_81

; Entry 10000d090; block 81; address 10000d557
L10000d090_81:
    MOV EBX, 10
    CMP RAX, R15
    JNE L10000d090_75
    JMP L10000d090_77     ; inserted

; Entry 10000d090; block 82; address 10000d56b
L10000d090_82:
    MOV EAX, EBX
    ADD RSP, 56
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000d090; block 83; address 10000d592
L10000d090_83:
    SUB R12D, R14D
    ADD R12D, 16
    MOVZX EDI, R12W
    CALL _malloc
    JMP L10000d090_84     ; inserted

; Entry 10000d090; block 84; address 10000d5a2
L10000d090_84:
    TEST RAX, RAX
    JNE L10000d090_86
    JMP L10000d090_85     ; inserted

; Entry 10000d090; block 85; address 10000d5a7
L10000d090_85:
    LEA RSI, [rel L__TEXT___cstring_35228]
    MOV EDI, 4
    MOV R13, RAX
    CALL L100002e30_0

; Entry 10000d090; block 86; address 10000d5c2
L10000d090_86:
    MOV qword [RBP + -80], RAX
    MOV RCX, RBX
    SUB RCX, R13
    MOV qword [RBP + -96], RCX
    MOVZX EDX, CX
    MOV qword [RBP + -88], RDX
    MOV RDI, RAX
    MOV RSI, R13
    CALL _memcpy
    JMP L10000d090_87     ; inserted

; Entry 10000d090; block 87; address 10000d5e2
L10000d090_87:
    MOV R13, qword [RBP + -80]
    ADD R13, qword [RBP + -88]
    LEA RSI, [RBX + R14]
    ADD RSI, 4
    MOVZX EAX, word [R15 + 42]
    MOV RCX, qword [RBP + -96]
    ADD ECX, R14D
    SUB EAX, ECX
    MOVZX EBX, AX
    MOV RDI, R13
    MOV RDX, RBX
    CALL _memcpy
    JMP L10000d090_88     ; inserted

; Entry 10000d090; block 88; address 10000d60e
L10000d090_88:
    MOV word [R15 + 42], R12W
    MOV RDI, qword [R15 + 88]
    CALL _free
    JMP L10000d090_89     ; inserted

; Entry 10000d090; block 89; address 10000d61c
L10000d090_89:
    MOV RAX, qword [RBP + -80]
    MOV qword [R15 + 88], RAX
    ADD R13, RBX
    MOV RBX, R13
    JMP L10000d090_51



; ---------------------
; Function: 0x10000d62f
; ---------------------
; Entry 10000d62f; block 0; address 10000d62f
L10000d62f_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV R15, RDX
    MOV RBX, RSI
    MOV R14, RDI
    MOV RDI, qword [RSI]
    TEST RDI, RDI
    JE L10000d62f_2
    JMP L10000d62f_1     ; inserted

; Entry 10000d62f; block 1; address 10000d64a
L10000d62f_1:
    MOV RSI, qword [RCX]
    LEA RAX, [RSI + -5]
    CMP qword [R15], RAX
    JBE L10000d62f_4
    JMP L10000d62f_3     ; inserted

; Entry 10000d62f; block 2; address 10000d667
L10000d62f_2:
    MOV qword [RCX], 1024
    MOV EDI, 1024
    CALL _malloc
    JMP L10000d62f_6     ; inserted

; Entry 10000d62f; block 3; address 10000d656
L10000d62f_3:
    ADD RSI, 1024
    MOV qword [RCX], RSI
    CALL _realloc
    JMP L10000d62f_5     ; inserted

; Entry 10000d62f; block 4; address 10000d691
L10000d62f_4:
    MOV RAX, qword [RBX]
    MOV RCX, qword [R15]
    MOV dword [RAX + RCX], R14D
    ADD qword [R15], 4
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000d62f; block 5; address 10000d665
L10000d62f_5:
    JMP L10000d62f_6

; Entry 10000d62f; block 6; address 10000d678
L10000d62f_6:
    MOV qword [RBX], RAX
    TEST RAX, RAX
    JNE L10000d62f_4
    JMP L10000d62f_7     ; inserted

; Entry 10000d62f; block 7; address 10000d680
L10000d62f_7:
    LEA RSI, [rel L__TEXT___cstring_35246]
    MOV EDI, 4
    CALL L100002e30_0



; ---------------------
; Function: 0x10000d6aa
; ---------------------
; Entry 10000d6aa; block 0; address 10000d6aa
L10000d6aa_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV R15, RDX
    MOV RBX, RSI
    MOV R14D, EDI
    MOV RDI, qword [RSI]
    TEST RDI, RDI
    JE L10000d6aa_2
    JMP L10000d6aa_1     ; inserted

; Entry 10000d6aa; block 1; address 10000d6c5
L10000d6aa_1:
    MOV RSI, qword [RCX]
    LEA RAX, [RSI + -3]
    CMP qword [R15], RAX
    JBE L10000d6aa_4
    JMP L10000d6aa_3     ; inserted

; Entry 10000d6aa; block 2; address 10000d6e2
L10000d6aa_2:
    MOV qword [RCX], 1024
    MOV EDI, 1024
    CALL _malloc
    JMP L10000d6aa_6     ; inserted

; Entry 10000d6aa; block 3; address 10000d6d1
L10000d6aa_3:
    ADD RSI, 1024
    MOV qword [RCX], RSI
    CALL _realloc
    JMP L10000d6aa_5     ; inserted

; Entry 10000d6aa; block 4; address 10000d70c
L10000d6aa_4:
    MOV RAX, qword [RBX]
    MOV RCX, qword [R15]
    MOV word [RAX + RCX], R14W
    ADD qword [R15], 2
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000d6aa; block 5; address 10000d6e0
L10000d6aa_5:
    JMP L10000d6aa_6

; Entry 10000d6aa; block 6; address 10000d6f3
L10000d6aa_6:
    MOV qword [RBX], RAX
    TEST RAX, RAX
    JNE L10000d6aa_4
    JMP L10000d6aa_7     ; inserted

; Entry 10000d6aa; block 7; address 10000d6fb
L10000d6aa_7:
    LEA RSI, [rel L__TEXT___cstring_35266]
    MOV EDI, 4
    CALL L100002e30_0



; ---------------------
; Function: 0x10000d726
; ---------------------
; Entry 10000d726; block 0; address 10000d726
L10000d726_0:
    TEST RDI, RDI
    JE L10000d726_2
    JMP L10000d726_1     ; inserted

; Entry 10000d726; block 1; address 10000d72f
L10000d726_1:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    MOV R14, RCX
    MOV R15, RDX
    MOV R12D, ESI
    MOV R13, RDI
    MOV EDI, 1024
    CMP ESI, EDI
    CMOVA EDI, ESI
    MOV EBX, ESI
    MOV RAX, qword [RDX]
    TEST RAX, RAX
    JE L10000d726_4
    JMP L10000d726_3     ; inserted

; Entry 10000d726; block 2; address 10000d7ce
L10000d726_2:
    RET 

; Entry 10000d726; block 3; address 10000d75d
L10000d726_3:
    MOV RCX, qword [R14]
    ADD RCX, RBX
    MOV RSI, qword [R8]
    LEA RDX, [RSI + -1]
    CMP RCX, RDX
    JBE L10000d726_6
    JMP L10000d726_5     ; inserted

; Entry 10000d726; block 4; address 10000d77f
L10000d726_4:
    MOV qword [R8], RDI
    CALL _malloc
    JMP L10000d726_8     ; inserted

; Entry 10000d726; block 5; address 10000d76f
L10000d726_5:
    ADD RSI, RDI
    MOV qword [R8], RSI
    MOV RDI, RAX
    CALL _realloc
    JMP L10000d726_7     ; inserted

; Entry 10000d726; block 6; address 10000d7a0
L10000d726_6:
    TEST R12D, R12D
    JE L10000d726_11
    JMP L10000d726_10     ; inserted

; Entry 10000d726; block 7; address 10000d77d
L10000d726_7:
    JMP L10000d726_8

; Entry 10000d726; block 8; address 10000d787
L10000d726_8:
    MOV qword [R15], RAX
    TEST RAX, RAX
    JNE L10000d726_6
    JMP L10000d726_9     ; inserted

; Entry 10000d726; block 9; address 10000d78f
L10000d726_9:
    LEA RSI, [rel L__TEXT___cstring_35287]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 10000d726; block 10; address 10000d7a5
L10000d726_10:
    XOR EAX, EAX
    JMP L10000d726_12     ; inserted

; Entry 10000d726; block 11; address 10000d7bd
L10000d726_11:
    ADD qword [R14], RBX
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    JMP L10000d726_2     ; inserted

; Entry 10000d726; block 12; address 10000d7a7
L10000d726_12:
    MOV RCX, qword [R15]
    ADD RCX, qword [R14]
    MOV DL, byte [R13 + RAX]
    MOV byte [RAX + RCX], DL
    INC RAX
    CMP RBX, RAX
    JNE L10000d726_12
    JMP L10000d726_11     ; inserted



; ---------------------
; Function: 0x10000d7cf
; ---------------------
; Entry 10000d7cf; block 0; address 10000d7cf
L10000d7cf_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    SUB RSP, 32
    MOV RBX, RDI
    XOR EAX, EAX
    LEA R14, [RBP + -48]
    MOV qword [R14], RAX
    LEA R15, [RBP + -40]
    MOV qword [R15], RAX
    LEA R12, [RBP + -56]
    MOV qword [R12], RAX
    MOV EDI, 134695760
    MOV RSI, R14
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d62f_0
    JMP L10000d7cf_1     ; inserted

; Entry 10000d7cf; block 1; address 10000d80c
L10000d7cf_1:
    MOV RDI, qword [RBX + 16]
    MOV RSI, R14
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d62f_0
    JMP L10000d7cf_2     ; inserted

; Entry 10000d7cf; block 2; address 10000d81e
L10000d7cf_2:
    LEA RAX, [rel L__DATA___common + 304]
    CMP dword [RAX], 0
    MOV RDI, qword [RBX + 24]
    LEA R14, [RBP + -48]
    LEA R15, [RBP + -40]
    LEA R12, [RBP + -56]
    MOV RSI, R14
    MOV RDX, R15
    MOV RCX, R12
    JE L10000d7cf_4
    JMP L10000d7cf_3     ; inserted

; Entry 10000d7cf; block 3; address 10000d843
L10000d7cf_3:
    CALL L10000d8b5_0
    JMP L10000d7cf_5     ; inserted

; Entry 10000d7cf; block 4; address 10000d85c
L10000d7cf_4:
    CALL L10000d62f_0
    JMP L10000d7cf_7     ; inserted

; Entry 10000d7cf; block 5; address 10000d848
L10000d7cf_5:
    MOV RDI, qword [RBX + 32]
    MOV RSI, R14
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d8b5_0
    JMP L10000d7cf_6     ; inserted

; Entry 10000d7cf; block 6; address 10000d85a
L10000d7cf_6:
    JMP L10000d7cf_8

; Entry 10000d7cf; block 7; address 10000d861
L10000d7cf_7:
    MOV RDI, qword [RBX + 32]
    MOV RSI, R14
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d62f_0
    JMP L10000d7cf_8     ; inserted

; Entry 10000d7cf; block 8; address 10000d873
L10000d7cf_8:
    MOV RBX, qword [RBP + -48]
    MOV R14, qword [RBP + -40]
    MOV ESI, 1
    MOV RDI, RBX
    MOV RDX, R14
    MOV ECX, 3
    CALL L1000121b7_0
    JMP L10000d7cf_9     ; inserted

; Entry 10000d7cf; block 9; address 10000d890
L10000d7cf_9:
    MOV R15, RAX
    MOV RDI, RBX
    CALL _free
    JMP L10000d7cf_10     ; inserted

; Entry 10000d7cf; block 10; address 10000d89b
L10000d7cf_10:
    XOR ECX, ECX
    CMP R15, R14
    MOV EAX, 10
    CMOVE EAX, ECX
    ADD RSP, 32
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x10000d8b5
; ---------------------
; Entry 10000d8b5; block 0; address 10000d8b5
L10000d8b5_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV R15, RDX
    MOV RBX, RSI
    MOV R14, RDI
    MOV RDI, qword [RSI]
    TEST RDI, RDI
    JE L10000d8b5_2
    JMP L10000d8b5_1     ; inserted

; Entry 10000d8b5; block 1; address 10000d8d0
L10000d8b5_1:
    MOV RSI, qword [RCX]
    LEA RAX, [RSI + -9]
    CMP qword [R15], RAX
    JBE L10000d8b5_4
    JMP L10000d8b5_3     ; inserted

; Entry 10000d8b5; block 2; address 10000d8ed
L10000d8b5_2:
    MOV qword [RCX], 1024
    MOV EDI, 1024
    CALL _malloc
    JMP L10000d8b5_6     ; inserted

; Entry 10000d8b5; block 3; address 10000d8dc
L10000d8b5_3:
    ADD RSI, 1024
    MOV qword [RCX], RSI
    CALL _realloc
    JMP L10000d8b5_5     ; inserted

; Entry 10000d8b5; block 4; address 10000d917
L10000d8b5_4:
    MOV RAX, qword [RBX]
    MOV RCX, qword [R15]
    MOV qword [RAX + RCX], R14
    ADD qword [R15], 8
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000d8b5; block 5; address 10000d8eb
L10000d8b5_5:
    JMP L10000d8b5_6

; Entry 10000d8b5; block 6; address 10000d8fe
L10000d8b5_6:
    MOV qword [RBX], RAX
    TEST RAX, RAX
    JNE L10000d8b5_4
    JMP L10000d8b5_7     ; inserted

; Entry 10000d8b5; block 7; address 10000d906
L10000d8b5_7:
    LEA RSI, [rel L__TEXT___cstring_35308]
    MOV EDI, 4
    CALL L100002e30_0



; ---------------------
; Function: 0x10000d930
; ---------------------
; Entry 10000d930; block 0; address 10000d930
L10000d930_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 72
    MOV R14, RDI
    XOR EAX, EAX
    MOV qword [RBP + -72], RAX
    MOV qword [RBP + -64], RAX
    MOV qword [RBP + -80], RAX
    MOVZX R8D, word [RDI + 40]
    MOV R12, qword [RDI + 64]
    MOV RAX, qword [RDI + 24]
    MOV RCX, qword [RDI + 32]
    MOV RDX, RCX
    OR RDX, R12
    SHR RDX, 32
    JNE L10000d930_2
    JMP L10000d930_1     ; inserted

; Entry 10000d930; block 1; address 10000d96f
L10000d930_1:
    MOV RDX, RAX
    SHR RDX, 32
    JNE L10000d930_2
    JMP L10000d930_3     ; inserted

; Entry 10000d930; block 2; address 10000d992
L10000d930_2:
    MOV RDX, RAX
    SHR RDX, 32
    SHR RCX, 32
    SETNE BL
    LEA R9, [rel L__DATA___data + 4520]
    MOV ESI, dword [R9]
    CMP ESI, 1
    SETE CL
    OR CL, BL
    TEST RDX, RDX
    MOVZX EDX, CL
    LEA EDI, [RDX * 8 * 4]
    LEA EDX, [RDX * 8 * 12]
    CMOVE EDX, EDI
    MOV RDI, R12
    SHR RDI, 32
    LEA EBX, [RDX + 8]
    TEST RDI, RDI
    CMOVE EBX, EDX
    OR RAX, R12
    SHR RAX, 32
    SETNE AL
    LEA R13D, [RBX + 4]
    CMP qword [R14 + 48], 65535
    SETA DL
    CMOVBE R13D, EBX
    TEST ESI, ESI
    JNE L10000d930_7
    JMP L10000d930_6     ; inserted

; Entry 10000d930; block 3; address 10000d978
L10000d930_3:
    CMP qword [R14 + 48], 65535
    JA L10000d930_2
    JMP L10000d930_4     ; inserted

; Entry 10000d930; block 4; address 10000d982
L10000d930_4:
    LEA RDX, [rel L__DATA___data + 4520]
    CMP dword [RDX], 1
    JNE L10000d930_5
    JMP L10000d930_2     ; inserted

; Entry 10000d930; block 5; address 10000db62
L10000d930_5:
    MOV word [RBP + -42], R8W
    MOV qword [RBP + -56], R12
    LEA R13, [RBP + -72]
    LEA R15, [RBP + -64]
    LEA R12, [RBP + -80]
    MOV EDI, 33639248
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d62f_0
    JMP L10000d930_34     ; inserted

; Entry 10000d930; block 6; address 10000d9fa
L10000d930_6:
    OR AL, DL
    OR CL, AL
    JE L10000d930_7
    JMP L10000d930_8     ; inserted

; Entry 10000d930; block 7; address 10000da1d
L10000d930_7:
    MOV R15, qword [R14 + 96]
    TEST R15, R15
    JE L10000d930_11
    JMP L10000d930_10     ; inserted

; Entry 10000d930; block 8; address 10000da00
L10000d930_8:
    LEA RDI, [rel L__TEXT___cstring_35328]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000d930_9     ; inserted

; Entry 10000d930; block 9; address 10000da13
L10000d930_9:
    MOV EAX, 6
    JMP L10000d930_57

; Entry 10000d930; block 10; address 10000da2a
L10000d930_10:
    MOV qword [RBP + -56], R12
    MOVZX R12D, word [R14 + 44]
    LEA RAX, [R15 + R12]
    ADD RAX, 18446744073709551612
    CMP RAX, R15
    MOV word [RBP + -42], R8W
    JBE L10000d930_13
    JMP L10000d930_12     ; inserted

; Entry 10000d930; block 11; address 10000dabb
L10000d930_11:
    CMP R13W, 4
    JE L10000d930_5
    JMP L10000d930_22     ; inserted

; Entry 10000d930; block 12; address 10000da45
L10000d930_12:
    MOV RBX, R15
    JMP L10000d930_16     ; inserted

; Entry 10000d930; block 13; address 10000da6d
L10000d930_13:
    MOVZX EDI, R13W
    ADD RDI, R12
    CALL _malloc
    JMP L10000d930_17     ; inserted

; Entry 10000d930; block 14; address 10000da56
L10000d930_14:
    MOVZX EDX, byte [RBX + 3]
    SHL RDX, 8
    OR RDX, RCX
    ADD RBX, RDX
    ADD RBX, 4
    CMP RBX, RAX
    JB L10000d930_16
    JMP L10000d930_13     ; inserted

; Entry 10000d930; block 15; address 10000dd78
L10000d930_15:
    MOVZX EAX, byte [RBX + 3]
    SHL RAX, 8
    ADD RAX, RCX
    ADD RAX, 4
    CMP EAX, R12D
    JNE L10000d930_59
    JMP L10000d930_58     ; inserted

; Entry 10000d930; block 16; address 10000da48
L10000d930_16:
    CMP word [RBX], 1
    MOVZX ECX, byte [RBX + 2]
    JE L10000d930_15
    JMP L10000d930_14     ; inserted

; Entry 10000d930; block 17; address 10000da79
L10000d930_17:
    TEST RAX, RAX
    JE L10000d930_19
    JMP L10000d930_18     ; inserted

; Entry 10000d930; block 18; address 10000da82
L10000d930_18:
    MOV RBX, RAX
    MOV RDI, RAX
    MOV RSI, R15
    MOV RDX, R12
    CALL _memmove
    JMP L10000d930_20     ; inserted

; Entry 10000d930; block 19; address 10000de4e
L10000d930_19:
    MOV EAX, 4
    JMP L10000d930_57

; Entry 10000d930; block 20; address 10000da93
L10000d930_20:
    MOV RDI, qword [R14 + 96]
    CALL _free
    JMP L10000d930_21     ; inserted

; Entry 10000d930; block 21; address 10000da9c
L10000d930_21:
    MOV qword [R14 + 96], RBX
    MOVZX EAX, word [R14 + 44]
    ADD RBX, RAX
    ADD EAX, R13D
    MOV word [R14 + 44], AX
    JMP L10000d930_71     ; inserted

; Entry 10000d930; block 22; address 10000dac6
L10000d930_22:
    MOV R15D, R8D
    MOVZX EDI, R13W
    CALL _malloc
    JMP L10000d930_23     ; inserted

; Entry 10000d930; block 23; address 10000dad2
L10000d930_23:
    MOV qword [R14 + 96], RAX
    TEST RAX, RAX
    JE L10000d930_19
    JMP L10000d930_24     ; inserted

; Entry 10000d930; block 24; address 10000dadf
L10000d930_24:
    MOV RBX, RAX
    MOV word [R14 + 44], R13W
    MOV R8D, R15D
    JMP L10000d930_25     ; inserted

; Entry 10000d930; block 25; address 10000daea
L10000d930_25:
    LEA R9, [rel L__DATA___data + 4520]
    JMP L10000d930_60     ; inserted

; Entry 10000d930; block 26; address 10000db0f
L10000d930_26:
    MOV AX, 4
    CMP dword [R9], 1
    JNE L10000d930_28
    JMP L10000d930_27     ; inserted

; Entry 10000d930; block 27; address 10000db19
L10000d930_27:
    MOV qword [RBX + 4], RCX
    MOV AX, 12
    JMP L10000d930_28     ; inserted

; Entry 10000d930; block 28; address 10000db21
L10000d930_28:
    MOV RCX, qword [R14 + 24]
    MOV RDX, RCX
    SHR RDX, 32
    JE L10000d930_30
    JMP L10000d930_29     ; inserted

; Entry 10000d930; block 29; address 10000db2e
L10000d930_29:
    MOVZX EAX, AX
    MOV qword [RBX + RAX], RCX
    ADD EAX, 8
    JMP L10000d930_30     ; inserted

; Entry 10000d930; block 30; address 10000db38
L10000d930_30:
    MOV RCX, qword [R14 + 64]
    MOV RDX, RCX
    SHR RDX, 32
    JE L10000d930_32
    JMP L10000d930_31     ; inserted

; Entry 10000d930; block 31; address 10000db45
L10000d930_31:
    MOVZX EAX, AX
    MOV qword [RBX + RAX], RCX
    ADD EAX, 8
    JMP L10000d930_32     ; inserted

; Entry 10000d930; block 32; address 10000db4f
L10000d930_32:
    MOV RCX, qword [R14 + 48]
    CMP RCX, 65536
    JB L10000d930_5
    JMP L10000d930_33     ; inserted

; Entry 10000d930; block 33; address 10000db5c
L10000d930_33:
    MOVZX EAX, AX
    MOV dword [RBX + RAX], ECX
    JMP L10000d930_5     ; inserted

; Entry 10000d930; block 34; address 10000db8a
L10000d930_34:
    MOVZX EDI, word [R14]
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d6aa_0
    JMP L10000d930_35     ; inserted

; Entry 10000d930; block 35; address 10000db9c
L10000d930_35:
    MOVZX EDI, word [R14 + 2]
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d6aa_0
    JMP L10000d930_36     ; inserted

; Entry 10000d930; block 36; address 10000dbaf
L10000d930_36:
    MOVZX EDI, word [R14 + 4]
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d6aa_0
    JMP L10000d930_37     ; inserted

; Entry 10000d930; block 37; address 10000dbc2
L10000d930_37:
    MOVZX EDI, word [R14 + 6]
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d6aa_0
    JMP L10000d930_38     ; inserted

; Entry 10000d930; block 38; address 10000dbd5
L10000d930_38:
    MOV RDI, qword [R14 + 8]
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d62f_0
    JMP L10000d930_39     ; inserted

; Entry 10000d930; block 39; address 10000dbe7
L10000d930_39:
    MOV RDI, qword [R14 + 16]
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d62f_0
    JMP L10000d930_40     ; inserted

; Entry 10000d930; block 40; address 10000dbf9
L10000d930_40:
    MOV RDI, qword [R14 + 24]
    MOV EBX, 4294967295
    CMP RDI, RBX
    CMOVAE RDI, RBX
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d62f_0
    JMP L10000d930_41     ; inserted

; Entry 10000d930; block 41; address 10000dc17
L10000d930_41:
    MOV RDI, qword [R14 + 32]
    MOV RAX, RDI
    SHR RAX, 32
    LEA RCX, [rel L__DATA___data + 4520]
    CMP dword [RCX], 1
    CMOVE RDI, RBX
    TEST RAX, RAX
    CMOVNE RDI, RBX
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d62f_0
    JMP L10000d930_42     ; inserted

; Entry 10000d930; block 42; address 10000dc45
L10000d930_42:
    MOVZX EDI, word [RBP + -42]
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d6aa_0
    JMP L10000d930_43     ; inserted

; Entry 10000d930; block 43; address 10000dc57
L10000d930_43:
    MOVZX EDI, word [R14 + 44]
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d6aa_0
    JMP L10000d930_44     ; inserted

; Entry 10000d930; block 44; address 10000dc6a
L10000d930_44:
    MOVZX EDI, word [R14 + 46]
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d6aa_0
    JMP L10000d930_45     ; inserted

; Entry 10000d930; block 45; address 10000dc7d
L10000d930_45:
    MOV RAX, qword [R14 + 48]
    CMP RAX, 65535
    MOV ECX, 65535
    CMOVB ECX, EAX
    MOVZX EDI, CX
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d6aa_0
    JMP L10000d930_46     ; inserted

; Entry 10000d930; block 46; address 10000dca0
L10000d930_46:
    MOVZX EDI, word [R14 + 56]
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d6aa_0
    JMP L10000d930_47     ; inserted

; Entry 10000d930; block 47; address 10000dcb3
L10000d930_47:
    MOV RDI, qword [R14 + 72]
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d62f_0
    JMP L10000d930_48     ; inserted

; Entry 10000d930; block 48; address 10000dcc5
L10000d930_48:
    MOV RAX, qword [RBP + -56]
    CMP RAX, RBX
    CMOVB RBX, RAX
    MOV RDI, RBX
    MOV RSI, R13
    MOV RDX, R15
    MOV RCX, R12
    CALL L10000d62f_0
    JMP L10000d930_49     ; inserted

; Entry 10000d930; block 49; address 10000dce1
L10000d930_49:
    MOV RDI, qword [R14 + 112]
    MOVZX ESI, word [R14 + 40]
    MOV RDX, R13
    MOV RCX, R15
    MOV R8, R12
    CALL L10000d726_0
    JMP L10000d930_50     ; inserted

; Entry 10000d930; block 50; address 10000dcf8
L10000d930_50:
    MOVZX ESI, word [R14 + 44]
    TEST ESI, ESI
    JE L10000d930_52
    JMP L10000d930_51     ; inserted

; Entry 10000d930; block 51; address 10000dd01
L10000d930_51:
    MOV RDI, qword [R14 + 96]
    LEA RDX, [RBP + -72]
    LEA RCX, [RBP + -64]
    LEA R8, [RBP + -80]
    CALL L10000d726_0
    JMP L10000d930_52     ; inserted

; Entry 10000d930; block 52; address 10000dd16
L10000d930_52:
    MOVZX ESI, word [R14 + 46]
    TEST ESI, ESI
    JE L10000d930_54
    JMP L10000d930_53     ; inserted

; Entry 10000d930; block 53; address 10000dd1f
L10000d930_53:
    MOV RDI, qword [R14 + 104]
    LEA RDX, [RBP + -72]
    LEA RCX, [RBP + -64]
    LEA R8, [RBP + -80]
    CALL L10000d726_0
    JMP L10000d930_54     ; inserted

; Entry 10000d930; block 54; address 10000dd34
L10000d930_54:
    MOV RBX, qword [RBP + -72]
    MOV R14, qword [RBP + -64]
    MOV ESI, 1
    MOV RDI, RBX
    MOV RDX, R14
    MOV ECX, 2
    CALL L1000121b7_0
    JMP L10000d930_55     ; inserted

; Entry 10000d930; block 55; address 10000dd51
L10000d930_55:
    MOV R15, RAX
    MOV RDI, RBX
    CALL _free
    JMP L10000d930_56     ; inserted

; Entry 10000d930; block 56; address 10000dd5c
L10000d930_56:
    XOR ECX, ECX
    CMP R15, R14
    MOV EAX, 10
    CMOVE EAX, ECX
    JMP L10000d930_57     ; inserted

; Entry 10000d930; block 57; address 10000dd69
L10000d930_57:
    ADD RSP, 72
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000d930; block 58; address 10000dd8c
L10000d930_58:
    CMP R12W, R13W
    MOV R12, qword [RBP + -56]
    JE L10000d930_60
    JMP L10000d930_61     ; inserted

; Entry 10000d930; block 59; address 10000ddc5
L10000d930_59:
    MOV qword [RBP + -104], RAX
    MOVZX ECX, AX
    MOVZX EAX, R13W
    ADD EAX, R12D
    MOV qword [RBP + -96], RCX
    SUB EAX, ECX
    MOVSXD RDI, EAX
    CALL _malloc
    JMP L10000d930_66     ; inserted

; Entry 10000d930; block 60; address 10000daf1
L10000d930_60:
    MOV word [RBX], 1
    ADD R13B, 252
    MOV byte [RBX + 2], R13B
    MOV byte [RBX + 3], 0
    MOV RCX, qword [R14 + 32]
    MOV RAX, RCX
    SHR RAX, 32
    JNE L10000d930_27
    JMP L10000d930_26     ; inserted

; Entry 10000d930; block 61; address 10000dd9a
L10000d930_61:
    MOVZX EDI, R13W
    CALL _malloc
    JMP L10000d930_62     ; inserted

; Entry 10000d930; block 62; address 10000dda3
L10000d930_62:
    TEST RAX, RAX
    JE L10000d930_19
    JMP L10000d930_63     ; inserted

; Entry 10000d930; block 63; address 10000ddac
L10000d930_63:
    MOV RBX, RAX
    MOV RDI, R15
    CALL _free
    JMP L10000d930_64     ; inserted

; Entry 10000d930; block 64; address 10000ddb7
L10000d930_64:
    MOV qword [R14 + 96], RBX
    MOV word [R14 + 44], R13W
    JMP L10000d930_65

; Entry 10000d930; block 65; address 10000dab4
L10000d930_65:
    MOVZX R8D, word [RBP + -42]
    JMP L10000d930_25

; Entry 10000d930; block 66; address 10000dde1
L10000d930_66:
    TEST RAX, RAX
    JE L10000d930_19
    JMP L10000d930_67     ; inserted

; Entry 10000d930; block 67; address 10000dde6
L10000d930_67:
    MOV R12, RBX
    SUB R12, R15
    MOV RDI, RAX
    MOV RSI, R15
    MOV RDX, R12
    MOV R15, RAX
    MOV qword [RBP + -88], RAX
    CALL _memcpy
    JMP L10000d930_68     ; inserted

; Entry 10000d930; block 68; address 10000de01
L10000d930_68:
    LEA RDI, [R15 + R12]
    MOV RCX, qword [RBP + -96]
    MOV RSI, RCX
    ADD RSI, RBX
    MOVZX R15D, word [R14 + 44]
    MOV EAX, R15D
    SUB EAX, ECX
    MOVSXD RDX, EAX
    SUB RDX, R12
    CALL _memcpy
    JMP L10000d930_69     ; inserted

; Entry 10000d930; block 69; address 10000de24
L10000d930_69:
    SUB R15D, dword [RBP + -104]
    MOVZX EBX, R15W
    MOV R12, qword [RBP + -88]
    ADD RBX, R12
    LEA EAX, [R15 + R13]
    MOV word [R14 + 44], AX
    MOV RDI, qword [R14 + 96]
    CALL _free
    JMP L10000d930_70     ; inserted

; Entry 10000d930; block 70; address 10000de45
L10000d930_70:
    MOV qword [R14 + 96], R12
    JMP L10000d930_71

; Entry 10000d930; block 71; address 10000dab0
L10000d930_71:
    MOV R12, qword [RBP + -56]
    JMP L10000d930_65     ; inserted



; ---------------------
; Function: 0x10000de58
; ---------------------
; Entry 10000de58; block 0; address 10000de58
L10000de58_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 56
    MOV qword [RBP + -80], R8
    MOV R12, RCX
    MOV qword [RBP + -72], RSI
    MOV R15, RDI
    XOR EAX, EAX
    MOV qword [RBP + -56], RAX
    MOV qword [RBP + -48], RAX
    MOV qword [RBP + -64], RAX
    LEA RBX, [rel L__DATA___common + 480]
    MOV RAX, qword [RBX]
    LEA RCX, [rel L__DATA___common + 512]
    MOV qword [RCX], RAX
    LEA RAX, [rel L__DATA___common + 552]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 520]
    MOV qword [RCX], RAX
    CMP RDI, 65535
    JA L10000de58_2
    JMP L10000de58_1     ; inserted

; Entry 10000de58; block 1; address 10000deb6
L10000de58_1:
    OR RDX, qword [RBP + -72]
    SHR RDX, 32
    JNE L10000de58_2
    JMP L10000de58_3     ; inserted

; Entry 10000de58; block 2; address 10000ded0
L10000de58_2:
    LEA RBX, [RBP + -56]
    LEA R13, [RBP + -48]
    LEA R14, [RBP + -64]
    MOV EDI, 101075792
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d62f_0
    JMP L10000de58_5     ; inserted

; Entry 10000de58; block 3; address 10000dec0
L10000de58_3:
    LEA RAX, [rel L__DATA___common + 308]
    CMP dword [RAX], 0
    JE L10000de58_4
    JMP L10000de58_2     ; inserted

; Entry 10000de58; block 4; address 10000e010
L10000de58_4:
    LEA R13, [RBP + -56]
    LEA R14, [RBP + -48]
    LEA R15, [RBP + -64]
    MOV EDI, 101010256
    MOV RSI, R13
    MOV RDX, R14
    MOV RCX, R15
    CALL L10000d62f_0
    JMP L10000de58_18     ; inserted

; Entry 10000de58; block 5; address 10000deef
L10000de58_5:
    MOV EDI, 44
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d8b5_0
    JMP L10000de58_6     ; inserted

; Entry 10000de58; block 6; address 10000df02
L10000de58_6:
    MOV EDI, 798
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d6aa_0
    JMP L10000de58_7     ; inserted

; Entry 10000de58; block 7; address 10000df15
L10000de58_7:
    MOV EDI, 45
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d6aa_0
    JMP L10000de58_8     ; inserted

; Entry 10000de58; block 8; address 10000df28
L10000de58_8:
    LEA RAX, [rel L__DATA___common + 480]
    MOV RDI, qword [RAX]
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d62f_0
    JMP L10000de58_9     ; inserted

; Entry 10000de58; block 9; address 10000df40
L10000de58_9:
    LEA RAX, [rel L__DATA___data + 4560]
    MOV RDI, qword [RAX]
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d62f_0
    JMP L10000de58_10     ; inserted

; Entry 10000de58; block 10; address 10000df58
L10000de58_10:
    LEA RAX, [rel L__DATA___common + 496]
    MOV RDI, qword [RAX]
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d8b5_0
    JMP L10000de58_11     ; inserted

; Entry 10000de58; block 11; address 10000df70
L10000de58_11:
    MOV RDI, R15
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d8b5_0
    JMP L10000de58_12     ; inserted

; Entry 10000de58; block 12; address 10000df81
L10000de58_12:
    MOV RDI, qword [RBP + -72]
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d8b5_0
    JMP L10000de58_13     ; inserted

; Entry 10000de58; block 13; address 10000df93
L10000de58_13:
    LEA RAX, [rel L__DATA___common + 488]
    MOV RDI, qword [RAX]
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d8b5_0
    JMP L10000de58_14     ; inserted

; Entry 10000de58; block 14; address 10000dfab
L10000de58_14:
    MOV EDI, 117853008
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d62f_0
    JMP L10000de58_15     ; inserted

; Entry 10000de58; block 15; address 10000dfbe
L10000de58_15:
    LEA RAX, [rel L__DATA___common + 512]
    MOV RDI, qword [RAX]
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d62f_0
    JMP L10000de58_16     ; inserted

; Entry 10000de58; block 16; address 10000dfd6
L10000de58_16:
    LEA RAX, [rel L__DATA___common + 520]
    MOV RDI, qword [RAX]
    MOV RSI, RBX
    MOV RDX, R13
    MOV RCX, R14
    CALL L10000d8b5_0
    JMP L10000de58_17     ; inserted

; Entry 10000de58; block 17; address 10000dfee
L10000de58_17:
    LEA RAX, [rel L__DATA___common + 480]
    MOV RDI, qword [RAX]
    INC RDI
    MOV RSI, RBX
    MOV RDX, R13
    LEA RBX, [rel L__DATA___common + 480]
    MOV RCX, R14
    CALL L10000d62f_0
    JMP L10000de58_4     ; inserted

; Entry 10000de58; block 18; address 10000e02f
L10000de58_18:
    MOV RAX, qword [RBX]
    CMP RAX, 65535
    MOV ECX, 65535
    CMOVB ECX, EAX
    MOVZX EDI, CX
    MOV RSI, R13
    MOV RDX, R14
    MOV RCX, R15
    CALL L10000d6aa_0
    JMP L10000de58_19     ; inserted

; Entry 10000de58; block 19; address 10000e051
L10000de58_19:
    LEA RCX, [rel L__DATA___data + 4560]
    MOV RAX, qword [RCX]
    CMP RAX, 18446744073709551615
    MOV qword [RBP + -88], R12
    JE L10000de58_21
    JMP L10000de58_20     ; inserted

; Entry 10000de58; block 20; address 10000e065
L10000de58_20:
    MOV CX, 65535
    CMP RAX, 65534
    JBE L10000de58_23
    JMP L10000de58_22     ; inserted

; Entry 10000de58; block 21; address 10000e073
L10000de58_21:
    MOV qword [RCX], 0
    XOR EAX, EAX
    JMP L10000de58_23     ; inserted

; Entry 10000de58; block 22; address 10000e071
L10000de58_22:
    JMP L10000de58_24

; Entry 10000de58; block 23; address 10000e07c
L10000de58_23:
    MOV ECX, EAX
    JMP L10000de58_24     ; inserted

; Entry 10000de58; block 24; address 10000e07e
L10000de58_24:
    MOVZX EDI, CX
    LEA R13, [RBP + -56]
    LEA R14, [RBP + -48]
    LEA R15, [RBP + -64]
    MOV RSI, R13
    MOV RDX, R14
    MOV RCX, R15
    CALL L10000d6aa_0
    JMP L10000de58_25     ; inserted

; Entry 10000de58; block 25; address 10000e09b
L10000de58_25:
    LEA RAX, [rel L__DATA___common + 496]
    MOV RDI, qword [RAX]
    MOV R12D, 65535
    CMP RDI, R12
    MOV EBX, 65535
    CMOVAE EDI, EBX
    AND EDI, EBX
    MOV RSI, R13
    MOV RDX, R14
    MOV RCX, R15
    CALL L10000d6aa_0
    JMP L10000de58_26     ; inserted

; Entry 10000de58; block 26; address 10000e0c6
L10000de58_26:
    LEA RAX, [rel L__DATA___common + 504]
    MOV RDI, qword [RAX]
    CMP RDI, R12
    CMOVAE EDI, EBX
    AND EDI, EBX
    MOV RSI, R13
    MOV RDX, R14
    MOV RCX, R15
    CALL L10000d6aa_0
    JMP L10000de58_27     ; inserted

; Entry 10000de58; block 27; address 10000e0e6
L10000de58_27:
    MOV R12D, 4294967295
    MOV RDI, qword [RBP + -72]
    CMP RDI, R12
    CMOVAE RDI, R12
    MOV RSI, R13
    MOV RDX, R14
    MOV RCX, R15
    CALL L10000d62f_0
    JMP L10000de58_28     ; inserted

; Entry 10000de58; block 28; address 10000e105
L10000de58_28:
    LEA RAX, [rel L__DATA___data + 4520]
    LEA RCX, [rel L__DATA___common + 488]
    MOV RDI, qword [RCX]
    MOV RCX, RDI
    SHR RCX, 32
    CMOVNE RDI, R12
    CMP dword [RAX], 1
    CMOVE RDI, R12
    MOV RSI, R13
    MOV RDX, R14
    MOV RCX, R15
    CALL L10000d62f_0
    JMP L10000de58_29     ; inserted

; Entry 10000de58; block 29; address 10000e136
L10000de58_29:
    MOV R12, qword [RBP + -88]
    AND EBX, R12D
    MOV EDI, EBX
    MOV RSI, R13
    MOV RDX, R14
    MOV RCX, R15
    CALL L10000d6aa_0
    JMP L10000de58_30     ; inserted

; Entry 10000de58; block 30; address 10000e14d
L10000de58_30:
    TEST R12, R12
    JE L10000de58_32
    JMP L10000de58_31     ; inserted

; Entry 10000de58; block 31; address 10000e152
L10000de58_31:
    LEA RDX, [RBP + -56]
    LEA RCX, [RBP + -48]
    LEA R8, [RBP + -64]
    MOV RDI, qword [RBP + -80]
    MOV ESI, R12D
    CALL L10000d726_0
    JMP L10000de58_32     ; inserted

; Entry 10000de58; block 32; address 10000e16a
L10000de58_32:
    MOV RBX, qword [RBP + -56]
    MOV R14, qword [RBP + -48]
    MOV ESI, 1
    MOV RDI, RBX
    MOV RDX, R14
    MOV ECX, 3
    CALL L1000121b7_0
    JMP L10000de58_33     ; inserted

; Entry 10000de58; block 33; address 10000e187
L10000de58_33:
    MOV R15, RAX
    MOV RDI, RBX
    CALL _free
    JMP L10000de58_34     ; inserted

; Entry 10000de58; block 34; address 10000e192
L10000de58_34:
    XOR ECX, ECX
    CMP R15, R14
    MOV EAX, 10
    CMOVE EAX, ECX
    ADD RSP, 56
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x10000e1ae
; ---------------------
; Entry 10000e1ae; block 0; address 10000e1ae
L10000e1ae_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 56
    MOV R15, RDI
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -48], RAX
    LEA RBX, [rel L__DATA___common + 64]
    CMP dword [RBX], 2
    JNE L10000e1ae_2
    JMP L10000e1ae_1     ; inserted

; Entry 10000e1ae; block 1; address 10000e1e0
L10000e1ae_1:
    LEA R14, [rel L__DATA___common + 400]
    MOV RCX, qword [R14]
    LEA RDI, [RBP + -80]
    MOV ESI, 26
    MOV EDX, 1
    CALL _fread
    JMP L10000e1ae_3     ; inserted

; Entry 10000e1ae; block 2; address 10000e2b1
L10000e1ae_2:
    MOV R12, qword [R15 + 48]
    MOV qword [RBP + -88], R15
    MOV R15, qword [R15 + 64]
    LEA RBX, [rel L__DATA___common + 448]
    LEA R14, [rel L__DATA___common + 400]
    CMP R12, qword [RBX]
    JE L10000e1ae_14
    JMP L10000e1ae_13     ; inserted

; Entry 10000e1ae; block 3; address 10000e1fd
L10000e1ae_3:
    CMP RAX, 1
    JNE L10000e1ae_5
    JMP L10000e1ae_4     ; inserted

; Entry 10000e1ae; block 4; address 10000e207
L10000e1ae_4:
    MOV EDI, 160
    CALL _malloc
    JMP L10000e1ae_6     ; inserted

; Entry 10000e1ae; block 5; address 10000e353
L10000e1ae_5:
    MOV RDI, qword [R14]
    CALL _ferror
    JMP L10000e1ae_27     ; inserted

; Entry 10000e1ae; block 6; address 10000e211
L10000e1ae_6:
    TEST RAX, RAX
    JE L10000e1ae_8
    JMP L10000e1ae_7     ; inserted

; Entry 10000e1ae; block 7; address 10000e21a
L10000e1ae_7:
    MOV RSI, RAX
    MOVZX EDX, byte [RBP + -80]
    MOVZX EDI, byte [RBP + -79]
    MOV ECX, EDI
    SHL ECX, 8
    OR ECX, EDX
    MOV word [RAX + 2], CX
    MOVZX EDX, word [RBP + -78]
    MOV word [RAX + 58], DX
    MOVZX R8D, word [RBP + -76]
    MOV word [RAX + 6], R8W
    MOV EDX, dword [RBP + -74]
    MOV qword [RAX + 8], RDX
    MOV EDX, dword [RBP + -70]
    MOV qword [RAX + 16], RDX
    MOVZX R12D, word [RBP + -58]
    MOV word [RAX + 40], R12W
    MOVZX R13D, word [RBP + -56]
    MOV word [RAX + 42], R13W
    CMP dword [RBX], 2
    MOV RBX, RAX
    JNE L10000e1ae_10
    JMP L10000e1ae_9     ; inserted

; Entry 10000e1ae; block 8; address 10000e466
L10000e1ae_8:
    LEA RDI, [rel L__TEXT___cstring_30480]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000e1ae_51     ; inserted

; Entry 10000e1ae; block 9; address 10000e270
L10000e1ae_9:
    MOV EDX, dword [RBP + -66]
    MOV qword [RBX + 24], RDX
    MOV EDX, dword [RBP + -62]
    MOV qword [RBX + 32], RDX
    MOVZX EDX, CX
    MOVZX R9D, DI
    CMP EDX, 10496
    JB L10000e1ae_12
    JMP L10000e1ae_11     ; inserted

; Entry 10000e1ae; block 10; address 10000e507
L10000e1ae_10:
    MOV qword [RBP + -96], RAX
    MOV qword [RBP + -88], R15
    LEA RDI, [R12 + 1]
    XORPS XMM0, XMM0
    MOVUPS oword [RBX + 80], XMM0
    MOVUPS oword [RBX + 120], XMM0
    CALL _malloc
    JMP L10000e1ae_62     ; inserted

; Entry 10000e1ae; block 11; address 10000e291
L10000e1ae_11:
    LEA R14, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_30959]
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    MOV R8D, R9D
    JMP L10000e1ae_58

; Entry 10000e1ae; block 12; address 10000e495
L10000e1ae_12:
    SUB ECX, R9D
    CMP CX, 101
    JB L10000e1ae_55
    JMP L10000e1ae_54     ; inserted

; Entry 10000e1ae; block 13; address 10000e2d0
L10000e1ae_13:
    MOV RDI, qword [R14]
    TEST RDI, RDI
    JE L10000e1ae_14
    JMP L10000e1ae_15     ; inserted

; Entry 10000e1ae; block 14; address 10000e2e4
L10000e1ae_14:
    MOV qword [RBX], R12
    LEA R13, [rel L__DATA___common + 408]
    MOV RDI, qword [R13]
    MOV RSI, R12
    CALL L1000127e1_0
    JMP L10000e1ae_17     ; inserted

; Entry 10000e1ae; block 15; address 10000e2d8
L10000e1ae_15:
    CALL _fclose
    JMP L10000e1ae_16     ; inserted

; Entry 10000e1ae; block 16; address 10000e2dd
L10000e1ae_16:
    MOV qword [R14], 0
    JMP L10000e1ae_14     ; inserted

; Entry 10000e1ae; block 17; address 10000e2fa
L10000e1ae_17:
    MOV RBX, RAX
    MOV RAX, qword [R14]
    TEST RAX, RAX
    JE L10000e1ae_19
    JMP L10000e1ae_18     ; inserted

; Entry 10000e1ae; block 18; address 10000e309
L10000e1ae_18:
    MOV RDI, RAX
    MOV RSI, R15
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000e1ae_20     ; inserted

; Entry 10000e1ae; block 19; address 10000e39b
L10000e1ae_19:
    LEA RSI, [rel L__TEXT___cstring_6381]
    MOV RDI, RBX
    JMP L10000e1ae_46     ; inserted

; Entry 10000e1ae; block 20; address 10000e316
L10000e1ae_20:
    TEST EAX, EAX
    JE L10000e1ae_22
    JMP L10000e1ae_21     ; inserted

; Entry 10000e1ae; block 21; address 10000e31e
L10000e1ae_21:
    MOV RDI, qword [R14]
    CALL _fclose
    JMP L10000e1ae_23     ; inserted

; Entry 10000e1ae; block 22; address 10000e41c
L10000e1ae_22:
    LEA RBX, [rel L__DATA___common + 64]
    CMP dword [RBX], 2
    MOV R15, qword [RBP + -88]
    JE L10000e1ae_1
    JMP L10000e1ae_47     ; inserted

; Entry 10000e1ae; block 23; address 10000e326
L10000e1ae_23:
    MOV qword [R14], 0
    CALL ___error
    JMP L10000e1ae_24     ; inserted

; Entry 10000e1ae; block 24; address 10000e332
L10000e1ae_24:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000e1ae_25     ; inserted

; Entry 10000e1ae; block 25; address 10000e339
L10000e1ae_25:
    LEA RDI, [rel L__TEXT___cstring_30405]
    MOV RSI, RAX
    JMP L10000e1ae_186     ; inserted

; Entry 10000e1ae; block 26; address 10000e348
L10000e1ae_26:
    MOV R13D, 11
    JMP L10000e1ae_33

; Entry 10000e1ae; block 27; address 10000e35b
L10000e1ae_27:
    MOV R15D, EAX
    CALL ___error
    JMP L10000e1ae_28     ; inserted

; Entry 10000e1ae; block 28; address 10000e363
L10000e1ae_28:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10000e1ae_29     ; inserted

; Entry 10000e1ae; block 29; address 10000e36a
L10000e1ae_29:
    LEA RDI, [rel L__TEXT___cstring_30458]
    MOV RSI, RAX
    CALL L1000034f4_0
    JMP L10000e1ae_30     ; inserted

; Entry 10000e1ae; block 30; address 10000e379
L10000e1ae_30:
    CMP dword [RBX], 2
    JE L10000e1ae_32
    JMP L10000e1ae_31     ; inserted

; Entry 10000e1ae; block 31; address 10000e37e
L10000e1ae_31:
    MOV RDI, qword [R14]
    CALL _fclose
    JMP L10000e1ae_32     ; inserted

; Entry 10000e1ae; block 32; address 10000e386
L10000e1ae_32:
    XOR EAX, EAX
    TEST R15D, R15D
    SETNE AL
    LEA R13D, [RAX + RAX * 8]
    ADD R13D, 2
    JMP L10000e1ae_33

; Entry 10000e1ae; block 33; address 10000ea36
L10000e1ae_33:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -48]
    JNE L10000e1ae_154
    JMP L10000e1ae_153     ; inserted

; Entry 10000e1ae; block 34; address 10000e3aa
L10000e1ae_34:
    MOV qword [R14], RAX
    TEST RAX, RAX
    JNE L10000e1ae_18
    JMP L10000e1ae_35     ; inserted

; Entry 10000e1ae; block 35; address 10000e3b6
L10000e1ae_35:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JNE L10000e1ae_37
    JMP L10000e1ae_36     ; inserted

; Entry 10000e1ae; block 36; address 10000e3c2
L10000e1ae_36:
    MOV EDI, 18
    MOV RSI, RBX
    CALL L100002e30_0

; Entry 10000e1ae; block 37; address 10000e3cf
L10000e1ae_37:
    MOV RDI, R12
    CALL L1000128e3_0
    JMP L10000e1ae_38     ; inserted

; Entry 10000e1ae; block 38; address 10000e3d7
L10000e1ae_38:
    CMP EAX, 9
    JE L10000e1ae_40
    JMP L10000e1ae_39     ; inserted

; Entry 10000e1ae; block 39; address 10000e3e0
L10000e1ae_39:
    CMP EAX, 3
    JNE L10000e1ae_42
    JMP L10000e1ae_41     ; inserted

; Entry 10000e1ae; block 40; address 10000e621
L10000e1ae_40:
    MOV R13D, 9
    JMP L10000e1ae_33

; Entry 10000e1ae; block 41; address 10000e3e5
L10000e1ae_41:
    LEA RAX, [rel L__DATA___common + 64]
    MOV EAX, dword [RAX]
    DEC EAX
    CMP EAX, 2
    JB L10000e1ae_43
    JMP L10000e1ae_42     ; inserted

; Entry 10000e1ae; block 42; address 10000e3f9
L10000e1ae_42:
    MOV RDI, RBX
    CALL _free
    JMP L10000e1ae_44     ; inserted

; Entry 10000e1ae; block 43; address 10000e4fc
L10000e1ae_43:
    MOV R13D, 3
    JMP L10000e1ae_33

; Entry 10000e1ae; block 44; address 10000e401
L10000e1ae_44:
    MOV RDI, qword [R13]
    MOV RSI, R12
    CALL L1000127e1_0
    JMP L10000e1ae_45     ; inserted

; Entry 10000e1ae; block 45; address 10000e40d
L10000e1ae_45:
    MOV RBX, RAX
    MOV RDI, RAX
    LEA RSI, [rel L__TEXT___cstring_6381]
    JMP L10000e1ae_46

; Entry 10000e1ae; block 46; address 10000e3a5
L10000e1ae_46:
    CALL _fopen
    JMP L10000e1ae_34     ; inserted

; Entry 10000e1ae; block 47; address 10000e430
L10000e1ae_47:
    MOV RDI, qword [R14]
    LEA RSI, [rel L__TEXT___cstring_30429]
    CALL L10000a311_0
    JMP L10000e1ae_48     ; inserted

; Entry 10000e1ae; block 48; address 10000e43f
L10000e1ae_48:
    TEST EAX, EAX
    JNE L10000e1ae_1
    JMP L10000e1ae_49     ; inserted

; Entry 10000e1ae; block 49; address 10000e447
L10000e1ae_49:
    MOV RDI, qword [R14]
    CALL _fclose
    JMP L10000e1ae_50     ; inserted

; Entry 10000e1ae; block 50; address 10000e44f
L10000e1ae_50:
    MOV qword [R14], 0
    MOV RSI, qword [R15 + 112]
    LEA RDI, [rel L__TEXT___cstring_30434]
    JMP L10000e1ae_61

; Entry 10000e1ae; block 51; address 10000e479
L10000e1ae_51:
    MOV R13D, 4
    CMP dword [RBX], 2
    JE L10000e1ae_33
    JMP L10000e1ae_52     ; inserted

; Entry 10000e1ae; block 52; address 10000e488
L10000e1ae_52:
    MOV RDI, qword [R14]
    CALL _fclose
    JMP L10000e1ae_53     ; inserted

; Entry 10000e1ae; block 53; address 10000e490
L10000e1ae_53:
    JMP L10000e1ae_33

; Entry 10000e1ae; block 54; address 10000e49e
L10000e1ae_54:
    MOVZX R8D, CX
    LEA R14, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_31020]
    JMP L10000e1ae_57

; Entry 10000e1ae; block 55; address 10000e4b2
L10000e1ae_55:
    MOVZX ECX, R8W
    CMP ECX, 201
    JB L10000e1ae_10
    JMP L10000e1ae_56     ; inserted

; Entry 10000e1ae; block 56; address 10000e4be
L10000e1ae_56:
    LEA R14, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_31068]
    JMP L10000e1ae_57     ; inserted

; Entry 10000e1ae; block 57; address 10000e4cc
L10000e1ae_57:
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    JMP L10000e1ae_58     ; inserted

; Entry 10000e1ae; block 58; address 10000e4d6
L10000e1ae_58:
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000e1ae_59     ; inserted

; Entry 10000e1ae; block 59; address 10000e4dd
L10000e1ae_59:
    LEA RSI, [rel L__TEXT___cstring_244]
    MOV RDI, R14
    CALL L1000034f4_0
    JMP L10000e1ae_60     ; inserted

; Entry 10000e1ae; block 60; address 10000e4ec
L10000e1ae_60:
    MOV RSI, qword [R15 + 112]
    LEA RDI, [rel L__TEXT___cstring_31008]
    JMP L10000e1ae_61     ; inserted

; Entry 10000e1ae; block 61; address 10000e4f7
L10000e1ae_61:
    CALL L1000034f4_0
    JMP L10000e1ae_43     ; inserted

; Entry 10000e1ae; block 62; address 10000e524
L10000e1ae_62:
    MOV qword [RBX + 112], RAX
    TEST RAX, RAX
    JE L10000e1ae_64
    JMP L10000e1ae_63     ; inserted

; Entry 10000e1ae; block 63; address 10000e531
L10000e1ae_63:
    MOV R15, RAX
    TEST R13W, R13W
    JE L10000e1ae_66
    JMP L10000e1ae_65     ; inserted

; Entry 10000e1ae; block 64; address 10000ea30
L10000e1ae_64:
    MOV R13D, 4
    JMP L10000e1ae_33     ; inserted

; Entry 10000e1ae; block 65; address 10000e53a
L10000e1ae_65:
    MOV RDI, R13
    CALL _malloc
    JMP L10000e1ae_67     ; inserted

; Entry 10000e1ae; block 66; address 10000e54f
L10000e1ae_66:
    MOV RCX, qword [R14]
    MOV EDX, 1
    MOV RDI, R15
    MOV RSI, R12
    CALL _fread
    JMP L10000e1ae_68     ; inserted

; Entry 10000e1ae; block 67; address 10000e542
L10000e1ae_67:
    MOV qword [RBX + 88], RAX
    TEST RAX, RAX
    JE L10000e1ae_64
    JMP L10000e1ae_66     ; inserted

; Entry 10000e1ae; block 68; address 10000e562
L10000e1ae_68:
    CMP RAX, 1
    JNE L10000e1ae_70
    JMP L10000e1ae_69     ; inserted

; Entry 10000e1ae; block 69; address 10000e56c
L10000e1ae_69:
    MOVZX ESI, word [RBX + 42]
    TEST RSI, RSI
    JE L10000e1ae_72
    JMP L10000e1ae_71     ; inserted

; Entry 10000e1ae; block 70; address 10000e605
L10000e1ae_70:
    MOV RDI, qword [R14]
    CALL _ferror
    JMP L10000e1ae_80     ; inserted

; Entry 10000e1ae; block 71; address 10000e575
L10000e1ae_71:
    MOV RDI, qword [RBX + 88]
    MOV RCX, qword [R14]
    MOV EDX, 1
    CALL _fread
    JMP L10000e1ae_73     ; inserted

; Entry 10000e1ae; block 72; address 10000e58c
L10000e1ae_72:
    MOV RAX, qword [RBX + 112]
    MOVZX ECX, word [RBX + 40]
    MOV byte [RAX + RCX], 0
    MOVZX EDI, word [RBX + 40]
    INC RDI
    CALL _malloc
    JMP L10000e1ae_74     ; inserted

; Entry 10000e1ae; block 73; address 10000e586
L10000e1ae_73:
    CMP RAX, 1
    JNE L10000e1ae_70
    JMP L10000e1ae_72     ; inserted

; Entry 10000e1ae; block 74; address 10000e5a4
L10000e1ae_74:
    MOV qword [RBX + 80], RAX
    TEST RAX, RAX
    JE L10000e1ae_64
    JMP L10000e1ae_75     ; inserted

; Entry 10000e1ae; block 75; address 10000e5b1
L10000e1ae_75:
    MOV RSI, qword [RBX + 112]
    MOV RDI, RAX
    CALL _strcpy
    JMP L10000e1ae_76     ; inserted

; Entry 10000e1ae; block 76; address 10000e5bd
L10000e1ae_76:
    MOV RDI, RBX
    CALL L10000a384_0
    JMP L10000e1ae_77     ; inserted

; Entry 10000e1ae; block 77; address 10000e5c5
L10000e1ae_77:
    LEA R14, [rel L__DATA___common + 304]
    MOV dword [R14], EAX
    MOV word [RBX], 0
    LEA R15, [rel L__DATA___common + 64]
    CMP dword [R15], 2
    MOV R12, RBX
    JNE L10000e1ae_79
    JMP L10000e1ae_78     ; inserted

; Entry 10000e1ae; block 78; address 10000e5e4
L10000e1ae_78:
    MOVZX EAX, word [RBX + 58]
    MOV RCX, RBX
    MOV RBX, qword [RBP + -88]
    MOV word [RBX + 4], AX
    MOVUPS XMM0, oword [RCX + 24]
    MOVUPS oword [RBX + 24], XMM0
    MOV ECX, 2
    JMP L10000e1ae_95

; Entry 10000e1ae; block 79; address 10000e62c
L10000e1ae_79:
    MOV RCX, RBX
    MOV RBX, qword [RBP + -88]
    MOVZX EAX, word [RBX]
    MOV word [RCX], AX
    MOVZX EAX, word [RCX + 2]
    CMP AX, word [RBX + 2]
    JE L10000e1ae_82
    JMP L10000e1ae_81     ; inserted

; Entry 10000e1ae; block 80; address 10000e60d
L10000e1ae_80:
    XOR ECX, ECX
    TEST EAX, EAX
    SETNE CL
    LEA R13D, [RCX + RCX * 8]
    ADD R13D, 2
    JMP L10000e1ae_33

; Entry 10000e1ae; block 81; address 10000e643
L10000e1ae_81:
    MOV RSI, qword [RBX + 112]
    LEA RDI, [rel L__TEXT___cstring_31121]
    CALL L1000034f4_0
    JMP L10000e1ae_82     ; inserted

; Entry 10000e1ae; block 82; address 10000e653
L10000e1ae_82:
    MOVZX EAX, word [R12 + 58]
    CMP AX, word [RBX + 4]
    JE L10000e1ae_84
    JMP L10000e1ae_83     ; inserted

; Entry 10000e1ae; block 83; address 10000e65f
L10000e1ae_83:
    MOV RSI, qword [RBX + 112]
    LEA RDI, [rel L__TEXT___cstring_30545]
    CALL L1000034f4_0
    JMP L10000e1ae_85     ; inserted

; Entry 10000e1ae; block 84; address 10000e673
L10000e1ae_84:
    TEST AL, 8
    JNE L10000e1ae_87
    JMP L10000e1ae_86     ; inserted

; Entry 10000e1ae; block 85; address 10000e66f
L10000e1ae_85:
    MOVZX EAX, word [RBX + 4]
    JMP L10000e1ae_84     ; inserted

; Entry 10000e1ae; block 86; address 10000e677
L10000e1ae_86:
    MOV RAX, qword [R12 + 16]
    CMP RAX, qword [RBX + 16]
    JE L10000e1ae_87
    JMP L10000e1ae_88     ; inserted

; Entry 10000e1ae; block 87; address 10000e692
L10000e1ae_87:
    MOV EBX, dword [R15]
    MOV ECX, 3
    CMP EBX, 3
    JE L10000e1ae_90
    JMP L10000e1ae_89     ; inserted

; Entry 10000e1ae; block 88; address 10000e682
L10000e1ae_88:
    MOV RSI, qword [RBX + 112]
    LEA RDI, [rel L__TEXT___cstring_30582]
    CALL L1000034f4_0
    JMP L10000e1ae_87     ; inserted

; Entry 10000e1ae; block 89; address 10000e69f
L10000e1ae_89:
    MOV RDI, qword [R12 + 112]
    MOV RAX, qword [RBP + -88]
    MOV R15, qword [RAX + 112]
    MOV RSI, R15
    CALL _strcmp
    JMP L10000e1ae_91     ; inserted

; Entry 10000e1ae; block 90; address 10000e6d2
L10000e1ae_90:
    MOV RBX, qword [RBP + -88]
    MOVUPS XMM0, oword [RBX + 24]
    MOVUPS oword [R12 + 24], XMM0
    CMP ECX, 3
    JNE L10000e1ae_95
    JMP L10000e1ae_94     ; inserted

; Entry 10000e1ae; block 91; address 10000e6b4
L10000e1ae_91:
    MOV ECX, EBX
    TEST EAX, EAX
    JE L10000e1ae_90
    JMP L10000e1ae_92     ; inserted

; Entry 10000e1ae; block 92; address 10000e6ba
L10000e1ae_92:
    LEA RDI, [rel L__TEXT___cstring_31173]
    MOV RSI, R15
    CALL L1000034f4_0
    JMP L10000e1ae_93     ; inserted

; Entry 10000e1ae; block 93; address 10000e6c9
L10000e1ae_93:
    LEA RAX, [rel L__DATA___common + 64]
    MOV ECX, dword [RAX]
    JMP L10000e1ae_90     ; inserted

; Entry 10000e1ae; block 94; address 10000e6e5
L10000e1ae_94:
    MOV RDI, qword [RBX + 112]
    CALL _strlen
    JMP L10000e1ae_96     ; inserted

; Entry 10000e1ae; block 95; address 10000e73c
L10000e1ae_95:
    LEA RAX, [rel L__DATA___common + 480]
    MOV RAX, qword [RAX]
    MOV qword [RBX + 48], RAX
    LEA RAX, [rel L__DATA___common + 552]
    MOV RAX, qword [RAX]
    MOV qword [RBX + 64], RAX
    CMP ECX, 2
    JE L10000e1ae_104
    JMP L10000e1ae_103     ; inserted

; Entry 10000e1ae; block 96; address 10000e6ee
L10000e1ae_96:
    MOV word [RBX + 40], AX
    MOV R13, R12
    MOV word [R12 + 40], AX
    MOV RDI, qword [R12 + 112]
    CALL _free
    JMP L10000e1ae_97     ; inserted

; Entry 10000e1ae; block 97; address 10000e705
L10000e1ae_97:
    MOV R15, qword [RBX + 112]
    MOV RDI, R15
    CALL _strlen
    JMP L10000e1ae_98     ; inserted

; Entry 10000e1ae; block 98; address 10000e711
L10000e1ae_98:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L10000e1ae_99     ; inserted

; Entry 10000e1ae; block 99; address 10000e71a
L10000e1ae_99:
    MOV qword [R12 + 112], RAX
    TEST RAX, RAX
    JE L10000e1ae_101
    JMP L10000e1ae_100     ; inserted

; Entry 10000e1ae; block 100; address 10000e728
L10000e1ae_100:
    MOV RDI, RAX
    MOV RSI, R15
    CALL _strcpy
    JMP L10000e1ae_102     ; inserted

; Entry 10000e1ae; block 101; address 10000ea1d
L10000e1ae_101:
    LEA RDI, [rel L__TEXT___cstring_31210]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000e1ae_64     ; inserted

; Entry 10000e1ae; block 102; address 10000e733
L10000e1ae_102:
    LEA RAX, [rel L__DATA___common + 64]
    MOV ECX, dword [RAX]
    JMP L10000e1ae_95     ; inserted

; Entry 10000e1ae; block 103; address 10000e75d
L10000e1ae_103:
    MOVZX EAX, word [RBX + 4]
    TEST AL, 1
    JNE L10000e1ae_104
    JMP L10000e1ae_105     ; inserted

; Entry 10000e1ae; block 104; address 10000e78a
L10000e1ae_104:
    MOVZX EAX, word [RBX + 58]
    XOR EDX, EDX
    CMP dword [R14], 0
    SETNE DL
    XOR ESI, ESI
    TEST AL, 8
    LEA RAX, [RDX * 8 * 16]
    CMOVNE RSI, RAX
    MOV RDI, R12
    MOVZX EAX, word [R12 + 40]
    ADD RAX, qword [RBX + 24]
    MOVZX EDX, word [R12 + 42]
    ADD RAX, RSI
    ADD RAX, RDX
    LEA R15, [rel L__DATA___common + 6344]
    MOV RDX, qword [R15]
    ADD RAX, RDX
    ADD RAX, 30
    MOV qword [R15], RAX
    CMP ECX, 2
    JNE L10000e1ae_107
    JMP L10000e1ae_106     ; inserted

; Entry 10000e1ae; block 105; address 10000e765
L10000e1ae_105:
    AND EAX, 65527
    MOV word [RBX + 4], AX
    MOV RDX, R12
    MOV word [R12 + 4], AX
    MOVZX EAX, word [R12 + 58]
    AND EAX, 4294967287
    MOV word [R12 + 58], AX
    MOV word [RBX + 58], AX
    JMP L10000e1ae_104     ; inserted

; Entry 10000e1ae; block 106; address 10000e7d9
L10000e1ae_106:
    MOV R14, qword [RDI + 112]
    MOV RDI, R14
    CALL _strlen
    JMP L10000e1ae_108     ; inserted

; Entry 10000e1ae; block 107; address 10000e852
L10000e1ae_107:
    MOV RAX, qword [RBX + 16]
    MOV qword [RDI + 16], RAX
    JMP L10000e1ae_115     ; inserted

; Entry 10000e1ae; block 108; address 10000e7e5
L10000e1ae_108:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L10000e1ae_109     ; inserted

; Entry 10000e1ae; block 109; address 10000e7ee
L10000e1ae_109:
    MOV qword [RBX + 128], RAX
    TEST RAX, RAX
    JE L10000e1ae_64
    JMP L10000e1ae_110     ; inserted

; Entry 10000e1ae; block 110; address 10000e7fe
L10000e1ae_110:
    MOV RDI, RAX
    MOV RSI, R14
    CALL _strcpy
    JMP L10000e1ae_111     ; inserted

; Entry 10000e1ae; block 111; address 10000e809
L10000e1ae_111:
    MOV R8, qword [RBX + 128]
    LEA R14, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_31235]
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000e1ae_112     ; inserted

; Entry 10000e1ae; block 112; address 10000e82f
L10000e1ae_112:
    MOV RDI, R14
    XOR ESI, ESI
    CALL L100003300_0
    JMP L10000e1ae_113     ; inserted

; Entry 10000e1ae; block 113; address 10000e839
L10000e1ae_113:
    LEA RAX, [rel L__DATA___common + 64]
    CMP dword [RAX], 2
    MOV RDI, R12
    JNE L10000e1ae_107
    JMP L10000e1ae_114     ; inserted

; Entry 10000e1ae; block 114; address 10000e848
L10000e1ae_114:
    MOV RAX, qword [RDI + 16]
    MOV qword [RBX + 16], RAX
    JMP L10000e1ae_115

; Entry 10000e1ae; block 115; address 10000e85a
L10000e1ae_115:
    MOV RBX, RDI
    XOR ESI, ESI
    CALL L10000d090_0
    JMP L10000e1ae_116     ; inserted

; Entry 10000e1ae; block 116; address 10000e864
L10000e1ae_116:
    MOV R13D, 10
    TEST EAX, EAX
    JNE L10000e1ae_33
    JMP L10000e1ae_117     ; inserted

; Entry 10000e1ae; block 117; address 10000e872
L10000e1ae_117:
    LEA RAX, [rel L__DATA___common + 64]
    CMP dword [RAX], 2
    JNE L10000e1ae_119
    JMP L10000e1ae_118     ; inserted

; Entry 10000e1ae; block 118; address 10000e87e
L10000e1ae_118:
    MOV RDI, 18446744073709551614
    TEST byte [RBX + 58], 8
    JNE L10000e1ae_120
    JMP L10000e1ae_119     ; inserted

; Entry 10000e1ae; block 119; address 10000e88b
L10000e1ae_119:
    MOV RDI, qword [RBX + 24]
    JMP L10000e1ae_120     ; inserted

; Entry 10000e1ae; block 120; address 10000e88f
L10000e1ae_120:
    ADD qword [RBP + -96], 80
    CALL L100011949_0
    JMP L10000e1ae_121     ; inserted

; Entry 10000e1ae; block 121; address 10000e899
L10000e1ae_121:
    MOV R13D, EAX
    CMP EAX, 9
    JNE L10000e1ae_123
    JMP L10000e1ae_122     ; inserted

; Entry 10000e1ae; block 122; address 10000e8a1
L10000e1ae_122:
    CMP word [RBX + 42], 0
    JE L10000e1ae_125
    JMP L10000e1ae_124     ; inserted

; Entry 10000e1ae; block 123; address 10000e8ed
L10000e1ae_123:
    LEA R14, [rel L__DATA___common + 96]
    CMP R13D, 2
    JE L10000e1ae_132
    JMP L10000e1ae_131     ; inserted

; Entry 10000e1ae; block 124; address 10000e8a8
L10000e1ae_124:
    MOV RDI, qword [RBX + 88]
    CALL _free
    JMP L10000e1ae_125     ; inserted

; Entry 10000e1ae; block 125; address 10000e8b1
L10000e1ae_125:
    CMP word [RBX + 40], 0
    JE L10000e1ae_127
    JMP L10000e1ae_126     ; inserted

; Entry 10000e1ae; block 126; address 10000e8b8
L10000e1ae_126:
    MOV RDI, qword [RBX + 112]
    CALL _free
    JMP L10000e1ae_128     ; inserted

; Entry 10000e1ae; block 127; address 10000e8d4
L10000e1ae_127:
    MOV RDI, RBX
    CALL _free
    JMP L10000e1ae_130     ; inserted

; Entry 10000e1ae; block 128; address 10000e8c1
L10000e1ae_128:
    CMP word [RBX + 40], 0
    JE L10000e1ae_127
    JMP L10000e1ae_129     ; inserted

; Entry 10000e1ae; block 129; address 10000e8c8
L10000e1ae_129:
    MOV RAX, qword [RBP + -96]
    MOV RDI, qword [RAX]
    CALL _free
    JMP L10000e1ae_127     ; inserted

; Entry 10000e1ae; block 130; address 10000e8dc
L10000e1ae_130:
    LEA RSI, [rel L__TEXT___cstring_31249]
    MOV EDI, 9
    CALL L100002e30_0

; Entry 10000e1ae; block 131; address 10000e8fa
L10000e1ae_131:
    CMP qword [R14], 0
    JNE L10000e1ae_132
    JMP L10000e1ae_133     ; inserted

; Entry 10000e1ae; block 132; address 10000e966
L10000e1ae_132:
    MOV RAX, qword [RBP + -88]
    MOV RSI, qword [RAX + 128]
    LEA RDI, [rel L__TEXT___cstring_31270]
    CALL L1000034f4_0
    JMP L10000e1ae_140     ; inserted

; Entry 10000e1ae; block 133; address 10000e900
L10000e1ae_133:
    LEA R14, [rel L__DATA___common + 64]
    CMP dword [R14], 2
    MOV RBX, qword [RBP + -88]
    MOVZX EAX, word [RBX + 4]
    JNE L10000e1ae_135
    JMP L10000e1ae_134     ; inserted

; Entry 10000e1ae; block 134; address 10000e919
L10000e1ae_134:
    TEST AL, 8
    JE L10000e1ae_137
    JMP L10000e1ae_136     ; inserted

; Entry 10000e1ae; block 135; address 10000ea5c
L10000e1ae_135:
    TEST AL, 8
    JE L10000e1ae_137
    JMP L10000e1ae_155     ; inserted

; Entry 10000e1ae; block 136; address 10000e921
L10000e1ae_136:
    LEA RAX, [rel L__DATA___common + 104]
    CMP dword [RAX], 0
    JE L10000e1ae_139
    JMP L10000e1ae_138     ; inserted

; Entry 10000e1ae; block 137; address 10000ea68
L10000e1ae_137:
    LEA RAX, [rel L__DATA___common + 564]
    CMP dword [RAX], 1
    JNE L10000e1ae_157
    JMP L10000e1ae_156     ; inserted

; Entry 10000e1ae; block 138; address 10000e931
L10000e1ae_138:
    LEA RAX, [rel L__DATA___common + 112]
    MOV RAX, qword [RAX]
    MOV RCX, R12
    MOV qword [R12 + 16], RAX
    LEA RAX, [rel L__DATA___common + 120]
    MOV RAX, qword [RAX]
    MOV qword [R12 + 24], RAX
    LEA RAX, [rel L__DATA___common + 128]
    MOV RAX, qword [RAX]
    MOV qword [R12 + 32], RAX
    JMP L10000e1ae_155

; Entry 10000e1ae; block 139; address 10000ecc5
L10000e1ae_139:
    MOV RSI, qword [RBX + 128]
    LEA RDI, [rel L__TEXT___cstring_31308]
    CALL L1000034f4_0
    JMP L10000e1ae_187     ; inserted

; Entry 10000e1ae; block 140; address 10000e97d
L10000e1ae_140:
    TEST R13D, R13D
    MOV EAX, R13D
    MOV R13D, 3
    CMOVNE R13D, EAX
    LEA RAX, [rel L__DATA___common + 64]
    CMP dword [RAX], 2
    JNE L10000e1ae_142
    JMP L10000e1ae_141     ; inserted

; Entry 10000e1ae; block 141; address 10000e999
L10000e1ae_141:
    MOV qword [R14], 0
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    LEA R14, [rel L__DATA___common + 544]
    MOV RSI, qword [R14]
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000e1ae_143     ; inserted

; Entry 10000e1ae; block 142; address 10000e9e0
L10000e1ae_142:
    CMP word [RBX + 42], 0
    JE L10000e1ae_147
    JMP L10000e1ae_146     ; inserted

; Entry 10000e1ae; block 143; address 10000e9bb
L10000e1ae_143:
    TEST EAX, EAX
    JE L10000e1ae_145
    JMP L10000e1ae_144     ; inserted

; Entry 10000e1ae; block 144; address 10000e9bf
L10000e1ae_144:
    LEA RSI, [rel L__TEXT___cstring_31281]
    MOV EDI, 14
    CALL L100002e30_0

; Entry 10000e1ae; block 145; address 10000e9d0
L10000e1ae_145:
    MOV RAX, qword [R14]
    LEA RCX, [rel L__DATA___common + 552]
    MOV qword [RCX], RAX
    MOV qword [R15], RAX
    JMP L10000e1ae_142     ; inserted

; Entry 10000e1ae; block 146; address 10000e9e7
L10000e1ae_146:
    MOV RDI, qword [RBX + 88]
    CALL _free
    JMP L10000e1ae_147     ; inserted

; Entry 10000e1ae; block 147; address 10000e9f0
L10000e1ae_147:
    CMP word [RBX + 40], 0
    JE L10000e1ae_149
    JMP L10000e1ae_148     ; inserted

; Entry 10000e1ae; block 148; address 10000e9f7
L10000e1ae_148:
    MOV RDI, qword [RBX + 112]
    CALL _free
    JMP L10000e1ae_150     ; inserted

; Entry 10000e1ae; block 149; address 10000ea13
L10000e1ae_149:
    MOV RDI, RBX
    CALL _free
    JMP L10000e1ae_152     ; inserted

; Entry 10000e1ae; block 150; address 10000ea00
L10000e1ae_150:
    CMP word [RBX + 40], 0
    JE L10000e1ae_149
    JMP L10000e1ae_151     ; inserted

; Entry 10000e1ae; block 151; address 10000ea07
L10000e1ae_151:
    MOV RAX, qword [RBP + -96]
    MOV RDI, qword [RAX]
    CALL _free
    JMP L10000e1ae_149     ; inserted

; Entry 10000e1ae; block 152; address 10000ea1b
L10000e1ae_152:
    JMP L10000e1ae_33

; Entry 10000e1ae; block 153; address 10000ea4a
L10000e1ae_153:
    MOV EAX, R13D
    ADD RSP, 56
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000e1ae; block 154; address 10000ed4e
L10000e1ae_154:
    CALL ___stack_chk_fail

; Entry 10000e1ae; block 155; address 10000ea60
L10000e1ae_155:
    MOV RDI, R12
    CALL L10000d7cf_0
    JMP L10000e1ae_137     ; inserted

; Entry 10000e1ae; block 156; address 10000ea74
L10000e1ae_156:
    LEA RAX, [rel L__DATA___common + 472]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 480]
    CMP RDI, qword [RAX]
    JE L10000e1ae_157
    JMP L10000e1ae_158     ; inserted

; Entry 10000e1ae; block 157; address 10000eab9
L10000e1ae_157:
    CMP dword [R14], 2
    JNE L10000e1ae_161
    JMP L10000e1ae_160     ; inserted

; Entry 10000e1ae; block 158; address 10000ea8a
L10000e1ae_158:
    LEA R14, [rel L__DATA___common + 536]
    MOV RSI, qword [R14]
    LEA R15, [rel L__DATA___common + 528]
    MOV RDX, qword [R15]
    CALL L10001374d_0
    JMP L10000e1ae_159     ; inserted

; Entry 10000e1ae; block 159; address 10000eaa3
L10000e1ae_159:
    MOV qword [R14], 0
    MOV RDI, qword [R15]
    LEA R14, [rel L__DATA___common + 64]
    CALL _free
    JMP L10000e1ae_157     ; inserted

; Entry 10000e1ae; block 160; address 10000eac3
L10000e1ae_160:
    MOV RDX, R12
    MOVZX EAX, word [R12 + 2]
    MOV word [RBX + 2], AX
    MOVZX EAX, word [R12 + 6]
    MOV word [RBX + 6], AX
    MOVUPS XMM0, oword [R12 + 8]
    MOVUPS oword [RBX + 8], XMM0
    MOVZX EAX, word [R12 + 58]
    MOV word [RBX + 58], AX
    MOV word [RBX + 4], AX
    MOVUPS XMM0, oword [R12 + 24]
    MOVUPS oword [RBX + 24], XMM0
    MOVZX EAX, word [R12 + 40]
    MOV word [RBX + 40], AX
    MOVZX EDI, word [R12 + 42]
    MOV word [RBX + 42], DI
    MOV R14, qword [R12 + 88]
    MOV qword [RBX + 88], R14
    MOV word [RBX + 44], DI
    MOV qword [RBX + 96], 0
    TEST RDI, RDI
    JE L10000e1ae_163
    JMP L10000e1ae_162     ; inserted

; Entry 10000e1ae; block 161; address 10000ebb3
L10000e1ae_161:
    MOV R15, R12
    CMP word [R12 + 42], 0
    JE L10000e1ae_171
    JMP L10000e1ae_170     ; inserted

; Entry 10000e1ae; block 162; address 10000eb2a
L10000e1ae_162:
    INC RDI
    CALL _malloc
    JMP L10000e1ae_164     ; inserted

; Entry 10000e1ae; block 163; address 10000eb53
L10000e1ae_163:
    MOV dword [RBP + -96], R13D
    XOR ECX, ECX
    MOV word [RBX + 46], CX
    MOV word [RBX + 56], CX
    MOV qword [RBX + 72], 0
    MOV RCX, qword [RDX + 80]
    MOV qword [RBX + 80], RCX
    MOV R15, qword [RDX + 112]
    MOV qword [RBX + 112], R15
    MOVZX EDI, AX
    INC RDI
    CALL _malloc
    JMP L10000e1ae_167     ; inserted

; Entry 10000e1ae; block 164; address 10000eb32
L10000e1ae_164:
    MOV qword [RBX + 96], RAX
    TEST RAX, RAX
    JE L10000e1ae_64
    JMP L10000e1ae_165     ; inserted

; Entry 10000e1ae; block 165; address 10000eb3f
L10000e1ae_165:
    MOV RDI, RAX
    MOV RSI, R14
    CALL _strcpy
    JMP L10000e1ae_166     ; inserted

; Entry 10000e1ae; block 166; address 10000eb4a
L10000e1ae_166:
    MOV RDX, R12
    MOVZX EAX, word [R12 + 40]
    JMP L10000e1ae_163     ; inserted

; Entry 10000e1ae; block 167; address 10000eb84
L10000e1ae_167:
    MOV qword [RBX + 120], RAX
    MOV R13D, 4
    TEST RAX, RAX
    JE L10000e1ae_33
    JMP L10000e1ae_168     ; inserted

; Entry 10000e1ae; block 168; address 10000eb97
L10000e1ae_168:
    MOV RDI, RAX
    MOV RSI, R15
    CALL _strcpy
    JMP L10000e1ae_169     ; inserted

; Entry 10000e1ae; block 169; address 10000eba2
L10000e1ae_169:
    MOV RBX, qword [RBP + -88]
    LEA R14, [rel L__DATA___common + 64]
    MOV R13D, dword [RBP + -96]
    JMP L10000e1ae_176

; Entry 10000e1ae; block 170; address 10000ebbf
L10000e1ae_170:
    MOV RDI, qword [R15 + 88]
    CALL _free
    JMP L10000e1ae_171     ; inserted

; Entry 10000e1ae; block 171; address 10000ebc8
L10000e1ae_171:
    CMP word [R15 + 40], 0
    JE L10000e1ae_173
    JMP L10000e1ae_172     ; inserted

; Entry 10000e1ae; block 172; address 10000ebd0
L10000e1ae_172:
    MOV RDI, qword [R15 + 112]
    CALL _free
    JMP L10000e1ae_174     ; inserted

; Entry 10000e1ae; block 173; address 10000ebed
L10000e1ae_173:
    MOV RDI, R15
    CALL _free
    JMP L10000e1ae_176     ; inserted

; Entry 10000e1ae; block 174; address 10000ebd9
L10000e1ae_174:
    CMP word [R15 + 40], 0
    JE L10000e1ae_173
    JMP L10000e1ae_175     ; inserted

; Entry 10000e1ae; block 175; address 10000ebe1
L10000e1ae_175:
    MOV RAX, qword [RBP + -96]
    MOV RDI, qword [RAX]
    CALL _free
    JMP L10000e1ae_173     ; inserted

; Entry 10000e1ae; block 176; address 10000ebf5
L10000e1ae_176:
    CMP dword [R14], 2
    JNE L10000e1ae_33
    JMP L10000e1ae_177     ; inserted

; Entry 10000e1ae; block 177; address 10000ebff
L10000e1ae_177:
    MOV RDI, qword [RBX + 24]
    LEA RDX, [rel L__TEXT___cstring_7043]
    XOR ESI, ESI
    CALL L100015a80_0
    JMP L10000e1ae_178     ; inserted

; Entry 10000e1ae; block 178; address 10000ec11
L10000e1ae_178:
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_11333]
    MOV EDX, 5105
    MOV RDI, RBX
    XOR ESI, ESI
    MOV R8, RAX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000e1ae_179     ; inserted

; Entry 10000e1ae; block 179; address 10000ec33
L10000e1ae_179:
    MOV RDI, RBX
    MOV ESI, 1
    CALL L100003300_0
    JMP L10000e1ae_180     ; inserted

; Entry 10000e1ae; block 180; address 10000ec40
L10000e1ae_180:
    MOV EAX, R13D
    CMP R13D, 11
    JNE L10000e1ae_33
    JMP L10000e1ae_181     ; inserted

; Entry 10000e1ae; block 181; address 10000ec4d
L10000e1ae_181:
    MOV RAX, qword [RBP + -88]
    MOV RSI, qword [RAX + 128]
    LEA RDI, [rel L__TEXT___cstring_31380]
    CALL L1000034f4_0
    JMP L10000e1ae_182     ; inserted

; Entry 10000e1ae; block 182; address 10000ec64
L10000e1ae_182:
    MOV RDI, qword [R12 + 24]
    LEA R14, [rel L__TEXT___cstring_7043]
    XOR ESI, ESI
    MOV RDX, R14
    CALL L100015a80_0
    JMP L10000e1ae_183     ; inserted

; Entry 10000e1ae; block 183; address 10000ec7a
L10000e1ae_183:
    MOV RBX, RAX
    LEA RAX, [rel L__DATA___common + 592]
    MOV RDI, qword [RAX]
    XOR ESI, ESI
    MOV RDX, R14
    CALL L100015a80_0
    JMP L10000e1ae_184     ; inserted

; Entry 10000e1ae; block 184; address 10000ec91
L10000e1ae_184:
    LEA R14, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_31398]
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    MOV R8, RBX
    MOV R9, RAX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000e1ae_185     ; inserted

; Entry 10000e1ae; block 185; address 10000ecb6
L10000e1ae_185:
    LEA RSI, [rel L__TEXT___cstring_244]
    MOV RDI, R14
    JMP L10000e1ae_186

; Entry 10000e1ae; block 186; address 10000e343
L10000e1ae_186:
    CALL L1000034f4_0
    JMP L10000e1ae_26     ; inserted

; Entry 10000e1ae; block 187; address 10000ecd8
L10000e1ae_187:
    LEA RDI, [rel L__TEXT___cstring_31339]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000e1ae_188     ; inserted

; Entry 10000e1ae; block 188; address 10000eceb
L10000e1ae_188:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 544]
    MOV RSI, qword [RAX]
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000e1ae_189     ; inserted

; Entry 10000e1ae; block 189; address 10000ed06
L10000e1ae_189:
    CMP word [R12 + 42], 0
    JE L10000e1ae_191
    JMP L10000e1ae_190     ; inserted

; Entry 10000e1ae; block 190; address 10000ed0f
L10000e1ae_190:
    MOV RDI, qword [R12 + 88]
    CALL _free
    JMP L10000e1ae_191     ; inserted

; Entry 10000e1ae; block 191; address 10000ed19
L10000e1ae_191:
    CMP word [R12 + 40], 0
    JE L10000e1ae_193
    JMP L10000e1ae_192     ; inserted

; Entry 10000e1ae; block 192; address 10000ed22
L10000e1ae_192:
    MOV RDI, qword [R12 + 112]
    CALL _free
    JMP L10000e1ae_194     ; inserted

; Entry 10000e1ae; block 193; address 10000ed41
L10000e1ae_193:
    MOV RDI, R12
    CALL _free
    JMP L10000e1ae_196     ; inserted

; Entry 10000e1ae; block 194; address 10000ed2c
L10000e1ae_194:
    CMP word [R12 + 40], 0
    JE L10000e1ae_193
    JMP L10000e1ae_195     ; inserted

; Entry 10000e1ae; block 195; address 10000ed35
L10000e1ae_195:
    MOV RAX, qword [RBP + -96]
    MOV RDI, qword [RAX]
    CALL _free
    JMP L10000e1ae_193     ; inserted

; Entry 10000e1ae; block 196; address 10000ed49
L10000e1ae_196:
    JMP L10000e1ae_43



; ---------------------
; Function: 0x10000ed53
; ---------------------
; Entry 10000ed53; block 0; address 10000ed53
L10000ed53_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R14
    PUSH RBX
    MOV R14, RSI
    MOV RBX, RDI
    MOV RDI, qword [RDI + 88]
    MOVZX ESI, word [RBX + 42]
    XOR EDX, EDX
    MOV RCX, R14
    CALL L10000eda8_0
    JMP L10000ed53_1     ; inserted

; Entry 10000ed53; block 1; address 10000ed72
L10000ed53_1:
    TEST EAX, EAX
    JE L10000ed53_3
    JMP L10000ed53_2     ; inserted

; Entry 10000ed53; block 2; address 10000ed76
L10000ed53_2:
    POP RBX
    POP R14
    POP RBP
    RET 

; Entry 10000ed53; block 3; address 10000ed7b
L10000ed53_3:
    MOVZX ESI, word [RBX + 44]
    TEST RSI, RSI
    JE L10000ed53_5
    JMP L10000ed53_4     ; inserted

; Entry 10000ed53; block 4; address 10000ed84
L10000ed53_4:
    MOV RDI, qword [RBX + 96]
    MOV EAX, 0
    CMP RDI, qword [RBX + 88]
    JE L10000ed53_2
    JMP L10000ed53_6     ; inserted

; Entry 10000ed53; block 5; address 10000eda4
L10000ed53_5:
    XOR EAX, EAX
    JMP L10000ed53_2

; Entry 10000ed53; block 6; address 10000ed93
L10000ed53_6:
    MOV EDX, 1
    MOV RCX, R14
    POP RBX
    POP R14
    POP RBP
    PUSH RBP
    MOV RBP, RSP
    XOR EAX, EAX
    TEST RDI, RDI
    JE L10000ed53_8
    JMP L10000ed53_7     ; inserted

; Entry 10000ed53; block 7; address 10000edb7
L10000ed53_7:
    CMP RSI, 4
    JB L10000ed53_8
    JMP L10000ed53_9     ; inserted

; Entry 10000ed53; block 8; address 10000eee2
L10000ed53_8:
    POP RBP
    RET 

; Entry 10000ed53; block 9; address 10000edc1
L10000ed53_9:
    XOR R9D, R9D
    XOR EAX, EAX
    JMP L10000ed53_34     ; inserted

; Entry 10000ed53; block 10; address 10000edd8
L10000ed53_10:
    MOVZX R10D, word [RDI]
    CMP R10D, 30805
    JE L10000ed53_12
    JMP L10000ed53_11     ; inserted

; Entry 10000ed53; block 11; address 10000ede5
L10000ed53_11:
    MOVZX R10D, R10W
    CMP R10D, 22613
    JE L10000ed53_14
    JMP L10000ed53_13     ; inserted

; Entry 10000ed53; block 12; address 10000ee46
L10000ed53_12:
    MOV R10D, EAX
    AND R10D, 4294967040
    TEST R9D, R9D
    CMOVE EAX, R10D
    MOV R9D, 1
    JMP L10000ed53_16

; Entry 10000ed53; block 13; address 10000edf2
L10000ed53_13:
    CMP R10D, 21589
    JNE L10000ed53_16
    JMP L10000ed53_15     ; inserted

; Entry 10000ed53; block 14; address 10000ee5f
L10000ed53_14:
    TEST R9D, R9D
    JNE L10000ed53_16
    JMP L10000ed53_23     ; inserted

; Entry 10000ed53; block 15; address 10000edff
L10000ed53_15:
    AND EAX, 4294967040
    MOV R9D, 1
    TEST RCX, RCX
    JE L10000ed53_16
    JMP L10000ed53_17     ; inserted

; Entry 10000ed53; block 16; address 10000eeca
L10000ed53_16:
    ADD RDI, R8
    ADD RDI, 4
    ADD R8, 4
    SUB RSI, R8
    CMP RSI, 3
    JA L10000ed53_34
    JMP L10000ed53_8     ; inserted

; Entry 10000ed53; block 17; address 10000ee13
L10000ed53_17:
    TEST R8, R8
    JE L10000ed53_16
    JMP L10000ed53_18     ; inserted

; Entry 10000ed53; block 18; address 10000ee1c
L10000ed53_18:
    MOVZX R10D, byte [RDI + 4]
    OR EAX, R10D
    MOV R9D, 1
    TEST R10B, 1
    JE L10000ed53_20
    JMP L10000ed53_19     ; inserted

; Entry 10000ed53; block 19; address 10000ee30
L10000ed53_19:
    CMP R8D, 5
    JB L10000ed53_22
    JMP L10000ed53_21     ; inserted

; Entry 10000ed53; block 20; address 10000ee84
L10000ed53_20:
    MOV R10D, 1
    JMP L10000ed53_25     ; inserted

; Entry 10000ed53; block 21; address 10000ee36
L10000ed53_21:
    MOV R10D, dword [RDI + 5]
    MOV qword [RCX + 8], R10
    MOV R10D, 5
    JMP L10000ed53_25

; Entry 10000ed53; block 22; address 10000ee81
L10000ed53_22:
    AND EAX, 4294967294
    JMP L10000ed53_20     ; inserted

; Entry 10000ed53; block 23; address 10000ee64
L10000ed53_23:
    CMP R8D, 8
    JB L10000ed53_16
    JMP L10000ed53_24     ; inserted

; Entry 10000ed53; block 24; address 10000ee6a
L10000ed53_24:
    MOV R9D, dword [RDI + 4]
    MOV qword [RCX], R9
    MOV R9D, dword [RDI + 8]
    MOV qword [RCX + 8], R9
    OR EAX, 3
    XOR R9D, R9D
    JMP L10000ed53_16

; Entry 10000ed53; block 25; address 10000ee8a
L10000ed53_25:
    TEST EDX, EDX
    JNE L10000ed53_16
    JMP L10000ed53_26     ; inserted

; Entry 10000ed53; block 26; address 10000ee8e
L10000ed53_26:
    TEST AL, 2
    JE L10000ed53_28
    JMP L10000ed53_27     ; inserted

; Entry 10000ed53; block 27; address 10000ee92
L10000ed53_27:
    MOV R11D, R10D
    ADD R11, 4
    CMP R8, R11
    JAE L10000ed53_30
    JMP L10000ed53_29     ; inserted

; Entry 10000ed53; block 28; address 10000eead
L10000ed53_28:
    TEST AL, 4
    JE L10000ed53_16
    JMP L10000ed53_31     ; inserted

; Entry 10000ed53; block 29; address 10000ee9e
L10000ed53_29:
    AND EAX, 4294967293
    JMP L10000ed53_28

; Entry 10000ed53; block 30; address 10000eea3
L10000ed53_30:
    MOV R10D, dword [RDI + R11]
    MOV qword [RCX], R10
    MOV R10D, R11D
    JMP L10000ed53_28     ; inserted

; Entry 10000ed53; block 31; address 10000eeb1
L10000ed53_31:
    MOV R10D, R10D
    ADD R10, 4
    CMP R8, R10
    JAE L10000ed53_33
    JMP L10000ed53_32     ; inserted

; Entry 10000ed53; block 32; address 10000eebd
L10000ed53_32:
    AND EAX, 4294967291
    JMP L10000ed53_16

; Entry 10000ed53; block 33; address 10000eec2
L10000ed53_33:
    MOV R10D, dword [RDI + R10]
    MOV qword [RCX + 16], R10
    JMP L10000ed53_16     ; inserted

; Entry 10000ed53; block 34; address 10000edc6
L10000ed53_34:
    MOVZX R8D, word [RDI + 2]
    LEA R10, [RSI + -4]
    CMP R8, R10
    JA L10000ed53_8
    JMP L10000ed53_10     ; inserted



; ---------------------
; Function: 0x10000eda8
; ---------------------
; Entry 10000eda8; block 0; address 10000eda8
L10000eda8_0:
    PUSH RBP
    MOV RBP, RSP
    XOR EAX, EAX
    TEST RDI, RDI
    JE L10000eda8_2
    JMP L10000eda8_1     ; inserted

; Entry 10000eda8; block 1; address 10000edb7
L10000eda8_1:
    CMP RSI, 4
    JB L10000eda8_2
    JMP L10000eda8_3     ; inserted

; Entry 10000eda8; block 2; address 10000eee2
L10000eda8_2:
    POP RBP
    RET 

; Entry 10000eda8; block 3; address 10000edc1
L10000eda8_3:
    XOR R9D, R9D
    XOR EAX, EAX
    JMP L10000eda8_28     ; inserted

; Entry 10000eda8; block 4; address 10000edd8
L10000eda8_4:
    MOVZX R10D, word [RDI]
    CMP R10D, 30805
    JE L10000eda8_6
    JMP L10000eda8_5     ; inserted

; Entry 10000eda8; block 5; address 10000ede5
L10000eda8_5:
    MOVZX R10D, R10W
    CMP R10D, 22613
    JE L10000eda8_8
    JMP L10000eda8_7     ; inserted

; Entry 10000eda8; block 6; address 10000ee46
L10000eda8_6:
    MOV R10D, EAX
    AND R10D, 4294967040
    TEST R9D, R9D
    CMOVE EAX, R10D
    MOV R9D, 1
    JMP L10000eda8_10

; Entry 10000eda8; block 7; address 10000edf2
L10000eda8_7:
    CMP R10D, 21589
    JNE L10000eda8_10
    JMP L10000eda8_9     ; inserted

; Entry 10000eda8; block 8; address 10000ee5f
L10000eda8_8:
    TEST R9D, R9D
    JNE L10000eda8_10
    JMP L10000eda8_17     ; inserted

; Entry 10000eda8; block 9; address 10000edff
L10000eda8_9:
    AND EAX, 4294967040
    MOV R9D, 1
    TEST RCX, RCX
    JE L10000eda8_10
    JMP L10000eda8_11     ; inserted

; Entry 10000eda8; block 10; address 10000eeca
L10000eda8_10:
    ADD RDI, R8
    ADD RDI, 4
    ADD R8, 4
    SUB RSI, R8
    CMP RSI, 3
    JA L10000eda8_28
    JMP L10000eda8_2     ; inserted

; Entry 10000eda8; block 11; address 10000ee13
L10000eda8_11:
    TEST R8, R8
    JE L10000eda8_10
    JMP L10000eda8_12     ; inserted

; Entry 10000eda8; block 12; address 10000ee1c
L10000eda8_12:
    MOVZX R10D, byte [RDI + 4]
    OR EAX, R10D
    MOV R9D, 1
    TEST R10B, 1
    JE L10000eda8_14
    JMP L10000eda8_13     ; inserted

; Entry 10000eda8; block 13; address 10000ee30
L10000eda8_13:
    CMP R8D, 5
    JB L10000eda8_16
    JMP L10000eda8_15     ; inserted

; Entry 10000eda8; block 14; address 10000ee84
L10000eda8_14:
    MOV R10D, 1
    JMP L10000eda8_19     ; inserted

; Entry 10000eda8; block 15; address 10000ee36
L10000eda8_15:
    MOV R10D, dword [RDI + 5]
    MOV qword [RCX + 8], R10
    MOV R10D, 5
    JMP L10000eda8_19

; Entry 10000eda8; block 16; address 10000ee81
L10000eda8_16:
    AND EAX, 4294967294
    JMP L10000eda8_14     ; inserted

; Entry 10000eda8; block 17; address 10000ee64
L10000eda8_17:
    CMP R8D, 8
    JB L10000eda8_10
    JMP L10000eda8_18     ; inserted

; Entry 10000eda8; block 18; address 10000ee6a
L10000eda8_18:
    MOV R9D, dword [RDI + 4]
    MOV qword [RCX], R9
    MOV R9D, dword [RDI + 8]
    MOV qword [RCX + 8], R9
    OR EAX, 3
    XOR R9D, R9D
    JMP L10000eda8_10

; Entry 10000eda8; block 19; address 10000ee8a
L10000eda8_19:
    TEST EDX, EDX
    JNE L10000eda8_10
    JMP L10000eda8_20     ; inserted

; Entry 10000eda8; block 20; address 10000ee8e
L10000eda8_20:
    TEST AL, 2
    JE L10000eda8_22
    JMP L10000eda8_21     ; inserted

; Entry 10000eda8; block 21; address 10000ee92
L10000eda8_21:
    MOV R11D, R10D
    ADD R11, 4
    CMP R8, R11
    JAE L10000eda8_24
    JMP L10000eda8_23     ; inserted

; Entry 10000eda8; block 22; address 10000eead
L10000eda8_22:
    TEST AL, 4
    JE L10000eda8_10
    JMP L10000eda8_25     ; inserted

; Entry 10000eda8; block 23; address 10000ee9e
L10000eda8_23:
    AND EAX, 4294967293
    JMP L10000eda8_22

; Entry 10000eda8; block 24; address 10000eea3
L10000eda8_24:
    MOV R10D, dword [RDI + R11]
    MOV qword [RCX], R10
    MOV R10D, R11D
    JMP L10000eda8_22     ; inserted

; Entry 10000eda8; block 25; address 10000eeb1
L10000eda8_25:
    MOV R10D, R10D
    ADD R10, 4
    CMP R8, R10
    JAE L10000eda8_27
    JMP L10000eda8_26     ; inserted

; Entry 10000eda8; block 26; address 10000eebd
L10000eda8_26:
    AND EAX, 4294967291
    JMP L10000eda8_10

; Entry 10000eda8; block 27; address 10000eec2
L10000eda8_27:
    MOV R10D, dword [RDI + R10]
    MOV qword [RCX + 16], R10
    JMP L10000eda8_10     ; inserted

; Entry 10000eda8; block 28; address 10000edc6
L10000eda8_28:
    MOVZX R8D, word [RDI + 2]
    LEA R10, [RSI + -4]
    CMP R8, R10
    JA L10000eda8_2
    JMP L10000eda8_4     ; inserted



; ---------------------
; Function: 0x10000eee4
; ---------------------
; Entry 10000eee4; block 0; address 10000eee4
L10000eee4_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    LEA RAX, [rel L__DATA___common + 616]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L10000eee4_2
    JMP L10000eee4_1     ; inserted

; Entry 10000eee4; block 1; address 10000ef05
L10000eee4_1:
    XOR R14D, R14D
    LEA R13, [rel L__DATA___common + 60]
    LEA R15, [rel L__DATA___data + 4500]
    XOR R12D, R12D
    JMP L10000eee4_19     ; inserted

; Entry 10000eee4; block 2; address 10000f159
L10000eee4_2:
    XOR R14D, R14D
    JMP L10000eee4_22

; Entry 10000eee4; block 3; address 10000ef22
L10000eee4_3:
    CMP dword [RBX + 140], 0
    JE L10000eee4_5
    JMP L10000eee4_4     ; inserted

; Entry 10000eee4; block 4; address 10000ef2f
L10000eee4_4:
    MOV dword [RBX + 136], 1
    MOV RAX, qword [RBX + 112]
    MOVZX ECX, word [RBX + 40]
    CMP byte [RCX + RAX-1], 47
    JNE L10000eee4_7
    JMP L10000eee4_6     ; inserted

; Entry 10000eee4; block 5; address 10000f014
L10000eee4_5:
    MOV RBX, qword [RBX + 152]
    TEST RBX, RBX
    JNE L10000eee4_19
    JMP L10000eee4_20     ; inserted

; Entry 10000eee4; block 6; address 10000ef48
L10000eee4_6:
    INC R12
    JMP L10000eee4_5

; Entry 10000eee4; block 7; address 10000ef50
L10000eee4_7:
    CMP dword [R13], 0
    JE L10000eee4_9
    JMP L10000eee4_8     ; inserted

; Entry 10000eee4; block 8; address 10000ef57
L10000eee4_8:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    MOV RDX, qword [RBX + 80]
    LEA RSI, [rel L__TEXT___cstring_31444]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000eee4_9     ; inserted

; Entry 10000eee4; block 9; address 10000ef73
L10000eee4_9:
    MOV RDI, qword [RBX + 80]
    CALL L10001160a_0
    JMP L10000eee4_10     ; inserted

; Entry 10000eee4; block 10; address 10000ef7c
L10000eee4_10:
    TEST EAX, EAX
    JE L10000eee4_12
    JMP L10000eee4_11     ; inserted

; Entry 10000eee4; block 11; address 10000ef80
L10000eee4_11:
    MOV RSI, qword [RBX + 80]
    LEA RDI, [rel L__TEXT___cstring_31478]
    CALL L1000034f4_0
    JMP L10000eee4_12     ; inserted

; Entry 10000eee4; block 12; address 10000ef90
L10000eee4_12:
    CMP dword [R15], 0
    JNE L10000eee4_5
    JMP L10000eee4_13     ; inserted

; Entry 10000eee4; block 13; address 10000ef96
L10000eee4_13:
    MOV R13, qword [RBX + 80]
    MOV RDI, R13
    MOV ESI, 47
    CALL _strrchr
    JMP L10000eee4_14     ; inserted

; Entry 10000eee4; block 14; address 10000efa7
L10000eee4_14:
    TEST RAX, RAX
    CMOVE RAX, R13
    MOV byte [RAX], R14B
    MOV R13, qword [RBX + 112]
    MOV RDI, R13
    MOV ESI, 47
    CALL _strrchr
    JMP L10000eee4_15     ; inserted

; Entry 10000eee4; block 15; address 10000efc2
L10000eee4_15:
    TEST RAX, RAX
    CMOVE RAX, R13
    MOV byte [RAX], R14B
    MOV R13, qword [RBX + 112]
    MOV RDI, R13
    CALL _strlen
    JMP L10000eee4_16     ; inserted

; Entry 10000eee4; block 16; address 10000efd8
L10000eee4_16:
    MOV word [RBX + 40], AX
    MOV ECX, EAX
    AND ECX, 65535
    JE L10000eee4_18
    JMP L10000eee4_17     ; inserted

; Entry 10000eee4; block 17; address 10000efe6
L10000eee4_17:
    DEC ECX
    MOV byte [R13 + RCX], 47
    MOV RAX, qword [RBX + 112]
    MOVZX ECX, word [RBX + 40]
    LEA EDX, [RCX + 1]
    MOV word [RBX + 40], DX
    MOV byte [RAX + RCX], 0
    MOVZX EAX, word [RBX + 40]
    JMP L10000eee4_18     ; inserted

; Entry 10000eee4; block 18; address 10000f005
L10000eee4_18:
    CMP AX, 1
    SBB R12, 18446744073709551615
    LEA R13, [rel L__DATA___common + 60]
    JMP L10000eee4_5     ; inserted

; Entry 10000eee4; block 19; address 10000ef19
L10000eee4_19:
    CMP dword [RBX + 136], 1
    JE L10000eee4_4
    JMP L10000eee4_3     ; inserted

; Entry 10000eee4; block 20; address 10000f024
L10000eee4_20:
    XOR R14D, R14D
    TEST R12, R12
    JE L10000eee4_22
    JMP L10000eee4_21     ; inserted

; Entry 10000eee4; block 21; address 10000f030
L10000eee4_21:
    SHL R12, 3
    MOV RDI, R12
    CALL _malloc
    JMP L10000eee4_23     ; inserted

; Entry 10000eee4; block 22; address 10000f184
L10000eee4_22:
    MOV EAX, R14D
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000eee4; block 23; address 10000f03c
L10000eee4_23:
    TEST RAX, RAX
    JE L10000eee4_25
    JMP L10000eee4_24     ; inserted

; Entry 10000eee4; block 24; address 10000f045
L10000eee4_24:
    MOV R13, RAX
    LEA RAX, [rel L__DATA___common + 616]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L10000eee4_27
    JMP L10000eee4_26     ; inserted

; Entry 10000eee4; block 25; address 10000f15e
L10000eee4_25:
    MOV R14D, 4
    JMP L10000eee4_22

; Entry 10000eee4; block 26; address 10000f05b
L10000eee4_26:
    XOR R15D, R15D
    JMP L10000eee4_35     ; inserted

; Entry 10000eee4; block 27; address 10000f166
L10000eee4_27:
    LEA RCX, [rel L__TEXT___text + 50022]
    MOV EDX, 8
    MOV RDI, R13
    XOR ESI, ESI
    CALL _qsort
    JMP L10000eee4_39     ; inserted

; Entry 10000eee4; block 28; address 10000f067
L10000eee4_28:
    MOVZX EAX, word [RBX + 40]
    TEST RAX, RAX
    JE L10000eee4_29
    JMP L10000eee4_30     ; inserted

; Entry 10000eee4; block 29; address 10000f09f
L10000eee4_29:
    MOV RBX, qword [RBX + 152]
    TEST RBX, RBX
    JNE L10000eee4_35
    JMP L10000eee4_36     ; inserted

; Entry 10000eee4; block 30; address 10000f070
L10000eee4_30:
    MOV RCX, qword [RBX + 112]
    DEC EAX
    CMP byte [RCX + RAX], 47
    JNE L10000eee4_29
    JMP L10000eee4_31     ; inserted

; Entry 10000eee4; block 31; address 10000f07c
L10000eee4_31:
    TEST R15, R15
    JE L10000eee4_33
    JMP L10000eee4_32     ; inserted

; Entry 10000eee4; block 32; address 10000f081
L10000eee4_32:
    MOV RDI, qword [RBX + 80]
    MOV RAX, qword [R13 + R15 * 8 + -8]
    MOV RSI, qword [RAX + 80]
    CALL _strcmp
    JMP L10000eee4_34     ; inserted

; Entry 10000eee4; block 33; address 10000f097
L10000eee4_33:
    MOV qword [R13 + R15 * 8], RBX
    INC R15
    JMP L10000eee4_29     ; inserted

; Entry 10000eee4; block 34; address 10000f093
L10000eee4_34:
    TEST EAX, EAX
    JE L10000eee4_29
    JMP L10000eee4_33     ; inserted

; Entry 10000eee4; block 35; address 10000f05e
L10000eee4_35:
    CMP dword [RBX + 136], 0
    JE L10000eee4_29
    JMP L10000eee4_28     ; inserted

; Entry 10000eee4; block 36; address 10000f0ab
L10000eee4_36:
    LEA RCX, [rel L__TEXT___text + 50022]
    MOV EDX, 8
    MOV RDI, R13
    MOV RSI, R15
    CALL _qsort
    JMP L10000eee4_37     ; inserted

; Entry 10000eee4; block 37; address 10000f0c2
L10000eee4_37:
    TEST R15, R15
    JE L10000eee4_39
    JMP L10000eee4_38     ; inserted

; Entry 10000eee4; block 38; address 10000f0cb
L10000eee4_38:
    XOR R12D, R12D
    JMP L10000eee4_50     ; inserted

; Entry 10000eee4; block 39; address 10000f17c
L10000eee4_39:
    MOV RDI, R13
    CALL _free
    JMP L10000eee4_22     ; inserted

; Entry 10000eee4; block 40; address 10000f0dc
L10000eee4_40:
    MOV RDI, RBX
    CALL _strlen
    JMP L10000eee4_42     ; inserted

; Entry 10000eee4; block 41; address 10000f14b
L10000eee4_41:
    INC R12
    CMP R15, R12
    JNE L10000eee4_50
    JMP L10000eee4_51     ; inserted

; Entry 10000eee4; block 42; address 10000f0e4
L10000eee4_42:
    CMP byte [RAX + RBX-1], 47
    JNE L10000eee4_44
    JMP L10000eee4_43     ; inserted

; Entry 10000eee4; block 43; address 10000f0eb
L10000eee4_43:
    MOV byte [RBX + RAX-1], 0
    JMP L10000eee4_44     ; inserted

; Entry 10000eee4; block 44; address 10000f0f0
L10000eee4_44:
    TEST R12, R12
    JE L10000eee4_46
    JMP L10000eee4_45     ; inserted

; Entry 10000eee4; block 45; address 10000f0f5
L10000eee4_45:
    MOV RAX, qword [R13 + R12 * 8 + -8]
    MOV RCX, qword [R13 + R12 * 8]
    MOV RDI, qword [RCX + 80]
    MOV RSI, qword [RAX + 80]
    CALL _strcmp
    JMP L10000eee4_47     ; inserted

; Entry 10000eee4; block 46; address 10000f110
L10000eee4_46:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    JE L10000eee4_49
    JMP L10000eee4_48     ; inserted

; Entry 10000eee4; block 47; address 10000f10c
L10000eee4_47:
    TEST EAX, EAX
    JE L10000eee4_41
    JMP L10000eee4_46     ; inserted

; Entry 10000eee4; block 48; address 10000f11c
L10000eee4_48:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    MOV RAX, qword [R13 + R12 * 8]
    MOV RDX, qword [RAX + 80]
    LEA RSI, [rel L__TEXT___cstring_31494]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000eee4_49     ; inserted

; Entry 10000eee4; block 49; address 10000f13d
L10000eee4_49:
    MOV RAX, qword [R13 + R12 * 8]
    MOV RDI, qword [RAX + 80]
    CALL L100016ea3_0
    JMP L10000eee4_41     ; inserted

; Entry 10000eee4; block 50; address 10000f0ce
L10000eee4_50:
    MOV RAX, qword [R13 + R12 * 8]
    MOV RBX, qword [RAX + 80]
    CMP byte [RBX], 0
    JE L10000eee4_41
    JMP L10000eee4_40     ; inserted

; Entry 10000eee4; block 51; address 10000f157
L10000eee4_51:
    JMP L10000eee4_39



; ---------------------
; Function: 0x10000f1b1
; ---------------------
; Entry 10000f1b1; block 0; address 10000f1b1
L10000f1b1_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV R15, RDI
    MOV EAX, dword [RSI]
    MOV dword [RBP + -28], EAX
    CMP AL, 80
    JNE L10000f1b1_2
    JMP L10000f1b1_1     ; inserted

; Entry 10000f1b1; block 1; address 10000f1c7
L10000f1b1_1:
    MOV byte [RBP + -28], 80
    JMP L10000f1b1_2     ; inserted

; Entry 10000f1b1; block 2; address 10000f1cb
L10000f1b1_2:
    CMP byte [RBP + -27], 75
    JNE L10000f1b1_4
    JMP L10000f1b1_3     ; inserted

; Entry 10000f1b1; block 3; address 10000f1d1
L10000f1b1_3:
    MOV byte [RBP + -27], 75
    JMP L10000f1b1_4     ; inserted

; Entry 10000f1b1; block 4; address 10000f1d5
L10000f1b1_4:
    XOR R14D, R14D
    LEA RBX, [rel L__DATA___bss + 33]
    JMP L10000f1b1_14     ; inserted

; Entry 10000f1b1; block 5; address 10000f1e7
L10000f1b1_5:
    TEST EAX, EAX
    JNE L10000f1b1_7
    JMP L10000f1b1_6     ; inserted

; Entry 10000f1b1; block 6; address 10000f1eb
L10000f1b1_6:
    MOV RDI, R15
    CALL L10000f226_0
    JMP L10000f1b1_8     ; inserted

; Entry 10000f1b1; block 7; address 10000f218
L10000f1b1_7:
    MOV EAX, R14D
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000f1b1; block 8; address 10000f1f3
L10000f1b1_8:
    TEST EAX, EAX
    JE L10000f1b1_7
    JMP L10000f1b1_9     ; inserted

; Entry 10000f1b1; block 9; address 10000f1f7
L10000f1b1_9:
    XOR EAX, EAX
    JMP L10000f1b1_12     ; inserted

; Entry 10000f1b1; block 10; address 10000f202
L10000f1b1_10:
    INC RAX
    CMP RAX, 4
    JNE L10000f1b1_12
    JMP L10000f1b1_13     ; inserted

; Entry 10000f1b1; block 11; address 10000f20d
L10000f1b1_11:
    CMP EAX, 4
    JNE L10000f1b1_14
    JMP L10000f1b1_15     ; inserted

; Entry 10000f1b1; block 12; address 10000f1f9
L10000f1b1_12:
    MOV CL, byte [RBP + RAX-1]
    CMP CL, byte [RAX + RBX]
    JNE L10000f1b1_11
    JMP L10000f1b1_10     ; inserted

; Entry 10000f1b1; block 13; address 10000f20b
L10000f1b1_13:
    JMP L10000f1b1_15

; Entry 10000f1b1; block 14; address 10000f1df
L10000f1b1_14:
    MOV RDI, R15
    CALL _feof
    JMP L10000f1b1_5     ; inserted

; Entry 10000f1b1; block 15; address 10000f212
L10000f1b1_15:
    MOV R14D, 1
    JMP L10000f1b1_7     ; inserted



; ---------------------
; Function: 0x10000f226
; ---------------------
; Entry 10000f226; block 0; address 10000f226
L10000f226_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV R15, RDI
    CALL _getc
    JMP L10000f226_1     ; inserted

; Entry 10000f226; block 1; address 10000f238
L10000f226_1:
    MOV EBX, EAX
    XOR R14D, R14D
    JMP L10000f226_12     ; inserted

; Entry 10000f226; block 2; address 10000f242
L10000f226_2:
    CMP EBX, 18446744073709551615
    JNE L10000f226_5
    JMP L10000f226_4     ; inserted

; Entry 10000f226; block 3; address 10000f24c
L10000f226_3:
    MOV byte [rel L__DATA___bss + 33], 80
    MOV RDI, R15
    CALL _getc
    JMP L10000f226_6     ; inserted

; Entry 10000f226; block 4; address 10000f247
L10000f226_4:
    JMP L10000f226_10

; Entry 10000f226; block 5; address 10000f26f
L10000f226_5:
    MOV RDI, R15
    CALL _getc
    JMP L10000f226_11     ; inserted

; Entry 10000f226; block 6; address 10000f25b
L10000f226_6:
    CMP EAX, 75
    JE L10000f226_8
    JMP L10000f226_7     ; inserted

; Entry 10000f226; block 7; address 10000f260
L10000f226_7:
    CMP EAX, 18446744073709551615
    JE L10000f226_10
    JMP L10000f226_9     ; inserted

; Entry 10000f226; block 8; address 10000f27b
L10000f226_8:
    MOV byte [rel L__DATA___bss + 34], 75
    MOV RDI, R15
    CALL _getc
    JMP L10000f226_13     ; inserted

; Entry 10000f226; block 9; address 10000f265
L10000f226_9:
    MOV EDI, EAX
    MOV RSI, R15
    CALL _ungetc
    JMP L10000f226_5     ; inserted

; Entry 10000f226; block 10; address 10000f2df
L10000f226_10:
    MOV EAX, R14D
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000f226; block 11; address 10000f277
L10000f226_11:
    MOV EBX, EAX
    JMP L10000f226_12

; Entry 10000f226; block 12; address 10000f23d
L10000f226_12:
    CMP EBX, 80
    JE L10000f226_3
    JMP L10000f226_2     ; inserted

; Entry 10000f226; block 13; address 10000f28a
L10000f226_13:
    CMP EAX, 80
    JE L10000f226_15
    JMP L10000f226_14     ; inserted

; Entry 10000f226; block 14; address 10000f28f
L10000f226_14:
    MOV EBX, EAX
    CMP EAX, 18446744073709551615
    JE L10000f226_10
    JMP L10000f226_16     ; inserted

; Entry 10000f226; block 15; address 10000f2bc
L10000f226_15:
    MOV EBX, 80
    MOV EDI, 80
    MOV RSI, R15
    CALL _ungetc
    JMP L10000f226_22     ; inserted

; Entry 10000f226; block 16; address 10000f296
L10000f226_16:
    CMP EBX, 15
    JG L10000f226_12
    JMP L10000f226_17     ; inserted

; Entry 10000f226; block 17; address 10000f29b
L10000f226_17:
    MOV byte [rel L__DATA___bss + 35], BL
    MOV RDI, R15
    CALL _getc
    JMP L10000f226_18     ; inserted

; Entry 10000f226; block 18; address 10000f2a9
L10000f226_18:
    CMP EAX, 80
    JE L10000f226_15
    JMP L10000f226_19     ; inserted

; Entry 10000f226; block 19; address 10000f2ae
L10000f226_19:
    MOV EBX, EAX
    CMP EAX, 18446744073709551615
    JE L10000f226_10
    JMP L10000f226_20     ; inserted

; Entry 10000f226; block 20; address 10000f2b5
L10000f226_20:
    CMP EBX, 15
    JG L10000f226_12
    JMP L10000f226_21     ; inserted

; Entry 10000f226; block 21; address 10000f2ba
L10000f226_21:
    MOV byte [rel L__DATA___bss + 36], BL
    MOV R14D, 1
    JMP L10000f226_10     ; inserted

; Entry 10000f226; block 22; address 10000f2ce
L10000f226_22:
    JMP L10000f226_12



; ---------------------
; Function: 0x10000f2ed
; ---------------------
; Entry 10000f2ed; block 0; address 10000f2ed
L10000f2ed_0:
    PUSH RBP
    MOV RBP, RSP
    MOV ECX, dword [RDI]
    MOV dword [RBP + -8], ECX
    MOV EAX, dword [RSI]
    MOV dword [RBP + -4], EAX
    CMP CL, 80
    JNE L10000f2ed_2
    JMP L10000f2ed_1     ; inserted

; Entry 10000f2ed; block 1; address 10000f300
L10000f2ed_1:
    MOV byte [RBP + -8], 80
    JMP L10000f2ed_2     ; inserted

; Entry 10000f2ed; block 2; address 10000f304
L10000f2ed_2:
    CMP byte [RBP + -7], 75
    JNE L10000f2ed_4
    JMP L10000f2ed_3     ; inserted

; Entry 10000f2ed; block 3; address 10000f30a
L10000f2ed_3:
    MOV byte [RBP + -7], 75
    JMP L10000f2ed_4     ; inserted

; Entry 10000f2ed; block 4; address 10000f30e
L10000f2ed_4:
    MOV DL, byte [RBP + -4]
    CMP DL, 80
    JNE L10000f2ed_6
    JMP L10000f2ed_5     ; inserted

; Entry 10000f2ed; block 5; address 10000f316
L10000f2ed_5:
    MOV byte [RBP + -4], 80
    JMP L10000f2ed_6     ; inserted

; Entry 10000f2ed; block 6; address 10000f31a
L10000f2ed_6:
    CMP byte [RBP + -3], 75
    JNE L10000f2ed_8
    JMP L10000f2ed_7     ; inserted

; Entry 10000f2ed; block 7; address 10000f320
L10000f2ed_7:
    MOV byte [RBP + -3], 75
    JMP L10000f2ed_8     ; inserted

; Entry 10000f2ed; block 8; address 10000f324
L10000f2ed_8:
    XOR EAX, EAX
    CMP CL, DL
    JNE L10000f2ed_10
    JMP L10000f2ed_9     ; inserted

; Entry 10000f2ed; block 9; address 10000f32a
L10000f2ed_9:
    XOR EAX, EAX
    JMP L10000f2ed_13     ; inserted

; Entry 10000f2ed; block 10; address 10000f352
L10000f2ed_10:
    POP RBP
    RET 

; Entry 10000f2ed; block 11; address 10000f332
L10000f2ed_11:
    LEA RCX, [RAX + 1]
    MOV DL, byte [RBP + RAX-1]
    CMP DL, byte [RBP + RAX-1]
    MOV RAX, RCX
    JE L10000f2ed_13
    JMP L10000f2ed_14     ; inserted

; Entry 10000f2ed; block 12; address 10000f34d
L10000f2ed_12:
    MOV EAX, 1
    JMP L10000f2ed_10     ; inserted

; Entry 10000f2ed; block 13; address 10000f32c
L10000f2ed_13:
    CMP RAX, 3
    JE L10000f2ed_12
    JMP L10000f2ed_11     ; inserted

; Entry 10000f2ed; block 14; address 10000f343
L10000f2ed_14:
    XOR EAX, EAX
    CMP ECX, 4
    SETE AL
    JMP L10000f2ed_10



; ---------------------
; Function: 0x10000f354
; ---------------------
; Entry 10000f354; block 0; address 10000f354
L10000f354_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R14
    PUSH RBX
    SUB RSP, 16
    MOV RBX, RDI
    MOVZX EAX, word [RDI]
    CMP EAX, 7936
    JB L10000f354_2
    JMP L10000f354_1     ; inserted

; Entry 10000f354; block 1; address 10000f36c
L10000f354_1:
    MOV ECX, EAX
    SHR ECX, 8
    MOVZX EAX, AL
    IMUL R8D, EAX, 205
    SHR R8D, 11
    LEA EDX, [R8 + R8]
    LEA EDX, [RDX + RDX * 4]
    SUB AL, DL
    MOVZX R9D, AL
    MOV dword [RSP], ECX
    LEA R14, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_33178]
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000f354_3     ; inserted

; Entry 10000f354; block 2; address 10000f3bd
L10000f354_2:
    MOVZX EAX, word [RBX + 2]
    CMP RAX, 20
    JA L10000f354_5
    JMP L10000f354_4     ; inserted

; Entry 10000f354; block 3; address 10000f3ae
L10000f354_3:
    MOV RSI, qword [RBX + 128]
    MOV RDI, R14
    CALL L1000034f4_0
    JMP L10000f354_2     ; inserted

; Entry 10000f354; block 4; address 10000f3c7
L10000f354_4:
    MOV ECX, 1051648
    BT RCX, RAX
    JB L10000f354_6
    JMP L10000f354_5     ; inserted

; Entry 10000f354; block 5; address 10000f3d2
L10000f354_5:
    MOVZX ECX, AL
    IMUL R8D, ECX, 205
    SHR R8D, 11
    LEA EDX, [R8 + R8]
    LEA EDX, [RDX + RDX * 4]
    SUB CL, DL
    MOVZX R9D, CL
    SHR EAX, 8
    MOV dword [RSP], EAX
    LEA R14, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_33220]
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000f354_7     ; inserted

; Entry 10000f354; block 6; address 10000f421
L10000f354_6:
    LEA RAX, [rel L__DATA___common + 64]
    CMP dword [RAX], 2
    MOVZX R9D, word [RBX + 4]
    JNE L10000f354_9
    JMP L10000f354_8     ; inserted

; Entry 10000f354; block 7; address 10000f412
L10000f354_7:
    MOV RSI, qword [RBX + 128]
    MOV RDI, R14
    CALL L1000034f4_0
    JMP L10000f354_6     ; inserted

; Entry 10000f354; block 8; address 10000f432
L10000f354_8:
    MOVZX R8D, word [RBX + 58]
    CMP R9W, R8W
    JNE L10000f354_10
    JMP L10000f354_9     ; inserted

; Entry 10000f354; block 9; address 10000f43d
L10000f354_9:
    TEST R9D, 65520
    JE L10000f354_12
    JMP L10000f354_11     ; inserted

; Entry 10000f354; block 10; address 10000f476
L10000f354_10:
    LEA RDI, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_33258]
    MOV EDX, 5105
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000f354_15     ; inserted

; Entry 10000f354; block 11; address 10000f446
L10000f354_11:
    MOV EAX, R9D
    AND EAX, 65295
    CMP EAX, 2048
    JE L10000f354_12
    JMP L10000f354_13     ; inserted

; Entry 10000f354; block 12; address 10000f4a5
L10000f354_12:
    MOVZX R8D, word [RBX + 6]
    CMP R8D, 9
    JB L10000f354_17
    JMP L10000f354_16     ; inserted

; Entry 10000f354; block 13; address 10000f455
L10000f354_13:
    LEA RDI, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_33299]
    MOV EDX, 5105
    XOR ESI, ESI
    MOV R8D, R9D
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000f354_14     ; inserted

; Entry 10000f354; block 14; address 10000f474
L10000f354_14:
    JMP L10000f354_15

; Entry 10000f354; block 15; address 10000f492
L10000f354_15:
    MOV RSI, qword [RBX + 128]
    LEA RDI, [rel L__DATA___common + 1216]
    CALL L1000034f4_0
    JMP L10000f354_12     ; inserted

; Entry 10000f354; block 16; address 10000f4b0
L10000f354_16:
    LEA R14, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_33339]
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000f354_18     ; inserted

; Entry 10000f354; block 17; address 10000f4de
L10000f354_17:
    MOV R8, qword [RBX + 48]
    TEST R8, R8
    JE L10000f354_20
    JMP L10000f354_19     ; inserted

; Entry 10000f354; block 18; address 10000f4cf
L10000f354_18:
    MOV RSI, qword [RBX + 128]
    MOV RDI, R14
    CALL L1000034f4_0
    JMP L10000f354_17     ; inserted

; Entry 10000f354; block 19; address 10000f4e7
L10000f354_19:
    LEA R14, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_33371]
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000f354_21     ; inserted

; Entry 10000f354; block 20; address 10000f515
L10000f354_20:
    MOVZX R8D, word [RBX + 56]
    CMP R8D, 3
    JAE L10000f354_23
    JMP L10000f354_22     ; inserted

; Entry 10000f354; block 21; address 10000f506
L10000f354_21:
    MOV RSI, qword [RBX + 128]
    MOV RDI, R14
    CALL L1000034f4_0
    JMP L10000f354_20     ; inserted

; Entry 10000f354; block 22; address 10000f520
L10000f354_22:
    ADD RSP, 16
    POP RBX
    POP R14
    POP RBP
    RET 

; Entry 10000f354; block 23; address 10000f529
L10000f354_23:
    LEA R14, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_33392]
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10000f354_24     ; inserted

; Entry 10000f354; block 24; address 10000f548
L10000f354_24:
    MOV RSI, qword [RBX + 128]
    MOV RDI, R14
    ADD RSP, 16
    POP RBX
    POP R14
    POP RBP
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    MOV R14, RSI
    MOV R15, RDI
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000f354_26
    JMP L10000f354_25     ; inserted

; Entry 10000f354; block 25; address 100003511
L10000f354_25:
    LEA R12, [rel L__DATA___common + 604]
    CMP dword [R12], 0
    JE L10000f354_28
    JMP L10000f354_27     ; inserted

; Entry 10000f354; block 26; address 100003561
L10000f354_26:
    LEA RBX, [rel L__DATA___common + 240]
    MOV RAX, qword [RBX]
    TEST RAX, RAX
    JE L10000f354_31
    JMP L10000f354_30     ; inserted

; Entry 10000f354; block 27; address 10000351f
L10000f354_27:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RAX]
    MOV EDI, 10
    CALL _fputc
    JMP L10000f354_28     ; inserted

; Entry 10000f354; block 28; address 100003533
L10000f354_28:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RBX]
    LEA RSI, [rel L__TEXT___cstring_4045]
    MOV RDX, R15
    MOV RCX, R14
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000f354_29     ; inserted

; Entry 10000f354; block 29; address 100003551
L10000f354_29:
    MOV dword [R12], 0
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L10000f354_26     ; inserted

; Entry 10000f354; block 30; address 100003570
L10000f354_30:
    LEA R12, [rel L__DATA___common + 608]
    CMP dword [R12], 0
    JE L10000f354_33
    JMP L10000f354_32     ; inserted

; Entry 10000f354; block 31; address 1000035bd
L10000f354_31:
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000f354; block 32; address 10000357e
L10000f354_32:
    MOV EDI, 10
    MOV RSI, RAX
    CALL _fputc
    JMP L10000f354_34     ; inserted

; Entry 10000f354; block 33; address 10000358e
L10000f354_33:
    LEA RSI, [rel L__TEXT___cstring_4045]
    MOV RDI, RAX
    MOV RDX, R15
    MOV RCX, R14
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000f354_35     ; inserted

; Entry 10000f354; block 34; address 10000358b
L10000f354_34:
    MOV RAX, qword [RBX]
    JMP L10000f354_33     ; inserted

; Entry 10000f354; block 35; address 1000035a5
L10000f354_35:
    MOV dword [R12], 0
    MOV RDI, qword [RBX]
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    JMP _fflush



; ---------------------
; Function: 0x10000f55f
; ---------------------
; Entry 10000f55f; block 0; address 10000f55f
L10000f55f_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    MOV EDX, ESI
    MOV R13, RDI
    LEA RAX, [rel L__DATA___common + 76]
    MOV EAX, dword [RAX]
    CMP EAX, 1
    JE L10000f55f_2
    JMP L10000f55f_1     ; inserted

; Entry 10000f55f; block 1; address 10000f580
L10000f55f_1:
    TEST EAX, EAX
    JNE L10000f55f_4
    JMP L10000f55f_3     ; inserted

; Entry 10000f55f; block 2; address 10000f5a7
L10000f55f_2:
    SHR EDX, 1
    LEA R15, [RDX + R13]
    MOV EDI, dword [rel L__DATA___bss + 52]
    MOV RSI, R15
    CALL _read
    JMP L10000f55f_8     ; inserted

; Entry 10000f55f; block 3; address 10000f584
L10000f55f_3:
    MOV EDI, dword [rel L__DATA___bss + 52]
    MOV EDX, EDX
    MOV RSI, R13
    CALL _read
    JMP L10000f55f_5     ; inserted

; Entry 10000f55f; block 4; address 10000f5d1
L10000f55f_4:
    MOV EDI, dword [rel L__DATA___bss + 52]
    DEC EDX
    MOV RSI, R13
    CALL _read
    JMP L10000f55f_12     ; inserted

; Entry 10000f55f; block 5; address 10000f594
L10000f55f_5:
    MOV R14, RAX
    INC EAX
    CMP EAX, 2
    JAE L10000f55f_7
    JMP L10000f55f_6     ; inserted

; Entry 10000f55f; block 6; address 10000f5a2
L10000f55f_6:
    JMP L10000f55f_11

; Entry 10000f55f; block 7; address 10000f707
L10000f55f_7:
    MOV RDI, qword [rel L__DATA___bss + 64]
    MOV EBX, R14D
    MOV RSI, R13
    MOV RDX, RBX
    CALL L100016ee2_0
    JMP L10000f55f_37     ; inserted

; Entry 10000f55f; block 8; address 10000f5bb
L10000f55f_8:
    MOV R12, RAX
    INC EAX
    CMP EAX, 2
    JAE L10000f55f_10
    JMP L10000f55f_9     ; inserted

; Entry 10000f55f; block 9; address 10000f5c9
L10000f55f_9:
    MOV R14D, R12D
    JMP L10000f55f_11

; Entry 10000f55f; block 10; address 10000f67b
L10000f55f_10:
    MOV ECX, dword [rel L__DATA___bss + 48]
    CMP ECX, 18446744073709551615
    JNE L10000f55f_26
    JMP L10000f55f_25     ; inserted

; Entry 10000f55f; block 11; address 10000f74a
L10000f55f_11:
    MOV EAX, R14D
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000f55f; block 12; address 10000f5e1
L10000f55f_12:
    MOV R14, RAX
    INC EAX
    CMP EAX, 2
    JB L10000f55f_11
    JMP L10000f55f_13     ; inserted

; Entry 10000f55f; block 13; address 10000f5ef
L10000f55f_13:
    MOV ECX, dword [rel L__DATA___bss + 48]
    CMP ECX, 18446744073709551615
    JNE L10000f55f_15
    JMP L10000f55f_14     ; inserted

; Entry 10000f55f; block 14; address 10000f5fa
L10000f55f_14:
    MOV RDI, R13
    MOV ESI, R14D
    CALL L100015a39_0
    JMP L10000f55f_16     ; inserted

; Entry 10000f55f; block 15; address 10000f612
L10000f55f_15:
    CMP ECX, 1
    JE L10000f55f_7
    JMP L10000f55f_17     ; inserted

; Entry 10000f55f; block 16; address 10000f605
L10000f55f_16:
    XOR ECX, ECX
    TEST EAX, EAX
    SETE CL
    MOV dword [rel L__DATA___bss + 48], ECX
    JMP L10000f55f_15     ; inserted

; Entry 10000f55f; block 17; address 10000f61b
L10000f55f_17:
    MOV EAX, R14D
    MOV byte [R13 + RAX], 10
    XOR ECX, ECX
    MOV RBX, R13
    MOV ESI, R14D
    JMP L10000f55f_21     ; inserted

; Entry 10000f55f; block 18; address 10000f63b
L10000f55f_18:
    XOR EAX, EAX
    CMP byte [R13 + RCX + 1], 10
    SETE AL
    CMOVNE RBX, RDX
    SUB ESI, EAX
    JMP L10000f55f_20

; Entry 10000f55f; block 19; address 10000f64e
L10000f55f_19:
    MOV RBX, RDX
    JMP L10000f55f_20     ; inserted

; Entry 10000f55f; block 20; address 10000f651
L10000f55f_20:
    INC RCX
    CMP R14D, ECX
    JNE L10000f55f_21
    JMP L10000f55f_22     ; inserted

; Entry 10000f55f; block 21; address 10000f62c
L10000f55f_21:
    MOV AL, byte [R13 + RCX]
    LEA RDX, [RBX + 1]
    MOV byte [RBX], AL
    CMP AL, 13
    JNE L10000f55f_19
    JMP L10000f55f_18     ; inserted

; Entry 10000f55f; block 22; address 10000f659
L10000f55f_22:
    TEST ESI, ESI
    JE L10000f55f_24
    JMP L10000f55f_23     ; inserted

; Entry 10000f55f; block 23; address 10000f661
L10000f55f_23:
    MOV EAX, ESI
    SUB RBX, RAX
    LEA EAX, [RSI + -1]
    CMP byte [RBX + RAX], 26
    CMOVE ESI, EAX
    MOV R13, RBX
    MOV R14D, ESI
    JMP L10000f55f_7

; Entry 10000f55f; block 24; address 10000f6eb
L10000f55f_24:
    MOV EDI, dword [rel L__DATA___bss + 52]
    MOV EDX, 1
    MOV RSI, RBX
    CALL _read
    JMP L10000f55f_36     ; inserted

; Entry 10000f55f; block 25; address 10000f686
L10000f55f_25:
    MOV RDI, R15
    MOV ESI, R12D
    CALL L100015a39_0
    JMP L10000f55f_27     ; inserted

; Entry 10000f55f; block 26; address 10000f69e
L10000f55f_26:
    CMP ECX, 1
    JNE L10000f55f_29
    JMP L10000f55f_28     ; inserted

; Entry 10000f55f; block 27; address 10000f691
L10000f55f_27:
    XOR ECX, ECX
    TEST EAX, EAX
    SETE CL
    MOV dword [rel L__DATA___bss + 48], ECX
    JMP L10000f55f_26     ; inserted

; Entry 10000f55f; block 28; address 10000f6a3
L10000f55f_28:
    MOV EDX, R12D
    MOV RDI, R13
    MOV RSI, R15
    CALL _memcpy
    JMP L10000f55f_30     ; inserted

; Entry 10000f55f; block 29; address 10000f6b6
L10000f55f_29:
    XOR EAX, EAX
    MOV R14D, R12D
    JMP L10000f55f_34     ; inserted

; Entry 10000f55f; block 30; address 10000f6b1
L10000f55f_30:
    MOV R14D, R12D
    JMP L10000f55f_7

; Entry 10000f55f; block 31; address 10000f6c8
L10000f55f_31:
    MOV word [R13], 2573
    ADD R13, 2
    INC R14D
    JMP L10000f55f_33

; Entry 10000f55f; block 32; address 10000f6d8
L10000f55f_32:
    INC R13
    JMP L10000f55f_33     ; inserted

; Entry 10000f55f; block 33; address 10000f6db
L10000f55f_33:
    INC RAX
    CMP R12D, EAX
    JNE L10000f55f_34
    JMP L10000f55f_35     ; inserted

; Entry 10000f55f; block 34; address 10000f6bb
L10000f55f_34:
    MOV CL, byte [R15 + RAX]
    MOV byte [R13], CL
    CMP CL, 10
    JNE L10000f55f_32
    JMP L10000f55f_31     ; inserted

; Entry 10000f55f; block 35; address 10000f6e3
L10000f55f_35:
    MOV EAX, R14D
    SUB R13, RAX
    JMP L10000f55f_7

; Entry 10000f55f; block 36; address 10000f6fe
L10000f55f_36:
    MOV R14D, 1
    MOV R13, RBX
    JMP L10000f55f_7     ; inserted

; Entry 10000f55f; block 37; address 10000f71c
L10000f55f_37:
    MOV qword [rel L__DATA___bss + 64], RAX
    MOV RAX, qword [rel L__DATA___bss + 56]
    ADD RBX, RAX
    MOV qword [rel L__DATA___bss + 56], RBX
    CMP RBX, RAX
    JGE L10000f55f_11
    JMP L10000f55f_38     ; inserted

; Entry 10000f55f; block 38; address 10000f739
L10000f55f_38:
    LEA RSI, [rel L__TEXT___cstring_35934]
    MOV EDI, 6
    CALL L100002e30_0



; ---------------------
; Function: 0x10000f75c
; ---------------------
; Entry 10000f75c; block 0; address 10000f75c
L10000f75c_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH RBX
    PUSH RAX
    MOV RBX, RDI
    CALL _ftello
    JMP L10000f75c_1     ; inserted

; Entry 10000f75c; block 1; address 10000f76a
L10000f75c_1:
    MOV RDI, RBX
    MOV RSI, RAX
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000f75c_2     ; inserted

; Entry 10000f75c; block 2; address 10000f777
L10000f75c_2:
    XOR ECX, ECX
    TEST EAX, EAX
    SETE CL
    MOV EAX, ECX
    ADD RSP, 8
    POP RBX
    POP RBP
    RET 



; ---------------------
; Function: 0x10000f787
; ---------------------
; Entry 10000f787; block 0; address 10000f787
L10000f787_0:
    PUSH RBP
    MOV RBP, RSP
    TEST RDI, RDI
    JE L10000f787_2
    JMP L10000f787_1     ; inserted

; Entry 10000f787; block 1; address 10000f790
L10000f787_1:
    MOV RAX, RDI
    SUB RAX, RSI
    IMUL RAX, RAX, 200
    CQO 
    IDIV RDI
    LEA RCX, [RAX + 1]
    SHR RCX, 63
    ADD RAX, RCX
    INC RAX
    SHR RAX, 1
    JMP L10000f787_3

; Entry 10000f787; block 2; address 10000f7b5
L10000f787_2:
    XOR EAX, EAX
    JMP L10000f787_3     ; inserted

; Entry 10000f787; block 3; address 10000f7b7
L10000f787_3:
    POP RBP
    RET 



; ---------------------
; Function: 0x10000f7b9
; ---------------------
; Entry 10000f7b9; block 0; address 10000f7b9
L10000f7b9_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 104
    MOV R15, RDI
    LEA R14, [RBP + -104]
    MOV qword [R14], 0
    LEA R12, [RBP + -72]
    MOV qword [R12], 18446744073709551613
    MOV RBX, qword [RDI + 112]
    MOV RDI, RBX
    CALL _strlen
    JMP L10000f7b9_1     ; inserted

; Entry 10000f7b9; block 1; address 10000f7f0
L10000f7b9_1:
    MOV word [R15 + 40], AX
    MOVZX EAX, AX
    XOR R13D, R13D
    CMP byte [RAX + RBX-1], 47
    SETE BL
    MOV dword [rel L__DATA___bss + 48], 4294967295
    MOV RDI, qword [R15 + 80]
    LEA RCX, [RBP + -144]
    MOV RSI, R14
    MOV RDX, R12
    CALL L1000169ab_0
    JMP L10000f7b9_2     ; inserted

; Entry 10000f7b9; block 2; address 10000f823
L10000f7b9_2:
    MOV R12D, 18
    TEST RAX, RAX
    JE L10000f7b9_4
    JMP L10000f7b9_3     ; inserted

; Entry 10000f7b9; block 3; address 10000f832
L10000f7b9_3:
    MOV R14, RAX
    MOV RAX, qword [RBP + -72]
    CMP RAX, 18446744073709551613
    JE L10000f7b9_4
    JMP L10000f7b9_5     ; inserted

; Entry 10000f7b9; block 4; address 100010456
L10000f7b9_4:
    MOV EAX, R12D
    ADD RSP, 104
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10000f7b9; block 5; address 10000f843
L10000f7b9_5:
    CMP RAX, 18446744073709551614
    JNE L10000f7b9_7
    JMP L10000f7b9_6     ; inserted

; Entry 10000f7b9; block 6; address 10000f849
L10000f7b9_6:
    MOV qword [RBP + -72], 0
    MOV R13D, 1
    XOR EAX, EAX
    JMP L10000f7b9_8

; Entry 10000f7b9; block 7; address 10000f85b
L10000f7b9_7:
    MOV R13B, BL
    MOV ECX, dword [RBP + -104]
    SHR ECX, 4
    AND ECX, 1
    MOV R12D, 4294967295
    CMP ECX, R13D
    JNE L10000f7b9_4
    JMP L10000f7b9_8     ; inserted

; Entry 10000f7b9; block 8; address 10000f876
L10000f7b9_8:
    LEA RCX, [rel L__DATA___common + 160]
    CMP dword [RCX], 0
    JNE L10000f7b9_10
    JMP L10000f7b9_9     ; inserted

; Entry 10000f7b9; block 9; address 10000f882
L10000f7b9_9:
    LEA RCX, [rel L__DATA___common + 144]
    MOV qword [RCX], 18446744073709551615
    JMP L10000f7b9_10     ; inserted

; Entry 10000f7b9; block 10; address 10000f890
L10000f7b9_10:
    XOR EBX, EBX
    CMP RAX, 18446744073709551613
    CMOVBE RBX, RAX
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    LEA R12, [rel L__DATA___common + 168]
    MOV EAX, dword [R12]
    MOV dword [RBP + -48], R13D
    JE L10000f7b9_12
    JMP L10000f7b9_11     ; inserted

; Entry 10000f7b9; block 11; address 10000f8b5
L10000f7b9_11:
    TEST EAX, EAX
    JE L10000f7b9_12
    JMP L10000f7b9_13     ; inserted

; Entry 10000f7b9; block 12; address 10000f912
L10000f7b9_12:
    LEA RCX, [rel L__DATA___common + 232]
    CMP dword [RCX], 0
    JE L10000f7b9_19
    JMP L10000f7b9_18     ; inserted

; Entry 10000f7b9; block 13; address 10000f8b9
L10000f7b9_13:
    LEA R13, [rel L__DATA___common + 6336]
    MOV RCX, qword [R13]
    LEA RDI, [rel L__TEXT___cstring_11053]
    MOV ESI, 2
    MOV EDX, 1
    CALL _fwrite
    JMP L10000f7b9_14     ; inserted

; Entry 10000f7b9; block 14; address 10000f8da
L10000f7b9_14:
    MOV RDI, qword [R13]
    MOV RSI, RBX
    CALL L100015c88_0
    JMP L10000f7b9_15     ; inserted

; Entry 10000f7b9; block 15; address 10000f8e6
L10000f7b9_15:
    MOV RSI, qword [R13]
    MOV EDI, 41
    CALL _fputc
    JMP L10000f7b9_16     ; inserted

; Entry 10000f7b9; block 16; address 10000f8f4
L10000f7b9_16:
    LEA RAX, [rel L__DATA___common + 604]
    MOV dword [RAX], 1
    MOV RDI, qword [R13]
    MOV R13D, dword [RBP + -48]
    CALL _fflush
    JMP L10000f7b9_17     ; inserted

; Entry 10000f7b9; block 17; address 10000f90e
L10000f7b9_17:
    MOV EAX, dword [R12]
    JMP L10000f7b9_12     ; inserted

; Entry 10000f7b9; block 18; address 10000f91e
L10000f7b9_18:
    TEST EAX, EAX
    JE L10000f7b9_19
    JMP L10000f7b9_20     ; inserted

; Entry 10000f7b9; block 19; address 10000f973
L10000f7b9_19:
    MOV qword [R15 + 32], RBX
    MOV word [R15 + 56], 65535
    MOV qword [R15 + 72], 0
    LEA RAX, [rel L__DATA___data + 4512]
    CMP dword [RAX], 2
    JNE L10000f7b9_25
    JMP L10000f7b9_24     ; inserted

; Entry 10000f7b9; block 20; address 10000f922
L10000f7b9_20:
    LEA R12, [rel L__DATA___common + 240]
    MOV RCX, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_11053]
    MOV ESI, 2
    MOV EDX, 1
    CALL _fwrite
    JMP L10000f7b9_21     ; inserted

; Entry 10000f7b9; block 21; address 10000f943
L10000f7b9_21:
    MOV RDI, qword [R12]
    MOV RSI, RBX
    CALL L100015c88_0
    JMP L10000f7b9_22     ; inserted

; Entry 10000f7b9; block 22; address 10000f94f
L10000f7b9_22:
    MOV RSI, qword [R12]
    MOV EDI, 41
    CALL _fputc
    JMP L10000f7b9_23     ; inserted

; Entry 10000f7b9; block 23; address 10000f95d
L10000f7b9_23:
    LEA RAX, [rel L__DATA___common + 608]
    MOV dword [RAX], 1
    MOV RDI, qword [R12]
    CALL _fflush
    JMP L10000f7b9_19     ; inserted

; Entry 10000f7b9; block 24; address 10000f992
L10000f7b9_24:
    MOVZX EBX, word [R15 + 42]
    TEST RBX, RBX
    JE L10000f7b9_27
    JMP L10000f7b9_26     ; inserted

; Entry 10000f7b9; block 25; address 10000f9dc
L10000f7b9_25:
    XOR EAX, EAX
    MOV qword [RBP + -96], RAX
    XOR EAX, EAX
    MOV qword [RBP + -64], RAX
    XOR R12D, R12D
    JMP L10000f7b9_39

; Entry 10000f7b9; block 26; address 10000f99c
L10000f7b9_26:
    MOV RDI, RBX
    CALL _malloc
    JMP L10000f7b9_28     ; inserted

; Entry 10000f7b9; block 27; address 10000f9ed
L10000f7b9_27:
    XOR EAX, EAX
    MOV qword [RBP + -96], RAX
    XOR R12D, R12D
    JMP L10000f7b9_32     ; inserted

; Entry 10000f7b9; block 28; address 10000f9a4
L10000f7b9_28:
    MOV R12, RAX
    TEST RAX, RAX
    JNE L10000f7b9_30
    JMP L10000f7b9_29     ; inserted

; Entry 10000f7b9; block 29; address 10000f9ac
L10000f7b9_29:
    LEA RSI, [rel L__TEXT___cstring_35379]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 10000f7b9; block 30; address 10000f9c2
L10000f7b9_30:
    MOV RSI, qword [R15 + 88]
    MOV RDI, R12
    MOV RDX, RBX
    CALL _memcpy
    JMP L10000f7b9_31     ; inserted

; Entry 10000f7b9; block 31; address 10000f9d1
L10000f7b9_31:
    MOVZX EAX, word [R15 + 42]
    MOV qword [RBP + -96], RAX
    JMP L10000f7b9_32

; Entry 10000f7b9; block 32; address 10000f9f6
L10000f7b9_32:
    MOVZX EBX, word [R15 + 44]
    TEST RBX, RBX
    JE L10000f7b9_34
    JMP L10000f7b9_33     ; inserted

; Entry 10000f7b9; block 33; address 10000fa00
L10000f7b9_33:
    MOV RDI, RBX
    CALL _malloc
    JMP L10000f7b9_35     ; inserted

; Entry 10000f7b9; block 34; address 10000fa47
L10000f7b9_34:
    XOR EAX, EAX
    MOV qword [RBP + -64], RAX
    JMP L10000f7b9_39     ; inserted

; Entry 10000f7b9; block 35; address 10000fa08
L10000f7b9_35:
    TEST RAX, RAX
    JNE L10000f7b9_37
    JMP L10000f7b9_36     ; inserted

; Entry 10000f7b9; block 36; address 10000fa0d
L10000f7b9_36:
    LEA RSI, [rel L__TEXT___cstring_35379]
    MOV RBX, RAX
    MOV EDI, 4
    CALL L100002e30_0

; Entry 10000f7b9; block 37; address 10000fa29
L10000f7b9_37:
    MOV RSI, qword [R15 + 96]
    MOV qword [RBP + -88], RAX
    MOV RDI, RAX
    MOV RDX, RBX
    CALL _memcpy
    JMP L10000f7b9_38     ; inserted

; Entry 10000f7b9; block 38; address 10000fa3c
L10000f7b9_38:
    MOVZX EAX, word [R15 + 44]
    MOV qword [RBP + -64], RAX
    JMP L10000f7b9_40

; Entry 10000f7b9; block 39; address 10000fa4d
L10000f7b9_39:
    XOR EAX, EAX
    MOV qword [RBP + -88], RAX
    JMP L10000f7b9_40     ; inserted

; Entry 10000f7b9; block 40; address 10000fa53
L10000f7b9_40:
    CMP word [R15 + 42], 0
    JE L10000f7b9_42
    JMP L10000f7b9_41     ; inserted

; Entry 10000f7b9; block 41; address 10000fa5b
L10000f7b9_41:
    MOV RDI, qword [R15 + 88]
    CALL _free
    JMP L10000f7b9_42     ; inserted

; Entry 10000f7b9; block 42; address 10000fa64
L10000f7b9_42:
    MOV qword [RBP + -112], R12
    MOV qword [RBP + -80], R14
    CMP word [R15 + 44], 0
    JE L10000f7b9_44
    JMP L10000f7b9_43     ; inserted

; Entry 10000f7b9; block 43; address 10000fa74
L10000f7b9_43:
    MOV RDI, qword [R15 + 96]
    CMP qword [R15 + 88], RDI
    JE L10000f7b9_44
    JMP L10000f7b9_45     ; inserted

; Entry 10000f7b9; block 44; address 10000fa83
L10000f7b9_44:
    MOV dword [R15 + 42], 0
    XORPS XMM0, XMM0
    MOVUPS oword [R15 + 88], XMM0
    LEA RAX, [rel L__DATA___common + 203056]
    MOV qword [RAX], 0
    LEA RAX, [rel L__DATA___data + 4528]
    MOV R14, qword [RAX]
    MOV R12, qword [R15 + 80]
    TEST R14, R14
    JE L10000f7b9_47
    JMP L10000f7b9_46     ; inserted

; Entry 10000f7b9; block 45; address 10000fa7e
L10000f7b9_45:
    CALL _free
    JMP L10000f7b9_44     ; inserted

; Entry 10000f7b9; block 46; address 10000fab4
L10000f7b9_46:
    MOV RDI, R12
    CALL _strlen
    JMP L10000f7b9_48     ; inserted

; Entry 10000f7b9; block 47; address 10000fb32
L10000f7b9_47:
    LEA RAX, [rel L__DATA___data + 4492]
    MOV R8D, dword [RAX]
    JMP L10000f7b9_61     ; inserted

; Entry 10000f7b9; block 48; address 10000fabc
L10000f7b9_48:
    MOV R13, RAX
    MOV RDI, R14
    CALL _strlen
    JMP L10000f7b9_49     ; inserted

; Entry 10000f7b9; block 49; address 10000fac7
L10000f7b9_49:
    LEA RCX, [R14 + RAX]
    DEC RCX
    XOR R8D, R8D
    CMP RCX, R14
    JAE L10000f7b9_51
    JMP L10000f7b9_50     ; inserted

; Entry 10000f7b9; block 50; address 10000fad6
L10000f7b9_50:
    MOV R13D, dword [RBP + -48]
    JMP L10000f7b9_61

; Entry 10000f7b9; block 51; address 10000fadc
L10000f7b9_51:
    ADD R13, R12
    MOV ESI, 1
    MOV RDX, R13
    JMP L10000f7b9_55     ; inserted

; Entry 10000f7b9; block 52; address 10000faf1
L10000f7b9_52:
    TEST ESI, ESI
    JNE L10000f7b9_50
    JMP L10000f7b9_54     ; inserted

; Entry 10000f7b9; block 53; address 10000fb07
L10000f7b9_53:
    DEC RDX
    XOR EDI, EDI
    CMP RDX, R12
    JB L10000f7b9_58
    JMP L10000f7b9_57     ; inserted

; Entry 10000f7b9; block 54; address 10000faf5
L10000f7b9_54:
    DEC RCX
    MOV RDX, R13
    MOV ESI, 1
    CMP RCX, R14
    JAE L10000f7b9_55
    JMP L10000f7b9_56     ; inserted

; Entry 10000f7b9; block 55; address 10000fae7
L10000f7b9_55:
    MOV BL, byte [RCX]
    MOV EAX, EBX
    AND AL, 254
    CMP AL, 58
    JNE L10000f7b9_53
    JMP L10000f7b9_52     ; inserted

; Entry 10000f7b9; block 56; address 10000fb05
L10000f7b9_56:
    JMP L10000f7b9_50

; Entry 10000f7b9; block 57; address 10000fb11
L10000f7b9_57:
    TEST ESI, ESI
    JE L10000f7b9_58
    JMP L10000f7b9_59     ; inserted

; Entry 10000f7b9; block 58; address 10000fb1b
L10000f7b9_58:
    MOVZX ESI, DIL
    DEC RCX
    CMP RCX, R14
    JAE L10000f7b9_55
    JMP L10000f7b9_60     ; inserted

; Entry 10000f7b9; block 59; address 10000fb15
L10000f7b9_59:
    CMP BL, byte [RDX]
    SETE DIL
    JMP L10000f7b9_58     ; inserted

; Entry 10000f7b9; block 60; address 10000fb27
L10000f7b9_60:
    XOR R8D, R8D
    TEST ESI, ESI
    MOV R13D, dword [RBP + -48]
    JNE L10000f7b9_61
    JMP L10000f7b9_47     ; inserted

; Entry 10000f7b9; block 61; address 10000fb3c
L10000f7b9_61:
    MOV dword [RBP + -44], R8D
    LEA RSI, [rel L__TEXT___cstring_7743]
    MOV RDI, R12
    CALL _strcmp
    JMP L10000f7b9_62     ; inserted

; Entry 10000f7b9; block 62; address 10000fb4f
L10000f7b9_62:
    TEST EAX, EAX
    JE L10000f7b9_64
    JMP L10000f7b9_63     ; inserted

; Entry 10000f7b9; block 63; address 10000fb53
L10000f7b9_63:
    LEA RBX, [rel L__DATA___data + 4512]
    CMP dword [RBX], 0
    MOV R14, qword [RBP + -80]
    JE L10000f7b9_66
    JMP L10000f7b9_65     ; inserted

; Entry 10000f7b9; block 64; address 10000fb99
L10000f7b9_64:
    MOV dword [rel L__DATA___bss + 52], 0
    MOV dword [RBP + -52], 0
    MOV R14, qword [RBP + -80]
    LEA RBX, [rel L__DATA___data + 4512]
    JMP L10000f7b9_70

; Entry 10000f7b9; block 65; address 10000fb63
L10000f7b9_65:
    LEA RSI, [RBP + -144]
    MOV RDI, R15
    CALL L100016d4b_0
    JMP L10000f7b9_66     ; inserted

; Entry 10000f7b9; block 66; address 10000fb72
L10000f7b9_66:
    MOV RDI, qword [RBP + -104]
    CALL L100011577_0
    JMP L10000f7b9_67     ; inserted

; Entry 10000f7b9; block 67; address 10000fb7b
L10000f7b9_67:
    TEST EAX, EAX
    JE L10000f7b9_69
    JMP L10000f7b9_68     ; inserted

; Entry 10000f7b9; block 68; address 10000fb7f
L10000f7b9_68:
    MOV dword [rel L__DATA___bss + 52], 4294967295
    MOV dword [RBP + -44], 0
    MOV dword [RBP + -52], 1
    JMP L10000f7b9_70

; Entry 10000f7b9; block 69; address 10000fbb7
L10000f7b9_69:
    MOV dword [RBP + -52], EAX
    TEST R13D, R13D
    JE L10000f7b9_72
    JMP L10000f7b9_71     ; inserted

; Entry 10000f7b9; block 70; address 10000fbfc
L10000f7b9_70:
    MOV qword [R15 + 8], R14
    CMP dword [RBX], 2
    JNE L10000f7b9_75
    JMP L10000f7b9_74     ; inserted

; Entry 10000f7b9; block 71; address 10000fbbf
L10000f7b9_71:
    MOV dword [rel L__DATA___bss + 52], 4294967295
    MOV dword [RBP + -44], 0
    MOV qword [RBP + -72], 0
    JMP L10000f7b9_70

; Entry 10000f7b9; block 72; address 10000fbda
L10000f7b9_72:
    MOV RDI, qword [R15 + 80]
    XOR ESI, ESI
    XOR EAX, EAX
    CALL _open
    JMP L10000f7b9_73     ; inserted

; Entry 10000f7b9; block 73; address 10000fbe7
L10000f7b9_73:
    MOV dword [rel L__DATA___bss + 52], EAX
    MOV R12D, 18
    CMP EAX, 18446744073709551615
    JE L10000f7b9_4
    JMP L10000f7b9_70     ; inserted

; Entry 10000f7b9; block 74; address 10000fc09
L10000f7b9_74:
    MOVZX R12D, word [RBP + -96]
    MOV RDX, qword [R15 + 88]
    MOVZX ECX, word [R15 + 42]
    LEA R14, [RBP + -116]
    MOV R13, qword [RBP + -112]
    MOV RDI, R13
    MOV ESI, R12D
    MOV R8, R14
    CALL L100009cf1_0
    JMP L10000f7b9_76     ; inserted

; Entry 10000f7b9; block 75; address 10000fc9a
L10000f7b9_75:
    MOV RAX, qword [RBP + -72]
    TEST RAX, RAX
    JE L10000f7b9_85
    JMP L10000f7b9_84     ; inserted

; Entry 10000f7b9; block 76; address 10000fc2d
L10000f7b9_76:
    MOV RBX, RAX
    MOV RDI, qword [R15 + 88]
    CALL _free
    JMP L10000f7b9_77     ; inserted

; Entry 10000f7b9; block 77; address 10000fc39
L10000f7b9_77:
    MOVZX EAX, word [R14]
    MOV word [R15 + 42], AX
    MOV qword [R15 + 88], RBX
    MOVZX ESI, word [RBP + -64]
    MOV RDX, qword [R15 + 96]
    MOVZX ECX, word [R15 + 44]
    MOV RDI, qword [RBP + -88]
    MOV R8, R14
    CALL L100009cf1_0
    JMP L10000f7b9_78     ; inserted

; Entry 10000f7b9; block 78; address 10000fc5f
L10000f7b9_78:
    MOV RBX, RAX
    MOV RDI, qword [R15 + 96]
    CALL _free
    JMP L10000f7b9_79     ; inserted

; Entry 10000f7b9; block 79; address 10000fc6b
L10000f7b9_79:
    MOVZX EAX, word [R14]
    MOV word [R15 + 44], AX
    MOV qword [R15 + 96], RBX
    TEST R12W, R12W
    JE L10000f7b9_81
    JMP L10000f7b9_80     ; inserted

; Entry 10000f7b9; block 80; address 10000fc7e
L10000f7b9_80:
    MOV RDI, R13
    CALL _free
    JMP L10000f7b9_81     ; inserted

; Entry 10000f7b9; block 81; address 10000fc86
L10000f7b9_81:
    CMP word [RBP + -64], 0
    JE L10000f7b9_83
    JMP L10000f7b9_82     ; inserted

; Entry 10000f7b9; block 82; address 10000fc8d
L10000f7b9_82:
    MOV RDI, qword [RBP + -88]
    CALL _free
    JMP L10000f7b9_83     ; inserted

; Entry 10000f7b9; block 83; address 10000fc96
L10000f7b9_83:
    MOV R13D, dword [RBP + -48]
    JMP L10000f7b9_75     ; inserted

; Entry 10000f7b9; block 84; address 10000fca3
L10000f7b9_84:
    MOV EDX, dword [RBP + -44]
    CMP EDX, 18446744073709551615
    JNE L10000f7b9_87
    JMP L10000f7b9_86     ; inserted

; Entry 10000f7b9; block 85; address 10000fcb9
L10000f7b9_85:
    MOV dword [RBP + -44], 0
    XOR EDX, EDX
    JMP L10000f7b9_87     ; inserted

; Entry 10000f7b9; block 86; address 10000fcab
L10000f7b9_86:
    MOV dword [RBP + -44], 8
    MOV EDX, 8
    JMP L10000f7b9_87

; Entry 10000f7b9; block 87; address 10000fcc2
L10000f7b9_87:
    LEA RCX, [rel L__DATA___common + 56]
    MOV ECX, dword [RCX]
    TEST ECX, ECX
    MOV ESI, 798
    MOV EDI, 20
    CMOVNE ESI, EDI
    TEST EDX, EDX
    MOV EBX, 10
    CMOVNE EBX, EDI
    MOV word [R15], SI
    MOV word [R15 + 2], BX
    MOV qword [R15 + 16], 0
    TEST R13D, R13D
    JE L10000f7b9_89
    JMP L10000f7b9_88     ; inserted

; Entry 10000f7b9; block 88; address 10000fcfa
L10000f7b9_88:
    MOV word [R15 + 4], 0
    XOR ESI, ESI
    JMP L10000f7b9_92

; Entry 10000f7b9; block 89; address 10000fd05
L10000f7b9_89:
    MOV word [R15 + 4], 8
    LEA RSI, [rel L__DATA___common + 312]
    CMP qword [RSI], 0
    JE L10000f7b9_91
    JMP L10000f7b9_90     ; inserted

; Entry 10000f7b9; block 90; address 10000fd19
L10000f7b9_90:
    MOV word [R15 + 4], 9
    MOV RSI, qword [R15 + 8]
    SHL RSI, 16
    MOV qword [R15 + 16], RSI
    MOV SI, 9
    JMP L10000f7b9_92

; Entry 10000f7b9; block 91; address 10000fd32
L10000f7b9_91:
    MOV SI, 8
    JMP L10000f7b9_92     ; inserted

; Entry 10000f7b9; block 92; address 10000fd36
L10000f7b9_92:
    XOR EDI, EDI
    TEST EDX, EDX
    MOV word [R15 + 58], SI
    MOV ESI, 0
    CMOVE RSI, RAX
    LEA RBX, [R15 + 56]
    TEST RAX, RAX
    CMOVS RSI, RDI
    MOV word [R15 + 6], DX
    CMP RAX, 18446744073709551615
    CMOVNE RDI, RAX
    MOV qword [R15 + 24], RSI
    MOV qword [R15 + 32], RDI
    MOVZX R13D, word [R15 + 56]
    CMP R13W, 18446744073709551615
    JNE L10000f7b9_94
    JMP L10000f7b9_93     ; inserted

; Entry 10000f7b9; block 93; address 10000fd74
L10000f7b9_93:
    MOV word [RBX], 0
    JMP L10000f7b9_94     ; inserted

; Entry 10000f7b9; block 94; address 10000fd79
L10000f7b9_94:
    MOV RDX, qword [RBP + -104]
    TEST ECX, ECX
    JE L10000f7b9_96
    JMP L10000f7b9_95     ; inserted

; Entry 10000f7b9; block 95; address 10000fd81
L10000f7b9_95:
    MOVZX EAX, DL
    JMP L10000f7b9_97

; Entry 10000f7b9; block 96; address 10000fd86
L10000f7b9_96:
    MOVZX EAX, byte [R15 + 73]
    SHL RAX, 8
    OR RAX, RDX
    JMP L10000f7b9_97     ; inserted

; Entry 10000f7b9; block 97; address 10000fd92
L10000f7b9_97:
    MOV qword [R15 + 72], RAX
    MOV RDI, R15
    XOR ESI, ESI
    CALL L10000d090_0
    JMP L10000f7b9_98     ; inserted

; Entry 10000f7b9; block 98; address 10000fda0
L10000f7b9_98:
    TEST EAX, EAX
    JE L10000f7b9_100
    JMP L10000f7b9_99     ; inserted

; Entry 10000f7b9; block 99; address 10000fda4
L10000f7b9_99:
    MOV R12D, EAX
    MOV EDI, dword [rel L__DATA___bss + 52]
    CMP EDI, 18446744073709551615
    JE L10000f7b9_4
    JMP L10000f7b9_101     ; inserted

; Entry 10000f7b9; block 100; address 10000fdc0
L10000f7b9_100:
    MOV qword [RBP + -64], RBX
    MOVZX EAX, word [R15 + 40]
    MOVZX ECX, word [R15 + 42]
    ADD RCX, RAX
    LEA RAX, [rel L__DATA___common + 544]
    MOV RAX, qword [RAX]
    MOV qword [R15 + 64], RAX
    LEA RAX, [rel L__DATA___common + 472]
    MOV RAX, qword [RAX]
    MOV qword [R15 + 48], RAX
    LEA R12, [rel L__DATA___common + 6344]
    MOV RAX, qword [R12]
    ADD RAX, RCX
    ADD RAX, 30
    MOV qword [R12], RAX
    LEA RAX, [rel L__DATA___common + 312]
    CMP dword [RBP + -48], 0
    JNE L10000f7b9_104
    JMP L10000f7b9_103     ; inserted

; Entry 10000f7b9; block 101; address 10000fdb6
L10000f7b9_101:
    CALL _close
    JMP L10000f7b9_102     ; inserted

; Entry 10000f7b9; block 102; address 10000fdbb
L10000f7b9_102:
    JMP L10000f7b9_4

; Entry 10000f7b9; block 103; address 10000fe10
L10000f7b9_103:
    MOV RDI, qword [RAX]
    TEST RDI, RDI
    JE L10000f7b9_104
    JMP L10000f7b9_105     ; inserted

; Entry 10000f7b9; block 104; address 10000fe2b
L10000f7b9_104:
    LEA R14, [rel L__DATA___common + 392]
    MOV RBX, qword [R14]
    MOV RDI, RBX
    CALL _ferror
    JMP L10000f7b9_107     ; inserted

; Entry 10000f7b9; block 105; address 10000fe18
L10000f7b9_105:
    MOV RSI, qword [R15 + 16]
    CALL L1000160af_0
    JMP L10000f7b9_106     ; inserted

; Entry 10000f7b9; block 106; address 10000fe21
L10000f7b9_106:
    ADD qword [R15 + 24], 12
    ADD qword [R12], 12
    JMP L10000f7b9_104     ; inserted

; Entry 10000f7b9; block 107; address 10000fe3d
L10000f7b9_107:
    TEST EAX, EAX
    JE L10000f7b9_109
    JMP L10000f7b9_108     ; inserted

; Entry 10000f7b9; block 108; address 10000fe41
L10000f7b9_108:
    MOV EDI, dword [rel L__DATA___bss + 52]
    CMP EDI, 18446744073709551615
    JE L10000f7b9_111
    JMP L10000f7b9_110     ; inserted

; Entry 10000f7b9; block 109; address 10000fe65
L10000f7b9_109:
    MOV RDI, RBX
    CALL _ftello
    JMP L10000f7b9_112     ; inserted

; Entry 10000f7b9; block 110; address 10000fe4c
L10000f7b9_110:
    CALL _close
    JMP L10000f7b9_111     ; inserted

; Entry 10000f7b9; block 111; address 10000fe51
L10000f7b9_111:
    LEA RSI, [rel L__TEXT___cstring_35397]
    MOV EDI, 14
    CALL L100002e30_0

; Entry 10000f7b9; block 112; address 10000fe6d
L10000f7b9_112:
    MOV RCX, R14
    MOV R14, RAX
    MOV RBX, qword [RCX]
    MOV RDI, RBX
    CALL _ferror
    JMP L10000f7b9_113     ; inserted

; Entry 10000f7b9; block 113; address 10000fe7e
L10000f7b9_113:
    TEST EAX, EAX
    JE L10000f7b9_115
    JMP L10000f7b9_114     ; inserted

; Entry 10000f7b9; block 114; address 10000fe82
L10000f7b9_114:
    MOV RDI, RBX
    CALL _clearerr
    JMP L10000f7b9_115     ; inserted

; Entry 10000f7b9; block 115; address 10000fe8a
L10000f7b9_115:
    CMP R14, 18446744073709551614
    JG L10000f7b9_117
    JMP L10000f7b9_116     ; inserted

; Entry 10000f7b9; block 116; address 10000fe90
L10000f7b9_116:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV R12, qword [RAX]
    XOR EDI, EDI
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L100015a80_0
    JMP L10000f7b9_118     ; inserted

; Entry 10000f7b9; block 117; address 10000fee3
L10000f7b9_117:
    LEA RBX, [R15 + 4]
    XOR EAX, EAX
    MOV qword [rel L__DATA___bss + 56], RAX
    XOR R14D, R14D
    MOV qword [rel L__DATA___bss + 64], RAX
    CMP dword [RBP + -48], 0
    MOV qword [RBP + -80], RBX
    JNE L10000f7b9_122
    JMP L10000f7b9_121     ; inserted

; Entry 10000f7b9; block 118; address 10000fea5
L10000f7b9_118:
    MOV RBX, RAX
    MOV RDI, R14
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L100015a80_0
    JMP L10000f7b9_119     ; inserted

; Entry 10000f7b9; block 119; address 10000feb4
L10000f7b9_119:
    LEA RSI, [rel L__TEXT___cstring_35426]
    MOV RDI, R12
    LEA R12, [rel L__DATA___common + 6344]
    MOV RDX, RBX
    MOV RCX, RAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000f7b9_120     ; inserted

; Entry 10000f7b9; block 120; address 10000fed2
L10000f7b9_120:
    LEA RSI, [rel L__TEXT___cstring_35440]
    MOV EDI, 6
    CALL L100002e30_0

; Entry 10000f7b9; block 121; address 10000ff08
L10000f7b9_121:
    CMP dword [RBP + -44], 0
    JE L10000f7b9_124
    JMP L10000f7b9_123     ; inserted

; Entry 10000f7b9; block 122; address 100010185
L10000f7b9_122:
    MOV EDI, dword [rel L__DATA___bss + 52]
    MOV EBX, dword [RBP + -48]
    JMP L10000f7b9_252     ; inserted

; Entry 10000f7b9; block 123; address 10000ff12
L10000f7b9_123:
    CMP R13W, 18446744073709551615
    MOV RBX, qword [RBP + -64]
    JNE L10000f7b9_126
    JMP L10000f7b9_125     ; inserted

; Entry 10000f7b9; block 124; address 10000ffae
L10000f7b9_124:
    MOV EDI, 16384
    CALL _malloc
    JMP L10000f7b9_136     ; inserted

; Entry 10000f7b9; block 125; address 10000ff1d
L10000f7b9_125:
    MOV word [RBX], 65535
    JMP L10000f7b9_126     ; inserted

; Entry 10000f7b9; block 126; address 10000ff22
L10000f7b9_126:
    LEA RAX, [RIP + -2506]
    MOV qword [rel L__DATA___data + 3920], RAX
    LEA RDI, [rel L__DATA___bss + 80]
    MOV ESI, 1024
    MOV EDX, 1
    CALL L1000191b1_0
    JMP L10000f7b9_127     ; inserted

; Entry 10000f7b9; block 127; address 10000ff46
L10000f7b9_127:
    LEA RSI, [RBP + -44]
    MOV RDI, RBX
    CALL L100017ab2_0
    JMP L10000f7b9_128     ; inserted

; Entry 10000f7b9; block 128; address 10000ff52
L10000f7b9_128:
    LEA RAX, [rel L__DATA___data + 4496]
    MOV EDI, dword [RAX]
    MOV RSI, qword [RBP + -80]
    CALL L100016ffc_0
    JMP L10000f7b9_129     ; inserted

; Entry 10000f7b9; block 129; address 10000ff64
L10000f7b9_129:
    CALL L100017546_0
    JMP L10000f7b9_130     ; inserted

; Entry 10000f7b9; block 130; address 10000ff69
L10000f7b9_130:
    CMP word [RBX], 0
    MOV R14, RAX
    SETE DL
    LEA RAX, [rel L__DATA___common + 76]
    MOV EAX, dword [RAX]
    TEST EAX, EAX
    SETNE CL
    AND CL, DL
    CMP CL, 1
    JNE L10000f7b9_132
    JMP L10000f7b9_131     ; inserted

; Entry 10000f7b9; block 131; address 10000ff8c
L10000f7b9_131:
    CMP dword [rel L__DATA___bss + 48], 0
    JE L10000f7b9_132
    JMP L10000f7b9_133     ; inserted

; Entry 10000f7b9; block 132; address 100010022
L10000f7b9_132:
    TEST CL, CL
    JE L10000f7b9_122
    JMP L10000f7b9_146     ; inserted

; Entry 10000f7b9; block 133; address 10000ff99
L10000f7b9_133:
    CMP EAX, 1
    JNE L10000f7b9_135
    JMP L10000f7b9_134     ; inserted

; Entry 10000f7b9; block 134; address 10000ffa2
L10000f7b9_134:
    LEA RDI, [rel L__TEXT___cstring_35478]
    JMP L10000f7b9_149

; Entry 10000f7b9; block 135; address 10001003f
L10000f7b9_135:
    LEA RDI, [rel L__TEXT___cstring_35503]
    JMP L10000f7b9_149

; Entry 10000f7b9; block 136; address 10000ffb8
L10000f7b9_136:
    TEST RAX, RAX
    JE L10000f7b9_138
    JMP L10000f7b9_137     ; inserted

; Entry 10000f7b9; block 137; address 10000ffc1
L10000f7b9_137:
    MOV R13, RAX
    CMP dword [RBP + -52], 0
    JE L10000f7b9_140
    JMP L10000f7b9_139     ; inserted

; Entry 10000f7b9; block 138; address 10001004b
L10000f7b9_138:
    MOV R12D, 4
    JMP L10000f7b9_4

; Entry 10000f7b9; block 139; address 10000ffce
L10000f7b9_139:
    MOV RDI, qword [R15 + 80]
    MOV EDX, 16384
    MOV RSI, R13
    CALL _readlink
    JMP L10000f7b9_141     ; inserted

; Entry 10000f7b9; block 140; address 100010056
L10000f7b9_140:
    MOV RDI, R13
    MOV ESI, 16384
    CALL L10000f55f_0
    JMP L10000f7b9_150     ; inserted

; Entry 10000f7b9; block 141; address 10000ffdf
L10000f7b9_141:
    MOV R12, RAX
    MOV RDI, qword [rel L__DATA___bss + 64]
    MOV RSI, R13
    MOV RDX, RAX
    CALL L100016ee2_0
    JMP L10000f7b9_142     ; inserted

; Entry 10000f7b9; block 142; address 10000fff4
L10000f7b9_142:
    MOV qword [rel L__DATA___bss + 64], RAX
    MOV ESI, 1
    MOV RDI, R13
    MOV RDX, R12
    CALL L10001623d_0
    JMP L10000f7b9_143     ; inserted

; Entry 10000f7b9; block 143; address 10001000b
L10000f7b9_143:
    MOV EAX, EAX
    CMP R12, RAX
    JNE L10000f7b9_145
    JMP L10000f7b9_144     ; inserted

; Entry 10000f7b9; block 144; address 100010016
L10000f7b9_144:
    MOV qword [rel L__DATA___bss + 56], R12
    JMP L10000f7b9_174

; Entry 10000f7b9; block 145; address 100010623
L10000f7b9_145:
    MOV RDI, R13
    CALL _free
    JMP L10000f7b9_256     ; inserted

; Entry 10000f7b9; block 146; address 10001002a
L10000f7b9_146:
    CMP EAX, 1
    JNE L10000f7b9_148
    JMP L10000f7b9_147     ; inserted

; Entry 10000f7b9; block 147; address 100010033
L10000f7b9_147:
    LEA RDI, [rel L__TEXT___cstring_35529]
    JMP L10000f7b9_149

; Entry 10000f7b9; block 148; address 100010172
L10000f7b9_148:
    LEA RDI, [rel L__TEXT___cstring_35565]
    JMP L10000f7b9_149     ; inserted

; Entry 10000f7b9; block 149; address 100010179
L10000f7b9_149:
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10000f7b9_122     ; inserted

; Entry 10000f7b9; block 150; address 100010063
L10000f7b9_150:
    TEST EAX, EAX
    JE L10000f7b9_152
    JMP L10000f7b9_151     ; inserted

; Entry 10000f7b9; block 151; address 10001006b
L10000f7b9_151:
    MOV EBX, EAX
    LEA R14, [rel L__DATA___common + 144]
    XOR R12D, R12D
    JMP L10000f7b9_172     ; inserted

; Entry 10000f7b9; block 152; address 1000105c6
L10000f7b9_152:
    XOR R12D, R12D
    JMP L10000f7b9_174     ; inserted

; Entry 10000f7b9; block 153; address 100010086
L10000f7b9_153:
    CMP EAX, EBX
    JNE L10000f7b9_155
    JMP L10000f7b9_154     ; inserted

; Entry 10000f7b9; block 154; address 10001008e
L10000f7b9_154:
    LEA RAX, [rel L__DATA___common + 160]
    CMP dword [RAX], 0
    JNE L10000f7b9_157
    JMP L10000f7b9_156     ; inserted

; Entry 10000f7b9; block 155; address 100010613
L10000f7b9_155:
    MOV EDI, dword [rel L__DATA___bss + 52]
    CMP EDI, 18446744073709551615
    JE L10000f7b9_145
    JMP L10000f7b9_255     ; inserted

; Entry 10000f7b9; block 156; address 10001009e
L10000f7b9_156:
    LEA RAX, [rel L__DATA___common + 136]
    MOV RAX, qword [RAX]
    TEST RAX, RAX
    JLE L10000f7b9_159
    JMP L10000f7b9_158     ; inserted

; Entry 10000f7b9; block 157; address 100010156
L10000f7b9_157:
    MOV RDI, R13
    MOV ESI, 16384
    CALL L10000f55f_0
    JMP L10000f7b9_171     ; inserted

; Entry 10000f7b9; block 158; address 1000100ad
L10000f7b9_158:
    LEA RCX, [rel L__DATA___data + 4508]
    CMP dword [RCX], 0
    MOV RDX, qword [R14]
    JE L10000f7b9_161
    JMP L10000f7b9_160     ; inserted

; Entry 10000f7b9; block 159; address 10001010c
L10000f7b9_159:
    MOV RCX, qword [R14]
    JMP L10000f7b9_165     ; inserted

; Entry 10000f7b9; block 160; address 1000100bc
L10000f7b9_160:
    CMP RDX, 18446744073709551615
    JNE L10000f7b9_161
    JMP L10000f7b9_162     ; inserted

; Entry 10000f7b9; block 161; address 1000100f1
L10000f7b9_161:
    LEA RCX, [RDX + 1]
    SHL RDX, 14
    ADD RDX, 32768
    CMP RAX, RDX
    CMOVLE RCX, R12
    MOV qword [R14], RCX
    JMP L10000f7b9_165

; Entry 10000f7b9; block 162; address 1000100c2
L10000f7b9_162:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RBX]
    MOV EDI, 32
    CALL _putc
    JMP L10000f7b9_163     ; inserted

; Entry 10000f7b9; block 163; address 1000100d6
L10000f7b9_163:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L10000f7b9_164     ; inserted

; Entry 10000f7b9; block 164; address 1000100de
L10000f7b9_164:
    MOV RDX, qword [R14]
    INC RDX
    MOV qword [R14], RDX
    LEA RAX, [rel L__DATA___common + 136]
    MOV RAX, qword [RAX]
    JMP L10000f7b9_161     ; inserted

; Entry 10000f7b9; block 165; address 10001010f
L10000f7b9_165:
    LEA RDX, [rel L__DATA___data + 4508]
    MOV EDX, dword [RDX]
    LEA RSI, [rel L__DATA___common + 60]
    OR EDX, dword [RSI]
    JE L10000f7b9_157
    JMP L10000f7b9_166     ; inserted

; Entry 10000f7b9; block 166; address 100010123
L10000f7b9_166:
    TEST RAX, RAX
    JE L10000f7b9_157
    JMP L10000f7b9_167     ; inserted

; Entry 10000f7b9; block 167; address 100010128
L10000f7b9_167:
    TEST RCX, RCX
    JNE L10000f7b9_157
    JMP L10000f7b9_168     ; inserted

; Entry 10000f7b9; block 168; address 10001012d
L10000f7b9_168:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RBX]
    MOV EDI, 46
    CALL _putc
    JMP L10000f7b9_169     ; inserted

; Entry 10000f7b9; block 169; address 100010141
L10000f7b9_169:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L10000f7b9_170     ; inserted

; Entry 10000f7b9; block 170; address 100010149
L10000f7b9_170:
    LEA RAX, [rel L__DATA___common + 604]
    MOV dword [RAX], 1
    JMP L10000f7b9_157     ; inserted

; Entry 10000f7b9; block 171; address 100010163
L10000f7b9_171:
    MOV EBX, EAX
    TEST EAX, EAX
    JNE L10000f7b9_172
    JMP L10000f7b9_173     ; inserted

; Entry 10000f7b9; block 172; address 100010077
L10000f7b9_172:
    MOV EDX, EBX
    MOV ESI, 1
    MOV RDI, R13
    CALL L10001623d_0
    JMP L10000f7b9_153     ; inserted

; Entry 10000f7b9; block 173; address 10001016d
L10000f7b9_173:
    JMP L10000f7b9_174

; Entry 10000f7b9; block 174; address 1000105c9
L10000f7b9_174:
    MOV RDI, R13
    CALL _free
    JMP L10000f7b9_249     ; inserted

; Entry 10000f7b9; block 175; address 100010193
L10000f7b9_175:
    CALL _close
    JMP L10000f7b9_176     ; inserted

; Entry 10000f7b9; block 176; address 100010198
L10000f7b9_176:
    ADD qword [R12], R14
    LEA RAX, [rel L__DATA___common + 76]
    CMP dword [RAX], 0
    JNE L10000f7b9_178
    JMP L10000f7b9_177     ; inserted

; Entry 10000f7b9; block 177; address 1000101a8
L10000f7b9_177:
    MOV RAX, qword [RBP + -72]
    CMP RAX, 18446744073709551615
    JE L10000f7b9_178
    JMP L10000f7b9_179     ; inserted

; Entry 10000f7b9; block 178; address 1000101cb
L10000f7b9_178:
    LEA RAX, [R15 + 24]
    TEST EBX, EBX
    JE L10000f7b9_182
    JMP L10000f7b9_181     ; inserted

; Entry 10000f7b9; block 179; address 1000101b2
L10000f7b9_179:
    CMP qword [rel L__DATA___bss + 56], RAX
    JE L10000f7b9_178
    JMP L10000f7b9_180     ; inserted

; Entry 10000f7b9; block 180; address 1000101bb
L10000f7b9_180:
    MOV RSI, qword [R15 + 80]
    LEA RDI, [rel L__TEXT___cstring_35661]
    CALL L1000034f4_0
    JMP L10000f7b9_178     ; inserted

; Entry 10000f7b9; block 181; address 1000101d7
L10000f7b9_181:
    MOV word [R15 + 6], 0
    XORPS XMM0, XMM0
    MOVUPS oword [RAX], XMM0
    MOV word [R15 + 2], 10
    AND byte [R15 + 4], 247
    AND byte [R15 + 58], 247
    JMP L10000f7b9_211     ; inserted

; Entry 10000f7b9; block 182; address 1000102d0
L10000f7b9_182:
    MOV RCX, qword [rel L__DATA___bss + 64]
    MOV qword [R15 + 16], RCX
    MOV qword [R15 + 24], R14
    LEA RBX, [rel L__DATA___common + 312]
    CMP qword [RBX], 0
    JE L10000f7b9_199
    JMP L10000f7b9_198     ; inserted

; Entry 10000f7b9; block 183; address 1000101fd
L10000f7b9_183:
    MOV RDI, qword [R15 + 88]
    CMP RDI, qword [R15 + 96]
    JE L10000f7b9_186
    JMP L10000f7b9_185     ; inserted

; Entry 10000f7b9; block 184; address 10001021e
L10000f7b9_184:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L10000f7b9_189
    JMP L10000f7b9_188     ; inserted

; Entry 10000f7b9; block 185; address 100010207
L10000f7b9_185:
    LEA RBX, [R15 + 88]
    CALL _free
    JMP L10000f7b9_187     ; inserted

; Entry 10000f7b9; block 186; address 100010217
L10000f7b9_186:
    MOV word [R15 + 42], 0
    JMP L10000f7b9_184     ; inserted

; Entry 10000f7b9; block 187; address 100010210
L10000f7b9_187:
    MOV qword [RBX], 0
    JMP L10000f7b9_186     ; inserted

; Entry 10000f7b9; block 188; address 10001022e
L10000f7b9_188:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    JE L10000f7b9_191
    JMP L10000f7b9_190     ; inserted

; Entry 10000f7b9; block 189; address 1000103d0
L10000f7b9_189:
    XOR R12D, R12D
    LEA RAX, [rel L__DATA___common + 232]
    CMP dword [RAX], 0
    JE L10000f7b9_4
    JMP L10000f7b9_215     ; inserted

; Entry 10000f7b9; block 190; address 10001023a
L10000f7b9_190:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV R12, qword [RAX]
    MOV RDI, qword [rel L__DATA___bss + 56]
    LEA R15, [rel L__TEXT___cstring_7043]
    XOR ESI, ESI
    MOV RDX, R15
    CALL L100015a80_0
    JMP L10000f7b9_192     ; inserted

; Entry 10000f7b9; block 191; address 100010283
L10000f7b9_191:
    CMP dword [RBP + -44], 8
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RBX]
    JNE L10000f7b9_195
    JMP L10000f7b9_194     ; inserted

; Entry 10000f7b9; block 192; address 10001025c
L10000f7b9_192:
    MOV RBX, RAX
    MOV RDI, R14
    XOR ESI, ESI
    MOV RDX, R15
    CALL L100015a80_0
    JMP L10000f7b9_193     ; inserted

; Entry 10000f7b9; block 193; address 10001026c
L10000f7b9_193:
    LEA RSI, [rel L__TEXT___cstring_35809]
    MOV RDI, R12
    MOV RDX, RBX
    MOV RCX, RAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000f7b9_191     ; inserted

; Entry 10000f7b9; block 194; address 100010297
L10000f7b9_194:
    MOV RCX, qword [rel L__DATA___bss + 56]
    TEST RCX, RCX
    JE L10000f7b9_197
    JMP L10000f7b9_196     ; inserted

; Entry 10000f7b9; block 195; address 10001039b
L10000f7b9_195:
    LEA RSI, [rel L__TEXT___cstring_35845]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000f7b9_212     ; inserted

; Entry 10000f7b9; block 196; address 1000102a7
L10000f7b9_196:
    MOV RAX, RCX
    SUB RAX, R14
    IMUL RAX, RAX, 200
    CQO 
    IDIV RCX
    LEA RCX, [RAX + 1]
    SHR RCX, 63
    LEA RDX, [RAX + RCX]
    INC RDX
    SHR RDX, 1
    JMP L10000f7b9_213

; Entry 10000f7b9; block 197; address 1000103ab
L10000f7b9_197:
    XOR EDX, EDX
    JMP L10000f7b9_213     ; inserted

; Entry 10000f7b9; block 198; address 1000102ec
L10000f7b9_198:
    LEA RCX, [R14 + 12]
    MOV qword [RAX], RCX
    JMP L10000f7b9_199     ; inserted

; Entry 10000f7b9; block 199; address 1000102f3
L10000f7b9_199:
    MOV RAX, qword [rel L__DATA___bss + 56]
    MOV qword [R15 + 32], RAX
    LEA RAX, [rel L__DATA___common + 280]
    CMP dword [RAX], 0
    JNE L10000f7b9_201
    JMP L10000f7b9_200     ; inserted

; Entry 10000f7b9; block 200; address 10001030a
L10000f7b9_200:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    MOV RSI, qword [R15 + 64]
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000f7b9_202     ; inserted

; Entry 10000f7b9; block 201; address 100010327
L10000f7b9_201:
    MOV EAX, dword [RBP + -44]
    CMP word [R15 + 6], AX
    JE L10000f7b9_205
    JMP L10000f7b9_204     ; inserted

; Entry 10000f7b9; block 202; address 10001031f
L10000f7b9_202:
    TEST EAX, EAX
    JE L10000f7b9_203
    JMP L10000f7b9_201     ; inserted

; Entry 10000f7b9; block 203; address 100010468
L10000f7b9_203:
    MOV RCX, RBX
    LEA RBX, [rel L__DATA___common + 592]
    LEA RAX, [R14 + 12]
    CMP qword [RCX], 0
    CMOVE RAX, R14
    CMP qword [RBX], RAX
    JE L10000f7b9_224
    JMP L10000f7b9_223     ; inserted

; Entry 10000f7b9; block 204; address 100010331
L10000f7b9_204:
    LEA RDI, [rel L__TEXT___cstring_35695]
    CALL L1000032ef_0

; Entry 10000f7b9; block 205; address 100010340
L10000f7b9_205:
    MOV RBX, R12
    TEST EAX, EAX
    JNE L10000f7b9_207
    JMP L10000f7b9_206     ; inserted

; Entry 10000f7b9; block 206; address 100010347
L10000f7b9_206:
    CMP qword [RBP + -72], 0
    JNS L10000f7b9_207
    JMP L10000f7b9_208     ; inserted

; Entry 10000f7b9; block 207; address 10001035f
L10000f7b9_207:
    MOV RDI, R15
    CALL L10000d7cf_0
    JMP L10000f7b9_209     ; inserted

; Entry 10000f7b9; block 208; address 10001034e
L10000f7b9_208:
    LEA RSI, [rel L__TEXT___cstring_35716]
    MOV EDI, 16
    CALL L100002e30_0

; Entry 10000f7b9; block 209; address 100010367
L10000f7b9_209:
    MOV R12D, EAX
    TEST EAX, EAX
    JNE L10000f7b9_4
    JMP L10000f7b9_210     ; inserted

; Entry 10000f7b9; block 210; address 100010372
L10000f7b9_210:
    LEA RAX, [rel L__DATA___common + 304]
    XOR ECX, ECX
    CMP dword [RAX], 0
    SETNE CL
    MOV RAX, qword [RBX]
    LEA RAX, [RAX + RCX * 8 + 16]
    MOV qword [RBX], RAX
    MOVZX EAX, word [R15 + 58]
    MOV word [R15 + 4], AX
    JMP L10000f7b9_211

; Entry 10000f7b9; block 211; address 1000101f5
L10000f7b9_211:
    CMP word [R15 + 42], 0
    JE L10000f7b9_184
    JMP L10000f7b9_183     ; inserted

; Entry 10000f7b9; block 212; address 1000103a9
L10000f7b9_212:
    JMP L10000f7b9_214

; Entry 10000f7b9; block 213; address 1000103ad
L10000f7b9_213:
    LEA RSI, [rel L__TEXT___cstring_35827]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000f7b9_214     ; inserted

; Entry 10000f7b9; block 214; address 1000103bb
L10000f7b9_214:
    LEA RAX, [rel L__DATA___common + 604]
    MOV dword [RAX], 0
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L10000f7b9_189     ; inserted

; Entry 10000f7b9; block 215; address 1000103df
L10000f7b9_215:
    CMP dword [RBP + -44], 8
    LEA RBX, [rel L__DATA___common + 240]
    MOV RDI, qword [RBX]
    JNE L10000f7b9_217
    JMP L10000f7b9_216     ; inserted

; Entry 10000f7b9; block 216; address 1000103ef
L10000f7b9_216:
    MOV RCX, qword [rel L__DATA___bss + 56]
    TEST RCX, RCX
    JE L10000f7b9_219
    JMP L10000f7b9_218     ; inserted

; Entry 10000f7b9; block 217; address 100010421
L10000f7b9_217:
    LEA RSI, [rel L__TEXT___cstring_35845]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000f7b9_220     ; inserted

; Entry 10000f7b9; block 218; address 1000103fb
L10000f7b9_218:
    MOV RAX, RCX
    SUB RAX, R14
    IMUL RAX, RAX, 200
    CQO 
    IDIV RCX
    LEA RCX, [RAX + 1]
    SHR RCX, 63
    LEA RDX, [RAX + RCX]
    INC RDX
    SHR RDX, 1
    JMP L10000f7b9_221

; Entry 10000f7b9; block 219; address 100010431
L10000f7b9_219:
    XOR EDX, EDX
    JMP L10000f7b9_221     ; inserted

; Entry 10000f7b9; block 220; address 10001042f
L10000f7b9_220:
    JMP L10000f7b9_222

; Entry 10000f7b9; block 221; address 100010433
L10000f7b9_221:
    LEA RSI, [rel L__TEXT___cstring_35827]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000f7b9_222     ; inserted

; Entry 10000f7b9; block 222; address 100010441
L10000f7b9_222:
    LEA RAX, [rel L__DATA___common + 608]
    MOV dword [RAX], 0
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L10000f7b9_4     ; inserted

; Entry 10000f7b9; block 223; address 100010483
L10000f7b9_223:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV R12, qword [RAX]
    MOV RDI, R14
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L100015a80_0
    JMP L10000f7b9_225     ; inserted

; Entry 10000f7b9; block 224; address 1000104d2
L10000f7b9_224:
    MOV EAX, dword [RBP + -44]
    MOV word [R15 + 6], AX
    TEST EAX, EAX
    JE L10000f7b9_229
    JMP L10000f7b9_228     ; inserted

; Entry 10000f7b9; block 225; address 100010499
L10000f7b9_225:
    MOV R13, RAX
    MOV RDI, qword [RBX]
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L100015a80_0
    JMP L10000f7b9_226     ; inserted

; Entry 10000f7b9; block 226; address 1000104a8
L10000f7b9_226:
    LEA RSI, [rel L__TEXT___cstring_35765]
    MOV RDI, R12
    LEA R12, [rel L__DATA___common + 6344]
    MOV RDX, R13
    MOV RCX, RAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10000f7b9_227     ; inserted

; Entry 10000f7b9; block 227; address 1000104c6
L10000f7b9_227:
    LEA RDI, [rel L__TEXT___cstring_35783]
    CALL L1000032ef_0

; Entry 10000f7b9; block 228; address 1000104de
L10000f7b9_228:
    CMP EAX, 8
    JNE L10000f7b9_231
    JMP L10000f7b9_230     ; inserted

; Entry 10000f7b9; block 229; address 1000104e9
L10000f7b9_229:
    MOV AX, 10
    JMP L10000f7b9_232     ; inserted

; Entry 10000f7b9; block 230; address 1000104e3
L10000f7b9_230:
    MOV AX, 20
    JMP L10000f7b9_232

; Entry 10000f7b9; block 231; address 1000104f2
L10000f7b9_231:
    MOV R13, R12
    MOV RCX, qword [RBP + -80]
    MOVZX EAX, word [RCX]
    TEST AL, 1
    JNE L10000f7b9_234
    JMP L10000f7b9_233     ; inserted

; Entry 10000f7b9; block 232; address 1000104ed
L10000f7b9_232:
    MOV word [R15 + 2], AX
    JMP L10000f7b9_231     ; inserted

; Entry 10000f7b9; block 233; address 100010500
L10000f7b9_233:
    AND EAX, 65527
    MOV RBX, RCX
    MOV word [RCX], AX
    JMP L10000f7b9_235

; Entry 10000f7b9; block 234; address 10001050d
L10000f7b9_234:
    MOV RBX, RCX
    JMP L10000f7b9_235     ; inserted

; Entry 10000f7b9; block 235; address 100010510
L10000f7b9_235:
    MOV word [R15 + 58], AX
    LEA RAX, [rel L__DATA___common + 564]
    CMP dword [RAX], 1
    JNE L10000f7b9_237
    JMP L10000f7b9_236     ; inserted

; Entry 10000f7b9; block 236; address 100010521
L10000f7b9_236:
    LEA RAX, [rel L__DATA___common + 536]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 392]
    CMP RDI, qword [RAX]
    JE L10000f7b9_237
    JMP L10000f7b9_238     ; inserted

; Entry 10000f7b9; block 237; address 100010550
L10000f7b9_237:
    MOV RDI, R15
    MOV ESI, 1
    CALL L10000d090_0
    JMP L10000f7b9_240     ; inserted

; Entry 10000f7b9; block 238; address 100010537
L10000f7b9_238:
    MOV RSI, qword [R15 + 64]
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000f7b9_239     ; inserted

; Entry 10000f7b9; block 239; address 100010542
L10000f7b9_239:
    MOV R12D, 11
    TEST EAX, EAX
    JNE L10000f7b9_4
    JMP L10000f7b9_237     ; inserted

; Entry 10000f7b9; block 240; address 10001055d
L10000f7b9_240:
    MOV R12D, EAX
    TEST EAX, EAX
    JNE L10000f7b9_4
    JMP L10000f7b9_241     ; inserted

; Entry 10000f7b9; block 241; address 100010568
L10000f7b9_241:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 552]
    MOV RSI, qword [RAX]
    XOR EDX, EDX
    CALL _fseeko
    JMP L10000f7b9_242     ; inserted

; Entry 10000f7b9; block 242; address 100010583
L10000f7b9_242:
    MOV R12D, 11
    TEST EAX, EAX
    JNE L10000f7b9_4
    JMP L10000f7b9_243     ; inserted

; Entry 10000f7b9; block 243; address 100010591
L10000f7b9_243:
    TEST byte [RBX], 1
    JE L10000f7b9_211
    JMP L10000f7b9_244     ; inserted

; Entry 10000f7b9; block 244; address 10001059a
L10000f7b9_244:
    MOV RDI, R15
    CALL L10000d7cf_0
    JMP L10000f7b9_245     ; inserted

; Entry 10000f7b9; block 245; address 1000105a2
L10000f7b9_245:
    MOV R12D, EAX
    TEST EAX, EAX
    JNE L10000f7b9_4
    JMP L10000f7b9_246     ; inserted

; Entry 10000f7b9; block 246; address 1000105ad
L10000f7b9_246:
    LEA RAX, [rel L__DATA___common + 304]
    CMP dword [RAX], 0
    MOV RBX, R13
    MOV RAX, qword [R13]
    JE L10000f7b9_248
    JMP L10000f7b9_247     ; inserted

; Entry 10000f7b9; block 247; address 1000105c0
L10000f7b9_247:
    ADD RAX, 24
    JMP L10000f7b9_257

; Entry 10000f7b9; block 248; address 100010636
L10000f7b9_248:
    ADD RAX, 16
    JMP L10000f7b9_257     ; inserted

; Entry 10000f7b9; block 249; address 1000105d1
L10000f7b9_249:
    MOV R14, qword [rel L__DATA___bss + 56]
    MOV EDI, dword [rel L__DATA___bss + 52]
    CMP R12, 18446744073709551615
    JNE L10000f7b9_251
    JMP L10000f7b9_250     ; inserted

; Entry 10000f7b9; block 250; address 1000105e4
L10000f7b9_250:
    CMP EDI, 18446744073709551615
    MOV EBX, dword [RBP + -48]
    LEA R12, [rel L__DATA___common + 6344]
    JE L10000f7b9_252
    JMP L10000f7b9_253     ; inserted

; Entry 10000f7b9; block 251; address 100010604
L10000f7b9_251:
    MOV EBX, dword [RBP + -48]
    LEA R12, [rel L__DATA___common + 6344]
    JMP L10000f7b9_252

; Entry 10000f7b9; block 252; address 10001018e
L10000f7b9_252:
    CMP EDI, 18446744073709551615
    JE L10000f7b9_176
    JMP L10000f7b9_175     ; inserted

; Entry 10000f7b9; block 253; address 1000105f7
L10000f7b9_253:
    MOV RDI, R15
    CALL L100019610_0
    JMP L10000f7b9_254     ; inserted

; Entry 10000f7b9; block 254; address 1000105ff
L10000f7b9_254:
    JMP L10000f7b9_122

; Entry 10000f7b9; block 255; address 10001061e
L10000f7b9_255:
    CALL _close
    JMP L10000f7b9_145     ; inserted

; Entry 10000f7b9; block 256; address 10001062b
L10000f7b9_256:
    MOV R12D, 10
    JMP L10000f7b9_4

; Entry 10000f7b9; block 257; address 10001063a
L10000f7b9_257:
    MOV qword [RBX], RAX
    JMP L10000f7b9_211



; ---------------------
; Function: 0x100010642
; ---------------------
; Entry 100010642; block 0; address 100010642
L100010642_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV RBX, RSI
    MOV R14, RDI
    LEA R15, [rel L__DATA___common + 392]
    CMP qword [R15], 0
    JNE L100010642_2
    JMP L100010642_1     ; inserted

; Entry 100010642; block 1; address 10001065f
L100010642_1:
    LEA RDI, [rel L__TEXT___cstring_35860]
    CALL L1000032ef_0

; Entry 100010642; block 2; address 10001066b
L100010642_2:
    MOV EDX, dword [RBX]
    TEST RDX, RDX
    JE L100010642_4
    JMP L100010642_3     ; inserted

; Entry 100010642; block 3; address 100010672
L100010642_3:
    MOV ESI, 1
    MOV RDI, R14
    CALL L10001623d_0
    JMP L100010642_5     ; inserted

; Entry 100010642; block 4; address 10001069c
L100010642_4:
    MOV dword [RBX], 0
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100010642; block 5; address 10001067f
L100010642_5:
    MOV RDI, qword [R15]
    CALL _ferror
    JMP L100010642_6     ; inserted

; Entry 100010642; block 6; address 100010687
L100010642_6:
    TEST EAX, EAX
    JE L100010642_4
    JMP L100010642_7     ; inserted

; Entry 100010642; block 7; address 10001068b
L100010642_7:
    LEA RSI, [rel L__TEXT___cstring_35910]
    MOV EDI, 14
    CALL L100002e30_0



; ---------------------
; Function: 0x1000106ad
; ---------------------
; Entry 1000106ad; block 0; address 1000106ad
L1000106ad_0:
    PUSH RBP
    MOV RBP, RSP
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    POP RBP
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    TEST RDI, RDI
    JE L1000106ad_2
    JMP L1000106ad_1     ; inserted

; Entry 1000106ad; block 1; address 100014c8f
L1000106ad_1:
    MOV RBX, RDI
    MOV RSI, 18446744073709551615
    MOV EDX, 1
    CALL _fseeko
    JMP L1000106ad_3     ; inserted

; Entry 1000106ad; block 2; address 100014ce8
L1000106ad_2:
    MOV R14D, 1
    JMP L1000106ad_5     ; inserted

; Entry 1000106ad; block 3; address 100014ca3
L1000106ad_3:
    XOR R14D, R14D
    TEST EAX, EAX
    JNE L1000106ad_5
    JMP L1000106ad_4     ; inserted

; Entry 1000106ad; block 4; address 100014caa
L1000106ad_4:
    MOV RDI, RBX
    CALL _ftello
    JMP L1000106ad_6     ; inserted

; Entry 1000106ad; block 5; address 100014cee
L1000106ad_5:
    MOV EAX, R14D
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000106ad; block 6; address 100014cb2
L1000106ad_6:
    CMP RAX, 18446744073709551615
    JE L1000106ad_5
    JMP L1000106ad_7     ; inserted

; Entry 1000106ad; block 7; address 100014cb8
L1000106ad_7:
    MOV R15, RAX
    MOV ESI, 1
    MOV RDI, RBX
    MOV EDX, 1
    CALL _fseeko
    JMP L1000106ad_8     ; inserted

; Entry 1000106ad; block 8; address 100014ccd
L1000106ad_8:
    TEST EAX, EAX
    JNE L1000106ad_5
    JMP L1000106ad_9     ; inserted

; Entry 1000106ad; block 9; address 100014cd1
L1000106ad_9:
    MOV RDI, RBX
    CALL _ftello
    JMP L1000106ad_10     ; inserted

; Entry 1000106ad; block 10; address 100014cd9
L1000106ad_10:
    INC R15
    XOR R14D, R14D
    CMP RAX, R15
    SETE R14B
    JMP L1000106ad_5



; ---------------------
; Function: 0x1000106d0
; ---------------------
; Entry 1000106d0; block 0; address 1000106d0
L1000106d0_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    MOV EAX, 9024
    CALL L100009bb0_0
    JMP L1000106d0_1     ; inserted

; Entry 1000106d0; block 1; address 1000106e5
L1000106d0_1:
    SUB RSP, RAX
    MOV RBX, RDI
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -40], RAX
    JMP L1000106d0_3     ; inserted

; Entry 1000106d0; block 2; address 100010701
L1000106d0_2:
    CMP EAX, 10
    JE L1000106d0_3
    JMP L1000106d0_4     ; inserted

; Entry 1000106d0; block 3; address 1000106f9
L1000106d0_3:
    MOV RDI, RBX
    CALL _getc
    JMP L1000106d0_2     ; inserted

; Entry 1000106d0; block 4; address 100010706
L1000106d0_4:
    CMP EAX, 13
    JE L1000106d0_3
    JMP L1000106d0_5     ; inserted

; Entry 1000106d0; block 5; address 10001070b
L1000106d0_5:
    CMP EAX, 18446744073709551615
    JE L1000106d0_7
    JMP L1000106d0_6     ; inserted

; Entry 1000106d0; block 6; address 100010710
L1000106d0_6:
    XOR R14D, R14D
    MOV R12D, 18433
    XOR R15D, R15D
    JMP L1000106d0_11     ; inserted

; Entry 1000106d0; block 7; address 10001077e
L1000106d0_7:
    XOR R14D, R14D
    JMP L1000106d0_9     ; inserted

; Entry 1000106d0; block 8; address 100010725
L1000106d0_8:
    MOV byte [RBP + R15-1], AL
    MOV RDI, RBX
    CALL _getc
    JMP L1000106d0_10     ; inserted

; Entry 1000106d0; block 9; address 100010781
L1000106d0_9:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -40]
    JNE L1000106d0_19
    JMP L1000106d0_18     ; inserted

; Entry 1000106d0; block 10; address 100010735
L1000106d0_10:
    INC R15
    MOV ECX, EAX
    INC ECX
    CMP ECX, 14
    JA L1000106d0_11
    JMP L1000106d0_12     ; inserted

; Entry 1000106d0; block 11; address 10001071c
L1000106d0_11:
    CMP R15, 8999
    JG L1000106d0_9
    JMP L1000106d0_8     ; inserted

; Entry 1000106d0; block 12; address 100010741
L1000106d0_12:
    BT R12D, ECX
    JAE L1000106d0_11
    JMP L1000106d0_13     ; inserted

; Entry 1000106d0; block 13; address 100010747
L1000106d0_13:
    MOV byte [RBP + R15-1], 0
    LEA RDI, [RBP + -9056]
    CALL _strlen
    JMP L1000106d0_14     ; inserted

; Entry 1000106d0; block 14; address 10001075c
L1000106d0_14:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L1000106d0_15     ; inserted

; Entry 1000106d0; block 15; address 100010765
L1000106d0_15:
    TEST RAX, RAX
    JE L1000106d0_7
    JMP L1000106d0_16     ; inserted

; Entry 1000106d0; block 16; address 10001076a
L1000106d0_16:
    MOV R14, RAX
    LEA RSI, [RBP + -9056]
    MOV RDI, RAX
    CALL _strcpy
    JMP L1000106d0_17     ; inserted

; Entry 1000106d0; block 17; address 10001077c
L1000106d0_17:
    JMP L1000106d0_9

; Entry 1000106d0; block 18; address 100010791
L1000106d0_18:
    MOV RAX, R14
    ADD RSP, 9024
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000106d0; block 19; address 1000107a4
L1000106d0_19:
    CALL ___stack_chk_fail



; ---------------------
; Function: 0x1000107a9
; ---------------------
; Entry 1000107a9; block 0; address 1000107a9
L1000107a9_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R14
    PUSH RBX
    MOV RBX, RDI
    MOV RAX, qword [RDI + 48]
    MOV R14, qword [RDI + 56]
    MOV qword [RAX], R14
    TEST R14, R14
    JE L1000107a9_2
    JMP L1000107a9_1     ; inserted

; Entry 1000107a9; block 1; address 1000107c3
L1000107a9_1:
    MOV RAX, qword [RBX + 48]
    MOV qword [R14 + 48], RAX
    JMP L1000107a9_2     ; inserted

; Entry 1000107a9; block 2; address 1000107cb
L1000107a9_2:
    MOV RDI, qword [RBX]
    TEST RDI, RDI
    JE L1000107a9_4
    JMP L1000107a9_3     ; inserted

; Entry 1000107a9; block 3; address 1000107d3
L1000107a9_3:
    CALL _free
    JMP L1000107a9_4     ; inserted

; Entry 1000107a9; block 4; address 1000107d8
L1000107a9_4:
    MOV RDI, qword [RBX + 16]
    TEST RDI, RDI
    JE L1000107a9_6
    JMP L1000107a9_5     ; inserted

; Entry 1000107a9; block 5; address 1000107e1
L1000107a9_5:
    CALL _free
    JMP L1000107a9_6     ; inserted

; Entry 1000107a9; block 6; address 1000107e6
L1000107a9_6:
    MOV RDI, qword [RBX + 8]
    TEST RDI, RDI
    JE L1000107a9_8
    JMP L1000107a9_7     ; inserted

; Entry 1000107a9; block 7; address 1000107ef
L1000107a9_7:
    CALL _free
    JMP L1000107a9_8     ; inserted

; Entry 1000107a9; block 8; address 1000107f4
L1000107a9_8:
    MOV RDI, RBX
    CALL _free
    JMP L1000107a9_9     ; inserted

; Entry 1000107a9; block 9; address 1000107fc
L1000107a9_9:
    LEA RAX, [rel L__DATA___common + 6328]
    DEC qword [RAX]
    MOV RAX, R14
    POP RBX
    POP R14
    POP RBP
    RET 



; ---------------------
; Function: 0x10001080e
; ---------------------
; Entry 10001080e; block 0; address 10001080e
L10001080e_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH RBX
    PUSH RAX
    MOV RBX, RDI
    CALL _strrchr
    JMP L10001080e_1     ; inserted

; Entry 10001080e; block 1; address 10001081c
L10001080e_1:
    LEA RCX, [RAX + 1]
    TEST RAX, RAX
    CMOVE RCX, RBX
    MOV RAX, RCX
    ADD RSP, 8
    POP RBX
    POP RBP
    RET 



; ---------------------
; Function: 0x100010831
; ---------------------
; Entry 100010831; block 0; address 100010831
L100010831_0:
    PUSH RBP
    MOV RBP, RSP
    MOV RAX, RDI
    MOV SIL, byte [RDI]
    MOV R10, RDI
    TEST SIL, SIL
    JE L100010831_2
    JMP L100010831_1     ; inserted

; Entry 100010831; block 1; address 100010847
L100010831_1:
    LEA RDX, [RAX + 1]
    XOR R9D, R9D
    MOV R8, 2882303765342323717
    MOV R10, RAX
    JMP L100010831_8     ; inserted

; Entry 100010831; block 2; address 1000108ed
L100010831_2:
    MOV byte [R10], 0
    POP RBP
    RET 

; Entry 100010831; block 3; address 100010868
L100010831_3:
    LEA ECX, [RSI + -32]
    MOVZX EDI, CL
    CMP DIL, 61
    JA L100010831_6
    JMP L100010831_5     ; inserted

; Entry 100010831; block 4; address 10001087a
L100010831_4:
    MOV SIL, byte [RDX]
    INC RDX
    TEST SIL, SIL
    JNE L100010831_8
    JMP L100010831_9     ; inserted

; Entry 100010831; block 5; address 100010874
L100010831_5:
    BT R8, RDI
    JAE L100010831_7
    JMP L100010831_4     ; inserted

; Entry 100010831; block 6; address 10001089c
L100010831_6:
    CMP SIL, 124
    JE L100010831_4
    JMP L100010831_13     ; inserted

; Entry 100010831; block 7; address 100010887
L100010831_7:
    CMP RDI, 14
    JE L100010831_11
    JMP L100010831_10     ; inserted

; Entry 100010831; block 8; address 10001085b
L100010831_8:
    MOV ECX, ESI
    AND CL, 239
    ADD CL, 213
    CMP CL, 2
    JB L100010831_4
    JMP L100010831_3     ; inserted

; Entry 100010831; block 9; address 100010885
L100010831_9:
    JMP L100010831_2

; Entry 100010831; block 10; address 10001088d
L100010831_10:
    CMP RDI, 15
    JNE L100010831_6
    JMP L100010831_12     ; inserted

; Entry 100010831; block 11; address 1000108c6
L100010831_11:
    TEST R9D, R9D
    JE L100010831_17
    JMP L100010831_16     ; inserted

; Entry 100010831; block 12; address 100010893
L100010831_12:
    MOV byte [R10], 47
    INC R10
    JMP L100010831_17

; Entry 100010831; block 13; address 1000108a2
L100010831_13:
    CMP R9D, 11
    JG L100010831_4
    JMP L100010831_14     ; inserted

; Entry 100010831; block 14; address 1000108a8
L100010831_14:
    CMP R9D, 8
    JE L100010831_4
    JMP L100010831_15     ; inserted

; Entry 100010831; block 15; address 1000108ae
L100010831_15:
    INC R9D
    LEA ECX, [RSI + -97]
    CMP CL, 26
    MOVZX ECX, SIL
    CMOVB ECX, EDI
    MOV byte [R10], CL
    INC R10
    JMP L100010831_4

; Entry 100010831; block 16; address 1000108cb
L100010831_16:
    CMP R9D, 8
    JLE L100010831_19
    JMP L100010831_18     ; inserted

; Entry 100010831; block 17; address 1000108d9
L100010831_17:
    XOR R9D, R9D
    JMP L100010831_4

; Entry 100010831; block 18; address 1000108d1
L100010831_18:
    MOV R9D, 12
    JMP L100010831_4

; Entry 100010831; block 19; address 1000108de
L100010831_19:
    MOV byte [R10], 46
    INC R10
    MOV R9D, 9
    JMP L100010831_4



; ---------------------
; Function: 0x1000108f3
; ---------------------
; Entry 1000108f3; block 0; address 1000108f3
L1000108f3_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    MOV R12D, ESI
    MOV R14, RDI
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L1000108f3_1     ; inserted

; Entry 1000108f3; block 1; address 100010913
L1000108f3_1:
    TEST EAX, EAX
    JE L1000108f3_3
    JMP L1000108f3_2     ; inserted

; Entry 1000108f3; block 2; address 10001091b
L1000108f3_2:
    MOV RDI, R14
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L10001683e_0
    JMP L1000108f3_4     ; inserted

; Entry 1000108f3; block 3; address 1000109e0
L1000108f3_3:
    LEA RDI, [rel L__TEXT___cstring_35957]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L1000108f3_21     ; inserted

; Entry 1000108f3; block 4; address 100010927
L1000108f3_4:
    MOV R14, RAX
    LEA RAX, [rel L__DATA___common + 616]
    MOV RBX, qword [RAX]
    MOV R13D, 1
    TEST RBX, RBX
    JE L1000108f3_6
    JMP L1000108f3_5     ; inserted

; Entry 1000108f3; block 5; address 100010943
L1000108f3_5:
    LEA R15, [rel L__DATA___common + 60]
    JMP L1000108f3_19     ; inserted

; Entry 1000108f3; block 6; address 1000109d1
L1000108f3_6:
    MOV RDI, R14
    CALL _free
    JMP L1000108f3_20     ; inserted

; Entry 1000108f3; block 7; address 100010959
L1000108f3_7:
    TEST EAX, EAX
    JE L1000108f3_9
    JMP L1000108f3_8     ; inserted

; Entry 1000108f3; block 8; address 10001095d
L1000108f3_8:
    LEA RAX, [rel L__DATA___common + 656]
    CMP dword [RAX], 0
    JE L1000108f3_11
    JMP L1000108f3_10     ; inserted

; Entry 1000108f3; block 9; address 1000109c1
L1000108f3_9:
    MOV RBX, qword [RBX + 152]
    TEST RBX, RBX
    JNE L1000108f3_19
    JMP L1000108f3_6     ; inserted

; Entry 1000108f3; block 10; address 100010969
L1000108f3_10:
    MOV RDI, qword [RBX + 120]
    MOV ESI, R12D
    CALL L100010a07_0
    JMP L1000108f3_12     ; inserted

; Entry 1000108f3; block 11; address 100010977
L1000108f3_11:
    MOV EAX, 1
    JMP L1000108f3_13     ; inserted

; Entry 1000108f3; block 12; address 100010975
L1000108f3_12:
    JMP L1000108f3_13

; Entry 1000108f3; block 13; address 10001097c
L1000108f3_13:
    MOV dword [RBX + 136], EAX
    CMP dword [R15], 0
    JE L1000108f3_15
    JMP L1000108f3_14     ; inserted

; Entry 1000108f3; block 14; address 100010988
L1000108f3_14:
    LEA RDX, [rel L__TEXT___cstring_36041]
    TEST EAX, EAX
    JE L1000108f3_17
    JMP L1000108f3_16     ; inserted

; Entry 1000108f3; block 15; address 1000109be
L1000108f3_15:
    XOR R13D, R13D
    JMP L1000108f3_9     ; inserted

; Entry 1000108f3; block 16; address 100010993
L1000108f3_16:
    LEA RDX, [rel L__TEXT___cstring_36038]
    JMP L1000108f3_17     ; inserted

; Entry 1000108f3; block 17; address 10001099a
L1000108f3_17:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    MOV RCX, qword [RBX + 128]
    XOR R13D, R13D
    LEA RSI, [rel L__TEXT___cstring_36008]
    XOR EAX, EAX
    CALL _fprintf
    JMP L1000108f3_18     ; inserted

; Entry 1000108f3; block 18; address 1000109bc
L1000108f3_18:
    JMP L1000108f3_9

; Entry 1000108f3; block 19; address 10001094a
L1000108f3_19:
    MOV RSI, qword [RBX + 112]
    MOV RDI, R14
    MOV EDX, R12D
    CALL L100014d38_0
    JMP L1000108f3_7     ; inserted

; Entry 1000108f3; block 20; address 1000109d9
L1000108f3_20:
    NEG R13D
    SBB EAX, EAX
    JMP L1000108f3_22

; Entry 1000108f3; block 21; address 1000109f3
L1000108f3_21:
    MOV EAX, 4294967295
    JMP L1000108f3_22     ; inserted

; Entry 1000108f3; block 22; address 1000109f8
L1000108f3_22:
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x100010a07
; ---------------------
; Entry 100010a07; block 0; address 100010a07
L100010a07_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 40
    MOV dword [RBP + -60], ESI
    MOV qword [RBP + -56], RDI
    LEA R12, [rel L__DATA___common + 656]
    CMP dword [R12], 0
    JE L100010a07_2
    JMP L100010a07_1     ; inserted

; Entry 100010a07; block 1; address 100010a31
L100010a07_1:
    LEA RAX, [rel L__DATA___common + 660]
    XOR ECX, ECX
    CMP dword [RAX], 0
    SETE CL
    MOV dword [RBP + -48], ECX
    LEA RCX, [rel L__DATA___common + 664]
    XOR EAX, EAX
    CMP dword [RCX], 0
    SETE AL
    XOR R14D, R14D
    LEA RDX, [rel L__DATA___common + 648]
    JMP L100010a07_36     ; inserted

; Entry 100010a07; block 2; address 100010bc9
L100010a07_2:
    MOV EAX, 1
    JMP L100010a07_38     ; inserted

; Entry 100010a07; block 3; address 100010a71
L100010a07_3:
    MOV EAX, dword [RAX + R15 + 8]
    CMP EAX, 105
    MOV dword [RBP + -44], ECX
    MOV qword [RBP + -72], RSI
    JE L100010a07_6
    JMP L100010a07_5     ; inserted

; Entry 100010a07; block 4; address 100010ac5
L100010a07_4:
    MOV EAX, ECX
    JMP L100010a07_33

; Entry 100010a07; block 5; address 100010a82
L100010a07_5:
    MOV RSI, qword [RBP + -56]
    CMP EAX, 82
    JNE L100010a07_8
    JMP L100010a07_7     ; inserted

; Entry 100010a07; block 6; address 100010acc
L100010a07_6:
    MOV RSI, qword [RBP + -56]
    CMP dword [RBP + -48], 0
    JNE L100010a07_17
    JMP L100010a07_16     ; inserted

; Entry 100010a07; block 7; address 100010a8f
L100010a07_7:
    MOV EAX, dword [RBP + -44]
    TEST EAX, EAX
    JNE L100010a07_10
    JMP L100010a07_9     ; inserted

; Entry 100010a07; block 8; address 100010b62
L100010a07_8:
    MOV RDI, qword [RBP + -72]
    MOV EDX, dword [RBP + -60]
    CALL L100014d38_0
    JMP L100010a07_30     ; inserted

; Entry 100010a07; block 9; address 100010a9a
L100010a07_9:
    MOV RDI, qword [RBP + -72]
    MOV ESI, 47
    CALL _strchr
    JMP L100010a07_11     ; inserted

; Entry 100010a07; block 10; address 100010b9f
L100010a07_10:
    LEA RDX, [rel L__DATA___common + 648]
    JMP L100010a07_33     ; inserted

; Entry 100010a07; block 11; address 100010aa8
L100010a07_11:
    XOR R13D, R13D
    JMP L100010a07_15     ; inserted

; Entry 100010a07; block 12; address 100010ab0
L100010a07_12:
    INC R13D
    INC RAX
    MOV RDI, RAX
    MOV ESI, 47
    CALL _strchr
    JMP L100010a07_14     ; inserted

; Entry 100010a07; block 13; address 100010adf
L100010a07_13:
    MOV R12, qword [RBP + -56]
    MOV RDI, R12
    MOV ESI, 47
    CALL _strchr
    JMP L100010a07_18     ; inserted

; Entry 100010a07; block 14; address 100010ac3
L100010a07_14:
    JMP L100010a07_15

; Entry 100010a07; block 15; address 100010aab
L100010a07_15:
    TEST RAX, RAX
    JE L100010a07_13
    JMP L100010a07_12     ; inserted

; Entry 100010a07; block 16; address 100010ada
L100010a07_16:
    JMP L100010a07_8

; Entry 100010a07; block 17; address 100010b9c
L100010a07_17:
    MOV EAX, dword [RBP + -44]
    JMP L100010a07_10     ; inserted

; Entry 100010a07; block 18; address 100010af0
L100010a07_18:
    MOV RBX, RAX
    MOV RSI, R12
    TEST RAX, RAX
    LEA R12, [rel L__DATA___common + 656]
    JE L100010a07_8
    JMP L100010a07_19     ; inserted

; Entry 100010a07; block 19; address 100010b02
L100010a07_19:
    DEC R13D
    INC RAX
    MOV RDI, RAX
    MOV ESI, 47
    CALL _strchr
    JMP L100010a07_20     ; inserted

; Entry 100010a07; block 20; address 100010b15
L100010a07_20:
    TEST RAX, RAX
    JNE L100010a07_19
    JMP L100010a07_21     ; inserted

; Entry 100010a07; block 21; address 100010b1a
L100010a07_21:
    LEA EAX, [R13 + 1]
    MOV RSI, qword [RBP + -56]
    TEST EAX, EAX
    JG L100010a07_8
    JMP L100010a07_22     ; inserted

; Entry 100010a07; block 22; address 100010b26
L100010a07_22:
    MOV RSI, qword [RBP + -56]
    TEST RBX, RBX
    JE L100010a07_8
    JMP L100010a07_23     ; inserted

; Entry 100010a07; block 23; address 100010b2f
L100010a07_23:
    XOR R12D, R12D
    JMP L100010a07_27     ; inserted

; Entry 100010a07; block 24; address 100010b3d
L100010a07_24:
    MOV RDI, RBX
    MOV ESI, 47
    CALL _strchr
    JMP L100010a07_26     ; inserted

; Entry 100010a07; block 25; address 100010b58
L100010a07_25:
    MOV RSI, RBX
    JMP L100010a07_29     ; inserted

; Entry 100010a07; block 26; address 100010b4a
L100010a07_26:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L100010a07_27
    JMP L100010a07_28     ; inserted

; Entry 100010a07; block 27; address 100010b32
L100010a07_27:
    INC RBX
    DEC R12D
    CMP R13D, R12D
    JE L100010a07_25
    JMP L100010a07_24     ; inserted

; Entry 100010a07; block 28; address 100010b52
L100010a07_28:
    MOV RSI, qword [RBP + -56]
    JMP L100010a07_29

; Entry 100010a07; block 29; address 100010b5b
L100010a07_29:
    LEA R12, [rel L__DATA___common + 656]
    JMP L100010a07_8     ; inserted

; Entry 100010a07; block 30; address 100010b6e
L100010a07_30:
    TEST EAX, EAX
    JE L100010a07_17
    JMP L100010a07_31     ; inserted

; Entry 100010a07; block 31; address 100010b72
L100010a07_31:
    LEA RDX, [rel L__DATA___common + 648]
    MOV RAX, qword [RDX]
    MOV ECX, dword [RAX + R15 + 8]
    MOV EAX, 1
    CMP ECX, 82
    JE L100010a07_33
    JMP L100010a07_32     ; inserted

; Entry 100010a07; block 32; address 100010b8b
L100010a07_32:
    CMP ECX, 120
    JE L100010a07_35
    JMP L100010a07_34     ; inserted

; Entry 100010a07; block 33; address 100010ba6
L100010a07_33:
    INC R14
    MOV ECX, dword [R12]
    CMP R14, RCX
    JB L100010a07_36
    JMP L100010a07_37     ; inserted

; Entry 100010a07; block 34; address 100010b90
L100010a07_34:
    MOV dword [RBP + -48], 1
    MOV EAX, dword [RBP + -44]
    JMP L100010a07_33

; Entry 100010a07; block 35; address 100010bdd
L100010a07_35:
    XOR EAX, EAX
    JMP L100010a07_38

; Entry 100010a07; block 36; address 100010a5c
L100010a07_36:
    MOV ECX, EAX
    MOV RAX, qword [RDX]
    MOV R15, R14
    SHL R15, 4
    MOV RSI, qword [RAX + R15]
    CMP byte [RSI], 0
    JE L100010a07_4
    JMP L100010a07_3     ; inserted

; Entry 100010a07; block 37; address 100010bb6
L100010a07_37:
    CMP dword [RBP + -48], 0
    SETNE CL
    TEST EAX, EAX
    SETNE AL
    AND AL, CL
    MOVZX EAX, AL
    JMP L100010a07_38

; Entry 100010a07; block 38; address 100010bce
L100010a07_38:
    ADD RSP, 40
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x100010be1
; ---------------------
; Entry 100010be1; block 0; address 100010be1
L100010be1_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    MOV EAX, 5144
    CALL L100009bb0_0
    JMP L100010be1_1     ; inserted

; Entry 100010be1; block 1; address 100010bf9
L100010be1_1:
    SUB RSP, RAX
    POP RAX
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -48], RAX
    LEA R12, [rel L__DATA___common + 6328]
    MOV R14, qword [R12]
    TEST R14, R14
    JE L100010be1_3
    JMP L100010be1_2     ; inserted

; Entry 100010be1; block 2; address 100010c1f
L100010be1_2:
    MOV RAX, R14
    SHR RAX, 61
    MOV EBX, 4
    JNE L100010be1_5
    JMP L100010be1_4     ; inserted

; Entry 100010be1; block 3; address 100010d7c
L100010be1_3:
    XOR EBX, EBX
    JMP L100010be1_5     ; inserted

; Entry 100010be1; block 4; address 100010c31
L100010be1_4:
    LEA RDI, [R14 * 8]
    CALL _malloc
    JMP L100010be1_6     ; inserted

; Entry 100010be1; block 5; address 100010d7e
L100010be1_5:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -48]
    JNE L100010be1_32
    JMP L100010be1_31     ; inserted

; Entry 100010be1; block 6; address 100010c3e
L100010be1_6:
    TEST RAX, RAX
    JE L100010be1_5
    JMP L100010be1_7     ; inserted

; Entry 100010be1; block 7; address 100010c47
L100010be1_7:
    MOV R15, RAX
    LEA RAX, [rel L__DATA___common + 640]
    MOV RAX, qword [RAX]
    TEST RAX, RAX
    JE L100010be1_9
    JMP L100010be1_8     ; inserted

; Entry 100010be1; block 8; address 100010c59
L100010be1_8:
    MOV RCX, R15
    JMP L100010be1_10     ; inserted

; Entry 100010be1; block 9; address 100010c6c
L100010be1_9:
    LEA RCX, [rel L__TEXT___text + 57461]
    MOV EDX, 8
    MOV RDI, R15
    MOV RSI, R14
    CALL _qsort
    JMP L100010be1_11     ; inserted

; Entry 100010be1; block 10; address 100010c5c
L100010be1_10:
    MOV qword [RCX], RAX
    MOV RAX, qword [RAX + 56]
    ADD RCX, 8
    TEST RAX, RAX
    JNE L100010be1_10
    JMP L100010be1_9     ; inserted

; Entry 100010be1; block 11; address 100010c83
L100010be1_11:
    MOV R14, qword [R12]
    DEC R14
    JE L100010be1_13
    JMP L100010be1_12     ; inserted

; Entry 100010be1; block 12; address 100010c8c
L100010be1_12:
    MOV R13, R14
    JMP L100010be1_18     ; inserted

; Entry 100010be1; block 13; address 100010cc6
L100010be1_13:
    XOR R13D, R13D
    MOV ESI, 1
    JMP L100010be1_20     ; inserted

; Entry 100010be1; block 14; address 100010ca6
L100010be1_14:
    TEST EAX, EAX
    JE L100010be1_16
    JMP L100010be1_15     ; inserted

; Entry 100010be1; block 15; address 100010caa
L100010be1_15:
    MOV qword [R15 + R13 * 8], RBX
    DEC R13
    JMP L100010be1_17

; Entry 100010be1; block 16; address 100010cb3
L100010be1_16:
    MOV RDI, RBX
    CALL L1000107a9_0
    JMP L100010be1_17     ; inserted

; Entry 100010be1; block 17; address 100010cbb
L100010be1_17:
    TEST R14, R14
    JNE L100010be1_18
    JMP L100010be1_19     ; inserted

; Entry 100010be1; block 18; address 100010c8f
L100010be1_18:
    MOV RAX, qword [R15 + R14 * 8 + -8]
    MOV RBX, qword [R15 + R14 * 8]
    DEC R14
    MOV RDI, qword [RAX]
    MOV RSI, qword [RBX]
    CALL _strcmp
    JMP L100010be1_14     ; inserted

; Entry 100010be1; block 19; address 100010cc0
L100010be1_19:
    MOV RSI, qword [R12]
    JMP L100010be1_20

; Entry 100010be1; block 20; address 100010cce
L100010be1_20:
    MOV RAX, qword [R15]
    LEA RBX, [R15 + R13 * 8]
    MOV qword [RBP + -5184], R15
    MOV qword [R15 + R13 * 8], RAX
    LEA RCX, [rel L__TEXT___text + 57483]
    MOV EDX, 8
    MOV RDI, RBX
    CALL _qsort
    JMP L100010be1_21     ; inserted

; Entry 100010be1; block 21; address 100010cf4
L100010be1_21:
    MOV R14, qword [R12]
    CMP R14, 2
    JB L100010be1_23
    JMP L100010be1_22     ; inserted

; Entry 100010be1; block 22; address 100010cfe
L100010be1_22:
    MOV RAX, qword [RBX]
    MOV R15, qword [RBX + 8]
    MOV qword [RBP + -5176], RAX
    MOV RDI, qword [RAX + 8]
    MOV R12, qword [R15 + 8]
    MOV RSI, R12
    CALL _strcmp
    JMP L100010be1_24     ; inserted

; Entry 100010be1; block 23; address 100010d70
L100010be1_23:
    MOV RDI, qword [RBP + -5184]
    CALL _free
    JMP L100010be1_3     ; inserted

; Entry 100010be1; block 24; address 100010d1c
L100010be1_24:
    TEST EAX, EAX
    JE L100010be1_26
    JMP L100010be1_25     ; inserted

; Entry 100010be1; block 25; address 100010d24
L100010be1_25:
    MOV RAX, qword [RBP + -5184]
    LEA RBX, [RAX + R13 * 8]
    ADD RBX, 8
    ADD R14, 18446744073709551614
    JMP L100010be1_29     ; inserted

; Entry 100010be1; block 26; address 100010da6
L100010be1_26:
    MOV R13, qword [RBP + -5176]
    ADD RBX, 8
    JMP L100010be1_33     ; inserted

; Entry 100010be1; block 27; address 100010d3c
L100010be1_27:
    MOV R13, R15
    MOV R15, qword [RBX + 8]
    ADD RBX, 8
    MOV qword [RBP + -5176], RBX
    MOV RBX, qword [R15 + 8]
    MOV RDI, R12
    MOV RSI, RBX
    CALL _strcmp
    JMP L100010be1_28     ; inserted

; Entry 100010be1; block 28; address 100010d5d
L100010be1_28:
    DEC R14
    MOV R12, RBX
    MOV RBX, qword [RBP + -5176]
    TEST EAX, EAX
    JNE L100010be1_29
    JMP L100010be1_30     ; inserted

; Entry 100010be1; block 29; address 100010d37
L100010be1_29:
    TEST R14, R14
    JE L100010be1_23
    JMP L100010be1_27     ; inserted

; Entry 100010be1; block 30; address 100010d6e
L100010be1_30:
    JMP L100010be1_33

; Entry 100010be1; block 31; address 100010d92
L100010be1_31:
    MOV EAX, EBX
    ADD RSP, 5144
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100010be1; block 32; address 100010ea0
L100010be1_32:
    CALL ___stack_chk_fail

; Entry 100010be1; block 33; address 100010db1
L100010be1_33:
    MOV R8, qword [R13]
    LEA R15, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_36044]
    MOV EDX, 5105
    MOV RDI, R15
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L100010be1_34     ; inserted

; Entry 100010be1; block 34; address 100010dd4
L100010be1_34:
    MOV RAX, qword [RBX]
    MOV R8, qword [RAX]
    LEA RCX, [rel L__TEXT___cstring_36067]
    LEA R14, [RBP + -5168]
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L100010be1_35     ; inserted

; Entry 100010be1; block 35; address 100010df9
L100010be1_35:
    LEA R12, [rel L__TEXT___cstring_36090]
    MOV EDX, 5105
    MOV RDI, R15
    MOV RSI, R12
    CALL ___strcat_chk
    JMP L100010be1_36     ; inserted

; Entry 100010be1; block 36; address 100010e10
L100010be1_36:
    MOV EDX, 5105
    MOV RDI, R15
    MOV RSI, R14
    CALL ___strcat_chk
    JMP L100010be1_37     ; inserted

; Entry 100010be1; block 37; address 100010e20
L100010be1_37:
    MOV RAX, qword [RBX]
    MOV R8, qword [RAX + 8]
    LEA RCX, [rel L__TEXT___cstring_36112]
    MOV EDX, 5105
    MOV RDI, R14
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L100010be1_38     ; inserted

; Entry 100010be1; block 38; address 100010e3f
L100010be1_38:
    MOV EDX, 5105
    MOV RDI, R15
    MOV RSI, R12
    CALL ___strcat_chk
    JMP L100010be1_39     ; inserted

; Entry 100010be1; block 39; address 100010e4f
L100010be1_39:
    MOV EDX, 5105
    MOV RDI, R15
    MOV RSI, R14
    CALL ___strcat_chk
    JMP L100010be1_40     ; inserted

; Entry 100010be1; block 40; address 100010e5f
L100010be1_40:
    LEA RAX, [rel L__DATA___data + 4488]
    CMP dword [RAX], 0
    JNE L100010be1_42
    JMP L100010be1_41     ; inserted

; Entry 100010be1; block 41; address 100010e6b
L100010be1_41:
    LEA RDI, [rel L__DATA___common + 1216]
    LEA RSI, [rel L__TEXT___cstring_36142]
    MOV EDX, 5105
    CALL ___strcat_chk
    JMP L100010be1_42     ; inserted

; Entry 100010be1; block 42; address 100010e83
L100010be1_42:
    LEA RDI, [rel L__DATA___common + 1216]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L100010be1_43     ; inserted

; Entry 100010be1; block 43; address 100010e96
L100010be1_43:
    MOV EBX, 16
    JMP L100010be1_5



; ---------------------
; Function: 0x100010ed3
; ---------------------
; Entry 100010ed3; block 0; address 100010ed3
L100010ed3_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 184
    MOV dword [RBP + -56], EDX
    MOV R12D, ESI
    MOV R13, RDI
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L100010ed3_2
    JMP L100010ed3_1     ; inserted

; Entry 100010ed3; block 1; address 100010f00
L100010ed3_1:
    LEA RBX, [rel L__DATA___common + 360]
    MOV RAX, qword [RBX]
    TEST RAX, RAX
    JNE L100010ed3_4
    JMP L100010ed3_3     ; inserted

; Entry 100010ed3; block 2; address 100010fc1
L100010ed3_2:
    LEA RDX, [RBP + -60]
    MOV RDI, R13
    MOV ESI, R12D
    CALL L10001683e_0
    JMP L100010ed3_14     ; inserted

; Entry 100010ed3; block 3; address 100010f0f
L100010ed3_3:
    XOR EDI, EDI
    CALL _time
    JMP L100010ed3_5     ; inserted

; Entry 100010ed3; block 4; address 100010f23
L100010ed3_4:
    INC RAX
    MOV qword [RBX], RAX
    MOV RCX, 10330176681277348905
    IMUL RCX, RAX
    ROR RCX, 2
    MOV RAX, 184467440737095516
    CMP RCX, RAX
    JA L100010ed3_2
    JMP L100010ed3_6     ; inserted

; Entry 100010ed3; block 5; address 100010f16
L100010ed3_5:
    LEA RCX, [rel L__DATA___common + 336]
    MOV qword [RCX], RAX
    MOV RAX, qword [RBX]
    JMP L100010ed3_4     ; inserted

; Entry 100010ed3; block 6; address 100010f4a
L100010ed3_6:
    XOR EDI, EDI
    CALL _time
    JMP L100010ed3_7     ; inserted

; Entry 100010ed3; block 7; address 100010f51
L100010ed3_7:
    MOV R15, RAX
    LEA RAX, [rel L__DATA___common + 336]
    MOV RCX, R15
    SUB RCX, qword [RAX]
    LEA RAX, [rel L__DATA___data + 4544]
    CMP RCX, qword [RAX]
    JLE L100010ed3_2
    JMP L100010ed3_8     ; inserted

; Entry 100010ed3; block 8; address 100010f6d
L100010ed3_8:
    LEA R14, [rel L__DATA___common + 344]
    MOV RAX, qword [R14]
    TEST RAX, RAX
    JNE L100010ed3_10
    JMP L100010ed3_9     ; inserted

; Entry 100010ed3; block 9; address 100010f7c
L100010ed3_9:
    LEA RDI, [rel L__TEXT___cstring_10419]
    XOR ESI, ESI
    CALL L100003300_0
    JMP L100010ed3_11     ; inserted

; Entry 100010ed3; block 10; address 100010f90
L100010ed3_10:
    MOV RCX, R15
    SUB RCX, RAX
    LEA RAX, [rel L__DATA___data + 4552]
    CMP RCX, qword [RAX]
    JLE L100010ed3_2
    JMP L100010ed3_12     ; inserted

; Entry 100010ed3; block 11; address 100010f8a
L100010ed3_11:
    MOV qword [R14], R15
    MOV RAX, R15
    JMP L100010ed3_10     ; inserted

; Entry 100010ed3; block 12; address 100010fa2
L100010ed3_12:
    MOV qword [R14], R15
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RBX]
    MOV EDI, 46
    CALL _fputc
    JMP L100010ed3_13     ; inserted

; Entry 100010ed3; block 13; address 100010fb9
L100010ed3_13:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L100010ed3_2     ; inserted

; Entry 100010ed3; block 14; address 100010fd0
L100010ed3_14:
    MOV R15D, 4
    TEST RAX, RAX
    JE L100010ed3_16
    JMP L100010ed3_15     ; inserted

; Entry 100010ed3; block 15; address 100010fdf
L100010ed3_15:
    MOV RBX, RAX
    CMP byte [RAX], 0
    JE L100010ed3_18
    JMP L100010ed3_17     ; inserted

; Entry 100010ed3; block 16; address 100011468
L100010ed3_16:
    MOV EAX, R15D
    ADD RSP, 184
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100010ed3; block 17; address 100010fe7
L100010ed3_17:
    MOV qword [RBP + -72], R13
    CMP dword [RBP + -60], 0
    LEA RAX, [rel L__DATA___data + 4488]
    MOV R14D, dword [RAX]
    MOV qword [RBP + -48], RBX
    JNE L100010ed3_20
    JMP L100010ed3_19     ; inserted

; Entry 100010ed3; block 18; address 10001100c
L100010ed3_18:
    LEA RAX, [rel L__DATA___data + 4488]
    CMP dword [RAX], 0
    JE L100010ed3_23
    JMP L100010ed3_22     ; inserted

; Entry 100010ed3; block 19; address 100010fff
L100010ed3_19:
    TEST R14D, R14D
    JE L100010ed3_20
    JMP L100010ed3_21     ; inserted

; Entry 100010ed3; block 20; address 100011040
L100010ed3_20:
    LEA RCX, [rel L__DATA___common + 56]
    MOV EDX, dword [RCX]
    MOV dword [RBP + -80], EDX
    MOV dword [RCX], 0
    MOV dword [RAX], 1
    XOR R13D, R13D
    MOV RDI, qword [RBP + -72]
    MOV ESI, R12D
    XOR EDX, EDX
    CALL L10001683e_0
    JMP L100010ed3_26     ; inserted

; Entry 100010ed3; block 21; address 100011004
L100010ed3_21:
    XOR R14D, R14D
    JMP L100010ed3_30

; Entry 100010ed3; block 22; address 100011018
L100010ed3_22:
    LEA RAX, [rel L__DATA___common + 48]
    CMP dword [RAX], 0
    JNE L100010ed3_23
    JMP L100010ed3_24     ; inserted

; Entry 100010ed3; block 23; address 100011030
L100010ed3_23:
    MOV RDI, RBX
    CALL _free
    JMP L100010ed3_25     ; inserted

; Entry 100010ed3; block 24; address 100011024
L100010ed3_24:
    LEA RDI, [rel L__TEXT___cstring_36197]
    CALL L1000032ef_0

; Entry 100010ed3; block 25; address 100011038
L100010ed3_25:
    XOR R15D, R15D
    JMP L100010ed3_16

; Entry 100010ed3; block 26; address 100011069
L100010ed3_26:
    TEST RAX, RAX
    JE L100010ed3_28
    JMP L100010ed3_27     ; inserted

; Entry 100010ed3; block 27; address 10001106e
L100010ed3_27:
    MOV RBX, RAX
    MOV RDI, RAX
    CALL L10001694a_0
    JMP L100010ed3_29     ; inserted

; Entry 100010ed3; block 28; address 100011084
L100010ed3_28:
    LEA RAX, [rel L__DATA___common + 56]
    MOV ECX, dword [RBP + -80]
    MOV dword [RAX], ECX
    LEA RAX, [rel L__DATA___data + 4488]
    MOV dword [RAX], R14D
    MOV RBX, qword [RBP + -48]
    MOV R14, R13
    JMP L100010ed3_30     ; inserted

; Entry 100010ed3; block 29; address 100011079
L100010ed3_29:
    MOV R13, RAX
    MOV RDI, RBX
    CALL _free
    JMP L100010ed3_28     ; inserted

; Entry 100010ed3; block 30; address 1000110a1
L100010ed3_30:
    MOV RDI, RBX
    CALL L10001694a_0
    JMP L100010ed3_31     ; inserted

; Entry 100010ed3; block 31; address 1000110a9
L100010ed3_31:
    TEST RAX, RAX
    JE L100010ed3_16
    JMP L100010ed3_32     ; inserted

; Entry 100010ed3; block 32; address 1000110b2
L100010ed3_32:
    MOV RBX, RAX
    MOV RDI, RAX
    CALL _strlen
    JMP L100010ed3_33     ; inserted

; Entry 100010ed3; block 33; address 1000110bd
L100010ed3_33:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100010ed3_34     ; inserted

; Entry 100010ed3; block 34; address 1000110c6
L100010ed3_34:
    TEST RAX, RAX
    JE L100010ed3_16
    JMP L100010ed3_35     ; inserted

; Entry 100010ed3; block 35; address 1000110cf
L100010ed3_35:
    MOV R12, RAX
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L100010ed3_36     ; inserted

; Entry 100010ed3; block 36; address 1000110dd
L100010ed3_36:
    TEST R14, R14
    CMOVE R14, RBX
    MOV RDI, RBX
    CALL L100009bfa_0
    JMP L100010ed3_37     ; inserted

; Entry 100010ed3; block 37; address 1000110ec
L100010ed3_37:
    MOV R13, RAX
    LEA RAX, [rel L__DATA___common + 656]
    MOV EAX, dword [RAX]
    TEST R13, R13
    JE L100010ed3_39
    JMP L100010ed3_38     ; inserted

; Entry 100010ed3; block 38; address 1000110fd
L100010ed3_38:
    MOV qword [RBP + -80], R12
    TEST EAX, EAX
    JE L100010ed3_41
    JMP L100010ed3_40     ; inserted

; Entry 100010ed3; block 39; address 10001116d
L100010ed3_39:
    TEST EAX, EAX
    JE L100010ed3_50
    JMP L100010ed3_49     ; inserted

; Entry 100010ed3; block 40; address 100011105
L100010ed3_40:
    MOV RDI, R14
    MOV ESI, dword [RBP + -56]
    CALL L100010a07_0
    JMP L100010ed3_42     ; inserted

; Entry 100010ed3; block 41; address 100011118
L100010ed3_41:
    MOV R12, R14
    MOV dword [R13 + 136], 1
    MOV R14, qword [RBP + -72]
    MOV RDI, R14
    CALL _strlen
    JMP L100010ed3_44     ; inserted

; Entry 100010ed3; block 42; address 100011110
L100010ed3_42:
    TEST EAX, EAX
    JE L100010ed3_43
    JMP L100010ed3_41     ; inserted

; Entry 100010ed3; block 43; address 1000111f5
L100010ed3_43:
    MOV R12, R14
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    MOV R14, qword [RBP + -72]
    JE L100010ed3_63
    JMP L100010ed3_62     ; inserted

; Entry 100010ed3; block 44; address 100011132
L100010ed3_44:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100010ed3_45     ; inserted

; Entry 100010ed3; block 45; address 10001113b
L100010ed3_45:
    MOV qword [R13 + 80], RAX
    TEST RAX, RAX
    JE L100010ed3_47
    JMP L100010ed3_46     ; inserted

; Entry 100010ed3; block 46; address 100011148
L100010ed3_46:
    MOV RDI, RAX
    MOV RSI, R14
    CALL _strcpy
    JMP L100010ed3_48     ; inserted

; Entry 100010ed3; block 47; address 1000111d7
L100010ed3_47:
    CMP R12, RBX
    JE L100010ed3_60
    JMP L100010ed3_59     ; inserted

; Entry 100010ed3; block 48; address 100011153
L100010ed3_48:
    MOV RAX, qword [RBP + -80]
    MOV qword [R13 + 128], RAX
    MOV EAX, dword [RBP + -60]
    MOV dword [R13 + 148], EAX
    JMP L100010ed3_63

; Entry 100010ed3; block 49; address 100011171
L100010ed3_49:
    MOV RDI, R14
    MOV ESI, dword [RBP + -56]
    CALL L100010a07_0
    JMP L100010ed3_51     ; inserted

; Entry 100010ed3; block 50; address 100011184
L100010ed3_50:
    MOV qword [RBP + -56], R14
    MOV ECX, dword [rel L__DATA___data + 3928]
    CMP ECX, 18446744073709551615
    MOV R14, qword [RBP + -72]
    JNE L100010ed3_54
    JMP L100010ed3_53     ; inserted

; Entry 100010ed3; block 51; address 10001117c
L100010ed3_51:
    TEST EAX, EAX
    JE L100010ed3_52
    JMP L100010ed3_50     ; inserted

; Entry 100010ed3; block 52; address 100011421
L100010ed3_52:
    XOR R15D, R15D
    CMP R14, RBX
    JE L100010ed3_16
    JMP L100010ed3_97     ; inserted

; Entry 100010ed3; block 53; address 10001119b
L100010ed3_53:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV R15, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_7743]
    MOV RDI, R15
    CALL _strcmp
    JMP L100010ed3_55     ; inserted

; Entry 100010ed3; block 54; address 10001125d
L100010ed3_54:
    CMP ECX, 1
    JNE L100010ed3_69
    JMP L100010ed3_68     ; inserted

; Entry 100010ed3; block 55; address 1000111b4
L100010ed3_55:
    TEST EAX, EAX
    JE L100010ed3_57
    JMP L100010ed3_56     ; inserted

; Entry 100010ed3; block 56; address 1000111bc
L100010ed3_56:
    LEA RSI, [rel L__DATA___bss + 1104]
    MOV RDI, R15
    CALL _stat$INODE64
    JMP L100010ed3_58     ; inserted

; Entry 100010ed3; block 57; address 100011255
L100010ed3_57:
    XOR ECX, ECX
    JMP L100010ed3_67     ; inserted

; Entry 100010ed3; block 58; address 1000111cb
L100010ed3_58:
    XOR ECX, ECX
    TEST EAX, EAX
    SETE CL
    JMP L100010ed3_67

; Entry 100010ed3; block 59; address 1000111dc
L100010ed3_59:
    MOV RDI, R12
    CALL _free
    JMP L100010ed3_60     ; inserted

; Entry 100010ed3; block 60; address 1000111e4
L100010ed3_60:
    MOV RDI, qword [RBP + -48]
    CALL _free
    JMP L100010ed3_61     ; inserted

; Entry 100010ed3; block 61; address 1000111ed
L100010ed3_61:
    MOV RDI, RBX
    JMP L100010ed3_98

; Entry 100010ed3; block 62; address 100011208
L100010ed3_62:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_36225]
    MOV RDX, qword [RBP + -80]
    XOR EAX, EAX
    CALL _fprintf
    JMP L100010ed3_63     ; inserted

; Entry 100010ed3; block 63; address 100011224
L100010ed3_63:
    MOV RDI, qword [RBP + -48]
    CALL _free
    JMP L100010ed3_64     ; inserted

; Entry 100010ed3; block 64; address 10001122d
L100010ed3_64:
    MOV RDI, RBX
    CALL _free
    JMP L100010ed3_65     ; inserted

; Entry 100010ed3; block 65; address 100011235
L100010ed3_65:
    CMP qword [rel L__DATA___common + 40], R14
    MOV R14, R12
    JNE L100010ed3_52
    JMP L100010ed3_66     ; inserted

; Entry 100010ed3; block 66; address 100011245
L100010ed3_66:
    MOV RAX, qword [R13 + 80]
    MOV qword [rel L__DATA___common + 40], RAX
    JMP L100010ed3_52

; Entry 100010ed3; block 67; address 100011257
L100010ed3_67:
    MOV dword [rel L__DATA___data + 3928], ECX
    JMP L100010ed3_54     ; inserted

; Entry 100010ed3; block 68; address 100011266
L100010ed3_68:
    LEA RSI, [rel L__DATA___bss + 1104]
    LEA R15, [RBP + -224]
    MOV EDX, 144
    MOV RDI, R15
    CALL _memcpy
    JMP L100010ed3_70     ; inserted

; Entry 100010ed3; block 69; address 100011378
L100010ed3_69:
    MOV EDI, 64
    CALL _malloc
    JMP L100010ed3_87     ; inserted

; Entry 100010ed3; block 70; address 100011281
L100010ed3_70:
    MOV RDI, R14
    MOV RSI, R15
    CALL _stat$INODE64
    JMP L100010ed3_71     ; inserted

; Entry 100010ed3; block 71; address 10001128c
L100010ed3_71:
    TEST EAX, EAX
    JNE L100010ed3_69
    JMP L100010ed3_72     ; inserted

; Entry 100010ed3; block 72; address 100011294
L100010ed3_72:
    MOVZX EAX, word [rel L__DATA___bss + 1108]
    CMP AX, word [RBP + -220]
    JNE L100010ed3_69
    JMP L100010ed3_73     ; inserted

; Entry 100010ed3; block 73; address 1000112a8
L100010ed3_73:
    MOV RAX, qword [rel L__DATA___bss + 1112]
    CMP RAX, qword [RBP + -216]
    JNE L100010ed3_69
    JMP L100010ed3_74     ; inserted

; Entry 100010ed3; block 74; address 1000112bc
L100010ed3_74:
    MOV EAX, dword [rel L__DATA___bss + 1104]
    CMP EAX, dword [RBP + -224]
    JNE L100010ed3_69
    JMP L100010ed3_75     ; inserted

; Entry 100010ed3; block 75; address 1000112ce
L100010ed3_75:
    MOV EAX, dword [rel L__DATA___bss + 1120]
    CMP EAX, dword [RBP + -208]
    JNE L100010ed3_69
    JMP L100010ed3_76     ; inserted

; Entry 100010ed3; block 76; address 1000112e0
L100010ed3_76:
    MOV EAX, dword [rel L__DATA___bss + 1124]
    CMP EAX, dword [RBP + -204]
    JNE L100010ed3_69
    JMP L100010ed3_77     ; inserted

; Entry 100010ed3; block 77; address 1000112f2
L100010ed3_77:
    MOV RAX, qword [rel L__DATA___bss + 1200]
    CMP RAX, qword [RBP + -128]
    JNE L100010ed3_69
    JMP L100010ed3_78     ; inserted

; Entry 100010ed3; block 78; address 1000112ff
L100010ed3_78:
    MOV RAX, qword [rel L__DATA___bss + 1152]
    CMP RAX, qword [RBP + -176]
    JNE L100010ed3_69
    JMP L100010ed3_79     ; inserted

; Entry 100010ed3; block 79; address 10001130f
L100010ed3_79:
    MOV RAX, qword [rel L__DATA___bss + 1168]
    CMP RAX, qword [RBP + -160]
    JNE L100010ed3_69
    JMP L100010ed3_80     ; inserted

; Entry 100010ed3; block 80; address 10001131f
L100010ed3_80:
    LEA RAX, [rel L__DATA___common + 60]
    CMP dword [RAX], 0
    JE L100010ed3_82
    JMP L100010ed3_81     ; inserted

; Entry 100010ed3; block 81; address 10001132b
L100010ed3_81:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RCX, qword [RAX]
    LEA RDI, [rel L__TEXT___cstring_36239]
    MOV ESI, 34
    MOV EDX, 1
    CALL _fwrite
    JMP L100010ed3_82     ; inserted

; Entry 100010ed3; block 82; address 10001134b
L100010ed3_82:
    CMP qword [RBP + -56], RBX
    JE L100010ed3_84
    JMP L100010ed3_83     ; inserted

; Entry 100010ed3; block 83; address 100011351
L100010ed3_83:
    MOV RDI, RBX
    CALL _free
    JMP L100010ed3_84     ; inserted

; Entry 100010ed3; block 84; address 100011359
L100010ed3_84:
    XOR R15D, R15D
    MOV RAX, qword [RBP + -48]
    CMP qword [RBP + -56], RAX
    JE L100010ed3_86
    JMP L100010ed3_85     ; inserted

; Entry 100010ed3; block 85; address 100011366
L100010ed3_85:
    MOV RDI, qword [RBP + -56]
    CALL _free
    JMP L100010ed3_86     ; inserted

; Entry 100010ed3; block 86; address 10001136f
L100010ed3_86:
    MOV RBX, qword [RBP + -48]
    JMP L100010ed3_104

; Entry 100010ed3; block 87; address 100011382
L100010ed3_87:
    MOV R15, RAX
    TEST RAX, RAX
    JE L100010ed3_89
    JMP L100010ed3_88     ; inserted

; Entry 100010ed3; block 88; address 10001138e
L100010ed3_88:
    LEA R13, [rel L__DATA___common + 6328]
    CMP qword [R13], 18446744073709551615
    JE L100010ed3_89
    JMP L100010ed3_90     ; inserted

; Entry 100010ed3; block 89; address 10001142e
L100010ed3_89:
    TEST R15, R15
    JE L100010ed3_100
    JMP L100010ed3_99     ; inserted

; Entry 100010ed3; block 90; address 1000113a0
L100010ed3_90:
    MOV RDI, qword [RBP + -72]
    CALL _strlen
    JMP L100010ed3_91     ; inserted

; Entry 100010ed3; block 91; address 1000113a9
L100010ed3_91:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100010ed3_92     ; inserted

; Entry 100010ed3; block 92; address 1000113b2
L100010ed3_92:
    MOV qword [R15], RAX
    TEST RAX, RAX
    JE L100010ed3_89
    JMP L100010ed3_93     ; inserted

; Entry 100010ed3; block 93; address 1000113ba
L100010ed3_93:
    MOV RDI, RAX
    MOV R14, qword [RBP + -72]
    MOV RSI, R14
    CALL _strcpy
    JMP L100010ed3_94     ; inserted

; Entry 100010ed3; block 94; address 1000113c9
L100010ed3_94:
    MOV RAX, qword [RBP + -48]
    MOV qword [R15 + 8], RAX
    MOV qword [R15 + 16], RBX
    MOV qword [R15 + 24], R12
    MOV EAX, dword [RBP + -60]
    MOV dword [R15 + 32], EAX
    LEA RAX, [rel L__DATA___data + 4568]
    MOV RCX, qword [RAX]
    MOV qword [RCX], R15
    MOV RCX, qword [RAX]
    MOV qword [R15 + 48], RCX
    MOV RCX, R15
    ADD RCX, 56
    INC qword [R13]
    MOV qword [R15 + 56], 0
    MOV qword [RAX], RCX
    CMP qword [rel L__DATA___common + 40], R14
    JNE L100010ed3_96
    JMP L100010ed3_95     ; inserted

; Entry 100010ed3; block 95; address 100011413
L100010ed3_95:
    MOV RAX, qword [R15]
    MOV qword [rel L__DATA___common + 40], RAX
    JMP L100010ed3_96     ; inserted

; Entry 100010ed3; block 96; address 10001141d
L100010ed3_96:
    MOV R14, qword [RBP + -56]
    JMP L100010ed3_52     ; inserted

; Entry 100010ed3; block 97; address 100011429
L100010ed3_97:
    MOV RDI, R14
    JMP L100010ed3_98

; Entry 100010ed3; block 98; address 100011463
L100010ed3_98:
    CALL _free
    JMP L100010ed3_16     ; inserted

; Entry 100010ed3; block 99; address 100011433
L100010ed3_99:
    MOV RDI, R15
    CALL _free
    JMP L100010ed3_100     ; inserted

; Entry 100010ed3; block 100; address 10001143b
L100010ed3_100:
    MOV RDI, qword [RBP + -56]
    CMP RDI, RBX
    JE L100010ed3_102
    JMP L100010ed3_101     ; inserted

; Entry 100010ed3; block 101; address 100011444
L100010ed3_101:
    CALL _free
    JMP L100010ed3_102     ; inserted

; Entry 100010ed3; block 102; address 100011449
L100010ed3_102:
    MOV RDI, qword [RBP + -48]
    CALL _free
    JMP L100010ed3_103     ; inserted

; Entry 100010ed3; block 103; address 100011452
L100010ed3_103:
    MOV R15D, 4
    JMP L100010ed3_104     ; inserted

; Entry 100010ed3; block 104; address 100011458
L100010ed3_104:
    MOV RDI, RBX
    CALL _free
    JMP L100010ed3_105     ; inserted

; Entry 100010ed3; block 105; address 100011460
L100010ed3_105:
    MOV RDI, R12
    JMP L100010ed3_98     ; inserted



; ---------------------
; Function: 0x10001147d
; ---------------------
; Entry 10001147d; block 0; address 10001147d
L10001147d_0:
    PUSH RBP
    MOV RBP, RSP
    MOV EAX, 2162688
    CMP EDI, 1980
    JL L10001147d_2
    JMP L10001147d_1     ; inserted

; Entry 10001147d; block 1; address 10001148e
L10001147d_1:
    MOV EAX, EDI
    SHL RAX, 25
    MOV RDI, 18446744007271776256
    ADD RDI, RAX
    MOVSXD RAX, ESI
    SHL RAX, 21
    MOVSXD RDX, EDX
    SHL RDX, 16
    OR RDX, RAX
    OR RDX, RDI
    MOVSXD RAX, ECX
    SHL RAX, 11
    MOVSXD RCX, R8D
    SHL RCX, 5
    OR RCX, RAX
    MOVSXD RAX, R9D
    SHR RAX, 1
    OR RAX, RCX
    OR RAX, RDX
    JMP L10001147d_2     ; inserted

; Entry 10001147d; block 2; address 1000114d2
L10001147d_2:
    POP RBP
    RET 



; ---------------------
; Function: 0x1000114d4
; ---------------------
; Entry 1000114d4; block 0; address 1000114d4
L1000114d4_0:
    PUSH RBP
    MOV RBP, RSP
    SUB RSP, 16
    MOV RAX, qword [RDI]
    INC RAX
    AND RAX, 18446744073709551614
    LEA RDI, [RBP + -8]
    MOV qword [RDI], RAX
    CALL _localtime
    JMP L1000114d4_1     ; inserted

; Entry 1000114d4; block 1; address 1000114f2
L1000114d4_1:
    MOV RCX, RAX
    TEST RAX, RAX
    JNE L1000114d4_3
    JMP L1000114d4_2     ; inserted

; Entry 1000114d4; block 2; address 1000114fa
L1000114d4_2:
    XOR EDI, EDI
    CALL _time
    JMP L1000114d4_4     ; inserted

; Entry 1000114d4; block 3; address 100011517
L1000114d4_3:
    MOV EDX, dword [RCX + 20]
    MOV EAX, 2162688
    CMP EDX, 80
    JL L1000114d4_7
    JMP L1000114d4_6     ; inserted

; Entry 1000114d4; block 4; address 100011501
L1000114d4_4:
    INC RAX
    AND RAX, 18446744073709551614
    LEA RDI, [RBP + -8]
    MOV qword [RDI], RAX
    CALL _localtime
    JMP L1000114d4_5     ; inserted

; Entry 1000114d4; block 5; address 100011514
L1000114d4_5:
    MOV RCX, RAX
    JMP L1000114d4_3     ; inserted

; Entry 1000114d4; block 6; address 100011524
L1000114d4_6:
    SHL RDX, 25
    MOVSXD RAX, dword [RCX]
    MOVSXD R8, dword [RCX + 4]
    MOVSXD RDI, dword [RCX + 8]
    MOVSXD RSI, dword [RCX + 12]
    MOVSXD RCX, dword [RCX + 16]
    SHL RCX, 21
    MOV R9, 18446744071025197056
    ADD R9, RDX
    ADD RCX, 2097152
    SHL RSI, 16
    SHL RDI, 11
    OR RDI, RSI
    OR RDI, RCX
    SHL R8, 5
    SHR RAX, 1
    OR RAX, R8
    OR RAX, R9
    OR RAX, RDI
    JMP L1000114d4_7     ; inserted

; Entry 1000114d4; block 7; address 100011571
L1000114d4_7:
    ADD RSP, 16
    POP RBP
    RET 



; ---------------------
; Function: 0x100011577
; ---------------------
; Entry 100011577; block 0; address 100011577
L100011577_0:
    PUSH RBP
    MOV RBP, RSP
    AND EDI, 4026531840
    XOR EAX, EAX
    CMP EDI, 2684354560
    SETE AL
    POP RBP
    RET 



; ---------------------
; Function: 0x10001158e
; ---------------------
; Entry 10001158e; block 0; address 10001158e
L10001158e_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH RBX
    PUSH RAX
    MOV RBX, RDI
    XOR EDI, EDI
    CALL _time
    JMP L10001158e_1     ; inserted

; Entry 10001158e; block 1; address 10001159e
L10001158e_1:
    LEA RDI, [RBP + -16]
    MOV qword [RDI], RAX
    CALL _localtime
    JMP L10001158e_2     ; inserted

; Entry 10001158e; block 2; address 1000115aa
L10001158e_2:
    MOV dword [RAX + 32], 4294967295
    LEA ECX, [RBX + RBX]
    MOV EDX, EBX
    SHR EDX, 5
    MOV ESI, EBX
    SHR ESI, 11
    MOV EDI, EBX
    SHR EDI, 16
    MOVD XMM0, ECX
    PINSRD XMM0, EDX, 1
    PINSRD XMM0, ESI, 2
    PINSRD XMM0, EDI, 3
    PAND XMM0, oword [rel L__TEXT___const + 16]
    MOVDQU oword [RAX], XMM0
    MOV ECX, EBX
    SHR ECX, 21
    AND ECX, 15
    DEC ECX
    MOV dword [RAX + 16], ECX
    SHR EBX, 25
    ADD EBX, 80
    MOV dword [RAX + 20], EBX
    MOV RDI, RAX
    CALL _mktime
    JMP L10001158e_3     ; inserted

; Entry 10001158e; block 3; address 100011603
L10001158e_3:
    ADD RSP, 8
    POP RBX
    POP RBP
    RET 



; ---------------------
; Function: 0x10001160a
; ---------------------
; Entry 10001160a; block 0; address 10001160a
L10001160a_0:
    PUSH RBP
    MOV RBP, RSP
    POP RBP
    JMP _unlink



; ---------------------
; Function: 0x100011614
; ---------------------
; Entry 100011614; block 0; address 100011614
L100011614_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 152
    MOV R14, RSI
    MOV R15, RDI
    LEA RSI, [RBP + -184]
    CALL _lstat$INODE64
    JMP L100011614_1     ; inserted

; Entry 100011614; block 1; address 10001163a
L100011614_1:
    TEST EAX, EAX
    JE L100011614_3
    JMP L100011614_2     ; inserted

; Entry 100011614; block 2; address 10001163e
L100011614_2:
    MOV RDI, R14
    MOV RSI, R15
    CALL _rename
    JMP L100011614_4     ; inserted

; Entry 100011614; block 3; address 100011668
L100011614_3:
    CMP word [RBP + -178], 1
    JA L100011614_9
    JMP L100011614_10     ; inserted

; Entry 100011614; block 4; address 100011649
L100011614_4:
    TEST EAX, EAX
    JE L100011614_6
    JMP L100011614_5     ; inserted

; Entry 100011614; block 5; address 100011651
L100011614_5:
    CALL ___error
    JMP L100011614_7     ; inserted

; Entry 100011614; block 6; address 100011751
L100011614_6:
    XOR EAX, EAX
    JMP L100011614_24     ; inserted

; Entry 100011614; block 7; address 100011656
L100011614_7:
    MOV RCX, RAX
    MOV EAX, 15
    CMP dword [RCX], 18
    JE L100011614_9
    JMP L100011614_8     ; inserted

; Entry 100011614; block 8; address 100011663
L100011614_8:
    JMP L100011614_24

; Entry 100011614; block 9; address 100011689
L100011614_9:
    LEA RSI, [rel L__TEXT___cstring_6381]
    MOV RDI, R14
    CALL _fopen
    JMP L100011614_12     ; inserted

; Entry 100011614; block 10; address 100011672
L100011614_10:
    MOVZX EAX, word [RBP + -180]
    AND EAX, 61440
    CMP EAX, 40960
    JNE L100011614_11
    JMP L100011614_9     ; inserted

; Entry 100011614; block 11; address 100011731
L100011614_11:
    MOV RDI, R15
    CALL _unlink
    JMP L100011614_27     ; inserted

; Entry 100011614; block 12; address 100011698
L100011614_12:
    TEST RAX, RAX
    JE L100011614_14
    JMP L100011614_13     ; inserted

; Entry 100011614; block 13; address 10001169d
L100011614_13:
    MOV RBX, RAX
    LEA RSI, [rel L__TEXT___cstring_8627]
    MOV RDI, R15
    CALL _fopen
    JMP L100011614_15     ; inserted

; Entry 100011614; block 14; address 100011700
L100011614_14:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_36274]
    MOV RDX, R14
    XOR EAX, EAX
    CALL _fprintf
    JMP L100011614_25     ; inserted

; Entry 100011614; block 15; address 1000116af
L100011614_15:
    TEST RAX, RAX
    JE L100011614_17
    JMP L100011614_16     ; inserted

; Entry 100011614; block 16; address 1000116b4
L100011614_16:
    MOV R13, RAX
    MOV RDI, RBX
    MOV RSI, RAX
    MOV RDX, 18446744073709551615
    CALL L100011765_0
    JMP L100011614_18     ; inserted

; Entry 100011614; block 17; address 100011722
L100011614_17:
    MOV RDI, RBX
    CALL _fclose
    JMP L100011614_26     ; inserted

; Entry 100011614; block 18; address 1000116c9
L100011614_18:
    MOV R12D, EAX
    MOV RDI, RBX
    CALL _fclose
    JMP L100011614_19     ; inserted

; Entry 100011614; block 19; address 1000116d4
L100011614_19:
    MOV RDI, R13
    CALL _fclose
    JMP L100011614_20     ; inserted

; Entry 100011614; block 20; address 1000116dc
L100011614_20:
    OR EAX, R12D
    JE L100011614_22
    JMP L100011614_21     ; inserted

; Entry 100011614; block 21; address 1000116e1
L100011614_21:
    MOV RDI, R15
    CALL _unlink
    JMP L100011614_23     ; inserted

; Entry 100011614; block 22; address 100011749
L100011614_22:
    MOV RDI, R14
    CALL _unlink
    JMP L100011614_6     ; inserted

; Entry 100011614; block 23; address 1000116e9
L100011614_23:
    CMP R12D, 10
    MOV ECX, 14
    MOV EAX, R12D
    CMOVE EAX, ECX
    TEST R12D, R12D
    CMOVE EAX, ECX
    JMP L100011614_24

; Entry 100011614; block 24; address 100011753
L100011614_24:
    ADD RSP, 152
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100011614; block 25; address 10001171b
L100011614_25:
    MOV EAX, 10
    JMP L100011614_24

; Entry 100011614; block 26; address 10001172a
L100011614_26:
    MOV EAX, 15
    JMP L100011614_24

; Entry 100011614; block 27; address 100011739
L100011614_27:
    MOV ECX, EAX
    MOV EAX, 15
    TEST ECX, ECX
    JNE L100011614_24
    JMP L100011614_28     ; inserted

; Entry 100011614; block 28; address 100011744
L100011614_28:
    JMP L100011614_2



; ---------------------
; Function: 0x100011765
; ---------------------
; Entry 100011765; block 0; address 100011765
L100011765_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 24
    MOV R13, RDX
    MOV qword [RBP + -56], RSI
    MOV qword [RBP + -48], RDI
    MOV EDI, 16384
    CALL _malloc
    JMP L100011765_1     ; inserted

; Entry 100011765; block 1; address 10001178b
L100011765_1:
    TEST RAX, RAX
    JE L100011765_3
    JMP L100011765_2     ; inserted

; Entry 100011765; block 2; address 100011790
L100011765_2:
    MOV R15, RAX
    TEST R13, R13
    JE L100011765_5
    JMP L100011765_4     ; inserted

; Entry 100011765; block 3; address 1000117fc
L100011765_3:
    MOV EAX, 4
    JMP L100011765_18

; Entry 100011765; block 4; address 10001179c
L100011765_4:
    XOR R12D, R12D
    MOV R14D, 16384
    JMP L100011765_12     ; inserted

; Entry 100011765; block 5; address 10001181f
L100011765_5:
    MOV RDI, R15
    CALL _free
    JMP L100011765_19     ; inserted

; Entry 100011765; block 6; address 1000117cb
L100011765_6:
    TEST RAX, RAX
    JE L100011765_8
    JMP L100011765_7     ; inserted

; Entry 100011765; block 7; address 1000117d0
L100011765_7:
    MOV RBX, RAX
    MOV ESI, 1
    MOV RDI, R15
    MOV RDX, RAX
    MOV RCX, qword [RBP + -56]
    CALL _fwrite
    JMP L100011765_9     ; inserted

; Entry 100011765; block 8; address 100011803
L100011765_8:
    MOV RDI, qword [RBP + -48]
    CALL _ferror
    JMP L100011765_15     ; inserted

; Entry 100011765; block 9; address 1000117e7
L100011765_9:
    CMP RAX, RBX
    JNE L100011765_11
    JMP L100011765_10     ; inserted

; Entry 100011765; block 10; address 1000117ec
L100011765_10:
    ADD R12, RBX
    CMP R13, 18446744073709551615
    JE L100011765_12
    JMP L100011765_13     ; inserted

; Entry 100011765; block 11; address 10001182b
L100011765_11:
    MOV RDI, R15
    CALL _free
    JMP L100011765_20     ; inserted

; Entry 100011765; block 12; address 1000117a5
L100011765_12:
    MOV RDX, R13
    SUB RDX, R12
    CMP RDX, R14
    CMOVAE RDX, R14
    CMP R13, 18446744073709551615
    CMOVE RDX, R14
    MOV ESI, 1
    MOV RDI, R15
    MOV RCX, qword [RBP + -48]
    CALL _fread
    JMP L100011765_6     ; inserted

; Entry 100011765; block 13; address 1000117f5
L100011765_13:
    CMP R12, R13
    JB L100011765_12
    JMP L100011765_14     ; inserted

; Entry 100011765; block 14; address 1000117fa
L100011765_14:
    JMP L100011765_5

; Entry 100011765; block 15; address 10001180c
L100011765_15:
    TEST EAX, EAX
    JE L100011765_5
    JMP L100011765_16     ; inserted

; Entry 100011765; block 16; address 100011810
L100011765_16:
    MOV RDI, R15
    CALL _free
    JMP L100011765_17     ; inserted

; Entry 100011765; block 17; address 100011818
L100011765_17:
    MOV EAX, 11
    JMP L100011765_18

; Entry 100011765; block 18; address 100011858
L100011765_18:
    ADD RSP, 24
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100011765; block 19; address 100011827
L100011765_19:
    XOR EAX, EAX
    JMP L100011765_18

; Entry 100011765; block 20; address 100011833
L100011765_20:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RCX, qword [RAX]
    LEA RDI, [rel L__TEXT___cstring_36299]
    MOV ESI, 20
    MOV EDX, 1
    CALL _fwrite
    JMP L100011765_21     ; inserted

; Entry 100011765; block 21; address 100011853
L100011765_21:
    MOV EAX, 10
    JMP L100011765_18     ; inserted



; ---------------------
; Function: 0x100011867
; ---------------------
; Entry 100011867; block 0; address 100011867
L100011867_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH RBX
    SUB RSP, 152
    LEA RBX, [RBP + -152]
    MOV RSI, RBX
    CALL _stat$INODE64
    JMP L100011867_1     ; inserted

; Entry 100011867; block 1; address 100011882
L100011867_1:
    XOR ECX, ECX
    TEST EAX, EAX
    MOVZX EAX, word [RBX + 4]
    CMOVNE EAX, ECX
    ADD RSP, 152
    POP RBX
    POP RBP
    RET 



; ---------------------
; Function: 0x100011897
; ---------------------
; Entry 100011897; block 0; address 100011897
L100011897_0:
    PUSH RBP
    MOV RBP, RSP
    MOVZX ESI, SI
    POP RBP
    JMP _chmod



; ---------------------
; Function: 0x100011949
; ---------------------
; Entry 100011949; block 0; address 100011949
L100011949_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 56
    MOV RBX, RDI
    MOV EDI, 16384
    CALL _malloc
    JMP L100011949_1     ; inserted

; Entry 100011949; block 1; address 100011967
L100011949_1:
    MOV ECX, 4
    TEST RAX, RAX
    JE L100011949_3
    JMP L100011949_2     ; inserted

; Entry 100011949; block 2; address 100011975
L100011949_2:
    LEA RCX, [rel L__DATA___common + 292]
    CMP dword [RCX], 0
    JE L100011949_5
    JMP L100011949_4     ; inserted

; Entry 100011949; block 3; address 100012110
L100011949_3:
    MOV EAX, ECX
    ADD RSP, 56
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100011949; block 4; address 100011981
L100011949_4:
    LEA RCX, [rel L__DATA___common + 160]
    CMP dword [RCX], 0
    JNE L100011949_5
    JMP L100011949_6     ; inserted

; Entry 100011949; block 5; address 10001199b
L100011949_5:
    LEA RCX, [rel L__DATA___common + 64]
    MOV R14D, dword [RCX]
    CMP R14D, 2
    SETE CL
    CMP RBX, 18446744073709551614
    SETE DL
    AND DL, CL
    MOV byte [RBP + -43], DL
    CMP DL, 1
    MOV qword [RBP + -56], RAX
    MOV qword [RBP + -80], RBX
    JNE L100011949_8
    JMP L100011949_7     ; inserted

; Entry 100011949; block 6; address 10001198d
L100011949_6:
    LEA RCX, [rel L__DATA___common + 144]
    MOV qword [RCX], 18446744073709551615
    JMP L100011949_5     ; inserted

; Entry 100011949; block 7; address 1000119c5
L100011949_7:
    LEA RAX, [rel L__DATA___common + 400]
    MOV RDI, qword [RAX]
    CALL _ftello
    JMP L100011949_9     ; inserted

; Entry 100011949; block 8; address 1000119ec
L100011949_8:
    LEA RAX, [rel L__DATA___common + 104]
    MOV dword [RAX], 0
    CMP RBX, 18446744073709551615
    SETE byte [RBP + -41]
    TEST RBX, RBX
    JE L100011949_11
    JMP L100011949_10     ; inserted

; Entry 100011949; block 9; address 1000119d4
L100011949_9:
    MOV qword [RBP + -88], RAX
    XOR EAX, EAX
    MOV dword [RBP + -48], EAX
    LEA RCX, [rel L__DATA___common + 104]
    MOV dword [RCX], EAX
    MOV byte [RBP + -41], 1
    JMP L100011949_12

; Entry 100011949; block 10; address 100011a0a
L100011949_10:
    XOR EAX, EAX
    MOV qword [RBP + -88], RAX
    MOV RBX, qword [RBP + -80]
    JMP L100011949_12     ; inserted

; Entry 100011949; block 11; address 1000120d6
L100011949_11:
    MOV RDI, qword [RBP + -56]
    CALL _free
    JMP L100011949_137     ; inserted

; Entry 100011949; block 12; address 100011a14
L100011949_12:
    CMP RBX, 18446744073709551614
    SETNE AL
    CMP R14D, 2
    SETNE CL
    OR CL, AL
    MOV byte [RBP + -42], CL
    XOR EAX, EAX
    MOV qword [RBP + -72], RAX
    JMP L100011949_106     ; inserted

; Entry 100011949; block 13; address 100011a65
L100011949_13:
    MOV R14, RAX
    MOV RCX, qword [RBX]
    MOV ESI, 1
    MOV RDI, qword [RBP + -56]
    MOV RDX, R13
    CALL _fread
    JMP L100011949_14     ; inserted

; Entry 100011949; block 14; address 100011a7c
L100011949_14:
    TEST RAX, RAX
    JE L100011949_16
    JMP L100011949_15     ; inserted

; Entry 100011949; block 15; address 100011a85
L100011949_15:
    MOV R12, RAX
    CMP byte [RBP + -43], 0
    JE L100011949_18
    JMP L100011949_17     ; inserted

; Entry 100011949; block 16; address 1000120a2
L100011949_16:
    TEST R13, R13
    JE L100011949_133
    JMP L100011949_132     ; inserted

; Entry 100011949; block 17; address 100011a92
L100011949_17:
    XOR EAX, EAX
    LEA RCX, [rel L__DATA___common + 112]
    MOV qword [RCX], RAX
    LEA RCX, [rel L__DATA___common + 120]
    MOV qword [RCX], RAX
    LEA RCX, [rel L__DATA___common + 128]
    MOV qword [RCX], RAX
    MOV R13, qword [RBP + -56]
    CMP byte [R13], 80
    JNE L100011949_20
    JMP L100011949_19     ; inserted

; Entry 100011949; block 18; address 100011c9b
L100011949_18:
    MOV R14, qword [RBP + -72]
    MOV RBX, R12
    MOV R13, qword [RBP + -56]
    JMP L100011949_53

; Entry 100011949; block 19; address 100011ac1
L100011949_19:
    CMP byte [R13 + 1], 75
    JNE L100011949_20
    JMP L100011949_21     ; inserted

; Entry 100011949; block 20; address 100011bf6
L100011949_20:
    TEST R12, R12
    MOV RAX, R12
    MOV ECX, 1
    CMOVE RAX, RCX
    XOR EBX, EBX
    MOV R14, qword [RBP + -64]
    JMP L100011949_47     ; inserted

; Entry 100011949; block 21; address 100011acc
L100011949_21:
    CMP byte [R13 + 2], 7
    JNE L100011949_20
    JMP L100011949_22     ; inserted

; Entry 100011949; block 22; address 100011ad7
L100011949_22:
    CMP byte [R13 + 3], 8
    JNE L100011949_20
    JMP L100011949_23     ; inserted

; Entry 100011949; block 23; address 100011ae2
L100011949_23:
    LEA RAX, [rel L__DATA___common + 104]
    MOV dword [RAX], 0
    LEA RAX, [rel L__DATA___common + 304]
    CMP dword [RAX], 0
    JE L100011949_25
    JMP L100011949_24     ; inserted

; Entry 100011949; block 24; address 100011afb
L100011949_24:
    CMP R12, 24
    JB L100011949_27
    JMP L100011949_26     ; inserted

; Entry 100011949; block 25; address 100011b40
L100011949_25:
    CMP R12, 16
    JB L100011949_27
    JMP L100011949_30     ; inserted

; Entry 100011949; block 26; address 100011b05
L100011949_26:
    MOV EAX, dword [R13 + 4]
    LEA RCX, [rel L__DATA___common + 112]
    MOV qword [RCX], RAX
    MOV RAX, qword [R13 + 8]
    LEA RCX, [rel L__DATA___common + 120]
    MOV qword [RCX], RAX
    MOV RCX, qword [R13 + 16]
    LEA RDX, [rel L__DATA___common + 128]
    MOV qword [RDX], RCX
    MOV RCX, R14
    SUB RCX, qword [RBP + -88]
    CMP RCX, RAX
    JNE L100011949_29
    JMP L100011949_28     ; inserted

; Entry 100011949; block 27; address 100011cab
L100011949_27:
    MOV R14, qword [RBP + -64]
    JMP L100011949_64

; Entry 100011949; block 28; address 100011b3b
L100011949_28:
    LEA RAX, [rel L__DATA___common + 104]
    MOV dword [RAX], 1
    LEA RBX, [rel L__DATA___common + 400]
    MOV RDI, qword [RBX]
    CALL _ftello
    JMP L100011949_54     ; inserted

; Entry 100011949; block 29; address 100011b84
L100011949_29:
    LEA RAX, [rel L__DATA___common + 400]
    MOV RDI, qword [RAX]
    ADD R14, 4
    MOV RSI, R14
    XOR EDX, EDX
    CALL _fseeko
    JMP L100011949_32     ; inserted

; Entry 100011949; block 30; address 100011b4a
L100011949_30:
    MOV EAX, dword [R13 + 4]
    LEA RCX, [rel L__DATA___common + 112]
    MOV qword [RCX], RAX
    MOV EAX, dword [R13 + 8]
    LEA RCX, [rel L__DATA___common + 120]
    MOV qword [RCX], RAX
    MOV ECX, dword [R13 + 12]
    LEA RDX, [rel L__DATA___common + 128]
    MOV qword [RDX], RCX
    MOV RCX, R14
    SUB RCX, qword [RBP + -88]
    CMP RCX, RAX
    JE L100011949_31
    JMP L100011949_29     ; inserted

; Entry 100011949; block 31; address 100011d14
L100011949_31:
    LEA RAX, [rel L__DATA___common + 104]
    MOV dword [RAX], 1
    LEA RBX, [rel L__DATA___common + 400]
    MOV RDI, qword [RBX]
    CALL _ftello
    JMP L100011949_59     ; inserted

; Entry 100011949; block 32; address 100011b9c
L100011949_32:
    TEST EAX, EAX
    JE L100011949_34
    JMP L100011949_33     ; inserted

; Entry 100011949; block 33; address 100011ba0
L100011949_33:
    MOV EDI, 11
    LEA RSI, [rel L__TEXT___cstring_36320]
    CALL L100002e30_0

; Entry 100011949; block 34; address 100011bb1
L100011949_34:
    MOV ESI, 1
    MOV EDX, 4
    MOV RDI, R13
    XOR ECX, ECX
    CALL L1000121b7_0
    JMP L100011949_35     ; inserted

; Entry 100011949; block 35; address 100011bc5
L100011949_35:
    CMP RAX, 4
    JNE L100011949_37
    JMP L100011949_36     ; inserted

; Entry 100011949; block 36; address 100011bcf
L100011949_36:
    MOV RAX, qword [RBP + -64]
    ADD RAX, 4
    MOV qword [RBP + -64], RAX
    CMP RAX, 18446744073709551614
    SETB AL
    OR AL, byte [RBP + -41]
    ADD R15, 18446744073709551612
    TEST AL, AL
    JNE L100011949_38
    JMP L100011949_39     ; inserted

; Entry 100011949; block 37; address 1000120e3
L100011949_37:
    MOV RDI, R13
    CALL _free
    JMP L100011949_138     ; inserted

; Entry 100011949; block 38; address 100011a3c
L100011949_38:
    MOV EAX, 16384
    CMP R15, RAX
    MOV R13D, 16384
    CMOVB R13, R15
    CMP byte [RBP + -41], 0
    CMOVNE R13, RAX
    LEA RBX, [rel L__DATA___common + 400]
    MOV RDI, qword [RBX]
    CALL _ftello
    JMP L100011949_13     ; inserted

; Entry 100011949; block 39; address 100011bf1
L100011949_39:
    JMP L100011949_11

; Entry 100011949; block 40; address 100011c10
L100011949_40:
    MOV DL, byte [RBP + RCX-1]
    MOV byte [RBP + RCX-1], DL
    INC RCX
    CMP RCX, 4
    JNE L100011949_40
    JMP L100011949_41     ; inserted

; Entry 100011949; block 41; address 100011c21
L100011949_41:
    MOV CL, byte [R13 + RBX]
    MOV byte [RBP + -45], CL
    CMP byte [RBP + -48], 80
    JNE L100011949_43
    JMP L100011949_42     ; inserted

; Entry 100011949; block 42; address 100011c2f
L100011949_42:
    CMP byte [RBP + -47], 75
    JNE L100011949_43
    JMP L100011949_44     ; inserted

; Entry 100011949; block 43; address 100011c40
L100011949_43:
    INC RBX
    CMP RBX, RAX
    JNE L100011949_47
    JMP L100011949_48     ; inserted

; Entry 100011949; block 44; address 100011c35
L100011949_44:
    CMP CL, 8
    JNE L100011949_43
    JMP L100011949_45     ; inserted

; Entry 100011949; block 45; address 100011c3a
L100011949_45:
    CMP byte [RBP + -46], 7
    JE L100011949_46
    JMP L100011949_43     ; inserted

; Entry 100011949; block 46; address 100011c50
L100011949_46:
    ADD RBX, 18446744073709551613
    LEA RAX, [rel L__DATA___common + 400]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 552]
    MOV RSI, qword [RAX]
    ADD RSI, RBX
    XOR EDX, EDX
    CALL _fseeko
    JMP L100011949_49     ; inserted

; Entry 100011949; block 47; address 100011c0b
L100011949_47:
    MOV ECX, 1
    JMP L100011949_40     ; inserted

; Entry 100011949; block 48; address 100011c48
L100011949_48:
    MOV RBX, R12
    JMP L100011949_53

; Entry 100011949; block 49; address 100011c72
L100011949_49:
    TEST EAX, EAX
    JE L100011949_51
    JMP L100011949_50     ; inserted

; Entry 100011949; block 50; address 100011c76
L100011949_50:
    MOV EDI, 11
    LEA RSI, [rel L__TEXT___cstring_36320]
    CALL L100002e30_0

; Entry 100011949; block 51; address 100011c87
L100011949_51:
    LEA RAX, [rel L__DATA___common + 400]
    MOV RDI, qword [RAX]
    CALL _ftello
    JMP L100011949_52     ; inserted

; Entry 100011949; block 52; address 100011c96
L100011949_52:
    JMP L100011949_53

; Entry 100011949; block 53; address 100011d72
L100011949_53:
    LEA RAX, [rel L__DATA___common + 104]
    CMP dword [RAX], 0
    MOV R12, RBX
    MOV RAX, R14
    MOV qword [RBP + -72], R14
    JNE L100011949_65
    JMP L100011949_64     ; inserted

; Entry 100011949; block 54; address 100011cd0
L100011949_54:
    MOV RDI, qword [RBX]
    ADD R14, 24
    MOV RSI, R14
    XOR EDX, EDX
    CALL _fseeko
    JMP L100011949_55     ; inserted

; Entry 100011949; block 55; address 100011ce1
L100011949_55:
    TEST EAX, EAX
    MOV R14, qword [RBP + -64]
    JE L100011949_57
    JMP L100011949_56     ; inserted

; Entry 100011949; block 56; address 100011ce9
L100011949_56:
    MOV EDI, 11
    LEA RSI, [rel L__TEXT___cstring_36320]
    CALL L100002e30_0

; Entry 100011949; block 57; address 100011cfa
L100011949_57:
    LEA RAX, [rel L__DATA___common + 400]
    MOV RDI, qword [RAX]
    CALL _ftello
    JMP L100011949_58     ; inserted

; Entry 100011949; block 58; address 100011d09
L100011949_58:
    MOV qword [RBP + -88], RAX
    MOV EBX, 24
    JMP L100011949_53

; Entry 100011949; block 59; address 100011d30
L100011949_59:
    MOV RDI, qword [RBX]
    ADD R14, 16
    MOV RSI, R14
    XOR EDX, EDX
    CALL _fseeko
    JMP L100011949_60     ; inserted

; Entry 100011949; block 60; address 100011d41
L100011949_60:
    TEST EAX, EAX
    MOV R14, qword [RBP + -64]
    JE L100011949_62
    JMP L100011949_61     ; inserted

; Entry 100011949; block 61; address 100011d49
L100011949_61:
    MOV EDI, 11
    LEA RSI, [rel L__TEXT___cstring_36320]
    CALL L100002e30_0

; Entry 100011949; block 62; address 100011d5a
L100011949_62:
    LEA RAX, [rel L__DATA___common + 400]
    MOV RDI, qword [RAX]
    CALL _ftello
    JMP L100011949_63     ; inserted

; Entry 100011949; block 63; address 100011d69
L100011949_63:
    MOV qword [RBP + -88], RAX
    MOV EBX, 16
    JMP L100011949_53     ; inserted

; Entry 100011949; block 64; address 100011d88
L100011949_64:
    MOV ESI, 1
    MOV RDI, R13
    MOV RDX, R12
    XOR ECX, ECX
    CALL L1000121b7_0
    JMP L100011949_66     ; inserted

; Entry 100011949; block 65; address 100011dad
L100011949_65:
    LEA RAX, [rel L__DATA___common + 292]
    CMP dword [RAX], 0
    JE L100011949_69
    JMP L100011949_68     ; inserted

; Entry 100011949; block 66; address 100011d9a
L100011949_66:
    CMP RAX, R12
    JNE L100011949_37
    JMP L100011949_67     ; inserted

; Entry 100011949; block 67; address 100011da3
L100011949_67:
    ADD R14, R12
    MOV RAX, R14
    MOV qword [RBP + -72], R14
    JMP L100011949_65     ; inserted

; Entry 100011949; block 68; address 100011dbd
L100011949_68:
    LEA RAX, [rel L__DATA___common + 160]
    CMP dword [RAX], 0
    JNE L100011949_69
    JMP L100011949_70     ; inserted

; Entry 100011949; block 69; address 100011e9a
L100011949_69:
    LEA RAX, [rel L__DATA___common + 104]
    CMP dword [RAX], 0
    JNE L100011949_11
    JMP L100011949_84     ; inserted

; Entry 100011949; block 70; address 100011dcd
L100011949_70:
    LEA RAX, [rel L__DATA___common + 136]
    MOV RCX, qword [RAX]
    TEST RCX, RCX
    JLE L100011949_72
    JMP L100011949_71     ; inserted

; Entry 100011949; block 71; address 100011ddc
L100011949_71:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    LEA RAX, [rel L__DATA___common + 144]
    MOV RAX, qword [RAX]
    JE L100011949_74
    JMP L100011949_73     ; inserted

; Entry 100011949; block 72; address 100011e49
L100011949_72:
    LEA RAX, [rel L__DATA___common + 144]
    MOV RAX, qword [RAX]
    JMP L100011949_78     ; inserted

; Entry 100011949; block 73; address 100011df2
L100011949_73:
    CMP RAX, 18446744073709551615
    JNE L100011949_74
    JMP L100011949_75     ; inserted

; Entry 100011949; block 74; address 100011e2e
L100011949_74:
    ADD RAX, R12
    CMP RCX, RAX
    MOV EDX, 0
    CMOVLE RAX, RDX
    LEA RDX, [rel L__DATA___common + 144]
    MOV qword [RDX], RAX
    JMP L100011949_78

; Entry 100011949; block 75; address 100011df8
L100011949_75:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RBX]
    MOV EDI, 32
    CALL _putc
    JMP L100011949_76     ; inserted

; Entry 100011949; block 76; address 100011e0c
L100011949_76:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L100011949_77     ; inserted

; Entry 100011949; block 77; address 100011e14
L100011949_77:
    LEA RCX, [rel L__DATA___common + 144]
    MOV RAX, qword [RCX]
    INC RAX
    MOV qword [RCX], RAX
    LEA RCX, [rel L__DATA___common + 136]
    MOV RCX, qword [RCX]
    JMP L100011949_74     ; inserted

; Entry 100011949; block 78; address 100011e53
L100011949_78:
    LEA RDX, [rel L__DATA___data + 4508]
    MOV EDX, dword [RDX]
    LEA RSI, [rel L__DATA___common + 60]
    OR EDX, dword [RSI]
    JE L100011949_69
    JMP L100011949_79     ; inserted

; Entry 100011949; block 79; address 100011e67
L100011949_79:
    TEST RCX, RCX
    JE L100011949_69
    JMP L100011949_80     ; inserted

; Entry 100011949; block 80; address 100011e6c
L100011949_80:
    TEST RAX, RAX
    JNE L100011949_69
    JMP L100011949_81     ; inserted

; Entry 100011949; block 81; address 100011e71
L100011949_81:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RBX]
    MOV EDI, 46
    CALL _putc
    JMP L100011949_82     ; inserted

; Entry 100011949; block 82; address 100011e85
L100011949_82:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L100011949_83     ; inserted

; Entry 100011949; block 83; address 100011e8d
L100011949_83:
    LEA RAX, [rel L__DATA___common + 604]
    MOV dword [RAX], 1
    JMP L100011949_69     ; inserted

; Entry 100011949; block 84; address 100011eaa
L100011949_84:
    MOV R15, qword [RBP + -80]
    CMP R15, 18446744073709551615
    SETNE AL
    CMP qword [RBP + -72], R15
    SETB CL
    AND CL, AL
    TEST byte [RBP + -42], CL
    JE L100011949_86
    JMP L100011949_85     ; inserted

; Entry 100011949; block 85; address 100011ec7
L100011949_85:
    LEA RAX, [rel L__DATA___common + 400]
    MOV RDI, qword [RAX]
    CALL _feof
    JMP L100011949_87     ; inserted

; Entry 100011949; block 86; address 100011f9d
L100011949_86:
    CMP qword [RBP + -72], R15
    SETB AL
    OR AL, byte [RBP + -41]
    JNE L100011949_106
    JMP L100011949_107     ; inserted

; Entry 100011949; block 87; address 100011ed6
L100011949_87:
    TEST EAX, EAX
    JE L100011949_86
    JMP L100011949_88     ; inserted

; Entry 100011949; block 88; address 100011ede
L100011949_88:
    LEA RAX, [rel L__DATA___common + 448]
    MOV RSI, qword [RAX]
    INC RSI
    MOV qword [RAX], RSI
    LEA RAX, [rel L__DATA___common + 440]
    MOV RAX, qword [RAX]
    CMP RSI, RAX
    JAE L100011949_11
    JMP L100011949_89     ; inserted

; Entry 100011949; block 89; address 100011f01
L100011949_89:
    DEC RAX
    LEA RCX, [rel L__DATA___common + 408]
    MOV R14, qword [RCX]
    CMP RSI, RAX
    JNE L100011949_91
    JMP L100011949_90     ; inserted

; Entry 100011949; block 90; address 100011f13
L100011949_90:
    MOV RDI, R14
    CALL _strlen
    JMP L100011949_92     ; inserted

; Entry 100011949; block 91; address 100011f3d
L100011949_91:
    MOV RDI, R14
    CALL L1000127e1_0
    JMP L100011949_97     ; inserted

; Entry 100011949; block 92; address 100011f1b
L100011949_92:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100011949_93     ; inserted

; Entry 100011949; block 93; address 100011f24
L100011949_93:
    TEST RAX, RAX
    JE L100011949_95
    JMP L100011949_94     ; inserted

; Entry 100011949; block 94; address 100011f2d
L100011949_94:
    MOV R12, RAX
    MOV RDI, RAX
    MOV RSI, R14
    CALL _strcpy
    JMP L100011949_96     ; inserted

; Entry 100011949; block 95; address 10001219e
L100011949_95:
    LEA RDI, [rel L__TEXT___cstring_34074]
    MOV RSI, R14
    CALL L1000034f4_0
    JMP L100011949_148     ; inserted

; Entry 100011949; block 96; address 100011f3b
L100011949_96:
    JMP L100011949_98

; Entry 100011949; block 97; address 100011f45
L100011949_97:
    MOV R12, RAX
    JMP L100011949_98     ; inserted

; Entry 100011949; block 98; address 100011f48
L100011949_98:
    MOV R15, qword [RBP + -80]
    LEA R13, [rel L__DATA___common + 64]
    LEA R14, [rel L__DATA___common + 400]
    MOV RDI, qword [R14]
    CALL _fclose
    JMP L100011949_99     ; inserted

; Entry 100011949; block 99; address 100011f62
L100011949_99:
    MOV RDI, R12
    LEA RSI, [rel L__TEXT___cstring_6381]
    CALL _fopen
    JMP L100011949_100     ; inserted

; Entry 100011949; block 100; address 100011f71
L100011949_100:
    MOV qword [R14], RAX
    TEST RAX, RAX
    JE L100011949_102
    JMP L100011949_101     ; inserted

; Entry 100011949; block 101; address 100011f79
L100011949_101:
    MOV EBX, dword [R13]
    LEA RAX, [rel L__DATA___common + 96]
    MOV R14, qword [RAX]
    MOV RDI, R12
    CALL _free
    JMP L100011949_103     ; inserted

; Entry 100011949; block 102; address 100011fb2
L100011949_102:
    LEA RBX, [rel L__DATA___common + 448]
    JMP L100011949_130     ; inserted

; Entry 100011949; block 103; address 100011f8f
L100011949_103:
    CMP EBX, 2
    JNE L100011949_86
    JMP L100011949_104     ; inserted

; Entry 100011949; block 104; address 100011f94
L100011949_104:
    TEST R14, R14
    JNE L100011949_105
    JMP L100011949_86     ; inserted

; Entry 100011949; block 105; address 100012129
L100011949_105:
    MOV RDI, qword [RBP + -56]
    CALL _free
    JMP L100011949_140     ; inserted

; Entry 100011949; block 106; address 100011a2d
L100011949_106:
    MOV R15, qword [RBP + -80]
    MOV RAX, qword [RBP + -72]
    SUB R15, RAX
    MOV qword [RBP + -64], RAX
    JMP L100011949_38     ; inserted

; Entry 100011949; block 107; address 100011fad
L100011949_107:
    JMP L100011949_11

; Entry 100011949; block 108; address 100011fc0
L100011949_108:
    LEA RAX, [rel L__DATA___common + 96]
    CMP qword [RAX], 0
    JNE L100011949_110
    JMP L100011949_109     ; inserted

; Entry 100011949; block 109; address 100011fd1
L100011949_109:
    MOV RDI, qword [RBX]
    CALL L1000128e3_0
    JMP L100011949_111     ; inserted

; Entry 100011949; block 110; address 100012121
L100011949_110:
    MOV RDI, R12
    CALL _free
    JMP L100011949_105     ; inserted

; Entry 100011949; block 111; address 100011fd9
L100011949_111:
    CMP EAX, 2
    JE L100011949_113
    JMP L100011949_112     ; inserted

; Entry 100011949; block 112; address 100011fe2
L100011949_112:
    CMP EAX, 9
    JE L100011949_115
    JMP L100011949_114     ; inserted

; Entry 100011949; block 113; address 100012139
L100011949_113:
    LEA R14, [rel L__TEXT___cstring_244]
    MOV RDI, R14
    MOV ESI, 1
    CALL L100003300_0
    JMP L100011949_141     ; inserted

; Entry 100011949; block 114; address 100011feb
L100011949_114:
    CMP dword [R13], 2
    JNE L100011949_117
    JMP L100011949_116     ; inserted

; Entry 100011949; block 115; address 100012174
L100011949_115:
    LEA RDI, [rel L__TEXT___cstring_32264]
    MOV RSI, R12
    CALL L1000034f4_0
    JMP L100011949_145     ; inserted

; Entry 100011949; block 116; address 100011ff2
L100011949_116:
    LEA RAX, [rel L__DATA___common + 96]
    CMP qword [RAX], 0
    JE L100011949_117
    JMP L100011949_118     ; inserted

; Entry 100011949; block 117; address 100012019
L100011949_117:
    MOV RSI, qword [RBX]
    JMP L100011949_120     ; inserted

; Entry 100011949; block 118; address 100011fff
L100011949_118:
    LEA RDI, [rel L__TEXT___cstring_36351]
    MOV RSI, R12
    CALL L1000034f4_0
    JMP L100011949_119     ; inserted

; Entry 100011949; block 119; address 10001200e
L100011949_119:
    MOV RSI, qword [RBX]
    INC RSI
    MOV qword [RBX], RSI
    JMP L100011949_120

; Entry 100011949; block 120; address 10001201c
L100011949_120:
    LEA RAX, [rel L__DATA___common + 440]
    MOV RAX, qword [RAX]
    DEC RAX
    CMP RSI, RAX
    JNE L100011949_122
    JMP L100011949_121     ; inserted

; Entry 100011949; block 121; address 10001202e
L100011949_121:
    LEA RAX, [rel L__DATA___common + 408]
    MOV R14, qword [RAX]
    MOV RDI, R14
    CALL _strlen
    JMP L100011949_123     ; inserted

; Entry 100011949; block 122; address 100012069
L100011949_122:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RDI, qword [RAX]
    CALL L1000127e1_0
    JMP L100011949_127     ; inserted

; Entry 100011949; block 123; address 100012040
L100011949_123:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100011949_124     ; inserted

; Entry 100011949; block 124; address 100012049
L100011949_124:
    TEST RAX, RAX
    JE L100011949_95
    JMP L100011949_125     ; inserted

; Entry 100011949; block 125; address 100012052
L100011949_125:
    MOV R12, RAX
    MOV RDI, RAX
    MOV RSI, R14
    CALL _strcpy
    JMP L100011949_126     ; inserted

; Entry 100011949; block 126; address 100012060
L100011949_126:
    LEA RBX, [rel L__DATA___common + 448]
    JMP L100011949_128

; Entry 100011949; block 127; address 100012078
L100011949_127:
    MOV R12, RAX
    JMP L100011949_128     ; inserted

; Entry 100011949; block 128; address 10001207b
L100011949_128:
    MOV RDI, R12
    LEA RSI, [rel L__TEXT___cstring_6381]
    CALL _fopen
    JMP L100011949_129     ; inserted

; Entry 100011949; block 129; address 10001208a
L100011949_129:
    LEA RCX, [rel L__DATA___common + 400]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JE L100011949_130
    JMP L100011949_131     ; inserted

; Entry 100011949; block 130; address 100011fb9
L100011949_130:
    CMP dword [R13], 1
    JNE L100011949_109
    JMP L100011949_108     ; inserted

; Entry 100011949; block 131; address 10001209d
L100011949_131:
    JMP L100011949_101

; Entry 100011949; block 132; address 1000120a7
L100011949_132:
    LEA RAX, [rel L__DATA___common + 64]
    CMP dword [RAX], 2
    JE L100011949_134
    JMP L100011949_133     ; inserted

; Entry 100011949; block 133; address 1000120b3
L100011949_133:
    LEA RAX, [rel L__DATA___common + 400]
    MOV RDI, qword [RAX]
    CALL _ferror
    JMP L100011949_135     ; inserted

; Entry 100011949; block 134; address 1000120c6
L100011949_134:
    MOV RDI, qword [RBP + -56]
    CALL _free
    JMP L100011949_136     ; inserted

; Entry 100011949; block 135; address 1000120c2
L100011949_135:
    TEST EAX, EAX
    JE L100011949_11
    JMP L100011949_134     ; inserted

; Entry 100011949; block 136; address 1000120cf
L100011949_136:
    MOV ECX, 11
    JMP L100011949_3

; Entry 100011949; block 137; address 1000120df
L100011949_137:
    XOR ECX, ECX
    JMP L100011949_3

; Entry 100011949; block 138; address 1000120eb
L100011949_138:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RCX, qword [RAX]
    LEA RDI, [rel L__TEXT___cstring_36299]
    MOV ESI, 20
    MOV EDX, 1
    CALL _fwrite
    JMP L100011949_139     ; inserted

; Entry 100011949; block 139; address 10001210b
L100011949_139:
    MOV ECX, 10
    JMP L100011949_3     ; inserted

; Entry 100011949; block 140; address 100012132
L100011949_140:
    MOV ECX, 3
    JMP L100011949_3

; Entry 100011949; block 141; address 10001214d
L100011949_141:
    LEA RDI, [rel L__TEXT___cstring_32287]
    MOV RSI, R14
    CALL L1000034f4_0
    JMP L100011949_142     ; inserted

; Entry 100011949; block 142; address 10001215c
L100011949_142:
    MOV RDI, R12
    CALL _free
    JMP L100011949_143     ; inserted

; Entry 100011949; block 143; address 100012164
L100011949_143:
    MOV RDI, qword [RBP + -56]
    CALL _free
    JMP L100011949_144     ; inserted

; Entry 100011949; block 144; address 10001216d
L100011949_144:
    MOV ECX, 2
    JMP L100011949_3

; Entry 100011949; block 145; address 100012183
L100011949_145:
    MOV RDI, R12
    CALL _free
    JMP L100011949_146     ; inserted

; Entry 100011949; block 146; address 10001218b
L100011949_146:
    MOV RDI, qword [RBP + -56]
    CALL _free
    JMP L100011949_147     ; inserted

; Entry 100011949; block 147; address 100012194
L100011949_147:
    MOV ECX, 9
    JMP L100011949_3

; Entry 100011949; block 148; address 1000121ad
L100011949_148:
    MOV ECX, 4
    JMP L100011949_3



; ---------------------
; Function: 0x1000121b7
; ---------------------
; Entry 1000121b7; block 0; address 1000121b7
L1000121b7_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 24
    MOV R14D, ECX
    MOV RBX, RDX
    MOV qword [RBP + -56], RDI
    IMUL RBX, RSI
    CMP ECX, 1
    JNE L1000121b7_2
    JMP L1000121b7_1     ; inserted

; Entry 1000121b7; block 1; address 1000121db
L1000121b7_1:
    LEA RAX, [rel L__DATA___common + 592]
    MOV qword [RAX], 0
    LEA RAX, [rel L__DATA___common + 392]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 536]
    MOV qword [RCX], RAX
    LEA RAX, [rel L__DATA___common + 480]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 472]
    MOV qword [RCX], RAX
    LEA RAX, [rel L__DATA___common + 552]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 544]
    MOV qword [RCX], RAX
    JMP L1000121b7_3

; Entry 1000121b7; block 2; address 100012227
L1000121b7_2:
    LEA RAX, [rel L__DATA___common + 552]
    MOV RAX, qword [RAX]
    JMP L1000121b7_3     ; inserted

; Entry 1000121b7; block 3; address 100012231
L1000121b7_3:
    LEA RCX, [rel L__DATA___common + 568]
    MOV RCX, qword [RCX]
    MOV RDI, RCX
    SUB RDI, RAX
    TEST RCX, RCX
    CMOVE RDI, RBX
    LEA ECX, [R14 + -1]
    XOR EDX, EDX
    MOV dword [RBP + -44], ECX
    CMP ECX, 3
    CMOVAE RDX, RDI
    CMP RBX, RDI
    CMOVBE RDX, RBX
    CMP R14D, 2
    JNE L1000121b7_5
    JMP L1000121b7_4     ; inserted

; Entry 1000121b7; block 4; address 100012265
L1000121b7_4:
    LEA RCX, [rel L__DATA___data + 4560]
    CMP qword [RCX], 18446744073709551615
    JNE L1000121b7_7
    JMP L1000121b7_6     ; inserted

; Entry 1000121b7; block 5; address 10001229d
L1000121b7_5:
    TEST RDX, RDX
    JE L1000121b7_9
    JMP L1000121b7_8     ; inserted

; Entry 1000121b7; block 6; address 100012272
L1000121b7_6:
    LEA RDI, [rel L__DATA___common + 480]
    MOV RDI, qword [RDI]
    MOV qword [RCX], RDI
    LEA RCX, [rel L__DATA___common + 488]
    MOV qword [RCX], RAX
    JMP L1000121b7_7     ; inserted

; Entry 1000121b7; block 7; address 100012289
L1000121b7_7:
    LEA RCX, [rel L__DATA___common + 496]
    INC qword [RCX]
    LEA RCX, [rel L__DATA___common + 504]
    INC qword [RCX]
    JMP L1000121b7_5     ; inserted

; Entry 1000121b7; block 8; address 1000122a2
L1000121b7_8:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RCX, qword [RAX]
    MOV RDI, qword [RBP + -56]
    CALL _fwrite
    JMP L1000121b7_10     ; inserted

; Entry 1000121b7; block 9; address 1000122dc
L1000121b7_9:
    XOR R13D, R13D
    MOV R12, RBX
    JMP L1000121b7_12     ; inserted

; Entry 1000121b7; block 10; address 1000122b5
L1000121b7_10:
    MOV R13, RAX
    MOV R12, RBX
    SUB R12, RAX
    LEA RCX, [rel L__DATA___common + 552]
    ADD RAX, qword [RCX]
    MOV qword [RCX], RAX
    TEST R14D, R14D
    JNE L1000121b7_12
    JMP L1000121b7_11     ; inserted

; Entry 1000121b7; block 11; address 1000122d0
L1000121b7_11:
    LEA RCX, [rel L__DATA___common + 592]
    ADD qword [RCX], R13
    JMP L1000121b7_12

; Entry 1000121b7; block 12; address 1000122e2
L1000121b7_12:
    TEST R12, R12
    JE L1000121b7_14
    JMP L1000121b7_13     ; inserted

; Entry 1000121b7; block 13; address 1000122eb
L1000121b7_13:
    LEA RCX, [rel L__DATA___common + 564]
    MOV ECX, dword [RCX]
    TEST ECX, ECX
    JE L1000121b7_16
    JMP L1000121b7_15     ; inserted

; Entry 1000121b7; block 14; address 100012717
L1000121b7_14:
    LEA RAX, [rel L__DATA___common + 160]
    CMP dword [RAX], 0
    JE L1000121b7_87
    JMP L1000121b7_86     ; inserted

; Entry 1000121b7; block 15; address 1000122fc
L1000121b7_15:
    LEA RDX, [rel L__DATA___common + 584]
    ADD qword [RDX], RAX
    CMP ECX, 1
    MOV qword [RBP + -64], RBX
    JNE L1000121b7_18
    JMP L1000121b7_17     ; inserted

; Entry 1000121b7; block 16; address 1000123b8
L1000121b7_16:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    CALL _ferror
    JMP L1000121b7_30     ; inserted

; Entry 1000121b7; block 17; address 10001230f
L1000121b7_17:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    CALL _ferror
    JMP L1000121b7_19     ; inserted

; Entry 1000121b7; block 18; address 10001233c
L1000121b7_18:
    CMP ECX, 2
    JNE L1000121b7_23
    JMP L1000121b7_22     ; inserted

; Entry 1000121b7; block 19; address 10001231e
L1000121b7_19:
    TEST EAX, EAX
    JE L1000121b7_21
    JMP L1000121b7_20     ; inserted

; Entry 1000121b7; block 20; address 100012322
L1000121b7_20:
    LEA RSI, [rel L__TEXT___cstring_37083]
    MOV EDI, 14
    CALL L100002e30_0

; Entry 1000121b7; block 21; address 100012387
L1000121b7_21:
    LEA RAX, [rel L__DATA___common + 472]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 480]
    MOV RDI, qword [RCX]
    CMP RAX, RDI
    JNE L1000121b7_29
    JMP L1000121b7_28     ; inserted

; Entry 1000121b7; block 22; address 100012341
L1000121b7_22:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    CALL _ferror
    JMP L1000121b7_24     ; inserted

; Entry 1000121b7; block 23; address 100012382
L1000121b7_23:
    CMP ECX, 1
    JNE L1000121b7_26
    JMP L1000121b7_21     ; inserted

; Entry 1000121b7; block 24; address 100012350
L1000121b7_24:
    TEST EAX, EAX
    JE L1000121b7_26
    JMP L1000121b7_25     ; inserted

; Entry 1000121b7; block 25; address 100012358
L1000121b7_25:
    LEA RAX, [rel L__DATA___common + 552]
    CMP qword [RAX], 65535
    JA L1000121b7_26
    JMP L1000121b7_27     ; inserted

; Entry 1000121b7; block 26; address 1000123e5
L1000121b7_26:
    LEA RAX, [rel L__DATA___common + 480]
    MOV RDI, qword [RAX]
    JMP L1000121b7_29     ; inserted

; Entry 1000121b7; block 27; address 100012368
L1000121b7_27:
    LEA RSI, [rel L__TEXT___cstring_37105]
    MOV EDI, 14
    CALL L100002e30_0

; Entry 1000121b7; block 28; address 1000123a0
L1000121b7_28:
    LEA RCX, [rel L__DATA___common + 384]
    MOV RCX, qword [RCX]
    LEA RDX, [rel L__DATA___common + 528]
    MOV qword [RDX], RCX
    XOR ECX, ECX
    JMP L1000121b7_34

; Entry 1000121b7; block 29; address 1000123ef
L1000121b7_29:
    LEA R14, [rel L__DATA___common + 392]
    MOV RSI, qword [R14]
    LEA RBX, [rel L__DATA___common + 384]
    MOV RDX, qword [RBX]
    CALL L10001374d_0
    JMP L1000121b7_32     ; inserted

; Entry 1000121b7; block 30; address 1000123c7
L1000121b7_30:
    TEST EAX, EAX
    JE L1000121b7_14
    JMP L1000121b7_31     ; inserted

; Entry 1000121b7; block 31; address 1000123cf
L1000121b7_31:
    LEA RSI, [rel L__TEXT___cstring_35910]
    MOV EDI, 14
    CALL L100002e30_0

; Entry 1000121b7; block 32; address 100012408
L1000121b7_32:
    XOR R15D, R15D
    MOV qword [R14], R15
    MOV RDI, qword [RBX]
    CALL _free
    JMP L1000121b7_33     ; inserted

; Entry 1000121b7; block 33; address 100012416
L1000121b7_33:
    MOV qword [RBX], R15
    LEA RAX, [rel L__DATA___common + 480]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 564]
    CMP dword [RCX], 2
    SETE CL
    JMP L1000121b7_34     ; inserted

; Entry 1000121b7; block 34; address 100012430
L1000121b7_34:
    MOV R14, qword [RBP + -56]
    LEA RDX, [rel L__DATA___common + 496]
    XOR ESI, ESI
    MOV qword [RDX], RSI
    LEA RDX, [rel L__DATA___common + 552]
    MOV qword [RDX], RSI
    INC RAX
    LEA RDX, [rel L__DATA___common + 480]
    MOV qword [RDX], RAX
    TEST CL, CL
    JE L1000121b7_36
    JMP L1000121b7_35     ; inserted

; Entry 1000121b7; block 35; address 10001245b
L1000121b7_35:
    LEA RAX, [rel L__DATA___common + 576]
    CMP dword [RAX], 0
    JE L1000121b7_36
    JMP L1000121b7_37     ; inserted

; Entry 1000121b7; block 36; address 100012483
L1000121b7_36:
    LEA R15, [rel L__DATA___common + 384]
    JMP L1000121b7_78     ; inserted

; Entry 1000121b7; block 37; address 100012467
L1000121b7_37:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RBX]
    MOV EDI, 7
    CALL _putc
    JMP L1000121b7_38     ; inserted

; Entry 1000121b7; block 38; address 10001247b
L1000121b7_38:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L1000121b7_36     ; inserted

; Entry 1000121b7; block 39; address 100012496
L1000121b7_39:
    LEA RAX, [rel L__DATA___common + 480]
    MOV RDI, qword [RAX]
    CALL L10001318a_0
    JMP L1000121b7_40     ; inserted

; Entry 1000121b7; block 40; address 1000124a5
L1000121b7_40:
    LEA RAX, [rel L__DATA___common + 320]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L1000121b7_42
    JMP L1000121b7_41     ; inserted

; Entry 1000121b7; block 41; address 1000124b4
L1000121b7_41:
    MOV RDI, RBX
    CALL _strlen
    JMP L1000121b7_43     ; inserted

; Entry 1000121b7; block 42; address 100012524
L1000121b7_42:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RBX, qword [RAX]
    MOV RDI, RBX
    CALL _strlen
    JMP L1000121b7_53     ; inserted

; Entry 1000121b7; block 43; address 1000124bc
L1000121b7_43:
    LEA RDI, [RAX + 12]
    CALL _malloc
    JMP L1000121b7_44     ; inserted

; Entry 1000121b7; block 44; address 1000124c5
L1000121b7_44:
    MOV qword [R15], RAX
    TEST RAX, RAX
    JNE L1000121b7_46
    JMP L1000121b7_45     ; inserted

; Entry 1000121b7; block 45; address 1000124cd
L1000121b7_45:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_9890]
    CALL L100002e30_0

; Entry 1000121b7; block 46; address 1000124eb
L1000121b7_46:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L1000121b7_47     ; inserted

; Entry 1000121b7; block 47; address 1000124f6
L1000121b7_47:
    MOV RBX, qword [R15]
    CMP byte [RBX], 0
    JE L1000121b7_49
    JMP L1000121b7_48     ; inserted

; Entry 1000121b7; block 48; address 1000124fe
L1000121b7_48:
    MOV RDI, RBX
    CALL _strlen
    JMP L1000121b7_50     ; inserted

; Entry 1000121b7; block 49; address 100012511
L1000121b7_49:
    MOV RDI, RBX
    CALL _strlen
    JMP L1000121b7_52     ; inserted

; Entry 1000121b7; block 50; address 100012506
L1000121b7_50:
    CMP byte [RAX + RBX-1], 47
    JE L1000121b7_51
    JMP L1000121b7_49     ; inserted

; Entry 1000121b7; block 51; address 1000125ac
L1000121b7_51:
    MOV RBX, qword [R15]
    MOV RDI, RBX
    CALL _strlen
    JMP L1000121b7_63     ; inserted

; Entry 1000121b7; block 52; address 100012519
L1000121b7_52:
    MOV word [RBX + RAX], 47
    JMP L1000121b7_51

; Entry 1000121b7; block 53; address 100012536
L1000121b7_53:
    LEA RDI, [RAX + 12]
    CALL _malloc
    JMP L1000121b7_54     ; inserted

; Entry 1000121b7; block 54; address 10001253f
L1000121b7_54:
    MOV qword [R15], RAX
    TEST RAX, RAX
    JNE L1000121b7_56
    JMP L1000121b7_55     ; inserted

; Entry 1000121b7; block 55; address 100012547
L1000121b7_55:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_9890]
    CALL L100002e30_0

; Entry 1000121b7; block 56; address 100012565
L1000121b7_56:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L1000121b7_57     ; inserted

; Entry 1000121b7; block 57; address 100012570
L1000121b7_57:
    MOV R14, qword [R15]
    MOV RDI, R14
    CALL _strlen
    JMP L1000121b7_58     ; inserted

; Entry 1000121b7; block 58; address 10001257b
L1000121b7_58:
    MOV ECX, EAX
    TEST EAX, EAX
    MOV EDX, 0
    CMOVNS RAX, RDX
    JMP L1000121b7_61     ; inserted

; Entry 1000121b7; block 59; address 10001258c
L1000121b7_59:
    LEA RDX, [RCX + -1]
    CMP byte [R14 + RCX-1], 47
    MOV RCX, RDX
    JNE L1000121b7_61
    JMP L1000121b7_62     ; inserted

; Entry 1000121b7; block 60; address 1000125a1
L1000121b7_60:
    CDQE 
    MOV byte [R14 + RAX], 0
    MOV R14, qword [RBP + -56]
    JMP L1000121b7_51     ; inserted

; Entry 1000121b7; block 61; address 100012588
L1000121b7_61:
    TEST ECX, ECX
    JLE L1000121b7_60
    JMP L1000121b7_59     ; inserted

; Entry 1000121b7; block 62; address 10001259b
L1000121b7_62:
    INC RDX
    MOV RAX, RDX
    JMP L1000121b7_60     ; inserted

; Entry 1000121b7; block 63; address 1000125b7
L1000121b7_63:
    MOV RCX, 6365935209750751610
    MOV qword [RBX + RAX], RCX
    MOV byte [RBX + RAX + 8], 0
    MOV RDI, qword [R15]
    CALL _mkstemp
    JMP L1000121b7_64     ; inserted

; Entry 1000121b7; block 64; address 1000125d2
L1000121b7_64:
    MOV EBX, EAX
    CMP EAX, 18446744073709551615
    JNE L1000121b7_66
    JMP L1000121b7_65     ; inserted

; Entry 1000121b7; block 65; address 1000125d9
L1000121b7_65:
    MOV RSI, qword [R15]
    MOV EDI, 10
    CALL L100002e30_0

; Entry 1000121b7; block 66; address 1000125e6
L1000121b7_66:
    MOV EDI, EBX
    LEA RSI, [rel L__TEXT___cstring_8627]
    CALL _fdopen
    JMP L1000121b7_67     ; inserted

; Entry 1000121b7; block 67; address 1000125f4
L1000121b7_67:
    LEA RCX, [rel L__DATA___common + 392]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JNE L1000121b7_69
    JMP L1000121b7_68     ; inserted

; Entry 1000121b7; block 68; address 100012603
L1000121b7_68:
    MOV RSI, qword [R15]
    MOV EDI, 10
    CALL L100002e30_0

; Entry 1000121b7; block 69; address 10001261a
L1000121b7_69:
    LEA RDI, [R14 + R13]
    MOV ESI, 1
    MOV RDX, R12
    MOV RCX, RAX
    CALL _fwrite
    JMP L1000121b7_70     ; inserted

; Entry 1000121b7; block 70; address 10001262e
L1000121b7_70:
    LEA RCX, [rel L__DATA___common + 552]
    ADD qword [RCX], RAX
    CMP dword [RBP + -44], 3
    JB L1000121b7_72
    JMP L1000121b7_71     ; inserted

; Entry 1000121b7; block 71; address 10001263e
L1000121b7_71:
    LEA RCX, [rel L__DATA___common + 592]
    ADD qword [RCX], RAX
    JMP L1000121b7_72     ; inserted

; Entry 1000121b7; block 72; address 100012648
L1000121b7_72:
    ADD R13, RAX
    CMP R12, RAX
    JBE L1000121b7_74
    JMP L1000121b7_73     ; inserted

; Entry 1000121b7; block 73; address 100012650
L1000121b7_73:
    LEA RAX, [rel L__DATA___common + 564]
    CMP dword [RAX], 2
    JNE L1000121b7_76
    JMP L1000121b7_75     ; inserted

; Entry 1000121b7; block 74; address 100012685
L1000121b7_74:
    CMP dword [RBP + -44], 2
    JA L1000121b7_80
    JMP L1000121b7_79     ; inserted

; Entry 1000121b7; block 75; address 10001265c
L1000121b7_75:
    LEA RDI, [rel L__TEXT___cstring_37137]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L1000121b7_77     ; inserted

; Entry 1000121b7; block 76; address 100012674
L1000121b7_76:
    LEA RSI, [rel L__TEXT___cstring_37137]
    MOV EDI, 14
    CALL L100002e30_0

; Entry 1000121b7; block 77; address 10001266f
L1000121b7_77:
    JMP L1000121b7_78

; Entry 1000121b7; block 78; address 10001248a
L1000121b7_78:
    LEA RAX, [rel L__DATA___common + 564]
    CMP dword [RAX], 2
    JNE L1000121b7_40
    JMP L1000121b7_39     ; inserted

; Entry 1000121b7; block 79; address 10001268f
L1000121b7_79:
    LEA RAX, [rel L__DATA___common + 564]
    CMP dword [RAX], 1
    LEA RBX, [rel L__DATA___common + 536]
    JNE L1000121b7_82
    JMP L1000121b7_81     ; inserted

; Entry 1000121b7; block 80; address 100012713
L1000121b7_80:
    MOV RBX, qword [RBP + -64]
    JMP L1000121b7_14     ; inserted

; Entry 1000121b7; block 81; address 1000126a2
L1000121b7_81:
    MOV RSI, qword [RBX]
    TEST RSI, RSI
    JE L1000121b7_82
    JMP L1000121b7_83     ; inserted

; Entry 1000121b7; block 82; address 1000126d7
L1000121b7_82:
    MOV RAX, qword [R15]
    LEA RCX, [rel L__DATA___common + 528]
    MOV qword [RCX], RAX
    LEA RAX, [rel L__DATA___common + 392]
    MOV RAX, qword [RAX]
    MOV qword [RBX], RAX
    LEA RAX, [rel L__DATA___common + 544]
    MOV qword [RAX], 0
    LEA RAX, [rel L__DATA___common + 480]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 472]
    MOV qword [RCX], RAX
    JMP L1000121b7_80     ; inserted

; Entry 1000121b7; block 83; address 1000126aa
L1000121b7_83:
    LEA RAX, [rel L__DATA___common + 472]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 480]
    CMP RDI, qword [RAX]
    JE L1000121b7_82
    JMP L1000121b7_84     ; inserted

; Entry 1000121b7; block 84; address 1000126c0
L1000121b7_84:
    LEA R14, [rel L__DATA___common + 528]
    MOV RDX, qword [R14]
    CALL L10001374d_0
    JMP L1000121b7_85     ; inserted

; Entry 1000121b7; block 85; address 1000126cf
L1000121b7_85:
    MOV RDI, qword [R14]
    CALL _free
    JMP L1000121b7_82     ; inserted

; Entry 1000121b7; block 86; address 100012727
L1000121b7_86:
    LEA R12, [rel L__DATA___common + 136]
    MOV RCX, qword [R12]
    LEA R14, [rel L__DATA___common + 144]
    MOV RAX, qword [R14]
    TEST RCX, RCX
    JLE L1000121b7_89
    JMP L1000121b7_88     ; inserted

; Entry 1000121b7; block 87; address 1000127cf
L1000121b7_87:
    MOV RAX, R13
    ADD RSP, 24
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000121b7; block 88; address 100012741
L1000121b7_88:
    CMP RAX, 18446744073709551615
    JNE L1000121b7_91
    JMP L1000121b7_90     ; inserted

; Entry 1000121b7; block 89; address 100012795
L1000121b7_89:
    TEST RCX, RCX
    JE L1000121b7_87
    JMP L1000121b7_96     ; inserted

; Entry 1000121b7; block 90; address 100012747
L1000121b7_90:
    LEA R15, [rel L__DATA___common + 6336]
    MOV RSI, qword [R15]
    MOV EDI, 32
    CALL _putc
    JMP L1000121b7_92     ; inserted

; Entry 1000121b7; block 91; address 10001276f
L1000121b7_91:
    CMP RBX, 1000
    JBE L1000121b7_95
    JMP L1000121b7_94     ; inserted

; Entry 1000121b7; block 92; address 10001275b
L1000121b7_92:
    MOV RDI, qword [R15]
    CALL _fflush
    JMP L1000121b7_93     ; inserted

; Entry 1000121b7; block 93; address 100012763
L1000121b7_93:
    MOV qword [R14], 1
    MOV EAX, 1
    JMP L1000121b7_91     ; inserted

; Entry 1000121b7; block 94; address 100012778
L1000121b7_94:
    INC RAX
    MOV RCX, qword [R12]
    IMUL RBX, RAX
    XOR EDX, EDX
    CMP RCX, RBX
    CMOVLE RAX, RDX
    MOV qword [R14], RAX
    JMP L1000121b7_89

; Entry 1000121b7; block 95; address 100012791
L1000121b7_95:
    MOV RCX, qword [R12]
    JMP L1000121b7_89     ; inserted

; Entry 1000121b7; block 96; address 10001279a
L1000121b7_96:
    TEST RAX, RAX
    JNE L1000121b7_87
    JMP L1000121b7_97     ; inserted

; Entry 1000121b7; block 97; address 10001279f
L1000121b7_97:
    MOV qword [R14], 1
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RBX]
    MOV EDI, 46
    CALL _putc
    JMP L1000121b7_98     ; inserted

; Entry 1000121b7; block 98; address 1000127ba
L1000121b7_98:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L1000121b7_99     ; inserted

; Entry 1000121b7; block 99; address 1000127c2
L1000121b7_99:
    LEA RAX, [rel L__DATA___common + 604]
    MOV dword [RAX], 1
    JMP L1000121b7_87     ; inserted



; ---------------------
; Function: 0x1000127e1
; ---------------------
; Entry 1000127e1; block 0; address 1000127e1
L1000127e1_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    SUB RSP, 16
    MOV RBX, RSI
    MOV R14, RDI
    INC RBX
    LEA RAX, [rel L__DATA___common + 440]
    CMP RBX, qword [RAX]
    JNE L1000127e1_2
    JMP L1000127e1_1     ; inserted

; Entry 1000127e1; block 1; address 100012805
L1000127e1_1:
    MOV RDI, R14
    CALL _strlen
    JMP L1000127e1_3     ; inserted

; Entry 1000127e1; block 2; address 10001283f
L1000127e1_2:
    CMP RBX, 100000
    JB L1000127e1_9
    JMP L1000127e1_8     ; inserted

; Entry 1000127e1; block 3; address 10001280d
L1000127e1_3:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L1000127e1_4     ; inserted

; Entry 1000127e1; block 4; address 100012816
L1000127e1_4:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L1000127e1_6
    JMP L1000127e1_5     ; inserted

; Entry 1000127e1; block 5; address 10001281e
L1000127e1_5:
    LEA RSI, [rel L__TEXT___cstring_37020]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 1000127e1; block 6; address 10001282f
L1000127e1_6:
    MOV RDI, RBX
    MOV RSI, R14
    CALL _strcpy
    JMP L1000127e1_7     ; inserted

; Entry 1000127e1; block 7; address 10001283a
L1000127e1_7:
    JMP L1000127e1_17

; Entry 1000127e1; block 8; address 100012848
L1000127e1_8:
    LEA RSI, [rel L__TEXT___cstring_37030]
    MOV EDI, 6
    CALL L100002e30_0

; Entry 1000127e1; block 9; address 100012859
L1000127e1_9:
    LEA RCX, [rel L__TEXT___cstring_37060]
    LEA R15, [RBP + -38]
    MOV EDX, 6
    MOV RDI, R15
    XOR ESI, ESI
    MOV R8, RBX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L1000127e1_10     ; inserted

; Entry 1000127e1; block 10; address 100012878
L1000127e1_10:
    MOV RDI, R14
    CALL _strlen
    JMP L1000127e1_11     ; inserted

; Entry 1000127e1; block 11; address 100012880
L1000127e1_11:
    MOV RBX, RAX
    ADD EAX, 18446744073709551613
    MOVSXD R12, EAX
    MOV RDI, R15
    CALL _strlen
    JMP L1000127e1_12     ; inserted

; Entry 1000127e1; block 12; address 100012891
L1000127e1_12:
    ADD EAX, EBX
    ADD EAX, 18446744073709551614
    MOVSXD RDI, EAX
    CALL _malloc
    JMP L1000127e1_13     ; inserted

; Entry 1000127e1; block 13; address 10001289e
L1000127e1_13:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L1000127e1_15
    JMP L1000127e1_14     ; inserted

; Entry 1000127e1; block 14; address 1000128a6
L1000127e1_14:
    LEA RSI, [rel L__TEXT___cstring_36373]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 1000127e1; block 15; address 1000128b7
L1000127e1_15:
    MOV RDI, RBX
    MOV RSI, R14
    CALL _strcpy
    JMP L1000127e1_16     ; inserted

; Entry 1000127e1; block 16; address 1000128c2
L1000127e1_16:
    MOV byte [RBX + R12], 0
    LEA RSI, [RBP + -38]
    MOV RDI, RBX
    CALL _strcat
    JMP L1000127e1_17     ; inserted

; Entry 1000127e1; block 17; address 1000128d3
L1000127e1_17:
    MOV RAX, RBX
    ADD RSP, 16
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x1000128e3
; ---------------------
; Entry 1000128e3; block 0; address 1000128e3
L1000128e3_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    MOV EAX, 5192
    CALL L100009bb0_0
    JMP L1000128e3_1     ; inserted

; Entry 1000128e3; block 1; address 1000128fb
L1000128e3_1:
    SUB RSP, RAX
    POP RAX
    MOV RSI, RDI
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -48], RAX
    LEA R14, [rel L__DATA___common + 408]
    MOV RDI, qword [R14]
    MOV qword [RBP + -5208], RSI
    CALL L1000127e1_0
    JMP L1000128e3_2     ; inserted

; Entry 1000128e3; block 2; address 100012926
L1000128e3_2:
    MOV R12, RAX
    MOV RBX, qword [R14]
    MOV RDI, RBX
    CALL _strlen
    JMP L1000128e3_3     ; inserted

; Entry 1000128e3; block 3; address 100012934
L1000128e3_3:
    LEA RDI, [RAX + 40]
    CALL _malloc
    JMP L1000128e3_4     ; inserted

; Entry 1000128e3; block 4; address 10001293d
L1000128e3_4:
    MOV R15, RAX
    TEST RAX, RAX
    JNE L1000128e3_6
    JMP L1000128e3_5     ; inserted

; Entry 1000128e3; block 5; address 100012945
L1000128e3_5:
    LEA RSI, [rel L__TEXT___cstring_36373]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 1000128e3; block 6; address 100012959
L1000128e3_6:
    MOV RDI, R15
    MOV RSI, RBX
    CALL _strcpy
    JMP L1000128e3_7     ; inserted

; Entry 1000128e3; block 7; address 100012964
L1000128e3_7:
    MOV RDI, R15
    CALL _strlen
    JMP L1000128e3_8     ; inserted

; Entry 1000128e3; block 8; address 10001296c
L1000128e3_8:
    INC EAX
    MOV RDX, 35184372090881
    JMP L1000128e3_11     ; inserted

; Entry 1000128e3; block 9; address 10001297f
L1000128e3_9:
    MOV ECX, EBX
    MOV CL, byte [R15 + RCX]
    DEC EAX
    ADD CL, 209
    CMP CL, 45
    JA L1000128e3_11
    JMP L1000128e3_12     ; inserted

; Entry 1000128e3; block 10; address 1000129a3
L1000128e3_10:
    MOV RAX, R15
    JMP L1000128e3_14     ; inserted

; Entry 1000128e3; block 11; address 100012978
L1000128e3_11:
    MOV EBX, EAX
    ADD EBX, 18446744073709551614
    JS L1000128e3_10
    JMP L1000128e3_9     ; inserted

; Entry 1000128e3; block 12; address 10001298f
L1000128e3_12:
    MOVZX ECX, CL
    BT RDX, RCX
    JAE L1000128e3_11
    JMP L1000128e3_13     ; inserted

; Entry 1000128e3; block 13; address 100012998
L1000128e3_13:
    MOVSXD RCX, EAX
    MOV RAX, R15
    ADD RAX, RCX
    JMP L1000128e3_14

; Entry 1000128e3; block 14; address 1000129a6
L1000128e3_14:
    MOV byte [RAX], 0
    MOV R13, qword [R14]
    MOV RDI, R13
    CALL _strlen
    JMP L1000128e3_15     ; inserted

; Entry 1000128e3; block 15; address 1000129b4
L1000128e3_15:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L1000128e3_16     ; inserted

; Entry 1000128e3; block 16; address 1000129bd
L1000128e3_16:
    MOV qword [RBP + -5200], RAX
    TEST RAX, RAX
    JNE L1000128e3_18
    JMP L1000128e3_17     ; inserted

; Entry 1000128e3; block 17; address 1000129c9
L1000128e3_17:
    LEA RSI, [rel L__TEXT___cstring_36373]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 1000128e3; block 18; address 1000129dd
L1000128e3_18:
    MOV RDI, R13
    CALL _strlen
    JMP L1000128e3_19     ; inserted

; Entry 1000128e3; block 19; address 1000129e5
L1000128e3_19:
    MOV R14, RAX
    MOV RDI, R15
    CALL _strlen
    JMP L1000128e3_20     ; inserted

; Entry 1000128e3; block 20; address 1000129f0
L1000128e3_20:
    CMP R14, RAX
    JNE L1000128e3_22
    JMP L1000128e3_21     ; inserted

; Entry 1000128e3; block 21; address 1000129f5
L1000128e3_21:
    MOV RAX, qword [RBP + -5200]
    MOV byte [RAX], 0
    JMP L1000128e3_23

; Entry 1000128e3; block 22; address 100012a01
L1000128e3_22:
    ADD R13, RAX
    MOV RDI, qword [RBP + -5200]
    MOV RSI, R13
    CALL _strcpy
    JMP L1000128e3_23     ; inserted

; Entry 1000128e3; block 23; address 100012a13
L1000128e3_23:
    MOV RDI, R12
    CALL _strlen
    JMP L1000128e3_24     ; inserted

; Entry 1000128e3; block 24; address 100012a1b
L1000128e3_24:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L1000128e3_25     ; inserted

; Entry 1000128e3; block 25; address 100012a24
L1000128e3_25:
    MOV R13, RAX
    TEST RAX, RAX
    LEA R14, [rel L__DATA___common + 408]
    JNE L1000128e3_27
    JMP L1000128e3_26     ; inserted

; Entry 1000128e3; block 26; address 100012a33
L1000128e3_26:
    LEA RSI, [rel L__TEXT___cstring_36373]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 1000128e3; block 27; address 100012a44
L1000128e3_27:
    MOV RDI, qword [R14]
    CALL _strlen
    JMP L1000128e3_28     ; inserted

; Entry 1000128e3; block 28; address 100012a4c
L1000128e3_28:
    MOV R14, RAX
    MOV RDI, R15
    CALL _strlen
    JMP L1000128e3_29     ; inserted

; Entry 1000128e3; block 29; address 100012a57
L1000128e3_29:
    CMP R14, RAX
    JNE L1000128e3_31
    JMP L1000128e3_30     ; inserted

; Entry 1000128e3; block 30; address 100012a5c
L1000128e3_30:
    MOV byte [R13], 0
    JMP L1000128e3_32

; Entry 1000128e3; block 31; address 100012a63
L1000128e3_31:
    MOV RSI, R12
    ADD RSI, RAX
    MOV RDI, R13
    CALL _strcpy
    JMP L1000128e3_32     ; inserted

; Entry 1000128e3; block 32; address 100012a71
L1000128e3_32:
    MOV qword [RBP + -5216], R13
    TEST EBX, EBX
    JNS L1000128e3_34
    JMP L1000128e3_33     ; inserted

; Entry 1000128e3; block 33; address 100012a7c
L1000128e3_33:
    MOVUPS XMM0, oword [rel L__TEXT___cstring_36384]
    MOVUPS oword [R15], XMM0
    MOV dword [R15 + 16], 2718066
    JMP L1000128e3_34     ; inserted

; Entry 1000128e3; block 34; address 100012a8f
L1000128e3_34:
    LEA R14, [rel L__DATA___common + 6336]
    MOV RCX, qword [R14]
    LEA RDI, [rel L__TEXT___cstring_36404]
    MOV ESI, 18
    MOV EDX, 1
    CALL _fwrite
    JMP L1000128e3_35     ; inserted

; Entry 1000128e3; block 35; address 100012aaf
L1000128e3_35:
    MOV RDI, qword [R14]
    LEA RSI, [rel L__TEXT___cstring_10517]
    MOV RDX, R12
    XOR EAX, EAX
    CALL _fprintf
    JMP L1000128e3_36     ; inserted

; Entry 1000128e3; block 36; address 100012ac3
L1000128e3_36:
    MOV R13, qword [RBP + -5208]
    LEA RAX, [R13 + 1]
    MOV qword [RBP + -5224], RAX
    LEA RBX, [rel L__TEXT___cstring_6381]
    MOV dword [RBP + -5188], 0
    JMP L1000128e3_153     ; inserted

; Entry 1000128e3; block 37; address 100012af2
L1000128e3_37:
    MOV RCX, qword [R14]
    MOV ESI, 53
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36423]
    CALL _fwrite
    JMP L1000128e3_39     ; inserted

; Entry 1000128e3; block 38; address 100012b3d
L1000128e3_38:
    LEA RAX, [rel L__DATA___common + 64]
    MOV EAX, dword [RAX]
    CMP EAX, 2
    JE L1000128e3_42
    JMP L1000128e3_41     ; inserted

; Entry 1000128e3; block 39; address 100012b0b
L1000128e3_39:
    MOV RCX, qword [R14]
    MOV ESI, 34
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36477]
    CALL _fwrite
    JMP L1000128e3_40     ; inserted

; Entry 1000128e3; block 40; address 100012b24
L1000128e3_40:
    MOV RCX, qword [R14]
    MOV ESI, 40
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36512]
    JMP L1000128e3_54

; Entry 1000128e3; block 41; address 100012b4b
L1000128e3_41:
    CMP EAX, 1
    JNE L1000128e3_44
    JMP L1000128e3_43     ; inserted

; Entry 1000128e3; block 42; address 100012b86
L1000128e3_42:
    MOV RCX, qword [R14]
    MOV ESI, 53
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36423]
    CALL _fwrite
    JMP L1000128e3_46     ; inserted

; Entry 1000128e3; block 43; address 100012b54
L1000128e3_43:
    MOV RCX, qword [R14]
    MOV ESI, 53
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36423]
    CALL _fwrite
    JMP L1000128e3_45     ; inserted

; Entry 1000128e3; block 44; address 100012c00
L1000128e3_44:
    MOV RCX, qword [R14]
    MOV ESI, 53
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36423]
    JMP L1000128e3_50     ; inserted

; Entry 1000128e3; block 45; address 100012b6d
L1000128e3_45:
    MOV RCX, qword [R14]
    MOV ESI, 29
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36553]
    JMP L1000128e3_50

; Entry 1000128e3; block 46; address 100012b9f
L1000128e3_46:
    MOV RCX, qword [R14]
    MOV ESI, 29
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36553]
    CALL _fwrite
    JMP L1000128e3_47     ; inserted

; Entry 1000128e3; block 47; address 100012bb8
L1000128e3_47:
    MOV RCX, qword [R14]
    MOV ESI, 34
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36477]
    CALL _fwrite
    JMP L1000128e3_48     ; inserted

; Entry 1000128e3; block 48; address 100012bd1
L1000128e3_48:
    MOV RCX, qword [R14]
    MOV ESI, 47
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36628]
    CALL _fwrite
    JMP L1000128e3_49     ; inserted

; Entry 1000128e3; block 49; address 100012bea
L1000128e3_49:
    MOV RCX, qword [R14]
    MOV ESI, 50
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36676]
    JMP L1000128e3_52

; Entry 1000128e3; block 50; address 100012c14
L1000128e3_50:
    CALL _fwrite
    JMP L1000128e3_51     ; inserted

; Entry 1000128e3; block 51; address 100012c19
L1000128e3_51:
    MOV RCX, qword [R14]
    MOV ESI, 34
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36477]
    JMP L1000128e3_52     ; inserted

; Entry 1000128e3; block 52; address 100012c2d
L1000128e3_52:
    CALL _fwrite
    JMP L1000128e3_53     ; inserted

; Entry 1000128e3; block 53; address 100012c32
L1000128e3_53:
    MOV RCX, qword [R14]
    MOV ESI, 44
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36583]
    JMP L1000128e3_54     ; inserted

; Entry 1000128e3; block 54; address 100012c46
L1000128e3_54:
    CALL _fwrite
    JMP L1000128e3_55     ; inserted

; Entry 1000128e3; block 55; address 100012c4b
L1000128e3_55:
    MOV RDI, qword [R14]
    CALL _fflush
    JMP L1000128e3_56     ; inserted

; Entry 1000128e3; block 56; address 100012c53
L1000128e3_56:
    MOV RAX, qword [rel ___stdinp]
    MOV RDX, qword [RAX]
    LEA RDI, [RBP + -5184]
    MOV ESI, 5034
    CALL _fgets
    JMP L1000128e3_57     ; inserted

; Entry 1000128e3; block 57; address 100012c6e
L1000128e3_57:
    XOR EAX, EAX
    JMP L1000128e3_62     ; inserted

; Entry 1000128e3; block 58; address 100012c7b
L1000128e3_58:
    CMP CL, 10
    JE L1000128e3_61
    JMP L1000128e3_60     ; inserted

; Entry 1000128e3; block 59; address 100012c8f
L1000128e3_59:
    MOVSX EDI, byte [RBP + -5184]
    CALL ___toupper
    JMP L1000128e3_63     ; inserted

; Entry 1000128e3; block 60; address 100012c80
L1000128e3_60:
    INC RAX
    JMP L1000128e3_62

; Entry 1000128e3; block 61; address 100012c85
L1000128e3_61:
    MOV EAX, EAX
    MOV byte [RBP + RAX-1], 0
    JMP L1000128e3_59     ; inserted

; Entry 1000128e3; block 62; address 100012c70
L1000128e3_62:
    MOV CL, byte [RBP + RAX-1]
    TEST CL, CL
    JE L1000128e3_59
    JMP L1000128e3_58     ; inserted

; Entry 1000128e3; block 63; address 100012c9b
L1000128e3_63:
    CMP EAX, 81
    JE L1000128e3_65
    JMP L1000128e3_64     ; inserted

; Entry 1000128e3; block 64; address 100012ca4
L1000128e3_64:
    CMP EAX, 83
    JNE L1000128e3_67
    JMP L1000128e3_66     ; inserted

; Entry 1000128e3; block 65; address 1000130f7
L1000128e3_65:
    MOV EBX, 9
    JMP L1000128e3_154

; Entry 1000128e3; block 66; address 100012ca9
L1000128e3_66:
    LEA RAX, [rel L__DATA___common + 64]
    MOV EAX, dword [RAX]
    DEC EAX
    CMP EAX, 1
    JBE L1000128e3_68
    JMP L1000128e3_67     ; inserted

; Entry 1000128e3; block 67; address 100012cbd
L1000128e3_67:
    MOVSX EDI, byte [RBP + -5184]
    CALL ___toupper
    JMP L1000128e3_69     ; inserted

; Entry 1000128e3; block 68; address 1000130fe
L1000128e3_68:
    LEA RAX, [rel L__DATA___common + 448]
    MOV RAX, qword [RAX]
    INC RAX
    LEA RCX, [rel L__DATA___common + 96]
    MOV qword [RCX], RAX
    MOV EBX, 3
    JMP L1000128e3_154

; Entry 1000128e3; block 69; address 100012cc9
L1000128e3_69:
    CMP EAX, 67
    JNE L1000128e3_71
    JMP L1000128e3_70     ; inserted

; Entry 1000128e3; block 70; address 100012cce
L1000128e3_70:
    MOV RCX, qword [R14]
    MOV ESI, 67
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36727]
    CALL _fwrite
    JMP L1000128e3_72     ; inserted

; Entry 1000128e3; block 71; address 100012d45
L1000128e3_71:
    LEA RCX, [rel L__DATA___common + 64]
    MOV ECX, dword [RCX]
    CMP EAX, 69
    JNE L1000128e3_82
    JMP L1000128e3_81     ; inserted

; Entry 1000128e3; block 72; address 100012ce7
L1000128e3_72:
    MOV RCX, qword [R14]
    MOV ESI, 3
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36795]
    CALL _fwrite
    JMP L1000128e3_73     ; inserted

; Entry 1000128e3; block 73; address 100012d00
L1000128e3_73:
    MOV RDI, qword [R14]
    CALL _fflush
    JMP L1000128e3_74     ; inserted

; Entry 1000128e3; block 74; address 100012d08
L1000128e3_74:
    MOV RAX, qword [rel ___stdinp]
    MOV RDX, qword [RAX]
    LEA RBX, [RBP + -5184]
    MOV RDI, RBX
    MOV ESI, 5034
    CALL _fgets
    JMP L1000128e3_75     ; inserted

; Entry 1000128e3; block 75; address 100012d26
L1000128e3_75:
    XOR EAX, EAX
    JMP L1000128e3_80     ; inserted

; Entry 1000128e3; block 76; address 100012d37
L1000128e3_76:
    CMP CL, 10
    JE L1000128e3_79
    JMP L1000128e3_78     ; inserted

; Entry 1000128e3; block 77; address 100012dd8
L1000128e3_77:
    MOV AL, byte [RBP + -5184]
    TEST AL, AL
    JNE L1000128e3_92
    JMP L1000128e3_91     ; inserted

; Entry 1000128e3; block 78; address 100012d40
L1000128e3_78:
    INC RAX
    JMP L1000128e3_80

; Entry 1000128e3; block 79; address 100012dce
L1000128e3_79:
    MOV EAX, EAX
    MOV byte [RBP + RAX-1], 0
    JMP L1000128e3_77     ; inserted

; Entry 1000128e3; block 80; address 100012d28
L1000128e3_80:
    MOV CL, byte [RBP + RAX-1]
    TEST CL, CL
    JE L1000128e3_77
    JMP L1000128e3_76     ; inserted

; Entry 1000128e3; block 81; address 100012d53
L1000128e3_81:
    CMP ECX, 2
    JE L1000128e3_83
    JMP L1000128e3_82     ; inserted

; Entry 1000128e3; block 82; address 100012d5c
L1000128e3_82:
    CMP ECX, 2
    JNE L1000128e3_85
    JMP L1000128e3_84     ; inserted

; Entry 1000128e3; block 83; address 10001315c
L1000128e3_83:
    MOV EBX, 2
    JMP L1000128e3_154     ; inserted

; Entry 1000128e3; block 84; address 100012d65
L1000128e3_84:
    MOVSX EDI, byte [RBP + -5184]
    CALL ___toupper
    JMP L1000128e3_86     ; inserted

; Entry 1000128e3; block 85; address 100012dfc
L1000128e3_85:
    MOV AL, byte [RBP + -5184]
    TEST AL, AL
    JNE L1000128e3_95
    JMP L1000128e3_94     ; inserted

; Entry 1000128e3; block 86; address 100012d71
L1000128e3_86:
    CMP EAX, 90
    JNE L1000128e3_85
    JMP L1000128e3_87     ; inserted

; Entry 1000128e3; block 87; address 100012d7a
L1000128e3_87:
    MOV RAX, qword [RBP + -5224]
    LEA RCX, [rel L__DATA___common + 440]
    MOV qword [RCX], RAX
    MOV RDI, R12
    CALL _free
    JMP L1000128e3_88     ; inserted

; Entry 1000128e3; block 88; address 100012d93
L1000128e3_88:
    LEA RAX, [rel L__DATA___common + 408]
    MOV RDI, qword [RAX]
    MOV RSI, qword [RBP + -5208]
    CALL L1000127e1_0
    JMP L1000128e3_89     ; inserted

; Entry 1000128e3; block 89; address 100012da9
L1000128e3_89:
    MOV R12, RAX
    MOV byte [RBP + -5184], 0
    MOV EDX, 5034
    MOV ECX, 5134
    LEA RDI, [RBP + -5184]
    MOV RSI, RAX
    CALL ___strncat_chk
    JMP L1000128e3_90     ; inserted

; Entry 1000128e3; block 90; address 100012dcc
L1000128e3_90:
    JMP L1000128e3_85

; Entry 1000128e3; block 91; address 100012de2
L1000128e3_91:
    MOV EDX, 5134
    MOV RDI, RBX
    MOV RSI, R12
    CALL ___strcpy_chk
    JMP L1000128e3_93     ; inserted

; Entry 1000128e3; block 92; address 100012e4c
L1000128e3_92:
    XOR R13D, R13D
    JMP L1000128e3_95     ; inserted

; Entry 1000128e3; block 93; address 100012df2
L1000128e3_93:
    XOR R13D, R13D
    LEA RBX, [rel L__TEXT___cstring_6381]
    JMP L1000128e3_85     ; inserted

; Entry 1000128e3; block 94; address 100012e06
L1000128e3_94:
    MOV RDI, R12
    MOV RSI, RBX
    CALL _fopen
    JMP L1000128e3_96     ; inserted

; Entry 1000128e3; block 95; address 100012e4f
L1000128e3_95:
    CMP AL, 46
    MOV RBX, 18446744069414584320
    JNE L1000128e3_103
    JMP L1000128e3_102     ; inserted

; Entry 1000128e3; block 96; address 100012e11
L1000128e3_96:
    TEST RAX, RAX
    JNE L1000128e3_98
    JMP L1000128e3_97     ; inserted

; Entry 1000128e3; block 97; address 100012e1a
L1000128e3_97:
    MOV RCX, qword [R14]
    MOV ESI, 24
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36799]
    CALL _fwrite
    JMP L1000128e3_99     ; inserted

; Entry 1000128e3; block 98; address 10001311c
L1000128e3_98:
    MOV RDI, RAX
    CALL _fclose
    JMP L1000128e3_155     ; inserted

; Entry 1000128e3; block 99; address 100012e33
L1000128e3_99:
    MOV RDI, qword [R14]
    LEA RSI, [rel L__TEXT___cstring_10517]
    MOV RDX, R12
    XOR EAX, EAX
    CALL _fprintf
    JMP L1000128e3_100     ; inserted

; Entry 1000128e3; block 100; address 100012e47
L1000128e3_100:
    JMP L1000128e3_101

; Entry 1000128e3; block 101; address 100012aed
L1000128e3_101:
    TEST R13D, R13D
    JE L1000128e3_38
    JMP L1000128e3_37     ; inserted

; Entry 1000128e3; block 102; address 100012e5d
L1000128e3_102:
    CMP byte [RBP + -5183], 0
    JNE L1000128e3_103
    JMP L1000128e3_104     ; inserted

; Entry 1000128e3; block 103; address 100012e6d
L1000128e3_103:
    LEA RDI, [RBP + -5184]
    CALL _strlen
    JMP L1000128e3_105     ; inserted

; Entry 1000128e3; block 104; address 100012e66
L1000128e3_104:
    MOV byte [RBP + -5184], 0
    JMP L1000128e3_103     ; inserted

; Entry 1000128e3; block 105; address 100012e79
L1000128e3_105:
    TEST EAX, EAX
    MOV RSI, 35184372090881
    MOV dword [RBP + -5188], R13D
    JS L1000128e3_107
    JMP L1000128e3_106     ; inserted

; Entry 1000128e3; block 106; address 100012e8e
L1000128e3_106:
    MOV ECX, EAX
    MOV RAX, RCX
    SHL RAX, 32
    MOV RDX, 4294967296
    ADD RAX, RDX
    INC RCX
    JMP L1000128e3_111     ; inserted

; Entry 1000128e3; block 107; address 100012ecb
L1000128e3_107:
    LEA R13, [rel L__DATA___common + 408]
    MOV RDI, qword [R13]
    CALL _free
    JMP L1000128e3_112     ; inserted

; Entry 1000128e3; block 108; address 100012eb6
L1000128e3_108:
    MOVZX EDX, DL
    BT RSI, RDX
    JB L1000128e3_110
    JMP L1000128e3_109     ; inserted

; Entry 1000128e3; block 109; address 100012ec3
L1000128e3_109:
    ADD RAX, RBX
    DEC RCX
    JG L1000128e3_111
    JMP L1000128e3_107     ; inserted

; Entry 1000128e3; block 110; address 100012f46
L1000128e3_110:
    SAR RAX, 32
    MOV byte [RBP + RAX-1], 0
    LEA RAX, [rel L__DATA___common + 408]
    MOV RDI, qword [RAX]
    CALL _free
    JMP L1000128e3_118     ; inserted

; Entry 1000128e3; block 111; address 100012ea7
L1000128e3_111:
    MOV DL, byte [RBP + RCX-1]
    ADD DL, 209
    CMP DL, 45
    JA L1000128e3_109
    JMP L1000128e3_108     ; inserted

; Entry 1000128e3; block 112; address 100012edb
L1000128e3_112:
    MOVUPS XMM0, oword [rel L__TEXT___cstring_36384]
    MOVAPS oword [RBP + -5184], XMM0
    MOV dword [RBP + -5168], 2718066
    MOV RBX, qword [RBP + -5200]
    MOV RDI, RBX
    CALL _strlen
    JMP L1000128e3_113     ; inserted

; Entry 1000128e3; block 113; address 100012f02
L1000128e3_113:
    LEA RDI, [RAX + 40]
    CALL _malloc
    JMP L1000128e3_114     ; inserted

; Entry 1000128e3; block 114; address 100012f0b
L1000128e3_114:
    MOV qword [R13], RAX
    TEST RAX, RAX
    JNE L1000128e3_116
    JMP L1000128e3_115     ; inserted

; Entry 1000128e3; block 115; address 100012f14
L1000128e3_115:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_36373]
    CALL L100002e30_0

; Entry 1000128e3; block 116; address 100012f2f
L1000128e3_116:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L1000128e3_117     ; inserted

; Entry 1000128e3; block 117; address 100012f3a
L1000128e3_117:
    LEA RBX, [rel L__DATA___common + 408]
    JMP L1000128e3_131

; Entry 1000128e3; block 118; address 100012f61
L1000128e3_118:
    LEA RDI, [RBP + -5184]
    CALL _strlen
    JMP L1000128e3_119     ; inserted

; Entry 1000128e3; block 119; address 100012f6d
L1000128e3_119:
    TEST EAX, EAX
    JS L1000128e3_121
    JMP L1000128e3_120     ; inserted

; Entry 1000128e3; block 120; address 100012f71
L1000128e3_120:
    MOV ECX, EAX
    CMP byte [RBP + RCX-1], 47
    JE L1000128e3_123
    JMP L1000128e3_122     ; inserted

; Entry 1000128e3; block 121; address 100012f86
L1000128e3_121:
    MOV byte [RBP + -5184], 0
    JMP L1000128e3_124

; Entry 1000128e3; block 122; address 100012f7d
L1000128e3_122:
    LEA ECX, [RAX + -1]
    TEST EAX, EAX
    MOV EAX, ECX
    JG L1000128e3_120
    JMP L1000128e3_121     ; inserted

; Entry 1000128e3; block 123; address 100012f8f
L1000128e3_123:
    INC EAX
    CDQE 
    MOV byte [RBP + RAX-1], 0
    JMP L1000128e3_124     ; inserted

; Entry 1000128e3; block 124; address 100012f9b
L1000128e3_124:
    LEA RDI, [RBP + -5184]
    CALL _strlen
    JMP L1000128e3_125     ; inserted

; Entry 1000128e3; block 125; address 100012fa7
L1000128e3_125:
    MOV RBX, RAX
    MOV R13, qword [RBP + -5200]
    MOV RDI, R13
    CALL _strlen
    JMP L1000128e3_126     ; inserted

; Entry 1000128e3; block 126; address 100012fb9
L1000128e3_126:
    LEA RDI, [RBX + RAX]
    ADD RDI, 40
    CALL _malloc
    JMP L1000128e3_127     ; inserted

; Entry 1000128e3; block 127; address 100012fc6
L1000128e3_127:
    LEA RBX, [rel L__DATA___common + 408]
    MOV qword [RBX], RAX
    TEST RAX, RAX
    JNE L1000128e3_129
    JMP L1000128e3_128     ; inserted

; Entry 1000128e3; block 128; address 100012fd5
L1000128e3_128:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_36373]
    CALL L100002e30_0

; Entry 1000128e3; block 129; address 100012fe9
L1000128e3_129:
    MOV RDI, RAX
    LEA RSI, [RBP + -5184]
    CALL _strcpy
    JMP L1000128e3_130     ; inserted

; Entry 1000128e3; block 130; address 100012ff8
L1000128e3_130:
    MOV RDI, qword [RBX]
    MOV RSI, R13
    CALL _strcat
    JMP L1000128e3_131     ; inserted

; Entry 1000128e3; block 131; address 100013003
L1000128e3_131:
    MOV R13, qword [RBP + -5208]
    MOV RDI, R12
    CALL _free
    JMP L1000128e3_132     ; inserted

; Entry 1000128e3; block 132; address 100013012
L1000128e3_132:
    MOV RDI, qword [RBX]
    MOV RSI, R13
    CALL L1000127e1_0
    JMP L1000128e3_133     ; inserted

; Entry 1000128e3; block 133; address 10001301d
L1000128e3_133:
    MOV R12, RAX
    MOV RDI, R15
    CALL _free
    JMP L1000128e3_134     ; inserted

; Entry 1000128e3; block 134; address 100013028
L1000128e3_134:
    MOV RBX, qword [RBX]
    MOV RDI, RBX
    CALL _strlen
    JMP L1000128e3_135     ; inserted

; Entry 1000128e3; block 135; address 100013033
L1000128e3_135:
    LEA RDI, [RAX + 40]
    CALL _malloc
    JMP L1000128e3_136     ; inserted

; Entry 1000128e3; block 136; address 10001303c
L1000128e3_136:
    MOV R15, RAX
    TEST RAX, RAX
    JNE L1000128e3_138
    JMP L1000128e3_137     ; inserted

; Entry 1000128e3; block 137; address 100013044
L1000128e3_137:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_36373]
    CALL L100002e30_0

; Entry 1000128e3; block 138; address 10001305f
L1000128e3_138:
    MOV RDI, R15
    MOV RSI, RBX
    CALL _strcpy
    JMP L1000128e3_139     ; inserted

; Entry 1000128e3; block 139; address 10001306a
L1000128e3_139:
    MOV RDI, R15
    CALL _strlen
    JMP L1000128e3_140     ; inserted

; Entry 1000128e3; block 140; address 100013072
L1000128e3_140:
    TEST EAX, EAX
    LEA RBX, [rel L__TEXT___cstring_6381]
    JS L1000128e3_142
    JMP L1000128e3_141     ; inserted

; Entry 1000128e3; block 141; address 10001307d
L1000128e3_141:
    MOV ECX, EAX
    CMP byte [R15 + RCX], 47
    JE L1000128e3_144
    JMP L1000128e3_143     ; inserted

; Entry 1000128e3; block 142; address 10001309a
L1000128e3_142:
    MOV RDI, R12
    MOV RSI, RBX
    CALL _fopen
    JMP L1000128e3_146     ; inserted

; Entry 1000128e3; block 143; address 100013086
L1000128e3_143:
    LEA ECX, [RAX + -1]
    TEST EAX, EAX
    MOV EAX, ECX
    JG L1000128e3_141
    JMP L1000128e3_145     ; inserted

; Entry 1000128e3; block 144; address 100013091
L1000128e3_144:
    INC EAX
    CDQE 
    MOV byte [R15 + RAX], 0
    JMP L1000128e3_142     ; inserted

; Entry 1000128e3; block 145; address 10001308f
L1000128e3_145:
    JMP L1000128e3_142

; Entry 1000128e3; block 146; address 1000130a5
L1000128e3_146:
    TEST RAX, RAX
    JE L1000128e3_148
    JMP L1000128e3_147     ; inserted

; Entry 1000128e3; block 147; address 1000130aa
L1000128e3_147:
    MOV RDI, RAX
    CALL _fclose
    JMP L1000128e3_149     ; inserted

; Entry 1000128e3; block 148; address 1000130c5
L1000128e3_148:
    MOV RCX, qword [R14]
    MOV ESI, 24
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36799]
    CALL _fwrite
    JMP L1000128e3_150     ; inserted

; Entry 1000128e3; block 149; address 1000130b2
L1000128e3_149:
    MOV dword [RBP + -5188], 1
    LEA RSI, [rel L__TEXT___cstring_36824]
    JMP L1000128e3_151

; Entry 1000128e3; block 150; address 1000130de
L1000128e3_150:
    LEA RSI, [rel L__TEXT___cstring_10517]
    JMP L1000128e3_151     ; inserted

; Entry 1000128e3; block 151; address 1000130e5
L1000128e3_151:
    MOV RDI, qword [R14]
    MOV RDX, R12
    XOR EAX, EAX
    CALL _fprintf
    JMP L1000128e3_152     ; inserted

; Entry 1000128e3; block 152; address 1000130f2
L1000128e3_152:
    JMP L1000128e3_153

; Entry 1000128e3; block 153; address 100012ae6
L1000128e3_153:
    MOV R13D, dword [RBP + -5188]
    JMP L1000128e3_101     ; inserted

; Entry 1000128e3; block 154; address 100013161
L1000128e3_154:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -48]
    JNE L1000128e3_161
    JMP L1000128e3_160     ; inserted

; Entry 1000128e3; block 155; address 100013124
L1000128e3_155:
    MOV RDI, qword [R14]
    LEA RSI, [rel L__TEXT___cstring_36836]
    XOR EBX, EBX
    MOV RDX, R12
    XOR EAX, EAX
    CALL _fprintf
    JMP L1000128e3_156     ; inserted

; Entry 1000128e3; block 156; address 10001313a
L1000128e3_156:
    MOV RDI, qword [RBP + -5200]
    CALL _free
    JMP L1000128e3_157     ; inserted

; Entry 1000128e3; block 157; address 100013146
L1000128e3_157:
    MOV RDI, R15
    CALL _free
    JMP L1000128e3_158     ; inserted

; Entry 1000128e3; block 158; address 10001314e
L1000128e3_158:
    MOV RDI, qword [RBP + -5216]
    CALL _free
    JMP L1000128e3_159     ; inserted

; Entry 1000128e3; block 159; address 10001315a
L1000128e3_159:
    JMP L1000128e3_154

; Entry 1000128e3; block 160; address 100013171
L1000128e3_160:
    MOV EAX, EBX
    ADD RSP, 5192
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000128e3; block 161; address 100013185
L1000128e3_161:
    CALL ___stack_chk_fail



; ---------------------
; Function: 0x10001318a
; ---------------------
; Entry 10001318a; block 0; address 10001318a
L10001318a_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 1096
    MOV qword [RBP + -1128], RDI
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -48], RAX
    LEA RBX, [rel L__DATA___common + 424]
    MOV R14, qword [RBX]
    MOV RDI, R14
    CALL _strlen
    JMP L10001318a_1     ; inserted

; Entry 10001318a; block 1; address 1000131c5
L10001318a_1:
    LEA RDI, [RAX + 40]
    CALL _malloc
    JMP L10001318a_2     ; inserted

; Entry 10001318a; block 2; address 1000131ce
L10001318a_2:
    MOV R13, RAX
    TEST RAX, RAX
    JNE L10001318a_4
    JMP L10001318a_3     ; inserted

; Entry 10001318a; block 3; address 1000131d6
L10001318a_3:
    LEA RSI, [rel L__TEXT___cstring_36373]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 10001318a; block 4; address 1000131ea
L10001318a_4:
    MOV RBX, 18446744069414584320
    MOV R15, 4294967296
    MOV RDI, R13
    MOV RSI, R14
    CALL _strcpy
    JMP L10001318a_5     ; inserted

; Entry 10001318a; block 5; address 100013209
L10001318a_5:
    MOV RDI, R13
    CALL _strlen
    JMP L10001318a_6     ; inserted

; Entry 10001318a; block 6; address 100013211
L10001318a_6:
    MOV R12, RAX
    MOV RSI, 35184372090881
    TEST R12D, R12D
    JS L10001318a_8
    JMP L10001318a_7     ; inserted

; Entry 10001318a; block 7; address 100013223
L10001318a_7:
    MOV ECX, R12D
    MOV RAX, RCX
    SHL RAX, 32
    ADD RAX, R15
    INC RCX
    LEA R15, [rel L__DATA___common + 424]
    JMP L10001318a_12     ; inserted

; Entry 10001318a; block 8; address 10001326f
L10001318a_8:
    LEA R15, [rel L__DATA___common + 424]
    JMP L10001318a_14     ; inserted

; Entry 10001318a; block 9; address 100013247
L10001318a_9:
    MOVZX EDX, DL
    BT RSI, RDX
    JB L10001318a_11
    JMP L10001318a_10     ; inserted

; Entry 10001318a; block 10; address 100013250
L10001318a_10:
    ADD RAX, RBX
    DEC R12D
    DEC RCX
    JG L10001318a_12
    JMP L10001318a_13     ; inserted

; Entry 10001318a; block 11; address 100013263
L10001318a_11:
    SAR RAX, 32
    MOV byte [R13 + RAX], 0
    JMP L10001318a_14

; Entry 10001318a; block 12; address 10001323a
L10001318a_12:
    MOV DL, byte [R13 + RCX-1]
    ADD DL, 209
    CMP DL, 45
    JA L10001318a_10
    JMP L10001318a_9     ; inserted

; Entry 10001318a; block 13; address 10001325b
L10001318a_13:
    MOV R12D, 4294967295
    JMP L10001318a_14

; Entry 10001318a; block 14; address 100013276
L10001318a_14:
    MOV RBX, qword [R15]
    MOV RDI, RBX
    CALL _strlen
    JMP L10001318a_15     ; inserted

; Entry 10001318a; block 15; address 100013281
L10001318a_15:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L10001318a_16     ; inserted

; Entry 10001318a; block 16; address 10001328a
L10001318a_16:
    MOV R14, RAX
    TEST RAX, RAX
    JNE L10001318a_18
    JMP L10001318a_17     ; inserted

; Entry 10001318a; block 17; address 100013292
L10001318a_17:
    LEA RSI, [rel L__TEXT___cstring_36373]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 10001318a; block 18; address 1000132a6
L10001318a_18:
    MOV RDI, RBX
    CALL _strlen
    JMP L10001318a_19     ; inserted

; Entry 10001318a; block 19; address 1000132ae
L10001318a_19:
    MOV R15, RAX
    MOV RDI, R13
    CALL _strlen
    JMP L10001318a_20     ; inserted

; Entry 10001318a; block 20; address 1000132b9
L10001318a_20:
    CMP R15, RAX
    JNE L10001318a_22
    JMP L10001318a_21     ; inserted

; Entry 10001318a; block 21; address 1000132be
L10001318a_21:
    MOV byte [R14], 0
    JMP L10001318a_23

; Entry 10001318a; block 22; address 1000132c4
L10001318a_22:
    ADD RBX, RAX
    MOV RDI, R14
    MOV RSI, RBX
    CALL _strcpy
    JMP L10001318a_23     ; inserted

; Entry 10001318a; block 23; address 1000132d2
L10001318a_23:
    MOV RBX, 18446744069414584320
    MOV RDX, qword [RBP + -1128]
    TEST R12D, R12D
    LEA R15, [rel L__DATA___common + 424]
    JNS L10001318a_25
    JMP L10001318a_24     ; inserted

; Entry 10001318a; block 24; address 1000132ef
L10001318a_24:
    MOVUPS XMM0, oword [rel L__TEXT___cstring_36384]
    MOVUPS oword [R13], XMM0
    MOV dword [R13 + 16], 2718066
    JMP L10001318a_25     ; inserted

; Entry 10001318a; block 25; address 100013303
L10001318a_25:
    INC EDX
    LEA RAX, [rel L__DATA___common + 604]
    CMP dword [RAX], 0
    JE L10001318a_27
    JMP L10001318a_26     ; inserted

; Entry 10001318a; block 26; address 100013311
L10001318a_26:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RAX]
    MOV EDI, 10
    MOV R12, RDX
    CALL _fputc
    JMP L10001318a_28     ; inserted

; Entry 10001318a; block 27; address 10001332b
L10001318a_27:
    LEA R12, [rel L__DATA___common + 6336]
    MOV RDI, qword [R12]
    LEA RSI, [rel L__TEXT___cstring_36849]
    XOR EAX, EAX
    CALL _fprintf
    JMP L10001318a_29     ; inserted

; Entry 10001318a; block 28; address 100013328
L10001318a_28:
    MOV RDX, R12
    JMP L10001318a_27     ; inserted

; Entry 10001318a; block 29; address 100013344
L10001318a_29:
    MOV RCX, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_36867]
    MOV ESI, 38
    MOV EDX, 1
    CALL _fwrite
    JMP L10001318a_30     ; inserted

; Entry 10001318a; block 30; address 10001335e
L10001318a_30:
    MOV RDI, qword [R12]
    LEA RSI, [rel L__TEXT___cstring_10517]
    MOV RDX, R13
    XOR EAX, EAX
    CALL _fprintf
    JMP L10001318a_31     ; inserted

; Entry 10001318a; block 31; address 100013373
L10001318a_31:
    MOV RCX, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_36906]
    MOV ESI, 60
    MOV EDX, 1
    CALL _fwrite
    JMP L10001318a_32     ; inserted

; Entry 10001318a; block 32; address 10001338d
L10001318a_32:
    LEA R12, [rel L__DATA___common + 6336]
    MOV RCX, qword [R12]
    MOV ESI, 34
    MOV EDX, 1
    LEA RDI, [rel L__TEXT___cstring_36967]
    CALL _fwrite
    JMP L10001318a_33     ; inserted

; Entry 10001318a; block 33; address 1000133ae
L10001318a_33:
    MOV RDI, qword [R12]
    CALL _fflush
    JMP L10001318a_34     ; inserted

; Entry 10001318a; block 34; address 1000133b7
L10001318a_34:
    MOV RAX, qword [rel ___stdinp]
    MOV RDX, qword [RAX]
    LEA R12, [RBP + -1120]
    MOV RDI, R12
    MOV ESI, 1024
    CALL _fgets
    JMP L10001318a_35     ; inserted

; Entry 10001318a; block 35; address 1000133d5
L10001318a_35:
    XOR EAX, EAX
    JMP L10001318a_40     ; inserted

; Entry 10001318a; block 36; address 1000133e2
L10001318a_36:
    CMP CL, 10
    JE L10001318a_39
    JMP L10001318a_38     ; inserted

; Entry 10001318a; block 37; address 1000133f6
L10001318a_37:
    MOV AL, byte [RBP + -1120]
    CMP AL, 46
    JE L10001318a_42
    JMP L10001318a_41     ; inserted

; Entry 10001318a; block 38; address 1000133e7
L10001318a_38:
    INC RAX
    JMP L10001318a_40

; Entry 10001318a; block 39; address 1000133ec
L10001318a_39:
    MOV EAX, EAX
    MOV byte [RBP + RAX-1], 0
    JMP L10001318a_37     ; inserted

; Entry 10001318a; block 40; address 1000133d7
L10001318a_40:
    MOV CL, byte [RBP + RAX-1]
    TEST CL, CL
    JE L10001318a_37
    JMP L10001318a_36     ; inserted

; Entry 10001318a; block 41; address 100013400
L10001318a_41:
    TEST AL, AL
    JNE L10001318a_44
    JMP L10001318a_43     ; inserted

; Entry 10001318a; block 42; address 100013409
L10001318a_42:
    CMP byte [RBP + -1119], 0
    JNE L10001318a_44
    JMP L10001318a_45     ; inserted

; Entry 10001318a; block 43; address 100013404
L10001318a_43:
    MOV RDI, R13
    CALL _free
    JMP L10001318a_93     ; inserted

; Entry 10001318a; block 44; address 100013419
L10001318a_44:
    MOV RDI, R12
    CALL _strlen
    JMP L10001318a_46     ; inserted

; Entry 10001318a; block 45; address 100013412
L10001318a_45:
    MOV byte [RBP + -1120], 0
    JMP L10001318a_44     ; inserted

; Entry 10001318a; block 46; address 100013421
L10001318a_46:
    TEST EAX, EAX
    MOV RSI, 35184372090881
    JS L10001318a_48
    JMP L10001318a_47     ; inserted

; Entry 10001318a; block 47; address 10001342f
L10001318a_47:
    MOV ECX, EAX
    MOV RAX, RCX
    SHL RAX, 32
    MOV RDX, 4294967296
    ADD RAX, RDX
    INC RCX
    JMP L10001318a_52     ; inserted

; Entry 10001318a; block 48; address 100013468
L10001318a_48:
    MOV RDI, qword [R15]
    CALL _free
    JMP L10001318a_53     ; inserted

; Entry 10001318a; block 49; address 100013457
L10001318a_49:
    MOVZX EDX, DL
    BT RSI, RDX
    JB L10001318a_51
    JMP L10001318a_50     ; inserted

; Entry 10001318a; block 50; address 100013460
L10001318a_50:
    ADD RAX, RBX
    DEC RCX
    JG L10001318a_52
    JMP L10001318a_48     ; inserted

; Entry 10001318a; block 51; address 1000134c5
L10001318a_51:
    SAR RAX, 32
    MOV byte [RBP + RAX-1], 0
    MOV RDI, qword [R15]
    CALL _free
    JMP L10001318a_59     ; inserted

; Entry 10001318a; block 52; address 100013448
L10001318a_52:
    MOV DL, byte [RBP + RCX-1]
    ADD DL, 209
    CMP DL, 45
    JA L10001318a_50
    JMP L10001318a_49     ; inserted

; Entry 10001318a; block 53; address 100013470
L10001318a_53:
    MOVUPS XMM0, oword [rel L__TEXT___cstring_36384]
    MOVAPS oword [RBP + -1120], XMM0
    MOV dword [RBP + -1104], 2718066
    MOV RDI, R14
    CALL _strlen
    JMP L10001318a_54     ; inserted

; Entry 10001318a; block 54; address 100013490
L10001318a_54:
    LEA RDI, [RAX + 40]
    CALL _malloc
    JMP L10001318a_55     ; inserted

; Entry 10001318a; block 55; address 100013499
L10001318a_55:
    MOV qword [R15], RAX
    TEST RAX, RAX
    JNE L10001318a_57
    JMP L10001318a_56     ; inserted

; Entry 10001318a; block 56; address 1000134a1
L10001318a_56:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_36373]
    CALL L100002e30_0

; Entry 10001318a; block 57; address 1000134b5
L10001318a_57:
    MOV RDI, RAX
    MOV RSI, R14
    CALL _strcpy
    JMP L10001318a_58     ; inserted

; Entry 10001318a; block 58; address 1000134c0
L10001318a_58:
    JMP L10001318a_72

; Entry 10001318a; block 59; address 1000134d9
L10001318a_59:
    MOV RDI, R12
    CALL _strlen
    JMP L10001318a_60     ; inserted

; Entry 10001318a; block 60; address 1000134e1
L10001318a_60:
    TEST EAX, EAX
    JS L10001318a_62
    JMP L10001318a_61     ; inserted

; Entry 10001318a; block 61; address 1000134e5
L10001318a_61:
    MOV ECX, EAX
    CMP byte [RBP + RCX-1], 47
    JE L10001318a_64
    JMP L10001318a_63     ; inserted

; Entry 10001318a; block 62; address 1000134fa
L10001318a_62:
    MOV byte [RBP + -1120], 0
    JMP L10001318a_65

; Entry 10001318a; block 63; address 1000134f1
L10001318a_63:
    LEA ECX, [RAX + -1]
    TEST EAX, EAX
    MOV EAX, ECX
    JG L10001318a_61
    JMP L10001318a_62     ; inserted

; Entry 10001318a; block 64; address 100013503
L10001318a_64:
    INC EAX
    CDQE 
    MOV byte [RBP + RAX-1], 0
    JMP L10001318a_65     ; inserted

; Entry 10001318a; block 65; address 10001350f
L10001318a_65:
    MOV RDI, R12
    CALL _strlen
    JMP L10001318a_66     ; inserted

; Entry 10001318a; block 66; address 100013517
L10001318a_66:
    MOV RBX, RAX
    MOV RDI, R14
    CALL _strlen
    JMP L10001318a_67     ; inserted

; Entry 10001318a; block 67; address 100013522
L10001318a_67:
    LEA RDI, [RBX + RAX]
    ADD RDI, 40
    CALL _malloc
    JMP L10001318a_68     ; inserted

; Entry 10001318a; block 68; address 10001352f
L10001318a_68:
    MOV qword [R15], RAX
    TEST RAX, RAX
    JNE L10001318a_70
    JMP L10001318a_69     ; inserted

; Entry 10001318a; block 69; address 100013537
L10001318a_69:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_36373]
    CALL L100002e30_0

; Entry 10001318a; block 70; address 10001354b
L10001318a_70:
    MOV RDI, RAX
    MOV RSI, R12
    CALL _strcpy
    JMP L10001318a_71     ; inserted

; Entry 10001318a; block 71; address 100013556
L10001318a_71:
    MOV RDI, qword [R15]
    MOV RSI, R14
    CALL _strcat
    JMP L10001318a_72     ; inserted

; Entry 10001318a; block 72; address 100013561
L10001318a_72:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    LEA RSI, [rel L__TEXT___cstring_37002]
    MOV RDX, R12
    XOR EAX, EAX
    CALL _fprintf
    JMP L10001318a_73     ; inserted

; Entry 10001318a; block 73; address 10001357c
L10001318a_73:
    MOV RDI, R14
    CALL _free
    JMP L10001318a_74     ; inserted

; Entry 10001318a; block 74; address 100013584
L10001318a_74:
    MOV RDI, R13
    CALL _free
    JMP L10001318a_75     ; inserted

; Entry 10001318a; block 75; address 10001358c
L10001318a_75:
    MOV RBX, qword [R15]
    MOV RDI, RBX
    CALL _strlen
    JMP L10001318a_76     ; inserted

; Entry 10001318a; block 76; address 100013597
L10001318a_76:
    LEA RDI, [RAX + 40]
    CALL _malloc
    JMP L10001318a_77     ; inserted

; Entry 10001318a; block 77; address 1000135a0
L10001318a_77:
    MOV R13, RAX
    TEST RAX, RAX
    JNE L10001318a_79
    JMP L10001318a_78     ; inserted

; Entry 10001318a; block 78; address 1000135a8
L10001318a_78:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_36373]
    CALL L100002e30_0

; Entry 10001318a; block 79; address 1000135bc
L10001318a_79:
    MOV RDI, R13
    MOV RSI, RBX
    CALL _strcpy
    JMP L10001318a_80     ; inserted

; Entry 10001318a; block 80; address 1000135c7
L10001318a_80:
    MOV RDI, R13
    CALL _strlen
    JMP L10001318a_81     ; inserted

; Entry 10001318a; block 81; address 1000135cf
L10001318a_81:
    TEST EAX, EAX
    MOV RBX, 18446744069414584320
    JS L10001318a_83
    JMP L10001318a_82     ; inserted

; Entry 10001318a; block 82; address 1000135dd
L10001318a_82:
    MOV ECX, EAX
    CMP byte [R13 + RCX], 47
    JE L10001318a_85
    JMP L10001318a_84     ; inserted

; Entry 10001318a; block 83; address 1000135fc
L10001318a_83:
    MOV R15, qword [R15]
    MOV RDI, R15
    CALL _strlen
    JMP L10001318a_87     ; inserted

; Entry 10001318a; block 84; address 1000135e7
L10001318a_84:
    LEA ECX, [RAX + -1]
    TEST EAX, EAX
    MOV EAX, ECX
    JG L10001318a_82
    JMP L10001318a_86     ; inserted

; Entry 10001318a; block 85; address 1000135f2
L10001318a_85:
    INC EAX
    CDQE 
    MOV byte [R13 + RAX], 0
    JMP L10001318a_83     ; inserted

; Entry 10001318a; block 86; address 1000135f0
L10001318a_86:
    JMP L10001318a_83

; Entry 10001318a; block 87; address 100013607
L10001318a_87:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L10001318a_88     ; inserted

; Entry 10001318a; block 88; address 100013610
L10001318a_88:
    MOV R14, RAX
    TEST RAX, RAX
    JNE L10001318a_90
    JMP L10001318a_89     ; inserted

; Entry 10001318a; block 89; address 100013618
L10001318a_89:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_36373]
    CALL L100002e30_0

; Entry 10001318a; block 90; address 100013633
L10001318a_90:
    MOV RDI, R13
    CALL _strlen
    JMP L10001318a_91     ; inserted

; Entry 10001318a; block 91; address 10001363b
L10001318a_91:
    ADD R15, RAX
    MOV RDI, R14
    MOV RSI, R15
    CALL _strcpy
    JMP L10001318a_92     ; inserted

; Entry 10001318a; block 92; address 100013649
L10001318a_92:
    LEA R15, [rel L__DATA___common + 424]
    JMP L10001318a_32

; Entry 10001318a; block 93; address 10001365d
L10001318a_93:
    MOV RDI, R14
    CALL _free
    JMP L10001318a_94     ; inserted

; Entry 10001318a; block 94; address 100013665
L10001318a_94:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -48]
    JNE L10001318a_96
    JMP L10001318a_95     ; inserted

; Entry 10001318a; block 95; address 100013675
L10001318a_95:
    MOV EAX, 1
    ADD RSP, 1096
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10001318a; block 96; address 10001368c
L10001318a_96:
    CALL ___stack_chk_fail



; ---------------------
; Function: 0x100013691
; ---------------------
; Entry 100013691; block 0; address 100013691
L100013691_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    SUB RSP, 16
    MOV RBX, RSI
    MOV R14, RDI
    INC RBX
    CMP RBX, 100000
    JB L100013691_2
    JMP L100013691_1     ; inserted

; Entry 100013691; block 1; address 1000136b2
L100013691_1:
    LEA RSI, [rel L__TEXT___cstring_37030]
    MOV EDI, 6
    CALL L100002e30_0

; Entry 100013691; block 2; address 1000136c3
L100013691_2:
    LEA RCX, [rel L__TEXT___cstring_37060]
    LEA R15, [RBP + -38]
    MOV EDX, 6
    MOV RDI, R15
    XOR ESI, ESI
    MOV R8, RBX
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L100013691_3     ; inserted

; Entry 100013691; block 3; address 1000136e2
L100013691_3:
    MOV RDI, R14
    CALL _strlen
    JMP L100013691_4     ; inserted

; Entry 100013691; block 4; address 1000136ea
L100013691_4:
    MOV RBX, RAX
    ADD EAX, 18446744073709551613
    MOVSXD R12, EAX
    MOV RDI, R15
    CALL _strlen
    JMP L100013691_5     ; inserted

; Entry 100013691; block 5; address 1000136fb
L100013691_5:
    ADD EAX, EBX
    ADD EAX, 18446744073709551614
    MOVSXD RDI, EAX
    CALL _malloc
    JMP L100013691_6     ; inserted

; Entry 100013691; block 6; address 100013708
L100013691_6:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L100013691_8
    JMP L100013691_7     ; inserted

; Entry 100013691; block 7; address 100013710
L100013691_7:
    LEA RSI, [rel L__TEXT___cstring_36373]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100013691; block 8; address 100013721
L100013691_8:
    MOV RDI, RBX
    MOV RSI, R14
    CALL _strcpy
    JMP L100013691_9     ; inserted

; Entry 100013691; block 9; address 10001372c
L100013691_9:
    MOV byte [RBX + R12], 0
    LEA RSI, [RBP + -38]
    MOV RDI, RBX
    CALL _strcat
    JMP L100013691_10     ; inserted

; Entry 100013691; block 10; address 10001373d
L100013691_10:
    MOV RAX, RBX
    ADD RSP, 16
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x10001374d
; ---------------------
; Entry 10001374d; block 0; address 10001374d
L10001374d_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV R14, RDX
    MOV R15, RSI
    MOV RSI, RDI
    LEA RAX, [rel L__DATA___common + 424]
    MOV RDI, qword [RAX]
    CALL L100013691_0
    JMP L10001374d_1     ; inserted

; Entry 10001374d; block 1; address 10001376f
L10001374d_1:
    MOV RBX, RAX
    LEA RAX, [rel L__DATA___common + 600]
    CMP dword [RAX], 0
    JE L10001374d_3
    JMP L10001374d_2     ; inserted

; Entry 10001374d; block 2; address 10001377e
L10001374d_2:
    LEA RDI, [rel L__TEXT___cstring_37067]
    MOV RSI, RBX
    CALL L100003422_0
    JMP L10001374d_3     ; inserted

; Entry 10001374d; block 3; address 10001378d
L10001374d_3:
    MOV RDI, R15
    CALL _fclose
    JMP L10001374d_4     ; inserted

; Entry 10001374d; block 4; address 100013795
L10001374d_4:
    MOV RDI, R14
    MOV RSI, RBX
    CALL L1000035fe_0
    JMP L10001374d_5     ; inserted

; Entry 10001374d; block 5; address 1000137a0
L10001374d_5:
    MOV RDI, RBX
    CALL L100003676_0
    JMP L10001374d_6     ; inserted

; Entry 10001374d; block 6; address 1000137a8
L10001374d_6:
    XOR EAX, EAX
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x1000137b5
; ---------------------
; Entry 1000137b5; block 0; address 1000137b5
L1000137b5_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    XOR R12D, R12D
    TEST RDI, RDI
    JE L1000137b5_2
    JMP L1000137b5_1     ; inserted

; Entry 1000137b5; block 1; address 1000137cf
L1000137b5_1:
    MOV R14D, ESI
    MOV R15, RDI
    MOV RBX, qword [RDI]
    MOVSXD R13, ESI
    TEST RBX, RBX
    JE L1000137b5_4
    JMP L1000137b5_3     ; inserted

; Entry 1000137b5; block 2; address 1000138a6
L1000137b5_2:
    MOV RAX, R12
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000137b5; block 3; address 1000137e0
L1000137b5_3:
    XOR R12D, R12D
    JMP L1000137b5_7     ; inserted

; Entry 1000137b5; block 4; address 100013800
L1000137b5_4:
    MOV EAX, R12D
    LEA RDI, [RAX * 8 * 8]
    CALL _malloc
    JMP L1000137b5_9     ; inserted

; Entry 1000137b5; block 5; address 1000137e8
L1000137b5_5:
    CMP R12, R13
    JGE L1000137b5_4
    JMP L1000137b5_6     ; inserted

; Entry 1000137b5; block 6; address 1000137ed
L1000137b5_6:
    LEA RAX, [R12 + 1]
    CMP qword [R15 + R12 * 8 + 8], 0
    MOV R12, RAX
    JNE L1000137b5_7
    JMP L1000137b5_8     ; inserted

; Entry 1000137b5; block 7; address 1000137e3
L1000137b5_7:
    TEST R14D, R14D
    JE L1000137b5_6
    JMP L1000137b5_5     ; inserted

; Entry 1000137b5; block 8; address 1000137fd
L1000137b5_8:
    MOV R12D, EAX
    JMP L1000137b5_4     ; inserted

; Entry 1000137b5; block 9; address 100013810
L1000137b5_9:
    MOV R12, RAX
    TEST RAX, RAX
    JNE L1000137b5_11
    JMP L1000137b5_10     ; inserted

; Entry 1000137b5; block 10; address 100013818
L1000137b5_10:
    LEA RSI, [rel L__TEXT___cstring_37161]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 1000137b5; block 11; address 10001382c
L1000137b5_11:
    TEST RBX, RBX
    JE L1000137b5_13
    JMP L1000137b5_12     ; inserted

; Entry 1000137b5; block 12; address 100013831
L1000137b5_12:
    MOV qword [RBP + -48], R13
    XOR R13D, R13D
    JMP L1000137b5_23     ; inserted

; Entry 1000137b5; block 13; address 10001389b
L1000137b5_13:
    XOR R13D, R13D
    JMP L1000137b5_16     ; inserted

; Entry 1000137b5; block 14; address 10001383d
L1000137b5_14:
    CMP R13, qword [RBP + -48]
    JGE L1000137b5_16
    JMP L1000137b5_15     ; inserted

; Entry 1000137b5; block 15; address 100013843
L1000137b5_15:
    MOV RDI, RBX
    CALL _strlen
    JMP L1000137b5_17     ; inserted

; Entry 1000137b5; block 16; address 10001389e
L1000137b5_16:
    MOV qword [R12 + R13 * 8], 0
    JMP L1000137b5_2     ; inserted

; Entry 1000137b5; block 17; address 10001384b
L1000137b5_17:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L1000137b5_18     ; inserted

; Entry 1000137b5; block 18; address 100013854
L1000137b5_18:
    MOV qword [R12 + R13 * 8], RAX
    TEST RAX, RAX
    JNE L1000137b5_20
    JMP L1000137b5_19     ; inserted

; Entry 1000137b5; block 19; address 10001385d
L1000137b5_19:
    MOV RDI, R12
    CALL L1000138b8_0
    JMP L1000137b5_21     ; inserted

; Entry 1000137b5; block 20; address 10001387e
L1000137b5_20:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L1000137b5_22     ; inserted

; Entry 1000137b5; block 21; address 100013865
L1000137b5_21:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_37161]
    CALL L100002e30_0

; Entry 1000137b5; block 22; address 100013889
L1000137b5_22:
    MOV RBX, qword [R15 + R13 * 8 + 8]
    INC R13
    TEST RBX, RBX
    JNE L1000137b5_23
    JMP L1000137b5_24     ; inserted

; Entry 1000137b5; block 23; address 100013838
L1000137b5_23:
    TEST R14D, R14D
    JE L1000137b5_15
    JMP L1000137b5_14     ; inserted

; Entry 1000137b5; block 24; address 100013896
L1000137b5_24:
    MOV R13D, R13D
    JMP L1000137b5_16



; ---------------------
; Function: 0x1000138b8
; ---------------------
; Entry 1000138b8; block 0; address 1000138b8
L1000138b8_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R14
    PUSH RBX
    TEST RDI, RDI
    JE L1000138b8_2
    JMP L1000138b8_1     ; inserted

; Entry 1000138b8; block 1; address 1000138c4
L1000138b8_1:
    MOV R14, RDI
    MOV RDI, qword [RDI]
    XOR EBX, EBX
    JMP L1000138b8_6     ; inserted

; Entry 1000138b8; block 2; address 1000138ea
L1000138b8_2:
    XOR EBX, EBX
    JMP L1000138b8_8     ; inserted

; Entry 1000138b8; block 3; address 1000138d1
L1000138b8_3:
    CALL _free
    JMP L1000138b8_5     ; inserted

; Entry 1000138b8; block 4; address 1000138e0
L1000138b8_4:
    MOV RDI, R14
    CALL _free
    JMP L1000138b8_7     ; inserted

; Entry 1000138b8; block 5; address 1000138d6
L1000138b8_5:
    MOV RDI, qword [R14 + RBX * 8 + 8]
    INC RBX
    JMP L1000138b8_6

; Entry 1000138b8; block 6; address 1000138cc
L1000138b8_6:
    TEST RDI, RDI
    JE L1000138b8_4
    JMP L1000138b8_3     ; inserted

; Entry 1000138b8; block 7; address 1000138e8
L1000138b8_7:
    JMP L1000138b8_8

; Entry 1000138b8; block 8; address 1000138ec
L1000138b8_8:
    MOV EAX, EBX
    POP RBX
    POP R14
    POP RBP
    RET 



; ---------------------
; Function: 0x1000138f3
; ---------------------
; Entry 1000138f3; block 0; address 1000138f3
L1000138f3_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 24
    TEST RDI, RDI
    JE L1000138f3_2
    JMP L1000138f3_1     ; inserted

; Entry 1000138f3; block 1; address 100013909
L1000138f3_1:
    MOV R15, RDI
    MOV R12, qword [RDI]
    TEST R12, R12
    JE L1000138f3_4
    JMP L1000138f3_3     ; inserted

; Entry 1000138f3; block 2; address 10001392c
L1000138f3_2:
    XOR R14D, R14D
    JMP L1000138f3_9

; Entry 1000138f3; block 3; address 100013914
L1000138f3_3:
    MOV R14D, 4294967295
    MOV RAX, R12
    JMP L1000138f3_5     ; inserted

; Entry 1000138f3; block 4; address 100013934
L1000138f3_4:
    XOR R14D, R14D
    JMP L1000138f3_7     ; inserted

; Entry 1000138f3; block 5; address 10001391d
L1000138f3_5:
    INC R14D
    CMP qword [RAX], 0
    LEA RAX, [RAX + 8]
    JNE L1000138f3_5
    JMP L1000138f3_6     ; inserted

; Entry 1000138f3; block 6; address 10001392a
L1000138f3_6:
    JMP L1000138f3_7

; Entry 1000138f3; block 7; address 100013937
L1000138f3_7:
    TEST RSI, RSI
    JE L1000138f3_9
    JMP L1000138f3_8     ; inserted

; Entry 1000138f3; block 8; address 100013940
L1000138f3_8:
    MOV dword [RBP + -56], EDX
    MOV qword [RBP + -48], RSI
    MOV dword [RBP + -52], ECX
    MOV EAX, R14D
    LEA RDI, [RAX * 8 * 16]
    CALL _malloc
    JMP L1000138f3_10     ; inserted

; Entry 1000138f3; block 9; address 100013a46
L1000138f3_9:
    MOV EAX, R14D
    ADD RSP, 24
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000138f3; block 10; address 10001395a
L1000138f3_10:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L1000138f3_12
    JMP L1000138f3_11     ; inserted

; Entry 1000138f3; block 11; address 100013962
L1000138f3_11:
    LEA RSI, [rel L__TEXT___cstring_37164]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 1000138f3; block 12; address 100013973
L1000138f3_12:
    XOR R13D, R13D
    TEST R12, R12
    JE L1000138f3_14
    JMP L1000138f3_13     ; inserted

; Entry 1000138f3; block 13; address 10001397b
L1000138f3_13:
    MOV ECX, dword [RBP + -56]
    TEST ECX, ECX
    JLE L1000138f3_14
    JMP L1000138f3_15     ; inserted

; Entry 1000138f3; block 14; address 1000139af
L1000138f3_14:
    MOV R14, qword [RBP + -48]
    JMP L1000138f3_17     ; inserted

; Entry 1000138f3; block 15; address 100013982
L1000138f3_15:
    MOV RAX, qword [R12]
    TEST RAX, RAX
    MOV R14, qword [RBP + -48]
    JE L1000138f3_17
    JMP L1000138f3_16     ; inserted

; Entry 1000138f3; block 16; address 10001398f
L1000138f3_16:
    MOV ECX, ECX
    XOR EDX, EDX
    JMP L1000138f3_19     ; inserted

; Entry 1000138f3; block 17; address 1000139b3
L1000138f3_17:
    MOV qword [RBP + -48], R15
    MOV RDI, R14
    CALL _strlen
    JMP L1000138f3_21     ; inserted

; Entry 1000138f3; block 18; address 1000139a0
L1000138f3_18:
    MOV RAX, qword [R12 + RDX * 8 + 8]
    MOV RDX, R13
    TEST RAX, RAX
    JNE L1000138f3_19
    JMP L1000138f3_20     ; inserted

; Entry 1000138f3; block 19; address 100013993
L1000138f3_19:
    LEA R13, [RDX + 1]
    MOV qword [RBX + RDX * 8], RAX
    CMP R13, RCX
    JAE L1000138f3_17
    JMP L1000138f3_18     ; inserted

; Entry 1000138f3; block 20; address 1000139ad
L1000138f3_20:
    JMP L1000138f3_17

; Entry 1000138f3; block 21; address 1000139bf
L1000138f3_21:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L1000138f3_22     ; inserted

; Entry 1000138f3; block 22; address 1000139c8
L1000138f3_22:
    MOV R15, RAX
    TEST RAX, RAX
    JNE L1000138f3_24
    JMP L1000138f3_23     ; inserted

; Entry 1000138f3; block 23; address 1000139d0
L1000138f3_23:
    LEA RSI, [rel L__TEXT___cstring_37164]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 1000138f3; block 24; address 1000139e1
L1000138f3_24:
    MOV RDI, R15
    MOV RSI, R14
    CALL _strcpy
    JMP L1000138f3_25     ; inserted

; Entry 1000138f3; block 25; address 1000139ec
L1000138f3_25:
    LEA R14D, [R13 + 1]
    MOV EAX, R13D
    MOV qword [RBX + RAX * 8], R15
    TEST R12, R12
    JE L1000138f3_27
    JMP L1000138f3_26     ; inserted

; Entry 1000138f3; block 26; address 1000139fc
L1000138f3_26:
    MOV RCX, qword [R12 + RAX * 8]
    TEST RCX, RCX
    MOV R15, qword [RBP + -48]
    MOV EDX, dword [RBP + -52]
    JE L1000138f3_29
    JMP L1000138f3_28     ; inserted

; Entry 1000138f3; block 27; address 100013a25
L1000138f3_27:
    MOV R15, qword [RBP + -48]
    MOV EDX, dword [RBP + -52]
    JMP L1000138f3_29     ; inserted

; Entry 1000138f3; block 28; address 100013a0c
L1000138f3_28:
    MOV qword [RBX + RAX * 8 + 8], RCX
    MOV RCX, qword [R12 + RAX * 8 + 8]
    INC RAX
    TEST RCX, RCX
    JNE L1000138f3_28
    JMP L1000138f3_30     ; inserted

; Entry 1000138f3; block 29; address 100013a2c
L1000138f3_29:
    MOVSXD RAX, R14D
    MOV qword [RBX + RAX * 8], 0
    TEST EDX, EDX
    JE L1000138f3_32
    JMP L1000138f3_31     ; inserted

; Entry 1000138f3; block 30; address 100013a1e
L1000138f3_30:
    INC EAX
    MOV R14D, EAX
    JMP L1000138f3_29

; Entry 1000138f3; block 31; address 100013a3b
L1000138f3_31:
    MOV RDI, R12
    CALL _free
    JMP L1000138f3_32     ; inserted

; Entry 1000138f3; block 32; address 100013a43
L1000138f3_32:
    MOV qword [R15], RBX
    JMP L1000138f3_9     ; inserted



; ---------------------
; Function: 0x100013a58
; ---------------------
; Entry 100013a58; block 0; address 100013a58
L100013a58_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 120
    MOV qword [R8], 0
    TEST RDI, RDI
    JE L100013a58_2
    JMP L100013a58_1     ; inserted

; Entry 100013a58; block 1; address 100013a75
L100013a58_1:
    MOV RAX, qword [RDI]
    MOV qword [RBP + -88], RAX
    TEST RAX, RAX
    JE L100013a58_2
    JMP L100013a58_3     ; inserted

; Entry 100013a58; block 2; address 100013ab3
L100013a58_2:
    MOV dword [RSI], 0
    JMP L100013a58_10     ; inserted

; Entry 100013a58; block 3; address 100013a81
L100013a58_3:
    MOV EBX, dword [RBP + 32]
    MOV R11, qword [RBP + 24]
    MOV R10, qword [RBP + 16]
    MOV R14D, 4294967295
    JMP L100013a58_4     ; inserted

; Entry 100013a58; block 4; address 100013a92
L100013a58_4:
    INC R14D
    CMP qword [RAX], 0
    LEA RAX, [RAX + 8]
    JNE L100013a58_4
    JMP L100013a58_5     ; inserted

; Entry 100013a58; block 5; address 100013a9f
L100013a58_5:
    TEST R14D, R14D
    JE L100013a58_7
    JMP L100013a58_6     ; inserted

; Entry 100013a58; block 6; address 100013aa4
L100013a58_6:
    TEST EBX, EBX
    JNE L100013a58_9
    JMP L100013a58_8     ; inserted

; Entry 100013a58; block 7; address 100013aae
L100013a58_7:
    MOV dword [RSI], R14D
    JMP L100013a58_10

; Entry 100013a58; block 8; address 100013aa8
L100013a58_8:
    CMP R14D, 1
    JNE L100013a58_9
    JMP L100013a58_7     ; inserted

; Entry 100013a58; block 9; address 100013aca
L100013a58_9:
    MOV qword [RBP + -64], R8
    MOV qword [RBP + -128], RDI
    MOV qword [RBP + -144], RSI
    MOV qword [RBP + -104], R9
    MOV dword [R9], 0
    MOV qword [RBP + -136], RDX
    MOV R12D, dword [RDX]
    MOV qword [RBP + -152], RCX
    MOV R13D, dword [RCX]
    XOR EAX, EAX
    CMP R13D, 18446744073709551609
    SETE CL
    CMP R12D, 18446744073709551615
    JE L100013a58_12
    JMP L100013a58_11     ; inserted

; Entry 100013a58; block 10; address 100013ab9
L100013a58_10:
    XOR EAX, EAX
    JMP L100013a58_178     ; inserted

; Entry 100013a58; block 11; address 100013b07
L100013a58_11:
    MOV EDX, R12D
    OR EDX, EBX
    JE L100013a58_12
    JMP L100013a58_13     ; inserted

; Entry 100013a58; block 12; address 100013b2c
L100013a58_12:
    MOV dword [R11], 4294967295
    MOV R13D, 4294967294
    MOV EDX, 4294967295
    XOR ESI, ESI
    MOV qword [RBP + -48], RSI
    JMP L100013a58_17

; Entry 100013a58; block 13; address 100013b0e
L100013a58_13:
    MOV EDI, dword [R10]
    MOVSXD RDX, dword [R11]
    CMP RDX, 18446744073709551615
    JE L100013a58_15
    JMP L100013a58_14     ; inserted

; Entry 100013a58; block 14; address 100013b1a
L100013a58_14:
    LEA RDX, [RDX + RDX * 4]
    LEA RSI, [rel L__DATA___data + 592]
    MOV RDX, qword [RSI + RDX * 8 + 24]
    JMP L100013a58_16

; Entry 100013a58; block 15; address 100013b46
L100013a58_15:
    XOR EDX, EDX
    JMP L100013a58_16     ; inserted

; Entry 100013a58; block 16; address 100013b48
L100013a58_16:
    MOV qword [RBP + -48], RDX
    MOV RDX, RDI
    JMP L100013a58_17     ; inserted

; Entry 100013a58; block 17; address 100013b4f
L100013a58_17:
    MOV AL, CL
    JMP L100013a58_49     ; inserted

; Entry 100013a58; block 18; address 100013b59
L100013a58_18:
    CMP dword [rel L__DATA___data + 3932], 0
    JE L100013a58_21
    JMP L100013a58_20     ; inserted

; Entry 100013a58; block 19; address 100014498
L100013a58_19:
    LEA R15D, [R12 + 1]
    CMP R12D, R14D
    JGE L100013a58_170
    JMP L100013a58_169     ; inserted

; Entry 100013a58; block 20; address 100013b66
L100013a58_20:
    CMP R13D, 18446744073709551612
    SETB AL
    CMP R13D, 18446744073709551610
    SETNE CL
    TEST AL, CL
    JNE L100013a58_23
    JMP L100013a58_22     ; inserted

; Entry 100013a58; block 21; address 100013c10
L100013a58_21:
    CMP R13D, 18446744073709551611
    JNE L100013a58_23
    JMP L100013a58_36     ; inserted

; Entry 100013a58; block 22; address 100013b7c
L100013a58_22:
    TEST EDX, EDX
    JS L100013a58_23
    JMP L100013a58_24     ; inserted

; Entry 100013a58; block 23; address 100013c28
L100013a58_23:
    CMP R13D, 18446744073709551610
    JE L100013a58_38
    JMP L100013a58_37     ; inserted

; Entry 100013a58; block 24; address 100013b84
L100013a58_24:
    MOV RBX, qword [RBP + -88]
    MOV ESI, EDX
    MOV R11, qword [RBX + RSI * 8]
    TEST R11, R11
    JE L100013a58_23
    JMP L100013a58_25     ; inserted

; Entry 100013a58; block 25; address 100013b97
L100013a58_25:
    MOV R8D, R13D
    AND R8D, 4294967293
    CMP EDX, R12D
    JGE L100013a58_27
    JMP L100013a58_26     ; inserted

; Entry 100013a58; block 26; address 100013ba3
L100013a58_26:
    XOR R10D, R10D
    CMP R8D, 18446744073709551613
    SETE R10B
    ADD R10D, R12D
    MOVSXD RDI, R10D
    LEA R9, [RSI + 1]
    MOV ECX, EDX
    JMP L100013a58_35     ; inserted

; Entry 100013a58; block 27; address 100013c1b
L100013a58_27:
    XOR EAX, EAX
    CMP R8D, 18446744073709551613
    SETE AL
    ADD EDX, EAX
    INC EDX
    JMP L100013a58_23     ; inserted

; Entry 100013a58; block 28; address 100013bbf
L100013a58_28:
    MOV R15, RDX
    MOV RAX, qword [RBX + RSI * 8 + 8]
    MOV qword [RBX + RSI * 8], RAX
    CMP R9, RDI
    JE L100013a58_31
    JMP L100013a58_30     ; inserted

; Entry 100013a58; block 29; address 100013bf8
L100013a58_29:
    MOV RAX, RSI
    JMP L100013a58_33     ; inserted

; Entry 100013a58; block 30; address 100013bd0
L100013a58_30:
    MOV RBX, R9
    JMP L100013a58_32     ; inserted

; Entry 100013a58; block 31; address 100013bec
L100013a58_31:
    MOV RBX, qword [RBP + -88]
    MOV RAX, RDI
    MOV RDX, R15
    JMP L100013a58_33

; Entry 100013a58; block 32; address 100013bd3
L100013a58_32:
    MOV RAX, qword [RBP + -88]
    MOV RDX, qword [RAX + RBX * 8 + 8]
    MOV qword [RAX + RBX * 8], RDX
    LEA RAX, [RBX + 1]
    MOV RBX, RAX
    CMP RDI, RAX
    JNE L100013a58_32
    JMP L100013a58_31     ; inserted

; Entry 100013a58; block 33; address 100013bfb
L100013a58_33:
    MOV qword [RBX + RAX * 8], R11
    INC ECX
    CMP ECX, R12D
    JE L100013a58_27
    JMP L100013a58_34     ; inserted

; Entry 100013a58; block 34; address 100013c06
L100013a58_34:
    MOV RBX, qword [RBP + -88]
    MOV R11, qword [RBX + RSI * 8]
    JMP L100013a58_35

; Entry 100013a58; block 35; address 100013bba
L100013a58_35:
    CMP EDX, R10D
    JGE L100013a58_29
    JMP L100013a58_28     ; inserted

; Entry 100013a58; block 36; address 100013c16
L100013a58_36:
    JMP L100013a58_38

; Entry 100013a58; block 37; address 100013c32
L100013a58_37:
    MOV EAX, R13D
    AND EAX, 4294967294
    CMP EAX, 18446744073709551612
    JNE L100013a58_40
    JMP L100013a58_39     ; inserted

; Entry 100013a58; block 38; address 100013ccf
L100013a58_38:
    INC R12D
    JMP L100013a58_63     ; inserted

; Entry 100013a58; block 39; address 100013c41
L100013a58_39:
    XOR EAX, EAX
    CMP R13D, 18446744073709551613
    SETE AL
    MOV ECX, R12D
    ADD ECX, EAX
    ADD R12D, EAX
    INC R12D
    MOVSXD RBX, ECX
    LEA RCX, [RBX + 1]
    MOV R15, qword [RBP + -88]
    MOV RDI, qword [R15 + RBX * 8 + 8]
    TEST EDX, EDX
    JS L100013a58_42
    JMP L100013a58_41     ; inserted

; Entry 100013a58; block 40; address 100013d26
L100013a58_40:
    CMP R13D, 18446744073709551614
    JE L100013a58_38
    JMP L100013a58_60     ; inserted

; Entry 100013a58; block 41; address 100013c69
L100013a58_41:
    TEST RDI, RDI
    JNE L100013a58_42
    JMP L100013a58_43     ; inserted

; Entry 100013a58; block 42; address 100013ca2
L100013a58_42:
    TEST RDI, RDI
    JE L100013a58_46
    JMP L100013a58_45     ; inserted

; Entry 100013a58; block 43; address 100013c6e
L100013a58_43:
    LEA RDI, [RBP + -88]
    LEA RSI, [rel L__TEXT___cstring_7501]
    MOV R14, RDX
    MOV ECX, 1
    CALL L1000138f3_0
    JMP L100013a58_44     ; inserted

; Entry 100013a58; block 44; address 100013c86
L100013a58_44:
    MOV RDX, R14
    MOV R14D, EAX
    LEA R12D, [RBX + 2]
    INC EDX
    MOV R15, qword [RBP + -88]
    MOV RDI, qword [R15 + RBX * 8 + 16]
    ADD RBX, 2
    MOV RCX, RBX
    JMP L100013a58_42     ; inserted

; Entry 100013a58; block 45; address 100013ca7
L100013a58_45:
    MOV AL, byte [RDI]
    CMP AL, 64
    JNE L100013a58_48
    JMP L100013a58_47     ; inserted

; Entry 100013a58; block 46; address 100013ccc
L100013a58_46:
    DEC R12D
    JMP L100013a58_38     ; inserted

; Entry 100013a58; block 47; address 100013cad
L100013a58_47:
    XOR EAX, EAX
    MOV R13D, 4294967290
    CMP byte [RDI + 1], 0
    JE L100013a58_49
    JMP L100013a58_50     ; inserted

; Entry 100013a58; block 48; address 100013cc4
L100013a58_48:
    CMP AL, 45
    JNE L100013a58_51
    JMP L100013a58_46     ; inserted

; Entry 100013a58; block 49; address 100013b51
L100013a58_49:
    TEST EAX, EAX
    JNE L100013a58_19
    JMP L100013a58_18     ; inserted

; Entry 100013a58; block 50; address 100013cbf
L100013a58_50:
    JMP L100013a58_51

; Entry 100013a58; block 51; address 100014440
L100013a58_51:
    MOV R13, RCX
    MOV qword [RBP + -72], RDX
    CALL _strlen
    JMP L100013a58_163     ; inserted

; Entry 100013a58; block 52; address 100013cde
L100013a58_52:
    MOV R10, qword [RBP + -88]
    MOV qword [RBP + -56], R12
    MOVSXD RAX, R12D
    MOV R12, qword [R10 + RAX * 8]
    TEST R12, R12
    JE L100013a58_55
    JMP L100013a58_54     ; inserted

; Entry 100013a58; block 53; address 100014573
L100013a58_53:
    MOV R9D, R13D
    JMP L100013a58_181

; Entry 100013a58; block 54; address 100013cf2
L100013a58_54:
    MOV R15, qword [RBP + 24]
    JMP L100013a58_66

; Entry 100013a58; block 55; address 100013cf8
L100013a58_55:
    TEST EDX, EDX
    MOV R15, qword [RBP + 24]
    JS L100013a58_57
    JMP L100013a58_56     ; inserted

; Entry 100013a58; block 56; address 100013d00
L100013a58_56:
    MOV EAX, EDX
    CMP qword [R10 + RAX * 8], 0
    MOV RBX, qword [RBP + 16]
    MOV R12, qword [RBP + -56]
    JE L100013a58_59
    JMP L100013a58_58     ; inserted

; Entry 100013a58; block 57; address 100013d38
L100013a58_57:
    MOV RBX, qword [RBP + 16]
    MOV R12, qword [RBP + -56]
    JMP L100013a58_59     ; inserted

; Entry 100013a58; block 58; address 100013d11
L100013a58_58:
    XOR EAX, EAX
    CMP R13D, 18446744073709551611
    SETE AL
    MOV ECX, EDX
    ADD ECX, EAX
    MOV EDX, R12D
    MOV R12D, ECX
    JMP L100013a58_59

; Entry 100013a58; block 59; address 100013d40
L100013a58_59:
    CMP R12D, R14D
    JG L100013a58_65
    JMP L100013a58_64     ; inserted

; Entry 100013a58; block 60; address 100013d2c
L100013a58_60:
    CMP R13D, 18446744073709551615
    JNE L100013a58_61
    JMP L100013a58_62     ; inserted

; Entry 100013a58; block 61; address 100013cd5
L100013a58_61:
    CMP R12D, R14D
    JG L100013a58_53
    JMP L100013a58_52     ; inserted

; Entry 100013a58; block 62; address 100013d32
L100013a58_62:
    ADD R12D, 2
    JMP L100013a58_63

; Entry 100013a58; block 63; address 100013cd2
L100013a58_63:
    XOR R13D, R13D
    JMP L100013a58_61     ; inserted

; Entry 100013a58; block 64; address 100013d49
L100013a58_64:
    MOV qword [RBP + -56], R12
    MOVSXD RAX, R12D
    MOV R12, qword [R10 + RAX * 8]
    TEST R12, R12
    JE L100013a58_67
    JMP L100013a58_66     ; inserted

; Entry 100013a58; block 65; address 1000145c3
L100013a58_65:
    MOV R9D, R13D
    XOR EAX, EAX
    MOV qword [RBP + -48], RAX
    JMP L100013a58_168

; Entry 100013a58; block 66; address 100013d5d
L100013a58_66:
    TEST EDX, EDX
    JS L100013a58_69
    JMP L100013a58_68     ; inserted

; Entry 100013a58; block 67; address 1000145d1
L100013a58_67:
    MOV R9D, R13D
    XOR EAX, EAX
    MOV qword [RBP + -48], RAX
    JMP L100013a58_212     ; inserted

; Entry 100013a58; block 68; address 100013d61
L100013a58_68:
    MOV EAX, EDX
    CMP qword [R10 + RAX * 8], 0
    JE L100013a58_70
    JMP L100013a58_69     ; inserted

; Entry 100013a58; block 69; address 100013d6e
L100013a58_69:
    CMP byte [R12], 45
    JNE L100013a58_72
    JMP L100013a58_71     ; inserted

; Entry 100013a58; block 70; address 100014554
L100013a58_70:
    XOR EAX, EAX
    CMP R13D, 18446744073709551611
    SETE AL
    MOV R12, qword [RBP + -56]
    ADD R12D, EAX
    CMP R12D, R14D
    JLE L100013a58_180
    JMP L100013a58_179     ; inserted

; Entry 100013a58; block 71; address 100013d79
L100013a58_71:
    MOV AL, byte [R12 + 1]
    CMP AL, 45
    JE L100013a58_74
    JMP L100013a58_73     ; inserted

; Entry 100013a58; block 72; address 100013e5c
L100013a58_72:
    CMP dword [rel L__DATA___data + 3932], 0
    JNE L100013a58_96
    JMP L100013a58_95     ; inserted

; Entry 100013a58; block 73; address 100013d86
L100013a58_73:
    TEST AL, AL
    JE L100013a58_76
    JMP L100013a58_75     ; inserted

; Entry 100013a58; block 74; address 100013e6a
L100013a58_74:
    CMP byte [R12 + 2], 0
    JNE L100013a58_98
    JMP L100013a58_97     ; inserted

; Entry 100013a58; block 75; address 100013d8e
L100013a58_75:
    MOVSXD R9, R13D
    MOV RAX, qword [RBP + -64]
    MOV qword [RAX], 0
    MOVSX R8D, byte [R12 + R9 + 1]
    TEST R8D, R8D
    JE L100013a58_78
    JMP L100013a58_77     ; inserted

; Entry 100013a58; block 76; address 100013e9c
L100013a58_76:
    MOV dword [R15], 4294967295
    CMP dword [rel L__DATA___data + 3932], 0
    JE L100013a58_100
    JMP L100013a58_96     ; inserted

; Entry 100013a58; block 77; address 100013dab
L100013a58_77:
    INC R9
    LEA RSI, [rel L__DATA___data + 592]
    CMP qword [RSI + 24], 0
    MOV qword [RBP + -72], RDX
    JE L100013a58_80
    JMP L100013a58_79     ; inserted

; Entry 100013a58; block 78; address 100013ec4
L100013a58_78:
    MOV dword [R15], 4294967295
    XOR EAX, EAX
    MOV qword [RBP + -48], RAX
    MOV R13D, 4294967294
    XOR EAX, EAX
    MOV R12, qword [RBP + -56]
    JMP L100013a58_49

; Entry 100013a58; block 79; address 100013dc4
L100013a58_79:
    LEA RDI, [R12 + 1]
    LEA RAX, [RSI + 64]
    MOV ECX, 4294967295
    XOR R11D, R11D
    MOV R15D, dword [RBP + 32]
    JMP L100013a58_87     ; inserted

; Entry 100013a58; block 80; address 100013ee2
L100013a58_80:
    MOV qword [RBP + -96], R9
    MOV R15D, dword [RBP + 32]
    LEA R13, [rel L__DATA___bss + 1248]
    JMP L100013a58_101

; Entry 100013a58; block 81; address 100013de4
L100013a58_81:
    CMP byte [RCX], R8B
    JNE L100013a58_82
    JMP L100013a58_83     ; inserted

; Entry 100013a58; block 82; address 100013e01
L100013a58_82:
    MOV ECX, EDX
    JMP L100013a58_85     ; inserted

; Entry 100013a58; block 83; address 100013de9
L100013a58_83:
    MOV BL, byte [RCX + 1]
    MOV ECX, R11D
    TEST BL, BL
    JE L100013a58_85
    JMP L100013a58_84     ; inserted

; Entry 100013a58; block 84; address 100013df3
L100013a58_84:
    MOV ECX, EDX
    CMP BL, byte [R12 + R9 + 1]
    JNE L100013a58_85
    JMP L100013a58_86     ; inserted

; Entry 100013a58; block 85; address 100013e03
L100013a58_85:
    INC R11D
    CMP qword [RAX], 0
    LEA RAX, [RAX + 40]
    JNE L100013a58_87
    JMP L100013a58_88     ; inserted

; Entry 100013a58; block 86; address 100013dfc
L100013a58_86:
    ADD R13D, 2
    MOV R9D, R13D
    JMP L100013a58_105

; Entry 100013a58; block 87; address 100013dd9
L100013a58_87:
    MOV EDX, ECX
    MOV RCX, qword [RAX + -64]
    TEST RCX, RCX
    JE L100013a58_82
    JMP L100013a58_81     ; inserted

; Entry 100013a58; block 88; address 100013e10
L100013a58_88:
    MOV R11D, ECX
    JMP L100013a58_105     ; inserted

; Entry 100013a58; block 89; address 100013e27
L100013a58_89:
    MOVSXD RAX, R9D
    CMP byte [RDI + RAX], 45
    MOV EBX, R11D
    MOV dword [RBP + -48], R11D
    JNE L100013a58_92
    JMP L100013a58_91     ; inserted

; Entry 100013a58; block 90; address 100013ef3
L100013a58_90:
    MOV qword [RBP + -96], R9
    JMP L100013a58_101     ; inserted

; Entry 100013a58; block 91; address 100013e3b
L100013a58_91:
    LEA RAX, [RBX + RBX * 4]
    CMP dword [RSI + RAX * 8 + 20], 0
    JE L100013a58_94
    JMP L100013a58_93     ; inserted

; Entry 100013a58; block 92; address 100013fa9
L100013a58_92:
    LEA R8, [RBX + RBX * 4]
    MOV EAX, dword [RSI + R8 * 8 + 16]
    DEC EAX
    CMP EAX, 4
    JA L100013a58_111
    JMP L100013a58_110     ; inserted

; Entry 100013a58; block 93; address 100013e4a
L100013a58_93:
    MOV RAX, qword [RBP + -104]
    MOV dword [RAX], 1
    INC R9D
    JMP L100013a58_92

; Entry 100013a58; block 94; address 100013f4c
L100013a58_94:
    MOV qword [RBP + -96], RDI
    MOV R13, R10
    MOV R15, R9
    CMP dword [RSI + RAX * 8 + 16], 0
    JNE L100013a58_107
    JMP L100013a58_106     ; inserted

; Entry 100013a58; block 95; address 100013e65
L100013a58_95:
    MOV R15, RDX
    MOV RDI, R12
    CALL _strlen
    JMP L100013a58_182     ; inserted

; Entry 100013a58; block 96; address 100013eb0
L100013a58_96:
    TEST EDX, EDX
    MOV R12, qword [RBP + -56]
    CMOVS EDX, R12D
    INC R12D
    XOR EAX, EAX
    JMP L100013a58_49

; Entry 100013a58; block 97; address 100013e76
L100013a58_97:
    CMP dword [rel L__DATA___data + 3936], 0
    JE L100013a58_76
    JMP L100013a58_99     ; inserted

; Entry 100013a58; block 98; address 1000146b3
L100013a58_98:
    MOVSXD RCX, dword [RBP + -56]
    MOV RAX, qword [RBP + -64]
    MOV qword [RAX], 0
    MOV R12, qword [R10 + RCX * 8]
    TEST R12, R12
    JE L100013a58_201
    JMP L100013a58_200     ; inserted

; Entry 100013a58; block 99; address 100013e7f
L100013a58_99:
    TEST EDX, EDX
    MOV R12, qword [RBP + -56]
    CMOVG R12D, EDX
    DEC R12D
    MOV EAX, 1
    MOV R13D, 4294967289
    JMP L100013a58_49

; Entry 100013a58; block 100; address 1000145e0
L100013a58_100:
    MOV R15, RDX
    MOV RDI, R12
    CALL _strlen
    JMP L100013a58_187     ; inserted

; Entry 100013a58; block 101; address 100013ef7
L100013a58_101:
    MOV EDX, 6049
    MOV RDI, R13
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___const + 288]
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L100013a58_102     ; inserted

; Entry 100013a58; block 102; address 100013f0f
L100013a58_102:
    TEST R15D, R15D
    MOV RBX, qword [RBP + 16]
    MOV R12, qword [RBP + -56]
    JG L100013a58_104
    JMP L100013a58_103     ; inserted

; Entry 100013a58; block 103; address 100013f20
L100013a58_103:
    MOV EDI, 16
    MOV RSI, R13
    CALL L100002e30_0

; Entry 100013a58; block 104; address 100014b1b
L100013a58_104:
    LEA RDI, [rel L__DATA___bss + 1248]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L100013a58_151     ; inserted

; Entry 100013a58; block 105; address 100013e13
L100013a58_105:
    TEST R11D, R11D
    MOV RDX, qword [RBP + -72]
    LEA R13, [rel L__DATA___bss + 1248]
    JS L100013a58_90
    JMP L100013a58_89     ; inserted

; Entry 100013a58; block 106; address 100013f5d
L100013a58_106:
    LEA RDI, [rel L__DATA___bss + 1248]
    LEA RSI, [rel L__TEXT___const + 96]
    MOV EDX, dword [RBP + -48]
    XOR ECX, ECX
    CALL L100014bb8_0
    JMP L100013a58_108     ; inserted

; Entry 100013a58; block 107; address 100013f90
L100013a58_107:
    MOV RDX, qword [RBP + -72]
    LEA RSI, [rel L__DATA___data + 592]
    MOV R9, R15
    MOV R10, R13
    MOV R11D, dword [RBP + -48]
    MOV RDI, qword [RBP + -96]
    JMP L100013a58_92     ; inserted

; Entry 100013a58; block 108; address 100013f75
L100013a58_108:
    CMP dword [RBP + 32], 0
    JG L100013a58_104
    JMP L100013a58_109     ; inserted

; Entry 100013a58; block 109; address 100013f7f
L100013a58_109:
    MOV EDI, 16
    LEA RSI, [rel L__DATA___bss + 1248]
    CALL L100002e30_0

; Entry 100013a58; block 110; address 100013fbd
L100013a58_110:
    LEA RCX, [rel L__TEXT___text + 73076]
    MOVSXD RAX, dword [RCX + RAX * 4]
    ADD RAX, RCX
    MOV RAX, QWORD PTR [L_JUMP_TABLE_100013fcb + 8*EAX] ; inserted as implementation of the jump-table based jump below. Manually remove instructions above that originally implemented this jump table.
    JMP RAX; TARGETS: 100013fcd,100014060,100013fcd,1000140f1

; Entry 100013a58; block 111; address 100014053
L100013a58_111:
    MOV RBX, qword [RBP + 16]
    MOV R12, qword [RBP + -56]
    JMP L100013a58_124

; Entry 100013a58; block 112; address 100013fcd
L100013a58_112:
    MOV R13, R8
    MOVSXD RAX, R9D
    MOV DL, byte [RAX + R12 + 1]
    TEST DL, DL
    JE L100013a58_116
    JMP L100013a58_115     ; inserted

; Entry 100013a58; block 113; address 100014060
L100013a58_113:
    MOV qword [RBP + -80], R8
    MOV RSI, R9
    MOVSXD RAX, R9D
    MOV DL, byte [RAX + R12 + 1]
    TEST DL, DL
    JE L100013a58_126
    JMP L100013a58_125     ; inserted

; Entry 100013a58; block 114; address 1000140f1
L100013a58_114:
    MOV qword [RBP + -80], R8
    MOVSXD RBX, R9D
    CMP byte [R12 + RBX + 1], 0
    JE L100013a58_136
    JMP L100013a58_135     ; inserted

; Entry 100013a58; block 115; address 100013fe0
L100013a58_115:
    MOV ECX, 1
    CMP DL, 61
    JNE L100013a58_118
    JMP L100013a58_117     ; inserted

; Entry 100013a58; block 116; address 10001424e
L100013a58_116:
    MOVSXD RBX, dword [RBP + -56]
    MOV RDI, qword [R10 + RBX * 8 + 8]
    TEST RDI, RDI
    JE L100013a58_141
    JMP L100013a58_140     ; inserted

; Entry 100013a58; block 117; address 100013fea
L100013a58_117:
    MOV ECX, 2
    JMP L100013a58_118     ; inserted

; Entry 100013a58; block 118; address 100013fef
L100013a58_118:
    ADD R12, RAX
    ADD R12, RCX
    MOV RDI, R12
    CALL _strlen
    JMP L100013a58_119     ; inserted

; Entry 100013a58; block 119; address 100013ffd
L100013a58_119:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100013a58_120     ; inserted

; Entry 100013a58; block 120; address 100014006
L100013a58_120:
    MOV RCX, qword [RBP + -64]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JNE L100013a58_122
    JMP L100013a58_121     ; inserted

; Entry 100013a58; block 121; address 100014012
L100013a58_121:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_37189]
    CALL L100002e30_0

; Entry 100013a58; block 122; address 10001402a
L100013a58_122:
    MOV RDI, RAX
    MOV RSI, R12
    CALL _strcpy
    JMP L100013a58_123     ; inserted

; Entry 100013a58; block 123; address 100014035
L100013a58_123:
    MOV R9D, 4294967294
    MOV RBX, qword [RBP + 16]
    MOV RDX, qword [RBP + -72]
    MOV R12, qword [RBP + -56]
    MOV R11D, dword [RBP + -48]
    MOV R8, R13
    JMP L100013a58_124

; Entry 100013a58; block 124; address 100014327
L100013a58_124:
    MOV RAX, qword [RBP + 24]
    MOV dword [RAX], R11D
    LEA RAX, [rel L__DATA___data + 592]
    MOV RCX, qword [RAX + R8 * 8 + 24]
    MOV RAX, RCX
    MOV qword [RBP + -48], RCX
    CMP RCX, 65534
    JE L100013a58_151
    JMP L100013a58_150     ; inserted

; Entry 100013a58; block 125; address 100014077
L100013a58_125:
    MOV ECX, 1
    CMP DL, 61
    JNE L100013a58_128
    JMP L100013a58_127     ; inserted

; Entry 100013a58; block 126; address 100014364
L100013a58_126:
    MOV R13, R10
    MOVSXD R15, dword [RBP + -56]
    MOV RDI, qword [R10 + R15 * 8 + 8]
    TEST RDI, RDI
    JE L100013a58_154
    JMP L100013a58_153     ; inserted

; Entry 100013a58; block 127; address 100014081
L100013a58_127:
    MOV ECX, 2
    JMP L100013a58_128     ; inserted

; Entry 100013a58; block 128; address 100014086
L100013a58_128:
    ADD ESI, ECX
    MOVSXD RDX, ESI
    CMP byte [R12 + RDX], 0
    JE L100013a58_130
    JMP L100013a58_129     ; inserted

; Entry 100013a58; block 129; address 100014092
L100013a58_129:
    ADD R12, RAX
    MOV EBX, ECX
    ADD RBX, R12
    MOV RDI, RBX
    CALL _strlen
    JMP L100013a58_131     ; inserted

; Entry 100013a58; block 130; address 1000140da
L100013a58_130:
    MOV RBX, qword [RBP + 16]
    MOV RDX, qword [RBP + -72]
    MOV R12, qword [RBP + -56]
    MOV R9D, 4294967294
    JMP L100013a58_149

; Entry 100013a58; block 131; address 1000140a2
L100013a58_131:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100013a58_132     ; inserted

; Entry 100013a58; block 132; address 1000140ab
L100013a58_132:
    MOV RCX, qword [RBP + -64]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JNE L100013a58_134
    JMP L100013a58_133     ; inserted

; Entry 100013a58; block 133; address 1000140b7
L100013a58_133:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_37189]
    CALL L100002e30_0

; Entry 100013a58; block 134; address 1000140cf
L100013a58_134:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L100013a58_130     ; inserted

; Entry 100013a58; block 135; address 100014104
L100013a58_135:
    MOV R13, RDI
    LEA R15, [RBX + 1]
    MOV EDI, 2
    CALL _malloc
    JMP L100013a58_137     ; inserted

; Entry 100013a58; block 136; address 1000142da
L100013a58_136:
    MOV R15, R9
    LEA RDI, [rel L__DATA___bss + 1248]
    LEA RSI, [rel L__TEXT___const + 208]
    MOV EDX, dword [RBP + -48]
    XOR ECX, ECX
    CALL L100014bb8_0
    JMP L100013a58_147     ; inserted

; Entry 100013a58; block 137; address 100014115
L100013a58_137:
    MOV RCX, qword [RBP + -64]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JNE L100013a58_139
    JMP L100013a58_138     ; inserted

; Entry 100013a58; block 138; address 100014121
L100013a58_138:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_37189]
    CALL L100002e30_0

; Entry 100013a58; block 139; address 100014139
L100013a58_139:
    MOV CL, byte [R13 + RBX]
    MOV byte [RAX], CL
    MOV RAX, qword [RBP + -64]
    MOV RAX, qword [RAX]
    MOV byte [RAX + 1], 0
    MOV RBX, qword [RBP + 16]
    MOV RDX, qword [RBP + -72]
    MOV R12, qword [RBP + -56]
    MOV R9, R15
    JMP L100013a58_149     ; inserted

; Entry 100013a58; block 140; address 100014260
L100013a58_140:
    MOV R12, R10
    INC RBX
    CALL _strlen
    JMP L100013a58_142     ; inserted

; Entry 100013a58; block 141; address 1000143e2
L100013a58_141:
    MOV R15, R9
    LEA RDI, [rel L__DATA___bss + 1248]
    LEA RSI, [rel L__TEXT___const + 128]
    MOV EDX, dword [RBP + -48]
    XOR ECX, ECX
    CALL L100014bb8_0
    JMP L100013a58_161     ; inserted

; Entry 100013a58; block 142; address 10001426b
L100013a58_142:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100013a58_143     ; inserted

; Entry 100013a58; block 143; address 100014274
L100013a58_143:
    MOV RCX, qword [RBP + -64]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JNE L100013a58_145
    JMP L100013a58_144     ; inserted

; Entry 100013a58; block 144; address 100014280
L100013a58_144:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_37189]
    CALL L100002e30_0

; Entry 100013a58; block 145; address 100014298
L100013a58_145:
    LEA RCX, [rel L__DATA___data + 592]
    LEA R15, [RCX + R13 * 8]
    ADD R15, 16
    MOV RSI, qword [R12 + RBX * 8]
    MOV RDI, RAX
    CALL _strcpy
    JMP L100013a58_146     ; inserted

; Entry 100013a58; block 146; address 1000142b3
L100013a58_146:
    MOV R8, R13
    XOR R9D, R9D
    CMP dword [R15], 3
    SETNE R9B
    ADD R9D, R9D
    OR R9D, 4294967293
    MOV RBX, qword [RBP + 16]
    MOV RDX, qword [RBP + -72]
    MOV R12, qword [RBP + -56]
    MOV R11D, dword [RBP + -48]
    JMP L100013a58_124

; Entry 100013a58; block 147; address 1000142f5
L100013a58_147:
    CMP dword [RBP + 32], 0
    JG L100013a58_104
    JMP L100013a58_148     ; inserted

; Entry 100013a58; block 148; address 1000142ff
L100013a58_148:
    MOV EDI, 16
    LEA RSI, [rel L__DATA___bss + 1248]
    CALL L100002e30_0

; Entry 100013a58; block 149; address 10001431f
L100013a58_149:
    MOV R11D, dword [RBP + -48]
    MOV R8, qword [RBP + -80]
    JMP L100013a58_124     ; inserted

; Entry 100013a58; block 150; address 10001434e
L100013a58_150:
    XOR EAX, EAX
    MOV R13D, 4294967294
    TEST R9D, R9D
    JE L100013a58_49
    JMP L100013a58_152     ; inserted

; Entry 100013a58; block 151; address 100014b2e
L100013a58_151:
    MOV EAX, 65534
    JMP L100013a58_178

; Entry 100013a58; block 152; address 10001435f
L100013a58_152:
    JMP L100013a58_168

; Entry 100013a58; block 153; address 100014379
L100013a58_153:
    CMP byte [RDI], 45
    MOV RBX, qword [RBP + 16]
    MOV RDX, qword [RBP + -72]
    MOV R12, qword [RBP + -56]
    MOV R9, RSI
    MOV R11D, dword [RBP + -48]
    MOV R8, qword [RBP + -80]
    JE L100013a58_124
    JMP L100013a58_155     ; inserted

; Entry 100013a58; block 154; address 10001442c
L100013a58_154:
    MOV RBX, qword [RBP + 16]
    MOV RDX, qword [RBP + -72]
    MOV R12, qword [RBP + -56]
    MOV R9, RSI
    JMP L100013a58_149

; Entry 100013a58; block 155; address 100014395
L100013a58_155:
    INC R15
    CALL _strlen
    JMP L100013a58_156     ; inserted

; Entry 100013a58; block 156; address 10001439d
L100013a58_156:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100013a58_157     ; inserted

; Entry 100013a58; block 157; address 1000143a6
L100013a58_157:
    MOV RCX, qword [RBP + -64]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JNE L100013a58_159
    JMP L100013a58_158     ; inserted

; Entry 100013a58; block 158; address 1000143b2
L100013a58_158:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_37189]
    CALL L100002e30_0

; Entry 100013a58; block 159; address 1000143ca
L100013a58_159:
    MOV RSI, qword [R13 + R15 * 8]
    MOV RDI, RAX
    CALL _strcpy
    JMP L100013a58_160     ; inserted

; Entry 100013a58; block 160; address 1000143d7
L100013a58_160:
    MOV R9D, 4294967295
    MOV RBX, qword [RBP + 16]
    MOV RDX, qword [RBP + -72]
    MOV R12, qword [RBP + -56]
    JMP L100013a58_149

; Entry 100013a58; block 161; address 1000143fd
L100013a58_161:
    CMP dword [RBP + 32], 0
    JG L100013a58_104
    JMP L100013a58_162     ; inserted

; Entry 100013a58; block 162; address 100014407
L100013a58_162:
    MOV EDI, 16
    LEA RSI, [rel L__DATA___bss + 1248]
    CALL L100002e30_0

; Entry 100013a58; block 163; address 10001444c
L100013a58_163:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100013a58_164     ; inserted

; Entry 100013a58; block 164; address 100014455
L100013a58_164:
    MOV RBX, qword [RBP + -64]
    MOV qword [RBX], RAX
    TEST RAX, RAX
    JNE L100013a58_166
    JMP L100013a58_165     ; inserted

; Entry 100013a58; block 165; address 100014461
L100013a58_165:
    LEA RSI, [rel L__TEXT___cstring_37167]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100013a58; block 166; address 100014479
L100013a58_166:
    MOV RSI, qword [R15 + R13 * 8]
    MOV RDI, RAX
    CALL _strcpy
    JMP L100013a58_167     ; inserted

; Entry 100013a58; block 167; address 100014485
L100013a58_167:
    MOV R9D, 4294967292
    JMP L100013a58_177     ; inserted

; Entry 100013a58; block 168; address 100014520
L100013a58_168:
    MOV RAX, qword [RBP + -88]
    MOV RCX, qword [RBP + -128]
    MOV qword [RCX], RAX
    MOV RAX, qword [RBP + -144]
    MOV dword [RAX], R14D
    MOV dword [RBX], EDX
    MOV RAX, qword [RBP + -136]
    MOV dword [RAX], R12D
    MOV RAX, qword [RBP + -152]
    MOV dword [RAX], R9D
    MOV RAX, qword [RBP + -48]
    JMP L100013a58_178

; Entry 100013a58; block 169; address 1000144a2
L100013a58_169:
    MOV RAX, qword [RBP + -88]
    MOVSXD RCX, R15D
    MOV R12, qword [RAX + RCX * 8]
    TEST R12, R12
    JE L100013a58_170
    JMP L100013a58_171     ; inserted

; Entry 100013a58; block 170; address 100014510
L100013a58_170:
    XOR EAX, EAX
    MOV qword [RBP + -48], RAX
    MOV R9D, R13D
    MOV R12D, R15D
    JMP L100013a58_181     ; inserted

; Entry 100013a58; block 171; address 1000144b2
L100013a58_171:
    MOV qword [RBP + -72], RDX
    MOV RDI, R12
    CALL _strlen
    JMP L100013a58_172     ; inserted

; Entry 100013a58; block 172; address 1000144be
L100013a58_172:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100013a58_173     ; inserted

; Entry 100013a58; block 173; address 1000144c7
L100013a58_173:
    MOV RBX, qword [RBP + -64]
    MOV qword [RBX], RAX
    TEST RAX, RAX
    JNE L100013a58_175
    JMP L100013a58_174     ; inserted

; Entry 100013a58; block 174; address 1000144d3
L100013a58_174:
    LEA RSI, [rel L__TEXT___cstring_37167]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100013a58; block 175; address 1000144e7
L100013a58_175:
    MOV RDI, RAX
    MOV RSI, R12
    CALL _strcpy
    JMP L100013a58_176     ; inserted

; Entry 100013a58; block 176; address 1000144f2
L100013a58_176:
    MOV RAX, qword [RBP + 24]
    MOV dword [RAX], 4294967295
    MOV EAX, 65535
    MOV qword [RBP + -48], RAX
    MOV R9D, R13D
    MOV R12D, R15D
    JMP L100013a58_177

; Entry 100013a58; block 177; address 10001448b
L100013a58_177:
    MOV RBX, qword [RBP + 16]
    MOV RDX, qword [RBP + -72]
    JMP L100013a58_168

; Entry 100013a58; block 178; address 100013abb
L100013a58_178:
    ADD RSP, 120
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100013a58; block 179; address 10001456d
L100013a58_179:
    XOR EAX, EAX
    MOV qword [RBP + -48], RAX
    JMP L100013a58_53     ; inserted

; Entry 100013a58; block 180; address 10001463e
L100013a58_180:
    MOVSXD R15, R12D
    MOV RDI, qword [R10 + R15 * 8]
    TEST RDI, RDI
    MOV RBX, qword [RBP + 16]
    JE L100013a58_194
    JMP L100013a58_193     ; inserted

; Entry 100013a58; block 181; address 10001451c
L100013a58_181:
    MOV RBX, qword [RBP + 16]
    JMP L100013a58_168     ; inserted

; Entry 100013a58; block 182; address 100014583
L100013a58_182:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100013a58_183     ; inserted

; Entry 100013a58; block 183; address 10001458c
L100013a58_183:
    MOV RBX, qword [RBP + -64]
    MOV qword [RBX], RAX
    TEST RAX, RAX
    JNE L100013a58_185
    JMP L100013a58_184     ; inserted

; Entry 100013a58; block 184; address 100014598
L100013a58_184:
    LEA RSI, [rel L__TEXT___cstring_37167]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100013a58; block 185; address 1000145ac
L100013a58_185:
    MOV RDI, RAX
    MOV RSI, R12
    CALL _strcpy
    JMP L100013a58_186     ; inserted

; Entry 100013a58; block 186; address 1000145b7
L100013a58_186:
    MOV RAX, qword [RBP + 24]
    MOV dword [RAX], 4294967295
    JMP L100013a58_191

; Entry 100013a58; block 187; address 1000145eb
L100013a58_187:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100013a58_188     ; inserted

; Entry 100013a58; block 188; address 1000145f4
L100013a58_188:
    MOV RBX, qword [RBP + -64]
    MOV qword [RBX], RAX
    TEST RAX, RAX
    JNE L100013a58_190
    JMP L100013a58_189     ; inserted

; Entry 100013a58; block 189; address 100014600
L100013a58_189:
    LEA RSI, [rel L__TEXT___cstring_37167]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100013a58; block 190; address 100014614
L100013a58_190:
    MOV RDI, RAX
    MOV RSI, R12
    CALL _strcpy
    JMP L100013a58_191     ; inserted

; Entry 100013a58; block 191; address 10001461f
L100013a58_191:
    MOV EAX, 65535
    MOV qword [RBP + -48], RAX
    MOV R9D, 4294967291
    MOV RBX, qword [RBP + 16]
    MOV RDX, R15
    JMP L100013a58_192     ; inserted

; Entry 100013a58; block 192; address 100014635
L100013a58_192:
    MOV R12, qword [RBP + -56]
    JMP L100013a58_168

; Entry 100013a58; block 193; address 100014652
L100013a58_193:
    MOV qword [RBP + -56], R12
    MOV R12, RDX
    MOV R13, R10
    CALL _strlen
    JMP L100013a58_195     ; inserted

; Entry 100013a58; block 194; address 100014751
L100013a58_194:
    XOR EAX, EAX
    MOV qword [RBP + -48], RAX
    MOV R9D, R13D
    JMP L100013a58_168

; Entry 100013a58; block 195; address 100014661
L100013a58_195:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100013a58_196     ; inserted

; Entry 100013a58; block 196; address 10001466a
L100013a58_196:
    MOV RCX, R13
    MOV R13, qword [RBP + -64]
    MOV qword [R13], RAX
    TEST RAX, RAX
    JNE L100013a58_198
    JMP L100013a58_197     ; inserted

; Entry 100013a58; block 197; address 10001467a
L100013a58_197:
    LEA RSI, [rel L__TEXT___cstring_37167]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100013a58; block 198; address 100014693
L100013a58_198:
    MOV RSI, qword [RCX + R15 * 8]
    MOV RDI, RAX
    CALL _strcpy
    JMP L100013a58_199     ; inserted

; Entry 100013a58; block 199; address 10001469f
L100013a58_199:
    MOV EAX, 65535
    MOV qword [RBP + -48], RAX
    MOV R9D, 4294967291
    MOV RDX, R12
    JMP L100013a58_192

; Entry 100013a58; block 200; address 1000146cf
L100013a58_200:
    MOV qword [RBP + -120], RCX
    MOV qword [RBP + -112], R10
    MOV qword [RBP + -72], RDX
    MOV RDI, R12
    CALL _strlen
    JMP L100013a58_202     ; inserted

; Entry 100013a58; block 201; address 10001475f
L100013a58_201:
    MOV dword [R15], 4294967295
    XOR EAX, EAX
    MOV qword [RBP + -48], RAX
    MOV R9D, R13D
    JMP L100013a58_212

; Entry 100013a58; block 202; address 1000146e3
L100013a58_202:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100013a58_203     ; inserted

; Entry 100013a58; block 203; address 1000146ec
L100013a58_203:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L100013a58_205
    JMP L100013a58_204     ; inserted

; Entry 100013a58; block 204; address 1000146f4
L100013a58_204:
    LEA RSI, [rel L__TEXT___cstring_37170]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100013a58; block 205; address 100014711
L100013a58_205:
    MOV RDI, RBX
    MOV RSI, R12
    CALL _strcpy
    JMP L100013a58_206     ; inserted

; Entry 100013a58; block 206; address 10001471c
L100013a58_206:
    LEA R8, [RBX + 2]
    MOV R13, qword [RBP + -64]
    MOV qword [R13], 0
    MOV qword [RBP + -96], RBX
    ADD RBX, 3
    MOV RAX, R8
    MOV RCX, R8
    JMP L100013a58_211     ; inserted

; Entry 100013a58; block 207; address 100014741
L100013a58_207:
    CMP DL, 61
    JE L100013a58_210
    JMP L100013a58_209     ; inserted

; Entry 100013a58; block 208; address 100014774
L100013a58_208:
    XOR EBX, EBX
    JMP L100013a58_213

; Entry 100013a58; block 209; address 100014746
L100013a58_209:
    MOV RAX, RCX
    INC RCX
    INC RBX
    JMP L100013a58_211

; Entry 100013a58; block 210; address 100014778
L100013a58_210:
    MOV byte [RBX + -1], 0
    JMP L100013a58_213     ; inserted

; Entry 100013a58; block 211; address 10001473a
L100013a58_211:
    MOV DL, byte [RBX + -1]
    TEST DL, DL
    JE L100013a58_208
    JMP L100013a58_207     ; inserted

; Entry 100013a58; block 212; address 1000145da
L100013a58_212:
    MOV RBX, qword [RBP + 16]
    JMP L100013a58_192

; Entry 100013a58; block 213; address 10001477c
L100013a58_213:
    CMP byte [RAX], 45
    JNE L100013a58_215
    JMP L100013a58_214     ; inserted

; Entry 100013a58; block 214; address 100014781
L100013a58_214:
    MOV RCX, qword [RBP + -104]
    MOV dword [RCX], 1
    MOV byte [RAX], 0
    JMP L100013a58_216

; Entry 100013a58; block 215; address 100014790
L100013a58_215:
    MOV RAX, qword [RBP + -104]
    MOV dword [RAX], 0
    JMP L100013a58_216     ; inserted

; Entry 100013a58; block 216; address 10001479a
L100013a58_216:
    LEA RAX, [rel L__DATA___data + 592]
    CMP qword [RAX + 24], 0
    MOV qword [RBP + -80], RBX
    JE L100013a58_218
    JMP L100013a58_217     ; inserted

; Entry 100013a58; block 217; address 1000147b0
L100013a58_217:
    LEA RAX, [rel L__DATA___data + 592]
    LEA R15, [RAX + 64]
    MOV EDX, 4294967295
    XOR R13D, R13D
    JMP L100013a58_232     ; inserted

; Entry 100013a58; block 218; address 10001487a
L100013a58_218:
    LEA RDI, [rel L__DATA___bss + 1248]
    LEA RCX, [rel L__TEXT___const + 64]
    MOV EDX, 6049
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L100013a58_235     ; inserted

; Entry 100013a58; block 219; address 1000147d0
L100013a58_219:
    MOV dword [RBP + -48], EDX
    MOV RDI, R12
    MOV RSI, R8
    MOV RBX, R8
    CALL _strcmp
    JMP L100013a58_221     ; inserted

; Entry 100013a58; block 220; address 10001485c
L100013a58_220:
    INC R13D
    CMP qword [R15], 0
    LEA R15, [R15 + 40]
    JNE L100013a58_232
    JMP L100013a58_233     ; inserted

; Entry 100013a58; block 221; address 1000147e1
L100013a58_221:
    TEST EAX, EAX
    JE L100013a58_223
    JMP L100013a58_222     ; inserted

; Entry 100013a58; block 222; address 1000147e9
L100013a58_222:
    MOV RDI, RBX
    CALL _strlen
    JMP L100013a58_224     ; inserted

; Entry 100013a58; block 223; address 1000148c1
L100013a58_223:
    MOV EDX, R13D
    MOV R15, qword [RBP + 24]
    MOV R13, qword [RBP + -64]
    JMP L100013a58_234     ; inserted

; Entry 100013a58; block 224; address 1000147f1
L100013a58_224:
    MOV RDI, R12
    MOV R12, RBX
    MOV RSI, RBX
    MOV RDX, RAX
    CALL _strncmp
    JMP L100013a58_225     ; inserted

; Entry 100013a58; block 225; address 100014802
L100013a58_225:
    TEST EAX, EAX
    JE L100013a58_227
    JMP L100013a58_226     ; inserted

; Entry 100013a58; block 226; address 100014806
L100013a58_226:
    MOV EDX, dword [RBP + -48]
    MOV R8, R12
    JMP L100013a58_220     ; inserted

; Entry 100013a58; block 227; address 10001480b
L100013a58_227:
    CMP dword [RBP + -48], 0
    MOV EDX, R13D
    MOV R8, R12
    LEA RBX, [rel L__DATA___bss + 1248]
    JS L100013a58_220
    JMP L100013a58_228     ; inserted

; Entry 100013a58; block 228; address 10001481e
L100013a58_228:
    MOV EDX, 6049
    MOV RDI, RBX
    XOR ESI, ESI
    LEA RCX, [rel L__TEXT___const + 32]
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L100013a58_229     ; inserted

; Entry 100013a58; block 229; address 100014836
L100013a58_229:
    MOV RDI, qword [RBP + -96]
    CALL _free
    JMP L100013a58_230     ; inserted

; Entry 100013a58; block 230; address 10001483f
L100013a58_230:
    CMP dword [RBP + 32], 0
    JG L100013a58_104
    JMP L100013a58_231     ; inserted

; Entry 100013a58; block 231; address 100014849
L100013a58_231:
    MOV EDI, 16
    MOV RSI, RBX
    CALL L100002e30_0

; Entry 100013a58; block 232; address 1000147c3
L100013a58_232:
    MOV R12, qword [R15 + -56]
    TEST R12, R12
    JE L100013a58_220
    JMP L100013a58_219     ; inserted

; Entry 100013a58; block 233; address 10001486d
L100013a58_233:
    CMP EDX, 18446744073709551615
    MOV R15, qword [RBP + 24]
    MOV R13, qword [RBP + -64]
    JNE L100013a58_234
    JMP L100013a58_218     ; inserted

; Entry 100013a58; block 234; address 1000148cc
L100013a58_234:
    MOV R12, qword [RBP + -96]
    MOV RAX, qword [RBP + -104]
    CMP dword [RAX], 0
    MOVSXD RBX, EDX
    MOV dword [RBP + -48], EDX
    JE L100013a58_239
    JMP L100013a58_238     ; inserted

; Entry 100013a58; block 235; address 100014896
L100013a58_235:
    MOV RDI, qword [RBP + -96]
    CALL _free
    JMP L100013a58_236     ; inserted

; Entry 100013a58; block 236; address 10001489f
L100013a58_236:
    CMP dword [RBP + 32], 0
    JG L100013a58_104
    JMP L100013a58_237     ; inserted

; Entry 100013a58; block 237; address 1000148a9
L100013a58_237:
    LEA RSI, [rel L__DATA___bss + 1248]
    MOV EDI, 16
    CALL L100002e30_0

; Entry 100013a58; block 238; address 1000148df
L100013a58_238:
    LEA RAX, [RBX + RBX * 4]
    LEA RCX, [rel L__DATA___data + 592]
    CMP dword [RCX + RAX * 8 + 20], 0
    JE L100013a58_240
    JMP L100013a58_239     ; inserted

; Entry 100013a58; block 239; address 1000148f5
L100013a58_239:
    LEA RCX, [RBX + RBX * 4]
    LEA RAX, [rel L__DATA___data + 592]
    MOV qword [RBP + -104], RCX
    MOV EAX, dword [RAX + RCX * 8 + 16]
    LEA ECX, [RAX + -3]
    CMP ECX, 3
    JB L100013a58_242
    JMP L100013a58_241     ; inserted

; Entry 100013a58; block 240; address 1000149db
L100013a58_240:
    LEA RDI, [rel L__DATA___bss + 1248]
    LEA RSI, [rel L__TEXT___const + 96]
    MOV ECX, 1
    CALL L100014bb8_0
    JMP L100013a58_262     ; inserted

; Entry 100013a58; block 241; address 100014910
L100013a58_241:
    CMP EAX, 1
    JE L100013a58_242
    JMP L100013a58_243     ; inserted

; Entry 100013a58; block 242; address 100014980
L100013a58_242:
    MOV RDI, qword [RBP + -80]
    TEST RDI, RDI
    JE L100013a58_255
    JMP L100013a58_254     ; inserted

; Entry 100013a58; block 243; address 100014915
L100013a58_243:
    CMP EAX, 2
    MOV RCX, qword [RBP + -80]
    MOV R13D, 4294967294
    JNE L100013a58_245
    JMP L100013a58_244     ; inserted

; Entry 100013a58; block 244; address 100014928
L100013a58_244:
    TEST RCX, RCX
    JE L100013a58_247
    JMP L100013a58_246     ; inserted

; Entry 100013a58; block 245; address 100014aa5
L100013a58_245:
    TEST RCX, RCX
    JE L100013a58_247
    JMP L100013a58_273     ; inserted

; Entry 100013a58; block 246; address 100014931
L100013a58_246:
    MOV RDI, qword [RBP + -80]
    CALL _strlen
    JMP L100013a58_248     ; inserted

; Entry 100013a58; block 247; address 100014b4f
L100013a58_247:
    MOV R15, qword [RBP + 24]
    MOV RBX, R12
    JMP L100013a58_281     ; inserted

; Entry 100013a58; block 248; address 10001493a
L100013a58_248:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100013a58_249     ; inserted

; Entry 100013a58; block 249; address 100014943
L100013a58_249:
    MOV RCX, qword [RBP + -64]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JNE L100013a58_251
    JMP L100013a58_250     ; inserted

; Entry 100013a58; block 250; address 10001494f
L100013a58_250:
    MOV RDI, R12
    CALL _free
    JMP L100013a58_252     ; inserted

; Entry 100013a58; block 251; address 10001496f
L100013a58_251:
    MOV RDI, RAX
    MOV RSI, qword [RBP + -80]
    CALL _strcpy
    JMP L100013a58_253     ; inserted

; Entry 100013a58; block 252; address 100014957
L100013a58_252:
    LEA RSI, [rel L__TEXT___cstring_37170]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100013a58; block 253; address 10001497b
L100013a58_253:
    JMP L100013a58_247

; Entry 100013a58; block 254; address 10001498d
L100013a58_254:
    MOV RBX, R12
    CALL _strlen
    JMP L100013a58_256     ; inserted

; Entry 100013a58; block 255; address 100014a1b
L100013a58_255:
    MOV RAX, qword [RBP + -112]
    MOV RBX, qword [RBP + -120]
    MOV RDI, qword [RAX + RBX * 8 + 8]
    TEST RDI, RDI
    JE L100013a58_266
    JMP L100013a58_265     ; inserted

; Entry 100013a58; block 256; address 100014995
L100013a58_256:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100013a58_257     ; inserted

; Entry 100013a58; block 257; address 10001499e
L100013a58_257:
    MOV qword [R13], RAX
    TEST RAX, RAX
    JNE L100013a58_259
    JMP L100013a58_258     ; inserted

; Entry 100013a58; block 258; address 1000149a7
L100013a58_258:
    MOV RDI, RBX
    CALL _free
    JMP L100013a58_260     ; inserted

; Entry 100013a58; block 259; address 1000149c4
L100013a58_259:
    MOV RDI, RAX
    MOV RSI, qword [RBP + -80]
    CALL _strcpy
    JMP L100013a58_261     ; inserted

; Entry 100013a58; block 260; address 1000149af
L100013a58_260:
    LEA RSI, [rel L__TEXT___cstring_37170]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100013a58; block 261; address 1000149d0
L100013a58_261:
    MOV R13D, 4294967294
    JMP L100013a58_281

; Entry 100013a58; block 262; address 1000149f3
L100013a58_262:
    MOV RDI, R12
    CALL _free
    JMP L100013a58_263     ; inserted

; Entry 100013a58; block 263; address 1000149fb
L100013a58_263:
    CMP dword [RBP + 32], 0
    JG L100013a58_104
    JMP L100013a58_264     ; inserted

; Entry 100013a58; block 264; address 100014a05
L100013a58_264:
    LEA RSI, [rel L__DATA___bss + 1248]
    MOV EDI, 16
    CALL L100002e30_0

; Entry 100013a58; block 265; address 100014a31
L100013a58_265:
    LEA RAX, [rel L__DATA___data + 592]
    MOV RCX, qword [RBP + -104]
    LEA R15, [RAX + RCX * 8]
    ADD R15, 16
    INC RBX
    CALL _strlen
    JMP L100013a58_267     ; inserted

; Entry 100013a58; block 266; address 100014af2
L100013a58_266:
    LEA RDI, [rel L__DATA___bss + 1248]
    LEA RSI, [rel L__TEXT___const + 128]
    MOV EDX, dword [RBP + -48]
    MOV ECX, 1
    CALL L100014bb8_0
    JMP L100013a58_278     ; inserted

; Entry 100013a58; block 267; address 100014a4c
L100013a58_267:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L100013a58_268     ; inserted

; Entry 100013a58; block 268; address 100014a55
L100013a58_268:
    MOV qword [R13], RAX
    TEST RAX, RAX
    JNE L100013a58_270
    JMP L100013a58_269     ; inserted

; Entry 100013a58; block 269; address 100014a5e
L100013a58_269:
    MOV RDI, R12
    CALL _free
    JMP L100013a58_271     ; inserted

; Entry 100013a58; block 270; address 100014a7e
L100013a58_270:
    MOV RCX, qword [RBP + -112]
    MOV RSI, qword [RCX + RBX * 8]
    MOV RDI, RAX
    CALL _strcpy
    JMP L100013a58_272     ; inserted

; Entry 100013a58; block 271; address 100014a66
L100013a58_271:
    LEA RSI, [rel L__TEXT___cstring_37170]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100013a58; block 272; address 100014a8e
L100013a58_272:
    XOR R13D, R13D
    CMP dword [R15], 3
    SETNE R13B
    ADD R13D, R13D
    OR R13D, 4294967293
    JMP L100013a58_247

; Entry 100013a58; block 273; address 100014aae
L100013a58_273:
    TEST EAX, EAX
    JNE L100013a58_247
    JMP L100013a58_274     ; inserted

; Entry 100013a58; block 274; address 100014ab6
L100013a58_274:
    LEA RDI, [rel L__DATA___bss + 1248]
    LEA RSI, [rel L__TEXT___const + 160]
    MOV EDX, dword [RBP + -48]
    MOV ECX, 1
    CALL L100014bb8_0
    JMP L100013a58_275     ; inserted

; Entry 100013a58; block 275; address 100014ad1
L100013a58_275:
    MOV RDI, R12
    CALL _free
    JMP L100013a58_276     ; inserted

; Entry 100013a58; block 276; address 100014ad9
L100013a58_276:
    CMP dword [RBP + 32], 0
    JG L100013a58_104
    JMP L100013a58_277     ; inserted

; Entry 100013a58; block 277; address 100014adf
L100013a58_277:
    LEA RSI, [rel L__DATA___bss + 1248]
    MOV EDI, 16
    CALL L100002e30_0

; Entry 100013a58; block 278; address 100014b0d
L100013a58_278:
    MOV RDI, R12
    CALL _free
    JMP L100013a58_279     ; inserted

; Entry 100013a58; block 279; address 100014b15
L100013a58_279:
    CMP dword [RBP + 32], 0
    JLE L100013a58_280
    JMP L100013a58_104     ; inserted

; Entry 100013a58; block 280; address 100014b38
L100013a58_280:
    LEA RSI, [rel L__DATA___bss + 1248]
    MOV EDI, 16
    CALL L100002e30_0

; Entry 100013a58; block 281; address 100014b56
L100013a58_281:
    MOV RDI, RBX
    CALL _free
    JMP L100013a58_282     ; inserted

; Entry 100013a58; block 282; address 100014b5e
L100013a58_282:
    MOV EAX, dword [RBP + -48]
    MOV dword [R15], EAX
    LEA RAX, [rel L__DATA___data + 592]
    MOV RCX, qword [RBP + -104]
    MOV RDX, qword [RAX + RCX * 8 + 24]
    MOV EAX, 65534
    MOV RCX, RDX
    MOV qword [RBP + -48], RDX
    CMP RDX, 65534
    MOV RBX, qword [RBP + 16]
    MOV RDX, qword [RBP + -72]
    MOV R12, qword [RBP + -56]
    MOV R9, R13
    JE L100013a58_178
    JMP L100013a58_283     ; inserted

; Entry 100013a58; block 283; address 100014b9c
L100013a58_283:
    JMP L100013a58_168



; ---------------------
; Function: 0x100014bb8
; ---------------------
; Entry 100014bb8; block 0; address 100014bb8
L100014bb8_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R14
    PUSH RBX
    SUB RSP, 64
    MOV R14, RSI
    MOV RBX, RDI
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -24], RAX
    MOVSXD RAX, EDX
    LEA RAX, [RAX + RAX * 4]
    LEA RDX, [rel L__DATA___data + 592]
    LEA RSI, [RDX + RAX * 8]
    MOV R9, qword [RSI + 32]
    TEST R9, R9
    JE L100014bb8_2
    JMP L100014bb8_1     ; inserted

; Entry 100014bb8; block 1; address 100014bf2
L100014bb8_1:
    CMP byte [R9], 0
    JE L100014bb8_2
    JMP L100014bb8_3     ; inserted

; Entry 100014bb8; block 2; address 100014c03
L100014bb8_2:
    TEST ECX, ECX
    JE L100014bb8_7
    JMP L100014bb8_6     ; inserted

; Entry 100014bb8; block 3; address 100014bf8
L100014bb8_3:
    TEST ECX, ECX
    JE L100014bb8_5
    JMP L100014bb8_4     ; inserted

; Entry 100014bb8; block 4; address 100014bfc
L100014bb8_4:
    MOV R8, qword [RDX + RAX * 8 + 8]
    JMP L100014bb8_10

; Entry 100014bb8; block 5; address 100014c2c
L100014bb8_5:
    MOV R8, qword [RSI]
    JMP L100014bb8_10     ; inserted

; Entry 100014bb8; block 6; address 100014c07
L100014bb8_6:
    MOV R8, qword [RDX + RAX * 8 + 8]
    JMP L100014bb8_8

; Entry 100014bb8; block 7; address 100014c0e
L100014bb8_7:
    MOV R8, qword [RSI]
    JMP L100014bb8_8     ; inserted

; Entry 100014bb8; block 8; address 100014c11
L100014bb8_8:
    LEA RCX, [rel L__TEXT___cstring_37184]
    LEA RDI, [RBP + -80]
    MOV EDX, 50
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L100014bb8_9     ; inserted

; Entry 100014bb8; block 9; address 100014c2a
L100014bb8_9:
    JMP L100014bb8_11

; Entry 100014bb8; block 10; address 100014c2f
L100014bb8_10:
    LEA RCX, [rel L__TEXT___cstring_37174]
    LEA RDI, [RBP + -80]
    MOV EDX, 50
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L100014bb8_11     ; inserted

; Entry 100014bb8; block 11; address 100014c48
L100014bb8_11:
    LEA RDX, [RBP + -80]
    MOV RDI, RBX
    MOV RSI, R14
    XOR EAX, EAX
    CALL _sprintf
    JMP L100014bb8_12     ; inserted

; Entry 100014bb8; block 12; address 100014c59
L100014bb8_12:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -24]
    JNE L100014bb8_14
    JMP L100014bb8_13     ; inserted

; Entry 100014bb8; block 13; address 100014c69
L100014bb8_13:
    ADD RSP, 64
    POP RBX
    POP R14
    POP RBP
    RET 

; Entry 100014bb8; block 14; address 100014c72
L100014bb8_14:
    CALL ___stack_chk_fail



; ---------------------
; Function: 0x100014cfc
; ---------------------
; Entry 100014cfc; block 0; address 100014cfc
L100014cfc_0:
    PUSH RBP
    MOV RBP, RSP
    MOV RAX, RDI
    JMP L100014cfc_12     ; inserted

; Entry 100014cfc; block 1; address 100014d0a
L100014cfc_1:
    CMP CL, 92
    JNE L100014cfc_4
    JMP L100014cfc_3     ; inserted

; Entry 100014cfc; block 2; address 100014d1a
L100014cfc_2:
    TEST CL, CL
    JE L100014cfc_8
    JMP L100014cfc_7     ; inserted

; Entry 100014cfc; block 3; address 100014d0f
L100014cfc_3:
    CMP byte [RAX + 1], 0
    JE L100014cfc_6
    JMP L100014cfc_5     ; inserted

; Entry 100014cfc; block 4; address 100014d2a
L100014cfc_4:
    CMP CL, 91
    JE L100014cfc_10
    JMP L100014cfc_6     ; inserted

; Entry 100014cfc; block 5; address 100014d15
L100014cfc_5:
    INC RAX
    JMP L100014cfc_6

; Entry 100014cfc; block 6; address 100014d2f
L100014cfc_6:
    INC RAX
    JMP L100014cfc_12

; Entry 100014cfc; block 7; address 100014d1e
L100014cfc_7:
    CMP CL, 42
    JE L100014cfc_10
    JMP L100014cfc_9     ; inserted

; Entry 100014cfc; block 8; address 100014d34
L100014cfc_8:
    XOR EAX, EAX
    JMP L100014cfc_10     ; inserted

; Entry 100014cfc; block 9; address 100014d23
L100014cfc_9:
    CMP CL, 63
    JNE L100014cfc_6
    JMP L100014cfc_11     ; inserted

; Entry 100014cfc; block 10; address 100014d36
L100014cfc_10:
    POP RBP
    RET 

; Entry 100014cfc; block 11; address 100014d28
L100014cfc_11:
    JMP L100014cfc_10

; Entry 100014cfc; block 12; address 100014d03
L100014cfc_12:
    MOV CL, byte [RAX]
    CMP CL, 90
    JLE L100014cfc_2
    JMP L100014cfc_1     ; inserted



; ---------------------
; Function: 0x100014d38
; ---------------------
; Entry 100014d38; block 0; address 100014d38
L100014d38_0:
    PUSH RBP
    MOV RBP, RSP
    CALL L100014d4d_0
    JMP L100014d38_1     ; inserted

; Entry 100014d38; block 1; address 100014d41
L100014d38_1:
    XOR ECX, ECX
    CMP EAX, 1
    SETE CL
    MOV EAX, ECX
    POP RBP
    RET 



; ---------------------
; Function: 0x100014d4d
; ---------------------
; Entry 100014d4d; block 0; address 100014d4d
L100014d4d_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 24
    MOV dword [RBP + -48], EDX
    MOV R15, RSI
    MOV R12, RDI
    LEA RAX, [rel L__DATA___common + 88]
    LEA RCX, [rel L__DATA___common + 80]
    MOV ECX, dword [RCX]
    MOV dword [RBP + -52], ECX
    TEST ECX, ECX
    SETE CL
    LEA RDX, [rel L__DATA___common + 84]
    CMP dword [RDX], 0
    MOV R10D, dword [RAX]
    SETNE R11B
    AND R11B, CL
    XOR R11B, 1
    JMP L100014d4d_38     ; inserted

; Entry 100014d4d; block 1; address 100014da5
L100014d4d_1:
    TEST AL, AL
    JE L100014d4d_4
    JMP L100014d4d_3     ; inserted

; Entry 100014d4d; block 2; address 100014e04
L100014d4d_2:
    MOV AL, byte [R15]
    TEST R10D, R10D
    JE L100014d4d_20
    JMP L100014d4d_19     ; inserted

; Entry 100014d4d; block 3; address 100014dad
L100014d4d_3:
    CMP AL, 42
    JNE L100014d4d_6
    JMP L100014d4d_5     ; inserted

; Entry 100014d4d; block 4; address 100014fa5
L100014d4d_4:
    XOR EBX, EBX
    CMP byte [R15], 0
    JMP L100014d4d_78     ; inserted

; Entry 100014d4d; block 5; address 100014db1
L100014d4d_5:
    CMP dword [RBP + -52], 0
    JNE L100014d4d_6
    JMP L100014d4d_7     ; inserted

; Entry 100014d4d; block 6; address 100014e27
L100014d4d_6:
    CMP AL, 91
    SETNE CL
    OR CL, R11B
    JNE L100014d4d_26
    JMP L100014d4d_25     ; inserted

; Entry 100014d4d; block 7; address 100014db7
L100014d4d_7:
    TEST R10D, R10D
    JE L100014d4d_9
    JMP L100014d4d_8     ; inserted

; Entry 100014d4d; block 8; address 100014dc0
L100014d4d_8:
    MOV R14B, byte [R12]
    CMP R14B, 42
    JE L100014d4d_11
    JMP L100014d4d_10     ; inserted

; Entry 100014d4d; block 9; address 100014fba
L100014d4d_9:
    CMP byte [R12], 0
    JE L100014d4d_69
    JMP L100014d4d_68     ; inserted

; Entry 100014d4d; block 10; address 100014dce
L100014d4d_10:
    MOV byte [RBP + -41], R11B
    MOV dword [RBP + -56], R10D
    JMP L100014d4d_18     ; inserted

; Entry 100014d4d; block 11; address 100014fb3
L100014d4d_11:
    ADD R13, 2
    MOV R12, R13
    JMP L100014d4d_9     ; inserted

; Entry 100014d4d; block 12; address 100014de1
L100014d4d_12:
    CMP AL, 47
    JE L100014d4d_13
    JMP L100014d4d_14     ; inserted

; Entry 100014d4d; block 13; address 100014eab
L100014d4d_13:
    CMP R14B, 47
    MOV R10D, dword [RBP + -56]
    MOV R11B, byte [RBP + -41]
    JE L100014d4d_38
    JMP L100014d4d_39     ; inserted

; Entry 100014d4d; block 14; address 100014de9
L100014d4d_14:
    MOV RDI, R12
    MOV RSI, R15
    MOV EDX, dword [RBP + -48]
    CALL L100014d4d_0
    JMP L100014d4d_15     ; inserted

; Entry 100014d4d; block 15; address 100014df7
L100014d4d_15:
    TEST EAX, EAX
    JNE L100014d4d_17
    JMP L100014d4d_16     ; inserted

; Entry 100014d4d; block 16; address 100014dff
L100014d4d_16:
    INC R15
    JMP L100014d4d_18

; Entry 100014d4d; block 17; address 100014ff8
L100014d4d_17:
    MOV EBX, EAX
    JMP L100014d4d_22

; Entry 100014d4d; block 18; address 100014dd6
L100014d4d_18:
    MOV AL, byte [R15]
    TEST AL, AL
    JE L100014d4d_13
    JMP L100014d4d_12     ; inserted

; Entry 100014d4d; block 19; address 100014e10
L100014d4d_19:
    XOR EBX, EBX
    TEST AL, AL
    JE L100014d4d_22
    JMP L100014d4d_21     ; inserted

; Entry 100014d4d; block 20; address 100014ea2
L100014d4d_20:
    TEST AL, AL
    JNE L100014d4d_24
    JMP L100014d4d_36     ; inserted

; Entry 100014d4d; block 21; address 100014e1a
L100014d4d_21:
    CMP AL, 47
    JNE L100014d4d_24
    JMP L100014d4d_23     ; inserted

; Entry 100014d4d; block 22; address 10001503e
L100014d4d_22:
    MOV EAX, EBX
    ADD RSP, 24
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100014d4d; block 23; address 100014e22
L100014d4d_23:
    JMP L100014d4d_22

; Entry 100014d4d; block 24; address 100014f13
L100014d4d_24:
    INC R15
    JMP L100014d4d_38

; Entry 100014d4d; block 25; address 100014e35
L100014d4d_25:
    MOV R9B, byte [R15]
    XOR EBX, EBX
    TEST R9B, R9B
    JE L100014d4d_22
    JMP L100014d4d_27     ; inserted

; Entry 100014d4d; block 26; address 100014edc
L100014d4d_26:
    CMP AL, 92
    JNE L100014d4d_44
    JMP L100014d4d_43     ; inserted

; Entry 100014d4d; block 27; address 100014e43
L100014d4d_27:
    MOV R8B, byte [R12]
    CMP R8B, 33
    SETE AL
    CMP R8B, 94
    SETE CL
    OR CL, AL
    MOVZX EAX, CL
    MOV CL, byte [R12 + RAX]
    TEST CL, CL
    JE L100014d4d_22
    JMP L100014d4d_28     ; inserted

; Entry 100014d4d; block 28; address 100014e66
L100014d4d_28:
    MOV RDX, R12
    ADD RDX, RAX
    LEA R12, [RAX + R13]
    ADD R12, 2
    XOR ESI, ESI
    MOV EAX, ECX
    JMP L100014d4d_31     ; inserted

; Entry 100014d4d; block 29; address 100014e81
L100014d4d_29:
    MOV AL, byte [R12]
    INC R12
    TEST AL, AL
    JNE L100014d4d_31
    JMP L100014d4d_32     ; inserted

; Entry 100014d4d; block 30; address 100014e91
L100014d4d_30:
    MOV ESI, 1
    CMP AL, 92
    JE L100014d4d_29
    JMP L100014d4d_33     ; inserted

; Entry 100014d4d; block 31; address 100014e78
L100014d4d_31:
    TEST ESI, ESI
    MOV ESI, 0
    JE L100014d4d_30
    JMP L100014d4d_29     ; inserted

; Entry 100014d4d; block 32; address 100014e8c
L100014d4d_32:
    JMP L100014d4d_37

; Entry 100014d4d; block 33; address 100014e9a
L100014d4d_33:
    CMP AL, 93
    JE L100014d4d_35
    JMP L100014d4d_34     ; inserted

; Entry 100014d4d; block 34; address 100014e9e
L100014d4d_34:
    XOR ESI, ESI
    JMP L100014d4d_29

; Entry 100014d4d; block 35; address 100014f1b
L100014d4d_35:
    LEA RSI, [R12 + -1]
    CMP RDX, RSI
    JAE L100014d4d_51
    JMP L100014d4d_50     ; inserted

; Entry 100014d4d; block 36; address 100014ea6
L100014d4d_36:
    JMP L100014d4d_37

; Entry 100014d4d; block 37; address 10001503c
L100014d4d_37:
    XOR EBX, EBX
    JMP L100014d4d_22     ; inserted

; Entry 100014d4d; block 38; address 100014d97
L100014d4d_38:
    MOV R13, R12
    INC R12
    MOV AL, byte [R13]
    CMP AL, 63
    JE L100014d4d_2
    JMP L100014d4d_1     ; inserted

; Entry 100014d4d; block 39; address 100014ebd
L100014d4d_39:
    MOV EBX, 2
    CMP R14B, 92
    JNE L100014d4d_41
    JMP L100014d4d_40     ; inserted

; Entry 100014d4d; block 40; address 100014ecc
L100014d4d_40:
    CMP byte [R13 + 2], 47
    JE L100014d4d_38
    JMP L100014d4d_42     ; inserted

; Entry 100014d4d; block 41; address 100015003
L100014d4d_41:
    TEST R14B, R14B
    JNE L100014d4d_22
    JMP L100014d4d_77     ; inserted

; Entry 100014d4d; block 42; address 100014ed7
L100014d4d_42:
    JMP L100014d4d_22

; Entry 100014d4d; block 43; address 100014ee0
L100014d4d_43:
    CMP dword [RBP + -52], 0
    JNE L100014d4d_44
    JMP L100014d4d_45     ; inserted

; Entry 100014d4d; block 44; address 100014ef9
L100014d4d_44:
    MOV CL, byte [R15]
    CMP dword [RBP + -48], 0
    JE L100014d4d_48
    JMP L100014d4d_47     ; inserted

; Entry 100014d4d; block 45; address 100014ee6
L100014d4d_45:
    MOV AL, byte [R13 + 1]
    TEST AL, AL
    JE L100014d4d_37
    JMP L100014d4d_46     ; inserted

; Entry 100014d4d; block 46; address 100014ef2
L100014d4d_46:
    ADD R13, 2
    MOV R12, R13
    JMP L100014d4d_44     ; inserted

; Entry 100014d4d; block 47; address 100014f02
L100014d4d_47:
    CMP AL, CL
    JE L100014d4d_24
    JMP L100014d4d_49     ; inserted

; Entry 100014d4d; block 48; address 100014f0b
L100014d4d_48:
    CMP CL, AL
    JNE L100014d4d_37
    JMP L100014d4d_24     ; inserted

; Entry 100014d4d; block 49; address 100014f06
L100014d4d_49:
    JMP L100014d4d_37

; Entry 100014d4d; block 50; address 100014f25
L100014d4d_50:
    XOR EBX, EBX
    CMP CL, 45
    SETE BL
    XOR EDI, EDI
    JMP L100014d4d_63     ; inserted

; Entry 100014d4d; block 51; address 100014f79
L100014d4d_51:
    CMP R8B, 94
    JE L100014d4d_24
    JMP L100014d4d_64     ; inserted

; Entry 100014d4d; block 52; address 100014f33
L100014d4d_52:
    MOV AL, byte [RDX]
    CMP AL, 92
    JE L100014d4d_55
    JMP L100014d4d_54     ; inserted

; Entry 100014d4d; block 53; address 100014f45
L100014d4d_53:
    XOR EBX, EBX
    CMP byte [RDX + 1], 45
    JE L100014d4d_58
    JMP L100014d4d_57     ; inserted

; Entry 100014d4d; block 54; address 100014f39
L100014d4d_54:
    CMP AL, 45
    JNE L100014d4d_53
    JMP L100014d4d_56     ; inserted

; Entry 100014d4d; block 55; address 100014f6c
L100014d4d_55:
    MOV EBX, 1
    JMP L100014d4d_62     ; inserted

; Entry 100014d4d; block 56; address 100014f3d
L100014d4d_56:
    MOVZX EDI, byte [RDX + -1]
    XOR EBX, EBX
    JMP L100014d4d_62

; Entry 100014d4d; block 57; address 100014f4d
L100014d4d_57:
    TEST DIL, DIL
    MOVZX EAX, byte [RDX]
    CMOVE EDI, EAX
    CMP AL, DIL
    JB L100014d4d_58
    JMP L100014d4d_59     ; inserted

; Entry 100014d4d; block 58; address 100014f68
L100014d4d_58:
    XOR EDI, EDI
    JMP L100014d4d_62

; Entry 100014d4d; block 59; address 100014f5b
L100014d4d_59:
    CMP R9B, DIL
    JE L100014d4d_61
    JMP L100014d4d_60     ; inserted

; Entry 100014d4d; block 60; address 100014f60
L100014d4d_60:
    INC DIL
    CMP DIL, AL
    JBE L100014d4d_59
    JMP L100014d4d_58     ; inserted

; Entry 100014d4d; block 61; address 100014f8a
L100014d4d_61:
    XOR EBX, EBX
    CMP R8B, 33
    JE L100014d4d_22
    JMP L100014d4d_66     ; inserted

; Entry 100014d4d; block 62; address 100014f71
L100014d4d_62:
    INC RDX
    CMP RDX, RSI
    JB L100014d4d_63
    JMP L100014d4d_51     ; inserted

; Entry 100014d4d; block 63; address 100014f2f
L100014d4d_63:
    TEST EBX, EBX
    JNE L100014d4d_53
    JMP L100014d4d_52     ; inserted

; Entry 100014d4d; block 64; address 100014f7f
L100014d4d_64:
    CMP R8B, 33
    JE L100014d4d_24
    JMP L100014d4d_65     ; inserted

; Entry 100014d4d; block 65; address 100014f85
L100014d4d_65:
    JMP L100014d4d_37

; Entry 100014d4d; block 66; address 100014f96
L100014d4d_66:
    CMP R8B, 94
    JNE L100014d4d_24
    JMP L100014d4d_67     ; inserted

; Entry 100014d4d; block 67; address 100014fa0
L100014d4d_67:
    JMP L100014d4d_22

; Entry 100014d4d; block 68; address 100014fc1
L100014d4d_68:
    MOV RDI, R12
    CALL L100014cfc_0
    JMP L100014d4d_70     ; inserted

; Entry 100014d4d; block 69; address 100014ffc
L100014d4d_69:
    MOV EBX, 1
    JMP L100014d4d_22

; Entry 100014d4d; block 70; address 100014fc9
L100014d4d_70:
    TEST RAX, RAX
    JE L100014d4d_72
    JMP L100014d4d_71     ; inserted

; Entry 100014d4d; block 71; address 100014fce
L100014d4d_71:
    MOV EBX, 2
    CMP byte [R15], 0
    JE L100014d4d_22
    JMP L100014d4d_73     ; inserted

; Entry 100014d4d; block 72; address 10001500e
L100014d4d_72:
    MOV RDI, R15
    CALL _strlen
    JMP L100014d4d_79     ; inserted

; Entry 100014d4d; block 73; address 100014fd9
L100014d4d_73:
    MOV RDI, R12
    MOV RSI, R15
    MOV EDX, dword [RBP + -48]
    CALL L100014d4d_0
    JMP L100014d4d_74     ; inserted

; Entry 100014d4d; block 74; address 100014fe7
L100014d4d_74:
    TEST EAX, EAX
    JNE L100014d4d_17
    JMP L100014d4d_75     ; inserted

; Entry 100014d4d; block 75; address 100014feb
L100014d4d_75:
    CMP byte [R15 + 1], 0
    LEA R15, [R15 + 1]
    JNE L100014d4d_73
    JMP L100014d4d_76     ; inserted

; Entry 100014d4d; block 76; address 100014ff6
L100014d4d_76:
    JMP L100014d4d_22

; Entry 100014d4d; block 77; address 100015008
L100014d4d_77:
    XOR EBX, EBX
    TEST AL, AL
    JMP L100014d4d_78

; Entry 100014d4d; block 78; address 100014fab
L100014d4d_78:
    SETE BL
    JMP L100014d4d_22

; Entry 100014d4d; block 79; address 100015016
L100014d4d_79:
    MOV RBX, RAX
    MOV RDI, R12
    CALL _strlen
    JMP L100014d4d_80     ; inserted

; Entry 100014d4d; block 80; address 100015021
L100014d4d_80:
    SUB RBX, RAX
    JS L100014d4d_37
    JMP L100014d4d_81     ; inserted

; Entry 100014d4d; block 81; address 100015026
L100014d4d_81:
    ADD R15, RBX
    CMP dword [RBP + -48], 0
    JE L100014d4d_83
    JMP L100014d4d_82     ; inserted

; Entry 100014d4d; block 82; address 10001502f
L100014d4d_82:
    MOV RDI, R12
    MOV RSI, R15
    CALL _strcmp
    JMP L100014d4d_84     ; inserted

; Entry 100014d4d; block 83; address 10001504f
L100014d4d_83:
    MOV RDI, R12
    MOV RSI, R15
    CALL L100015685_0
    JMP L100014d4d_85     ; inserted

; Entry 100014d4d; block 84; address 10001503a
L100014d4d_84:
    JMP L100014d4d_85

; Entry 100014d4d; block 85; address 10001505a
L100014d4d_85:
    XOR EBX, EBX
    TEST EAX, EAX
    JMP L100014d4d_78



; ---------------------
; Function: 0x100015063
; ---------------------
; Entry 100015063; block 0; address 100015063
L100015063_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    DEC RDX
    JS L100015063_2
    JMP L100015063_1     ; inserted

; Entry 100015063; block 1; address 100015076
L100015063_1:
    MOV R14, RCX
    MOV R12, RSI
    MOV R15, RDI
    LEA R13, [RSI + RDX * 8]
    JMP L100015063_9     ; inserted

; Entry 100015063; block 2; address 1000150c2
L100015063_2:
    XOR EBX, EBX
    JMP L100015063_7     ; inserted

; Entry 100015063; block 3; address 1000150a7
L100015063_3:
    TEST EAX, EAX
    JS L100015063_5
    JMP L100015063_4     ; inserted

; Entry 100015063; block 4; address 1000150ab
L100015063_4:
    JE L100015063_7
    JMP L100015063_6     ; inserted

; Entry 100015063; block 5; address 1000150b6
L100015063_5:
    ADD RBX, 18446744073709551608
    MOV R13, RBX
    JMP L100015063_8     ; inserted

; Entry 100015063; block 6; address 1000150ad
L100015063_6:
    ADD RBX, 8
    MOV R12, RBX
    JMP L100015063_8

; Entry 100015063; block 7; address 1000150c4
L100015063_7:
    MOV RAX, RBX
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100015063; block 8; address 1000150bd
L100015063_8:
    CMP R13, R12
    JAE L100015063_9
    JMP L100015063_2     ; inserted

; Entry 100015063; block 9; address 100015083
L100015063_9:
    MOV RAX, R13
    SUB RAX, R12
    SHR RAX, 1
    MOV RCX, 17179869176
    AND RAX, RCX
    LEA RBX, [R12 + RAX]
    MOV RSI, qword [R12 + RAX]
    MOV RDI, R15
    ; NO JUMP TABLE FOUND.
    CALL R14; TARGETS: Unresolved
    JMP L100015063_3     ; inserted



; ---------------------
; Function: 0x1000150d6
; ---------------------
; Entry 1000150d6; block 0; address 1000150d6
L1000150d6_0:
    PUSH RBP
    MOV RBP, RSP
    MOVDQA XMM0, oword [rel L__TEXT___const + 320]
    XOR EDX, EDX
    LEA RAX, [rel L__DATA___common + 688]
    LEA RCX, [rel L__DATA___common + 944]
    MOVDQA XMM1, oword [rel L__TEXT___const + 336]
    JMP L1000150d6_1     ; inserted

; Entry 1000150d6; block 1; address 1000150fa
L1000150d6_1:
    MOVDQA oword [RAX + RDX], XMM0
    MOVDQA oword [RCX + RDX], XMM0
    ADD RDX, 16
    PADDB XMM0, XMM1
    CMP RDX, 256
    JNE L1000150d6_1
    JMP L1000150d6_2     ; inserted

; Entry 1000150d6; block 2; address 100015115
L1000150d6_2:
    XOR EDX, EDX
    MOVDQA XMM8, oword [rel L__TEXT___const + 352]
    MOVDQA XMM9, oword [rel L__TEXT___const + 368]
    MOVDQA XMM10, oword [rel L__TEXT___const + 384]
    MOVDQA XMM11, oword [rel L__TEXT___const + 400]
    MOVDQA XMM12, oword [rel L__TEXT___const + 416]
    MOVDQA XMM13, oword [rel L__TEXT___const + 432]
    MOVDQA XMM6, oword [rel L__TEXT___const + 448]
    MOVDQA XMM7, oword [rel L__TEXT___const + 464]
    MOVDQA XMM0, oword [rel L__TEXT___const + 480]
    MOVDQA XMM4, oword [rel L__TEXT___const + 496]
    JMP L1000150d6_35     ; inserted

; Entry 1000150d6; block 3; address 1000151ab
L1000150d6_3:
    LEA ESI, [RDX + 65]
    MOV byte [RCX + RDX + 97], SIL
    JMP L1000150d6_4     ; inserted

; Entry 1000150d6; block 4; address 1000151b3
L1000150d6_4:
    PEXTRB ESI, XMM3, 8
    TEST SIL, 1
    JE L1000150d6_6
    JMP L1000150d6_5     ; inserted

; Entry 1000150d6; block 5; address 1000151bf
L1000150d6_5:
    LEA ESI, [RDX + 66]
    MOV byte [RCX + RDX + 98], SIL
    JMP L1000150d6_6     ; inserted

; Entry 1000150d6; block 6; address 1000151c7
L1000150d6_6:
    MOVDQA XMM1, XMM2
    POR XMM1, XMM6
    PXOR XMM1, XMM0
    MOVDQA XMM3, XMM4
    PCMPGTD XMM3, XMM1
    PCMPEQD XMM1, XMM4
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM3
    PSHUFD XMM3, XMM3, 245
    POR XMM3, XMM1
    MOVD ESI, XMM3
    TEST SIL, 1
    JE L1000150d6_8
    JMP L1000150d6_7     ; inserted

; Entry 1000150d6; block 7; address 1000151fb
L1000150d6_7:
    LEA ESI, [RDX + 67]
    MOV byte [RCX + RDX + 99], SIL
    JMP L1000150d6_8     ; inserted

; Entry 1000150d6; block 8; address 100015203
L1000150d6_8:
    PEXTRB ESI, XMM3, 8
    TEST SIL, 1
    JE L1000150d6_10
    JMP L1000150d6_9     ; inserted

; Entry 1000150d6; block 9; address 10001520f
L1000150d6_9:
    LEA ESI, [RDX + 68]
    MOV byte [RCX + RDX + 100], SIL
    JMP L1000150d6_10     ; inserted

; Entry 1000150d6; block 10; address 100015217
L1000150d6_10:
    MOVDQA XMM1, XMM2
    POR XMM1, XMM13
    PXOR XMM1, XMM0
    MOVDQA XMM3, XMM4
    PCMPGTD XMM3, XMM1
    PCMPEQD XMM1, XMM4
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM3
    PSHUFD XMM3, XMM3, 245
    POR XMM3, XMM1
    MOVD ESI, XMM3
    TEST SIL, 1
    JE L1000150d6_12
    JMP L1000150d6_11     ; inserted

; Entry 1000150d6; block 11; address 10001524c
L1000150d6_11:
    LEA ESI, [RDX + 69]
    MOV byte [RCX + RDX + 101], SIL
    JMP L1000150d6_12     ; inserted

; Entry 1000150d6; block 12; address 100015254
L1000150d6_12:
    PEXTRB ESI, XMM3, 8
    TEST SIL, 1
    JE L1000150d6_14
    JMP L1000150d6_13     ; inserted

; Entry 1000150d6; block 13; address 100015260
L1000150d6_13:
    LEA ESI, [RDX + 70]
    MOV byte [RCX + RDX + 102], SIL
    JMP L1000150d6_14     ; inserted

; Entry 1000150d6; block 14; address 100015268
L1000150d6_14:
    MOVDQA XMM1, XMM2
    POR XMM1, XMM12
    PXOR XMM1, XMM0
    MOVDQA XMM3, XMM4
    PCMPGTD XMM3, XMM1
    PCMPEQD XMM1, XMM4
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM3
    PSHUFD XMM3, XMM3, 245
    POR XMM3, XMM1
    MOVD ESI, XMM3
    TEST SIL, 1
    JE L1000150d6_16
    JMP L1000150d6_15     ; inserted

; Entry 1000150d6; block 15; address 10001529d
L1000150d6_15:
    LEA ESI, [RDX + 71]
    MOV byte [RCX + RDX + 103], SIL
    JMP L1000150d6_16     ; inserted

; Entry 1000150d6; block 16; address 1000152a5
L1000150d6_16:
    PEXTRB ESI, XMM3, 8
    TEST SIL, 1
    JE L1000150d6_18
    JMP L1000150d6_17     ; inserted

; Entry 1000150d6; block 17; address 1000152b1
L1000150d6_17:
    LEA ESI, [RDX + 72]
    MOV byte [RCX + RDX + 104], SIL
    JMP L1000150d6_18     ; inserted

; Entry 1000150d6; block 18; address 1000152b9
L1000150d6_18:
    MOVDQA XMM1, XMM2
    POR XMM1, XMM11
    PXOR XMM1, XMM0
    MOVDQA XMM3, XMM4
    PCMPGTD XMM3, XMM1
    PCMPEQD XMM1, XMM4
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM3
    PSHUFD XMM3, XMM3, 245
    POR XMM3, XMM1
    MOVD ESI, XMM3
    TEST SIL, 1
    JE L1000150d6_20
    JMP L1000150d6_19     ; inserted

; Entry 1000150d6; block 19; address 1000152ee
L1000150d6_19:
    LEA ESI, [RDX + 73]
    MOV byte [RCX + RDX + 105], SIL
    JMP L1000150d6_20     ; inserted

; Entry 1000150d6; block 20; address 1000152f6
L1000150d6_20:
    PEXTRB ESI, XMM3, 8
    TEST SIL, 1
    JE L1000150d6_22
    JMP L1000150d6_21     ; inserted

; Entry 1000150d6; block 21; address 100015302
L1000150d6_21:
    LEA ESI, [RDX + 74]
    MOV byte [RCX + RDX + 106], SIL
    JMP L1000150d6_22     ; inserted

; Entry 1000150d6; block 22; address 10001530a
L1000150d6_22:
    MOVDQA XMM1, XMM2
    POR XMM1, XMM10
    PXOR XMM1, XMM0
    MOVDQA XMM3, XMM4
    PCMPGTD XMM3, XMM1
    PCMPEQD XMM1, XMM4
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM3
    PSHUFD XMM3, XMM3, 245
    POR XMM3, XMM1
    MOVD ESI, XMM3
    TEST SIL, 1
    JE L1000150d6_24
    JMP L1000150d6_23     ; inserted

; Entry 1000150d6; block 23; address 10001533f
L1000150d6_23:
    LEA ESI, [RDX + 75]
    MOV byte [RCX + RDX + 107], SIL
    JMP L1000150d6_24     ; inserted

; Entry 1000150d6; block 24; address 100015347
L1000150d6_24:
    PEXTRB ESI, XMM3, 8
    TEST SIL, 1
    JE L1000150d6_26
    JMP L1000150d6_25     ; inserted

; Entry 1000150d6; block 25; address 100015353
L1000150d6_25:
    LEA ESI, [RDX + 76]
    MOV byte [RCX + RDX + 108], SIL
    JMP L1000150d6_26     ; inserted

; Entry 1000150d6; block 26; address 10001535b
L1000150d6_26:
    MOVDQA XMM1, XMM2
    POR XMM1, XMM9
    PXOR XMM1, XMM0
    MOVDQA XMM3, XMM4
    PCMPGTD XMM3, XMM1
    PCMPEQD XMM1, XMM4
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM3
    PSHUFD XMM3, XMM3, 245
    POR XMM3, XMM1
    MOVD ESI, XMM3
    TEST SIL, 1
    JE L1000150d6_28
    JMP L1000150d6_27     ; inserted

; Entry 1000150d6; block 27; address 100015390
L1000150d6_27:
    LEA ESI, [RDX + 77]
    MOV byte [RCX + RDX + 109], SIL
    JMP L1000150d6_28     ; inserted

; Entry 1000150d6; block 28; address 100015398
L1000150d6_28:
    PEXTRB ESI, XMM3, 8
    TEST SIL, 1
    JE L1000150d6_30
    JMP L1000150d6_29     ; inserted

; Entry 1000150d6; block 29; address 1000153a4
L1000150d6_29:
    LEA ESI, [RDX + 78]
    MOV byte [RCX + RDX + 110], SIL
    JMP L1000150d6_30     ; inserted

; Entry 1000150d6; block 30; address 1000153ac
L1000150d6_30:
    POR XMM2, XMM8
    PXOR XMM2, XMM0
    MOVDQA XMM1, XMM4
    PCMPGTD XMM1, XMM2
    PCMPEQD XMM2, XMM4
    PSHUFD XMM3, XMM2, 245
    PAND XMM3, XMM1
    PSHUFD XMM2, XMM1, 245
    POR XMM2, XMM3
    MOVD ESI, XMM2
    TEST SIL, 1
    JE L1000150d6_32
    JMP L1000150d6_31     ; inserted

; Entry 1000150d6; block 31; address 1000153dd
L1000150d6_31:
    LEA ESI, [RDX + 79]
    MOV byte [RCX + RDX + 111], SIL
    JMP L1000150d6_32     ; inserted

; Entry 1000150d6; block 32; address 1000153e5
L1000150d6_32:
    PEXTRB ESI, XMM2, 8
    TEST SIL, 1
    JE L1000150d6_34
    JMP L1000150d6_33     ; inserted

; Entry 1000150d6; block 33; address 1000153f1
L1000150d6_33:
    LEA ESI, [RDX + 80]
    MOV byte [RCX + RDX + 112], SIL
    JMP L1000150d6_34     ; inserted

; Entry 1000150d6; block 34; address 1000153f9
L1000150d6_34:
    ADD RDX, 16
    CMP RDX, 32
    JNE L1000150d6_35
    JMP L1000150d6_36     ; inserted

; Entry 1000150d6; block 35; address 10001516d
L1000150d6_35:
    MOVQ XMM2, RDX
    PSHUFD XMM2, XMM2, 68
    MOVDQA XMM3, XMM2
    POR XMM3, XMM7
    PXOR XMM3, XMM0
    MOVDQA XMM1, XMM4
    PCMPGTD XMM1, XMM3
    PCMPEQD XMM3, XMM4
    PSHUFD XMM5, XMM3, 245
    PAND XMM5, XMM1
    PSHUFD XMM3, XMM1, 245
    POR XMM3, XMM5
    MOVD ESI, XMM3
    TEST SIL, 1
    JE L1000150d6_4
    JMP L1000150d6_3     ; inserted

; Entry 1000150d6; block 36; address 100015407
L1000150d6_36:
    XOR ECX, ECX
    JMP L1000150d6_69     ; inserted

; Entry 1000150d6; block 37; address 100015446
L1000150d6_37:
    LEA EDX, [RCX + 97]
    MOV byte [RAX + RCX + 65], DL
    JMP L1000150d6_38     ; inserted

; Entry 1000150d6; block 38; address 10001544d
L1000150d6_38:
    PEXTRB EDX, XMM3, 8
    TEST DL, 1
    JE L1000150d6_40
    JMP L1000150d6_39     ; inserted

; Entry 1000150d6; block 39; address 100015458
L1000150d6_39:
    LEA EDX, [RCX + 98]
    MOV byte [RAX + RCX + 66], DL
    JMP L1000150d6_40     ; inserted

; Entry 1000150d6; block 40; address 10001545f
L1000150d6_40:
    MOVDQA XMM1, XMM2
    POR XMM1, XMM6
    PXOR XMM1, XMM0
    MOVDQA XMM3, XMM4
    PCMPGTD XMM3, XMM1
    PCMPEQD XMM1, XMM4
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM3
    PSHUFD XMM3, XMM3, 245
    POR XMM3, XMM1
    MOVD EDX, XMM3
    TEST DL, 1
    JE L1000150d6_42
    JMP L1000150d6_41     ; inserted

; Entry 1000150d6; block 41; address 100015492
L1000150d6_41:
    LEA EDX, [RCX + 99]
    MOV byte [RAX + RCX + 67], DL
    JMP L1000150d6_42     ; inserted

; Entry 1000150d6; block 42; address 100015499
L1000150d6_42:
    PEXTRB EDX, XMM3, 8
    TEST DL, 1
    JE L1000150d6_44
    JMP L1000150d6_43     ; inserted

; Entry 1000150d6; block 43; address 1000154a4
L1000150d6_43:
    LEA EDX, [RCX + 100]
    MOV byte [RAX + RCX + 68], DL
    JMP L1000150d6_44     ; inserted

; Entry 1000150d6; block 44; address 1000154ab
L1000150d6_44:
    MOVDQA XMM1, XMM2
    POR XMM1, XMM13
    PXOR XMM1, XMM0
    MOVDQA XMM3, XMM4
    PCMPGTD XMM3, XMM1
    PCMPEQD XMM1, XMM4
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM3
    PSHUFD XMM3, XMM3, 245
    POR XMM3, XMM1
    MOVD EDX, XMM3
    TEST DL, 1
    JE L1000150d6_46
    JMP L1000150d6_45     ; inserted

; Entry 1000150d6; block 45; address 1000154df
L1000150d6_45:
    LEA EDX, [RCX + 101]
    MOV byte [RAX + RCX + 69], DL
    JMP L1000150d6_46     ; inserted

; Entry 1000150d6; block 46; address 1000154e6
L1000150d6_46:
    PEXTRB EDX, XMM3, 8
    TEST DL, 1
    JE L1000150d6_48
    JMP L1000150d6_47     ; inserted

; Entry 1000150d6; block 47; address 1000154f1
L1000150d6_47:
    LEA EDX, [RCX + 102]
    MOV byte [RAX + RCX + 70], DL
    JMP L1000150d6_48     ; inserted

; Entry 1000150d6; block 48; address 1000154f8
L1000150d6_48:
    MOVDQA XMM1, XMM2
    POR XMM1, XMM12
    PXOR XMM1, XMM0
    MOVDQA XMM3, XMM4
    PCMPGTD XMM3, XMM1
    PCMPEQD XMM1, XMM4
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM3
    PSHUFD XMM3, XMM3, 245
    POR XMM3, XMM1
    MOVD EDX, XMM3
    TEST DL, 1
    JE L1000150d6_50
    JMP L1000150d6_49     ; inserted

; Entry 1000150d6; block 49; address 10001552c
L1000150d6_49:
    LEA EDX, [RCX + 103]
    MOV byte [RAX + RCX + 71], DL
    JMP L1000150d6_50     ; inserted

; Entry 1000150d6; block 50; address 100015533
L1000150d6_50:
    PEXTRB EDX, XMM3, 8
    TEST DL, 1
    JE L1000150d6_52
    JMP L1000150d6_51     ; inserted

; Entry 1000150d6; block 51; address 10001553e
L1000150d6_51:
    LEA EDX, [RCX + 104]
    MOV byte [RAX + RCX + 72], DL
    JMP L1000150d6_52     ; inserted

; Entry 1000150d6; block 52; address 100015545
L1000150d6_52:
    MOVDQA XMM1, XMM2
    POR XMM1, XMM11
    PXOR XMM1, XMM0
    MOVDQA XMM3, XMM4
    PCMPGTD XMM3, XMM1
    PCMPEQD XMM1, XMM4
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM3
    PSHUFD XMM3, XMM3, 245
    POR XMM3, XMM1
    MOVD EDX, XMM3
    TEST DL, 1
    JE L1000150d6_54
    JMP L1000150d6_53     ; inserted

; Entry 1000150d6; block 53; address 100015579
L1000150d6_53:
    LEA EDX, [RCX + 105]
    MOV byte [RAX + RCX + 73], DL
    JMP L1000150d6_54     ; inserted

; Entry 1000150d6; block 54; address 100015580
L1000150d6_54:
    PEXTRB EDX, XMM3, 8
    TEST DL, 1
    JE L1000150d6_56
    JMP L1000150d6_55     ; inserted

; Entry 1000150d6; block 55; address 10001558b
L1000150d6_55:
    LEA EDX, [RCX + 106]
    MOV byte [RAX + RCX + 74], DL
    JMP L1000150d6_56     ; inserted

; Entry 1000150d6; block 56; address 100015592
L1000150d6_56:
    MOVDQA XMM1, XMM2
    POR XMM1, XMM10
    PXOR XMM1, XMM0
    MOVDQA XMM3, XMM4
    PCMPGTD XMM3, XMM1
    PCMPEQD XMM1, XMM4
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM3
    PSHUFD XMM3, XMM3, 245
    POR XMM3, XMM1
    MOVD EDX, XMM3
    TEST DL, 1
    JE L1000150d6_58
    JMP L1000150d6_57     ; inserted

; Entry 1000150d6; block 57; address 1000155c6
L1000150d6_57:
    LEA EDX, [RCX + 107]
    MOV byte [RAX + RCX + 75], DL
    JMP L1000150d6_58     ; inserted

; Entry 1000150d6; block 58; address 1000155cd
L1000150d6_58:
    PEXTRB EDX, XMM3, 8
    TEST DL, 1
    JE L1000150d6_60
    JMP L1000150d6_59     ; inserted

; Entry 1000150d6; block 59; address 1000155d8
L1000150d6_59:
    LEA EDX, [RCX + 108]
    MOV byte [RAX + RCX + 76], DL
    JMP L1000150d6_60     ; inserted

; Entry 1000150d6; block 60; address 1000155df
L1000150d6_60:
    MOVDQA XMM1, XMM2
    POR XMM1, XMM9
    PXOR XMM1, XMM0
    MOVDQA XMM3, XMM4
    PCMPGTD XMM3, XMM1
    PCMPEQD XMM1, XMM4
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM3
    PSHUFD XMM3, XMM3, 245
    POR XMM3, XMM1
    MOVD EDX, XMM3
    TEST DL, 1
    JE L1000150d6_62
    JMP L1000150d6_61     ; inserted

; Entry 1000150d6; block 61; address 100015613
L1000150d6_61:
    LEA EDX, [RCX + 109]
    MOV byte [RAX + RCX + 77], DL
    JMP L1000150d6_62     ; inserted

; Entry 1000150d6; block 62; address 10001561a
L1000150d6_62:
    PEXTRB EDX, XMM3, 8
    TEST DL, 1
    JE L1000150d6_64
    JMP L1000150d6_63     ; inserted

; Entry 1000150d6; block 63; address 100015625
L1000150d6_63:
    LEA EDX, [RCX + 110]
    MOV byte [RAX + RCX + 78], DL
    JMP L1000150d6_64     ; inserted

; Entry 1000150d6; block 64; address 10001562c
L1000150d6_64:
    POR XMM2, XMM8
    PXOR XMM2, XMM0
    MOVDQA XMM1, XMM4
    PCMPGTD XMM1, XMM2
    PCMPEQD XMM2, XMM4
    PSHUFD XMM3, XMM2, 245
    PAND XMM3, XMM1
    PSHUFD XMM2, XMM1, 245
    POR XMM2, XMM3
    MOVD EDX, XMM2
    TEST DL, 1
    JE L1000150d6_66
    JMP L1000150d6_65     ; inserted

; Entry 1000150d6; block 65; address 10001565c
L1000150d6_65:
    LEA EDX, [RCX + 111]
    MOV byte [RAX + RCX + 79], DL
    JMP L1000150d6_66     ; inserted

; Entry 1000150d6; block 66; address 100015663
L1000150d6_66:
    PEXTRB EDX, XMM2, 8
    TEST DL, 1
    JE L1000150d6_68
    JMP L1000150d6_67     ; inserted

; Entry 1000150d6; block 67; address 10001566e
L1000150d6_67:
    LEA EDX, [RCX + 112]
    MOV byte [RAX + RCX + 80], DL
    JMP L1000150d6_68     ; inserted

; Entry 1000150d6; block 68; address 100015675
L1000150d6_68:
    ADD RCX, 16
    CMP RCX, 32
    JNE L1000150d6_69
    JMP L1000150d6_70     ; inserted

; Entry 1000150d6; block 69; address 100015409
L1000150d6_69:
    MOVQ XMM1, RCX
    PSHUFD XMM2, XMM1, 68
    MOVDQA XMM1, XMM2
    POR XMM1, XMM7
    PXOR XMM1, XMM0
    MOVDQA XMM3, XMM4
    PCMPGTD XMM3, XMM1
    PCMPEQD XMM1, XMM4
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM3
    PSHUFD XMM3, XMM3, 245
    POR XMM3, XMM1
    MOVD EDX, XMM3
    TEST DL, 1
    JE L1000150d6_38
    JMP L1000150d6_37     ; inserted

; Entry 1000150d6; block 70; address 100015683
L1000150d6_70:
    POP RBP
    RET 



; ---------------------
; Function: 0x100015685
; ---------------------
; Entry 100015685; block 0; address 100015685
L100015685_0:
    PUSH RBP
    MOV RBP, RSP
    MOVZX ECX, byte [RDI]
    MOVZX EDX, byte [RSI]
    MOV EAX, ECX
    SUB EAX, EDX
    TEST EDX, EDX
    JE L100015685_2
    JMP L100015685_1     ; inserted

; Entry 100015685; block 1; address 100015697
L100015685_1:
    TEST CL, CL
    JE L100015685_2
    JMP L100015685_3     ; inserted

; Entry 100015685; block 2; address 1000156c2
L100015685_2:
    POP RBP
    RET 

; Entry 100015685; block 3; address 10001569b
L100015685_3:
    TEST EAX, EAX
    JNE L100015685_2
    JMP L100015685_4     ; inserted

; Entry 100015685; block 4; address 10001569f
L100015685_4:
    MOV ECX, 1
    JMP L100015685_7     ; inserted

; Entry 100015685; block 5; address 1000156b7
L100015685_5:
    TEST DL, DL
    JE L100015685_2
    JMP L100015685_6     ; inserted

; Entry 100015685; block 6; address 1000156bb
L100015685_6:
    INC RCX
    TEST EAX, EAX
    JE L100015685_7
    JMP L100015685_2     ; inserted

; Entry 100015685; block 7; address 1000156a4
L100015685_7:
    MOVZX EDX, byte [RDI + RCX]
    MOVZX R8D, byte [RSI + RCX]
    MOV EAX, EDX
    SUB EAX, R8D
    TEST R8D, R8D
    JE L100015685_2
    JMP L100015685_5     ; inserted



; ---------------------
; Function: 0x1000156c4
; ---------------------
; Entry 1000156c4; block 0; address 1000156c4
L1000156c4_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 24
    MOV R12, RCX
    MOV R15, RSI
    MOV qword [RBP + -56], RDI
    MOV RDI, RDX
    CALL _getenv
    JMP L1000156c4_1     ; inserted

; Entry 1000156c4; block 1; address 1000156e7
L1000156c4_1:
    TEST RAX, RAX
    JE L1000156c4_3
    JMP L1000156c4_2     ; inserted

; Entry 1000156c4; block 2; address 1000156ec
L1000156c4_2:
    MOV R13, RAX
    DEC R13
    MOV R14, qword [rel __DefaultRuneLocale]
    MOV EBX, 16384
    JMP L1000156c4_7     ; inserted

; Entry 1000156c4; block 3; address 10001572a
L1000156c4_3:
    MOV RDI, R12
    CALL _getenv
    JMP L1000156c4_10     ; inserted

; Entry 1000156c4; block 4; address 100015708
L1000156c4_4:
    MOV EAX, dword [R14 + RDI * 4 + 60]
    AND EAX, EBX
    JMP L1000156c4_6

; Entry 1000156c4; block 5; address 100015711
L1000156c4_5:
    MOV ESI, 16384
    CALL ___maskrune
    JMP L1000156c4_6     ; inserted

; Entry 1000156c4; block 6; address 10001571b
L1000156c4_6:
    INC R13
    TEST EAX, EAX
    JNE L1000156c4_7
    JMP L1000156c4_8     ; inserted

; Entry 1000156c4; block 7; address 1000156fe
L1000156c4_7:
    MOVZX EDI, byte [R13 + 1]
    TEST DIL, DIL
    JS L1000156c4_5
    JMP L1000156c4_4     ; inserted

; Entry 1000156c4; block 8; address 100015722
L1000156c4_8:
    MOV AL, byte [R13]
    TEST AL, AL
    JNE L1000156c4_9
    JMP L1000156c4_3     ; inserted

; Entry 1000156c4; block 9; address 10001577d
L1000156c4_9:
    XOR R14D, R14D
    MOV R12D, 16384
    MOV RBX, R13
    JMP L1000156c4_39     ; inserted

; Entry 1000156c4; block 10; address 100015732
L1000156c4_10:
    TEST RAX, RAX
    JE L1000156c4_12
    JMP L1000156c4_11     ; inserted

; Entry 1000156c4; block 11; address 10001573b
L1000156c4_11:
    MOV R13, RAX
    DEC R13
    MOV R14, qword [rel __DefaultRuneLocale]
    MOV EBX, 16384
    JMP L1000156c4_16     ; inserted

; Entry 1000156c4; block 12; address 100015a24
L1000156c4_12:
    ADD RSP, 24
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000156c4; block 13; address 100015757
L1000156c4_13:
    MOV EAX, dword [R14 + RDI * 4 + 60]
    AND EAX, EBX
    JMP L1000156c4_15

; Entry 1000156c4; block 14; address 100015760
L1000156c4_14:
    MOV ESI, 16384
    CALL ___maskrune
    JMP L1000156c4_15     ; inserted

; Entry 1000156c4; block 15; address 10001576a
L1000156c4_15:
    INC R13
    TEST EAX, EAX
    JNE L1000156c4_16
    JMP L1000156c4_17     ; inserted

; Entry 1000156c4; block 16; address 10001574d
L1000156c4_16:
    MOVZX EDI, byte [R13 + 1]
    TEST DIL, DIL
    JS L1000156c4_14
    JMP L1000156c4_13     ; inserted

; Entry 1000156c4; block 17; address 100015771
L1000156c4_17:
    MOV AL, byte [R13]
    TEST AL, AL
    JE L1000156c4_12
    JMP L1000156c4_9     ; inserted

; Entry 1000156c4; block 18; address 100015794
L1000156c4_18:
    TEST AL, AL
    JE L1000156c4_21
    JMP L1000156c4_20     ; inserted

; Entry 1000156c4; block 19; address 1000157d9
L1000156c4_19:
    MOV RAX, RBX
    INC RBX
    MOV CL, byte [RAX + 1]
    CMP CL, 92
    JE L1000156c4_28
    JMP L1000156c4_29     ; inserted

; Entry 1000156c4; block 20; address 10001579c
L1000156c4_20:
    TEST AL, AL
    JS L1000156c4_23
    JMP L1000156c4_22     ; inserted

; Entry 1000156c4; block 21; address 10001583a
L1000156c4_21:
    MOV RBX, R14
    MOV RDI, R13
    CALL _strlen
    JMP L1000156c4_40     ; inserted

; Entry 1000156c4; block 22; address 1000157a0
L1000156c4_22:
    MOVZX EAX, AL
    MOV RCX, qword [rel __DefaultRuneLocale]
    MOV EAX, dword [RCX + RAX * 4 + 60]
    AND EAX, R12D
    JMP L1000156c4_24

; Entry 1000156c4; block 23; address 1000157b3
L1000156c4_23:
    MOVZX EDI, AL
    MOV ESI, 16384
    CALL ___maskrune
    JMP L1000156c4_24     ; inserted

; Entry 1000156c4; block 24; address 1000157c0
L1000156c4_24:
    TEST EAX, EAX
    JNE L1000156c4_26
    JMP L1000156c4_25     ; inserted

; Entry 1000156c4; block 25; address 1000157c4
L1000156c4_25:
    MOV AL, byte [RBX + 1]
    INC RBX
    JMP L1000156c4_18

; Entry 1000156c4; block 26; address 1000157fa
L1000156c4_26:
    MOV AL, byte [RBX]
    JMP L1000156c4_38     ; inserted

; Entry 1000156c4; block 27; address 1000157d2
L1000156c4_27:
    ADD RAX, 2
    MOV RBX, RAX
    JMP L1000156c4_19     ; inserted

; Entry 1000156c4; block 28; address 1000157cc
L1000156c4_28:
    CMP byte [RAX + 2], 0
    JE L1000156c4_19
    JMP L1000156c4_27     ; inserted

; Entry 1000156c4; block 29; address 1000157e7
L1000156c4_29:
    TEST CL, CL
    JE L1000156c4_31
    JMP L1000156c4_30     ; inserted

; Entry 1000156c4; block 30; address 1000157eb
L1000156c4_30:
    CMP CL, 34
    JNE L1000156c4_19
    JMP L1000156c4_31     ; inserted

; Entry 1000156c4; block 31; address 1000157f0
L1000156c4_31:
    ADD RAX, 2
    TEST CL, CL
    CMOVNE RBX, RAX
    JMP L1000156c4_26     ; inserted

; Entry 1000156c4; block 32; address 100015800
L1000156c4_32:
    MOVZX EDI, AL
    TEST AL, AL
    JS L1000156c4_34
    JMP L1000156c4_33     ; inserted

; Entry 1000156c4; block 33; address 100015807
L1000156c4_33:
    MOV RAX, qword [rel __DefaultRuneLocale]
    MOV EAX, dword [RAX + RDI * 4 + 60]
    AND EAX, R12D
    JMP L1000156c4_35

; Entry 1000156c4; block 34; address 100015817
L1000156c4_34:
    MOV ESI, 16384
    CALL ___maskrune
    JMP L1000156c4_35     ; inserted

; Entry 1000156c4; block 35; address 100015821
L1000156c4_35:
    TEST EAX, EAX
    JE L1000156c4_37
    JMP L1000156c4_36     ; inserted

; Entry 1000156c4; block 36; address 100015825
L1000156c4_36:
    MOV AL, byte [RBX + 1]
    INC RBX
    JMP L1000156c4_38

; Entry 1000156c4; block 37; address 10001582d
L1000156c4_37:
    MOV AL, byte [RBX]
    MOV ECX, dword [RBP + -44]
    MOV R14D, ECX
    JMP L1000156c4_39

; Entry 1000156c4; block 38; address 1000157fc
L1000156c4_38:
    TEST AL, AL
    JE L1000156c4_21
    JMP L1000156c4_32     ; inserted

; Entry 1000156c4; block 39; address 100015789
L1000156c4_39:
    LEA ECX, [R14 + 1]
    MOV dword [RBP + -44], ECX
    CMP AL, 34
    JE L1000156c4_19
    JMP L1000156c4_18     ; inserted

; Entry 1000156c4; block 40; address 100015845
L1000156c4_40:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L1000156c4_41     ; inserted

; Entry 1000156c4; block 41; address 10001584e
L1000156c4_41:
    MOV R12, RAX
    TEST RAX, RAX
    JNE L1000156c4_43
    JMP L1000156c4_42     ; inserted

; Entry 1000156c4; block 42; address 100015856
L1000156c4_42:
    LEA RSI, [rel L__TEXT___cstring_37193]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 1000156c4; block 43; address 100015867
L1000156c4_43:
    MOV RDI, R12
    MOV RSI, R13
    CALL _strcpy
    JMP L1000156c4_44     ; inserted

; Entry 1000156c4; block 44; address 100015872
L1000156c4_44:
    MOV R14, qword [RBP + -56]
    MOV EAX, dword [R14]
    ADD EAX, EBX
    ADD EAX, 2
    MOVSXD RDI, EAX
    SHL RDI, 3
    CALL _malloc
    JMP L1000156c4_45     ; inserted

; Entry 1000156c4; block 45; address 10001588a
L1000156c4_45:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L1000156c4_47
    JMP L1000156c4_46     ; inserted

; Entry 1000156c4; block 46; address 100015892
L1000156c4_46:
    MOV RDI, R12
    CALL _free
    JMP L1000156c4_48     ; inserted

; Entry 1000156c4; block 47; address 1000158ab
L1000156c4_47:
    MOV RAX, qword [R15]
    LEA RCX, [RAX + 8]
    MOV qword [R15], RCX
    MOV RAX, qword [RAX]
    MOV R13, RBX
    ADD R13, 8
    MOV qword [RBX], RAX
    JMP L1000156c4_80     ; inserted

; Entry 1000156c4; block 48; address 10001589a
L1000156c4_48:
    LEA RSI, [rel L__TEXT___cstring_37193]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 1000156c4; block 49; address 1000158c9
L1000156c4_49:
    MOV qword [RBP + -64], RBX
    INC R12
    MOV qword [R13], R12
    MOV R14, R12
    JMP L1000156c4_58     ; inserted

; Entry 1000156c4; block 50; address 1000158f7
L1000156c4_50:
    MOV qword [R13], R12
    MOV AL, byte [R12]
    TEST AL, AL
    JE L1000156c4_60
    JMP L1000156c4_59     ; inserted

; Entry 1000156c4; block 51; address 1000158de
L1000156c4_51:
    TEST AL, AL
    JE L1000156c4_54
    JMP L1000156c4_53     ; inserted

; Entry 1000156c4; block 52; address 1000158e8
L1000156c4_52:
    CMP byte [R14 + 1], 0
    JE L1000156c4_56
    JMP L1000156c4_57     ; inserted

; Entry 1000156c4; block 53; address 1000158e2
L1000156c4_53:
    CMP AL, 34
    JNE L1000156c4_56
    JMP L1000156c4_55     ; inserted

; Entry 1000156c4; block 54; address 10001594d
L1000156c4_54:
    MOV RDI, R12
    MOV ESI, 92
    CALL _strchr
    JMP L1000156c4_68     ; inserted

; Entry 1000156c4; block 55; address 1000158e6
L1000156c4_55:
    MOV byte [R14], 0
    INC R14
    JMP L1000156c4_54     ; inserted

; Entry 1000156c4; block 56; address 1000158f2
L1000156c4_56:
    INC R14
    JMP L1000156c4_58

; Entry 1000156c4; block 57; address 1000158ef
L1000156c4_57:
    INC R14
    JMP L1000156c4_56     ; inserted

; Entry 1000156c4; block 58; address 1000158d7
L1000156c4_58:
    MOV AL, byte [R14]
    CMP AL, 92
    JE L1000156c4_52
    JMP L1000156c4_51     ; inserted

; Entry 1000156c4; block 59; address 100015907
L1000156c4_59:
    INC R12
    JMP L1000156c4_66     ; inserted

; Entry 1000156c4; block 60; address 1000159e3
L1000156c4_60:
    ADD R13, 8
    JMP L1000156c4_76     ; inserted

; Entry 1000156c4; block 61; address 10001590e
L1000156c4_61:
    MOVZX EAX, AL
    MOV RCX, qword [rel __DefaultRuneLocale]
    MOV EAX, dword [RCX + RAX * 4 + 60]
    MOV ECX, 16384
    AND EAX, ECX
    JMP L1000156c4_63

; Entry 1000156c4; block 62; address 100015925
L1000156c4_62:
    MOVZX EDI, AL
    MOV ESI, 16384
    CALL ___maskrune
    JMP L1000156c4_63     ; inserted

; Entry 1000156c4; block 63; address 100015932
L1000156c4_63:
    TEST EAX, EAX
    JNE L1000156c4_65
    JMP L1000156c4_64     ; inserted

; Entry 1000156c4; block 64; address 100015936
L1000156c4_64:
    MOV AL, byte [R12]
    INC R12
    TEST AL, AL
    JNE L1000156c4_66
    JMP L1000156c4_67     ; inserted

; Entry 1000156c4; block 65; address 10001599a
L1000156c4_65:
    MOV byte [R12 + -1], 0
    JMP L1000156c4_74     ; inserted

; Entry 1000156c4; block 66; address 10001590a
L1000156c4_66:
    TEST AL, AL
    JS L1000156c4_62
    JMP L1000156c4_61     ; inserted

; Entry 1000156c4; block 67; address 100015941
L1000156c4_67:
    JMP L1000156c4_60

; Entry 1000156c4; block 68; address 10001595a
L1000156c4_68:
    TEST RAX, RAX
    JE L1000156c4_70
    JMP L1000156c4_69     ; inserted

; Entry 1000156c4; block 69; address 10001595f
L1000156c4_69:
    MOV RBX, RAX
    JMP L1000156c4_73     ; inserted

; Entry 1000156c4; block 70; address 10001598d
L1000156c4_70:
    MOV R12, R14
    MOV R14, qword [RBP + -56]
    MOV RBX, qword [RBP + -64]
    JMP L1000156c4_74

; Entry 1000156c4; block 71; address 100015971
L1000156c4_71:
    CMP byte [RBX], 0
    CMOVE R12, RBX
    MOV RDI, R12
    MOV ESI, 92
    CALL _strchr
    JMP L1000156c4_72     ; inserted

; Entry 1000156c4; block 72; address 100015985
L1000156c4_72:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L1000156c4_73
    JMP L1000156c4_70     ; inserted

; Entry 1000156c4; block 73; address 100015962
L1000156c4_73:
    LEA R12, [RBX + 1]
    MOV RDI, RBX
    MOV RSI, R12
    CALL _strcpy
    JMP L1000156c4_71     ; inserted

; Entry 1000156c4; block 74; address 1000159a0
L1000156c4_74:
    MOV AL, byte [R12]
    ADD R13, 8
    JMP L1000156c4_82     ; inserted

; Entry 1000156c4; block 75; address 1000159ac
L1000156c4_75:
    MOVZX EDI, AL
    TEST AL, AL
    JS L1000156c4_78
    JMP L1000156c4_77     ; inserted

; Entry 1000156c4; block 76; address 1000159e7
L1000156c4_76:
    MOV EAX, dword [R14]
    MOV ESI, dword [RBP + -44]
    ADD ESI, EAX
    DEC EAX
    MOV dword [R14], EAX
    JE L1000156c4_84
    JMP L1000156c4_83     ; inserted

; Entry 1000156c4; block 77; address 1000159b3
L1000156c4_77:
    MOV RAX, qword [rel __DefaultRuneLocale]
    MOV EAX, dword [RAX + RDI * 4 + 60]
    MOV ECX, 16384
    AND EAX, ECX
    JMP L1000156c4_79

; Entry 1000156c4; block 78; address 1000159c7
L1000156c4_78:
    MOV ESI, 16384
    CALL ___maskrune
    JMP L1000156c4_79     ; inserted

; Entry 1000156c4; block 79; address 1000159d1
L1000156c4_79:
    TEST EAX, EAX
    JE L1000156c4_80
    JMP L1000156c4_81     ; inserted

; Entry 1000156c4; block 80; address 1000158c2
L1000156c4_80:
    CMP byte [R12], 34
    JNE L1000156c4_50
    JMP L1000156c4_49     ; inserted

; Entry 1000156c4; block 81; address 1000159d9
L1000156c4_81:
    MOV AL, byte [R12 + 1]
    INC R12
    JMP L1000156c4_82

; Entry 1000156c4; block 82; address 1000159a8
L1000156c4_82:
    TEST AL, AL
    JE L1000156c4_76
    JMP L1000156c4_75     ; inserted

; Entry 1000156c4; block 83; address 1000159f6
L1000156c4_83:
    MOV RCX, qword [R15]
    LEA RDX, [RCX + 8]
    MOV qword [R15], RDX
    MOV RCX, qword [RCX]
    MOV qword [R13], RCX
    ADD R13, 8
    DEC EAX
    JNE L1000156c4_83
    JMP L1000156c4_85     ; inserted

; Entry 1000156c4; block 84; address 100015a16
L1000156c4_84:
    MOV qword [R13], 0
    MOV qword [R15], RBX
    MOV dword [R14], ESI
    JMP L1000156c4_12     ; inserted

; Entry 1000156c4; block 85; address 100015a0f
L1000156c4_85:
    MOV dword [R14], 0
    JMP L1000156c4_84     ; inserted



; ---------------------
; Function: 0x100015a33
; ---------------------
; Entry 100015a33; block 0; address 100015a33
L100015a33_0:
    PUSH RBP
    MOV RBP, RSP
    POP RBP
    RET 



; ---------------------
; Function: 0x100015a39
; ---------------------
; Entry 100015a39; block 0; address 100015a39
L100015a39_0:
    PUSH RBP
    MOV RBP, RSP
    TEST ESI, ESI
    JE L100015a39_2
    JMP L100015a39_1     ; inserted

; Entry 100015a39; block 1; address 100015a41
L100015a39_1:
    MOV R8D, ESI
    XOR EDX, EDX
    XOR R9D, R9D
    JMP L100015a39_8     ; inserted

; Entry 100015a39; block 2; address 100015a7c
L100015a39_2:
    XOR EAX, EAX
    JMP L100015a39_6     ; inserted

; Entry 100015a39; block 3; address 100015a56
L100015a39_3:
    XOR EAX, EAX
    CMP CL, 7
    JB L100015a39_6
    JMP L100015a39_5     ; inserted

; Entry 100015a39; block 4; address 100015a6d
L100015a39_4:
    INC RDX
    MOV R9D, ESI
    MOV EAX, ESI
    CMP R8, RDX
    JNE L100015a39_8
    JMP L100015a39_9     ; inserted

; Entry 100015a39; block 5; address 100015a5d
L100015a39_5:
    CMP CL, 27
    JA L100015a39_6
    JMP L100015a39_7     ; inserted

; Entry 100015a39; block 6; address 100015a7e
L100015a39_6:
    POP RBP
    RET 

; Entry 100015a39; block 7; address 100015a62
L100015a39_7:
    ADD CL, 242
    MOV ESI, R9D
    CMP CL, 12
    JB L100015a39_6
    JMP L100015a39_4     ; inserted

; Entry 100015a39; block 8; address 100015a49
L100015a39_8:
    MOV CL, byte [RDI + RDX]
    MOV ESI, 1
    CMP CL, 31
    JA L100015a39_4
    JMP L100015a39_3     ; inserted

; Entry 100015a39; block 9; address 100015a7a
L100015a39_9:
    JMP L100015a39_6



; ---------------------
; Function: 0x100015a80
; ---------------------
; Entry 100015a80; block 0; address 100015a80
L100015a80_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV RBX, RDX
    MOV R14, RDI
    MOV byte [rel L__DATA___data + 3953], 0
    CMP RSI, 18446744073709551614
    JE L100015a80_2
    JMP L100015a80_1     ; inserted

; Entry 100015a80; block 1; address 100015a9d
L100015a80_1:
    TEST RSI, RSI
    JE L100015a80_4
    JMP L100015a80_3     ; inserted

; Entry 100015a80; block 2; address 100015abd
L100015a80_2:
    LEA R15, [rel L__DATA___data + 3952]
    LEA RSI, [rel L__TEXT___cstring_10187]
    MOV EDX, 16
    MOV RDI, R15
    CALL ___strcat_chk
    JMP L100015a80_7     ; inserted

; Entry 100015a80; block 3; address 100015aa2
L100015a80_3:
    LEA RDI, [rel L__DATA___data + 3952]
    CMP RSI, 18446744073709551615
    JNE L100015a80_6
    JMP L100015a80_5     ; inserted

; Entry 100015a80; block 4; address 100015aec
L100015a80_4:
    LEA RDI, [rel L__DATA___data + 3952]
    LEA RSI, [rel L__TEXT___cstring_5757]
    MOV EDX, 16
    CALL ___strcat_chk
    JMP L100015a80_9     ; inserted

; Entry 100015a80; block 5; address 100015aaf
L100015a80_5:
    LEA RSI, [rel L__TEXT___cstring_37224]
    JMP L100015a80_6     ; inserted

; Entry 100015a80; block 6; address 100015ab6
L100015a80_6:
    MOV EDX, 16
    JMP L100015a80_8

; Entry 100015a80; block 7; address 100015ad8
L100015a80_7:
    LEA RSI, [rel L__TEXT___cstring_37224]
    MOV EDX, 16
    MOV RDI, R15
    JMP L100015a80_8     ; inserted

; Entry 100015a80; block 8; address 100015ae7
L100015a80_8:
    CALL ___strcat_chk
    JMP L100015a80_4     ; inserted

; Entry 100015a80; block 9; address 100015b04
L100015a80_9:
    LEA RDI, [rel L__DATA___data + 3952]
    TEST RBX, RBX
    JE L100015a80_11
    JMP L100015a80_10     ; inserted

; Entry 100015a80; block 10; address 100015b10
L100015a80_10:
    MOV EDX, 16
    MOV RSI, RBX
    JMP L100015a80_12

; Entry 100015a80; block 11; address 100015b1a
L100015a80_11:
    LEA RSI, [rel L__TEXT___cstring_4520]
    MOV EDX, 16
    JMP L100015a80_12     ; inserted

; Entry 100015a80; block 12; address 100015b26
L100015a80_12:
    CALL ___strcat_chk
    JMP L100015a80_13     ; inserted

; Entry 100015a80; block 13; address 100015b2b
L100015a80_13:
    MOV EAX, dword [rel L__DATA___bss + 7408]
    LEA ECX, [RAX + 1]
    LEA EDX, [RAX + 4]
    TEST ECX, ECX
    CMOVNS EDX, ECX
    AND EDX, 4294967292
    NEG EDX
    ADD EAX, EDX
    INC EAX
    MOV dword [rel L__DATA___bss + 7408], EAX
    LEA RAX, [RAX + RAX * 2]
    LEA RBX, [rel L__DATA___bss + 7312]
    LEA RDI, [RBX + RAX * 8]
    LEA RSI, [rel L__DATA___data + 3952]
    MOV RDX, R14
    XOR EAX, EAX
    CALL _sprintf
    JMP L100015a80_14     ; inserted

; Entry 100015a80; block 14; address 100015b6b
L100015a80_14:
    MOV EAX, dword [rel L__DATA___bss + 7408]
    LEA RAX, [RAX + RAX * 2]
    LEA RAX, [RBX + RAX * 8]
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x100015b84
; ---------------------
; Entry 100015b84; block 0; address 100015b84
L100015b84_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV RBX, RDX
    MOV R14, RDI
    MOV byte [rel L__DATA___data + 3969], 0
    CMP RSI, 18446744073709551614
    JE L100015b84_2
    JMP L100015b84_1     ; inserted

; Entry 100015b84; block 1; address 100015ba1
L100015b84_1:
    TEST RSI, RSI
    JE L100015b84_4
    JMP L100015b84_3     ; inserted

; Entry 100015b84; block 2; address 100015bc1
L100015b84_2:
    LEA R15, [rel L__DATA___data + 3968]
    LEA RSI, [rel L__TEXT___cstring_10187]
    MOV EDX, 16
    MOV RDI, R15
    CALL ___strcat_chk
    JMP L100015b84_7     ; inserted

; Entry 100015b84; block 3; address 100015ba6
L100015b84_3:
    LEA RDI, [rel L__DATA___data + 3968]
    CMP RSI, 18446744073709551615
    JNE L100015b84_6
    JMP L100015b84_5     ; inserted

; Entry 100015b84; block 4; address 100015bf0
L100015b84_4:
    LEA RDI, [rel L__DATA___data + 3968]
    LEA RSI, [rel L__TEXT___cstring_5757]
    MOV EDX, 16
    CALL ___strcat_chk
    JMP L100015b84_9     ; inserted

; Entry 100015b84; block 5; address 100015bb3
L100015b84_5:
    LEA RSI, [rel L__TEXT___cstring_37224]
    JMP L100015b84_6     ; inserted

; Entry 100015b84; block 6; address 100015bba
L100015b84_6:
    MOV EDX, 16
    JMP L100015b84_8

; Entry 100015b84; block 7; address 100015bdc
L100015b84_7:
    LEA RSI, [rel L__TEXT___cstring_37224]
    MOV EDX, 16
    MOV RDI, R15
    JMP L100015b84_8     ; inserted

; Entry 100015b84; block 8; address 100015beb
L100015b84_8:
    CALL ___strcat_chk
    JMP L100015b84_4     ; inserted

; Entry 100015b84; block 9; address 100015c08
L100015b84_9:
    LEA RDI, [rel L__DATA___data + 3968]
    TEST RBX, RBX
    JE L100015b84_11
    JMP L100015b84_10     ; inserted

; Entry 100015b84; block 10; address 100015c14
L100015b84_10:
    MOV EDX, 16
    MOV RSI, RBX
    JMP L100015b84_12

; Entry 100015b84; block 11; address 100015c1e
L100015b84_11:
    LEA RSI, [rel L__TEXT___cstring_7043]
    MOV EDX, 16
    JMP L100015b84_12     ; inserted

; Entry 100015b84; block 12; address 100015c2a
L100015b84_12:
    CALL ___strcat_chk
    JMP L100015b84_13     ; inserted

; Entry 100015b84; block 13; address 100015c2f
L100015b84_13:
    MOV EAX, dword [rel L__DATA___bss + 7520]
    LEA ECX, [RAX + 1]
    LEA EDX, [RAX + 4]
    TEST ECX, ECX
    CMOVNS EDX, ECX
    AND EDX, 4294967292
    NEG EDX
    ADD EAX, EDX
    INC EAX
    MOV dword [rel L__DATA___bss + 7520], EAX
    LEA RAX, [RAX + RAX * 2]
    LEA RBX, [rel L__DATA___bss + 7424]
    LEA RDI, [RBX + RAX * 8]
    LEA RSI, [rel L__DATA___data + 3968]
    MOV RDX, R14
    XOR EAX, EAX
    CALL _sprintf
    JMP L100015b84_14     ; inserted

; Entry 100015b84; block 14; address 100015c6f
L100015b84_14:
    MOV EAX, dword [rel L__DATA___bss + 7520]
    LEA RAX, [RAX + RAX * 2]
    LEA RAX, [RBX + RAX * 8]
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x100015c88
; ---------------------
; Entry 100015c88; block 0; address 100015c88
L100015c88_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH RBX
    SUB RSP, 120
    MOV RAX, RSI
    MOV RBX, RDI
    MOV RCX, qword [rel ___stack_chk_guard]
    MOV RCX, qword [RCX]
    MOV qword [RBP + -16], RCX
    LEA RSI, [RBP + -128]
    MOV RDI, RAX
    CALL L100015cf7_0
    JMP L100015c88_1     ; inserted

; Entry 100015c88; block 1; address 100015cb1
L100015c88_1:
    LEA RDI, [RBP + -125]
    XOR EAX, EAX
    JMP L100015c88_4     ; inserted

; Entry 100015c88; block 2; address 100015cbe
L100015c88_2:
    INC RAX
    CMP RAX, 3
    JNE L100015c88_4
    JMP L100015c88_5     ; inserted

; Entry 100015c88; block 3; address 100015cc9
L100015c88_3:
    LEA RDI, [RAX + RBP]
    ADD RDI, 18446744073709551488
    JMP L100015c88_6     ; inserted

; Entry 100015c88; block 4; address 100015cb7
L100015c88_4:
    CMP byte [RBP + RAX-1], 32
    JNE L100015c88_3
    JMP L100015c88_2     ; inserted

; Entry 100015c88; block 5; address 100015cc7
L100015c88_5:
    JMP L100015c88_6

; Entry 100015c88; block 6; address 100015cd1
L100015c88_6:
    MOV RSI, RBX
    CALL _fputs
    JMP L100015c88_7     ; inserted

; Entry 100015c88; block 7; address 100015cd9
L100015c88_7:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -16]
    JNE L100015c88_9
    JMP L100015c88_8     ; inserted

; Entry 100015c88; block 8; address 100015ce9
L100015c88_8:
    XOR EAX, EAX
    ADD RSP, 120
    POP RBX
    POP RBP
    RET 

; Entry 100015c88; block 9; address 100015cf2
L100015c88_9:
    CALL ___stack_chk_fail



; ---------------------
; Function: 0x100015cf7
; ---------------------
; Entry 100015cf7; block 0; address 100015cf7
L100015cf7_0:
    PUSH RBP
    MOV RBP, RSP
    MOV byte [RSI], 0
    XOR R8D, R8D
    CMP RDI, 10240
    JB L100015cf7_2
    JMP L100015cf7_1     ; inserted

; Entry 100015cf7; block 1; address 100015d0a
L100015cf7_1:
    XOR R8D, R8D
    MOV RCX, RDI
    JMP L100015cf7_3     ; inserted

; Entry 100015cf7; block 2; address 100015d25
L100015cf7_2:
    MOV RCX, RDI
    JMP L100015cf7_5     ; inserted

; Entry 100015cf7; block 3; address 100015d10
L100015cf7_3:
    SHR RCX, 10
    INC R8D
    CMP RDI, 10485759
    MOV RDI, RCX
    JA L100015cf7_3
    JMP L100015cf7_4     ; inserted

; Entry 100015cf7; block 4; address 100015d23
L100015cf7_4:
    JMP L100015cf7_5

; Entry 100015cf7; block 5; address 100015d28
L100015cf7_5:
    MOV byte [RBP + -1], 32
    MOV word [RBP + -3], 8224
    MOV byte [RBP + -4], 48
    CMP RCX, 999
    JBE L100015cf7_7
    JMP L100015cf7_6     ; inserted

; Entry 100015cf7; block 6; address 100015d3f
L100015cf7_6:
    LEA RAX, [RCX + RCX]
    LEA RDI, [RAX + RAX * 4]
    SHR RDI, 10
    MOV RDX, 14757395258967641293
    MOV RAX, RDI
    MUL RDX
    INC R8D
    SHR EDX, 2
    AND EDX, 4294967294
    LEA EAX, [RDX + RDX * 4]
    SUB EDI, EAX
    OR DIL, 48
    MOV byte [RBP + -4], DIL
    MOV byte [RBP + -3], 46
    SHR RCX, 10
    ADD CL, 48
    MOV byte [RBP + -2], CL
    MOV R9D, 3
    JMP L100015cf7_9

; Entry 100015cf7; block 7; address 100015d87
L100015cf7_7:
    MOV R9D, 1
    TEST RCX, RCX
    JE L100015cf7_9
    JMP L100015cf7_8     ; inserted

; Entry 100015cf7; block 8; address 100015d92
L100015cf7_8:
    XOR EDI, EDI
    MOV R10, 14757395258967641293
    JMP L100015cf7_10     ; inserted

; Entry 100015cf7; block 9; address 100015dd1
L100015cf7_9:
    LEA EAX, [R9 + -1]
    JMP L100015cf7_15     ; inserted

; Entry 100015cf7; block 10; address 100015d9e
L100015cf7_10:
    MOV RAX, RCX
    MUL R10
    SHR RDX, 3
    LEA EAX, [RDX + RDX]
    LEA R11D, [RAX + RAX * 4]
    MOV EAX, ECX
    SUB EAX, R11D
    OR AL, 48
    MOV byte [RBP + RDI-1], AL
    INC RDI
    CMP RCX, 9
    MOV RCX, RDX
    JA L100015cf7_10
    JMP L100015cf7_11     ; inserted

; Entry 100015cf7; block 11; address 100015dc6
L100015cf7_11:
    TEST EDI, EDI
    JE L100015cf7_9
    JMP L100015cf7_12     ; inserted

; Entry 100015cf7; block 12; address 100015dca
L100015cf7_12:
    TEST EDI, EDI
    JLE L100015cf7_14
    JMP L100015cf7_13     ; inserted

; Entry 100015cf7; block 13; address 100015dce
L100015cf7_13:
    MOV R9D, EDI
    JMP L100015cf7_9     ; inserted

; Entry 100015cf7; block 14; address 100015e1e
L100015cf7_14:
    XOR R9D, R9D
    JMP L100015cf7_16

; Entry 100015cf7; block 15; address 100015dd5
L100015cf7_15:
    MOV ECX, EAX
    MOV CL, byte [RBP + RCX-1]
    MOV byte [RSI], CL
    INC RSI
    ADD EAX, 18446744073709551615
    JB L100015cf7_15
    JMP L100015cf7_16     ; inserted

; Entry 100015cf7; block 16; address 100015de5
L100015cf7_16:
    CMP R8D, 4
    JA L100015cf7_18
    JMP L100015cf7_17     ; inserted

; Entry 100015cf7; block 17; address 100015deb
L100015cf7_17:
    MOV AL, 75
    MOV ECX, R8D
    LEA RDX, [rel L__TEXT___text + 77812]
    MOVSXD RCX, dword [RDX + RCX * 4]
    ADD RCX, RDX
    MOV RCX, QWORD PTR [L_JUMP_TABLE_100015dfe + 8*R8D] ; inserted as implementation of the jump-table based jump below. Manually remove instructions above that originally implemented this jump table.
    JMP RCX; TARGETS: 100015e16,100015e0e,100015e00,100015e08

; Entry 100015cf7; block 18; address 100015e04
L100015cf7_18:
    MOV AL, 63
    JMP L100015cf7_21

; Entry 100015cf7; block 19; address 100015e00
L100015cf7_19:
    MOV AL, 77
    JMP L100015cf7_21

; Entry 100015cf7; block 20; address 100015e08
L100015cf7_20:
    MOV AL, 71
    JMP L100015cf7_21

; Entry 100015cf7; block 21; address 100015e0e
L100015cf7_21:
    MOV byte [RSI], AL
    INC RSI
    INC R9D
    JMP L100015cf7_22     ; inserted

; Entry 100015cf7; block 22; address 100015e16
L100015cf7_22:
    MOV byte [RSI], 0
    MOV EAX, R9D
    POP RBP
    RET 



; ---------------------
; Function: 0x100015e38
; ---------------------
; Entry 100015e38; block 0; address 100015e38
L100015e38_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    TEST RDI, RDI
    JE L100015e38_2
    JMP L100015e38_1     ; inserted

; Entry 100015e38; block 1; address 100015e48
L100015e38_1:
    MOV R12, RDI
    MOV BL, byte [RDI]
    LEA EAX, [RBX + -48]
    CMP AL, 10
    JB L100015e38_4
    JMP L100015e38_3     ; inserted

; Entry 100015e38; block 2; address 100015e5d
L100015e38_2:
    LEA RDI, [rel L__TEXT___cstring_37227]
    LEA RSI, [rel L__TEXT___cstring_244]
    JMP L100015e38_9

; Entry 100015e38; block 3; address 100015e54
L100015e38_3:
    LEA RDI, [rel L__TEXT___cstring_37272]
    JMP L100015e38_8

; Entry 100015e38; block 4; address 100015e6d
L100015e38_4:
    MOV RDI, R12
    CALL _strlen
    JMP L100015e38_5     ; inserted

; Entry 100015e38; block 5; address 100015e75
L100015e38_5:
    CMP RAX, 9
    JB L100015e38_7
    JMP L100015e38_6     ; inserted

; Entry 100015e38; block 6; address 100015e7b
L100015e38_6:
    LEA RDI, [rel L__TEXT___cstring_37320]
    JMP L100015e38_8     ; inserted

; Entry 100015e38; block 7; address 100015e9d
L100015e38_7:
    MOV RDI, R12
    CALL _atoi
    JMP L100015e38_11     ; inserted

; Entry 100015e38; block 8; address 100015e82
L100015e38_8:
    MOV RSI, R12
    JMP L100015e38_9     ; inserted

; Entry 100015e38; block 9; address 100015e85
L100015e38_9:
    CALL L1000034f4_0
    JMP L100015e38_10     ; inserted

; Entry 100015e38; block 10; address 100015e8a
L100015e38_10:
    MOV R14, 18446744073709551615
    JMP L100015e38_17     ; inserted

; Entry 100015e38; block 11; address 100015ea5
L100015e38_11:
    MOVSXD R15, EAX
    MOV EAX, 1
    MOV RCX, qword [rel __DefaultRuneLocale]
    JMP L100015e38_15     ; inserted

; Entry 100015e38; block 12; address 100015eb8
L100015e38_12:
    MOVZX EDX, BL
    TEST byte [RCX + RDX * 4 + 61], 4
    JE L100015e38_13
    JMP L100015e38_14     ; inserted

; Entry 100015e38; block 13; address 100015ed2
L100015e38_13:
    MOV EAX, EAX
    MOV R14, 18446744073709551615
    CMP byte [R12 + RAX], 0
    JNE L100015e38_17
    JMP L100015e38_18     ; inserted

; Entry 100015e38; block 14; address 100015ec2
L100015e38_14:
    MOV BL, byte [R12 + RAX]
    INC RAX
    TEST BL, BL
    JNE L100015e38_15
    JMP L100015e38_16     ; inserted

; Entry 100015e38; block 15; address 100015eb4
L100015e38_15:
    TEST BL, BL
    JS L100015e38_13
    JMP L100015e38_12     ; inserted

; Entry 100015e38; block 16; address 100015ecd
L100015e38_16:
    MOV R14, R15
    JMP L100015e38_17

; Entry 100015e38; block 17; address 100015e91
L100015e38_17:
    MOV RAX, R14
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100015e38; block 18; address 100015ee2
L100015e38_18:
    MOVSX EDI, BL
    CALL ___toupper
    JMP L100015e38_19     ; inserted

; Entry 100015e38; block 19; address 100015eea
L100015e38_19:
    SHL EAX, 24
    CMP EAX, 1291845631
    JG L100015e38_21
    JMP L100015e38_20     ; inserted

; Entry 100015e38; block 20; address 100015ef4
L100015e38_20:
    CMP EAX, 1191182336
    JE L100015e38_23
    JMP L100015e38_22     ; inserted

; Entry 100015e38; block 21; address 100015f09
L100015e38_21:
    CMP EAX, 1409286144
    JE L100015e38_27
    JMP L100015e38_26     ; inserted

; Entry 100015e38; block 22; address 100015efb
L100015e38_22:
    MOV ECX, 1024
    CMP EAX, 1258291200
    JE L100015e38_25
    JMP L100015e38_24     ; inserted

; Entry 100015e38; block 23; address 100015f22
L100015e38_23:
    MOV ECX, 1073741824
    JMP L100015e38_25

; Entry 100015e38; block 24; address 100015f07
L100015e38_24:
    JMP L100015e38_17

; Entry 100015e38; block 25; address 100015f33
L100015e38_25:
    IMUL RCX, R15
    MOV R14, RCX
    JMP L100015e38_17

; Entry 100015e38; block 26; address 100015f10
L100015e38_26:
    CMP EAX, 1291845632
    JNE L100015e38_17
    JMP L100015e38_28     ; inserted

; Entry 100015e38; block 27; address 100015f29
L100015e38_27:
    MOV RCX, 1099511627776
    JMP L100015e38_25     ; inserted

; Entry 100015e38; block 28; address 100015f1b
L100015e38_28:
    MOV ECX, 1048576
    JMP L100015e38_25



; ---------------------
; Function: 0x100015f3f
; ---------------------
; Entry 100015f3f; block 0; address 100015f3f
L100015f3f_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 24
    MOV R13, RSI
    MOV BL, byte [RDI]
    XOR EAX, EAX
    TEST BL, BL
    JE L100015f3f_2
    JMP L100015f3f_1     ; inserted

; Entry 100015f3f; block 1; address 100015f5b
L100015f3f_1:
    MOV dword [RBP + -44], ECX
    XOR R12D, R12D
    MOV qword [RBP + -56], RDI
    JMP L100015f3f_12     ; inserted

; Entry 100015f3f; block 2; address 100015fb1
L100015f3f_2:
    XOR R12D, R12D
    JMP L100015f3f_13     ; inserted

; Entry 100015f3f; block 3; address 100015f70
L100015f3f_3:
    TEST EDX, EDX
    JE L100015f3f_6
    JMP L100015f3f_5     ; inserted

; Entry 100015f3f; block 4; address 100015fa7
L100015f3f_4:
    ADD R13, R12
    XOR EAX, EAX
    MOV ECX, dword [RBP + -44]
    JMP L100015f3f_13

; Entry 100015f3f; block 5; address 100015f74
L100015f3f_5:
    CMP BL, R15B
    JE L100015f3f_8
    JMP L100015f3f_7     ; inserted

; Entry 100015f3f; block 6; address 100015f7b
L100015f3f_6:
    MOVSX EDI, BL
    MOV EBX, EDX
    CALL ___toupper
    JMP L100015f3f_9     ; inserted

; Entry 100015f3f; block 7; address 100015f79
L100015f3f_7:
    JMP L100015f3f_11

; Entry 100015f3f; block 8; address 100015f9b
L100015f3f_8:
    MOV BL, byte [RDI + R12 + 1]
    INC R12
    TEST BL, BL
    JNE L100015f3f_12
    JMP L100015f3f_4     ; inserted

; Entry 100015f3f; block 9; address 100015f85
L100015f3f_9:
    MOV R14D, EAX
    MOV EDI, R15D
    CALL ___toupper
    JMP L100015f3f_10     ; inserted

; Entry 100015f3f; block 10; address 100015f90
L100015f3f_10:
    MOV RDI, qword [RBP + -56]
    MOV EDX, EBX
    CMP R14D, EAX
    JNE L100015f3f_11
    JMP L100015f3f_8     ; inserted

; Entry 100015f3f; block 11; address 100015fc5
L100015f3f_11:
    XOR EAX, EAX
    JMP L100015f3f_15     ; inserted

; Entry 100015f3f; block 12; address 100015f65
L100015f3f_12:
    MOVSX R15D, byte [R13 + R12]
    TEST R15D, R15D
    JE L100015f3f_4
    JMP L100015f3f_3     ; inserted

; Entry 100015f3f; block 13; address 100015fb4
L100015f3f_13:
    CMP R12D, ECX
    JL L100015f3f_15
    JMP L100015f3f_14     ; inserted

; Entry 100015f3f; block 14; address 100015fb9
L100015f3f_14:
    XOR EAX, EAX
    CMP byte [R13], 0
    SETE AL
    JMP L100015f3f_15

; Entry 100015f3f; block 15; address 100015fc7
L100015f3f_15:
    ADD RSP, 24
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x100015ff3
; ---------------------
; Entry 100015ff3; block 0; address 100015ff3
L100015ff3_0:
    PUSH RBP
    MOV RBP, RSP
    MOV EAX, EDI
    LEA RCX, [rel L__DATA___common + 672]
    MOV RCX, qword [RCX]
    MOV RDX, qword [rel L__DATA___bss + 7552]
    MOV ESI, EDX
    XOR ESI, EDI
    MOVZX ESI, SIL
    SHR RDX, 8
    XOR RDX, qword [RCX + RSI * 8]
    MOV qword [rel L__DATA___bss + 7552], RDX
    MOV R8D, 255
    AND RDX, R8
    ADD RDX, qword [rel L__DATA___bss + 7568]
    IMUL RDX, RDX, 134775813
    INC RDX
    MOV qword [rel L__DATA___bss + 7568], RDX
    MOV RSI, qword [rel L__DATA___bss + 7584]
    SHR EDX, 24
    MOV EDI, ESI
    XOR EDI, EDX
    AND RDI, R8
    SHR RSI, 8
    XOR RSI, qword [RCX + RDI * 8]
    MOV qword [rel L__DATA___bss + 7584], RSI
    POP RBP
    RET 



; ---------------------
; Function: 0x100016064
; ---------------------
; Entry 100016064; block 0; address 100016064
L100016064_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH RBX
    PUSH RAX
    MOV qword [rel L__DATA___bss + 7552], 305419896
    MOV qword [rel L__DATA___bss + 7568], 591751049
    MOV qword [rel L__DATA___bss + 7584], 878082192
    MOV AL, byte [RDI]
    TEST AL, AL
    JE L100016064_2
    JMP L100016064_1     ; inserted

; Entry 100016064; block 1; address 100016091
L100016064_1:
    MOV RBX, RDI
    INC RBX
    JMP L100016064_4     ; inserted

; Entry 100016064; block 2; address 1000160a8
L100016064_2:
    ADD RSP, 8
    POP RBX
    POP RBP
    RET 

; Entry 100016064; block 3; address 10001609f
L100016064_3:
    MOV AL, byte [RBX]
    INC RBX
    TEST AL, AL
    JNE L100016064_4
    JMP L100016064_2     ; inserted

; Entry 100016064; block 4; address 100016097
L100016064_4:
    MOVSX EDI, AL
    CALL L100015ff3_0
    JMP L100016064_3     ; inserted



; ---------------------
; Function: 0x1000160af
; ---------------------
; Entry 1000160af; block 0; address 1000160af
L1000160af_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 40
    MOV R12, RSI
    MOV RBX, RDI
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -48], RAX
    MOV EAX, dword [rel L__DATA___bss + 7536]
    LEA ECX, [RAX + 1]
    MOV dword [rel L__DATA___bss + 7536], ECX
    TEST EAX, EAX
    JNE L1000160af_2
    JMP L1000160af_1     ; inserted

; Entry 1000160af; block 1; address 1000160e7
L1000160af_1:
    XOR EDI, EDI
    CALL _time
    JMP L1000160af_3     ; inserted

; Entry 1000160af; block 2; address 100016100
L1000160af_2:
    MOV qword [RBP + -72], RBX
    MOV RDI, RBX
    CALL L100016064_0
    JMP L1000160af_5     ; inserted

; Entry 1000160af; block 3; address 1000160ee
L1000160af_3:
    MOV R15, RAX
    CALL _getpid
    JMP L1000160af_4     ; inserted

; Entry 1000160af; block 4; address 1000160f6
L1000160af_4:
    XOR EAX, R15D
    MOV EDI, EAX
    CALL _srand
    JMP L1000160af_2     ; inserted

; Entry 1000160af; block 5; address 10001610c
L1000160af_5:
    XOR EBX, EBX
    MOV R13D, 65533
    JMP L1000160af_8     ; inserted

; Entry 1000160af; block 6; address 100016119
L1000160af_6:
    MOV R15D, EAX
    SHR R15D, 7
    MOVZX EDI, R15B
    MOV R14D, dword [rel L__DATA___bss + 7584]
    AND R14D, R13D
    LEA EAX, [R14 + 2]
    XOR R14D, 3
    IMUL R14D, EAX
    SHR R14D, 8
    CALL L100015ff3_0
    JMP L1000160af_7     ; inserted

; Entry 1000160af; block 7; address 100016143
L1000160af_7:
    XOR R14D, R15D
    MOV byte [RBP + RBX-1], R14B
    INC RBX
    CMP RBX, 10
    JNE L1000160af_8
    JMP L1000160af_9     ; inserted

; Entry 1000160af; block 8; address 100016114
L1000160af_8:
    CALL _rand
    JMP L1000160af_6     ; inserted

; Entry 1000160af; block 9; address 100016154
L1000160af_9:
    MOV RDI, qword [RBP + -72]
    CALL L100016064_0
    JMP L1000160af_10     ; inserted

; Entry 1000160af; block 10; address 10001615d
L1000160af_10:
    XOR R13D, R13D
    MOV R15D, 65533
    JMP L1000160af_12     ; inserted

; Entry 1000160af; block 11; address 100016189
L1000160af_11:
    XOR EBX, R14D
    MOV byte [RBP + R13-1], BL
    INC R13
    CMP R13, 10
    JNE L1000160af_12
    JMP L1000160af_13     ; inserted

; Entry 1000160af; block 12; address 100016166
L1000160af_12:
    MOV EBX, dword [rel L__DATA___bss + 7584]
    AND EBX, R15D
    LEA EAX, [RBX + 2]
    XOR EBX, 3
    IMUL EBX, EAX
    SHR EBX, 8
    MOVZX R14D, byte [RBP + R13-1]
    MOV EDI, R14D
    CALL L100015ff3_0
    JMP L1000160af_11     ; inserted

; Entry 1000160af; block 13; address 10001619a
L1000160af_13:
    MOV R13D, 65533
    MOV EBX, dword [rel L__DATA___bss + 7584]
    AND EBX, R13D
    LEA EAX, [RBX + 2]
    XOR EBX, 3
    IMUL EBX, EAX
    SHR EBX, 8
    MOV R14, R12
    SHR R14, 16
    MOV R15D, 255
    MOV EDI, R14D
    AND EDI, R15D
    CALL L100015ff3_0
    JMP L1000160af_14     ; inserted

; Entry 1000160af; block 14; address 1000161cd
L1000160af_14:
    XOR EBX, R14D
    LEA R14, [RBP + -60]
    MOV byte [R14 + 10], BL
    AND R13D, dword [rel L__DATA___bss + 7584]
    LEA EAX, [R13 + 2]
    XOR R13D, 3
    IMUL R13D, EAX
    SHR R13D, 8
    SHR R12, 24
    AND R15D, R12D
    MOV EDI, R15D
    CALL L100015ff3_0
    JMP L1000160af_15     ; inserted

; Entry 1000160af; block 15; address 1000161fe
L1000160af_15:
    XOR R13D, R12D
    MOV byte [R14 + 11], R13B
    MOV ESI, 1
    MOV EDX, 12
    MOV RDI, R14
    XOR ECX, ECX
    CALL L1000121b7_0
    JMP L1000160af_16     ; inserted

; Entry 1000160af; block 16; address 100016219
L1000160af_16:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -48]
    JNE L1000160af_18
    JMP L1000160af_17     ; inserted

; Entry 1000160af; block 17; address 100016229
L1000160af_17:
    ADD RSP, 40
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000160af; block 18; address 100016238
L1000160af_18:
    CALL ___stack_chk_fail



; ---------------------
; Function: 0x10001623d
; ---------------------
; Entry 10001623d; block 0; address 10001623d
L10001623d_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 24
    MOV qword [RBP + -56], RDX
    MOV qword [RBP + -48], RSI
    MOV R13, RDI
    LEA RAX, [rel L__DATA___common + 312]
    CMP qword [RAX], 0
    JE L10001623d_2
    JMP L10001623d_1     ; inserted

; Entry 10001623d; block 1; address 100016266
L10001623d_1:
    MOV R12, qword [RBP + -56]
    IMUL R12, qword [RBP + -48]
    TEST R12, R12
    JE L10001623d_2
    JMP L10001623d_3     ; inserted

; Entry 10001623d; block 2; address 1000162ae
L10001623d_2:
    MOV RDI, R13
    MOV RSI, qword [RBP + -48]
    MOV RDX, qword [RBP + -56]
    XOR ECX, ECX
    ADD RSP, 24
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 24
    MOV R14D, ECX
    MOV RBX, RDX
    MOV qword [RBP + -56], RDI
    IMUL RBX, RSI
    CMP ECX, 1
    JNE L10001623d_7
    JMP L10001623d_6     ; inserted

; Entry 10001623d; block 3; address 100016274
L10001623d_3:
    XOR EBX, EBX
    MOV R14D, 65533
    JMP L10001623d_5     ; inserted

; Entry 10001623d; block 4; address 1000162a1
L10001623d_4:
    XOR byte [R13 + RBX], R15B
    INC RBX
    CMP R12, RBX
    JNE L10001623d_5
    JMP L10001623d_2     ; inserted

; Entry 10001623d; block 5; address 10001627c
L10001623d_5:
    MOV R15D, dword [rel L__DATA___bss + 7584]
    AND R15D, R14D
    LEA EAX, [R15 + 2]
    XOR R15D, 3
    IMUL R15D, EAX
    SHR R15D, 8
    MOVSX EDI, byte [R13 + RBX]
    CALL L100015ff3_0
    JMP L10001623d_4     ; inserted

; Entry 10001623d; block 6; address 1000121db
L10001623d_6:
    LEA RAX, [rel L__DATA___common + 592]
    MOV qword [RAX], 0
    LEA RAX, [rel L__DATA___common + 392]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 536]
    MOV qword [RCX], RAX
    LEA RAX, [rel L__DATA___common + 480]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 472]
    MOV qword [RCX], RAX
    LEA RAX, [rel L__DATA___common + 552]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 544]
    MOV qword [RCX], RAX
    JMP L10001623d_8

; Entry 10001623d; block 7; address 100012227
L10001623d_7:
    LEA RAX, [rel L__DATA___common + 552]
    MOV RAX, qword [RAX]
    JMP L10001623d_8     ; inserted

; Entry 10001623d; block 8; address 100012231
L10001623d_8:
    LEA RCX, [rel L__DATA___common + 568]
    MOV RCX, qword [RCX]
    MOV RDI, RCX
    SUB RDI, RAX
    TEST RCX, RCX
    CMOVE RDI, RBX
    LEA ECX, [R14 + -1]
    XOR EDX, EDX
    MOV dword [RBP + -44], ECX
    CMP ECX, 3
    CMOVAE RDX, RDI
    CMP RBX, RDI
    CMOVBE RDX, RBX
    CMP R14D, 2
    JNE L10001623d_10
    JMP L10001623d_9     ; inserted

; Entry 10001623d; block 9; address 100012265
L10001623d_9:
    LEA RCX, [rel L__DATA___data + 4560]
    CMP qword [RCX], 18446744073709551615
    JNE L10001623d_12
    JMP L10001623d_11     ; inserted

; Entry 10001623d; block 10; address 10001229d
L10001623d_10:
    TEST RDX, RDX
    JE L10001623d_14
    JMP L10001623d_13     ; inserted

; Entry 10001623d; block 11; address 100012272
L10001623d_11:
    LEA RDI, [rel L__DATA___common + 480]
    MOV RDI, qword [RDI]
    MOV qword [RCX], RDI
    LEA RCX, [rel L__DATA___common + 488]
    MOV qword [RCX], RAX
    JMP L10001623d_12     ; inserted

; Entry 10001623d; block 12; address 100012289
L10001623d_12:
    LEA RCX, [rel L__DATA___common + 496]
    INC qword [RCX]
    LEA RCX, [rel L__DATA___common + 504]
    INC qword [RCX]
    JMP L10001623d_10     ; inserted

; Entry 10001623d; block 13; address 1000122a2
L10001623d_13:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RCX, qword [RAX]
    MOV RDI, qword [RBP + -56]
    CALL _fwrite
    JMP L10001623d_15     ; inserted

; Entry 10001623d; block 14; address 1000122dc
L10001623d_14:
    XOR R13D, R13D
    MOV R12, RBX
    JMP L10001623d_17     ; inserted

; Entry 10001623d; block 15; address 1000122b5
L10001623d_15:
    MOV R13, RAX
    MOV R12, RBX
    SUB R12, RAX
    LEA RCX, [rel L__DATA___common + 552]
    ADD RAX, qword [RCX]
    MOV qword [RCX], RAX
    TEST R14D, R14D
    JNE L10001623d_17
    JMP L10001623d_16     ; inserted

; Entry 10001623d; block 16; address 1000122d0
L10001623d_16:
    LEA RCX, [rel L__DATA___common + 592]
    ADD qword [RCX], R13
    JMP L10001623d_17

; Entry 10001623d; block 17; address 1000122e2
L10001623d_17:
    TEST R12, R12
    JE L10001623d_19
    JMP L10001623d_18     ; inserted

; Entry 10001623d; block 18; address 1000122eb
L10001623d_18:
    LEA RCX, [rel L__DATA___common + 564]
    MOV ECX, dword [RCX]
    TEST ECX, ECX
    JE L10001623d_21
    JMP L10001623d_20     ; inserted

; Entry 10001623d; block 19; address 100012717
L10001623d_19:
    LEA RAX, [rel L__DATA___common + 160]
    CMP dword [RAX], 0
    JE L10001623d_92
    JMP L10001623d_91     ; inserted

; Entry 10001623d; block 20; address 1000122fc
L10001623d_20:
    LEA RDX, [rel L__DATA___common + 584]
    ADD qword [RDX], RAX
    CMP ECX, 1
    MOV qword [RBP + -64], RBX
    JNE L10001623d_23
    JMP L10001623d_22     ; inserted

; Entry 10001623d; block 21; address 1000123b8
L10001623d_21:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    CALL _ferror
    JMP L10001623d_35     ; inserted

; Entry 10001623d; block 22; address 10001230f
L10001623d_22:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    CALL _ferror
    JMP L10001623d_24     ; inserted

; Entry 10001623d; block 23; address 10001233c
L10001623d_23:
    CMP ECX, 2
    JNE L10001623d_28
    JMP L10001623d_27     ; inserted

; Entry 10001623d; block 24; address 10001231e
L10001623d_24:
    TEST EAX, EAX
    JE L10001623d_26
    JMP L10001623d_25     ; inserted

; Entry 10001623d; block 25; address 100012322
L10001623d_25:
    LEA RSI, [rel L__TEXT___cstring_37083]
    MOV EDI, 14
    CALL L100002e30_0

; Entry 10001623d; block 26; address 100012387
L10001623d_26:
    LEA RAX, [rel L__DATA___common + 472]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 480]
    MOV RDI, qword [RCX]
    CMP RAX, RDI
    JNE L10001623d_34
    JMP L10001623d_33     ; inserted

; Entry 10001623d; block 27; address 100012341
L10001623d_27:
    LEA RAX, [rel L__DATA___common + 392]
    MOV RDI, qword [RAX]
    CALL _ferror
    JMP L10001623d_29     ; inserted

; Entry 10001623d; block 28; address 100012382
L10001623d_28:
    CMP ECX, 1
    JNE L10001623d_31
    JMP L10001623d_26     ; inserted

; Entry 10001623d; block 29; address 100012350
L10001623d_29:
    TEST EAX, EAX
    JE L10001623d_31
    JMP L10001623d_30     ; inserted

; Entry 10001623d; block 30; address 100012358
L10001623d_30:
    LEA RAX, [rel L__DATA___common + 552]
    CMP qword [RAX], 65535
    JA L10001623d_31
    JMP L10001623d_32     ; inserted

; Entry 10001623d; block 31; address 1000123e5
L10001623d_31:
    LEA RAX, [rel L__DATA___common + 480]
    MOV RDI, qword [RAX]
    JMP L10001623d_34     ; inserted

; Entry 10001623d; block 32; address 100012368
L10001623d_32:
    LEA RSI, [rel L__TEXT___cstring_37105]
    MOV EDI, 14
    CALL L100002e30_0

; Entry 10001623d; block 33; address 1000123a0
L10001623d_33:
    LEA RCX, [rel L__DATA___common + 384]
    MOV RCX, qword [RCX]
    LEA RDX, [rel L__DATA___common + 528]
    MOV qword [RDX], RCX
    XOR ECX, ECX
    JMP L10001623d_39

; Entry 10001623d; block 34; address 1000123ef
L10001623d_34:
    LEA R14, [rel L__DATA___common + 392]
    MOV RSI, qword [R14]
    LEA RBX, [rel L__DATA___common + 384]
    MOV RDX, qword [RBX]
    CALL L10001374d_0
    JMP L10001623d_37     ; inserted

; Entry 10001623d; block 35; address 1000123c7
L10001623d_35:
    TEST EAX, EAX
    JE L10001623d_19
    JMP L10001623d_36     ; inserted

; Entry 10001623d; block 36; address 1000123cf
L10001623d_36:
    LEA RSI, [rel L__TEXT___cstring_35910]
    MOV EDI, 14
    CALL L100002e30_0

; Entry 10001623d; block 37; address 100012408
L10001623d_37:
    XOR R15D, R15D
    MOV qword [R14], R15
    MOV RDI, qword [RBX]
    CALL _free
    JMP L10001623d_38     ; inserted

; Entry 10001623d; block 38; address 100012416
L10001623d_38:
    MOV qword [RBX], R15
    LEA RAX, [rel L__DATA___common + 480]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 564]
    CMP dword [RCX], 2
    SETE CL
    JMP L10001623d_39     ; inserted

; Entry 10001623d; block 39; address 100012430
L10001623d_39:
    MOV R14, qword [RBP + -56]
    LEA RDX, [rel L__DATA___common + 496]
    XOR ESI, ESI
    MOV qword [RDX], RSI
    LEA RDX, [rel L__DATA___common + 552]
    MOV qword [RDX], RSI
    INC RAX
    LEA RDX, [rel L__DATA___common + 480]
    MOV qword [RDX], RAX
    TEST CL, CL
    JE L10001623d_41
    JMP L10001623d_40     ; inserted

; Entry 10001623d; block 40; address 10001245b
L10001623d_40:
    LEA RAX, [rel L__DATA___common + 576]
    CMP dword [RAX], 0
    JE L10001623d_41
    JMP L10001623d_42     ; inserted

; Entry 10001623d; block 41; address 100012483
L10001623d_41:
    LEA R15, [rel L__DATA___common + 384]
    JMP L10001623d_83     ; inserted

; Entry 10001623d; block 42; address 100012467
L10001623d_42:
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RBX]
    MOV EDI, 7
    CALL _putc
    JMP L10001623d_43     ; inserted

; Entry 10001623d; block 43; address 10001247b
L10001623d_43:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L10001623d_41     ; inserted

; Entry 10001623d; block 44; address 100012496
L10001623d_44:
    LEA RAX, [rel L__DATA___common + 480]
    MOV RDI, qword [RAX]
    CALL L10001318a_0
    JMP L10001623d_45     ; inserted

; Entry 10001623d; block 45; address 1000124a5
L10001623d_45:
    LEA RAX, [rel L__DATA___common + 320]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L10001623d_47
    JMP L10001623d_46     ; inserted

; Entry 10001623d; block 46; address 1000124b4
L10001623d_46:
    MOV RDI, RBX
    CALL _strlen
    JMP L10001623d_48     ; inserted

; Entry 10001623d; block 47; address 100012524
L10001623d_47:
    LEA RAX, [rel L__DATA___common + 6376]
    MOV RBX, qword [RAX]
    MOV RDI, RBX
    CALL _strlen
    JMP L10001623d_58     ; inserted

; Entry 10001623d; block 48; address 1000124bc
L10001623d_48:
    LEA RDI, [RAX + 12]
    CALL _malloc
    JMP L10001623d_49     ; inserted

; Entry 10001623d; block 49; address 1000124c5
L10001623d_49:
    MOV qword [R15], RAX
    TEST RAX, RAX
    JNE L10001623d_51
    JMP L10001623d_50     ; inserted

; Entry 10001623d; block 50; address 1000124cd
L10001623d_50:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_9890]
    CALL L100002e30_0

; Entry 10001623d; block 51; address 1000124eb
L10001623d_51:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L10001623d_52     ; inserted

; Entry 10001623d; block 52; address 1000124f6
L10001623d_52:
    MOV RBX, qword [R15]
    CMP byte [RBX], 0
    JE L10001623d_54
    JMP L10001623d_53     ; inserted

; Entry 10001623d; block 53; address 1000124fe
L10001623d_53:
    MOV RDI, RBX
    CALL _strlen
    JMP L10001623d_55     ; inserted

; Entry 10001623d; block 54; address 100012511
L10001623d_54:
    MOV RDI, RBX
    CALL _strlen
    JMP L10001623d_57     ; inserted

; Entry 10001623d; block 55; address 100012506
L10001623d_55:
    CMP byte [RAX + RBX-1], 47
    JE L10001623d_56
    JMP L10001623d_54     ; inserted

; Entry 10001623d; block 56; address 1000125ac
L10001623d_56:
    MOV RBX, qword [R15]
    MOV RDI, RBX
    CALL _strlen
    JMP L10001623d_68     ; inserted

; Entry 10001623d; block 57; address 100012519
L10001623d_57:
    MOV word [RBX + RAX], 47
    JMP L10001623d_56

; Entry 10001623d; block 58; address 100012536
L10001623d_58:
    LEA RDI, [RAX + 12]
    CALL _malloc
    JMP L10001623d_59     ; inserted

; Entry 10001623d; block 59; address 10001253f
L10001623d_59:
    MOV qword [R15], RAX
    TEST RAX, RAX
    JNE L10001623d_61
    JMP L10001623d_60     ; inserted

; Entry 10001623d; block 60; address 100012547
L10001623d_60:
    MOV EDI, 4
    LEA RSI, [rel L__TEXT___cstring_9890]
    CALL L100002e30_0

; Entry 10001623d; block 61; address 100012565
L10001623d_61:
    MOV RDI, RAX
    MOV RSI, RBX
    CALL _strcpy
    JMP L10001623d_62     ; inserted

; Entry 10001623d; block 62; address 100012570
L10001623d_62:
    MOV R14, qword [R15]
    MOV RDI, R14
    CALL _strlen
    JMP L10001623d_63     ; inserted

; Entry 10001623d; block 63; address 10001257b
L10001623d_63:
    MOV ECX, EAX
    TEST EAX, EAX
    MOV EDX, 0
    CMOVNS RAX, RDX
    JMP L10001623d_66     ; inserted

; Entry 10001623d; block 64; address 10001258c
L10001623d_64:
    LEA RDX, [RCX + -1]
    CMP byte [R14 + RCX-1], 47
    MOV RCX, RDX
    JNE L10001623d_66
    JMP L10001623d_67     ; inserted

; Entry 10001623d; block 65; address 1000125a1
L10001623d_65:
    CDQE 
    MOV byte [R14 + RAX], 0
    MOV R14, qword [RBP + -56]
    JMP L10001623d_56     ; inserted

; Entry 10001623d; block 66; address 100012588
L10001623d_66:
    TEST ECX, ECX
    JLE L10001623d_65
    JMP L10001623d_64     ; inserted

; Entry 10001623d; block 67; address 10001259b
L10001623d_67:
    INC RDX
    MOV RAX, RDX
    JMP L10001623d_65     ; inserted

; Entry 10001623d; block 68; address 1000125b7
L10001623d_68:
    MOV RCX, 6365935209750751610
    MOV qword [RBX + RAX], RCX
    MOV byte [RBX + RAX + 8], 0
    MOV RDI, qword [R15]
    CALL _mkstemp
    JMP L10001623d_69     ; inserted

; Entry 10001623d; block 69; address 1000125d2
L10001623d_69:
    MOV EBX, EAX
    CMP EAX, 18446744073709551615
    JNE L10001623d_71
    JMP L10001623d_70     ; inserted

; Entry 10001623d; block 70; address 1000125d9
L10001623d_70:
    MOV RSI, qword [R15]
    MOV EDI, 10
    CALL L100002e30_0

; Entry 10001623d; block 71; address 1000125e6
L10001623d_71:
    MOV EDI, EBX
    LEA RSI, [rel L__TEXT___cstring_8627]
    CALL _fdopen
    JMP L10001623d_72     ; inserted

; Entry 10001623d; block 72; address 1000125f4
L10001623d_72:
    LEA RCX, [rel L__DATA___common + 392]
    MOV qword [RCX], RAX
    TEST RAX, RAX
    JNE L10001623d_74
    JMP L10001623d_73     ; inserted

; Entry 10001623d; block 73; address 100012603
L10001623d_73:
    MOV RSI, qword [R15]
    MOV EDI, 10
    CALL L100002e30_0

; Entry 10001623d; block 74; address 10001261a
L10001623d_74:
    LEA RDI, [R14 + R13]
    MOV ESI, 1
    MOV RDX, R12
    MOV RCX, RAX
    CALL _fwrite
    JMP L10001623d_75     ; inserted

; Entry 10001623d; block 75; address 10001262e
L10001623d_75:
    LEA RCX, [rel L__DATA___common + 552]
    ADD qword [RCX], RAX
    CMP dword [RBP + -44], 3
    JB L10001623d_77
    JMP L10001623d_76     ; inserted

; Entry 10001623d; block 76; address 10001263e
L10001623d_76:
    LEA RCX, [rel L__DATA___common + 592]
    ADD qword [RCX], RAX
    JMP L10001623d_77     ; inserted

; Entry 10001623d; block 77; address 100012648
L10001623d_77:
    ADD R13, RAX
    CMP R12, RAX
    JBE L10001623d_79
    JMP L10001623d_78     ; inserted

; Entry 10001623d; block 78; address 100012650
L10001623d_78:
    LEA RAX, [rel L__DATA___common + 564]
    CMP dword [RAX], 2
    JNE L10001623d_81
    JMP L10001623d_80     ; inserted

; Entry 10001623d; block 79; address 100012685
L10001623d_79:
    CMP dword [RBP + -44], 2
    JA L10001623d_85
    JMP L10001623d_84     ; inserted

; Entry 10001623d; block 80; address 10001265c
L10001623d_80:
    LEA RDI, [rel L__TEXT___cstring_37137]
    LEA RSI, [rel L__TEXT___cstring_244]
    CALL L1000034f4_0
    JMP L10001623d_82     ; inserted

; Entry 10001623d; block 81; address 100012674
L10001623d_81:
    LEA RSI, [rel L__TEXT___cstring_37137]
    MOV EDI, 14
    CALL L100002e30_0

; Entry 10001623d; block 82; address 10001266f
L10001623d_82:
    JMP L10001623d_83

; Entry 10001623d; block 83; address 10001248a
L10001623d_83:
    LEA RAX, [rel L__DATA___common + 564]
    CMP dword [RAX], 2
    JNE L10001623d_45
    JMP L10001623d_44     ; inserted

; Entry 10001623d; block 84; address 10001268f
L10001623d_84:
    LEA RAX, [rel L__DATA___common + 564]
    CMP dword [RAX], 1
    LEA RBX, [rel L__DATA___common + 536]
    JNE L10001623d_87
    JMP L10001623d_86     ; inserted

; Entry 10001623d; block 85; address 100012713
L10001623d_85:
    MOV RBX, qword [RBP + -64]
    JMP L10001623d_19     ; inserted

; Entry 10001623d; block 86; address 1000126a2
L10001623d_86:
    MOV RSI, qword [RBX]
    TEST RSI, RSI
    JE L10001623d_87
    JMP L10001623d_88     ; inserted

; Entry 10001623d; block 87; address 1000126d7
L10001623d_87:
    MOV RAX, qword [R15]
    LEA RCX, [rel L__DATA___common + 528]
    MOV qword [RCX], RAX
    LEA RAX, [rel L__DATA___common + 392]
    MOV RAX, qword [RAX]
    MOV qword [RBX], RAX
    LEA RAX, [rel L__DATA___common + 544]
    MOV qword [RAX], 0
    LEA RAX, [rel L__DATA___common + 480]
    MOV RAX, qword [RAX]
    LEA RCX, [rel L__DATA___common + 472]
    MOV qword [RCX], RAX
    JMP L10001623d_85     ; inserted

; Entry 10001623d; block 88; address 1000126aa
L10001623d_88:
    LEA RAX, [rel L__DATA___common + 472]
    MOV RDI, qword [RAX]
    LEA RAX, [rel L__DATA___common + 480]
    CMP RDI, qword [RAX]
    JE L10001623d_87
    JMP L10001623d_89     ; inserted

; Entry 10001623d; block 89; address 1000126c0
L10001623d_89:
    LEA R14, [rel L__DATA___common + 528]
    MOV RDX, qword [R14]
    CALL L10001374d_0
    JMP L10001623d_90     ; inserted

; Entry 10001623d; block 90; address 1000126cf
L10001623d_90:
    MOV RDI, qword [R14]
    CALL _free
    JMP L10001623d_87     ; inserted

; Entry 10001623d; block 91; address 100012727
L10001623d_91:
    LEA R12, [rel L__DATA___common + 136]
    MOV RCX, qword [R12]
    LEA R14, [rel L__DATA___common + 144]
    MOV RAX, qword [R14]
    TEST RCX, RCX
    JLE L10001623d_94
    JMP L10001623d_93     ; inserted

; Entry 10001623d; block 92; address 1000127cf
L10001623d_92:
    MOV RAX, R13
    ADD RSP, 24
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10001623d; block 93; address 100012741
L10001623d_93:
    CMP RAX, 18446744073709551615
    JNE L10001623d_96
    JMP L10001623d_95     ; inserted

; Entry 10001623d; block 94; address 100012795
L10001623d_94:
    TEST RCX, RCX
    JE L10001623d_92
    JMP L10001623d_101     ; inserted

; Entry 10001623d; block 95; address 100012747
L10001623d_95:
    LEA R15, [rel L__DATA___common + 6336]
    MOV RSI, qword [R15]
    MOV EDI, 32
    CALL _putc
    JMP L10001623d_97     ; inserted

; Entry 10001623d; block 96; address 10001276f
L10001623d_96:
    CMP RBX, 1000
    JBE L10001623d_100
    JMP L10001623d_99     ; inserted

; Entry 10001623d; block 97; address 10001275b
L10001623d_97:
    MOV RDI, qword [R15]
    CALL _fflush
    JMP L10001623d_98     ; inserted

; Entry 10001623d; block 98; address 100012763
L10001623d_98:
    MOV qword [R14], 1
    MOV EAX, 1
    JMP L10001623d_96     ; inserted

; Entry 10001623d; block 99; address 100012778
L10001623d_99:
    INC RAX
    MOV RCX, qword [R12]
    IMUL RBX, RAX
    XOR EDX, EDX
    CMP RCX, RBX
    CMOVLE RAX, RDX
    MOV qword [R14], RAX
    JMP L10001623d_94

; Entry 10001623d; block 100; address 100012791
L10001623d_100:
    MOV RCX, qword [R12]
    JMP L10001623d_94     ; inserted

; Entry 10001623d; block 101; address 10001279a
L10001623d_101:
    TEST RAX, RAX
    JNE L10001623d_92
    JMP L10001623d_102     ; inserted

; Entry 10001623d; block 102; address 10001279f
L10001623d_102:
    MOV qword [R14], 1
    LEA RBX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RBX]
    MOV EDI, 46
    CALL _putc
    JMP L10001623d_103     ; inserted

; Entry 10001623d; block 103; address 1000127ba
L10001623d_103:
    MOV RDI, qword [RBX]
    CALL _fflush
    JMP L10001623d_104     ; inserted

; Entry 10001623d; block 104; address 1000127c2
L10001623d_104:
    LEA RAX, [rel L__DATA___common + 604]
    MOV dword [RAX], 1
    JMP L10001623d_92     ; inserted



; ---------------------
; Function: 0x1000162ce
; ---------------------
; Entry 1000162ce; block 0; address 1000162ce
L1000162ce_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R14
    PUSH RBX
    SUB RSP, 80
    MOV EBX, EDI
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -24], RAX
    MOV dword [rel L__DATA___data + 4576], EDI
    LEA R14, [RBP + -96]
    MOV RSI, R14
    CALL _tcgetattr
    JMP L1000162ce_1     ; inserted

; Entry 1000162ce; block 1; address 1000162fb
L1000162ce_1:
    AND byte [R14 + 24], 247
    MOV EDI, EBX
    MOV ESI, 2
    MOV RDX, R14
    CALL _tcsetattr
    JMP L1000162ce_2     ; inserted

; Entry 1000162ce; block 2; address 10001630f
L1000162ce_2:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -24]
    JNE L1000162ce_4
    JMP L1000162ce_3     ; inserted

; Entry 1000162ce; block 3; address 10001631f
L1000162ce_3:
    ADD RSP, 80
    POP RBX
    POP R14
    POP RBP
    RET 

; Entry 1000162ce; block 4; address 100016328
L1000162ce_4:
    CALL ___stack_chk_fail



; ---------------------
; Function: 0x10001632d
; ---------------------
; Entry 10001632d; block 0; address 10001632d
L10001632d_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH RBX
    SUB RSP, 88
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -16], RAX
    MOV EDI, dword [rel L__DATA___data + 4576]
    CMP EDI, 18446744073709551615
    JE L10001632d_2
    JMP L10001632d_1     ; inserted

; Entry 10001632d; block 1; address 10001634f
L10001632d_1:
    LEA RBX, [RBP + -88]
    MOV RSI, RBX
    CALL _tcgetattr
    JMP L10001632d_3     ; inserted

; Entry 10001632d; block 2; address 10001637c
L10001632d_2:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -16]
    JNE L10001632d_6
    JMP L10001632d_5     ; inserted

; Entry 10001632d; block 3; address 10001635b
L10001632d_3:
    OR byte [RBX + 24], 8
    MOV EDI, dword [rel L__DATA___data + 4576]
    MOV ESI, 2
    MOV RDX, RBX
    CALL _tcsetattr
    JMP L10001632d_4     ; inserted

; Entry 10001632d; block 4; address 100016372
L10001632d_4:
    MOV dword [rel L__DATA___data + 4576], 4294967295
    JMP L10001632d_2     ; inserted

; Entry 10001632d; block 5; address 10001638c
L10001632d_5:
    ADD RSP, 88
    POP RBX
    POP RBP
    RET 

; Entry 10001632d; block 6; address 100016393
L10001632d_6:
    CALL ___stack_chk_fail



; ---------------------
; Function: 0x100016398
; ---------------------
; Entry 100016398; block 0; address 100016398
L100016398_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 24
    MOV R12D, EDX
    MOV R14, RSI
    MOV qword [RBP + -56], RDI
    LEA RDI, [rel L__TEXT___cstring_38002]
    XOR ESI, ESI
    XOR EAX, EAX
    CALL _open
    JMP L100016398_1     ; inserted

; Entry 100016398; block 1; address 1000163c3
L100016398_1:
    CMP EAX, 18446744073709551615
    JE L100016398_3
    JMP L100016398_2     ; inserted

; Entry 100016398; block 2; address 1000163cc
L100016398_2:
    MOV EBX, EAX
    LEA RDI, [rel L__TEXT___cstring_244]
    MOV R15, qword [rel ___stderrp]
    LEA R13, [RBP + -41]
    JMP L100016398_16     ; inserted

; Entry 100016398; block 3; address 10001647f
L100016398_3:
    XOR R14D, R14D
    JMP L100016398_19     ; inserted

; Entry 100016398; block 4; address 1000163e8
L100016398_4:
    MOV RSI, qword [R15]
    MOV RDI, qword [RBP + -56]
    CALL _fputs
    JMP L100016398_5     ; inserted

; Entry 100016398; block 5; address 1000163f4
L100016398_5:
    MOV RDI, qword [R15]
    CALL _fflush
    JMP L100016398_6     ; inserted

; Entry 100016398; block 6; address 1000163fc
L100016398_6:
    MOV EDI, EBX
    CALL L1000162ce_0
    JMP L100016398_7     ; inserted

; Entry 100016398; block 7; address 100016403
L100016398_7:
    XOR R15D, R15D
    JMP L100016398_11     ; inserted

; Entry 100016398; block 8; address 100016415
L100016398_8:
    MOV AL, byte [RBP + -41]
    CMP R15D, R12D
    JGE L100016398_10
    JMP L100016398_9     ; inserted

; Entry 100016398; block 9; address 10001641d
L100016398_9:
    MOVSXD RCX, R15D
    INC R15D
    MOV byte [R14 + RCX], AL
    JMP L100016398_10     ; inserted

; Entry 100016398; block 10; address 100016427
L100016398_10:
    CMP AL, 10
    JNE L100016398_11
    JMP L100016398_12     ; inserted

; Entry 100016398; block 11; address 100016406
L100016398_11:
    MOV EDX, 1
    MOV EDI, EBX
    MOV RSI, R13
    CALL _read
    JMP L100016398_8     ; inserted

; Entry 100016398; block 12; address 10001642b
L100016398_12:
    CALL L10001632d_0
    JMP L100016398_13     ; inserted

; Entry 100016398; block 13; address 100016430
L100016398_13:
    MOV RAX, qword [rel ___stderrp]
    MOV RSI, qword [RAX]
    MOV EDI, 10
    CALL _putc
    JMP L100016398_14     ; inserted

; Entry 100016398; block 14; address 100016444
L100016398_14:
    MOV RAX, qword [rel ___stderrp]
    MOV RDI, qword [RAX]
    CALL _fflush
    JMP L100016398_15     ; inserted

; Entry 100016398; block 15; address 100016453
L100016398_15:
    MOVSXD RAX, R15D
    MOV R15, qword [rel ___stderrp]
    CMP byte [RAX + R14-1], 10
    LEA RDI, [rel L__TEXT___cstring_38011]
    JNE L100016398_16
    JMP L100016398_17     ; inserted

; Entry 100016398; block 16; address 1000163e0
L100016398_16:
    MOV RSI, qword [R15]
    CALL _fputs
    JMP L100016398_4     ; inserted

; Entry 100016398; block 17; address 100016470
L100016398_17:
    MOV byte [R14 + RAX-1], 0
    MOV EDI, EBX
    CALL _close
    JMP L100016398_18     ; inserted

; Entry 100016398; block 18; address 10001647d
L100016398_18:
    JMP L100016398_19

; Entry 100016398; block 19; address 100016482
L100016398_19:
    MOV RAX, R14
    ADD RSP, 24
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x100016494
; ---------------------
; Entry 100016494; block 0; address 100016494
L100016494_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 168
    MOV R13D, ESI
    MOV R12, RDI
    LEA RSI, [rel L__TEXT___cstring_7743]
    CALL _strcmp
    JMP L100016494_1     ; inserted

; Entry 100016494; block 1; address 1000164ba
L100016494_1:
    TEST EAX, EAX
    JE L100016494_3
    JMP L100016494_2     ; inserted

; Entry 100016494; block 2; address 1000164be
L100016494_2:
    LEA RAX, [rel L__DATA___common + 276]
    CMP dword [RAX], 0
    JE L100016494_5
    JMP L100016494_4     ; inserted

; Entry 100016494; block 3; address 1000164db
L100016494_3:
    MOV RDI, R12
    XOR ESI, ESI
    MOV EDX, R13D
    CALL L100010ed3_0
    JMP L100016494_7     ; inserted

; Entry 100016494; block 4; address 1000164ca
L100016494_4:
    LEA RSI, [RBP + -200]
    MOV RDI, R12
    CALL _lstat$INODE64
    JMP L100016494_6     ; inserted

; Entry 100016494; block 5; address 1000164f0
L100016494_5:
    LEA RSI, [RBP + -200]
    MOV RDI, R12
    CALL _stat$INODE64
    JMP L100016494_8     ; inserted

; Entry 100016494; block 6; address 1000164d9
L100016494_6:
    JMP L100016494_8

; Entry 100016494; block 7; address 1000164e8
L100016494_7:
    MOV R14D, EAX
    JMP L100016494_28

; Entry 100016494; block 8; address 1000164ff
L100016494_8:
    TEST EAX, EAX
    JE L100016494_10
    JMP L100016494_9     ; inserted

; Entry 100016494; block 9; address 100016507
L100016494_9:
    MOV RDI, R12
    XOR ESI, ESI
    XOR EDX, EDX
    CALL L10001683e_0
    JMP L100016494_11     ; inserted

; Entry 100016494; block 10; address 1000165c9
L100016494_10:
    MOVZX EAX, word [RBP + -196]
    TEST AX, AX
    JS L100016494_30
    JMP L100016494_29     ; inserted

; Entry 100016494; block 11; address 100016513
L100016494_11:
    MOV R15, RAX
    LEA RAX, [rel L__DATA___common + 616]
    MOV RBX, qword [RAX]
    MOV R12D, 1
    TEST RBX, RBX
    JE L100016494_13
    JMP L100016494_12     ; inserted

; Entry 100016494; block 12; address 10001652f
L100016494_12:
    LEA R14, [rel L__DATA___common + 60]
    JMP L100016494_26     ; inserted

; Entry 100016494; block 13; address 1000165b6
L100016494_13:
    MOV RDI, R15
    CALL _free
    JMP L100016494_27     ; inserted

; Entry 100016494; block 14; address 100016545
L100016494_14:
    TEST EAX, EAX
    JE L100016494_16
    JMP L100016494_15     ; inserted

; Entry 100016494; block 15; address 100016549
L100016494_15:
    LEA RAX, [rel L__DATA___common + 656]
    CMP dword [RAX], 0
    JE L100016494_18
    JMP L100016494_17     ; inserted

; Entry 100016494; block 16; address 1000165aa
L100016494_16:
    MOV RBX, qword [RBX + 152]
    TEST RBX, RBX
    JNE L100016494_26
    JMP L100016494_13     ; inserted

; Entry 100016494; block 17; address 100016555
L100016494_17:
    MOV RDI, qword [RBX + 120]
    MOV ESI, R13D
    CALL L100010a07_0
    JMP L100016494_19     ; inserted

; Entry 100016494; block 18; address 100016563
L100016494_18:
    MOV EAX, 1
    JMP L100016494_20     ; inserted

; Entry 100016494; block 19; address 100016561
L100016494_19:
    JMP L100016494_20

; Entry 100016494; block 20; address 100016568
L100016494_20:
    MOV dword [RBX + 136], EAX
    CMP dword [R14], 0
    JE L100016494_22
    JMP L100016494_21     ; inserted

; Entry 100016494; block 21; address 100016574
L100016494_21:
    LEA RDX, [rel L__TEXT___cstring_36041]
    TEST EAX, EAX
    JE L100016494_24
    JMP L100016494_23     ; inserted

; Entry 100016494; block 22; address 1000165a7
L100016494_22:
    XOR R12D, R12D
    JMP L100016494_16     ; inserted

; Entry 100016494; block 23; address 10001657f
L100016494_23:
    LEA RDX, [rel L__TEXT___cstring_36038]
    JMP L100016494_24     ; inserted

; Entry 100016494; block 24; address 100016586
L100016494_24:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    MOV RCX, qword [RBX + 80]
    XOR R12D, R12D
    LEA RSI, [rel L__TEXT___cstring_36008]
    XOR EAX, EAX
    CALL _fprintf
    JMP L100016494_25     ; inserted

; Entry 100016494; block 25; address 1000165a5
L100016494_25:
    JMP L100016494_16

; Entry 100016494; block 26; address 100016536
L100016494_26:
    MOV RSI, qword [RBX + 112]
    MOV RDI, R15
    MOV EDX, R13D
    CALL L100014d38_0
    JMP L100016494_14     ; inserted

; Entry 100016494; block 27; address 1000165be
L100016494_27:
    NEG R12D
    SBB R14D, R14D
    JMP L100016494_28

; Entry 100016494; block 28; address 100016816
L100016494_28:
    MOV EAX, R14D
    ADD RSP, 168
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100016494; block 29; address 1000165d9
L100016494_29:
    MOV ECX, EAX
    AND ECX, 40960
    CMP ECX, 40960
    JE L100016494_30
    JMP L100016494_31     ; inserted

; Entry 100016494; block 30; address 1000166c1
L100016494_30:
    MOV RDI, R12
    XOR ESI, ESI
    MOV EDX, R13D
    CALL L100010ed3_0
    JMP L100016494_54     ; inserted

; Entry 100016494; block 31; address 1000165ed
L100016494_31:
    BT EAX, 14
    JB L100016494_33
    JMP L100016494_32     ; inserted

; Entry 100016494; block 32; address 1000165f3
L100016494_32:
    BT EAX, 12
    JB L100016494_35
    JMP L100016494_34     ; inserted

; Entry 100016494; block 33; address 100016609
L100016494_33:
    MOV RDI, R12
    CALL _strlen
    JMP L100016494_36     ; inserted

; Entry 100016494; block 34; address 1000165fd
L100016494_34:
    LEA RDI, [rel L__TEXT___cstring_38117]
    JMP L100016494_86

; Entry 100016494; block 35; address 100016696
L100016494_35:
    LEA RAX, [rel L__DATA___common + 296]
    CMP dword [RAX], 0
    JE L100016494_52
    JMP L100016494_51     ; inserted

; Entry 100016494; block 36; address 100016611
L100016494_36:
    LEA RDI, [RAX + 2]
    CALL _malloc
    JMP L100016494_37     ; inserted

; Entry 100016494; block 37; address 10001661a
L100016494_37:
    MOV R14D, 4
    TEST RAX, RAX
    JE L100016494_28
    JMP L100016494_38     ; inserted

; Entry 100016494; block 38; address 100016629
L100016494_38:
    MOV RBX, RAX
    LEA RSI, [rel L__TEXT___cstring_10187]
    MOV RDI, R12
    CALL _strcmp
    JMP L100016494_39     ; inserted

; Entry 100016494; block 39; address 10001663b
L100016494_39:
    TEST EAX, EAX
    JE L100016494_41
    JMP L100016494_40     ; inserted

; Entry 100016494; block 40; address 100016643
L100016494_40:
    MOV RDI, RBX
    MOV RSI, R12
    CALL _strcpy
    JMP L100016494_42     ; inserted

; Entry 100016494; block 41; address 1000166de
L100016494_41:
    MOV byte [RBX], 0
    JMP L100016494_47     ; inserted

; Entry 100016494; block 42; address 10001664e
L100016494_42:
    MOV RDI, RBX
    CALL _strlen
    JMP L100016494_43     ; inserted

; Entry 100016494; block 43; address 100016656
L100016494_43:
    CMP byte [RBX + RAX-1], 47
    JE L100016494_45
    JMP L100016494_44     ; inserted

; Entry 100016494; block 44; address 10001665d
L100016494_44:
    MOV word [RBX + RAX], 47
    JMP L100016494_45     ; inserted

; Entry 100016494; block 45; address 100016663
L100016494_45:
    LEA RAX, [rel L__DATA___data + 4500]
    CMP dword [RAX], 0
    JE L100016494_47
    JMP L100016494_46     ; inserted

; Entry 100016494; block 46; address 10001666f
L100016494_46:
    MOV RDI, RBX
    MOV ESI, 1
    MOV EDX, R13D
    CALL L100010ed3_0
    JMP L100016494_48     ; inserted

; Entry 100016494; block 47; address 1000166e1
L100016494_47:
    MOV qword [RBP + -56], RBX
    LEA RAX, [rel L__DATA___common + 48]
    CMP dword [RAX], 0
    JE L100016494_57
    JMP L100016494_56     ; inserted

; Entry 100016494; block 48; address 10001667f
L100016494_48:
    TEST EAX, EAX
    JE L100016494_47
    JMP L100016494_49     ; inserted

; Entry 100016494; block 49; address 100016683
L100016494_49:
    MOV R15D, EAX
    MOV RDI, RBX
    CALL _free
    JMP L100016494_50     ; inserted

; Entry 100016494; block 50; address 10001668e
L100016494_50:
    MOV R14D, R15D
    JMP L100016494_28

; Entry 100016494; block 51; address 1000166a6
L100016494_51:
    LEA RAX, [rel L__DATA___data + 4508]
    CMP dword [RAX], 0
    JE L100016494_30
    JMP L100016494_53     ; inserted

; Entry 100016494; block 52; address 100016804
L100016494_52:
    LEA RDI, [rel L__TEXT___cstring_38070]
    JMP L100016494_86     ; inserted

; Entry 100016494; block 53; address 1000166b2
L100016494_53:
    LEA RDI, [rel L__TEXT___cstring_38042]
    MOV RSI, R12
    CALL L1000034f4_0
    JMP L100016494_30     ; inserted

; Entry 100016494; block 54; address 1000166ce
L100016494_54:
    MOV R14D, EAX
    TEST EAX, EAX
    JNE L100016494_28
    JMP L100016494_55     ; inserted

; Entry 100016494; block 55; address 1000166d9
L100016494_55:
    JMP L100016494_85

; Entry 100016494; block 56; address 1000166f5
L100016494_56:
    MOV RDI, R12
    CALL _opendir$INODE64
    JMP L100016494_58     ; inserted

; Entry 100016494; block 57; address 1000167f9
L100016494_57:
    MOV RDI, qword [RBP + -56]
    CALL _free
    JMP L100016494_84     ; inserted

; Entry 100016494; block 58; address 1000166fd
L100016494_58:
    TEST RAX, RAX
    JE L100016494_57
    JMP L100016494_59     ; inserted

; Entry 100016494; block 59; address 100016706
L100016494_59:
    MOV R15, RAX
    MOV RDI, RAX
    CALL _readdir$INODE64
    JMP L100016494_60     ; inserted

; Entry 100016494; block 60; address 100016711
L100016494_60:
    TEST RAX, RAX
    JE L100016494_62
    JMP L100016494_61     ; inserted

; Entry 100016494; block 61; address 10001671a
L100016494_61:
    MOV RBX, RAX
    LEA R12, [rel L__TEXT___cstring_10187]
    MOV qword [RBP + -48], R15
    JMP L100016494_83     ; inserted

; Entry 100016494; block 62; address 1000167f1
L100016494_62:
    MOV RDI, R15
    CALL _closedir
    JMP L100016494_57     ; inserted

; Entry 100016494; block 63; address 100016737
L100016494_63:
    TEST EAX, EAX
    JE L100016494_65
    JMP L100016494_64     ; inserted

; Entry 100016494; block 64; address 10001673f
L100016494_64:
    MOV RDI, RBX
    LEA RSI, [rel L__TEXT___cstring_38039]
    CALL _strcmp
    JMP L100016494_66     ; inserted

; Entry 100016494; block 65; address 1000167dd
L100016494_65:
    MOV RDI, R15
    CALL _readdir$INODE64
    JMP L100016494_82     ; inserted

; Entry 100016494; block 66; address 10001674e
L100016494_66:
    TEST EAX, EAX
    JE L100016494_65
    JMP L100016494_67     ; inserted

; Entry 100016494; block 67; address 100016756
L100016494_67:
    MOV R15, qword [RBP + -56]
    MOV RDI, R15
    CALL _strlen
    JMP L100016494_68     ; inserted

; Entry 100016494; block 68; address 100016762
L100016494_68:
    MOV R12, RAX
    MOV RDI, RBX
    CALL _strlen
    JMP L100016494_69     ; inserted

; Entry 100016494; block 69; address 10001676d
L100016494_69:
    LEA RDI, [R12 + RAX]
    INC RDI
    CALL _malloc
    JMP L100016494_70     ; inserted

; Entry 100016494; block 70; address 100016779
L100016494_70:
    TEST RAX, RAX
    JE L100016494_72
    JMP L100016494_71     ; inserted

; Entry 100016494; block 71; address 100016782
L100016494_71:
    MOV R12, RAX
    MOV RDI, RAX
    MOV RSI, R15
    CALL _strcpy
    JMP L100016494_73     ; inserted

; Entry 100016494; block 72; address 10001682b
L100016494_72:
    MOV RDI, qword [RBP + -48]
    CALL _closedir
    JMP L100016494_87     ; inserted

; Entry 100016494; block 73; address 100016790
L100016494_73:
    MOV RDI, R12
    MOV RSI, RBX
    CALL _strcat
    JMP L100016494_74     ; inserted

; Entry 100016494; block 74; address 10001679b
L100016494_74:
    MOV RDI, R12
    MOV ESI, R13D
    CALL L100016494_0
    JMP L100016494_75     ; inserted

; Entry 100016494; block 75; address 1000167a6
L100016494_75:
    TEST EAX, EAX
    JE L100016494_77
    JMP L100016494_76     ; inserted

; Entry 100016494; block 76; address 1000167aa
L100016494_76:
    CMP EAX, 18446744073709551615
    JNE L100016494_79
    JMP L100016494_78     ; inserted

; Entry 100016494; block 77; address 1000167ca
L100016494_77:
    MOV RDI, R12
    CALL _free
    JMP L100016494_81     ; inserted

; Entry 100016494; block 78; address 1000167af
L100016494_78:
    LEA RDI, [rel L__TEXT___cstring_9170]
    MOV RSI, R12
    CALL L1000034f4_0
    JMP L100016494_80     ; inserted

; Entry 100016494; block 79; address 1000167c0
L100016494_79:
    MOV EDI, EAX
    MOV RSI, R12
    CALL L100002e30_0

; Entry 100016494; block 80; address 1000167be
L100016494_80:
    JMP L100016494_77

; Entry 100016494; block 81; address 1000167d2
L100016494_81:
    MOV R15, qword [RBP + -48]
    LEA R12, [rel L__TEXT___cstring_10187]
    JMP L100016494_65     ; inserted

; Entry 100016494; block 82; address 1000167e5
L100016494_82:
    MOV RBX, RAX
    TEST RAX, RAX
    JNE L100016494_83
    JMP L100016494_62     ; inserted

; Entry 100016494; block 83; address 100016728
L100016494_83:
    ADD RBX, 21
    MOV RDI, RBX
    MOV RSI, R12
    CALL _strcmp
    JMP L100016494_63     ; inserted

; Entry 100016494; block 84; address 100016802
L100016494_84:
    JMP L100016494_85

; Entry 100016494; block 85; address 100016813
L100016494_85:
    XOR R14D, R14D
    JMP L100016494_28     ; inserted

; Entry 100016494; block 86; address 10001680b
L100016494_86:
    MOV RSI, R12
    CALL L1000034f4_0
    JMP L100016494_85     ; inserted

; Entry 100016494; block 87; address 100016834
L100016494_87:
    MOV RDI, R15
    CALL _free
    JMP L100016494_88     ; inserted

; Entry 100016494; block 88; address 10001683c
L100016494_88:
    JMP L100016494_28



; ---------------------
; Function: 0x10001683e
; ---------------------
; Entry 10001683e; block 0; address 10001683e
L10001683e_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    MOV R14, RDX
    MOV RBX, RDI
    LEA R13, [rel L__DATA___common + 56]
    MOV R12D, dword [R13]
    LEA RSI, [rel L__TEXT___cstring_38141]
    MOV EDX, 2
    CALL _strncmp
    JMP L10001683e_1     ; inserted

; Entry 10001683e; block 1; address 10001686e
L10001683e_1:
    TEST EAX, EAX
    JE L10001683e_3
    JMP L10001683e_2     ; inserted

; Entry 10001683e; block 2; address 100016876
L10001683e_2:
    DEC RBX
    JMP L10001683e_4     ; inserted

; Entry 10001683e; block 3; address 100016908
L10001683e_3:
    MOV AL, byte [RBX + 2]
    TEST AL, AL
    JE L10001683e_2
    JMP L10001683e_22     ; inserted

; Entry 10001683e; block 4; address 100016879
L10001683e_4:
    MOV AL, byte [RBX + 1]
    INC RBX
    CMP AL, 47
    JE L10001683e_4
    JMP L10001683e_5     ; inserted

; Entry 10001683e; block 5; address 100016883
L10001683e_5:
    CMP AL, 46
    JNE L10001683e_7
    JMP L10001683e_6     ; inserted

; Entry 10001683e; block 6; address 100016887
L10001683e_6:
    CMP byte [RBX + 1], 47
    JNE L10001683e_7
    JMP L10001683e_8     ; inserted

; Entry 10001683e; block 7; address 10001689c
L10001683e_7:
    MOV R15, RBX
    JMP L10001683e_10     ; inserted

; Entry 10001683e; block 8; address 10001688d
L10001683e_8:
    LEA R15, [RBX + 2]
    CMP byte [RBX + 2], 46
    MOV RBX, R15
    JE L10001683e_6
    JMP L10001683e_9     ; inserted

; Entry 10001683e; block 9; address 10001689a
L10001683e_9:
    JMP L10001683e_10

; Entry 10001683e; block 10; address 10001689f
L10001683e_10:
    LEA RAX, [rel L__DATA___data + 4488]
    CMP dword [RAX], 0
    JNE L10001683e_12
    JMP L10001683e_11     ; inserted

; Entry 10001683e; block 11; address 1000168ab
L10001683e_11:
    MOV RDI, R15
    MOV ESI, 47
    CALL L10001080e_0
    JMP L10001683e_13     ; inserted

; Entry 10001683e; block 12; address 1000168bb
L10001683e_12:
    MOV RDI, R15
    CALL _strlen
    JMP L10001683e_14     ; inserted

; Entry 10001683e; block 13; address 1000168b8
L10001683e_13:
    MOV R15, RAX
    JMP L10001683e_12     ; inserted

; Entry 10001683e; block 14; address 1000168c3
L10001683e_14:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L10001683e_15     ; inserted

; Entry 10001683e; block 15; address 1000168cc
L10001683e_15:
    MOV RBX, RAX
    TEST RAX, RAX
    JE L10001683e_17
    JMP L10001683e_16     ; inserted

; Entry 10001683e; block 16; address 1000168d4
L10001683e_16:
    MOV RDI, RBX
    MOV RSI, R15
    CALL _strcpy
    JMP L10001683e_18     ; inserted

; Entry 10001683e; block 17; address 1000168f6
L10001683e_17:
    MOV RAX, RBX
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10001683e; block 18; address 1000168df
L10001683e_18:
    CMP dword [R13], 0
    JE L10001683e_20
    JMP L10001683e_19     ; inserted

; Entry 10001683e; block 19; address 1000168e6
L10001683e_19:
    MOV RDI, RBX
    CALL L100010831_0
    JMP L10001683e_20     ; inserted

; Entry 10001683e; block 20; address 1000168ee
L10001683e_20:
    TEST R14, R14
    JE L10001683e_17
    JMP L10001683e_21     ; inserted

; Entry 10001683e; block 21; address 1000168f3
L10001683e_21:
    MOV dword [R14], R12D
    JMP L10001683e_17     ; inserted

; Entry 10001683e; block 22; address 100016913
L10001683e_22:
    CMP AL, 47
    JE L10001683e_2
    JMP L10001683e_23     ; inserted

; Entry 10001683e; block 23; address 10001691b
L10001683e_23:
    ADD RBX, 3
    JMP L10001683e_28     ; inserted

; Entry 10001683e; block 24; address 100016923
L10001683e_24:
    CMP AL, 47
    JE L10001683e_27
    JMP L10001683e_26     ; inserted

; Entry 10001683e; block 25; address 100016943
L10001683e_25:
    XOR EBX, EBX
    JMP L10001683e_2

; Entry 10001683e; block 26; address 100016927
L10001683e_26:
    MOV AL, byte [RBX]
    INC RBX
    JMP L10001683e_28

; Entry 10001683e; block 27; address 10001692e
L10001683e_27:
    MOV AL, byte [RBX]
    INC RBX
    CMP AL, 47
    JE L10001683e_30
    JMP L10001683e_29     ; inserted

; Entry 10001683e; block 28; address 10001691f
L10001683e_28:
    TEST AL, AL
    JE L10001683e_25
    JMP L10001683e_24     ; inserted

; Entry 10001683e; block 29; address 100016937
L10001683e_29:
    TEST AL, AL
    JNE L10001683e_27
    JMP L10001683e_30     ; inserted

; Entry 10001683e; block 30; address 10001693b
L10001683e_30:
    TEST AL, AL
    JNE L10001683e_2
    JMP L10001683e_25     ; inserted



; ---------------------
; Function: 0x10001694a
; ---------------------
; Entry 10001694a; block 0; address 10001694a
L10001694a_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R14
    PUSH RBX
    MOV R14, RDI
    CALL _strlen
    JMP L10001694a_1     ; inserted

; Entry 10001694a; block 1; address 100016959
L10001694a_1:
    LEA RDI, [RAX + 1]
    CALL _malloc
    JMP L10001694a_2     ; inserted

; Entry 10001694a; block 2; address 100016962
L10001694a_2:
    MOV RBX, RAX
    TEST RAX, RAX
    JE L10001694a_4
    JMP L10001694a_3     ; inserted

; Entry 10001694a; block 3; address 10001696a
L10001694a_3:
    MOV RDI, RBX
    MOV RSI, R14
    CALL _strcpy
    JMP L10001694a_4     ; inserted

; Entry 10001694a; block 4; address 100016975
L10001694a_4:
    MOV RAX, RBX
    POP RBX
    POP R14
    POP RBP
    RET 



; ---------------------
; Function: 0x10001697d
; ---------------------
; Entry 10001697d; block 0; address 10001697d
L10001697d_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH RBX
    SUB RSP, 24
    MOV RBX, RDI
    MOV RDI, RSI
    CALL L10001158e_0
    JMP L10001697d_1     ; inserted

; Entry 10001697d; block 1; address 100016991
L10001697d_1:
    LEA RSI, [RBP + -24]
    MOV qword [RSI + 8], RAX
    MOV qword [RSI], RAX
    MOV RDI, RBX
    CALL _utime
    JMP L10001697d_2     ; inserted

; Entry 10001697d; block 2; address 1000169a4
L10001697d_2:
    ADD RSP, 24
    POP RBX
    POP RBP
    RET 



; ---------------------
; Function: 0x1000169ab
; ---------------------
; Entry 1000169ab; block 0; address 1000169ab
L1000169ab_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 152
    MOV R12, RCX
    MOV R15, RSI
    LEA RAX, [rel L__DATA___common + 40]
    CMP qword [RAX], RDI
    JE L1000169ab_2
    JMP L1000169ab_1     ; inserted

; Entry 1000169ab; block 1; address 1000169d5
L1000169ab_1:
    MOV RBX, RDI
    MOV qword [RBP + -48], RDX
    CALL _strlen
    JMP L1000169ab_3     ; inserted

; Entry 1000169ab; block 2; address 100016a71
L1000169ab_2:
    TEST R15, R15
    JE L1000169ab_17
    JMP L1000169ab_16     ; inserted

; Entry 1000169ab; block 3; address 1000169e1
L1000169ab_3:
    MOV R14, RAX
    SHL R14, 32
    MOV RDI, 4294967296
    ADD RDI, R14
    SAR RDI, 32
    CALL _malloc
    JMP L1000169ab_4     ; inserted

; Entry 1000169ab; block 4; address 1000169fe
L1000169ab_4:
    MOV R13, RAX
    TEST RAX, RAX
    JNE L1000169ab_6
    JMP L1000169ab_5     ; inserted

; Entry 1000169ab; block 5; address 100016a06
L1000169ab_5:
    LEA RSI, [rel L__TEXT___cstring_38144]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 1000169ab; block 6; address 100016a17
L1000169ab_6:
    MOV RDI, R13
    MOV RSI, RBX
    CALL _strcpy
    JMP L1000169ab_7     ; inserted

; Entry 1000169ab; block 7; address 100016a22
L1000169ab_7:
    MOV RAX, 18446744069414584320
    ADD R14, RAX
    SAR R14, 32
    CMP byte [R13 + R14], 47
    JNE L1000169ab_9
    JMP L1000169ab_8     ; inserted

; Entry 1000169ab; block 8; address 100016a3b
L1000169ab_8:
    MOV byte [R13 + R14], 0
    JMP L1000169ab_9     ; inserted

; Entry 1000169ab; block 9; address 100016a41
L1000169ab_9:
    LEA RSI, [rel L__TEXT___cstring_7743]
    MOV RDI, RBX
    CALL _strcmp
    JMP L1000169ab_10     ; inserted

; Entry 1000169ab; block 10; address 100016a50
L1000169ab_10:
    TEST EAX, EAX
    JE L1000169ab_12
    JMP L1000169ab_11     ; inserted

; Entry 1000169ab; block 11; address 100016a54
L1000169ab_11:
    LEA RAX, [rel L__DATA___common + 276]
    CMP dword [RAX], 0
    JE L1000169ab_14
    JMP L1000169ab_13     ; inserted

; Entry 1000169ab; block 12; address 100016aa1
L1000169ab_12:
    MOV RAX, qword [rel ___stdinp]
    MOV RDI, qword [RAX]
    CALL _fileno
    JMP L1000169ab_22     ; inserted

; Entry 1000169ab; block 13; address 100016a60
L1000169ab_13:
    LEA RSI, [RBP + -192]
    MOV RDI, R13
    CALL _lstat$INODE64
    JMP L1000169ab_15     ; inserted

; Entry 1000169ab; block 14; address 100016ad8
L1000169ab_14:
    LEA RSI, [RBP + -192]
    MOV RDI, R13
    CALL _stat$INODE64
    JMP L1000169ab_27     ; inserted

; Entry 1000169ab; block 15; address 100016a6f
L1000169ab_15:
    JMP L1000169ab_27

; Entry 1000169ab; block 16; address 100016a76
L1000169ab_16:
    MOV qword [R15], 0
    JMP L1000169ab_17     ; inserted

; Entry 1000169ab; block 17; address 100016a7d
L1000169ab_17:
    TEST RDX, RDX
    JE L1000169ab_19
    JMP L1000169ab_18     ; inserted

; Entry 1000169ab; block 18; address 100016a82
L1000169ab_18:
    MOV qword [RDX], 18446744073709551614
    JMP L1000169ab_19     ; inserted

; Entry 1000169ab; block 19; address 100016a89
L1000169ab_19:
    TEST R12, R12
    JE L1000169ab_21
    JMP L1000169ab_20     ; inserted

; Entry 1000169ab; block 20; address 100016a8e
L1000169ab_20:
    XORPS XMM0, XMM0
    MOVUPS oword [R12], XMM0
    MOV qword [R12 + 16], 0
    JMP L1000169ab_21

; Entry 1000169ab; block 21; address 100016af3
L1000169ab_21:
    XOR EAX, EAX
    JMP L1000169ab_39

; Entry 1000169ab; block 22; address 100016ab0
L1000169ab_22:
    LEA RSI, [RBP + -192]
    MOV EDI, EAX
    CALL _fstat$INODE64
    JMP L1000169ab_23     ; inserted

; Entry 1000169ab; block 23; address 100016abe
L1000169ab_23:
    TEST EAX, EAX
    JE L1000169ab_25
    JMP L1000169ab_24     ; inserted

; Entry 1000169ab; block 24; address 100016ac2
L1000169ab_24:
    MOV RDI, R13
    CALL _free
    JMP L1000169ab_26     ; inserted

; Entry 1000169ab; block 25; address 100016afa
L1000169ab_25:
    MOV RDI, R13
    CALL _free
    JMP L1000169ab_29     ; inserted

; Entry 1000169ab; block 26; address 100016aca
L1000169ab_26:
    LEA RDI, [rel L__TEXT___cstring_38153]
    CALL L1000032ef_0

; Entry 1000169ab; block 27; address 100016ae7
L1000169ab_27:
    TEST EAX, EAX
    JE L1000169ab_25
    JMP L1000169ab_28     ; inserted

; Entry 1000169ab; block 28; address 100016aeb
L1000169ab_28:
    MOV RDI, R13
    CALL _free
    JMP L1000169ab_21     ; inserted

; Entry 1000169ab; block 29; address 100016b02
L1000169ab_29:
    TEST R15, R15
    JE L1000169ab_31
    JMP L1000169ab_30     ; inserted

; Entry 1000169ab; block 30; address 100016b07
L1000169ab_30:
    MOVZX ECX, word [RBP + -188]
    MOV RDX, RCX
    SHL RDX, 16
    XOR EAX, EAX
    TEST CL, 128
    SETE AL
    OR RAX, RDX
    MOV qword [R15], RAX
    AND ECX, 61440
    CMP ECX, 16384
    JNE L1000169ab_31
    JMP L1000169ab_32     ; inserted

; Entry 1000169ab; block 31; address 100016b38
L1000169ab_31:
    MOV RDX, qword [RBP + -48]
    TEST RDX, RDX
    JE L1000169ab_34
    JMP L1000169ab_33     ; inserted

; Entry 1000169ab; block 32; address 100016b31
L1000169ab_32:
    OR RAX, 16
    MOV qword [R15], RAX
    JMP L1000169ab_31     ; inserted

; Entry 1000169ab; block 33; address 100016b41
L1000169ab_33:
    MOVZX ECX, word [RBP + -188]
    AND ECX, 61440
    MOV RAX, 18446744073709551615
    CMP ECX, 32768
    JNE L1000169ab_36
    JMP L1000169ab_35     ; inserted

; Entry 1000169ab; block 34; address 100016b64
L1000169ab_34:
    TEST R12, R12
    JE L1000169ab_38
    JMP L1000169ab_37     ; inserted

; Entry 1000169ab; block 35; address 100016b5d
L1000169ab_35:
    MOV RAX, qword [RBP + -96]
    JMP L1000169ab_36     ; inserted

; Entry 1000169ab; block 36; address 100016b61
L1000169ab_36:
    MOV qword [RDX], RAX
    JMP L1000169ab_34     ; inserted

; Entry 1000169ab; block 37; address 100016b69
L1000169ab_37:
    MOV RAX, qword [RBP + -160]
    MOV qword [R12], RAX
    MOV RAX, qword [RBP + -144]
    MOV qword [R12 + 8], RAX
    MOV qword [R12 + 16], RAX
    JMP L1000169ab_38     ; inserted

; Entry 1000169ab; block 38; address 100016b85
L1000169ab_38:
    LEA RDI, [RBP + -144]
    CALL L1000114d4_0
    JMP L1000169ab_39     ; inserted

; Entry 1000169ab; block 39; address 100016b91
L1000169ab_39:
    ADD RSP, 152
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x100016ba3
; ---------------------
; Entry 100016ba3; block 0; address 100016ba3
L100016ba3_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    MOV qword [RBP + -48], RSI
    MOV RBX, RDI
    MOVZX R13D, word [RDI + 42]
    LEA R12, [R13 + 15]
    MOV RDI, R12
    CALL _malloc
    JMP L100016ba3_1     ; inserted

; Entry 100016ba3; block 1; address 100016bc9
L100016ba3_1:
    MOV R14D, 4
    TEST RAX, RAX
    JE L100016ba3_3
    JMP L100016ba3_2     ; inserted

; Entry 100016ba3; block 2; address 100016bd8
L100016ba3_2:
    MOV R15, RAX
    MOV RDI, R12
    CALL _malloc
    JMP L100016ba3_4     ; inserted

; Entry 100016ba3; block 3; address 100016d39
L100016ba3_3:
    MOV EAX, R14D
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100016ba3; block 4; address 100016be3
L100016ba3_4:
    TEST RAX, RAX
    JE L100016ba3_3
    JMP L100016ba3_5     ; inserted

; Entry 100016ba3; block 5; address 100016bec
L100016ba3_5:
    MOV R12, RAX
    TEST R13W, R13W
    JE L100016ba3_7
    JMP L100016ba3_6     ; inserted

; Entry 100016ba3; block 6; address 100016bf5
L100016ba3_6:
    MOV RSI, qword [RBX + 88]
    MOV RDI, R15
    MOV RDX, R13
    CALL _memcpy
    JMP L100016ba3_7     ; inserted

; Entry 100016ba3; block 7; address 100016c04
L100016ba3_7:
    MOVZX EDX, word [RBX + 44]
    TEST RDX, RDX
    JE L100016ba3_9
    JMP L100016ba3_8     ; inserted

; Entry 100016ba3; block 8; address 100016c0d
L100016ba3_8:
    MOV RSI, qword [RBX + 96]
    MOV RDI, R12
    CALL _memcpy
    JMP L100016ba3_9     ; inserted

; Entry 100016ba3; block 9; address 100016c19
L100016ba3_9:
    MOV RDI, qword [RBX + 88]
    CALL _free
    JMP L100016ba3_10     ; inserted

; Entry 100016ba3; block 10; address 100016c22
L100016ba3_10:
    MOV qword [RBX + 88], R15
    MOV RDI, qword [RBX + 96]
    CALL _free
    JMP L100016ba3_11     ; inserted

; Entry 100016ba3; block 11; address 100016c2f
L100016ba3_11:
    MOV qword [RBX + 96], R12
    MOV RAX, qword [RBX + 88]
    MOVZX ECX, word [RBX + 42]
    MOV byte [RAX + RCX], 117
    MOV RAX, qword [RBX + 88]
    MOVZX ECX, word [RBX + 42]
    MOV byte [RCX + RAX + 1], 120
    MOV RAX, qword [RBX + 88]
    MOVZX ECX, word [RBX + 42]
    MOV byte [RCX + RAX + 2], 11
    MOV RAX, qword [RBX + 88]
    MOVZX ECX, word [RBX + 42]
    MOV byte [RCX + RAX + 3], 0
    MOV RAX, qword [RBX + 88]
    MOVZX ECX, word [RBX + 42]
    MOV byte [RCX + RAX + 4], 1
    MOV RAX, qword [RBX + 88]
    MOVZX ECX, word [RBX + 42]
    MOV R8B, 4
    MOV byte [RCX + RAX + 5], R8B
    MOV RDX, qword [RBP + -48]
    MOV EAX, dword [RDX + 16]
    MOV RCX, qword [RBX + 88]
    MOVZX ESI, word [RBX + 42]
    MOV byte [RSI + RCX + 6], AL
    MOV RCX, qword [RBX + 88]
    MOVZX ESI, word [RBX + 42]
    MOV byte [RSI + RCX + 7], AH
    MOV ECX, EAX
    SHR ECX, 16
    MOV RSI, qword [RBX + 88]
    MOVZX EDI, word [RBX + 42]
    MOV byte [RDI + RSI + 8], CL
    SHR EAX, 24
    MOV RCX, qword [RBX + 88]
    MOVZX ESI, word [RBX + 42]
    MOV byte [RSI + RCX + 9], AL
    MOV RAX, qword [RBX + 88]
    MOVZX ECX, word [RBX + 42]
    MOV byte [RCX + RAX + 10], R8B
    MOV EAX, dword [RDX + 20]
    MOV RCX, qword [RBX + 88]
    MOVZX EDX, word [RBX + 42]
    MOV byte [RDX + RCX + 11], AL
    MOV RCX, qword [RBX + 88]
    MOVZX EDX, word [RBX + 42]
    MOV byte [RDX + RCX + 12], AH
    MOV ECX, EAX
    SHR ECX, 16
    MOV RDX, qword [RBX + 88]
    MOVZX ESI, word [RBX + 42]
    MOV byte [RSI + RDX + 13], CL
    SHR EAX, 24
    MOV RCX, qword [RBX + 88]
    MOVZX EDX, word [RBX + 42]
    MOV byte [RDX + RCX + 14], AL
    MOV RAX, qword [RBX + 88]
    MOV RCX, qword [RBX + 96]
    MOVZX EDX, word [RBX + 44]
    MOVZX ESI, word [RBX + 42]
    MOV RDI, qword [RAX + RSI]
    MOV RAX, qword [RAX + RSI + 7]
    MOV qword [RCX + RDX + 7], RAX
    MOV qword [RCX + RDX], RDI
    ADD word [RBX + 42], 15
    ADD word [RBX + 44], 15
    XOR R14D, R14D
    JMP L100016ba3_3     ; inserted



; ---------------------
; Function: 0x100016d4b
; ---------------------
; Entry 100016d4b; block 0; address 100016d4b
L100016d4b_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    SUB RSP, 144
    MOV R14, RDI
    MOV R12, qword [RDI + 80]
    MOV RDI, R12
    CALL _strlen
    JMP L100016d4b_1     ; inserted

; Entry 100016d4b; block 1; address 100016d6c
L100016d4b_1:
    MOV RBX, RAX
    SHL RBX, 32
    MOV RDI, 4294967296
    ADD RDI, RBX
    SAR RDI, 32
    CALL _malloc
    JMP L100016d4b_2     ; inserted

; Entry 100016d4b; block 2; address 100016d89
L100016d4b_2:
    MOV R15, RAX
    TEST RAX, RAX
    JNE L100016d4b_4
    JMP L100016d4b_3     ; inserted

; Entry 100016d4b; block 3; address 100016d91
L100016d4b_3:
    LEA RSI, [rel L__TEXT___cstring_38166]
    MOV EDI, 4
    CALL L100002e30_0

; Entry 100016d4b; block 4; address 100016da6
L100016d4b_4:
    MOV RDI, R15
    MOV RSI, R12
    CALL _strcpy
    JMP L100016d4b_5     ; inserted

; Entry 100016d4b; block 5; address 100016db1
L100016d4b_5:
    MOV RAX, 18446744069414584320
    ADD RBX, RAX
    SAR RBX, 32
    CMP byte [R15 + RBX], 47
    JNE L100016d4b_7
    JMP L100016d4b_6     ; inserted

; Entry 100016d4b; block 6; address 100016dc9
L100016d4b_6:
    MOV byte [R15 + RBX], 0
    JMP L100016d4b_7     ; inserted

; Entry 100016d4b; block 7; address 100016dce
L100016d4b_7:
    LEA RAX, [rel L__DATA___common + 276]
    CMP dword [RAX], 0
    JE L100016d4b_9
    JMP L100016d4b_8     ; inserted

; Entry 100016d4b; block 8; address 100016dda
L100016d4b_8:
    LEA RSI, [RBP + -176]
    MOV RDI, R15
    CALL _lstat$INODE64
    JMP L100016d4b_10     ; inserted

; Entry 100016d4b; block 9; address 100016deb
L100016d4b_9:
    LEA RSI, [RBP + -176]
    MOV RDI, R15
    CALL _stat$INODE64
    JMP L100016d4b_11     ; inserted

; Entry 100016d4b; block 10; address 100016de9
L100016d4b_10:
    JMP L100016d4b_11

; Entry 100016d4b; block 11; address 100016dfa
L100016d4b_11:
    MOV RDI, R15
    TEST EAX, EAX
    JE L100016d4b_13
    JMP L100016d4b_12     ; inserted

; Entry 100016d4b; block 12; address 100016e01
L100016d4b_12:
    CALL _free
    JMP L100016d4b_14     ; inserted

; Entry 100016d4b; block 13; address 100016e10
L100016d4b_13:
    CALL _free
    JMP L100016d4b_15     ; inserted

; Entry 100016d4b; block 14; address 100016e06
L100016d4b_14:
    MOV EBX, 18
    JMP L100016d4b_18

; Entry 100016d4b; block 15; address 100016e15
L100016d4b_15:
    MOV EDI, 13
    CALL _malloc
    JMP L100016d4b_16     ; inserted

; Entry 100016d4b; block 16; address 100016e1f
L100016d4b_16:
    MOV qword [R14 + 88], RAX
    MOV EBX, 4
    TEST RAX, RAX
    JE L100016d4b_18
    JMP L100016d4b_17     ; inserted

; Entry 100016d4b; block 17; address 100016e2d
L100016d4b_17:
    MOV R15, RAX
    MOV EDI, 9
    CALL _malloc
    JMP L100016d4b_19     ; inserted

; Entry 100016d4b; block 18; address 100016e91
L100016d4b_18:
    MOV EAX, EBX
    ADD RSP, 144
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100016d4b; block 19; address 100016e3a
L100016d4b_19:
    MOV qword [R14 + 96], RAX
    TEST RAX, RAX
    JE L100016d4b_18
    JMP L100016d4b_20     ; inserted

; Entry 100016d4b; block 20; address 100016e43
L100016d4b_20:
    MOV dword [R15], 611413
    MOV byte [R15 + 4], 3
    LEA RSI, [RBP + -176]
    MOV ECX, dword [RSI + 48]
    MOV dword [R15 + 5], ECX
    MOV ECX, dword [RSI + 32]
    MOV dword [R15 + 9], ECX
    MOV word [R14 + 42], 13
    MOV CL, byte [R15 + 8]
    MOV byte [RAX + 8], CL
    MOV RCX, qword [R15]
    MOV qword [RAX], RCX
    MOV RAX, qword [R14 + 96]
    MOV byte [RAX + 2], 5
    MOV word [R14 + 44], 9
    MOV RDI, R14
    CALL L100016ba3_0
    JMP L100016d4b_21     ; inserted

; Entry 100016d4b; block 21; address 100016e8f
L100016d4b_21:
    XOR EBX, EBX
    JMP L100016d4b_18     ; inserted



; ---------------------
; Function: 0x100016ea3
; ---------------------
; Entry 100016ea3; block 0; address 100016ea3
L100016ea3_0:
    PUSH RBP
    MOV RBP, RSP
    POP RBP
    JMP _rmdir



; ---------------------
; Function: 0x100016ead
; ---------------------
; Entry 100016ead; block 0; address 100016ead
L100016ead_0:
    PUSH RBP
    MOV RBP, RSP
    LEA RDI, [rel L__TEXT___cstring_38182]
    LEA RSI, [rel L__TEXT___cstring_38218]
    LEA RDX, [rel L__TEXT___cstring_38313]
    LEA RCX, [rel L__TEXT___cstring_38322]
    XOR EAX, EAX
    POP RBP
    JMP _printf



; ---------------------
; Function: 0x100016ed5
; ---------------------
; Entry 100016ed5; block 0; address 100016ed5
L100016ed5_0:
    PUSH RBP
    MOV RBP, RSP
    LEA RAX, [rel L__TEXT___const + 512]
    POP RBP
    RET 



; ---------------------
; Function: 0x100016ee2
; ---------------------
; Entry 100016ee2; block 0; address 100016ee2
L100016ee2_0:
    TEST RSI, RSI
    JE L100016ee2_2
    JMP L100016ee2_1     ; inserted

; Entry 100016ee2; block 1; address 100016eeb
L100016ee2_1:
    PUSH RBP
    MOV RBP, RSP
    MOV RAX, RDI
    MOV R8D, 4294967295
    XOR RAX, R8
    CMP RDX, 8
    JB L100016ee2_4
    JMP L100016ee2_3     ; inserted

; Entry 100016ee2; block 2; address 100016ff9
L100016ee2_2:
    XOR EAX, EAX
    RET 

; Entry 100016ee2; block 3; address 100016f05
L100016ee2_3:
    MOV R9D, 255
    LEA R10, [rel L__TEXT___const + 512]
    JMP L100016ee2_5     ; inserted

; Entry 100016ee2; block 4; address 100016fcb
L100016ee2_4:
    TEST RDX, RDX
    JE L100016ee2_7
    JMP L100016ee2_6     ; inserted

; Entry 100016ee2; block 5; address 100016f12
L100016ee2_5:
    MOVZX EDI, byte [RSI]
    MOV RCX, RAX
    AND RCX, R9
    XOR RCX, RDI
    SHR RAX, 8
    XOR RAX, qword [R10 + RCX * 8]
    MOVZX ECX, byte [RSI + 1]
    MOV RDI, RAX
    AND RDI, R9
    XOR RDI, RCX
    SHR RAX, 8
    XOR RAX, qword [R10 + RDI * 8]
    MOVZX ECX, byte [RSI + 2]
    MOV RDI, RAX
    AND RDI, R9
    XOR RDI, RCX
    SHR RAX, 8
    XOR RAX, qword [R10 + RDI * 8]
    MOVZX ECX, byte [RSI + 3]
    MOV RDI, RAX
    AND RDI, R9
    XOR RDI, RCX
    SHR RAX, 8
    XOR RAX, qword [R10 + RDI * 8]
    MOVZX ECX, byte [RSI + 4]
    MOV RDI, RAX
    AND RDI, R9
    XOR RDI, RCX
    SHR RAX, 8
    XOR RAX, qword [R10 + RDI * 8]
    MOVZX ECX, byte [RSI + 5]
    MOV RDI, RAX
    AND RDI, R9
    XOR RDI, RCX
    SHR RAX, 8
    XOR RAX, qword [R10 + RDI * 8]
    MOVZX ECX, byte [RSI + 6]
    MOV RDI, RAX
    AND RDI, R9
    XOR RDI, RCX
    SHR RAX, 8
    XOR RAX, qword [R10 + RDI * 8]
    MOVZX ECX, byte [RSI + 7]
    ADD RSI, 8
    MOV RDI, RAX
    AND RDI, R9
    XOR RDI, RCX
    SHR RAX, 8
    XOR RAX, qword [R10 + RDI * 8]
    ADD RDX, 18446744073709551608
    CMP RDX, 7
    JA L100016ee2_5
    JMP L100016ee2_4     ; inserted

; Entry 100016ee2; block 6; address 100016fd0
L100016ee2_6:
    XOR ECX, ECX
    LEA R9, [rel L__TEXT___const + 512]
    JMP L100016ee2_8     ; inserted

; Entry 100016ee2; block 7; address 100016ff4
L100016ee2_7:
    XOR RAX, R8
    POP RBP
    RET 

; Entry 100016ee2; block 8; address 100016fd9
L100016ee2_8:
    MOVZX R10D, byte [RSI + RCX]
    MOVZX EDI, AL
    XOR RDI, R10
    SHR RAX, 8
    XOR RAX, qword [R9 + RDI * 8]
    INC RCX
    CMP RDX, RCX
    JNE L100016ee2_8
    JMP L100016ee2_7     ; inserted



; ---------------------
; Function: 0x100016ffc
; ---------------------
; Entry 100016ffc; block 0; address 100016ffc
L100016ffc_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    MOV R14, RSI
    MOV R15D, EDI
    LEA EAX, [R15 + -1]
    CMP EAX, 9
    JB L100016ffc_2
    JMP L100016ffc_1     ; inserted

; Entry 100016ffc; block 1; address 100017016
L100016ffc_1:
    LEA RDI, [rel L__TEXT___cstring_38338]
    CALL L1000032ef_0

; Entry 100016ffc; block 2; address 100017022
L100016ffc_2:
    MOV byte [rel L__DATA___bss + 7592], 0
    LEA RAX, [rel L__DATA___common + 203056]
    CMP qword [RAX], 0
    JNE L100016ffc_4
    JMP L100016ffc_3     ; inserted

; Entry 100016ffc; block 3; address 100017036
L100016ffc_3:
    MOV byte [rel L__DATA___bss + 7592], 1
    MOV qword [RAX], 65536
    JMP L100016ffc_4     ; inserted

; Entry 100016ffc; block 4; address 100017044
L100016ffc_4:
    MOVSXD RBX, R15D
    LEA R12, [rel L__TEXT___const + 2576]
    LEA RDI, [rel L__DATA___common + 6416]
    MOV ESI, 65536
    CALL ___bzero
    JMP L100016ffc_5     ; inserted

; Entry 100016ffc; block 5; address 10001705f
L100016ffc_5:
    MOVZX EAX, word [R12 + RBX * 8 + 2]
    MOV dword [rel L__DATA___bss + 7596], EAX
    MOVZX EAX, word [R12 + RBX * 8]
    LEA RCX, [rel L__DATA___common + 6400]
    MOV dword [RCX], EAX
    MOVZX EAX, word [R12 + RBX * 8 + 4]
    LEA RCX, [rel L__DATA___common + 71960]
    MOV dword [RCX], EAX
    MOVZX EAX, word [R12 + RBX * 8 + 6]
    LEA RCX, [rel L__DATA___common + 71956]
    MOV dword [RCX], EAX
    MOV AX, 4
    CMP R15D, 3
    JL L100016ffc_7
    JMP L100016ffc_6     ; inserted

; Entry 100016ffc; block 6; address 1000170a1
L100016ffc_6:
    MOV AX, 2
    CMP R15D, 8
    JL L100016ffc_8
    JMP L100016ffc_7     ; inserted

; Entry 100016ffc; block 7; address 1000170ab
L100016ffc_7:
    OR word [R14], AX
    JMP L100016ffc_8     ; inserted

; Entry 100016ffc; block 8; address 1000170af
L100016ffc_8:
    LEA RAX, [rel L__DATA___common + 137508]
    MOV dword [RAX], 0
    LEA RAX, [rel L__DATA___common + 6392]
    MOV qword [RAX], 0
    LEA RAX, [rel L__DATA___data + 3920]
    LEA RBX, [rel L__DATA___common + 137520]
    MOV RDI, RBX
    MOV ESI, 65536
    ; NO JUMP TABLE FOUND.
    CALL qword [RAX]; TARGETS: Unresolved
    JMP L100016ffc_9     ; inserted

; Entry 100016ffc; block 9; address 1000170e2
L100016ffc_9:
    MOV dword [rel L__DATA___bss + 7600], EAX
    LEA ECX, [RAX + 1]
    CMP ECX, 1
    JA L100016ffc_11
    JMP L100016ffc_10     ; inserted

; Entry 100016ffc; block 10; address 1000170f0
L100016ffc_10:
    MOV byte [rel L__DATA___bss + 7604], 1
    MOV dword [rel L__DATA___bss + 7600], 0
    JMP L100016ffc_14

; Entry 100016ffc; block 11; address 100017103
L100016ffc_11:
    MOV byte [rel L__DATA___bss + 7604], 0
    CMP EAX, 261
    JA L100016ffc_13
    JMP L100016ffc_12     ; inserted

; Entry 100016ffc; block 12; address 100017111
L100016ffc_12:
    CALL L100017131_0
    JMP L100016ffc_13     ; inserted

; Entry 100016ffc; block 13; address 100017116
L100016ffc_13:
    MOVZX EAX, byte [RBX]
    SHL EAX, 5
    MOVZX ECX, byte [RBX + 1]
    XOR ECX, EAX
    MOV dword [rel L__DATA___bss + 7608], ECX
    JMP L100016ffc_14     ; inserted

; Entry 100016ffc; block 14; address 100017128
L100016ffc_14:
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x100017131
; ---------------------
; Entry 100017131; block 0; address 100017131
L100017131_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    MOV EAX, dword [rel L__DATA___bss + 7600]
    LEA R13, [rel L__DATA___common + 137508]
    LEA RCX, [rel L__DATA___common + 137520]
    ADD RCX, 32768
    MOV qword [RBP + -48], RCX
    LEA R14, [rel L__DATA___common + 6416]
    LEA R12, [rel L__DATA___common + 71968]
    JMP L100017131_31     ; inserted

; Entry 100017131; block 1; address 100017187
L100017131_1:
    CMP R15D, 65274
    JB L100017131_4
    JMP L100017131_3     ; inserted

; Entry 100017131; block 2; address 1000172b5
L100017131_2:
    MOV EBX, 4294967294
    JMP L100017131_4

; Entry 100017131; block 3; address 100017194
L100017131_3:
    TEST byte [rel L__DATA___bss + 7592], 1
    JE L100017131_4
    JMP L100017131_5     ; inserted

; Entry 100017131; block 4; address 10001730c
L100017131_4:
    CMP byte [rel L__DATA___bss + 7604], 0
    JNE L100017131_26
    JMP L100017131_25     ; inserted

; Entry 100017131; block 5; address 1000171a1
L100017131_5:
    MOV EDX, 32768
    LEA RDI, [rel L__DATA___common + 137520]
    MOV RSI, qword [RBP + -48]
    CALL _memcpy
    JMP L100017131_6     ; inserted

; Entry 100017131; block 6; address 1000171b6
L100017131_6:
    MOVDQA XMM1, oword [rel L__TEXT___const + 2560]
    LEA RAX, [rel L__DATA___common + 71952]
    MOV ECX, 4294934528
    ADD dword [RAX], ECX
    ADD R15D, ECX
    MOV dword [R13], R15D
    LEA RAX, [rel L__DATA___common + 6392]
    ADD qword [RAX], 18446744073709518848
    XOR EAX, EAX
    JMP L100017131_7     ; inserted

; Entry 100017131; block 7; address 1000171e3
L100017131_7:
    MOVDQA XMM0, oword [R14 + RAX * 2]
    PSUBUSW XMM0, XMM1
    MOVDQA oword [R14 + RAX * 2], XMM0
    ADD RAX, 8
    CMP RAX, 32768
    JNE L100017131_7
    JMP L100017131_8     ; inserted

; Entry 100017131; block 8; address 1000171ff
L100017131_8:
    XOR EAX, EAX
    LEA R15, [rel L__DATA___common + 144]
    JMP L100017131_9     ; inserted

; Entry 100017131; block 9; address 100017208
L100017131_9:
    MOVDQA XMM0, oword [R12 + RAX * 2]
    PSUBUSW XMM0, XMM1
    MOVDQA oword [R12 + RAX * 2], XMM0
    ADD RAX, 8
    CMP RAX, 32768
    JNE L100017131_9
    JMP L100017131_10     ; inserted

; Entry 100017131; block 10; address 100017224
L100017131_10:
    LEA RAX, [rel L__DATA___common + 136]
    MOV RAX, qword [RAX]
    TEST RAX, RAX
    JLE L100017131_12
    JMP L100017131_11     ; inserted

; Entry 100017131; block 11; address 100017237
L100017131_11:
    LEA RCX, [rel L__DATA___common + 160]
    CMP dword [RCX], 0
    LEA R15, [rel L__DATA___common + 144]
    JNE L100017131_12
    JMP L100017131_13     ; inserted

; Entry 100017131; block 12; address 1000172bc
L100017131_12:
    MOV RCX, qword [R15]
    JMP L100017131_19     ; inserted

; Entry 100017131; block 13; address 10001724a
L100017131_13:
    LEA RCX, [rel L__DATA___data + 4508]
    CMP dword [RCX], 0
    MOV RDX, qword [R15]
    JE L100017131_15
    JMP L100017131_14     ; inserted

; Entry 100017131; block 14; address 100017259
L100017131_14:
    CMP RDX, 18446744073709551615
    JNE L100017131_15
    JMP L100017131_16     ; inserted

; Entry 100017131; block 15; address 100017295
L100017131_15:
    LEA RCX, [RDX + 1]
    SHL RDX, 15
    ADD RDX, 65536
    CMP RAX, RDX
    MOV EDX, 0
    CMOVLE RCX, RDX
    MOV qword [R15], RCX
    JMP L100017131_19

; Entry 100017131; block 16; address 10001725f
L100017131_16:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RSI, qword [RAX]
    MOV EDI, 32
    CALL _putc
    JMP L100017131_17     ; inserted

; Entry 100017131; block 17; address 100017273
L100017131_17:
    LEA RAX, [rel L__DATA___common + 6336]
    MOV RDI, qword [RAX]
    CALL _fflush
    JMP L100017131_18     ; inserted

; Entry 100017131; block 18; address 100017282
L100017131_18:
    MOV RDX, qword [R15]
    INC RDX
    MOV qword [R15], RDX
    LEA RAX, [rel L__DATA___common + 136]
    MOV RAX, qword [RAX]
    JMP L100017131_15     ; inserted

; Entry 100017131; block 19; address 1000172bf
L100017131_19:
    ADD EBX, 32768
    LEA RDX, [rel L__DATA___data + 4508]
    MOV EDX, dword [RDX]
    LEA RSI, [rel L__DATA___common + 60]
    OR EDX, dword [RSI]
    JE L100017131_4
    JMP L100017131_20     ; inserted

; Entry 100017131; block 20; address 1000172d9
L100017131_20:
    TEST RAX, RAX
    JE L100017131_4
    JMP L100017131_21     ; inserted

; Entry 100017131; block 21; address 1000172de
L100017131_21:
    TEST RCX, RCX
    JNE L100017131_4
    JMP L100017131_22     ; inserted

; Entry 100017131; block 22; address 1000172e3
L100017131_22:
    LEA R15, [rel L__DATA___common + 6336]
    MOV RSI, qword [R15]
    MOV EDI, 46
    CALL _putc
    JMP L100017131_23     ; inserted

; Entry 100017131; block 23; address 1000172f7
L100017131_23:
    MOV RDI, qword [R15]
    CALL _fflush
    JMP L100017131_24     ; inserted

; Entry 100017131; block 24; address 1000172ff
L100017131_24:
    LEA RAX, [rel L__DATA___common + 604]
    MOV dword [RAX], 1
    JMP L100017131_4     ; inserted

; Entry 100017131; block 25; address 100017315
L100017131_25:
    MOV EAX, dword [R13]
    ADD RAX, qword [rel ]
    MOV EDI, dword [rel L__DATA___bss + 7600]
    ADD RDI, RAX
    MOV ESI, EBX
    LEA RAX, [rel L__DATA___data + 3920]
    ; NO JUMP TABLE FOUND.
    CALL qword [RAX]; TARGETS: Unresolved
    JMP L100017131_27     ; inserted

; Entry 100017131; block 26; address 100017365
L100017131_26:
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100017131; block 27; address 100017334
L100017131_27:
    LEA ECX, [RAX + 1]
    CMP ECX, 1
    JBE L100017131_29
    JMP L100017131_28     ; inserted

; Entry 100017131; block 28; address 10001733c
L100017131_28:
    ADD EAX, dword [rel L__DATA___bss + 7600]
    MOV dword [rel L__DATA___bss + 7600], EAX
    CMP EAX, 261
    JA L100017131_26
    JMP L100017131_30     ; inserted

; Entry 100017131; block 29; address 10001735e
L100017131_29:
    MOV byte [rel L__DATA___bss + 7604], 1
    JMP L100017131_26     ; inserted

; Entry 100017131; block 30; address 10001734f
L100017131_30:
    TEST byte [rel L__DATA___bss + 7604], 1
    JE L100017131_31
    JMP L100017131_32     ; inserted

; Entry 100017131; block 31; address 10001716c
L100017131_31:
    LEA RCX, [rel L__DATA___common + 203056]
    MOV EBX, dword [RCX]
    SUB EBX, EAX
    MOV R15D, dword [R13]
    SUB EBX, R15D
    CMP EBX, 18446744073709551615
    JE L100017131_2
    JMP L100017131_1     ; inserted

; Entry 100017131; block 32; address 10001735c
L100017131_32:
    JMP L100017131_26



; ---------------------
; Function: 0x100017374
; ---------------------
; Entry 100017374; block 0; address 100017374
L100017374_0:
    PUSH RBP
    MOV RBP, RSP
    POP RBP
    RET 



; ---------------------
; Function: 0x10001737a
; ---------------------
; Entry 10001737a; block 0; address 10001737a
L10001737a_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    LEA RAX, [rel L__DATA___common + 71956]
    MOV EDX, dword [RAX]
    LEA RAX, [rel L__DATA___common + 137508]
    MOV ECX, dword [RAX]
    LEA R9, [rel L__DATA___common + 137520]
    LEA R10, [R9 + RCX]
    LEA RAX, [rel L__DATA___common + 137504]
    MOVSXD RAX, dword [RAX]
    XOR ESI, ESI
    LEA R8, [R9 + RCX]
    ADD R8, 258
    MOV R13D, ECX
    SUB R13D, 32506
    CMOVB R13D, ESI
    MOV R15B, byte [RAX + R10-1]
    MOV R12B, byte [RAX + R10]
    LEA RSI, [rel L__DATA___common + 6400]
    MOV ECX, EDX
    SHR ECX, 2
    CMP EAX, dword [RSI]
    CMOVB ECX, EDX
    LEA RDX, [rel L__DATA___common + 71960]
    MOV EDX, dword [RDX]
    MOV dword [RBP + -44], EDX
    LEA R14, [rel L__DATA___common + 71968]
    JMP L10001737a_29     ; inserted

; Entry 10001737a; block 1; address 100017409
L10001737a_1:
    CMP byte [RDX + RBX-1], R15B
    JNE L10001737a_2
    JMP L10001737a_3     ; inserted

; Entry 10001737a; block 2; address 10001751f
L10001737a_2:
    DEC ECX
    JE L10001737a_28
    JMP L10001737a_27     ; inserted

; Entry 10001737a; block 3; address 100017414
L10001737a_3:
    MOV DL, byte [RBX]
    CMP DL, byte [R10]
    JNE L10001737a_2
    JMP L10001737a_4     ; inserted

; Entry 10001737a; block 4; address 10001741f
L10001737a_4:
    MOV DL, byte [RBX + 1]
    CMP DL, byte [R10 + 1]
    JNE L10001737a_2
    JMP L10001737a_5     ; inserted

; Entry 10001737a; block 5; address 10001742c
L10001737a_5:
    ADD RSI, R9
    ADD RSI, 10
    XOR EBX, EBX
    JMP L10001737a_22     ; inserted

; Entry 10001737a; block 6; address 100017440
L10001737a_6:
    MOV DL, byte [R10 + RBX + 4]
    CMP DL, byte [RSI + RBX-1]
    JNE L10001737a_9
    JMP L10001737a_8     ; inserted

; Entry 10001737a; block 7; address 1000174aa
L10001737a_7:
    LEA RSI, [R10 + RBX]
    ADD RSI, 3
    JMP L10001737a_23

; Entry 10001737a; block 8; address 10001744b
L10001737a_8:
    MOV DL, byte [R10 + RBX + 5]
    CMP DL, byte [RSI + RBX-1]
    JNE L10001737a_11
    JMP L10001737a_10     ; inserted

; Entry 10001737a; block 9; address 1000174b4
L10001737a_9:
    LEA RSI, [R10 + RBX]
    ADD RSI, 4
    JMP L10001737a_23

; Entry 10001737a; block 10; address 100017456
L10001737a_10:
    MOV DL, byte [R10 + RBX + 6]
    CMP DL, byte [RSI + RBX-1]
    JNE L10001737a_13
    JMP L10001737a_12     ; inserted

; Entry 10001737a; block 11; address 1000174be
L10001737a_11:
    LEA RSI, [R10 + RBX]
    ADD RSI, 5
    JMP L10001737a_23

; Entry 10001737a; block 12; address 100017461
L10001737a_12:
    MOV DL, byte [R10 + RBX + 7]
    CMP DL, byte [RSI + RBX-1]
    JNE L10001737a_15
    JMP L10001737a_14     ; inserted

; Entry 10001737a; block 13; address 1000174c8
L10001737a_13:
    LEA RSI, [R10 + RBX]
    ADD RSI, 6
    JMP L10001737a_23

; Entry 10001737a; block 14; address 10001746c
L10001737a_14:
    MOV DL, byte [R10 + RBX + 8]
    CMP DL, byte [RSI + RBX-1]
    JNE L10001737a_17
    JMP L10001737a_16     ; inserted

; Entry 10001737a; block 15; address 1000174d2
L10001737a_15:
    LEA RSI, [R10 + RBX]
    ADD RSI, 7
    JMP L10001737a_23

; Entry 10001737a; block 16; address 100017477
L10001737a_16:
    MOV DL, byte [R10 + RBX + 9]
    CMP DL, byte [RSI + RBX-1]
    JNE L10001737a_19
    JMP L10001737a_18     ; inserted

; Entry 10001737a; block 17; address 1000174dc
L10001737a_17:
    LEA RSI, [R10 + RBX]
    ADD RSI, 8
    JMP L10001737a_23

; Entry 10001737a; block 18; address 100017482
L10001737a_18:
    LEA RDX, [RBX + 2]
    LEA R11, [RBX + 8]
    CMP RDX, 249
    JA L10001737a_21
    JMP L10001737a_20     ; inserted

; Entry 10001737a; block 19; address 1000174e6
L10001737a_19:
    LEA RSI, [R10 + RBX]
    ADD RSI, 9
    JMP L10001737a_23     ; inserted

; Entry 10001737a; block 20; address 100017493
L10001737a_20:
    MOV DL, byte [RSI + RBX]
    CMP byte [R10 + RBX + 10], DL
    MOV RBX, R11
    JE L10001737a_22
    JMP L10001737a_21     ; inserted

; Entry 10001737a; block 21; address 1000174a0
L10001737a_21:
    LEA RSI, [R10 + R11]
    ADD RSI, 2
    JMP L10001737a_23

; Entry 10001737a; block 22; address 100017435
L10001737a_22:
    MOV DL, byte [R10 + RBX + 3]
    CMP DL, byte [RSI + RBX-1]
    JNE L10001737a_7
    JMP L10001737a_6     ; inserted

; Entry 10001737a; block 23; address 1000174ee
L10001737a_23:
    SUB RSI, R8
    LEA EBX, [RSI + 258]
    CMP EBX, EAX
    JLE L10001737a_2
    JMP L10001737a_24     ; inserted

; Entry 10001737a; block 24; address 1000174fb
L10001737a_24:
    LEA RAX, [rel L__DATA___common + 71952]
    MOV dword [RAX], EDI
    CMP EBX, dword [RBP + -44]
    JGE L10001737a_26
    JMP L10001737a_25     ; inserted

; Entry 10001737a; block 25; address 100017509
L10001737a_25:
    ADD ESI, 257
    MOVSXD RAX, ESI
    MOV R15B, byte [R10 + RAX]
    MOVSXD RAX, EBX
    MOV R12B, byte [R10 + RAX]
    MOV EAX, EBX
    JMP L10001737a_2     ; inserted

; Entry 10001737a; block 26; address 100017542
L10001737a_26:
    MOV EAX, EBX
    JMP L10001737a_28

; Entry 10001737a; block 27; address 100017523
L10001737a_27:
    AND EDI, 32767
    MOVZX EDI, word [R14 + RDI * 2]
    CMP R13D, EDI
    JB L10001737a_29
    JMP L10001737a_28     ; inserted

; Entry 10001737a; block 28; address 100017537
L10001737a_28:
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10001737a; block 29; address 1000173f6
L10001737a_29:
    MOV ESI, EDI
    LEA RBX, [RSI + R9]
    MOVSXD RDX, EAX
    CMP byte [RDX + RBX], R12B
    JNE L10001737a_2
    JMP L10001737a_1     ; inserted



; ---------------------
; Function: 0x100017546
; ---------------------
; Entry 100017546; block 0; address 100017546
L100017546_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    LEA RAX, [rel L__DATA___data + 4496]
    CMP dword [RAX], 4
    JGE L100017546_2
    JMP L100017546_1     ; inserted

; Entry 100017546; block 1; address 100017564
L100017546_1:
    LEA RAX, [rel L__DATA___common + 137504]
    MOV dword [RAX], 2
    MOV R8D, dword [rel L__DATA___bss + 7600]
    TEST R8D, R8D
    JE L100017546_4
    JMP L100017546_3     ; inserted

; Entry 100017546; block 2; address 100017794
L100017546_2:
    MOV R8D, dword [rel L__DATA___bss + 7600]
    TEST R8D, R8D
    JE L100017546_4
    JMP L100017546_31     ; inserted

; Entry 100017546; block 3; address 100017581
L100017546_3:
    LEA R12, [rel L__DATA___common + 137508]
    LEA RDI, [rel L__DATA___common + 137520]
    LEA R15, [rel L__DATA___common + 6416]
    LEA RCX, [rel L__DATA___common + 71968]
    XOR R14D, R14D
    JMP L100017546_28     ; inserted

; Entry 100017546; block 4; address 100017a72
L100017546_4:
    LEA RAX, [rel L__DATA___common + 6392]
    MOV RAX, qword [RAX]
    MOV ECX, EAX
    ADD RCX, qword [rel ]
    XOR EDI, EDI
    TEST RAX, RAX
    CMOVNS RDI, RCX
    LEA RCX, [rel L__DATA___common + 137508]
    MOV ESI, dword [RCX]
    SUB RSI, RAX
    MOV EDX, 1
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 24
    MOV EBX, EDX
    MOV R15, RSI
    MOV qword [RBP + -56], RDI
    MOV AL, byte [rel L__DATA___bss + 9984]
    MOV ECX, dword [rel L__DATA___bss + 14096]
    LEA RDX, [rel L__DATA___bss + 10000]
    MOV byte [RCX + RDX], AL
    MOV RAX, qword [rel L__DATA___bss + 7616]
    CMP word [RAX], 18446744073709551615
    JNE L100017546_70
    JMP L100017546_69     ; inserted

; Entry 100017546; block 5; address 1000175a6
L100017546_5:
    MOV EAX, dword [rel L__DATA___bss + 7608]
    SHL EAX, 5
    MOV EDX, dword [R12]
    LEA ESI, [RDX + 2]
    MOVZX ESI, byte [RDI + RSI]
    AND EAX, 32736
    XOR EAX, ESI
    MOV dword [rel L__DATA___bss + 7608], EAX
    MOVZX R14D, word [R15 + RAX * 2]
    MOV word [R15 + RAX * 2], DX
    AND EDX, 32767
    MOV word [RCX + RDX * 2], R14W
    JMP L100017546_6     ; inserted

; Entry 100017546; block 6; address 1000175dc
L100017546_6:
    MOV R13, RCX
    TEST R14D, R14D
    JE L100017546_8
    JMP L100017546_7     ; inserted

; Entry 100017546; block 7; address 1000175e8
L100017546_7:
    MOV EAX, dword [R12]
    SUB EAX, R14D
    CMP EAX, 32506
    JA L100017546_8
    JMP L100017546_9     ; inserted

; Entry 100017546; block 8; address 1000176c5
L100017546_8:
    MOV EAX, dword [R12]
    MOVZX ESI, byte [RDI + RAX]
    XOR EDI, EDI
    CALL L10001902b_0
    JMP L100017546_20     ; inserted

; Entry 100017546; block 9; address 1000175fa
L100017546_9:
    LEA RAX, [rel L__DATA___common + 71960]
    CMP dword [RAX], R8D
    JBE L100017546_11
    JMP L100017546_10     ; inserted

; Entry 100017546; block 10; address 100017606
L100017546_10:
    LEA RAX, [rel L__DATA___common + 71960]
    MOV dword [RAX], R8D
    JMP L100017546_11     ; inserted

; Entry 100017546; block 11; address 100017610
L100017546_11:
    MOV EDI, R14D
    CALL L10001737a_0
    JMP L100017546_12     ; inserted

; Entry 100017546; block 12; address 100017618
L100017546_12:
    MOV EBX, EAX
    MOV EAX, dword [rel L__DATA___bss + 7600]
    CMP EBX, EAX
    CMOVA EBX, EAX
    CMP EBX, 3
    LEA RDI, [rel L__DATA___common + 137520]
    JB L100017546_8
    JMP L100017546_13     ; inserted

; Entry 100017546; block 13; address 100017635
L100017546_13:
    MOV EDI, dword [R12]
    LEA RAX, [rel L__DATA___common + 71952]
    SUB EDI, dword [RAX]
    LEA ESI, [RBX + -3]
    CALL L10001902b_0
    JMP L100017546_14     ; inserted

; Entry 100017546; block 14; address 10001764a
L100017546_14:
    MOV R8D, dword [rel L__DATA___bss + 7600]
    SUB R8D, EBX
    MOV dword [rel L__DATA___bss + 7600], R8D
    CMP R8D, 3
    JB L100017546_16
    JMP L100017546_15     ; inserted

; Entry 100017546; block 15; address 100017665
L100017546_15:
    CMP EBX, dword [rel L__DATA___bss + 7596]
    JA L100017546_16
    JMP L100017546_17     ; inserted

; Entry 100017546; block 16; address 100017766
L100017546_16:
    MOV ESI, dword [R12]
    LEA EDX, [RSI + RBX]
    MOV dword [R12], EDX
    LEA RCX, [rel L__DATA___common + 137520]
    MOVZX EDI, byte [RCX + RDX]
    SHL EDI, 5
    ADD ESI, EBX
    INC ESI
    MOVZX ESI, byte [RCX + RSI]
    XOR ESI, EDI
    MOV dword [rel L__DATA___bss + 7608], ESI
    JMP L100017546_30

; Entry 100017546; block 17; address 100017671
L100017546_17:
    DEC EBX
    MOV EDX, dword [R12]
    MOV ESI, dword [rel L__DATA___bss + 7608]
    INC EDX
    MOV RCX, R13
    LEA R9, [rel L__DATA___common + 137520]
    JMP L100017546_18     ; inserted

; Entry 100017546; block 18; address 100017689
L100017546_18:
    SHL ESI, 5
    LEA EDI, [RDX + 2]
    MOVZX EDI, byte [R9 + RDI]
    AND ESI, 32736
    XOR ESI, EDI
    MOVZX R14D, word [R15 + RSI * 2]
    MOV EDI, EDX
    AND EDI, 32767
    MOV word [RCX + RDI * 2], R14W
    MOV word [R15 + RSI * 2], DX
    INC EDX
    DEC EBX
    JNE L100017546_18
    JMP L100017546_19     ; inserted

; Entry 100017546; block 19; address 1000176b9
L100017546_19:
    MOV dword [rel L__DATA___bss + 7608], ESI
    MOV dword [R12], EDX
    JMP L100017546_21

; Entry 100017546; block 20; address 1000176d4
L100017546_20:
    MOV R8D, dword [rel L__DATA___bss + 7600]
    DEC R8D
    MOV dword [rel L__DATA___bss + 7600], R8D
    MOV EDX, dword [R12]
    INC EDX
    MOV dword [R12], EDX
    JMP L100017546_30     ; inserted

; Entry 100017546; block 21; address 1000176f2
L100017546_21:
    TEST EAX, EAX
    JE L100017546_23
    JMP L100017546_22     ; inserted

; Entry 100017546; block 22; address 1000176f6
L100017546_22:
    LEA RBX, [rel L__DATA___common + 6392]
    MOV RAX, qword [RBX]
    MOV EDI, EAX
    ADD RDI, qword [rel ]
    TEST RAX, RAX
    MOV ECX, 0
    CMOVS RDI, RCX
    MOV ESI, EDX
    SUB RSI, RAX
    XOR EDX, EDX
    CALL L1000183c6_0
    JMP L100017546_24     ; inserted

; Entry 100017546; block 23; address 100017732
L100017546_23:
    CMP R8D, 261
    LEA RDI, [rel L__DATA___common + 137520]
    JA L100017546_26
    JMP L100017546_25     ; inserted

; Entry 100017546; block 24; address 100017721
L100017546_24:
    MOV RCX, R13
    MOV EAX, dword [R12]
    MOV qword [RBX], RAX
    MOV R8D, dword [rel L__DATA___bss + 7600]
    JMP L100017546_23     ; inserted

; Entry 100017546; block 25; address 100017742
L100017546_25:
    CALL L100017131_0
    JMP L100017546_27     ; inserted

; Entry 100017546; block 26; address 100017758
L100017546_26:
    TEST R8D, R8D
    JNE L100017546_28
    JMP L100017546_29     ; inserted

; Entry 100017546; block 27; address 100017747
L100017546_27:
    LEA RDI, [rel L__DATA___common + 137520]
    MOV RCX, R13
    MOV R8D, dword [rel L__DATA___bss + 7600]
    JMP L100017546_26     ; inserted

; Entry 100017546; block 28; address 1000175a0
L100017546_28:
    CMP R8D, 3
    JB L100017546_6
    JMP L100017546_5     ; inserted

; Entry 100017546; block 29; address 100017761
L100017546_29:
    JMP L100017546_4

; Entry 100017546; block 30; address 1000176ef
L100017546_30:
    MOV RCX, R13
    JMP L100017546_21     ; inserted

; Entry 100017546; block 31; address 1000177a4
L100017546_31:
    MOV R14D, 2
    LEA RBX, [rel L__DATA___common + 137508]
    LEA R13, [rel L__DATA___common + 6416]
    XOR EAX, EAX
    MOV qword [RBP + -48], RAX
    XOR R12D, R12D
    JMP L100017546_66     ; inserted

; Entry 100017546; block 32; address 1000177c7
L100017546_32:
    MOV EAX, dword [rel L__DATA___bss + 7608]
    SHL EAX, 5
    MOV EDX, dword [RBX]
    LEA ESI, [RDX + 2]
    LEA RCX, [rel L__DATA___common + 137520]
    MOVZX ESI, byte [RCX + RSI]
    AND EAX, 32736
    XOR EAX, ESI
    MOV dword [rel L__DATA___bss + 7608], EAX
    MOVZX R12D, word [R13 + RAX * 2]
    MOV word [R13 + RAX * 2], DX
    AND EDX, 32767
    LEA RAX, [rel L__DATA___common + 71968]
    MOV word [RAX + RDX * 2], R12W
    JMP L100017546_33     ; inserted

; Entry 100017546; block 33; address 10001780b
L100017546_33:
    LEA RAX, [rel L__DATA___common + 137504]
    MOV dword [RAX], R14D
    LEA RAX, [rel L__DATA___common + 71952]
    MOV R15D, dword [RAX]
    TEST R12D, R12D
    JE L100017546_35
    JMP L100017546_34     ; inserted

; Entry 100017546; block 34; address 100017824
L100017546_34:
    CMP R14D, dword [rel L__DATA___bss + 7596]
    JAE L100017546_35
    JMP L100017546_36     ; inserted

; Entry 100017546; block 35; address 10001788b
L100017546_35:
    MOV R14D, 2
    JMP L100017546_42     ; inserted

; Entry 100017546; block 36; address 10001782d
L100017546_36:
    MOV EAX, dword [RBX]
    SUB EAX, R12D
    CMP EAX, 32506
    JA L100017546_35
    JMP L100017546_37     ; inserted

; Entry 100017546; block 37; address 100017839
L100017546_37:
    LEA RAX, [rel L__DATA___common + 71960]
    CMP dword [RAX], R8D
    JBE L100017546_39
    JMP L100017546_38     ; inserted

; Entry 100017546; block 38; address 100017845
L100017546_38:
    LEA RAX, [rel L__DATA___common + 71960]
    MOV dword [RAX], R8D
    JMP L100017546_39     ; inserted

; Entry 100017546; block 39; address 10001784f
L100017546_39:
    MOV EDI, R12D
    CALL L10001737a_0
    JMP L100017546_40     ; inserted

; Entry 100017546; block 40; address 100017857
L100017546_40:
    MOV R14D, EAX
    MOV R8D, dword [rel L__DATA___bss + 7600]
    CMP EAX, R8D
    CMOVA R14D, R8D
    CMP R14D, 3
    JNE L100017546_42
    JMP L100017546_41     ; inserted

; Entry 100017546; block 41; address 10001786e
L100017546_41:
    MOV EAX, dword [RBX]
    LEA RCX, [rel L__DATA___common + 71952]
    SUB EAX, dword [RCX]
    XOR R14D, R14D
    CMP EAX, 4096
    SETA R14B
    XOR R14D, 3
    JMP L100017546_42

; Entry 100017546; block 42; address 100017891
L100017546_42:
    LEA RAX, [rel L__DATA___common + 137504]
    MOV ESI, dword [RAX]
    CMP ESI, 3
    JB L100017546_44
    JMP L100017546_43     ; inserted

; Entry 100017546; block 43; address 1000178a3
L100017546_43:
    CMP R14D, ESI
    JA L100017546_44
    JMP L100017546_45     ; inserted

; Entry 100017546; block 44; address 1000179ac
L100017546_44:
    MOV EAX, dword [RBX]
    CMP dword [RBP + -48], 0
    JE L100017546_55
    JMP L100017546_54     ; inserted

; Entry 100017546; block 45; address 1000178ac
L100017546_45:
    MOV EAX, dword [RBX]
    MOV R14, RBX
    LEA EBX, [RAX + R8]
    ADD EBX, 18446744073709551613
    NOT R15D
    ADD R15D, EAX
    ADD ESI, 18446744073709551613
    MOV EDI, R15D
    CALL L10001902b_0
    JMP L100017546_46     ; inserted

; Entry 100017546; block 46; address 1000178c9
L100017546_46:
    LEA RCX, [rel L__DATA___common + 137504]
    MOV ESI, dword [RCX]
    MOV R8D, dword [rel L__DATA___bss + 7600]
    SUB R8D, ESI
    INC R8D
    MOV dword [rel L__DATA___bss + 7600], R8D
    ADD ESI, 18446744073709551614
    MOV dword [RCX], ESI
    MOV EDX, dword [R14]
    INC EDX
    LEA R9, [rel L__DATA___common + 137520]
    LEA R10, [rel L__DATA___common + 71968]
    JMP L100017546_49     ; inserted

; Entry 100017546; block 47; address 100017902
L100017546_47:
    MOV EDI, dword [rel L__DATA___bss + 7608]
    SHL EDI, 5
    LEA ECX, [RDX + 2]
    MOVZX ECX, byte [R9 + RCX]
    AND EDI, 32736
    XOR EDI, ECX
    MOV dword [rel L__DATA___bss + 7608], EDI
    MOVZX R12D, word [R13 + RDI * 2]
    MOV ECX, EDX
    AND ECX, 32767
    MOV word [R10 + RCX * 2], R12W
    MOV word [R13 + RDI * 2], DX
    JMP L100017546_48     ; inserted

; Entry 100017546; block 48; address 10001793a
L100017546_48:
    INC EDX
    DEC ESI
    JNE L100017546_49
    JMP L100017546_50     ; inserted

; Entry 100017546; block 49; address 1000178fe
L100017546_49:
    CMP EDX, EBX
    JA L100017546_48
    JMP L100017546_47     ; inserted

; Entry 100017546; block 50; address 100017940
L100017546_50:
    LEA RCX, [rel L__DATA___common + 137504]
    MOV dword [RCX], 0
    LEA RBX, [rel L__DATA___common + 137508]
    MOV dword [RBX], EDX
    MOV R14D, 2
    MOV R15B, 1
    TEST EAX, EAX
    JE L100017546_52
    JMP L100017546_51     ; inserted

; Entry 100017546; block 51; address 100017967
L100017546_51:
    LEA R15, [rel L__DATA___common + 6392]
    MOV RAX, qword [R15]
    MOV EDI, EAX
    ADD RDI, qword [rel ]
    XOR ESI, ESI
    TEST RAX, RAX
    MOV ECX, 0
    MOV qword [RBP + -48], RCX
    CMOVS RDI, RSI
    MOV ESI, EDX
    SUB RSI, RAX
    XOR EDX, EDX
    CALL L1000183c6_0
    JMP L100017546_53     ; inserted

; Entry 100017546; block 52; address 100017a01
L100017546_52:
    XOR EAX, EAX
    MOV qword [RBP + -48], RAX
    JMP L100017546_60

; Entry 100017546; block 53; address 100017998
L100017546_53:
    MOV EAX, dword [RBX]
    MOV qword [R15], RAX
    MOV R15B, 1
    MOV R8D, dword [rel L__DATA___bss + 7600]
    JMP L100017546_60

; Entry 100017546; block 54; address 1000179b4
L100017546_54:
    DEC EAX
    LEA RBX, [rel L__DATA___common + 137520]
    MOVZX ESI, byte [RBX + RAX]
    XOR EDI, EDI
    CALL L10001902b_0
    JMP L100017546_56     ; inserted

; Entry 100017546; block 55; address 100017a09
L100017546_55:
    INC EAX
    MOV dword [RBX], EAX
    JMP L100017546_62

; Entry 100017546; block 56; address 1000179c8
L100017546_56:
    TEST EAX, EAX
    JE L100017546_58
    JMP L100017546_57     ; inserted

; Entry 100017546; block 57; address 1000179cc
L100017546_57:
    LEA R15, [rel L__DATA___common + 6392]
    MOV RAX, qword [R15]
    MOV EDI, EAX
    ADD RDI, RBX
    TEST RAX, RAX
    MOV ECX, 0
    CMOVS RDI, RCX
    LEA RBX, [rel L__DATA___common + 137508]
    MOV ESI, dword [RBX]
    SUB RSI, RAX
    XOR EDX, EDX
    CALL L1000183c6_0
    JMP L100017546_59     ; inserted

; Entry 100017546; block 58; address 100017a0f
L100017546_58:
    LEA RBX, [rel L__DATA___common + 137508]
    MOV EAX, dword [RBX]
    JMP L100017546_61     ; inserted

; Entry 100017546; block 59; address 1000179fa
L100017546_59:
    MOV EAX, dword [RBX]
    MOV qword [R15], RAX
    JMP L100017546_61

; Entry 100017546; block 60; address 100017a39
L100017546_60:
    CMP R8D, 261
    JA L100017546_64
    JMP L100017546_63     ; inserted

; Entry 100017546; block 61; address 100017a18
L100017546_61:
    INC EAX
    MOV dword [RBX], EAX
    MOV R8D, dword [rel L__DATA___bss + 7600]
    JMP L100017546_62     ; inserted

; Entry 100017546; block 62; address 100017a23
L100017546_62:
    DEC R8D
    MOV dword [rel L__DATA___bss + 7600], R8D
    MOV EAX, 1
    MOV qword [RBP + -48], RAX
    XOR R15D, R15D
    JMP L100017546_60     ; inserted

; Entry 100017546; block 63; address 100017a42
L100017546_63:
    CALL L100017131_0
    JMP L100017546_65     ; inserted

; Entry 100017546; block 64; address 100017a4e
L100017546_64:
    TEST R8D, R8D
    JNE L100017546_66
    JMP L100017546_67     ; inserted

; Entry 100017546; block 65; address 100017a47
L100017546_65:
    MOV R8D, dword [rel L__DATA___bss + 7600]
    JMP L100017546_64     ; inserted

; Entry 100017546; block 66; address 1000177c1
L100017546_66:
    CMP R8D, 3
    JB L100017546_33
    JMP L100017546_32     ; inserted

; Entry 100017546; block 67; address 100017a57
L100017546_67:
    TEST R15B, R15B
    JNE L100017546_4
    JMP L100017546_68     ; inserted

; Entry 100017546; block 68; address 100017a5c
L100017546_68:
    MOV EAX, dword [RBX]
    DEC EAX
    LEA RCX, [rel L__DATA___common + 137520]
    MOVZX ESI, byte [RCX + RAX]
    XOR EDI, EDI
    CALL L10001902b_0
    JMP L100017546_4     ; inserted

; Entry 100017546; block 69; address 100018403
L100017546_69:
    MOV EDX, 4093624447
    XOR ESI, ESI
    LEA RCX, [rel L__DATA___bss + 14128]
    JMP L100017546_74     ; inserted

; Entry 100017546; block 70; address 100018466
L100017546_70:
    LEA RDI, [rel L__DATA___data + 4840]
    CALL L100018794_0
    JMP L100017546_79     ; inserted

; Entry 100017546; block 71; address 100018416
L100017546_71:
    CMP word [RSI + RCX], 0
    JNE L100017546_73
    JMP L100017546_72     ; inserted

; Entry 100017546; block 72; address 10001841d
L100017546_72:
    SHR RDX, 1
    ADD RSI, 4
    CMP RSI, 128
    JNE L100017546_74
    JMP L100017546_75     ; inserted

; Entry 100017546; block 73; address 100018461
L100017546_73:
    MOV word [RAX], 0
    JMP L100017546_70     ; inserted

; Entry 100017546; block 74; address 100018411
L100017546_74:
    TEST DL, 1
    JE L100017546_72
    JMP L100017546_71     ; inserted

; Entry 100017546; block 75; address 10001842d
L100017546_75:
    MOV word [RAX], 1
    MOVZX EDX, word [rel L__DATA___bss + 14168]
    OR DX, word [rel L__DATA___bss + 14164]
    OR DX, word [rel L__DATA___bss + 14180]
    JNE L100017546_70
    JMP L100017546_76     ; inserted

; Entry 100017546; block 76; address 100018449
L100017546_76:
    MOV EDX, 32
    JMP L100017546_78     ; inserted

; Entry 100017546; block 77; address 100018455
L100017546_77:
    INC RDX
    CMP RDX, 256
    JNE L100017546_78
    JMP L100017546_73     ; inserted

; Entry 100017546; block 78; address 10001844e
L100017546_78:
    CMP word [RCX + RDX * 4], 0
    JNE L100017546_70
    JMP L100017546_77     ; inserted

; Entry 100017546; block 79; address 100018472
L100017546_79:
    LEA RDI, [rel L__DATA___data + 4880]
    CALL L100018794_0
    JMP L100017546_80     ; inserted

; Entry 100017546; block 80; address 10001847e
L100017546_80:
    MOV ESI, dword [rel L__DATA___data + 4876]
    LEA RDI, [rel L__DATA___bss + 14128]
    CALL L1000192a3_0
    JMP L100017546_81     ; inserted

; Entry 100017546; block 81; address 100018490
L100017546_81:
    MOV ESI, dword [rel L__DATA___data + 4916]
    LEA RDI, [rel L__DATA___bss + 16432]
    CALL L1000192a3_0
    JMP L100017546_82     ; inserted

; Entry 100017546; block 82; address 1000184a2
L100017546_82:
    LEA RDI, [rel L__DATA___data + 4920]
    CALL L100018794_0
    JMP L100017546_83     ; inserted

; Entry 100017546; block 83; address 1000184ae
L100017546_83:
    MOV R14D, 18
    LEA RCX, [rel L__TEXT___const + 2736]
    LEA RDX, [rel L__DATA___bss + 115056]
    MOV qword [RBP + -48], RBX
    JMP L100017546_86     ; inserted

; Entry 100017546; block 84; address 1000184d5
L100017546_84:
    LEA EAX, [R14 + -1]
    CMP R14D, 3
    MOV R14D, EAX
    JA L100017546_86
    JMP L100017546_87     ; inserted

; Entry 100017546; block 85; address 1000184ed
L100017546_85:
    MOV RBX, R15
    JMP L100017546_88     ; inserted

; Entry 100017546; block 86; address 1000184c6
L100017546_86:
    MOV EAX, R14D
    MOVZX EAX, byte [RAX + RCX]
    CMP word [RDX + RAX * 4 + 2], 0
    JNE L100017546_85
    JMP L100017546_84     ; inserted

; Entry 100017546; block 87; address 1000184e2
L100017546_87:
    MOV RBX, R15
    MOV R14D, 2
    JMP L100017546_88

; Entry 100017546; block 88; address 1000184f0
L100017546_88:
    LEA EAX, [R14 + R14 * 2]
    ADD EAX, 17
    CDQE 
    MOV RCX, qword [rel L__DATA___bss + 14104]
    LEA RDX, [RCX + RAX]
    LEA R15, [RCX + RAX]
    ADD R15, 10
    SHR R15, 3
    MOV R12, qword [rel L__DATA___bss + 14112]
    ADD R12, 10
    SHR R12, 3
    CMP R12, R15
    MOV R13, R12
    CMOVA R13, R15
    MOV qword [rel L__DATA___bss + 14104], RDX
    MOV RAX, qword [rel L__DATA___bss + 7632]
    OR RAX, qword [rel L__DATA___bss + 7640]
    JNE L100017546_90
    JMP L100017546_89     ; inserted

; Entry 100017546; block 89; address 100018540
L100017546_89:
    CMP qword [rel L__DATA___bss + 7624], 0
    JE L100017546_90
    JMP L100017546_91     ; inserted

; Entry 100017546; block 90; address 1000185a5
L100017546_90:
    MOV RAX, qword [RBP + -56]
    TEST RAX, RAX
    JE L100017546_101
    JMP L100017546_100     ; inserted

; Entry 100017546; block 91; address 10001854a
L100017546_91:
    CMP dword [RBP + -48], 0
    JE L100017546_90
    JMP L100017546_92     ; inserted

; Entry 100017546; block 92; address 100018550
L100017546_92:
    CMP R13, RBX
    JB L100017546_90
    JMP L100017546_93     ; inserted

; Entry 100017546; block 93; address 100018555
L100017546_93:
    CALL L1000106ad_0
    JMP L100017546_94     ; inserted

; Entry 100017546; block 94; address 10001855a
L100017546_94:
    TEST EAX, EAX
    JE L100017546_90
    JMP L100017546_95     ; inserted

; Entry 100017546; block 95; address 10001855e
L100017546_95:
    LEA RAX, [rel L__DATA___common + 280]
    CMP dword [RAX], 0
    JNE L100017546_90
    JMP L100017546_96     ; inserted

; Entry 100017546; block 96; address 10001856a
L100017546_96:
    MOV RDI, qword [RBP + -56]
    TEST RDI, RDI
    JNE L100017546_98
    JMP L100017546_97     ; inserted

; Entry 100017546; block 97; address 100018573
L100017546_97:
    LEA RDI, [rel L__TEXT___cstring_38353]
    CALL L1000032ef_0

; Entry 100017546; block 98; address 100018583
L100017546_98:
    MOV ESI, EBX
    XOR EDX, EDX
    CALL L100018ba3_0
    JMP L100017546_99     ; inserted

; Entry 100017546; block 99; address 10001858c
L100017546_99:
    MOV qword [rel L__DATA___bss + 7640], RBX
    MOV RAX, qword [rel L__DATA___bss + 7624]
    MOV dword [RAX], 0
    JMP L100017546_118

; Entry 100017546; block 100; address 1000185ae
L100017546_100:
    MOV RCX, RBX
    ADD RBX, 4
    CMP RBX, R13
    JA L100017546_101
    JMP L100017546_102     ; inserted

; Entry 100017546; block 101; address 100018611
L100017546_101:
    CMP R12, R15
    JBE L100017546_106
    JMP L100017546_105     ; inserted

; Entry 100017546; block 102; address 1000185ba
L100017546_102:
    MOV R14, qword [RBP + -48]
    MOV EDI, R14D
    MOV R12, RCX
    MOV ESI, 3
    MOV R15, RAX
    CALL L100018d4a_0
    JMP L100017546_103     ; inserted

; Entry 100017546; block 103; address 1000185d1
L100017546_103:
    MOV RAX, qword [rel L__DATA___bss + 7632]
    ADD RAX, 10
    ADD RBX, qword [rel L__DATA___bss + 7640]
    SHR RAX, 3
    ADD RBX, RAX
    MOV qword [rel L__DATA___bss + 7640], RBX
    MOV qword [rel L__DATA___bss + 7632], 0
    MOV RDI, R15
    MOV ESI, R12D
    MOV EDX, 1
    CALL L100018ba3_0
    JMP L100017546_104     ; inserted

; Entry 100017546; block 104; address 10001860c
L100017546_104:
    JMP L100017546_119

; Entry 100017546; block 105; address 10001861a
L100017546_105:
    MOV RAX, qword [RBP + -48]
    LEA EDI, [RAX + 4]
    MOV ESI, 3
    CALL L100018d4a_0
    JMP L100017546_107     ; inserted

; Entry 100017546; block 106; address 1000186fe
L100017546_106:
    MOV R14, qword [RBP + -48]
    LEA EDI, [R14 + 2]
    MOV ESI, 3
    CALL L100018d4a_0
    JMP L100017546_120     ; inserted

; Entry 100017546; block 107; address 10001862b
L100017546_107:
    MOV R12D, dword [rel L__DATA___data + 4876]
    MOV EBX, dword [rel L__DATA___data + 4916]
    LEA EDI, [R12 + -256]
    MOV ESI, 5
    CALL L100018d4a_0
    JMP L100017546_108     ; inserted

; Entry 100017546; block 108; address 10001864a
L100017546_108:
    MOV dword [RBP + -56], EBX
    MOV EDI, EBX
    MOV ESI, 5
    CALL L100018d4a_0
    JMP L100017546_109     ; inserted

; Entry 100017546; block 109; address 100018659
L100017546_109:
    LEA EDI, [R14 + -3]
    MOV ESI, 4
    CALL L100018d4a_0
    JMP L100017546_110     ; inserted

; Entry 100017546; block 110; address 100018667
L100017546_110:
    TEST R14D, R14D
    LEA R13, [rel L__TEXT___const + 2736]
    LEA R15, [rel L__DATA___bss + 115056]
    JS L100017546_112
    JMP L100017546_111     ; inserted

; Entry 100017546; block 111; address 10001867a
L100017546_111:
    INC R14D
    XOR EBX, EBX
    JMP L100017546_114     ; inserted

; Entry 100017546; block 112; address 10001869c
L100017546_112:
    LEA R13, [rel L__DATA___bss + 14128]
    MOV RDI, R13
    MOV ESI, R12D
    CALL L10001938a_0
    JMP L100017546_115     ; inserted

; Entry 100017546; block 113; address 100018694
L100017546_113:
    INC RBX
    CMP R14, RBX
    JNE L100017546_114
    JMP L100017546_112     ; inserted

; Entry 100017546; block 114; address 10001867f
L100017546_114:
    MOVZX EAX, byte [RBX + R13]
    MOVZX EDI, word [R15 + RAX * 4 + 2]
    MOV ESI, 3
    CALL L100018d4a_0
    JMP L100017546_113     ; inserted

; Entry 100017546; block 115; address 1000186ae
L100017546_115:
    LEA RBX, [rel L__DATA___bss + 16432]
    MOV RDI, RBX
    MOV ESI, dword [RBP + -56]
    CALL L10001938a_0
    JMP L100017546_116     ; inserted

; Entry 100017546; block 116; address 1000186c0
L100017546_116:
    MOV RDI, R13
    MOV RSI, RBX
    CALL L100018df3_0
    JMP L100017546_117     ; inserted

; Entry 100017546; block 117; address 1000186cb
L100017546_117:
    MOV RAX, qword [rel L__DATA___bss + 14104]
    MOV RCX, qword [rel L__DATA___bss + 7632]
    ADD RAX, RCX
    ADD RAX, 3
    MOV RCX, RAX
    SHR RCX, 3
    ADD qword [rel L__DATA___bss + 7640], RCX
    AND EAX, 7
    MOV qword [rel L__DATA___bss + 7632], RAX
    JMP L100017546_118     ; inserted

; Entry 100017546; block 118; address 1000186f8
L100017546_118:
    MOV R14, qword [RBP + -48]
    JMP L100017546_119

; Entry 100017546; block 119; address 100018750
L100017546_119:
    CALL L100017ef9_0
    JMP L100017546_122     ; inserted

; Entry 100017546; block 120; address 100018710
L100017546_120:
    LEA RDI, [rel L__DATA___bss + 8832]
    LEA RSI, [rel L__DATA___bss + 7648]
    CALL L100018df3_0
    JMP L100017546_121     ; inserted

; Entry 100017546; block 121; address 100018723
L100017546_121:
    MOV RAX, qword [rel L__DATA___bss + 14112]
    MOV RCX, qword [rel L__DATA___bss + 7632]
    ADD RAX, RCX
    ADD RAX, 3
    MOV RCX, RAX
    SHR RCX, 3
    ADD qword [rel L__DATA___bss + 7640], RCX
    AND EAX, 7
    MOV qword [rel L__DATA___bss + 7632], RAX
    JMP L100017546_119     ; inserted

; Entry 100017546; block 122; address 100018755
L100017546_122:
    TEST R14D, R14D
    JE L100017546_124
    JMP L100017546_123     ; inserted

; Entry 100017546; block 123; address 10001875a
L100017546_123:
    CALL L100018f59_0
    JMP L100017546_125     ; inserted

; Entry 100017546; block 124; address 100018773
L100017546_124:
    MOV RAX, qword [rel L__DATA___bss + 7632]
    JMP L100017546_126     ; inserted

; Entry 100017546; block 125; address 10001875f
L100017546_125:
    MOV RAX, qword [rel L__DATA___bss + 7632]
    ADD RAX, 7
    MOV qword [rel L__DATA___bss + 7632], RAX
    JMP L100017546_126

; Entry 100017546; block 126; address 10001877a
L100017546_126:
    SHR RAX, 3
    ADD RAX, qword [rel L__DATA___bss + 7640]
    ADD RSP, 24
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x100017ab2
; ---------------------
; Entry 100017ab2; block 0; address 100017ab2
L100017ab2_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    PUSH RAX
    MOV qword [rel L__DATA___bss + 7616], RDI
    MOV qword [rel L__DATA___bss + 7624], RSI
    XOR EAX, EAX
    MOV qword [rel L__DATA___bss + 7632], RAX
    MOV qword [rel L__DATA___bss + 7640], RAX
    CMP word [rel L__DATA___bss + 7650], 0
    JE L100017ab2_2
    JMP L100017ab2_1     ; inserted

; Entry 100017ab2; block 1; address 100017ae8
L100017ab2_1:
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100017ab2; block 2; address 100017af7
L100017ab2_2:
    LEA R15, [rel L__DATA___bss + 7776]
    LEA R13, [rel L__DATA___data + 4592]
    XOR R14D, R14D
    JMP L100017ab2_8     ; inserted

; Entry 100017ab2; block 3; address 100017b1a
L100017ab2_3:
    MOV EBX, 1
    SHL EBX, CL
    MOVSXD R12, EAX
    LEA RAX, [rel L__DATA___bss + 7904]
    LEA RDI, [RAX + R12]
    TEST EBX, EBX
    MOV EAX, 1
    CMOVLE EBX, EAX
    MOV ESI, R14D
    MOV RDX, RBX
    CALL _memset
    JMP L100017ab2_5     ; inserted

; Entry 100017ab2; block 4; address 100017bb1
L100017ab2_4:
    INC R14
    CMP R14, 28
    JNE L100017ab2_8
    JMP L100017ab2_9     ; inserted

; Entry 100017ab2; block 5; address 100017b44
L100017ab2_5:
    PCMPEQD XMM4, XMM4
    LEA EAX, [RBX + 1]
    AND EAX, 4294967294
    DEC EBX
    MOVD XMM0, EBX
    PSHUFD XMM0, XMM0, 80
    MOVQ XMM1, R12
    MOV ECX, 2
    JMP L100017ab2_6     ; inserted

; Entry 100017ab2; block 6; address 100017b63
L100017ab2_6:
    MOVDQA XMM2, XMM1
    PSUBQ XMM1, XMM4
    MOV EDX, ECX
    ADD ECX, 18446744073709551614
    ADD EDX, EAX
    ADD EDX, 18446744073709551614
    CMP EDX, 2
    JNE L100017ab2_6
    JMP L100017ab2_7     ; inserted

; Entry 100017ab2; block 7; address 100017b7a
L100017ab2_7:
    NEG ECX
    MOVD XMM3, ECX
    PSHUFD XMM3, XMM3, 80
    POR XMM3, oword [rel L__TEXT___const + 2656]
    PMINUD XMM0, XMM3
    PCMPEQD XMM0, XMM3
    PXOR XMM0, XMM4
    PMOVSXDQ XMM0, XMM0
    BLENDVPD XMM1, XMM2
    PSHUFD XMM0, XMM1, 238
    PADDQ XMM0, XMM1
    MOVD EAX, XMM0
    JMP L100017ab2_4     ; inserted

; Entry 100017ab2; block 8; address 100017b08
L100017ab2_8:
    MOV dword [R15 + R14 * 4], EAX
    MOV ECX, dword [R13 + R14 * 4]
    CMP ECX, 31
    JE L100017ab2_4
    JMP L100017ab2_3     ; inserted

; Entry 100017ab2; block 9; address 100017bbe
L100017ab2_9:
    CDQE 
    LEA RCX, [rel L__DATA___bss + 7904]
    MOV byte [RAX + RCX-1], 28
    XOR R14D, R14D
    LEA R15, [rel L__DATA___bss + 8160]
    LEA R12, [rel L__DATA___data + 4720]
    XOR EAX, EAX
    JMP L100017ab2_15     ; inserted

; Entry 100017ab2; block 10; address 100017bf0
L100017ab2_10:
    MOV EBX, 1
    SHL EBX, CL
    MOVSXD R13, EAX
    LEA RAX, [rel L__DATA___bss + 8288]
    LEA RDI, [RAX + R13]
    TEST EBX, EBX
    MOV EAX, 1
    CMOVLE EBX, EAX
    MOV ESI, R14D
    MOV RDX, RBX
    CALL _memset
    JMP L100017ab2_12     ; inserted

; Entry 100017ab2; block 11; address 100017c87
L100017ab2_11:
    INC R14
    CMP R14, 16
    JNE L100017ab2_15
    JMP L100017ab2_16     ; inserted

; Entry 100017ab2; block 12; address 100017c1a
L100017ab2_12:
    PCMPEQD XMM4, XMM4
    LEA EAX, [RBX + 1]
    AND EAX, 4294967294
    DEC EBX
    MOVD XMM0, EBX
    PSHUFD XMM0, XMM0, 80
    MOVQ XMM1, R13
    MOV ECX, 2
    JMP L100017ab2_13     ; inserted

; Entry 100017ab2; block 13; address 100017c39
L100017ab2_13:
    MOVDQA XMM2, XMM1
    PSUBQ XMM1, XMM4
    MOV EDX, ECX
    ADD ECX, 18446744073709551614
    ADD EDX, EAX
    ADD EDX, 18446744073709551614
    CMP EDX, 2
    JNE L100017ab2_13
    JMP L100017ab2_14     ; inserted

; Entry 100017ab2; block 14; address 100017c50
L100017ab2_14:
    NEG ECX
    MOVD XMM3, ECX
    PSHUFD XMM3, XMM3, 80
    POR XMM3, oword [rel L__TEXT___const + 2656]
    PMINUD XMM0, XMM3
    PCMPEQD XMM0, XMM3
    PXOR XMM0, XMM4
    PMOVSXDQ XMM0, XMM0
    BLENDVPD XMM1, XMM2
    PSHUFD XMM0, XMM1, 238
    PADDQ XMM0, XMM1
    MOVD EAX, XMM0
    JMP L100017ab2_11     ; inserted

; Entry 100017ab2; block 15; address 100017bdf
L100017ab2_15:
    MOV dword [R15 + R14 * 4], EAX
    MOV ECX, dword [R12 + R14 * 4]
    CMP ECX, 31
    JE L100017ab2_11
    JMP L100017ab2_10     ; inserted

; Entry 100017ab2; block 16; address 100017c94
L100017ab2_16:
    SAR EAX, 7
    MOV R14D, 16
    JMP L100017ab2_22     ; inserted

; Entry 100017ab2; block 17; address 100017cb3
L100017ab2_17:
    ADD CL, 249
    MOV EBX, 1
    SHL EBX, CL
    MOVSXD R13, EAX
    LEA RAX, [rel L__DATA___bss + 8288]
    LEA RDI, [RAX + R13]
    ADD RDI, 256
    TEST EBX, EBX
    MOV EAX, 1
    CMOVLE EBX, EAX
    MOV ESI, R14D
    MOV RDX, RBX
    CALL _memset
    JMP L100017ab2_19     ; inserted

; Entry 100017ab2; block 18; address 100017d54
L100017ab2_18:
    INC R14
    CMP R14, 30
    JNE L100017ab2_22
    JMP L100017ab2_23     ; inserted

; Entry 100017ab2; block 19; address 100017ce7
L100017ab2_19:
    PCMPEQD XMM4, XMM4
    LEA EAX, [RBX + 1]
    AND EAX, 4294967294
    DEC EBX
    MOVD XMM0, EBX
    PSHUFD XMM0, XMM0, 80
    MOVQ XMM1, R13
    MOV ECX, 2
    JMP L100017ab2_20     ; inserted

; Entry 100017ab2; block 20; address 100017d06
L100017ab2_20:
    MOVDQA XMM2, XMM1
    PSUBQ XMM1, XMM4
    MOV EDX, ECX
    ADD ECX, 18446744073709551614
    ADD EDX, EAX
    ADD EDX, 18446744073709551614
    CMP EDX, 2
    JNE L100017ab2_20
    JMP L100017ab2_21     ; inserted

; Entry 100017ab2; block 21; address 100017d1d
L100017ab2_21:
    NEG ECX
    MOVD XMM3, ECX
    PSHUFD XMM3, XMM3, 80
    POR XMM3, oword [rel L__TEXT___const + 2656]
    PMINUD XMM0, XMM3
    PCMPEQD XMM0, XMM3
    PXOR XMM0, XMM4
    PMOVSXDQ XMM0, XMM0
    BLENDVPD XMM1, XMM2
    PSHUFD XMM0, XMM1, 238
    PADDQ XMM0, XMM1
    MOVD EAX, XMM0
    JMP L100017ab2_18     ; inserted

; Entry 100017ab2; block 22; address 100017c9d
L100017ab2_22:
    MOV ECX, EAX
    SHL ECX, 7
    MOV dword [R15 + R14 * 4], ECX
    MOV ECX, dword [R12 + R14 * 4]
    CMP ECX, 38
    JE L100017ab2_18
    JMP L100017ab2_17     ; inserted

; Entry 100017ab2; block 23; address 100017d61
L100017ab2_23:
    PXOR XMM0, XMM0
    MOVDQA oword [rel L__DATA___bss + 8816], XMM0
    MOVDQA oword [rel L__DATA___bss + 8800], XMM0
    XOR ECX, ECX
    LEA RAX, [rel L__DATA___bss + 8832]
    JMP L100017ab2_24     ; inserted

; Entry 100017ab2; block 24; address 100017d7e
L100017ab2_24:
    MOV word [RAX + RCX * 4 + 2], 8
    INC RCX
    CMP RCX, 144
    JNE L100017ab2_24
    JMP L100017ab2_25     ; inserted

; Entry 100017ab2; block 25; address 100017d91
L100017ab2_25:
    MOV word [rel L__DATA___bss + 8816], 144
    XOR ECX, ECX
    JMP L100017ab2_26     ; inserted

; Entry 100017ab2; block 26; address 100017d9c
L100017ab2_26:
    MOV word [RAX + RCX * 4 + 578], 9
    INC RCX
    CMP RCX, 112
    JNE L100017ab2_26
    JMP L100017ab2_27     ; inserted

; Entry 100017ab2; block 27; address 100017daf
L100017ab2_27:
    MOV word [rel L__DATA___bss + 8818], 112
    XOR ECX, ECX
    JMP L100017ab2_28     ; inserted

; Entry 100017ab2; block 28; address 100017dba
L100017ab2_28:
    MOV word [RAX + RCX * 4 + 1026], 7
    INC RCX
    CMP RCX, 24
    JNE L100017ab2_28
    JMP L100017ab2_29     ; inserted

; Entry 100017ab2; block 29; address 100017dcd
L100017ab2_29:
    MOV word [rel L__DATA___bss + 8814], 24
    XOR ECX, ECX
    JMP L100017ab2_30     ; inserted

; Entry 100017ab2; block 30; address 100017dd8
L100017ab2_30:
    MOV word [RAX + RCX * 4 + 1122], 8
    INC RCX
    CMP RCX, 8
    JNE L100017ab2_30
    JMP L100017ab2_31     ; inserted

; Entry 100017ab2; block 31; address 100017deb
L100017ab2_31:
    MOV word [rel L__DATA___bss + 8816], 152
    LEA RDI, [rel L__DATA___bss + 8832]
    MOV ESI, 287
    CALL L100017e51_0
    JMP L100017ab2_32     ; inserted

; Entry 100017ab2; block 32; address 100017e05
L100017ab2_32:
    XOR EAX, EAX
    LEA RCX, [rel L__DATA___bss + 7648]
    JMP L100017ab2_35     ; inserted

; Entry 100017ab2; block 33; address 100017e1e
L100017ab2_33:
    MOV EDI, ESI
    AND EDI, 1
    OR EDI, EBX
    SHR ESI, 1
    LEA EBX, [RDI + RDI]
    DEC EDX
    CMP EDX, 1
    JA L100017ab2_33
    JMP L100017ab2_34     ; inserted

; Entry 100017ab2; block 34; address 100017e31
L100017ab2_34:
    MOV word [RCX + RAX * 4], DI
    INC RAX
    CMP RAX, 30
    JNE L100017ab2_35
    JMP L100017ab2_36     ; inserted

; Entry 100017ab2; block 35; address 100017e0e
L100017ab2_35:
    MOV word [RCX + RAX * 4 + 2], 5
    MOV EDX, 6
    MOV ESI, EAX
    XOR EBX, EBX
    JMP L100017ab2_33     ; inserted

; Entry 100017ab2; block 36; address 100017e3e
L100017ab2_36:
    ADD RSP, 8
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    PUSH RBP
    MOV RBP, RSP
    MOVDQA XMM2, oword [rel L__TEXT___const + 416]
    MOVDQA XMM3, oword [rel L__TEXT___const + 432]
    MOVDQA XMM4, oword [rel L__TEXT___const + 448]
    MOVDQA XMM5, oword [rel L__TEXT___const + 464]
    MOV EAX, 7
    MOVDQA XMM8, oword [rel L__TEXT___const + 480]
    MOVDQA XMM0, oword [rel L__TEXT___const + 2672]
    LEA RCX, [rel L__DATA___bss + 14128]
    MOVDQA XMM9, oword [rel L__TEXT___const + 2688]
    JMP L100017ab2_53     ; inserted

; Entry 100017ab2; block 37; address 100017f73
L100017ab2_37:
    MOV word [RCX + RAX * 4 + -28], 0
    JMP L100017ab2_38     ; inserted

; Entry 100017ab2; block 38; address 100017f7a
L100017ab2_38:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ab2_40
    JMP L100017ab2_39     ; inserted

; Entry 100017ab2; block 39; address 100017f85
L100017ab2_39:
    MOV word [RCX + RAX * 4 + -24], 0
    JMP L100017ab2_40     ; inserted

; Entry 100017ab2; block 40; address 100017f8c
L100017ab2_40:
    MOVDQA XMM1, XMM4
    PXOR XMM1, XMM8
    MOVDQA XMM6, XMM0
    PCMPGTD XMM6, XMM1
    PCMPEQD XMM1, XMM0
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM6
    PSHUFD XMM7, XMM6, 245
    POR XMM7, XMM1
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ab2_42
    JMP L100017ab2_41     ; inserted

; Entry 100017ab2; block 41; address 100017fbe
L100017ab2_41:
    MOV word [RCX + RAX * 4 + -20], 0
    JMP L100017ab2_42     ; inserted

; Entry 100017ab2; block 42; address 100017fc5
L100017ab2_42:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ab2_44
    JMP L100017ab2_43     ; inserted

; Entry 100017ab2; block 43; address 100017fd0
L100017ab2_43:
    MOV word [RCX + RAX * 4 + -16], 0
    JMP L100017ab2_44     ; inserted

; Entry 100017ab2; block 44; address 100017fd7
L100017ab2_44:
    MOVDQA XMM1, XMM3
    PXOR XMM1, XMM8
    MOVDQA XMM6, XMM0
    PCMPGTD XMM6, XMM1
    PCMPEQD XMM1, XMM0
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM6
    PSHUFD XMM7, XMM6, 245
    POR XMM7, XMM1
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ab2_46
    JMP L100017ab2_45     ; inserted

; Entry 100017ab2; block 45; address 100018009
L100017ab2_45:
    MOV word [RCX + RAX * 4 + -12], 0
    JMP L100017ab2_46     ; inserted

; Entry 100017ab2; block 46; address 100018010
L100017ab2_46:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ab2_48
    JMP L100017ab2_47     ; inserted

; Entry 100017ab2; block 47; address 10001801b
L100017ab2_47:
    MOV word [RCX + RAX * 4 + -8], 0
    JMP L100017ab2_48     ; inserted

; Entry 100017ab2; block 48; address 100018022
L100017ab2_48:
    MOVDQA XMM1, XMM2
    PXOR XMM1, XMM8
    MOVDQA XMM6, XMM0
    PCMPGTD XMM6, XMM1
    PCMPEQD XMM1, XMM0
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM6
    PSHUFD XMM7, XMM6, 245
    POR XMM7, XMM1
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ab2_50
    JMP L100017ab2_49     ; inserted

; Entry 100017ab2; block 49; address 100018054
L100017ab2_49:
    MOV word [RCX + RAX * 4 + -4], 0
    JMP L100017ab2_50     ; inserted

; Entry 100017ab2; block 50; address 10001805b
L100017ab2_50:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ab2_52
    JMP L100017ab2_51     ; inserted

; Entry 100017ab2; block 51; address 100018066
L100017ab2_51:
    MOV word [RCX + RAX * 4], 0
    JMP L100017ab2_52     ; inserted

; Entry 100017ab2; block 52; address 10001806c
L100017ab2_52:
    PADDQ XMM5, XMM9
    PADDQ XMM4, XMM9
    PADDQ XMM3, XMM9
    PADDQ XMM2, XMM9
    ADD RAX, 8
    CMP RAX, 295
    JNE L100017ab2_53
    JMP L100017ab2_54     ; inserted

; Entry 100017ab2; block 53; address 100017f43
L100017ab2_53:
    MOVDQA XMM7, XMM5
    PXOR XMM7, XMM8
    MOVDQA XMM6, XMM0
    PCMPGTD XMM6, XMM7
    PCMPEQD XMM7, XMM0
    PSHUFD XMM1, XMM7, 245
    PAND XMM1, XMM6
    PSHUFD XMM7, XMM6, 245
    POR XMM7, XMM1
    MOVD EDX, XMM7
    TEST DL, 1
    JE L100017ab2_38
    JMP L100017ab2_37     ; inserted

; Entry 100017ab2; block 54; address 100018090
L100017ab2_54:
    MOVDQA XMM2, oword [rel L__TEXT___const + 416]
    MOVDQA XMM3, oword [rel L__TEXT___const + 432]
    MOVDQA XMM4, oword [rel L__TEXT___const + 448]
    MOVDQA XMM5, oword [rel L__TEXT___const + 464]
    XOR EAX, EAX
    MOVDQA XMM6, oword [rel L__TEXT___const + 2704]
    LEA RCX, [rel L__DATA___bss + 16432]
    JMP L100017ab2_71     ; inserted

; Entry 100017ab2; block 55; address 1000180f1
L100017ab2_55:
    MOV word [RCX + RAX * 4], 0
    JMP L100017ab2_56     ; inserted

; Entry 100017ab2; block 56; address 1000180f7
L100017ab2_56:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ab2_58
    JMP L100017ab2_57     ; inserted

; Entry 100017ab2; block 57; address 100018102
L100017ab2_57:
    MOV word [RCX + RAX * 4 + 4], 0
    JMP L100017ab2_58     ; inserted

; Entry 100017ab2; block 58; address 100018109
L100017ab2_58:
    MOVDQA XMM0, XMM4
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ab2_60
    JMP L100017ab2_59     ; inserted

; Entry 100017ab2; block 59; address 10001813b
L100017ab2_59:
    MOV word [RCX + RAX * 4 + 8], 0
    JMP L100017ab2_60     ; inserted

; Entry 100017ab2; block 60; address 100018142
L100017ab2_60:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ab2_62
    JMP L100017ab2_61     ; inserted

; Entry 100017ab2; block 61; address 10001814d
L100017ab2_61:
    MOV word [RCX + RAX * 4 + 12], 0
    JMP L100017ab2_62     ; inserted

; Entry 100017ab2; block 62; address 100018154
L100017ab2_62:
    MOVDQA XMM0, XMM3
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ab2_64
    JMP L100017ab2_63     ; inserted

; Entry 100017ab2; block 63; address 100018186
L100017ab2_63:
    MOV word [RCX + RAX * 4 + 16], 0
    JMP L100017ab2_64     ; inserted

; Entry 100017ab2; block 64; address 10001818d
L100017ab2_64:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ab2_66
    JMP L100017ab2_65     ; inserted

; Entry 100017ab2; block 65; address 100018198
L100017ab2_65:
    MOV word [RCX + RAX * 4 + 20], 0
    JMP L100017ab2_66     ; inserted

; Entry 100017ab2; block 66; address 10001819f
L100017ab2_66:
    MOVDQA XMM0, XMM2
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ab2_68
    JMP L100017ab2_67     ; inserted

; Entry 100017ab2; block 67; address 1000181d1
L100017ab2_67:
    MOV word [RCX + RAX * 4 + 24], 0
    JMP L100017ab2_68     ; inserted

; Entry 100017ab2; block 68; address 1000181d8
L100017ab2_68:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ab2_70
    JMP L100017ab2_69     ; inserted

; Entry 100017ab2; block 69; address 1000181e3
L100017ab2_69:
    MOV word [RCX + RAX * 4 + 28], 0
    JMP L100017ab2_70     ; inserted

; Entry 100017ab2; block 70; address 1000181ea
L100017ab2_70:
    ADD RAX, 8
    PADDQ XMM5, XMM9
    PADDQ XMM4, XMM9
    PADDQ XMM3, XMM9
    PADDQ XMM2, XMM9
    CMP RAX, 32
    JNE L100017ab2_71
    JMP L100017ab2_72     ; inserted

; Entry 100017ab2; block 71; address 1000180c1
L100017ab2_71:
    MOVDQA XMM0, XMM5
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    MOVD EDX, XMM7
    TEST DL, 1
    JE L100017ab2_56
    JMP L100017ab2_55     ; inserted

; Entry 100017ab2; block 72; address 10001820c
L100017ab2_72:
    MOVDQA XMM2, oword [rel L__TEXT___const + 416]
    MOVDQA XMM3, oword [rel L__TEXT___const + 432]
    MOVDQA XMM4, oword [rel L__TEXT___const + 448]
    MOVDQA XMM5, oword [rel L__TEXT___const + 464]
    MOV EAX, 7
    MOVDQA XMM6, oword [rel L__TEXT___const + 2720]
    LEA RCX, [rel L__DATA___bss + 115056]
    JMP L100017ab2_89     ; inserted

; Entry 100017ab2; block 73; address 100018270
L100017ab2_73:
    MOV word [RCX + RAX * 4 + -28], 0
    JMP L100017ab2_74     ; inserted

; Entry 100017ab2; block 74; address 100018277
L100017ab2_74:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ab2_76
    JMP L100017ab2_75     ; inserted

; Entry 100017ab2; block 75; address 100018282
L100017ab2_75:
    MOV word [RCX + RAX * 4 + -24], 0
    JMP L100017ab2_76     ; inserted

; Entry 100017ab2; block 76; address 100018289
L100017ab2_76:
    MOVDQA XMM0, XMM4
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ab2_78
    JMP L100017ab2_77     ; inserted

; Entry 100017ab2; block 77; address 1000182bb
L100017ab2_77:
    MOV word [RCX + RAX * 4 + -20], 0
    JMP L100017ab2_78     ; inserted

; Entry 100017ab2; block 78; address 1000182c2
L100017ab2_78:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ab2_80
    JMP L100017ab2_79     ; inserted

; Entry 100017ab2; block 79; address 1000182cd
L100017ab2_79:
    MOV word [RCX + RAX * 4 + -16], 0
    JMP L100017ab2_80     ; inserted

; Entry 100017ab2; block 80; address 1000182d4
L100017ab2_80:
    MOVDQA XMM0, XMM3
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ab2_82
    JMP L100017ab2_81     ; inserted

; Entry 100017ab2; block 81; address 100018306
L100017ab2_81:
    MOV word [RCX + RAX * 4 + -12], 0
    JMP L100017ab2_82     ; inserted

; Entry 100017ab2; block 82; address 10001830d
L100017ab2_82:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ab2_84
    JMP L100017ab2_83     ; inserted

; Entry 100017ab2; block 83; address 100018318
L100017ab2_83:
    MOV word [RCX + RAX * 4 + -8], 0
    JMP L100017ab2_84     ; inserted

; Entry 100017ab2; block 84; address 10001831f
L100017ab2_84:
    MOVDQA XMM0, XMM2
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ab2_86
    JMP L100017ab2_85     ; inserted

; Entry 100017ab2; block 85; address 100018351
L100017ab2_85:
    MOV word [RCX + RAX * 4 + -4], 0
    JMP L100017ab2_86     ; inserted

; Entry 100017ab2; block 86; address 100018358
L100017ab2_86:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ab2_88
    JMP L100017ab2_87     ; inserted

; Entry 100017ab2; block 87; address 100018363
L100017ab2_87:
    MOV word [RCX + RAX * 4], 0
    JMP L100017ab2_88     ; inserted

; Entry 100017ab2; block 88; address 100018369
L100017ab2_88:
    PADDQ XMM5, XMM9
    PADDQ XMM4, XMM9
    PADDQ XMM3, XMM9
    PADDQ XMM2, XMM9
    ADD RAX, 8
    CMP RAX, 31
    JNE L100017ab2_89
    JMP L100017ab2_90     ; inserted

; Entry 100017ab2; block 89; address 100018240
L100017ab2_89:
    MOVDQA XMM0, XMM5
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    MOVD EDX, XMM7
    TEST DL, 1
    JE L100017ab2_74
    JMP L100017ab2_73     ; inserted

; Entry 100017ab2; block 90; address 10001838b
L100017ab2_90:
    MOV word [rel L__DATA___bss + 15152], 1
    XOR EAX, EAX
    MOV qword [rel L__DATA___bss + 14112], RAX
    MOV qword [rel L__DATA___bss + 14104], RAX
    MOV dword [rel L__DATA___bss + 14096], EAX
    MOV dword [rel L__DATA___bss + 115008], EAX
    MOV dword [rel L__DATA___bss + 49456], EAX
    MOV byte [rel L__DATA___bss + 9984], 0
    MOV byte [rel L__DATA___bss + 115012], 1
    POP RBP
    RET 



; ---------------------
; Function: 0x100017e51
; ---------------------
; Entry 100017e51; block 0; address 100017e51
L100017e51_0:
    PUSH RBP
    MOV RBP, RSP
    SUB RSP, 48
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -8], RAX
    XOR EAX, EAX
    LEA R8, [rel L__DATA___bss + 8800]
    XOR EDX, EDX
    JMP L100017e51_1     ; inserted

; Entry 100017e51; block 1; address 100017e72
L100017e51_1:
    AND EDX, 65534
    MOVZX ECX, word [RAX + R8]
    ADD ECX, EDX
    ADD ECX, ECX
    MOV word [RBP + RAX-1], CX
    ADD RAX, 2
    MOV EDX, ECX
    CMP RAX, 30
    JNE L100017e51_1
    JMP L100017e51_2     ; inserted

; Entry 100017e51; block 2; address 100017e92
L100017e51_2:
    TEST ESI, ESI
    JS L100017e51_4
    JMP L100017e51_3     ; inserted

; Entry 100017e51; block 3; address 100017e96
L100017e51_3:
    INC ESI
    XOR R8D, R8D
    JMP L100017e51_9     ; inserted

; Entry 100017e51; block 4; address 100017ede
L100017e51_4:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -8]
    JNE L100017e51_11
    JMP L100017e51_10     ; inserted

; Entry 100017e51; block 5; address 100017ea5
L100017e51_5:
    MOV R9D, ECX
    MOVZX EAX, word [RBP + R9 * 2 + -48]
    LEA EDX, [RAX + 1]
    MOV word [RBP + R9 * 2 + -48], DX
    INC ECX
    XOR R9D, R9D
    JMP L100017e51_7     ; inserted

; Entry 100017e51; block 6; address 100017ed6
L100017e51_6:
    INC R8
    CMP R8, RSI
    JNE L100017e51_9
    JMP L100017e51_4     ; inserted

; Entry 100017e51; block 7; address 100017ebc
L100017e51_7:
    MOV EDX, EAX
    AND EDX, 1
    OR EDX, R9D
    SHR EAX, 1
    LEA R9D, [RDX + RDX]
    DEC ECX
    CMP ECX, 1
    JG L100017e51_7
    JMP L100017e51_8     ; inserted

; Entry 100017e51; block 8; address 100017ed1
L100017e51_8:
    MOV word [RDI + R8 * 4], DX
    JMP L100017e51_6     ; inserted

; Entry 100017e51; block 9; address 100017e9b
L100017e51_9:
    MOVZX ECX, word [RDI + R8 * 4 + 2]
    TEST ECX, ECX
    JE L100017e51_6
    JMP L100017e51_5     ; inserted

; Entry 100017e51; block 10; address 100017eee
L100017e51_10:
    ADD RSP, 48
    POP RBP
    RET 

; Entry 100017e51; block 11; address 100017ef4
L100017e51_11:
    CALL ___stack_chk_fail



; ---------------------
; Function: 0x100017ef9
; ---------------------
; Entry 100017ef9; block 0; address 100017ef9
L100017ef9_0:
    PUSH RBP
    MOV RBP, RSP
    MOVDQA XMM2, oword [rel L__TEXT___const + 416]
    MOVDQA XMM3, oword [rel L__TEXT___const + 432]
    MOVDQA XMM4, oword [rel L__TEXT___const + 448]
    MOVDQA XMM5, oword [rel L__TEXT___const + 464]
    MOV EAX, 7
    MOVDQA XMM8, oword [rel L__TEXT___const + 480]
    MOVDQA XMM0, oword [rel L__TEXT___const + 2672]
    LEA RCX, [rel L__DATA___bss + 14128]
    MOVDQA XMM9, oword [rel L__TEXT___const + 2688]
    JMP L100017ef9_17     ; inserted

; Entry 100017ef9; block 1; address 100017f73
L100017ef9_1:
    MOV word [RCX + RAX * 4 + -28], 0
    JMP L100017ef9_2     ; inserted

; Entry 100017ef9; block 2; address 100017f7a
L100017ef9_2:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ef9_4
    JMP L100017ef9_3     ; inserted

; Entry 100017ef9; block 3; address 100017f85
L100017ef9_3:
    MOV word [RCX + RAX * 4 + -24], 0
    JMP L100017ef9_4     ; inserted

; Entry 100017ef9; block 4; address 100017f8c
L100017ef9_4:
    MOVDQA XMM1, XMM4
    PXOR XMM1, XMM8
    MOVDQA XMM6, XMM0
    PCMPGTD XMM6, XMM1
    PCMPEQD XMM1, XMM0
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM6
    PSHUFD XMM7, XMM6, 245
    POR XMM7, XMM1
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ef9_6
    JMP L100017ef9_5     ; inserted

; Entry 100017ef9; block 5; address 100017fbe
L100017ef9_5:
    MOV word [RCX + RAX * 4 + -20], 0
    JMP L100017ef9_6     ; inserted

; Entry 100017ef9; block 6; address 100017fc5
L100017ef9_6:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ef9_8
    JMP L100017ef9_7     ; inserted

; Entry 100017ef9; block 7; address 100017fd0
L100017ef9_7:
    MOV word [RCX + RAX * 4 + -16], 0
    JMP L100017ef9_8     ; inserted

; Entry 100017ef9; block 8; address 100017fd7
L100017ef9_8:
    MOVDQA XMM1, XMM3
    PXOR XMM1, XMM8
    MOVDQA XMM6, XMM0
    PCMPGTD XMM6, XMM1
    PCMPEQD XMM1, XMM0
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM6
    PSHUFD XMM7, XMM6, 245
    POR XMM7, XMM1
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ef9_10
    JMP L100017ef9_9     ; inserted

; Entry 100017ef9; block 9; address 100018009
L100017ef9_9:
    MOV word [RCX + RAX * 4 + -12], 0
    JMP L100017ef9_10     ; inserted

; Entry 100017ef9; block 10; address 100018010
L100017ef9_10:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ef9_12
    JMP L100017ef9_11     ; inserted

; Entry 100017ef9; block 11; address 10001801b
L100017ef9_11:
    MOV word [RCX + RAX * 4 + -8], 0
    JMP L100017ef9_12     ; inserted

; Entry 100017ef9; block 12; address 100018022
L100017ef9_12:
    MOVDQA XMM1, XMM2
    PXOR XMM1, XMM8
    MOVDQA XMM6, XMM0
    PCMPGTD XMM6, XMM1
    PCMPEQD XMM1, XMM0
    PSHUFD XMM1, XMM1, 245
    PAND XMM1, XMM6
    PSHUFD XMM7, XMM6, 245
    POR XMM7, XMM1
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ef9_14
    JMP L100017ef9_13     ; inserted

; Entry 100017ef9; block 13; address 100018054
L100017ef9_13:
    MOV word [RCX + RAX * 4 + -4], 0
    JMP L100017ef9_14     ; inserted

; Entry 100017ef9; block 14; address 10001805b
L100017ef9_14:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ef9_16
    JMP L100017ef9_15     ; inserted

; Entry 100017ef9; block 15; address 100018066
L100017ef9_15:
    MOV word [RCX + RAX * 4], 0
    JMP L100017ef9_16     ; inserted

; Entry 100017ef9; block 16; address 10001806c
L100017ef9_16:
    PADDQ XMM5, XMM9
    PADDQ XMM4, XMM9
    PADDQ XMM3, XMM9
    PADDQ XMM2, XMM9
    ADD RAX, 8
    CMP RAX, 295
    JNE L100017ef9_17
    JMP L100017ef9_18     ; inserted

; Entry 100017ef9; block 17; address 100017f43
L100017ef9_17:
    MOVDQA XMM7, XMM5
    PXOR XMM7, XMM8
    MOVDQA XMM6, XMM0
    PCMPGTD XMM6, XMM7
    PCMPEQD XMM7, XMM0
    PSHUFD XMM1, XMM7, 245
    PAND XMM1, XMM6
    PSHUFD XMM7, XMM6, 245
    POR XMM7, XMM1
    MOVD EDX, XMM7
    TEST DL, 1
    JE L100017ef9_2
    JMP L100017ef9_1     ; inserted

; Entry 100017ef9; block 18; address 100018090
L100017ef9_18:
    MOVDQA XMM2, oword [rel L__TEXT___const + 416]
    MOVDQA XMM3, oword [rel L__TEXT___const + 432]
    MOVDQA XMM4, oword [rel L__TEXT___const + 448]
    MOVDQA XMM5, oword [rel L__TEXT___const + 464]
    XOR EAX, EAX
    MOVDQA XMM6, oword [rel L__TEXT___const + 2704]
    LEA RCX, [rel L__DATA___bss + 16432]
    JMP L100017ef9_35     ; inserted

; Entry 100017ef9; block 19; address 1000180f1
L100017ef9_19:
    MOV word [RCX + RAX * 4], 0
    JMP L100017ef9_20     ; inserted

; Entry 100017ef9; block 20; address 1000180f7
L100017ef9_20:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ef9_22
    JMP L100017ef9_21     ; inserted

; Entry 100017ef9; block 21; address 100018102
L100017ef9_21:
    MOV word [RCX + RAX * 4 + 4], 0
    JMP L100017ef9_22     ; inserted

; Entry 100017ef9; block 22; address 100018109
L100017ef9_22:
    MOVDQA XMM0, XMM4
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ef9_24
    JMP L100017ef9_23     ; inserted

; Entry 100017ef9; block 23; address 10001813b
L100017ef9_23:
    MOV word [RCX + RAX * 4 + 8], 0
    JMP L100017ef9_24     ; inserted

; Entry 100017ef9; block 24; address 100018142
L100017ef9_24:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ef9_26
    JMP L100017ef9_25     ; inserted

; Entry 100017ef9; block 25; address 10001814d
L100017ef9_25:
    MOV word [RCX + RAX * 4 + 12], 0
    JMP L100017ef9_26     ; inserted

; Entry 100017ef9; block 26; address 100018154
L100017ef9_26:
    MOVDQA XMM0, XMM3
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ef9_28
    JMP L100017ef9_27     ; inserted

; Entry 100017ef9; block 27; address 100018186
L100017ef9_27:
    MOV word [RCX + RAX * 4 + 16], 0
    JMP L100017ef9_28     ; inserted

; Entry 100017ef9; block 28; address 10001818d
L100017ef9_28:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ef9_30
    JMP L100017ef9_29     ; inserted

; Entry 100017ef9; block 29; address 100018198
L100017ef9_29:
    MOV word [RCX + RAX * 4 + 20], 0
    JMP L100017ef9_30     ; inserted

; Entry 100017ef9; block 30; address 10001819f
L100017ef9_30:
    MOVDQA XMM0, XMM2
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ef9_32
    JMP L100017ef9_31     ; inserted

; Entry 100017ef9; block 31; address 1000181d1
L100017ef9_31:
    MOV word [RCX + RAX * 4 + 24], 0
    JMP L100017ef9_32     ; inserted

; Entry 100017ef9; block 32; address 1000181d8
L100017ef9_32:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ef9_34
    JMP L100017ef9_33     ; inserted

; Entry 100017ef9; block 33; address 1000181e3
L100017ef9_33:
    MOV word [RCX + RAX * 4 + 28], 0
    JMP L100017ef9_34     ; inserted

; Entry 100017ef9; block 34; address 1000181ea
L100017ef9_34:
    ADD RAX, 8
    PADDQ XMM5, XMM9
    PADDQ XMM4, XMM9
    PADDQ XMM3, XMM9
    PADDQ XMM2, XMM9
    CMP RAX, 32
    JNE L100017ef9_35
    JMP L100017ef9_36     ; inserted

; Entry 100017ef9; block 35; address 1000180c1
L100017ef9_35:
    MOVDQA XMM0, XMM5
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    MOVD EDX, XMM7
    TEST DL, 1
    JE L100017ef9_20
    JMP L100017ef9_19     ; inserted

; Entry 100017ef9; block 36; address 10001820c
L100017ef9_36:
    MOVDQA XMM2, oword [rel L__TEXT___const + 416]
    MOVDQA XMM3, oword [rel L__TEXT___const + 432]
    MOVDQA XMM4, oword [rel L__TEXT___const + 448]
    MOVDQA XMM5, oword [rel L__TEXT___const + 464]
    MOV EAX, 7
    MOVDQA XMM6, oword [rel L__TEXT___const + 2720]
    LEA RCX, [rel L__DATA___bss + 115056]
    JMP L100017ef9_53     ; inserted

; Entry 100017ef9; block 37; address 100018270
L100017ef9_37:
    MOV word [RCX + RAX * 4 + -28], 0
    JMP L100017ef9_38     ; inserted

; Entry 100017ef9; block 38; address 100018277
L100017ef9_38:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ef9_40
    JMP L100017ef9_39     ; inserted

; Entry 100017ef9; block 39; address 100018282
L100017ef9_39:
    MOV word [RCX + RAX * 4 + -24], 0
    JMP L100017ef9_40     ; inserted

; Entry 100017ef9; block 40; address 100018289
L100017ef9_40:
    MOVDQA XMM0, XMM4
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ef9_42
    JMP L100017ef9_41     ; inserted

; Entry 100017ef9; block 41; address 1000182bb
L100017ef9_41:
    MOV word [RCX + RAX * 4 + -20], 0
    JMP L100017ef9_42     ; inserted

; Entry 100017ef9; block 42; address 1000182c2
L100017ef9_42:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ef9_44
    JMP L100017ef9_43     ; inserted

; Entry 100017ef9; block 43; address 1000182cd
L100017ef9_43:
    MOV word [RCX + RAX * 4 + -16], 0
    JMP L100017ef9_44     ; inserted

; Entry 100017ef9; block 44; address 1000182d4
L100017ef9_44:
    MOVDQA XMM0, XMM3
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ef9_46
    JMP L100017ef9_45     ; inserted

; Entry 100017ef9; block 45; address 100018306
L100017ef9_45:
    MOV word [RCX + RAX * 4 + -12], 0
    JMP L100017ef9_46     ; inserted

; Entry 100017ef9; block 46; address 10001830d
L100017ef9_46:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ef9_48
    JMP L100017ef9_47     ; inserted

; Entry 100017ef9; block 47; address 100018318
L100017ef9_47:
    MOV word [RCX + RAX * 4 + -8], 0
    JMP L100017ef9_48     ; inserted

; Entry 100017ef9; block 48; address 10001831f
L100017ef9_48:
    MOVDQA XMM0, XMM2
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    PEXTRB EDX, XMM7, 0
    TEST DL, 1
    JE L100017ef9_50
    JMP L100017ef9_49     ; inserted

; Entry 100017ef9; block 49; address 100018351
L100017ef9_49:
    MOV word [RCX + RAX * 4 + -4], 0
    JMP L100017ef9_50     ; inserted

; Entry 100017ef9; block 50; address 100018358
L100017ef9_50:
    PEXTRB EDX, XMM7, 8
    TEST DL, 1
    JE L100017ef9_52
    JMP L100017ef9_51     ; inserted

; Entry 100017ef9; block 51; address 100018363
L100017ef9_51:
    MOV word [RCX + RAX * 4], 0
    JMP L100017ef9_52     ; inserted

; Entry 100017ef9; block 52; address 100018369
L100017ef9_52:
    PADDQ XMM5, XMM9
    PADDQ XMM4, XMM9
    PADDQ XMM3, XMM9
    PADDQ XMM2, XMM9
    ADD RAX, 8
    CMP RAX, 31
    JNE L100017ef9_53
    JMP L100017ef9_54     ; inserted

; Entry 100017ef9; block 53; address 100018240
L100017ef9_53:
    MOVDQA XMM0, XMM5
    PXOR XMM0, XMM8
    MOVDQA XMM1, XMM6
    PCMPGTD XMM1, XMM0
    PCMPEQD XMM0, XMM6
    PSHUFD XMM0, XMM0, 245
    PAND XMM0, XMM1
    PSHUFD XMM7, XMM1, 245
    POR XMM7, XMM0
    MOVD EDX, XMM7
    TEST DL, 1
    JE L100017ef9_38
    JMP L100017ef9_37     ; inserted

; Entry 100017ef9; block 54; address 10001838b
L100017ef9_54:
    MOV word [rel L__DATA___bss + 15152], 1
    XOR EAX, EAX
    MOV qword [rel L__DATA___bss + 14112], RAX
    MOV qword [rel L__DATA___bss + 14104], RAX
    MOV dword [rel L__DATA___bss + 14096], EAX
    MOV dword [rel L__DATA___bss + 115008], EAX
    MOV dword [rel L__DATA___bss + 49456], EAX
    MOV byte [rel L__DATA___bss + 9984], 0
    MOV byte [rel L__DATA___bss + 115012], 1
    POP RBP
    RET 



; ---------------------
; Function: 0x1000183c6
; ---------------------
; Entry 1000183c6; block 0; address 1000183c6
L1000183c6_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 24
    MOV EBX, EDX
    MOV R15, RSI
    MOV qword [RBP + -56], RDI
    MOV AL, byte [rel L__DATA___bss + 9984]
    MOV ECX, dword [rel L__DATA___bss + 14096]
    LEA RDX, [rel L__DATA___bss + 10000]
    MOV byte [RCX + RDX], AL
    MOV RAX, qword [rel L__DATA___bss + 7616]
    CMP word [RAX], 18446744073709551615
    JNE L1000183c6_2
    JMP L1000183c6_1     ; inserted

; Entry 1000183c6; block 1; address 100018403
L1000183c6_1:
    MOV EDX, 4093624447
    XOR ESI, ESI
    LEA RCX, [rel L__DATA___bss + 14128]
    JMP L1000183c6_6     ; inserted

; Entry 1000183c6; block 2; address 100018466
L1000183c6_2:
    LEA RDI, [rel L__DATA___data + 4840]
    CALL L100018794_0
    JMP L1000183c6_11     ; inserted

; Entry 1000183c6; block 3; address 100018416
L1000183c6_3:
    CMP word [RSI + RCX], 0
    JNE L1000183c6_5
    JMP L1000183c6_4     ; inserted

; Entry 1000183c6; block 4; address 10001841d
L1000183c6_4:
    SHR RDX, 1
    ADD RSI, 4
    CMP RSI, 128
    JNE L1000183c6_6
    JMP L1000183c6_7     ; inserted

; Entry 1000183c6; block 5; address 100018461
L1000183c6_5:
    MOV word [RAX], 0
    JMP L1000183c6_2     ; inserted

; Entry 1000183c6; block 6; address 100018411
L1000183c6_6:
    TEST DL, 1
    JE L1000183c6_4
    JMP L1000183c6_3     ; inserted

; Entry 1000183c6; block 7; address 10001842d
L1000183c6_7:
    MOV word [RAX], 1
    MOVZX EDX, word [rel L__DATA___bss + 14168]
    OR DX, word [rel L__DATA___bss + 14164]
    OR DX, word [rel L__DATA___bss + 14180]
    JNE L1000183c6_2
    JMP L1000183c6_8     ; inserted

; Entry 1000183c6; block 8; address 100018449
L1000183c6_8:
    MOV EDX, 32
    JMP L1000183c6_10     ; inserted

; Entry 1000183c6; block 9; address 100018455
L1000183c6_9:
    INC RDX
    CMP RDX, 256
    JNE L1000183c6_10
    JMP L1000183c6_5     ; inserted

; Entry 1000183c6; block 10; address 10001844e
L1000183c6_10:
    CMP word [RCX + RDX * 4], 0
    JNE L1000183c6_2
    JMP L1000183c6_9     ; inserted

; Entry 1000183c6; block 11; address 100018472
L1000183c6_11:
    LEA RDI, [rel L__DATA___data + 4880]
    CALL L100018794_0
    JMP L1000183c6_12     ; inserted

; Entry 1000183c6; block 12; address 10001847e
L1000183c6_12:
    MOV ESI, dword [rel L__DATA___data + 4876]
    LEA RDI, [rel L__DATA___bss + 14128]
    CALL L1000192a3_0
    JMP L1000183c6_13     ; inserted

; Entry 1000183c6; block 13; address 100018490
L1000183c6_13:
    MOV ESI, dword [rel L__DATA___data + 4916]
    LEA RDI, [rel L__DATA___bss + 16432]
    CALL L1000192a3_0
    JMP L1000183c6_14     ; inserted

; Entry 1000183c6; block 14; address 1000184a2
L1000183c6_14:
    LEA RDI, [rel L__DATA___data + 4920]
    CALL L100018794_0
    JMP L1000183c6_15     ; inserted

; Entry 1000183c6; block 15; address 1000184ae
L1000183c6_15:
    MOV R14D, 18
    LEA RCX, [rel L__TEXT___const + 2736]
    LEA RDX, [rel L__DATA___bss + 115056]
    MOV qword [RBP + -48], RBX
    JMP L1000183c6_18     ; inserted

; Entry 1000183c6; block 16; address 1000184d5
L1000183c6_16:
    LEA EAX, [R14 + -1]
    CMP R14D, 3
    MOV R14D, EAX
    JA L1000183c6_18
    JMP L1000183c6_19     ; inserted

; Entry 1000183c6; block 17; address 1000184ed
L1000183c6_17:
    MOV RBX, R15
    JMP L1000183c6_20     ; inserted

; Entry 1000183c6; block 18; address 1000184c6
L1000183c6_18:
    MOV EAX, R14D
    MOVZX EAX, byte [RAX + RCX]
    CMP word [RDX + RAX * 4 + 2], 0
    JNE L1000183c6_17
    JMP L1000183c6_16     ; inserted

; Entry 1000183c6; block 19; address 1000184e2
L1000183c6_19:
    MOV RBX, R15
    MOV R14D, 2
    JMP L1000183c6_20

; Entry 1000183c6; block 20; address 1000184f0
L1000183c6_20:
    LEA EAX, [R14 + R14 * 2]
    ADD EAX, 17
    CDQE 
    MOV RCX, qword [rel L__DATA___bss + 14104]
    LEA RDX, [RCX + RAX]
    LEA R15, [RCX + RAX]
    ADD R15, 10
    SHR R15, 3
    MOV R12, qword [rel L__DATA___bss + 14112]
    ADD R12, 10
    SHR R12, 3
    CMP R12, R15
    MOV R13, R12
    CMOVA R13, R15
    MOV qword [rel L__DATA___bss + 14104], RDX
    MOV RAX, qword [rel L__DATA___bss + 7632]
    OR RAX, qword [rel L__DATA___bss + 7640]
    JNE L1000183c6_22
    JMP L1000183c6_21     ; inserted

; Entry 1000183c6; block 21; address 100018540
L1000183c6_21:
    CMP qword [rel L__DATA___bss + 7624], 0
    JE L1000183c6_22
    JMP L1000183c6_23     ; inserted

; Entry 1000183c6; block 22; address 1000185a5
L1000183c6_22:
    MOV RAX, qword [RBP + -56]
    TEST RAX, RAX
    JE L1000183c6_33
    JMP L1000183c6_32     ; inserted

; Entry 1000183c6; block 23; address 10001854a
L1000183c6_23:
    CMP dword [RBP + -48], 0
    JE L1000183c6_22
    JMP L1000183c6_24     ; inserted

; Entry 1000183c6; block 24; address 100018550
L1000183c6_24:
    CMP R13, RBX
    JB L1000183c6_22
    JMP L1000183c6_25     ; inserted

; Entry 1000183c6; block 25; address 100018555
L1000183c6_25:
    CALL L1000106ad_0
    JMP L1000183c6_26     ; inserted

; Entry 1000183c6; block 26; address 10001855a
L1000183c6_26:
    TEST EAX, EAX
    JE L1000183c6_22
    JMP L1000183c6_27     ; inserted

; Entry 1000183c6; block 27; address 10001855e
L1000183c6_27:
    LEA RAX, [rel L__DATA___common + 280]
    CMP dword [RAX], 0
    JNE L1000183c6_22
    JMP L1000183c6_28     ; inserted

; Entry 1000183c6; block 28; address 10001856a
L1000183c6_28:
    MOV RDI, qword [RBP + -56]
    TEST RDI, RDI
    JNE L1000183c6_30
    JMP L1000183c6_29     ; inserted

; Entry 1000183c6; block 29; address 100018573
L1000183c6_29:
    LEA RDI, [rel L__TEXT___cstring_38353]
    CALL L1000032ef_0

; Entry 1000183c6; block 30; address 100018583
L1000183c6_30:
    MOV ESI, EBX
    XOR EDX, EDX
    CALL L100018ba3_0
    JMP L1000183c6_31     ; inserted

; Entry 1000183c6; block 31; address 10001858c
L1000183c6_31:
    MOV qword [rel L__DATA___bss + 7640], RBX
    MOV RAX, qword [rel L__DATA___bss + 7624]
    MOV dword [RAX], 0
    JMP L1000183c6_50

; Entry 1000183c6; block 32; address 1000185ae
L1000183c6_32:
    MOV RCX, RBX
    ADD RBX, 4
    CMP RBX, R13
    JA L1000183c6_33
    JMP L1000183c6_34     ; inserted

; Entry 1000183c6; block 33; address 100018611
L1000183c6_33:
    CMP R12, R15
    JBE L1000183c6_38
    JMP L1000183c6_37     ; inserted

; Entry 1000183c6; block 34; address 1000185ba
L1000183c6_34:
    MOV R14, qword [RBP + -48]
    MOV EDI, R14D
    MOV R12, RCX
    MOV ESI, 3
    MOV R15, RAX
    CALL L100018d4a_0
    JMP L1000183c6_35     ; inserted

; Entry 1000183c6; block 35; address 1000185d1
L1000183c6_35:
    MOV RAX, qword [rel L__DATA___bss + 7632]
    ADD RAX, 10
    ADD RBX, qword [rel L__DATA___bss + 7640]
    SHR RAX, 3
    ADD RBX, RAX
    MOV qword [rel L__DATA___bss + 7640], RBX
    MOV qword [rel L__DATA___bss + 7632], 0
    MOV RDI, R15
    MOV ESI, R12D
    MOV EDX, 1
    CALL L100018ba3_0
    JMP L1000183c6_36     ; inserted

; Entry 1000183c6; block 36; address 10001860c
L1000183c6_36:
    JMP L1000183c6_51

; Entry 1000183c6; block 37; address 10001861a
L1000183c6_37:
    MOV RAX, qword [RBP + -48]
    LEA EDI, [RAX + 4]
    MOV ESI, 3
    CALL L100018d4a_0
    JMP L1000183c6_39     ; inserted

; Entry 1000183c6; block 38; address 1000186fe
L1000183c6_38:
    MOV R14, qword [RBP + -48]
    LEA EDI, [R14 + 2]
    MOV ESI, 3
    CALL L100018d4a_0
    JMP L1000183c6_52     ; inserted

; Entry 1000183c6; block 39; address 10001862b
L1000183c6_39:
    MOV R12D, dword [rel L__DATA___data + 4876]
    MOV EBX, dword [rel L__DATA___data + 4916]
    LEA EDI, [R12 + -256]
    MOV ESI, 5
    CALL L100018d4a_0
    JMP L1000183c6_40     ; inserted

; Entry 1000183c6; block 40; address 10001864a
L1000183c6_40:
    MOV dword [RBP + -56], EBX
    MOV EDI, EBX
    MOV ESI, 5
    CALL L100018d4a_0
    JMP L1000183c6_41     ; inserted

; Entry 1000183c6; block 41; address 100018659
L1000183c6_41:
    LEA EDI, [R14 + -3]
    MOV ESI, 4
    CALL L100018d4a_0
    JMP L1000183c6_42     ; inserted

; Entry 1000183c6; block 42; address 100018667
L1000183c6_42:
    TEST R14D, R14D
    LEA R13, [rel L__TEXT___const + 2736]
    LEA R15, [rel L__DATA___bss + 115056]
    JS L1000183c6_44
    JMP L1000183c6_43     ; inserted

; Entry 1000183c6; block 43; address 10001867a
L1000183c6_43:
    INC R14D
    XOR EBX, EBX
    JMP L1000183c6_46     ; inserted

; Entry 1000183c6; block 44; address 10001869c
L1000183c6_44:
    LEA R13, [rel L__DATA___bss + 14128]
    MOV RDI, R13
    MOV ESI, R12D
    CALL L10001938a_0
    JMP L1000183c6_47     ; inserted

; Entry 1000183c6; block 45; address 100018694
L1000183c6_45:
    INC RBX
    CMP R14, RBX
    JNE L1000183c6_46
    JMP L1000183c6_44     ; inserted

; Entry 1000183c6; block 46; address 10001867f
L1000183c6_46:
    MOVZX EAX, byte [RBX + R13]
    MOVZX EDI, word [R15 + RAX * 4 + 2]
    MOV ESI, 3
    CALL L100018d4a_0
    JMP L1000183c6_45     ; inserted

; Entry 1000183c6; block 47; address 1000186ae
L1000183c6_47:
    LEA RBX, [rel L__DATA___bss + 16432]
    MOV RDI, RBX
    MOV ESI, dword [RBP + -56]
    CALL L10001938a_0
    JMP L1000183c6_48     ; inserted

; Entry 1000183c6; block 48; address 1000186c0
L1000183c6_48:
    MOV RDI, R13
    MOV RSI, RBX
    CALL L100018df3_0
    JMP L1000183c6_49     ; inserted

; Entry 1000183c6; block 49; address 1000186cb
L1000183c6_49:
    MOV RAX, qword [rel L__DATA___bss + 14104]
    MOV RCX, qword [rel L__DATA___bss + 7632]
    ADD RAX, RCX
    ADD RAX, 3
    MOV RCX, RAX
    SHR RCX, 3
    ADD qword [rel L__DATA___bss + 7640], RCX
    AND EAX, 7
    MOV qword [rel L__DATA___bss + 7632], RAX
    JMP L1000183c6_50     ; inserted

; Entry 1000183c6; block 50; address 1000186f8
L1000183c6_50:
    MOV R14, qword [RBP + -48]
    JMP L1000183c6_51

; Entry 1000183c6; block 51; address 100018750
L1000183c6_51:
    CALL L100017ef9_0
    JMP L1000183c6_54     ; inserted

; Entry 1000183c6; block 52; address 100018710
L1000183c6_52:
    LEA RDI, [rel L__DATA___bss + 8832]
    LEA RSI, [rel L__DATA___bss + 7648]
    CALL L100018df3_0
    JMP L1000183c6_53     ; inserted

; Entry 1000183c6; block 53; address 100018723
L1000183c6_53:
    MOV RAX, qword [rel L__DATA___bss + 14112]
    MOV RCX, qword [rel L__DATA___bss + 7632]
    ADD RAX, RCX
    ADD RAX, 3
    MOV RCX, RAX
    SHR RCX, 3
    ADD qword [rel L__DATA___bss + 7640], RCX
    AND EAX, 7
    MOV qword [rel L__DATA___bss + 7632], RAX
    JMP L1000183c6_51     ; inserted

; Entry 1000183c6; block 54; address 100018755
L1000183c6_54:
    TEST R14D, R14D
    JE L1000183c6_56
    JMP L1000183c6_55     ; inserted

; Entry 1000183c6; block 55; address 10001875a
L1000183c6_55:
    CALL L100018f59_0
    JMP L1000183c6_57     ; inserted

; Entry 1000183c6; block 56; address 100018773
L1000183c6_56:
    MOV RAX, qword [rel L__DATA___bss + 7632]
    JMP L1000183c6_58     ; inserted

; Entry 1000183c6; block 57; address 10001875f
L1000183c6_57:
    MOV RAX, qword [rel L__DATA___bss + 7632]
    ADD RAX, 7
    MOV qword [rel L__DATA___bss + 7632], RAX
    JMP L1000183c6_58

; Entry 1000183c6; block 58; address 10001877a
L1000183c6_58:
    SHR RAX, 3
    ADD RAX, qword [rel L__DATA___bss + 7640]
    ADD RSP, 24
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 



; ---------------------
; Function: 0x100018794
; ---------------------
; Entry 100018794; block 0; address 100018794
L100018794_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 40
    MOV R12, qword [RDI]
    MOV RAX, qword [RDI + 8]
    MOV R13D, dword [RDI + 28]
    MOV dword [rel L__DATA___bss + 115212], 0
    MOV dword [rel L__DATA___bss + 115216], 573
    XOR R9D, R9D
    TEST R13D, R13D
    MOV qword [RBP + -56], RDI
    MOV R14D, 4294967295
    JLE L100018794_2
    JMP L100018794_1     ; inserted

; Entry 100018794; block 1; address 1000187d6
L100018794_1:
    XOR EBX, EBX
    LEA R8, [rel L__DATA___bss + 115232]
    LEA RSI, [rel L__DATA___bss + 117536]
    XOR EDX, EDX
    JMP L100018794_6     ; inserted

; Entry 100018794; block 2; address 100018829
L100018794_2:
    XOR EBX, EBX
    JMP L100018794_9     ; inserted

; Entry 100018794; block 3; address 1000187f0
L100018794_3:
    MOVSXD RCX, EBX
    INC EBX
    MOV dword [rel L__DATA___bss + 115212], EBX
    MOV dword [R8 + RCX * 4 + 4], EDX
    MOV byte [RDX + RSI], 0
    MOV R14D, EDX
    JMP L100018794_5

; Entry 100018794; block 4; address 100018809
L100018794_4:
    MOV word [R12 + RDX * 4 + 2], 0
    JMP L100018794_5     ; inserted

; Entry 100018794; block 5; address 100018811
L100018794_5:
    INC RDX
    CMP R13, RDX
    JNE L100018794_6
    JMP L100018794_7     ; inserted

; Entry 100018794; block 6; address 1000187e8
L100018794_6:
    CMP word [R12 + RDX * 4], 0
    JE L100018794_4
    JMP L100018794_3     ; inserted

; Entry 100018794; block 7; address 100018819
L100018794_7:
    CMP EBX, 1
    JLE L100018794_9
    JMP L100018794_8     ; inserted

; Entry 100018794; block 8; address 10001881e
L100018794_8:
    MOV dword [RDI + 36], R14D
    SHR EBX, 1
    JMP L100018794_14

; Entry 100018794; block 9; address 10001882b
L100018794_9:
    MOV R8, qword [rel L__DATA___bss + 14104]
    MOVSXD RCX, EBX
    MOV ESI, 2
    SUB RSI, RCX
    LEA RDX, [rel L__DATA___bss + 115232]
    LEA RBX, [RDX + RCX * 4]
    ADD RBX, 4
    LEA R10, [rel L__DATA___bss + 117536]
    XOR EDX, EDX
    JMP L100018794_12     ; inserted

; Entry 100018794; block 10; address 10001887c
L100018794_10:
    MOVZX ECX, word [RAX + RCX * 4 + 2]
    SUB qword [rel L__DATA___bss + 14112], RCX
    JMP L100018794_11     ; inserted

; Entry 100018794; block 11; address 100018888
L100018794_11:
    INC RDX
    CMP RSI, RDX
    JNE L100018794_12
    JMP L100018794_13     ; inserted

; Entry 100018794; block 12; address 100018855
L100018794_12:
    LEA ECX, [R14 + 1]
    CMP R14D, 2
    CMOVL R14D, ECX
    CMOVGE ECX, R9D
    MOV dword [RBX + RDX * 4], ECX
    MOVSXD RCX, ECX
    MOV word [R12 + RCX * 4], 1
    MOV byte [RCX + R10], 0
    TEST RAX, RAX
    JE L100018794_11
    JMP L100018794_10     ; inserted

; Entry 100018794; block 13; address 100018890
L100018794_13:
    MOV dword [rel L__DATA___bss + 115212], 2
    SUB R8, RDX
    MOV qword [rel L__DATA___bss + 14104], R8
    MOV dword [RDI + 36], R14D
    MOV EBX, 1
    JMP L100018794_14     ; inserted

; Entry 100018794; block 14; address 1000188ad
L100018794_14:
    MOV RDI, R12
    MOV ESI, EBX
    CALL L1000191de_0
    JMP L100018794_15     ; inserted

; Entry 100018794; block 15; address 1000188b7
L100018794_15:
    LEA EAX, [RBX + -1]
    CMP EBX, 1
    MOV EBX, EAX
    JG L100018794_14
    JMP L100018794_16     ; inserted

; Entry 100018794; block 16; address 1000188c1
L100018794_16:
    MOV qword [RBP + -72], R14
    MOV EAX, dword [rel L__DATA___bss + 115212]
    MOVSXD RBX, R13D
    MOV R15, RBX
    JMP L100018794_19     ; inserted

; Entry 100018794; block 17; address 100018902
L100018794_17:
    MOVSXD RAX, dword [rel L__DATA___bss + 115236]
    MOVSXD RCX, dword [rel L__DATA___bss + 115216]
    MOV dword [R13 + RCX * 4 + -4], R14D
    LEA RDX, [RCX + -2]
    MOV dword [rel L__DATA___bss + 115216], EDX
    MOV dword [R13 + RCX * 4 + -8], EAX
    MOVZX ECX, word [R12 + RAX * 4]
    ADD CX, word [R12 + R14 * 4]
    MOV word [R12 + RBX * 4], CX
    LEA RSI, [rel L__DATA___bss + 117536]
    MOVZX ECX, byte [R14 + RSI]
    MOVZX EDX, byte [RAX + RSI]
    CMP CL, DL
    CMOVB ECX, EDX
    INC CL
    MOV byte [RBX + RSI], CL
    MOV word [R12 + RAX * 4 + 2], BX
    MOV word [R12 + R14 * 4 + 2], BX
    INC R15
    MOV dword [rel L__DATA___bss + 115236], EBX
    MOV RDI, R12
    MOV ESI, 1
    CALL L1000191de_0
    JMP L100018794_18     ; inserted

; Entry 100018794; block 18; address 10001896f
L100018794_18:
    MOV EAX, dword [rel L__DATA___bss + 115212]
    MOV RBX, R15
    CMP EAX, 1
    JG L100018794_19
    JMP L100018794_20     ; inserted

; Entry 100018794; block 19; address 1000188d1
L100018794_19:
    MOVSXD R14, dword [rel L__DATA___bss + 115236]
    LEA ECX, [RAX + -1]
    MOV dword [rel L__DATA___bss + 115212], ECX
    CDQE 
    LEA R13, [rel L__DATA___bss + 115232]
    MOV EAX, dword [R13 + RAX * 4]
    MOV dword [rel L__DATA___bss + 115236], EAX
    MOV RDI, R12
    MOV ESI, 1
    CALL L1000191de_0
    JMP L100018794_17     ; inserted

; Entry 100018794; block 20; address 100018981
L100018794_20:
    MOVSXD RDX, dword [rel L__DATA___bss + 115236]
    MOVSXD RSI, dword [rel L__DATA___bss + 115216]
    LEA RAX, [RSI + -1]
    MOV dword [rel L__DATA___bss + 115216], EAX
    LEA RBX, [rel L__DATA___bss + 115232]
    MOV dword [RBX + RSI * 4 + -4], EDX
    MOV RDI, qword [RBP + -56]
    MOV R14, qword [RDI]
    MOV RCX, qword [RDI + 8]
    MOV qword [RBP + -64], RCX
    MOV RCX, qword [RDI + 16]
    MOV qword [RBP + -80], RCX
    MOV ECX, dword [RDI + 24]
    MOV dword [RBP + -44], ECX
    MOV ECX, dword [RDI + 36]
    MOVSXD R15, dword [RDI + 32]
    XORPS XMM0, XMM0
    MOVAPS oword [rel L__DATA___bss + 8816], XMM0
    MOVAPS oword [rel L__DATA___bss + 8800], XMM0
    MOV word [R14 + RDX * 4 + 2], 0
    CMP RSI, 572
    JG L100018794_22
    JMP L100018794_21     ; inserted

; Entry 100018794; block 21; address 1000189ee
L100018794_21:
    MOV RDX, RBX
    MOV R13D, 573
    SUB R13D, ESI
    LEA RAX, [RBX + RAX * 4]
    ADD RAX, 4
    MOV qword [RBP + -56], RAX
    XOR ESI, ESI
    XOR EDI, EDI
    JMP L100018794_31     ; inserted

; Entry 100018794; block 22; address 100018b89
L100018794_22:
    MOV RDI, R12
    MOV RSI, qword [RBP + -72]
    ADD RSP, 40
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    PUSH RBP
    MOV RBP, RSP
    SUB RSP, 48
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    MOV qword [RBP + -8], RAX
    XOR EAX, EAX
    LEA R8, [rel L__DATA___bss + 8800]
    XOR EDX, EDX
    JMP L100018794_48     ; inserted

; Entry 100018794; block 23; address 100018a2a
L100018794_23:
    MOV R10D, R15D
    JMP L100018794_25

; Entry 100018794; block 24; address 100018a2f
L100018794_24:
    INC R10D
    JMP L100018794_25     ; inserted

; Entry 100018794; block 25; address 100018a32
L100018794_25:
    MOV word [R14 + RBX * 4 + 2], R10W
    CMP EBX, ECX
    JG L100018794_27
    JMP L100018794_26     ; inserted

; Entry 100018794; block 26; address 100018a3c
L100018794_26:
    MOVSXD RAX, R10D
    LEA RDX, [rel L__DATA___bss + 8800]
    INC word [RDX + RAX * 2]
    XOR EAX, EAX
    CMP EBX, dword [RBP + -44]
    JL L100018794_29
    JMP L100018794_28     ; inserted

; Entry 100018794; block 27; address 100018a95
L100018794_27:
    MOV R9B, R8B
    ADD EDI, R9D
    INC RSI
    CMP R13D, ESI
    JNE L100018794_31
    JMP L100018794_32     ; inserted

; Entry 100018794; block 28; address 100018a51
L100018794_28:
    MOV EAX, EBX
    SUB EAX, dword [RBP + -44]
    CDQE 
    MOV RDX, qword [RBP + -80]
    MOV EAX, dword [RDX + RAX * 4]
    JMP L100018794_29     ; inserted

; Entry 100018794; block 29; address 100018a5f
L100018794_29:
    MOVZX R11D, word [R14 + RBX * 4]
    ADD R10D, EAX
    MOVSXD RDX, R10D
    IMUL RDX, R11
    ADD qword [rel L__DATA___bss + 14104], RDX
    CMP qword [RBP + -64], 0
    JE L100018794_27
    JMP L100018794_30     ; inserted

; Entry 100018794; block 30; address 100018a7c
L100018794_30:
    MOV RDX, qword [RBP + -64]
    MOVZX EDX, word [RDX + RBX * 4 + 2]
    CDQE 
    ADD RAX, RDX
    IMUL RAX, R11
    ADD qword [rel L__DATA___bss + 14112], RAX
    JMP L100018794_27     ; inserted

; Entry 100018794; block 31; address 100018a0a
L100018794_31:
    MOV RAX, qword [RBP + -56]
    MOVSXD RBX, dword [RAX + RSI * 4]
    MOVZX EAX, word [R14 + RBX * 4 + 2]
    MOVZX R10D, word [R14 + RAX * 4 + 2]
    XOR R9D, R9D
    CMP R15D, R10D
    SETLE R8B
    JG L100018794_24
    JMP L100018794_23     ; inserted

; Entry 100018794; block 32; address 100018aa7
L100018794_32:
    TEST EDI, EDI
    LEA R10, [rel L__DATA___bss + 115232]
    LEA R11, [rel L__DATA___bss + 8800]
    JE L100018794_22
    JMP L100018794_33     ; inserted

; Entry 100018794; block 33; address 100018abd
L100018794_33:
    MOV RAX, R15
    SHL RAX, 32
    MOV R9, 4294967296
    ADD R9, RAX
    LEA R8, [R11 + R15 * 2]
    MOV RBX, 18446744069414584320
    JMP L100018794_36     ; inserted

; Entry 100018794; block 34; address 100018ae5
L100018794_34:
    ADD RAX, RBX
    MOVZX EDX, word [RSI + -2]
    ADD RSI, 18446744073709551614
    TEST DX, DX
    JE L100018794_34
    JMP L100018794_35     ; inserted

; Entry 100018794; block 35; address 100018af5
L100018794_35:
    DEC EDX
    MOV word [RSI], DX
    SAR RAX, 31
    ADD word [RAX + R11], 2
    MOVZX EAX, word [R11 + R15 * 2]
    DEC EAX
    MOV word [R11 + R15 * 2], AX
    LEA EDX, [RDI + -2]
    CMP EDI, 2
    MOV EDI, EDX
    JG L100018794_36
    JMP L100018794_37     ; inserted

; Entry 100018794; block 36; address 100018adf
L100018794_36:
    MOV RSI, R8
    MOV RAX, R9
    JMP L100018794_34     ; inserted

; Entry 100018794; block 37; address 100018b1a
L100018794_37:
    TEST R15D, R15D
    JE L100018794_22
    JMP L100018794_38     ; inserted

; Entry 100018794; block 38; address 100018b1f
L100018794_38:
    MOV ESI, 573
    JMP L100018794_47     ; inserted

; Entry 100018794; block 39; address 100018b38
L100018794_39:
    MOVSXD RAX, dword [RDX + RBX * 4]
    DEC RBX
    CMP EAX, ECX
    JG L100018794_41
    JMP L100018794_42     ; inserted

; Entry 100018794; block 40; address 100018b74
L100018794_40:
    LEA RDX, [R15 + -1]
    TEST EDX, EDX
    JE L100018794_22
    JMP L100018794_46     ; inserted

; Entry 100018794; block 41; address 100018b34
L100018794_41:
    TEST EDI, EDI
    JE L100018794_40
    JMP L100018794_39     ; inserted

; Entry 100018794; block 42; address 100018b43
L100018794_42:
    MOV ESI, ESI
    ADD RSI, RBX
    MOVZX EDX, word [R14 + RAX * 4 + 2]
    CMP DX, R15W
    JE L100018794_44
    JMP L100018794_43     ; inserted

; Entry 100018794; block 43; address 100018b54
L100018794_43:
    MOV RBX, R15
    SUB RBX, RDX
    MOVZX EDX, word [R14 + RAX * 4]
    IMUL RDX, RBX
    ADD qword [rel L__DATA___bss + 14104], RDX
    MOV word [R14 + RAX * 4 + 2], R15W
    JMP L100018794_44     ; inserted

; Entry 100018794; block 44; address 100018b70
L100018794_44:
    DEC EDI
    JMP L100018794_45

; Entry 100018794; block 45; address 100018b27
L100018794_45:
    MOVSXD RAX, ESI
    LEA RDX, [R10 + RAX * 4]
    ADD RDX, 18446744073709551612
    XOR EBX, EBX
    JMP L100018794_41     ; inserted

; Entry 100018794; block 46; address 100018b7c
L100018794_46:
    MOV ESI, ESI
    MOVZX EAX, word [R11 + R15 * 2 + -2]
    MOV R15, RDX
    JMP L100018794_47

; Entry 100018794; block 47; address 100018b24
L100018794_47:
    MOVZX EDI, AX
    JMP L100018794_45     ; inserted

; Entry 100018794; block 48; address 100017e72
L100018794_48:
    AND EDX, 65534
    MOVZX ECX, word [RAX + R8]
    ADD ECX, EDX
    ADD ECX, ECX
    MOV word [RBP + RAX-1], CX
    ADD RAX, 2
    MOV EDX, ECX
    CMP RAX, 30
    JNE L100018794_48
    JMP L100018794_49     ; inserted

; Entry 100018794; block 49; address 100017e92
L100018794_49:
    TEST ESI, ESI
    JS L100018794_51
    JMP L100018794_50     ; inserted

; Entry 100018794; block 50; address 100017e96
L100018794_50:
    INC ESI
    XOR R8D, R8D
    JMP L100018794_56     ; inserted

; Entry 100018794; block 51; address 100017ede
L100018794_51:
    MOV RAX, qword [rel ___stack_chk_guard]
    MOV RAX, qword [RAX]
    CMP RAX, qword [RBP + -8]
    JNE L100018794_58
    JMP L100018794_57     ; inserted

; Entry 100018794; block 52; address 100017ea5
L100018794_52:
    MOV R9D, ECX
    MOVZX EAX, word [RBP + R9 * 2 + -48]
    LEA EDX, [RAX + 1]
    MOV word [RBP + R9 * 2 + -48], DX
    INC ECX
    XOR R9D, R9D
    JMP L100018794_54     ; inserted

; Entry 100018794; block 53; address 100017ed6
L100018794_53:
    INC R8
    CMP R8, RSI
    JNE L100018794_56
    JMP L100018794_51     ; inserted

; Entry 100018794; block 54; address 100017ebc
L100018794_54:
    MOV EDX, EAX
    AND EDX, 1
    OR EDX, R9D
    SHR EAX, 1
    LEA R9D, [RDX + RDX]
    DEC ECX
    CMP ECX, 1
    JG L100018794_54
    JMP L100018794_55     ; inserted

; Entry 100018794; block 55; address 100017ed1
L100018794_55:
    MOV word [RDI + R8 * 4], DX
    JMP L100018794_53     ; inserted

; Entry 100018794; block 56; address 100017e9b
L100018794_56:
    MOVZX ECX, word [RDI + R8 * 4 + 2]
    TEST ECX, ECX
    JE L100018794_53
    JMP L100018794_52     ; inserted

; Entry 100018794; block 57; address 100017eee
L100018794_57:
    ADD RSP, 48
    POP RBP
    RET 

; Entry 100018794; block 58; address 100017ef4
L100018794_58:
    CALL ___stack_chk_fail



; ---------------------
; Function: 0x100018ba3
; ---------------------
; Entry 100018ba3; block 0; address 100018ba3
L100018ba3_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    MOV R14D, EDX
    MOV R12D, ESI
    MOV R15, RDI
    CALL L100018f59_0
    JMP L100018ba3_1     ; inserted

; Entry 100018ba3; block 1; address 100018bbc
L100018ba3_1:
    TEST R14D, R14D
    JE L100018ba3_3
    JMP L100018ba3_2     ; inserted

; Entry 100018ba3; block 2; address 100018bc5
L100018ba3_2:
    MOV ECX, dword [rel L__DATA___bss + 115028]
    MOV EAX, dword [rel L__DATA___bss + 115024]
    DEC EAX
    CMP ECX, EAX
    JB L100018ba3_5
    JMP L100018ba3_4     ; inserted

; Entry 100018ba3; block 3; address 100018c6a
L100018ba3_3:
    CMP dword [rel L__DATA___bss + 115032], 0
    JE L100018ba3_11
    JMP L100018ba3_10     ; inserted

; Entry 100018ba3; block 4; address 100018bd7
L100018ba3_4:
    MOV RDI, qword [rel L__DATA___bss + 115016]
    LEA RSI, [rel L__DATA___bss + 115028]
    CALL L100010642_0
    JMP L100018ba3_6     ; inserted

; Entry 100018ba3; block 5; address 100018bf8
L100018ba3_5:
    MOV RDI, qword [rel L__DATA___bss + 115016]
    LEA EDX, [RCX + 1]
    MOV dword [rel L__DATA___bss + 115028], EDX
    MOV ECX, ECX
    MOV RBX, R12
    MOV byte [RDI + RCX], BL
    MOV ECX, dword [rel L__DATA___bss + 115028]
    LEA EDX, [RCX + 1]
    MOV dword [rel L__DATA___bss + 115028], EDX
    MOV byte [RDI + RCX], BH
    MOV ECX, dword [rel L__DATA___bss + 115028]
    CMP ECX, EAX
    JB L100018ba3_8
    JMP L100018ba3_7     ; inserted

; Entry 100018ba3; block 6; address 100018bea
L100018ba3_6:
    MOV ECX, dword [rel L__DATA___bss + 115028]
    MOV EAX, dword [rel L__DATA___bss + 115024]
    DEC EAX
    JMP L100018ba3_5     ; inserted

; Entry 100018ba3; block 7; address 100018c2c
L100018ba3_7:
    LEA RSI, [rel L__DATA___bss + 115028]
    CALL L100010642_0
    JMP L100018ba3_9     ; inserted

; Entry 100018ba3; block 8; address 100018c45
L100018ba3_8:
    MOV RAX, R12
    NOT EAX
    LEA EDX, [RCX + 1]
    MOV dword [rel L__DATA___bss + 115028], EDX
    MOV ECX, ECX
    MOV byte [RDI + RCX], AL
    MOV ECX, dword [rel L__DATA___bss + 115028]
    LEA EDX, [RCX + 1]
    MOV dword [rel L__DATA___bss + 115028], EDX
    MOV byte [RDI + RCX], AH
    JMP L100018ba3_3     ; inserted

; Entry 100018ba3; block 9; address 100018c38
L100018ba3_9:
    MOV RDI, qword [rel L__DATA___bss + 115016]
    MOV ECX, dword [rel L__DATA___bss + 115028]
    JMP L100018ba3_8     ; inserted

; Entry 100018ba3; block 10; address 100018c73
L100018ba3_10:
    MOV RDI, qword [rel L__DATA___bss + 115016]
    LEA RSI, [rel L__DATA___bss + 115028]
    CALL L100010642_0
    JMP L100018ba3_12     ; inserted

; Entry 100018ba3; block 11; address 100018ce4
L100018ba3_11:
    MOV EDI, dword [rel L__DATA___bss + 115028]
    LEA EAX, [RDI + R12]
    CMP EAX, dword [rel L__DATA___bss + 115024]
    JBE L100018ba3_22
    JMP L100018ba3_21     ; inserted

; Entry 100018ba3; block 12; address 100018c86
L100018ba3_12:
    LEA RAX, [rel L__DATA___common + 312]
    CMP qword [RAX], 0
    JE L100018ba3_14
    JMP L100018ba3_13     ; inserted

; Entry 100018ba3; block 13; address 100018c93
L100018ba3_13:
    TEST R12D, R12D
    JE L100018ba3_16
    JMP L100018ba3_15     ; inserted

; Entry 100018ba3; block 14; address 100018d0a
L100018ba3_14:
    MOV dword [rel L__DATA___bss + 115028], R12D
    LEA RSI, [rel L__DATA___bss + 115028]
    MOV RDI, R15
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV RBX, RSI
    MOV R14, RDI
    LEA R15, [rel L__DATA___common + 392]
    CMP qword [R15], 0
    JNE L100018ba3_24
    JMP L100018ba3_23     ; inserted

; Entry 100018ba3; block 15; address 100018c9c
L100018ba3_15:
    LEA R14, [rel L__DATA___bss + 115028]
    JMP L100018ba3_19     ; inserted

; Entry 100018ba3; block 16; address 100018d41
L100018ba3_16:
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100018ba3; block 17; address 100018cc5
L100018ba3_17:
    MOV EBX, dword [rel L__DATA___bss + 115028]
    ADD R15, RBX
    MOV RDI, qword [rel L__DATA___bss + 115016]
    MOV RSI, R14
    CALL L100010642_0
    JMP L100018ba3_18     ; inserted

; Entry 100018ba3; block 18; address 100018cdd
L100018ba3_18:
    SUB R12D, EBX
    JNE L100018ba3_19
    JMP L100018ba3_20     ; inserted

; Entry 100018ba3; block 19; address 100018ca3
L100018ba3_19:
    MOV EDX, dword [rel L__DATA___bss + 115024]
    CMP R12D, EDX
    CMOVB EDX, R12D
    MOV dword [rel L__DATA___bss + 115028], EDX
    MOV RDI, qword [rel L__DATA___bss + 115016]
    MOV RSI, R15
    CALL _memcpy
    JMP L100018ba3_17     ; inserted

; Entry 100018ba3; block 20; address 100018ce2
L100018ba3_20:
    JMP L100018ba3_16

; Entry 100018ba3; block 21; address 100018cf6
L100018ba3_21:
    LEA RDI, [rel L__TEXT___cstring_35860]
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    PUSH RBP
    MOV RBP, RSP
    MOV RSI, RDI
    MOV EDI, 5
    CALL L100002e30_0

; Entry 100018ba3; block 22; address 100018d28
L100018ba3_22:
    ADD RDI, qword [rel L__DATA___bss + 115016]
    MOV EDX, R12D
    MOV RSI, R15
    CALL _memcpy
    JMP L100018ba3_30     ; inserted

; Entry 100018ba3; block 23; address 10001065f
L100018ba3_23:
    LEA RDI, [rel L__TEXT___cstring_35860]
    CALL L1000032ef_0

; Entry 100018ba3; block 24; address 10001066b
L100018ba3_24:
    MOV EDX, dword [RBX]
    TEST RDX, RDX
    JE L100018ba3_26
    JMP L100018ba3_25     ; inserted

; Entry 100018ba3; block 25; address 100010672
L100018ba3_25:
    MOV ESI, 1
    MOV RDI, R14
    CALL L10001623d_0
    JMP L100018ba3_27     ; inserted

; Entry 100018ba3; block 26; address 10001069c
L100018ba3_26:
    MOV dword [RBX], 0
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 100018ba3; block 27; address 10001067f
L100018ba3_27:
    MOV RDI, qword [R15]
    CALL _ferror
    JMP L100018ba3_28     ; inserted

; Entry 100018ba3; block 28; address 100010687
L100018ba3_28:
    TEST EAX, EAX
    JE L100018ba3_26
    JMP L100018ba3_29     ; inserted

; Entry 100018ba3; block 29; address 10001068b
L100018ba3_29:
    LEA RSI, [rel L__TEXT___cstring_35910]
    MOV EDI, 14
    CALL L100002e30_0

; Entry 100018ba3; block 30; address 100018d3a
L100018ba3_30:
    ADD dword [rel L__DATA___bss + 115028], R12D
    JMP L100018ba3_16     ; inserted



; ---------------------
; Function: 0x100018d4a
; ---------------------
; Entry 100018d4a; block 0; address 100018d4a
L100018d4a_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R14
    PUSH RBX
    MOV ECX, dword [rel L__DATA___bss + 115040]
    MOV EAX, EDI
    SHL EAX, CL
    OR EAX, dword [rel L__DATA___bss + 115036]
    MOV dword [rel L__DATA___bss + 115036], EAX
    ADD ECX, ESI
    MOV dword [rel L__DATA___bss + 115040], ECX
    CMP ECX, 17
    JL L100018d4a_2
    JMP L100018d4a_1     ; inserted

; Entry 100018d4a; block 1; address 100018d74
L100018d4a_1:
    MOV R14D, EDI
    MOV EBX, ESI
    MOV EDX, dword [rel L__DATA___bss + 115028]
    MOV ESI, dword [rel L__DATA___bss + 115024]
    DEC ESI
    CMP EDX, ESI
    JB L100018d4a_4
    JMP L100018d4a_3     ; inserted

; Entry 100018d4a; block 2; address 100018dee
L100018d4a_2:
    POP RBX
    POP R14
    POP RBP
    RET 

; Entry 100018d4a; block 3; address 100018d8b
L100018d4a_3:
    MOV RDI, qword [rel L__DATA___bss + 115016]
    LEA RSI, [rel L__DATA___bss + 115028]
    CALL L100010642_0
    JMP L100018d4a_5     ; inserted

; Entry 100018d4a; block 4; address 100018db0
L100018d4a_4:
    MOV RSI, qword [rel L__DATA___bss + 115016]
    LEA EDI, [RDX + 1]
    MOV dword [rel L__DATA___bss + 115028], EDI
    MOV EDX, EDX
    MOV byte [RSI + RDX], AL
    MOV EDX, dword [rel L__DATA___bss + 115028]
    LEA EDI, [RDX + 1]
    MOV dword [rel L__DATA___bss + 115028], EDI
    MOV byte [RSI + RDX], AH
    ADD ECX, 18446744073709551600
    MOV dword [rel L__DATA___bss + 115040], ECX
    SUB EBX, ECX
    MOV ECX, EBX
    SHR R14D, CL
    MOV dword [rel L__DATA___bss + 115036], R14D
    JMP L100018d4a_2     ; inserted

; Entry 100018d4a; block 5; address 100018d9e
L100018d4a_5:
    MOV EAX, dword [rel L__DATA___bss + 115036]
    MOV EDX, dword [rel L__DATA___bss + 115028]
    MOV ECX, dword [rel L__DATA___bss + 115040]
    JMP L100018d4a_4     ; inserted



; ---------------------
; Function: 0x100018df3
; ---------------------
; Entry 100018df3; block 0; address 100018df3
L100018df3_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 24
    MOV qword [RBP + -56], RSI
    MOV R15, RDI
    CMP dword [rel L__DATA___bss + 49456], 0
    JE L100018df3_2
    JMP L100018df3_1     ; inserted

; Entry 100018df3; block 1; address 100018e18
L100018df3_1:
    XOR R12D, R12D
    LEA R13, [rel L__DATA___bss + 16688]
    MOV dword [RBP + -48], 0
    MOV dword [RBP + -44], 0
    XOR R14D, R14D
    JMP L100018df3_15     ; inserted

; Entry 100018df3; block 2; address 100018f36
L100018df3_2:
    MOVZX EDI, word [R15 + 1024]
    MOVZX ESI, word [R15 + 1026]
    ADD RSP, 24
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    PUSH RBP
    MOV RBP, RSP
    PUSH R14
    PUSH RBX
    MOV ECX, dword [rel L__DATA___bss + 115040]
    MOV EAX, EDI
    SHL EAX, CL
    OR EAX, dword [rel L__DATA___bss + 115036]
    MOV dword [rel L__DATA___bss + 115036], EAX
    ADD ECX, ESI
    MOV dword [rel L__DATA___bss + 115040], ECX
    CMP ECX, 17
    JL L100018df3_17
    JMP L100018df3_16     ; inserted

; Entry 100018df3; block 3; address 100018e39
L100018df3_3:
    MOV ECX, dword [RBP + -44]
    MOV EAX, ECX
    INC ECX
    MOV dword [RBP + -44], ECX
    LEA RCX, [rel L__DATA___bss + 10000]
    MOV R14B, byte [RAX + RCX]
    JMP L100018df3_4     ; inserted

; Entry 100018df3; block 4; address 100018e4e
L100018df3_4:
    MOVZX EBX, byte [R12 + R13]
    INC R12
    TEST R14B, 1
    JNE L100018df3_6
    JMP L100018df3_5     ; inserted

; Entry 100018df3; block 5; address 100018e5c
L100018df3_5:
    MOVZX EDI, word [R15 + RBX * 4]
    MOVZX ESI, word [R15 + RBX * 4 + 2]
    CALL L100018d4a_0
    JMP L100018df3_7     ; inserted

; Entry 100018df3; block 6; address 100018e71
L100018df3_6:
    LEA RAX, [rel L__DATA___bss + 7904]
    MOVZX R13D, byte [RBX + RAX]
    MOVZX EDI, word [R15 + R13 * 4 + 1028]
    MOVZX ESI, word [R15 + R13 * 4 + 1030]
    CALL L100018d4a_0
    JMP L100018df3_8     ; inserted

; Entry 100018df3; block 7; address 100018e6c
L100018df3_7:
    JMP L100018df3_14

; Entry 100018df3; block 8; address 100018e94
L100018df3_8:
    LEA RAX, [rel L__DATA___data + 4592]
    MOV ESI, dword [RAX + R13 * 4]
    TEST ESI, ESI
    JE L100018df3_10
    JMP L100018df3_9     ; inserted

; Entry 100018df3; block 9; address 100018ea3
L100018df3_9:
    LEA RAX, [rel L__DATA___bss + 7776]
    SUB EBX, dword [RAX + R13 * 4]
    MOV EDI, EBX
    CALL L100018d4a_0
    JMP L100018df3_10     ; inserted

; Entry 100018df3; block 10; address 100018eb5
L100018df3_10:
    MOV ECX, dword [RBP + -48]
    MOV EAX, ECX
    INC ECX
    MOV dword [RBP + -48], ECX
    LEA RCX, [rel L__DATA___bss + 49472]
    MOVZX R13D, word [RCX + RAX * 2]
    MOV EAX, R13D
    SHR EAX, 7
    MOV ECX, 256
    ADD EAX, ECX
    CMP R13D, ECX
    CMOVB EAX, R13D
    LEA RCX, [rel L__DATA___bss + 8288]
    MOVZX EBX, byte [RAX + RCX]
    MOV RAX, qword [RBP + -56]
    MOVZX EDI, word [RAX + RBX * 4]
    MOVZX ESI, word [RAX + RBX * 4 + 2]
    CALL L100018d4a_0
    JMP L100018df3_11     ; inserted

; Entry 100018df3; block 11; address 100018efc
L100018df3_11:
    LEA RAX, [rel L__DATA___data + 4720]
    MOV ESI, dword [RAX + RBX * 4]
    TEST ESI, ESI
    JE L100018df3_13
    JMP L100018df3_12     ; inserted

; Entry 100018df3; block 12; address 100018f0a
L100018df3_12:
    LEA RAX, [rel L__DATA___bss + 8160]
    SUB R13D, dword [RAX + RBX * 4]
    MOV EDI, R13D
    CALL L100018d4a_0
    JMP L100018df3_13     ; inserted

; Entry 100018df3; block 13; address 100018f1d
L100018df3_13:
    LEA R13, [rel L__DATA___bss + 16688]
    JMP L100018df3_14     ; inserted

; Entry 100018df3; block 14; address 100018f24
L100018df3_14:
    SHR R14B, 1
    MOV EAX, dword [rel L__DATA___bss + 49456]
    CMP R12, RAX
    JB L100018df3_15
    JMP L100018df3_2     ; inserted

; Entry 100018df3; block 15; address 100018e33
L100018df3_15:
    TEST R12B, 7
    JNE L100018df3_4
    JMP L100018df3_3     ; inserted

; Entry 100018df3; block 16; address 100018d74
L100018df3_16:
    MOV R14D, EDI
    MOV EBX, ESI
    MOV EDX, dword [rel L__DATA___bss + 115028]
    MOV ESI, dword [rel L__DATA___bss + 115024]
    DEC ESI
    CMP EDX, ESI
    JB L100018df3_19
    JMP L100018df3_18     ; inserted

; Entry 100018df3; block 17; address 100018dee
L100018df3_17:
    POP RBX
    POP R14
    POP RBP
    RET 

; Entry 100018df3; block 18; address 100018d8b
L100018df3_18:
    MOV RDI, qword [rel L__DATA___bss + 115016]
    LEA RSI, [rel L__DATA___bss + 115028]
    CALL L100010642_0
    JMP L100018df3_20     ; inserted

; Entry 100018df3; block 19; address 100018db0
L100018df3_19:
    MOV RSI, qword [rel L__DATA___bss + 115016]
    LEA EDI, [RDX + 1]
    MOV dword [rel L__DATA___bss + 115028], EDI
    MOV EDX, EDX
    MOV byte [RSI + RDX], AL
    MOV EDX, dword [rel L__DATA___bss + 115028]
    LEA EDI, [RDX + 1]
    MOV dword [rel L__DATA___bss + 115028], EDI
    MOV byte [RSI + RDX], AH
    ADD ECX, 18446744073709551600
    MOV dword [rel L__DATA___bss + 115040], ECX
    SUB EBX, ECX
    MOV ECX, EBX
    SHR R14D, CL
    MOV dword [rel L__DATA___bss + 115036], R14D
    JMP L100018df3_17     ; inserted

; Entry 100018df3; block 20; address 100018d9e
L100018df3_20:
    MOV EAX, dword [rel L__DATA___bss + 115036]
    MOV EDX, dword [rel L__DATA___bss + 115028]
    MOV ECX, dword [rel L__DATA___bss + 115040]
    JMP L100018df3_19     ; inserted



; ---------------------
; Function: 0x100018f59
; ---------------------
; Entry 100018f59; block 0; address 100018f59
L100018f59_0:
    PUSH RBP
    MOV RBP, RSP
    MOV EAX, dword [rel L__DATA___bss + 115040]
    CMP EAX, 9
    JL L100018f59_2
    JMP L100018f59_1     ; inserted

; Entry 100018f59; block 1; address 100018f68
L100018f59_1:
    MOV EDX, dword [rel L__DATA___bss + 115028]
    MOV EAX, dword [rel L__DATA___bss + 115024]
    DEC EAX
    CMP EDX, EAX
    JB L100018f59_4
    JMP L100018f59_3     ; inserted

; Entry 100018f59; block 2; address 100018fb9
L100018f59_2:
    TEST EAX, EAX
    JLE L100018f59_7
    JMP L100018f59_6     ; inserted

; Entry 100018f59; block 3; address 100018f7a
L100018f59_3:
    MOV RDI, qword [rel L__DATA___bss + 115016]
    LEA RSI, [rel L__DATA___bss + 115028]
    CALL L100010642_0
    JMP L100018f59_5     ; inserted

; Entry 100018f59; block 4; address 100018f93
L100018f59_4:
    MOV EAX, dword [rel L__DATA___bss + 115036]
    MOV RCX, qword [rel L__DATA___bss + 115016]
    LEA ESI, [RDX + 1]
    MOV dword [rel L__DATA___bss + 115028], ESI
    MOV EDX, EDX
    MOV byte [RCX + RDX], AL
    SHR EAX, 8
    MOV EDX, dword [rel L__DATA___bss + 115028]
    JMP L100018f59_11

; Entry 100018f59; block 5; address 100018f8d
L100018f59_5:
    MOV EDX, dword [rel L__DATA___bss + 115028]
    JMP L100018f59_4     ; inserted

; Entry 100018f59; block 6; address 100018fbd
L100018f59_6:
    MOV EDX, dword [rel L__DATA___bss + 115028]
    CMP EDX, dword [rel L__DATA___bss + 115024]
    JB L100018f59_9
    JMP L100018f59_8     ; inserted

; Entry 100018f59; block 7; address 100018fff
L100018f59_7:
    CMP dword [rel L__DATA___bss + 115032], 0
    JE L100018f59_13
    JMP L100018f59_12     ; inserted

; Entry 100018f59; block 8; address 100018fcb
L100018f59_8:
    MOV RDI, qword [rel L__DATA___bss + 115016]
    LEA RSI, [rel L__DATA___bss + 115028]
    CALL L100010642_0
    JMP L100018f59_10     ; inserted

; Entry 100018f59; block 9; address 100018fe4
L100018f59_9:
    MOV EAX, dword [rel L__DATA___bss + 115036]
    MOV RCX, qword [rel L__DATA___bss + 115016]
    JMP L100018f59_11     ; inserted

; Entry 100018f59; block 10; address 100018fde
L100018f59_10:
    MOV EDX, dword [rel L__DATA___bss + 115028]
    JMP L100018f59_9     ; inserted

; Entry 100018f59; block 11; address 100018ff1
L100018f59_11:
    LEA ESI, [RDX + 1]
    MOV dword [rel L__DATA___bss + 115028], ESI
    MOV EDX, EDX
    MOV byte [RCX + RDX], AL
    JMP L100018f59_7     ; inserted

; Entry 100018f59; block 12; address 100019008
L100018f59_12:
    MOV RDI, qword [rel L__DATA___bss + 115016]
    LEA RSI, [rel L__DATA___bss + 115028]
    CALL L100010642_0
    JMP L100018f59_13     ; inserted

; Entry 100018f59; block 13; address 10001901b
L100018f59_13:
    XOR EAX, EAX
    MOV dword [rel L__DATA___bss + 115036], EAX
    MOV dword [rel L__DATA___bss + 115040], EAX
    POP RBP
    RET 



; ---------------------
; Function: 0x10001902b
; ---------------------
; Entry 10001902b; block 0; address 10001902b
L10001902b_0:
    PUSH RBP
    MOV RBP, RSP
    MOV EAX, dword [rel L__DATA___bss + 49456]
    LEA R10D, [RAX + 1]
    MOV dword [rel L__DATA___bss + 49456], R10D
    LEA RDX, [rel L__DATA___bss + 16688]
    MOV byte [RAX + RDX], SIL
    MOVSXD RAX, ESI
    TEST EDI, EDI
    JE L10001902b_2
    JMP L10001902b_1     ; inserted

; Entry 10001902b; block 1; address 100019052
L10001902b_1:
    LEA RDX, [rel L__DATA___bss + 7904]
    MOVZX EAX, byte [RAX + RDX]
    LEA RDX, [rel L__DATA___bss + 14128]
    INC word [RDX + RAX * 4 + 1028]
    LEA EAX, [RDI + -1]
    MOVSXD RDX, EAX
    SAR EAX, 7
    ADD EAX, 256
    CMP EDI, 257
    CMOVL RAX, RDX
    LEA RSI, [rel L__DATA___bss + 8288]
    MOVZX EAX, byte [RAX + RSI]
    LEA RSI, [rel L__DATA___bss + 16432]
    INC word [RSI + RAX * 4]
    MOV EAX, dword [rel L__DATA___bss + 115008]
    LEA ESI, [RAX + 1]
    MOV dword [rel L__DATA___bss + 115008], ESI
    LEA RSI, [rel L__DATA___bss + 49472]
    MOV word [RSI + RAX * 2], DX
    MOV AL, byte [rel L__DATA___bss + 115012]
    OR byte [rel L__DATA___bss + 9984], AL
    JMP L10001902b_3

; Entry 10001902b; block 2; address 1000190c2
L10001902b_2:
    LEA RDX, [rel L__DATA___bss + 14128]
    INC word [RDX + RAX * 4]
    MOV AL, byte [rel L__DATA___bss + 115012]
    JMP L10001902b_3     ; inserted

; Entry 10001902b; block 3; address 1000190d3
L10001902b_3:
    ADD AL, AL
    MOV byte [rel L__DATA___bss + 115012], AL
    TEST R10B, 7
    JNE L10001902b_5
    JMP L10001902b_4     ; inserted

; Entry 10001902b; block 4; address 1000190e1
L10001902b_4:
    MOV AL, byte [rel L__DATA___bss + 9984]
    MOV EDX, dword [rel L__DATA___bss + 14096]
    LEA ESI, [RDX + 1]
    MOV dword [rel L__DATA___bss + 14096], ESI
    LEA RSI, [rel L__DATA___bss + 10000]
    MOV byte [RDX + RSI], AL
    MOV byte [rel L__DATA___bss + 9984], 0
    MOV byte [rel L__DATA___bss + 115012], 1
    JMP L10001902b_5     ; inserted

; Entry 10001902b; block 5; address 10001910e
L10001902b_5:
    TEST R10D, 4095
    JNE L10001902b_7
    JMP L10001902b_6     ; inserted

; Entry 10001902b; block 6; address 100019117
L10001902b_6:
    LEA RAX, [rel L__DATA___data + 4496]
    CMP dword [RAX], 2
    JLE L10001902b_7
    JMP L10001902b_8     ; inserted

; Entry 10001902b; block 7; address 100019191
L10001902b_7:
    MOV EDI, dword [rel L__DATA___bss + 115008]
    JMP L10001902b_12     ; inserted

; Entry 10001902b; block 8; address 100019123
L10001902b_8:
    MOV EDX, R10D
    SHL RDX, 3
    LEA RAX, [rel L__DATA___common + 137508]
    MOV R9D, dword [RAX]
    LEA RAX, [rel L__DATA___common + 6392]
    MOV R8, qword [RAX]
    XOR EDI, EDI
    LEA R11, [rel L__DATA___bss + 16432]
    LEA RSI, [rel L__DATA___data + 4720]
    JMP L10001902b_9     ; inserted

; Entry 10001902b; block 9; address 10001914e
L10001902b_9:
    MOVZX ECX, word [RDI + R11]
    MOVSXD RAX, dword [RDI + RSI]
    ADD RAX, 5
    IMUL RAX, RCX
    ADD RDX, RAX
    ADD RDI, 4
    CMP RDI, 120
    JNE L10001902b_9
    JMP L10001902b_10     ; inserted

; Entry 10001902b; block 10; address 10001916c
L10001902b_10:
    MOV EDI, dword [rel L__DATA___bss + 115008]
    MOV EAX, R10D
    SHR EAX, 1
    CMP EDI, EAX
    JAE L10001902b_12
    JMP L10001902b_11     ; inserted

; Entry 10001902b; block 11; address 10001917b
L10001902b_11:
    SUB R9, R8
    SHR RDX, 3
    SHR R9, 1
    MOV EAX, 1
    CMP RDX, R9
    JAE L10001902b_12
    JMP L10001902b_13     ; inserted

; Entry 10001902b; block 12; address 100019197
L10001902b_12:
    CMP R10D, 32767
    SETE AL
    CMP EDI, 32768
    SETE CL
    OR CL, AL
    MOVZX EAX, CL
    JMP L10001902b_14     ; inserted

; Entry 10001902b; block 13; address 10001918f
L10001902b_13:
    JMP L10001902b_14

; Entry 10001902b; block 14; address 1000191af
L10001902b_14:
    POP RBP
    RET 



; ---------------------
; Function: 0x1000191b1
; ---------------------
; Entry 1000191b1; block 0; address 1000191b1
L1000191b1_0:
    PUSH RBP
    MOV RBP, RSP
    MOV qword [rel L__DATA___bss + 115016], RDI
    MOV dword [rel L__DATA___bss + 115024], ESI
    XOR EAX, EAX
    MOV dword [rel L__DATA___bss + 115028], EAX
    MOV dword [rel L__DATA___bss + 115032], EDX
    MOV dword [rel L__DATA___bss + 115036], EAX
    MOV dword [rel L__DATA___bss + 115040], EAX
    POP RBP
    RET 



; ---------------------
; Function: 0x1000191de
; ---------------------
; Entry 1000191de; block 0; address 1000191de
L1000191de_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    MOVSXD RAX, ESI
    LEA R14, [rel L__DATA___bss + 115232]
    MOV EDX, dword [R14 + RAX * 4]
    LEA ECX, [RAX + RAX]
    MOV R15D, dword [rel L__DATA___bss + 115212]
    CMP ECX, R15D
    JG L1000191de_2
    JMP L1000191de_1     ; inserted

; Entry 1000191de; block 1; address 10001920c
L1000191de_1:
    MOV dword [RBP + -44], EDX
    MOVSXD R9, EDX
    MOVZX R11D, word [RDI + R9 * 4]
    LEA R10, [rel L__DATA___bss + 117536]
    JMP L1000191de_12     ; inserted

; Entry 1000191de; block 2; address 100019294
L1000191de_2:
    MOV dword [R14 + RAX * 4], EDX
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000191de; block 3; address 100019223
L1000191de_3:
    MOV EDX, ECX
    OR EDX, 1
    MOVSXD R12, EDX
    MOVSXD RBX, dword [R14 + R12 * 4]
    MOVSXD RAX, ECX
    MOVSXD R13, dword [R14 + RAX * 4]
    MOVZX R8D, word [RDI + R13 * 4]
    CMP word [RDI + RBX * 4], R8W
    JAE L1000191de_6
    JMP L1000191de_5     ; inserted

; Entry 1000191de; block 4; address 100019249
L1000191de_4:
    MOVSXD RAX, ECX
    JMP L1000191de_14     ; inserted

; Entry 1000191de; block 5; address 100019242
L1000191de_5:
    MOV RAX, R12
    MOV EBX, EDX
    JMP L1000191de_7

; Entry 1000191de; block 6; address 10001927b
L1000191de_6:
    JNE L1000191de_14
    JMP L1000191de_15     ; inserted

; Entry 1000191de; block 7; address 10001924e
L1000191de_7:
    MOV EAX, dword [R14 + RAX * 4]
    MOVSXD RCX, EAX
    CMP R11W, word [RDI + RCX * 4]
    JB L1000191de_9
    JMP L1000191de_8     ; inserted

; Entry 1000191de; block 8; address 10001925c
L1000191de_8:
    JNE L1000191de_11
    JMP L1000191de_10     ; inserted

; Entry 1000191de; block 9; address 10001928c
L1000191de_9:
    MOV EBX, ESI
    JMP L1000191de_17     ; inserted

; Entry 1000191de; block 10; address 10001925e
L1000191de_10:
    MOV DL, byte [R9 + R10]
    CMP DL, byte [RCX + R10]
    JBE L1000191de_9
    JMP L1000191de_11     ; inserted

; Entry 1000191de; block 11; address 100019268
L1000191de_11:
    MOVSXD RCX, ESI
    MOV dword [R14 + RCX * 4], EAX
    LEA ECX, [RBX + RBX]
    MOV ESI, EBX
    CMP ECX, R15D
    JLE L1000191de_12
    JMP L1000191de_13     ; inserted

; Entry 1000191de; block 12; address 10001921e
L1000191de_12:
    CMP ECX, R15D
    JGE L1000191de_4
    JMP L1000191de_3     ; inserted

; Entry 1000191de; block 13; address 100019279
L1000191de_13:
    JMP L1000191de_17

; Entry 1000191de; block 14; address 10001924c
L1000191de_14:
    MOV EBX, ECX
    JMP L1000191de_7     ; inserted

; Entry 1000191de; block 15; address 10001927d
L1000191de_15:
    MOV R8B, byte [RBX + R10]
    MOV EBX, ECX
    CMP R8B, byte [R13 + R10]
    JBE L1000191de_5
    JMP L1000191de_16     ; inserted

; Entry 1000191de; block 16; address 10001928a
L1000191de_16:
    JMP L1000191de_7

; Entry 1000191de; block 17; address 10001928e
L1000191de_17:
    MOVSXD RAX, EBX
    MOV EDX, dword [RBP + -44]
    JMP L1000191de_2     ; inserted



; ---------------------
; Function: 0x1000192a3
; ---------------------
; Entry 1000192a3; block 0; address 1000192a3
L1000192a3_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R14
    PUSH RBX
    MOVZX R11D, word [RDI + 2]
    LEA EAX, [RSI + 1]
    MOVSXD RCX, EAX
    MOV word [RDI + RCX * 4 + 2], 65535
    TEST ESI, ESI
    JS L1000192a3_2
    JMP L1000192a3_1     ; inserted

; Entry 1000192a3; block 1; address 1000192c4
L1000192a3_1:
    XOR ECX, ECX
    TEST R11W, R11W
    MOV EDX, 138
    MOV ESI, 7
    CMOVE ESI, EDX
    SETE CL
    MOV R10D, 4
    SUB R10D, ECX
    MOV R9D, EAX
    MOV EBX, 4294967295
    XOR R14D, R14D
    LEA R8, [rel L__DATA___bss + 115056]
    XOR EDX, EDX
    JMP L1000192a3_18     ; inserted

; Entry 1000192a3; block 2; address 100019385
L1000192a3_2:
    POP RBX
    POP R14
    POP RBP
    RET 

; Entry 1000192a3; block 3; address 10001930a
L1000192a3_3:
    CMP EAX, R11D
    JNE L1000192a3_4
    JMP L1000192a3_5     ; inserted

; Entry 1000192a3; block 4; address 100019313
L1000192a3_4:
    CMP ECX, R10D
    JGE L1000192a3_7
    JMP L1000192a3_6     ; inserted

; Entry 1000192a3; block 5; address 10001930f
L1000192a3_5:
    MOV EAX, EBX
    JMP L1000192a3_17

; Entry 1000192a3; block 6; address 100019318
L1000192a3_6:
    MOV EDX, EAX
    ADD word [R8 + RDX * 4], CX
    JMP L1000192a3_12

; Entry 1000192a3; block 7; address 100019321
L1000192a3_7:
    TEST EAX, EAX
    JE L1000192a3_9
    JMP L1000192a3_8     ; inserted

; Entry 1000192a3; block 8; address 100019325
L1000192a3_8:
    CMP EAX, EBX
    JE L1000192a3_11
    JMP L1000192a3_10     ; inserted

; Entry 1000192a3; block 9; address 100019339
L1000192a3_9:
    CMP EDX, 9
    JG L1000192a3_14
    JMP L1000192a3_13     ; inserted

; Entry 1000192a3; block 10; address 100019329
L1000192a3_10:
    MOV ECX, EAX
    INC word [R8 + RCX * 4]
    JMP L1000192a3_11     ; inserted

; Entry 1000192a3; block 11; address 100019330
L1000192a3_11:
    INC word [rel L__DATA___bss + 115120]
    JMP L1000192a3_12

; Entry 1000192a3; block 12; address 10001934e
L1000192a3_12:
    XOR ECX, ECX
    TEST R11W, R11W
    JE L1000192a3_16
    JMP L1000192a3_15     ; inserted

; Entry 1000192a3; block 13; address 10001933e
L1000192a3_13:
    INC word [rel L__DATA___bss + 115124]
    JMP L1000192a3_12

; Entry 1000192a3; block 14; address 100019347
L1000192a3_14:
    INC word [rel L__DATA___bss + 115128]
    JMP L1000192a3_12     ; inserted

; Entry 1000192a3; block 15; address 100019356
L1000192a3_15:
    XOR ESI, ESI
    CMP EAX, R11D
    SETE SIL
    MOV R10D, 4
    SUB R10D, ESI
    XOR ESI, 7
    JMP L1000192a3_17

; Entry 1000192a3; block 16; address 10001936d
L1000192a3_16:
    MOV R10D, 3
    MOV ESI, 138
    JMP L1000192a3_17     ; inserted

; Entry 1000192a3; block 17; address 100019378
L1000192a3_17:
    MOV EDX, ECX
    MOV EBX, EAX
    CMP R9, R14
    JNE L1000192a3_18
    JMP L1000192a3_2     ; inserted

; Entry 1000192a3; block 18; address 1000192f7
L1000192a3_18:
    MOV EAX, R11D
    MOVZX R11D, word [RDI + R14 * 4 + 6]
    INC R14
    LEA ECX, [RDX + 1]
    CMP ECX, ESI
    JGE L1000192a3_4
    JMP L1000192a3_3     ; inserted



; ---------------------
; Function: 0x10001938a
; ---------------------
; Entry 10001938a; block 0; address 10001938a
L10001938a_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R13
    PUSH R12
    PUSH RBX
    SUB RSP, 24
    TEST ESI, ESI
    JS L10001938a_2
    JMP L10001938a_1     ; inserted

; Entry 10001938a; block 1; address 1000193a3
L10001938a_1:
    MOVZX ECX, word [RDI + 2]
    XOR EDX, EDX
    TEST CX, CX
    MOV EBX, 138
    MOV EAX, 7
    CMOVE EAX, EBX
    SETE DL
    MOV R8D, 4
    SUB R8D, EDX
    INC ESI
    MOV EDX, 4294967295
    XOR R13D, R13D
    LEA R14, [rel L__DATA___bss + 115056]
    XOR R15D, R15D
    MOV qword [RBP + -64], RSI
    MOV qword [RBP + -56], RDI
    JMP L10001938a_28     ; inserted

; Entry 10001938a; block 2; address 1000194ef
L10001938a_2:
    ADD RSP, 24
    POP RBX
    POP R12
    POP R13
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10001938a; block 3; address 1000193f5
L10001938a_3:
    CMP R12D, ECX
    JNE L10001938a_4
    JMP L10001938a_5     ; inserted

; Entry 10001938a; block 4; address 100019402
L10001938a_4:
    CMP EBX, R8D
    MOV dword [RBP + -44], ECX
    JGE L10001938a_7
    JMP L10001938a_6     ; inserted

; Entry 10001938a; block 5; address 1000193fa
L10001938a_5:
    MOV R12D, EDX
    JMP L10001938a_27

; Entry 10001938a; block 6; address 10001940a
L10001938a_6:
    MOV R15D, R12D
    JMP L10001938a_9     ; inserted

; Entry 10001938a; block 7; address 100019426
L10001938a_7:
    TEST R12D, R12D
    JE L10001938a_12
    JMP L10001938a_11     ; inserted

; Entry 10001938a; block 8; address 10001941d
L10001938a_8:
    DEC EBX
    JNE L10001938a_9
    JMP L10001938a_10     ; inserted

; Entry 10001938a; block 9; address 10001940d
L10001938a_9:
    MOVZX EDI, word [R14 + R15 * 4]
    MOVZX ESI, word [R14 + R15 * 4 + 2]
    CALL L100018d4a_0
    JMP L10001938a_8     ; inserted

; Entry 10001938a; block 10; address 100019421
L10001938a_10:
    JMP L10001938a_23

; Entry 10001938a; block 11; address 10001942b
L10001938a_11:
    CMP R12D, EDX
    JE L10001938a_14
    JMP L10001938a_13     ; inserted

; Entry 10001938a; block 12; address 100019463
L10001938a_12:
    CMP R15D, 9
    JG L10001938a_18
    JMP L10001938a_17     ; inserted

; Entry 10001938a; block 13; address 100019430
L10001938a_13:
    MOV EAX, R12D
    MOVZX EDI, word [R14 + RAX * 4]
    MOVZX ESI, word [R14 + RAX * 4 + 2]
    CALL L100018d4a_0
    JMP L10001938a_15     ; inserted

; Entry 10001938a; block 14; address 100019446
L10001938a_14:
    MOVZX EDI, word [rel L__DATA___bss + 115120]
    MOVZX ESI, word [rel L__DATA___bss + 115122]
    CALL L100018d4a_0
    JMP L10001938a_16     ; inserted

; Entry 10001938a; block 15; address 100019443
L10001938a_15:
    MOV EBX, R15D
    JMP L10001938a_14     ; inserted

; Entry 10001938a; block 16; address 100019459
L10001938a_16:
    ADD EBX, 18446744073709551613
    MOV ESI, 2
    JMP L10001938a_22

; Entry 10001938a; block 17; address 100019469
L10001938a_17:
    MOVZX EDI, word [rel L__DATA___bss + 115124]
    MOVZX ESI, word [rel L__DATA___bss + 115126]
    CALL L100018d4a_0
    JMP L10001938a_19     ; inserted

; Entry 10001938a; block 18; address 100019487
L10001938a_18:
    MOVZX EDI, word [rel L__DATA___bss + 115128]
    MOVZX ESI, word [rel L__DATA___bss + 115130]
    CALL L100018d4a_0
    JMP L10001938a_20     ; inserted

; Entry 10001938a; block 19; address 10001947c
L10001938a_19:
    ADD R15D, 18446744073709551614
    MOV ESI, 3
    JMP L10001938a_21

; Entry 10001938a; block 20; address 10001949a
L10001938a_20:
    ADD R15D, 18446744073709551606
    MOV ESI, 7
    JMP L10001938a_21     ; inserted

; Entry 10001938a; block 21; address 1000194a3
L10001938a_21:
    MOV EBX, R15D
    JMP L10001938a_22     ; inserted

; Entry 10001938a; block 22; address 1000194a6
L10001938a_22:
    MOV EDI, EBX
    CALL L100018d4a_0
    JMP L10001938a_23     ; inserted

; Entry 10001938a; block 23; address 1000194ad
L10001938a_23:
    XOR EBX, EBX
    MOV ECX, dword [RBP + -44]
    TEST CX, CX
    JE L10001938a_25
    JMP L10001938a_24     ; inserted

; Entry 10001938a; block 24; address 1000194b7
L10001938a_24:
    XOR EAX, EAX
    CMP R12D, ECX
    SETE AL
    MOV R8D, 4
    SUB R8D, EAX
    XOR EAX, 7
    JMP L10001938a_26

; Entry 10001938a; block 25; address 1000194cd
L10001938a_25:
    MOV R8D, 3
    MOV EAX, 138
    JMP L10001938a_26     ; inserted

; Entry 10001938a; block 26; address 1000194d8
L10001938a_26:
    MOV RSI, qword [RBP + -64]
    MOV RDI, qword [RBP + -56]
    JMP L10001938a_27     ; inserted

; Entry 10001938a; block 27; address 1000194e0
L10001938a_27:
    MOV R15D, EBX
    MOV EDX, R12D
    CMP R13, RSI
    JNE L10001938a_28
    JMP L10001938a_2     ; inserted

; Entry 10001938a; block 28; address 1000193e1
L10001938a_28:
    MOV R12D, ECX
    MOVZX ECX, word [RDI + R13 * 4 + 6]
    INC R13
    LEA EBX, [R15 + 1]
    CMP EBX, EAX
    JGE L10001938a_4
    JMP L10001938a_3     ; inserted



; ---------------------
; Function: 0x10001950d
; ---------------------
; Entry 10001950d; block 0; address 10001950d
L10001950d_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH R12
    PUSH RBX
    MOV R14, RDX
    MOV R15D, ESI
    MOV R12, RDI
    LEA RDI, [rel L__TEXT___cstring_11234]
    CALL _perror
    JMP L10001950d_1     ; inserted

; Entry 10001950d; block 1; address 10001952d
L10001950d_1:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L10001950d_3
    JMP L10001950d_2     ; inserted

; Entry 10001950d; block 2; address 10001953c
L10001950d_2:
    CALL ___error
    JMP L10001950d_4     ; inserted

; Entry 10001950d; block 3; address 10001955c
L10001950d_3:
    MOV RSI, qword [R12]
    LEA RDI, [rel L__TEXT___cstring_10929]
    CALL L1000034f4_0
    JMP L10001950d_6     ; inserted

; Entry 10001950d; block 4; address 100019541
L10001950d_4:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L10001950d_5     ; inserted

; Entry 10001950d; block 5; address 100019548
L10001950d_5:
    LEA RSI, [rel L__TEXT___cstring_11246]
    MOV RDI, RBX
    MOV RDX, RAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L10001950d_3     ; inserted

; Entry 10001950d; block 6; address 10001956c
L10001950d_6:
    TEST R15B, 1
    JE L10001950d_8
    JMP L10001950d_7     ; inserted

; Entry 10001950d; block 7; address 100019572
L10001950d_7:
    POP RBX
    POP R12
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 10001950d; block 8; address 10001957b
L10001950d_8:
    MOV R8, qword [R14]
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_10899]
    MOV EDX, 5105
    MOV RDI, RBX
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L10001950d_9     ; inserted

; Entry 10001950d; block 9; address 10001959d
L10001950d_9:
    PUSH 18
    POP RDI
    MOV RSI, RBX
    CALL L100002e30_0



; ---------------------
; Function: 0x1000195a8
; ---------------------
; Entry 1000195a8; block 0; address 1000195a8
L1000195a8_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R15
    PUSH R14
    PUSH RBX
    PUSH RAX
    MOV R14, RCX
    MOV R15D, EDX
    MOV RBX, RSI
    CALL _perror
    JMP L1000195a8_1     ; inserted

; Entry 1000195a8; block 1; address 1000195c0
L1000195a8_1:
    MOV RSI, qword [RBX]
    LEA RDI, [rel L__TEXT___cstring_10929]
    CALL L1000034f4_0
    JMP L1000195a8_2     ; inserted

; Entry 1000195a8; block 2; address 1000195cf
L1000195a8_2:
    TEST R15B, 1
    JE L1000195a8_4
    JMP L1000195a8_3     ; inserted

; Entry 1000195a8; block 3; address 1000195d5
L1000195a8_3:
    ADD RSP, 8
    POP RBX
    POP R14
    POP R15
    POP RBP
    RET 

; Entry 1000195a8; block 4; address 1000195e0
L1000195a8_4:
    MOV R8, qword [R14 + 80]
    LEA RBX, [rel L__DATA___common + 1216]
    LEA RCX, [rel L__TEXT___cstring_10899]
    MOV EDX, 5105
    MOV RDI, RBX
    XOR ESI, ESI
    XOR EAX, EAX
    CALL ___sprintf_chk
    JMP L1000195a8_5     ; inserted

; Entry 1000195a8; block 5; address 100019603
L1000195a8_5:
    PUSH 18
    POP RDI
    MOV RSI, RBX
    CALL L100002e30_0



; ---------------------
; Function: 0x100019610
; ---------------------
; Entry 100019610; block 0; address 100019610
L100019610_0:
    PUSH RBP
    MOV RBP, RSP
    PUSH R14
    PUSH RBX
    MOV R14, RDI
    LEA RDI, [rel L__TEXT___cstring_35602]
    CALL _perror
    JMP L100019610_1     ; inserted

; Entry 100019610; block 1; address 100019626
L100019610_1:
    LEA RAX, [rel L__DATA___common + 240]
    MOV RBX, qword [RAX]
    TEST RBX, RBX
    JE L100019610_3
    JMP L100019610_2     ; inserted

; Entry 100019610; block 2; address 100019635
L100019610_2:
    CALL ___error
    JMP L100019610_4     ; inserted

; Entry 100019610; block 3; address 100019655
L100019610_3:
    MOV RSI, qword [R14 + 128]
    LEA RDI, [rel L__TEXT___cstring_35633]
    CALL L1000034f4_0
    JMP L100019610_6     ; inserted

; Entry 100019610; block 4; address 10001963a
L100019610_4:
    MOV EDI, dword [RAX]
    CALL _strerror
    JMP L100019610_5     ; inserted

; Entry 100019610; block 5; address 100019641
L100019610_5:
    LEA RSI, [rel L__TEXT___cstring_35615]
    MOV RDI, RBX
    MOV RDX, RAX
    XOR EAX, EAX
    CALL _fprintf
    JMP L100019610_3     ; inserted

; Entry 100019610; block 6; address 100019668
L100019610_6:
    POP RBX
    POP R14
    POP RBP
    RET 




section .data
L__TEXT___cstring_0: db `Copyright (c) 1990-2008 Info-ZIP - Type '%s "-L"' for software license.`, 0
L__TEXT___cstring_72: db `This is %s %s (%s), by Info-ZIP.`, 0
L__TEXT___cstring_105: db `Currently maintained by E. Gordon.  Please send bug reports to`, 0
L__TEXT___cstring_168: db `the authors using the web page at www.info-zip.org; see README for details.`, 0
L__TEXT___cstring_244: db ``, 0
L__TEXT___cstring_245: db `Latest sources and executables are at ftp://ftp.info-zip.org/pub/infozip,`, 0
L__TEXT___cstring_319: db `as of above date; see http://www.info-zip.org/ for other sites.`, 0
L__TEXT___cstring_383: db `Encryption notice:`, 0
L__TEXT___cstring_402: db `\tThe encryption code of this program is not copyrighted and is`, 0
L__TEXT___cstring_465: db `\tput in the public domain.  It was originally written in Europe`, 0
L__TEXT___cstring_529: db `\tand, to the best of our knowledge, can be freely distributed`, 0
L__TEXT___cstring_591: db `\tin both source and object forms from any country, including`, 0
L__TEXT___cstring_652: db `\tthe USA under License Exception TSU of the U.S. Export`, 0
L__TEXT___cstring_708: db `\tAdministration Regulations (section 740.13(e)) of 6 June 2002.`, 0
L__TEXT___cstring_772: db `Copyright (c) 1990-2008 Info-ZIP.  All rights reserved.`, 0
L__TEXT___cstring_828: db `For the purposes of this copyright and license, "Info-ZIP" is defined as`, 0
L__TEXT___cstring_901: db `the following set of individuals:`, 0
L__TEXT___cstring_935: db `   Mark Adler, John Bush, Karl Davis, Harald Denker, Jean-Michel Dubois,`, 0
L__TEXT___cstring_1008: db `   Jean-loup Gailly, Hunter Goatley, Ed Gordon, Ian Gorman, Chris Herborth,`, 0
L__TEXT___cstring_1084: db `   Dirk Haase, Greg Hartwig, Robert Heath, Jonathan Hudson, Paul Kienitz,`, 0
L__TEXT___cstring_1158: db `   David Kirschbaum, Johnny Lee, Onno van der Linden, Igor Mandrichenko,`, 0
L__TEXT___cstring_1231: db `   Steve P. Miller, Sergio Monesi, Keith Owens, George Petrov, Greg Roelofs,`, 0
L__TEXT___cstring_1308: db `   Kai Uwe Rommel, Steve Salisbury, Dave Smith, Steven M. Schweda,`, 0
L__TEXT___cstring_1375: db `   Christian Spieler, Cosmin Truta, Antoine Verheijen, Paul von Behren,`, 0
L__TEXT___cstring_1447: db `   Rich Wales, Mike White`, 0
L__TEXT___cstring_1473: db `This software is provided "as is," without warranty of any kind, express`, 0
L__TEXT___cstring_1546: db `or implied.  In no event shall Info-ZIP or its contributors be held liable`, 0
L__TEXT___cstring_1621: db `for any direct, indirect, incidental, special or consequential damages`, 0
L__TEXT___cstring_1692: db `arising out of the use of or inability to use this software.`, 0
L__TEXT___cstring_1753: db `Permission is granted to anyone to use this software for any purpose,`, 0
L__TEXT___cstring_1823: db `including commercial applications, and to alter it and redistribute it`, 0
L__TEXT___cstring_1894: db `freely, subject to the above disclaimer and the following restrictions:`, 0
L__TEXT___cstring_1966: db `    1. Redistributions of source code (in whole or in part) must retain`, 0
L__TEXT___cstring_2038: db `       the above copyright notice, definition, disclaimer, and this list`, 0
L__TEXT___cstring_2111: db `       of conditions.`, 0
L__TEXT___cstring_2133: db `    2. Redistributions in binary form (compiled executables and libraries)`, 0
L__TEXT___cstring_2208: db `       must reproduce the above copyright notice, definition, disclaimer,`, 0
L__TEXT___cstring_2282: db `       and this list of conditions in documentation and/or other materials`, 0
L__TEXT___cstring_2357: db `       provided with the distribution.  The sole exception to this condition`, 0
L__TEXT___cstring_2434: db `       is redistribution of a standard UnZipSFX binary (including SFXWiz) as`, 0
L__TEXT___cstring_2511: db `       part of a self-extracting archive; that is permitted without inclusion`, 0
L__TEXT___cstring_2589: db `       of this license, as long as the normal SFX banner has not been removed`, 0
L__TEXT___cstring_2667: db `       from the binary or disabled.`, 0
L__TEXT___cstring_2703: db `    3. Altered versions--including, but not limited to, ports to new operating`, 0
L__TEXT___cstring_2782: db `       systems, existing ports with new graphical interfaces, versions with`, 0
L__TEXT___cstring_2858: db `       modified or added functionality, and dynamic, shared, or static library`, 0
L__TEXT___cstring_2937: db `       versions not from Info-ZIP--must be plainly marked as such and must not`, 0
L__TEXT___cstring_3016: db `       be misrepresented as being the original source or, if binaries,`, 0
L__TEXT___cstring_3087: db `       compiled from the original source.  Such altered versions also must not`, 0
L__TEXT___cstring_3166: db `       be misrepresented as being Info-ZIP releases--including, but not`, 0
L__TEXT___cstring_3238: db `       limited to, labeling of the altered versions with the names "Info-ZIP"`, 0
L__TEXT___cstring_3316: db `       (or any variation thereof, including, but not limited to, different`, 0
L__TEXT___cstring_3391: db `       capitalizations), "Pocket UnZip," "WiZ" or "MacZip" without the`, 0
L__TEXT___cstring_3462: db `       explicit permission of Info-ZIP.  Such altered versions are further`, 0
L__TEXT___cstring_3537: db `       prohibited from misrepresentative use of the Zip-Bugs or Info-ZIP`, 0
L__TEXT___cstring_3610: db `       e-mail addresses or the Info-ZIP URL(s), such as to imply Info-ZIP`, 0
L__TEXT___cstring_3684: db `       will provide support for the altered versions.`, 0
L__TEXT___cstring_3738: db `    4. Info-ZIP retains the right to use the names "Info-ZIP," "Zip," "UnZip,"`, 0
L__TEXT___cstring_3817: db `       "UnZipSFX," "WiZ," "Pocket UnZip," "Pocket Zip," and "MacZip" for its`, 0
L__TEXT___cstring_3894: db `       own source and binary releases.`, 0
L__TEXT___cstring_3933: db `zip I/O error: %s`, 0
L__TEXT___cstring_3951: db `\nzip error: %s (%s)\n`, 0
L__TEXT___cstring_3972: db `zip I/O error: %s\n`, 0
L__TEXT___cstring_3991: db `attempting to restore %s to its previous state\n`, 0
L__TEXT___cstring_4039: db `%s%s\n`, 0
L__TEXT___cstring_4045: db `\tzip warning: %s%s\n`, 0
L__TEXT___cstring_4065: db `Verify password: `, 0
L__TEXT___cstring_4083: db `Enter password: `, 0
L__TEXT___cstring_4100: db `stderr is not a tty`, 0
L__TEXT___cstring_4120: db `new zip file left as: `, 0
L__TEXT___cstring_4143: db `was replacing split file`, 0
L__TEXT___cstring_4168: db `0`, 0
L__TEXT___cstring_4170: db `store`, 0
L__TEXT___cstring_4176: db `1`, 0
L__TEXT___cstring_4178: db `compress-1`, 0
L__TEXT___cstring_4189: db `compress 1`, 0
L__TEXT___cstring_4200: db `2`, 0
L__TEXT___cstring_4202: db `compress-2`, 0
L__TEXT___cstring_4213: db `compress 2`, 0
L__TEXT___cstring_4224: db `3`, 0
L__TEXT___cstring_4226: db `compress-3`, 0
L__TEXT___cstring_4237: db `compress 3`, 0
L__TEXT___cstring_4248: db `4`, 0
L__TEXT___cstring_4250: db `compress-4`, 0
L__TEXT___cstring_4261: db `compress 4`, 0
L__TEXT___cstring_4272: db `5`, 0
L__TEXT___cstring_4274: db `compress-5`, 0
L__TEXT___cstring_4285: db `compress 5`, 0
L__TEXT___cstring_4296: db `6`, 0
L__TEXT___cstring_4298: db `compress-6`, 0
L__TEXT___cstring_4309: db `compress 6`, 0
L__TEXT___cstring_4320: db `7`, 0
L__TEXT___cstring_4322: db `compress-7`, 0
L__TEXT___cstring_4333: db `compress 7`, 0
L__TEXT___cstring_4344: db `8`, 0
L__TEXT___cstring_4346: db `compress-8`, 0
L__TEXT___cstring_4357: db `compress 8`, 0
L__TEXT___cstring_4368: db `9`, 0
L__TEXT___cstring_4370: db `compress-9`, 0
L__TEXT___cstring_4381: db `compress 9`, 0
L__TEXT___cstring_4392: db `A`, 0
L__TEXT___cstring_4394: db `adjust-sfx`, 0
L__TEXT___cstring_4405: db `adjust self extractor offsets`, 0
L__TEXT___cstring_4435: db `b`, 0
L__TEXT___cstring_4437: db `temp-path`, 0
L__TEXT___cstring_4447: db `dir to use for temp archive`, 0
L__TEXT___cstring_4475: db `c`, 0
L__TEXT___cstring_4477: db `entry-comments`, 0
L__TEXT___cstring_4492: db `add comments for each entry`, 0
L__TEXT___cstring_4520: db `d`, 0
L__TEXT___cstring_4522: db `delete`, 0
L__TEXT___cstring_4529: db `delete entries from archive`, 0
L__TEXT___cstring_4557: db `db`, 0
L__TEXT___cstring_4560: db `display-bytes`, 0
L__TEXT___cstring_4574: db `display running bytes`, 0
L__TEXT___cstring_4596: db `dc`, 0
L__TEXT___cstring_4599: db `display-counts`, 0
L__TEXT___cstring_4614: db `display running file count`, 0
L__TEXT___cstring_4641: db `dd`, 0
L__TEXT___cstring_4644: db `display-dots`, 0
L__TEXT___cstring_4657: db `display dots as process each file`, 0
L__TEXT___cstring_4691: db `dg`, 0
L__TEXT___cstring_4694: db `display-globaldots`, 0
L__TEXT___cstring_4713: db `display dots for archive instead of files`, 0
L__TEXT___cstring_4755: db `ds`, 0
L__TEXT___cstring_4758: db `dot-size`, 0
L__TEXT___cstring_4767: db `set progress dot size - default 10M bytes`, 0
L__TEXT___cstring_4809: db `du`, 0
L__TEXT___cstring_4812: db `display-usize`, 0
L__TEXT___cstring_4826: db `display uncompressed size in bytes`, 0
L__TEXT___cstring_4861: db `dv`, 0
L__TEXT___cstring_4864: db `display-volume`, 0
L__TEXT___cstring_4879: db `display volume (disk) number`, 0
L__TEXT___cstring_4908: db `D`, 0
L__TEXT___cstring_4910: db `no-dir-entries`, 0
L__TEXT___cstring_4925: db `no entries for dirs themselves (-x */)`, 0
L__TEXT___cstring_4964: db `DF`, 0
L__TEXT___cstring_4967: db `difference-archive`, 0
L__TEXT___cstring_4986: db `create diff archive with changed/new files`, 0
L__TEXT___cstring_5029: db `e`, 0
L__TEXT___cstring_5031: db `encrypt`, 0
L__TEXT___cstring_5039: db `encrypt entries, ask for password`, 0
L__TEXT___cstring_5073: db `F`, 0
L__TEXT___cstring_5075: db `fix`, 0
L__TEXT___cstring_5079: db `fix mostly intact archive (try first)`, 0
L__TEXT___cstring_5117: db `FF`, 0
L__TEXT___cstring_5120: db `fixfix`, 0
L__TEXT___cstring_5127: db `try harder to fix archive (not as reliable)`, 0
L__TEXT___cstring_5171: db `FI`, 0
L__TEXT___cstring_5174: db `fifo`, 0
L__TEXT___cstring_5179: db `read Unix FIFO (zip will wait on open pipe)`, 0
L__TEXT___cstring_5223: db `FS`, 0
L__TEXT___cstring_5226: db `filesync`, 0
L__TEXT___cstring_5235: db `add/delete entries to make archive match OS`, 0
L__TEXT___cstring_5279: db `f`, 0
L__TEXT___cstring_5281: db `freshen`, 0
L__TEXT___cstring_5289: db `freshen existing archive entries`, 0
L__TEXT___cstring_5322: db `fd`, 0
L__TEXT___cstring_5325: db `force-descriptors`, 0
L__TEXT___cstring_5343: db `force data descriptors as if streaming`, 0
L__TEXT___cstring_5382: db `fz`, 0
L__TEXT___cstring_5385: db `force-zip64`, 0
L__TEXT___cstring_5397: db `force use of Zip64 format, negate prevents`, 0
L__TEXT___cstring_5440: db `g`, 0
L__TEXT___cstring_5442: db `grow`, 0
L__TEXT___cstring_5447: db `grow existing archive instead of replace`, 0
L__TEXT___cstring_5488: db `h`, 0
L__TEXT___cstring_5490: db `help`, 0
L__TEXT___cstring_5495: db `H`, 0
L__TEXT___cstring_5497: db `?`, 0
L__TEXT___cstring_5499: db `h2`, 0
L__TEXT___cstring_5502: db `more-help`, 0
L__TEXT___cstring_5512: db `extended help`, 0
L__TEXT___cstring_5526: db `i`, 0
L__TEXT___cstring_5528: db `include`, 0
L__TEXT___cstring_5536: db `include only files matching patterns`, 0
L__TEXT___cstring_5573: db `j`, 0
L__TEXT___cstring_5575: db `junk-paths`, 0
L__TEXT___cstring_5586: db `strip paths and just store file names`, 0
L__TEXT___cstring_5624: db `J`, 0
L__TEXT___cstring_5626: db `junk-sfx`, 0
L__TEXT___cstring_5635: db `strip self extractor from archive`, 0
L__TEXT___cstring_5669: db `k`, 0
L__TEXT___cstring_5671: db `DOS-names`, 0
L__TEXT___cstring_5681: db `force use of 8.3 DOS names`, 0
L__TEXT___cstring_5708: db `l`, 0
L__TEXT___cstring_5710: db `to-crlf`, 0
L__TEXT___cstring_5718: db `convert text file line ends - LF->CRLF`, 0
L__TEXT___cstring_5757: db `ll`, 0
L__TEXT___cstring_5760: db `from-crlf`, 0
L__TEXT___cstring_5770: db `convert text file line ends - CRLF->LF`, 0
L__TEXT___cstring_5809: db `lf`, 0
L__TEXT___cstring_5812: db `logfile-path`, 0
L__TEXT___cstring_5825: db `log to log file at path (default overwrite)`, 0
L__TEXT___cstring_5869: db `la`, 0
L__TEXT___cstring_5872: db `log-append`, 0
L__TEXT___cstring_5883: db `append to existing log file`, 0
L__TEXT___cstring_5911: db `li`, 0
L__TEXT___cstring_5914: db `log-info`, 0
L__TEXT___cstring_5923: db `include informational messages in log`, 0
L__TEXT___cstring_5961: db `L`, 0
L__TEXT___cstring_5963: db `license`, 0
L__TEXT___cstring_5971: db `display license`, 0
L__TEXT___cstring_5987: db `m`, 0
L__TEXT___cstring_5989: db `move`, 0
L__TEXT___cstring_5994: db `add files to archive then delete files`, 0
L__TEXT___cstring_6033: db `mm`, 0
L__TEXT___cstring_6036: db `not used`, 0
L__TEXT___cstring_6045: db `MM`, 0
L__TEXT___cstring_6048: db `must-match`, 0
L__TEXT___cstring_6059: db `error if in file not matched/not readable`, 0
L__TEXT___cstring_6101: db `n`, 0
L__TEXT___cstring_6103: db `suffixes`, 0
L__TEXT___cstring_6112: db `suffixes to not compress: .gz:.zip`, 0
L__TEXT___cstring_6147: db `nw`, 0
L__TEXT___cstring_6150: db `no-wild`, 0
L__TEXT___cstring_6158: db `no wildcards during add or update`, 0
L__TEXT___cstring_6192: db `o`, 0
L__TEXT___cstring_6194: db `latest-time`, 0
L__TEXT___cstring_6206: db `use latest entry time as archive time`, 0
L__TEXT___cstring_6244: db `O`, 0
L__TEXT___cstring_6246: db `output-file`, 0
L__TEXT___cstring_6258: db `set out zipfile different than in zipfile`, 0
L__TEXT___cstring_6300: db `p`, 0
L__TEXT___cstring_6302: db `paths`, 0
L__TEXT___cstring_6308: db `store paths`, 0
L__TEXT___cstring_6320: db `P`, 0
L__TEXT___cstring_6322: db `password`, 0
L__TEXT___cstring_6331: db `encrypt entries, option value is password`, 0
L__TEXT___cstring_6373: db `q`, 0
L__TEXT___cstring_6375: db `quiet`, 0
L__TEXT___cstring_6381: db `r`, 0
L__TEXT___cstring_6383: db `recurse-paths`, 0
L__TEXT___cstring_6397: db `recurse down listed paths`, 0
L__TEXT___cstring_6423: db `R`, 0
L__TEXT___cstring_6425: db `recurse-patterns`, 0
L__TEXT___cstring_6442: db `recurse current dir and match patterns`, 0
L__TEXT___cstring_6481: db `RE`, 0
L__TEXT___cstring_6484: db `regex`, 0
L__TEXT___cstring_6490: db `allow [list] matching (regex)`, 0
L__TEXT___cstring_6520: db `s`, 0
L__TEXT___cstring_6522: db `split-size`, 0
L__TEXT___cstring_6533: db `do splits, set split size (-s=0 no splits)`, 0
L__TEXT___cstring_6576: db `sp`, 0
L__TEXT___cstring_6579: db `split-pause`, 0
L__TEXT___cstring_6591: db `pause while splitting to select destination`, 0
L__TEXT___cstring_6635: db `sv`, 0
L__TEXT___cstring_6638: db `split-verbose`, 0
L__TEXT___cstring_6652: db `be verbose about creating splits`, 0
L__TEXT___cstring_6685: db `sb`, 0
L__TEXT___cstring_6688: db `split-bell`, 0
L__TEXT___cstring_6699: db `when pause for next split ring bell`, 0
L__TEXT___cstring_6735: db `sc`, 0
L__TEXT___cstring_6738: db `show-command`, 0
L__TEXT___cstring_6751: db `show command line`, 0
L__TEXT___cstring_6769: db `sd`, 0
L__TEXT___cstring_6772: db `show-debug`, 0
L__TEXT___cstring_6783: db `show debug`, 0
L__TEXT___cstring_6794: db `sf`, 0
L__TEXT___cstring_6797: db `show-files`, 0
L__TEXT___cstring_6808: db `show files to operate on and exit`, 0
L__TEXT___cstring_6842: db `so`, 0
L__TEXT___cstring_6845: db `show-options`, 0
L__TEXT___cstring_6858: db `show options`, 0
L__TEXT___cstring_6871: db `t`, 0
L__TEXT___cstring_6873: db `from-date`, 0
L__TEXT___cstring_6883: db `exclude before date`, 0
L__TEXT___cstring_6903: db `tt`, 0
L__TEXT___cstring_6906: db `before-date`, 0
L__TEXT___cstring_6918: db `include before date`, 0
L__TEXT___cstring_6938: db `T`, 0
L__TEXT___cstring_6940: db `test`, 0
L__TEXT___cstring_6945: db `test updates before replacing archive`, 0
L__TEXT___cstring_6983: db `TT`, 0
L__TEXT___cstring_6986: db `unzip-command`, 0
L__TEXT___cstring_7000: db `unzip command to use, name is added to end`, 0
L__TEXT___cstring_7043: db `u`, 0
L__TEXT___cstring_7045: db `update`, 0
L__TEXT___cstring_7052: db `update existing entries and add new`, 0
L__TEXT___cstring_7088: db `U`, 0
L__TEXT___cstring_7090: db `copy-entries`, 0
L__TEXT___cstring_7103: db `select from archive instead of file system`, 0
L__TEXT___cstring_7146: db `v`, 0
L__TEXT___cstring_7148: db `verbose`, 0
L__TEXT___cstring_7156: db `display additional information`, 0
L__TEXT___cstring_7187: db `version`, 0
L__TEXT___cstring_7195: db `(if no other args) show version information`, 0
L__TEXT___cstring_7239: db `ws`, 0
L__TEXT___cstring_7242: db `wild-stop-dirs`, 0
L__TEXT___cstring_7257: db `* stops at /, ** includes any /`, 0
L__TEXT___cstring_7289: db `x`, 0
L__TEXT___cstring_7291: db `exclude`, 0
L__TEXT___cstring_7299: db `exclude files matching patterns`, 0
L__TEXT___cstring_7331: db `X`, 0
L__TEXT___cstring_7333: db `strip-extra`, 0
L__TEXT___cstring_7345: db `-X- keep all ef, -X strip but critical ef`, 0
L__TEXT___cstring_7387: db `y`, 0
L__TEXT___cstring_7389: db `symlinks`, 0
L__TEXT___cstring_7398: db `store symbolic links`, 0
L__TEXT___cstring_7419: db `z`, 0
L__TEXT___cstring_7421: db `archive-comment`, 0
L__TEXT___cstring_7437: db `ask for archive comment`, 0
L__TEXT___cstring_7461: db `Z`, 0
L__TEXT___cstring_7463: db `compression-method`, 0
L__TEXT___cstring_7482: db `compression method`, 0
L__TEXT___cstring_7501: db `@`, 0
L__TEXT___cstring_7503: db `names-stdin`, 0
L__TEXT___cstring_7515: db `get file names from stdin, one per line`, 0
L__TEXT___cstring_7555: db `-v`, 0
L__TEXT___cstring_7558: db `ZIPOPT`, 0
L__TEXT___cstring_7565: db `ZIP`, 0
L__TEXT___cstring_7569: db `specify just one action`, 0
L__TEXT___cstring_7593: db `option -ds (--dot-size) has bad size:  '%s'`, 0
L__TEXT___cstring_7637: db `dot size must be at least 32 KB:  '%s'`, 0
L__TEXT___cstring_7676: db `-mm not supported, Must_Match is -MM`, 0
L__TEXT___cstring_7713: db `do not specify both -r and -R`, 0
L__TEXT___cstring_7743: db `-`, 0
L__TEXT___cstring_7745: db `bad split size:  '%s'`, 0
L__TEXT___cstring_7767: db `minimum split size is 64 KB:  '%s'`, 0
L__TEXT___cstring_7802: db `%4d-%2d-%2d`, 0
L__TEXT___cstring_7814: db `%2d%2d%4d`, 0
L__TEXT___cstring_7824: db `invalid date entered for -t option - use mmddyyyy or yyyy-mm-dd`, 0
L__TEXT___cstring_7888: db `invalid date entered for -tt option - use mmddyyyy or yyyy-mm-dd`, 0
L__TEXT___cstring_7953: db `deflate`, 0
L__TEXT___cstring_7961: db `bzip2`, 0
L__TEXT___cstring_7967: db `Compression method bzip2 not enabled`, 0
L__TEXT___cstring_8004: db `valid compression methods are:  store, deflate)`, 0
L__TEXT___cstring_8052: db `unknown compression method found:  `, 0
L__TEXT___cstring_8088: db `Option -Z (--compression-method):  unknown method`, 0
L__TEXT___cstring_8138: db `--`, 0
L__TEXT___cstring_8141: db `can't use -- before archive name`, 0
L__TEXT___cstring_8174: db `was processing arguments`, 0
L__TEXT___cstring_8199: db `sd: Zipfile name '%s'\n`, 0
L__TEXT___cstring_8222: db `can't read input (-) and filenames (-@) both from stdin`, 0
L__TEXT___cstring_8278: db `no such option ID: %ld`, 0
L__TEXT___cstring_8301: db `was getting encryption password`, 0
L__TEXT___cstring_8333: db `zero length password not allowed`, 0
L__TEXT___cstring_8366: db `was verifying encryption password`, 0
L__TEXT___cstring_8400: db `password verification failed`, 0
L__TEXT___cstring_8429: db `sd: Command line read\n`, 0
L__TEXT___cstring_8452: db `command line:\n`, 0
L__TEXT___cstring_8467: db `'%s'  `, 0
L__TEXT___cstring_8474: db ` %-2s  %-18s %-4s %-3s %-30s\n`, 0
L__TEXT___cstring_8504: db `sh`, 0
L__TEXT___cstring_8507: db `long`, 0
L__TEXT___cstring_8512: db `val`, 0
L__TEXT___cstring_8516: db `neg`, 0
L__TEXT___cstring_8520: db `description`, 0
L__TEXT___cstring_8532: db `----`, 0
L__TEXT___cstring_8537: db `---`, 0
L__TEXT___cstring_8541: db `-----------`, 0
L__TEXT___cstring_8553: db ` %-2s  %-18s `, 0
L__TEXT___cstring_8567: db `%-4s `, 0
L__TEXT___cstring_8573: db `req`, 0
L__TEXT___cstring_8577: db `opt`, 0
L__TEXT___cstring_8581: db `list`, 0
L__TEXT___cstring_8586: db `char`, 0
L__TEXT___cstring_8591: db `num`, 0
L__TEXT___cstring_8595: db `unk`, 0
L__TEXT___cstring_8599: db `%-3s `, 0
L__TEXT___cstring_8605: db `%-30s\n`, 0
L__TEXT___cstring_8612: db `logpath`, 0
L__TEXT___cstring_8620: db `.log`, 0
L__TEXT___cstring_8625: db `a`, 0
L__TEXT___cstring_8627: db `w`, 0
L__TEXT___cstring_8629: db `could not open logfile '%s'`, 0
L__TEXT___cstring_8657: db `---------\n`, 0
L__TEXT___cstring_8668: db `Zip log opened %s`, 0
L__TEXT___cstring_8686: db `command line arguments:\n `, 0
L__TEXT___cstring_8712: db `"%s" `, 0
L__TEXT___cstring_8718: db `%s `, 0
L__TEXT___cstring_8722: db `\n\n`, 0
L__TEXT___cstring_8725: db `archive name must end in .zip for splits`, 0
L__TEXT___cstring_8766: db `--out path must be different than in path: %s`, 0
L__TEXT___cstring_8812: db `can't use --diff (-DF) with fix (-F or -FF)`, 0
L__TEXT___cstring_8856: db `-U (--copy) requires -O (--out)`, 0
L__TEXT___cstring_8888: db `fix options -F and -FF require --out:\n`, 0
L__TEXT___cstring_8927: db `                     zip -F indamagedarchive --out outfixedarchive`, 0
L__TEXT___cstring_8994: db `fix options require --out`, 0
L__TEXT___cstring_9020: db `no other actions allowed when fixing archive (-F or -FF)`, 0
L__TEXT___cstring_9077: db `-DF (--diff) requires -O (--out)`, 0
L__TEXT___cstring_9110: db `can't use --diff (-DF) with -d or -U`, 0
L__TEXT___cstring_9147: db `nothing to select from`, 0
L__TEXT___cstring_9170: db `name not matched: `, 0
L__TEXT___cstring_9189: db `can't use - and -@ together`, 0
L__TEXT___cstring_9217: db `sd: Zipping to stdout\n`, 0
L__TEXT___cstring_9240: db `missing suffix list`, 0
L__TEXT___cstring_9260: db `;`, 0
L__TEXT___cstring_9262: db `:`, 0
L__TEXT___cstring_9264: db `invalid option(s) used with -d; ignored.`, 0
L__TEXT___cstring_9305: db `can't set method, move, recurse, or comments with copy mode.`, 0
L__TEXT___cstring_9366: db `can't use -y with -k, -y ignored`, 0
L__TEXT___cstring_9399: db `can't use -F with -A, -F ignored`, 0
L__TEXT___cstring_9432: db `can't use -FF with -A, -FF ignored`, 0
L__TEXT___cstring_9467: db `can't use -T on stdout, -T ignored`, 0
L__TEXT___cstring_9502: db `can't create split archive while fixing or adjusting\n`, 0
L__TEXT___cstring_9556: db `can't create split archive with -d or -g or on stdout\n`, 0
L__TEXT___cstring_9611: db `can't use -d, -f, -u, -U, or -g with filesync -FS\n`, 0
L__TEXT___cstring_9662: db `can't use -d, -f, -u, -U, or -g on stdout\n`, 0
L__TEXT___cstring_9705: db `Fix archive (-F) - assume mostly intact archive`, 0
L__TEXT___cstring_9753: db `Fix archive (-FF) - salvage what can`, 0
L__TEXT___cstring_9790: db `sd: Reading archive\n`, 0
L__TEXT___cstring_9811: db `sd: Open zip file and create temp file (-FF)\n`, 0
L__TEXT___cstring_9857: db `sd: Creating new zip file (-FF)\n`, 0
L__TEXT___cstring_9890: db `allocating temp filename`, 0
L__TEXT___cstring_9915: db `ziXXXXXX`, 0
L__TEXT___cstring_9924: db `sd: Writing central directory (-FF)\n`, 0
L__TEXT___cstring_9961: db `zip file empty`, 0
L__TEXT___cstring_9976: db `was replacing the original zip file`, 0
L__TEXT___cstring_10012: db `\nTotal %ld entries (`, 0
L__TEXT___cstring_10033: db ` bytes)`, 0
L__TEXT___cstring_10041: db `\nDone %s`, 0
L__TEXT___cstring_10050: db `Could not get info for input split: `, 0
L__TEXT___cstring_10087: db `splitsize = `, 0
L__TEXT___cstring_10100: db ` not found or empty`, 0
L__TEXT___cstring_10120: db `sd: Scanning archive entries\n`, 0
L__TEXT___cstring_10150: db `not in archive: `, 0
L__TEXT___cstring_10167: db `sd: Scanning files\n`, 0
L__TEXT___cstring_10187: db `.`, 0
L__TEXT___cstring_10189: db `current directory for -R`, 0
L__TEXT___cstring_10214: db `-R`, 0
L__TEXT___cstring_10217: db `sd: Applying filters\n`, 0
L__TEXT___cstring_10239: db `sd: Checking dups\n`, 0
L__TEXT___cstring_10258: db `cannot repeat names in zip file`, 0
L__TEXT___cstring_10290: db `was processing list of files`, 0
L__TEXT___cstring_10319: db `sd: Scanning files to update\n`, 0
L__TEXT___cstring_10349: db ` `, 0
L__TEXT___cstring_10351: db `zip diagnostic: %s %s\n`, 0
L__TEXT___cstring_10374: db `up to date`, 0
L__TEXT___cstring_10385: db `missing or early`, 0
L__TEXT___cstring_10402: db `sd: fcount = %u\n`, 0
L__TEXT___cstring_10419: db `Scanning files `, 0
L__TEXT___cstring_10435: db `Archive contains:\n`, 0
L__TEXT___cstring_10454: db `Would Delete:\n`, 0
L__TEXT___cstring_10469: db `Would Freshen:\n`, 0
L__TEXT___cstring_10485: db `Would Copy:\n`, 0
L__TEXT___cstring_10498: db `Would Add/Update:\n`, 0
L__TEXT___cstring_10517: db `  %s\n`, 0
L__TEXT___cstring_10523: db `Total %s entries (%s bytes)\n`, 0
L__TEXT___cstring_10552: db `try: zip`, 0
L__TEXT___cstring_10561: db ` . -i`, 0
L__TEXT___cstring_10567: db `Archive is current`, 0
L__TEXT___cstring_10586: db `r+`, 0
L__TEXT___cstring_10589: db `sd: Open zip file and create temp file\n`, 0
L__TEXT___cstring_10629: db `cannot grow split archive`, 0
L__TEXT___cstring_10655: db `sd: Creating new zip file\n`, 0
L__TEXT___cstring_10682: db `could not open archive to read`, 0
L__TEXT___cstring_10713: db `sd: Adding spanning/splitting signature at top of archive\n`, 0
L__TEXT___cstring_10772: db `sd: Going through old zip file\n`, 0
L__TEXT___cstring_10804: db `freshening: %s`, 0
L__TEXT___cstring_10819: db `      ok: %s`, 0
L__TEXT___cstring_10832: db `updating: %s`, 0
L__TEXT___cstring_10845: db ` current: %s`, 0
L__TEXT___cstring_10858: db `could not read local entry information: `, 0
L__TEXT___cstring_10899: db `was zipping %s`, 0
L__TEXT___cstring_10914: db `was copying %s`, 0
L__TEXT___cstring_10929: db `could not open for reading: `, 0
L__TEXT___cstring_10958: db `file and directory with the same name: `, 0
L__TEXT___cstring_10998: db `will just copy entry over: `, 0
L__TEXT___cstring_11026: db ` skipping: %s`, 0
L__TEXT___cstring_11040: db ` copying: %s`, 0
L__TEXT___cstring_11053: db ` (`, 0
L__TEXT___cstring_11056: db `user requested abort`, 0
L__TEXT___cstring_11077: db `(try -F to attempt to fix)`, 0
L__TEXT___cstring_11104: db `could not seek in output file`, 0
L__TEXT___cstring_11134: db `bad - skipping: `, 0
L__TEXT___cstring_11151: db `deleting: %s`, 0
L__TEXT___cstring_11164: db `sd: Zipping up new entries\n`, 0
L__TEXT___cstring_11192: db `was adding files to zip file`, 0
L__TEXT___cstring_11221: db `  adding: %s`, 0
L__TEXT___cstring_11234: db `zip warning`, 0
L__TEXT___cstring_11246: db `zip warning: %s\n`, 0
L__TEXT___cstring_11263: db `\nzip warning: Not all files were readable\n`, 0
L__TEXT___cstring_11306: db `  files/entries read:  %lu`, 0
L__TEXT___cstring_11333: db ` (%s bytes)`, 0
L__TEXT___cstring_11345: db `  skipped:  %lu`, 0
L__TEXT___cstring_11361: db ` (%s bytes)\n`, 0
L__TEXT___cstring_11374: db `sd: Get comment if any\n`, 0
L__TEXT___cstring_11398: db `was reading comment lines`, 0
L__TEXT___cstring_11424: db `Enter comment for %s:\n`, 0
L__TEXT___cstring_11447: db `current zip file comment is:\n`, 0
L__TEXT___cstring_11477: db `was setting comments to null`, 0
L__TEXT___cstring_11506: db `enter new zip file comment (end with .):\n`, 0
L__TEXT___cstring_11548: db `.\n`, 0
L__TEXT___cstring_11551: db `\r\n`, 0
L__TEXT___cstring_11554: db `sd: Writing central directory\n`, 0
L__TEXT___cstring_11585: db `total bytes=%s, compressed=%s -> %d%% savings\n`, 0
L__TEXT___cstring_11632: db `sd: Writing end of central directory\n`, 0
L__TEXT___cstring_11670: db `sd: Replacing old zip file\n`, 0
L__TEXT___cstring_11698: db `sd: Setting file type\n`, 0
L__TEXT___cstring_11721: db `planned `, 0
L__TEXT___cstring_11730: db ` bytes, actual `, 0
L__TEXT___cstring_11746: db `Zip %s (%s). Usage:`, 0
L__TEXT___cstring_11766: db `zip [-options] [-b path] [-t mmddyyyy] [-n suffixes] [zipfile list] [-xi list]`, 0
L__TEXT___cstring_11845: db `  The default action is to add or replace zipfile entries from list, which`, 0
L__TEXT___cstring_11920: db `  can include the special name - to compress standard input.`, 0
L__TEXT___cstring_11981: db `  If zipfile and list are omitted, zip compresses stdin to stdout.`, 0
L__TEXT___cstring_12048: db `  -f   freshen: only changed files  -u   update: only changed or new files`, 0
L__TEXT___cstring_12123: db `  -d   delete entries in zipfile    -m   move into zipfile (delete OS files)`, 0
L__TEXT___cstring_12200: db `  -r   recurse into directories     -j   junk (don't record) directory names`, 0
L__TEXT___cstring_12277: db `  -0   store only                   -l   convert LF to CR LF (-ll CR LF to LF)`, 0
L__TEXT___cstring_12356: db `  -1   compress faster              -9   compress better`, 0
L__TEXT___cstring_12413: db `  -q   quiet operation              -v   verbose operation/print version info`, 0
L__TEXT___cstring_12491: db `  -c   add one-line comments        -z   add zipfile comment`, 0
L__TEXT___cstring_12552: db `  -@   read names from stdin        -o   make zipfile as old as latest entry`, 0
L__TEXT___cstring_12629: db `  -x   exclude the following names  -i   include only the following names`, 0
L__TEXT___cstring_12703: db `  -F   fix zipfile (-FF try harder) -D   do not add directory entries`, 0
L__TEXT___cstring_12773: db `  -A   adjust self-extracting exe   -J   junk zipfile prefix (unzipsfx)`, 0
L__TEXT___cstring_12845: db `  -T   test zipfile integrity       -X   eXclude eXtra file attributes`, 0
L__TEXT___cstring_12916: db `  -y   store symbolic links as the link instead of the referenced file`, 0
L__TEXT___cstring_12987: db `  -e   encrypt                      -n   don't compress these suffixes`, 0
L__TEXT___cstring_13058: db `  -h2  show more help`, 0
L__TEXT___cstring_13080: db `  `, 0
L__TEXT___cstring_13083: db `zip`, 0
L__TEXT___cstring_13087: db `3.0`, 0
L__TEXT___cstring_13091: db `July 5th 2008`, 0
L__TEXT___cstring_13105: db `USE_EF_UT_TIME       (store Universal Time)`, 0
L__TEXT___cstring_13149: db `SYMLINK_SUPPORT      (symbolic links supported)`, 0
L__TEXT___cstring_13197: db `LARGE_FILE_SUPPORT   (can read and write large files on file system)`, 0
L__TEXT___cstring_13266: db `ZIP64_SUPPORT        (use Zip64 to store large files in archives)`, 0
L__TEXT___cstring_13332: db `STORE_UNIX_UIDs_GIDs (store UID/GID sizes/values using new extra field)`, 0
L__TEXT___cstring_13404: db `UIDGID_16BIT         (old Unix 16-bit UID/GID extra field also used)`, 0
L__TEXT___cstring_13473: db `Zip`, 0
L__TEXT___cstring_13477: db `Zip special compilation options:`, 0
L__TEXT___cstring_13510: db `\t%s\n`, 0
L__TEXT___cstring_13515: db `\t[encryption, version %d.%d%s of %s] (modified for Zip 3)\n\n`, 0
L__TEXT___cstring_13575: db `05 Jan 2007`, 0
L__TEXT___cstring_13587: db `\nZip environment options:`, 0
L__TEXT___cstring_13613: db `%16s:  %s\n`, 0
L__TEXT___cstring_13624: db `[none]`, 0
L__TEXT___cstring_13631: db `aborting`, 0
L__TEXT___cstring_13640: db `zip file is empty, can't make it as old as latest entry`, 0
L__TEXT___cstring_13696: db `zip file has only directories, can't make it as old as latest entry`, 0
L__TEXT___cstring_13764: db `was deleting moved files and directories`, 0
L__TEXT___cstring_13805: db `Extended Help for Zip`, 0
L__TEXT___cstring_13827: db `See the Zip Manual for more detailed help`, 0
L__TEXT___cstring_13869: db `Zip stores files in zip archives.  The default action is to add or replace`, 0
L__TEXT___cstring_13944: db `zipfile entries.`, 0
L__TEXT___cstring_13961: db `Basic command line:`, 0
L__TEXT___cstring_13981: db `  zip options archive_name file file ...`, 0
L__TEXT___cstring_14022: db `Some examples:`, 0
L__TEXT___cstring_14037: db `  Add file.txt to z.zip (create z if needed):      zip z file.txt`, 0
L__TEXT___cstring_14103: db `  Zip all files in current dir:                    zip z *`, 0
L__TEXT___cstring_14162: db `  Zip files in current dir and subdirs also:       zip -r z .`, 0
L__TEXT___cstring_14224: db `Basic modes:`, 0
L__TEXT___cstring_14237: db ` External modes (selects files from file system):`, 0
L__TEXT___cstring_14287: db `        add      - add new files/update existing files in archive (default)`, 0
L__TEXT___cstring_14363: db `  -u    update   - add new files/update existing files only if later date`, 0
L__TEXT___cstring_14437: db `  -f    freshen  - update existing files only (no files added)`, 0
L__TEXT___cstring_14500: db `  -FS   filesync - update if date or size changed, delete if no OS match`, 0
L__TEXT___cstring_14573: db ` Internal modes (selects entries in archive):`, 0
L__TEXT___cstring_14619: db `  -d    delete   - delete files from archive (see below)`, 0
L__TEXT___cstring_14676: db `  -U    copy     - select files in archive to copy (use with --out)`, 0
L__TEXT___cstring_14744: db `Basic options:`, 0
L__TEXT___cstring_14759: db `  -r        recurse into directories (see Recursion below)`, 0
L__TEXT___cstring_14818: db `  -m        after archive created, delete original files (move into archive)`, 0
L__TEXT___cstring_14895: db `  -j        junk directory names (store just file names)`, 0
L__TEXT___cstring_14952: db `  -q        quiet operation`, 0
L__TEXT___cstring_14980: db `  -v        verbose operation (just "zip -v" shows version information)`, 0
L__TEXT___cstring_15052: db `  -c        prompt for one-line comment for each entry`, 0
L__TEXT___cstring_15107: db `  -z        prompt for comment for archive (end with just "." line or EOF)`, 0
L__TEXT___cstring_15182: db `  -@        read names to zip from stdin (one path per line)`, 0
L__TEXT___cstring_15243: db `  -o        make zipfile as old as latest entry`, 0
L__TEXT___cstring_15291: db `Syntax:`, 0
L__TEXT___cstring_15299: db `  The full command line syntax is:`, 0
L__TEXT___cstring_15334: db `    zip [-shortopts ...] [--longopt ...] [zipfile [path path ...]] [-xi list]`, 0
L__TEXT___cstring_15412: db `  Any number of short option and long option arguments are allowed`, 0
L__TEXT___cstring_15479: db `  (within limits) as well as any number of path arguments for files`, 0
L__TEXT___cstring_15547: db `  to zip up.  If zipfile exists, the archive is read in.  If zipfile`, 0
L__TEXT___cstring_15616: db `  is "-", stream to stdout.  If any path is "-", zip stdin.`, 0
L__TEXT___cstring_15676: db `Options and Values:`, 0
L__TEXT___cstring_15696: db `  For short options that take values, use -ovalue or -o value or -o=value`, 0
L__TEXT___cstring_15770: db `  For long option values, use either --longoption=value or --longoption value`, 0
L__TEXT___cstring_15848: db `  For example:`, 0
L__TEXT___cstring_15863: db `    zip -ds 10 --temp-dir=path zipfile path1 path2 --exclude pattern pattern`, 0
L__TEXT___cstring_15940: db `  Avoid -ovalue (no space between) to avoid confusion`, 0
L__TEXT___cstring_15994: db `  In particular, be aware of 2-character options.  For example:`, 0
L__TEXT___cstring_16058: db `    -d -s is (delete, split size) while -ds is (dot size)`, 0
L__TEXT___cstring_16116: db `  Usually better to break short options across multiple arguments by function`, 0
L__TEXT___cstring_16194: db `    zip -r -dbdcds 10m -lilalf logfile archive input_directory -ll`, 0
L__TEXT___cstring_16261: db `  All args after just "--" arg are read verbatim as paths and not options.`, 0
L__TEXT___cstring_16336: db `    zip zipfile path path ... -- verbatimpath verbatimpath ...`, 0
L__TEXT___cstring_16399: db `  Use -nw to also disable wildcards, so paths are read literally:`, 0
L__TEXT___cstring_16465: db `    zip zipfile -nw -- "-leadingdashpath" "a[path].c" "path*withwildcard"`, 0
L__TEXT___cstring_16539: db `  You may still have to escape or quote arguments to avoid shell expansion`, 0
L__TEXT___cstring_16614: db `Wildcards:`, 0
L__TEXT___cstring_16625: db `  Internally zip supports the following wildcards:`, 0
L__TEXT___cstring_16676: db `    ?       (or %% or #, depending on OS) matches any single character`, 0
L__TEXT___cstring_16747: db `    *       matches any number of characters, including zero`, 0
L__TEXT___cstring_16808: db `    [list]  matches char in list (regex), can do range [ac-f], all but [!bf]`, 0
L__TEXT___cstring_16885: db `  If port supports [], must escape [ as [[] or use -nw to turn off wildcards`, 0
L__TEXT___cstring_16962: db `  For shells that expand wildcards, escape (\\* or "*") so zip can recurse`, 0
L__TEXT___cstring_17036: db `    zip zipfile -r . -i "*.h"`, 0
L__TEXT___cstring_17066: db `  Normally * crosses dir bounds in path, e.g. 'a*b' can match 'ac/db'.  If`, 0
L__TEXT___cstring_17141: db `   -ws option used, * does not cross dir bounds but ** does`, 0
L__TEXT___cstring_17201: db `  For DOS and Windows, [list] is now disabled unless the new option`, 0
L__TEXT___cstring_17269: db `  -RE       enable [list] (regular expression) matching`, 0
L__TEXT___cstring_17325: db `  is used to avoid problems with file paths containing "[" and "]":`, 0
L__TEXT___cstring_17393: db `    zip files_ending_with_number -RE foo[0-9].c`, 0
L__TEXT___cstring_17441: db `Include and Exclude:`, 0
L__TEXT___cstring_17462: db `  -i pattern pattern ...   include files that match a pattern`, 0
L__TEXT___cstring_17524: db `  -x pattern pattern ...   exclude files that match a pattern`, 0
L__TEXT___cstring_17586: db `  Patterns are paths with optional wildcards and match paths as stored in`, 0
L__TEXT___cstring_17660: db `  archive.  Exclude and include lists end at next option, @, or end of line.`, 0
L__TEXT___cstring_17737: db `    zip -x pattern pattern @ zipfile path path ...`, 0
L__TEXT___cstring_17788: db `Case matching:`, 0
L__TEXT___cstring_17803: db `  On most OS the case of patterns must match the case in the archive, unless`, 0
L__TEXT___cstring_17880: db `  the -ic option is used.`, 0
L__TEXT___cstring_17906: db `  -ic       ignore case of archive entries`, 0
L__TEXT___cstring_17949: db `  This option not available on case-sensitive file systems.  On others, case`, 0
L__TEXT___cstring_18026: db `  ignored when matching files on file system but matching against archive`, 0
L__TEXT___cstring_18100: db `  entries remains case sensitive for modes -f (freshen), -U (archive copy),`, 0
L__TEXT___cstring_18176: db `  and -d (delete) because archive paths are always case sensitive.  With`, 0
L__TEXT___cstring_18249: db `  -ic, all matching ignores case, but it's then possible multiple archive`, 0
L__TEXT___cstring_18323: db `  entries that differ only in case will match.`, 0
L__TEXT___cstring_18370: db `End Of Line Translation (text files only):`, 0
L__TEXT___cstring_18413: db `  -l        change CR or LF (depending on OS) line end to CR LF (Unix->Win)`, 0
L__TEXT___cstring_18489: db `  -ll       change CR LF to CR or LF (depending on OS) line end (Win->Unix)`, 0
L__TEXT___cstring_18565: db `  If first buffer read from file contains binary the translation is skipped`, 0
L__TEXT___cstring_18641: db `Recursion:`, 0
L__TEXT___cstring_18652: db `  -r        recurse paths, include files in subdirs:  zip -r a path path ...`, 0
L__TEXT___cstring_18729: db `  -R        recurse current dir and match patterns:   zip -R a ptn ptn ...`, 0
L__TEXT___cstring_18804: db `  Use -i and -x with either to include or exclude paths`, 0
L__TEXT___cstring_18860: db `  Path root in archive starts at current dir, so if /a/b/c/file and`, 0
L__TEXT___cstring_18928: db `   current dir is /a/b, 'zip -r archive .' puts c/file in archive`, 0
L__TEXT___cstring_18994: db `Date filtering:`, 0
L__TEXT___cstring_19010: db `  -t date   exclude before (include files modified on this date and later)`, 0
L__TEXT___cstring_19085: db `  -tt date  include before (include files modified before date)`, 0
L__TEXT___cstring_19149: db `  Can use both at same time to set a date range`, 0
L__TEXT___cstring_19197: db `  Dates are mmddyyyy or yyyy-mm-dd`, 0
L__TEXT___cstring_19232: db `Deletion, File Sync:`, 0
L__TEXT___cstring_19253: db `  -d        delete files`, 0
L__TEXT___cstring_19278: db `  Delete archive entries matching internal archive paths in list`, 0
L__TEXT___cstring_19343: db `    zip archive -d pattern pattern ...`, 0
L__TEXT___cstring_19382: db `  Can use -t and -tt to select files in archive, but NOT -x or -i, so`, 0
L__TEXT___cstring_19452: db `    zip archive -d "*" -t 2005-12-27`, 0
L__TEXT___cstring_19489: db `  deletes all files from archive.zip with date of 27 Dec 2005 and later`, 0
L__TEXT___cstring_19561: db `  Note the * (escape as "*" on Unix) to select all files in archive`, 0
L__TEXT___cstring_19629: db `  -FS       file sync`, 0
L__TEXT___cstring_19651: db `  Similar to update, but files updated if date or size of entry does not`, 0
L__TEXT___cstring_19724: db `  match file on OS.  Also deletes entry from archive if no matching file`, 0
L__TEXT___cstring_19797: db `  on OS.`, 0
L__TEXT___cstring_19806: db `    zip archive_to_update -FS -r dir_used_before`, 0
L__TEXT___cstring_19855: db `  Result generally same as creating new archive, but unchanged entries`, 0
L__TEXT___cstring_19926: db `  are copied instead of being read and compressed so can be faster.`, 0
L__TEXT___cstring_19994: db `      WARNING:  -FS deletes entries so make backup copy of archive first`, 0
L__TEXT___cstring_20067: db `Compression:`, 0
L__TEXT___cstring_20080: db `  -0        store files (no compression)`, 0
L__TEXT___cstring_20121: db `  -1 to -9  compress fastest to compress best (default is 6)`, 0
L__TEXT___cstring_20182: db `  -Z cm     set compression method to cm:`, 0
L__TEXT___cstring_20224: db `              store   - store without compression, same as option -0`, 0
L__TEXT___cstring_20293: db `              deflate - original zip deflate, same as -1 to -9 (default)`, 0
L__TEXT___cstring_20366: db `            if bzip2 is enabled:`, 0
L__TEXT___cstring_20399: db `              bzip2 - use bzip2 compression (need modern unzip)`, 0
L__TEXT___cstring_20463: db `Encryption:`, 0
L__TEXT___cstring_20475: db `  -e        use standard (weak) PKZip 2.0 encryption, prompt for password`, 0
L__TEXT___cstring_20549: db `  -P pswd   use standard encryption, password is pswd`, 0
L__TEXT___cstring_20603: db `Splits (archives created as a set of split files):`, 0
L__TEXT___cstring_20654: db `  -s ssize  create split archive with splits of size ssize, where ssize nm`, 0
L__TEXT___cstring_20729: db `              n number and m multiplier (kmgt, default m), 100k -> 100 kB`, 0
L__TEXT___cstring_20803: db `  -sp       pause after each split closed to allow changing disks`, 0
L__TEXT___cstring_20869: db `      WARNING:  Archives created with -sp use data descriptors and should`, 0
L__TEXT___cstring_20943: db `                work with most unzips but may not work with some`, 0
L__TEXT___cstring_21008: db `  -sb       ring bell when pause`, 0
L__TEXT___cstring_21041: db `  -sv       be verbose about creating splits`, 0
L__TEXT___cstring_21086: db `      Split archives CANNOT be updated, but see --out and Copy Mode below`, 0
L__TEXT___cstring_21160: db `Using --out (output to new archive):`, 0
L__TEXT___cstring_21197: db `  --out oa  output to new archive oa`, 0
L__TEXT___cstring_21234: db `  Instead of updating input archive, create new output archive oa.`, 0
L__TEXT___cstring_21301: db `  Result is same as without --out but in new archive.  Input archive`, 0
L__TEXT___cstring_21370: db `  unchanged.`, 0
L__TEXT___cstring_21383: db `      WARNING:  --out ALWAYS overwrites any existing output file`, 0
L__TEXT___cstring_21448: db `  For example, to create new_archive like old_archive but add newfile1`, 0
L__TEXT___cstring_21519: db `  and newfile2:`, 0
L__TEXT___cstring_21535: db `    zip old_archive newfile1 newfile2 --out new_archive`, 0
L__TEXT___cstring_21591: db `  Cannot update split archive, so use --out to out new archive:`, 0
L__TEXT___cstring_21655: db `    zip in_split_archive newfile1 newfile2 --out out_split_archive`, 0
L__TEXT___cstring_21722: db `  If input is split, output will default to same split size`, 0
L__TEXT___cstring_21782: db `  Use -s=0 or -s- to turn off splitting to convert split to single file:`, 0
L__TEXT___cstring_21855: db `    zip in_split_archive -s 0 --out out_single_file_archive`, 0
L__TEXT___cstring_21915: db `      WARNING:  If overwriting old split archive but need less splits,`, 0
L__TEXT___cstring_21986: db `                old splits not overwritten are not needed but remain`, 0
L__TEXT___cstring_22055: db `Copy Mode (copying from archive to archive):`, 0
L__TEXT___cstring_22100: db `  -U        (also --copy) select entries in archive to copy (reverse delete)`, 0
L__TEXT___cstring_22177: db `  Copy Mode copies entries from old to new archive with --out and is used by`, 0
L__TEXT___cstring_22254: db `  zip when either no input files on command line or -U (--copy) used.`, 0
L__TEXT___cstring_22324: db `    zip inarchive --copy pattern pattern ... --out outarchive`, 0
L__TEXT___cstring_22386: db `  To copy only files matching *.c into new archive, excluding foo.c:`, 0
L__TEXT___cstring_22455: db `    zip old_archive --copy "*.c" --out new_archive -x foo.c`, 0
L__TEXT___cstring_22515: db `  If no input files and --out, copy all entries in old archive:`, 0
L__TEXT___cstring_22579: db `    zip old_archive --out new_archive`, 0
L__TEXT___cstring_22617: db `Streaming and FIFOs:`, 0
L__TEXT___cstring_22638: db `  prog1 | zip -ll z -      zip output of prog1 to zipfile z, converting CR LF`, 0
L__TEXT___cstring_22716: db `  zip - -R "*.c" | prog2   zip *.c files in current dir and stream to prog2 `, 0
L__TEXT___cstring_22793: db `  prog1 | zip | prog2      zip in pipe with no in or out acts like zip - -`, 0
L__TEXT___cstring_22868: db `  If Zip is Zip64 enabled, streaming stdin creates Zip64 archives by default`, 0
L__TEXT___cstring_22945: db `   that need PKZip 4.5 unzipper like UnZip 6.0`, 0
L__TEXT___cstring_22992: db `  WARNING:  Some archives created with streaming use data descriptors and`, 0
L__TEXT___cstring_23066: db `            should work with most unzips but may not work with some`, 0
L__TEXT___cstring_23134: db `  Can use -fz- to turn off Zip64 if input not large (< 4 GB):`, 0
L__TEXT___cstring_23196: db `    prog_with_small_output | zip archive -fz-`, 0
L__TEXT___cstring_23242: db `  Zip now can read Unix FIFO (named pipes).  Off by default to prevent zip`, 0
L__TEXT___cstring_23317: db `  from stopping unexpectedly on unfed pipe, use -FI to enable:`, 0
L__TEXT___cstring_23380: db `    zip -FI archive fifo`, 0
L__TEXT___cstring_23405: db `Dots, counts:`, 0
L__TEXT___cstring_23419: db `  -db       display running count of bytes processed and bytes to go`, 0
L__TEXT___cstring_23488: db `              (uncompressed size, except delete and copy show stored size)`, 0
L__TEXT___cstring_23563: db `  -dc       display running count of entries done and entries to go`, 0
L__TEXT___cstring_23631: db `  -dd       display dots every 10 MB (or dot size) while processing files`, 0
L__TEXT___cstring_23705: db `  -dg       display dots globally for archive instead of for each file`, 0
L__TEXT___cstring_23776: db `    zip -qdgds 10m   will turn off most output except dots every 10 MB`, 0
L__TEXT___cstring_23847: db `  -ds siz   each dot is siz processed where siz is nm as splits (0 no dots)`, 0
L__TEXT___cstring_23923: db `  -du       display original uncompressed size for each entry as added`, 0
L__TEXT___cstring_23994: db `  -dv       display volume (disk) number in format in_disk>out_disk`, 0
L__TEXT___cstring_24062: db `  Dot size is approximate, especially for dot sizes less than 1 MB`, 0
L__TEXT___cstring_24129: db `  Dot options don't apply to Scanning files dots (dot/2sec) (-q turns off)`, 0
L__TEXT___cstring_24204: db `Logging:`, 0
L__TEXT___cstring_24213: db `  -lf path  open file at path as logfile (overwrite existing file)`, 0
L__TEXT___cstring_24280: db `  -la       append to existing logfile`, 0
L__TEXT___cstring_24319: db `  -li       include info messages (default just warnings and errors)`, 0
L__TEXT___cstring_24388: db `Testing archives:`, 0
L__TEXT___cstring_24406: db `  -T        test completed temp archive with unzip before updating archive`, 0
L__TEXT___cstring_24481: db `  -TT cmd   use command cmd instead of 'unzip -tqq' to test archive`, 0
L__TEXT___cstring_24549: db `             On Unix, to use unzip in current directory, could use:`, 0
L__TEXT___cstring_24617: db `               zip archive file1 file2 -T -TT "./unzip -tqq"`, 0
L__TEXT___cstring_24678: db `             The return code is checked for success (0 on Unix)`, 0
L__TEXT___cstring_24742: db `Fixing archives:`, 0
L__TEXT___cstring_24759: db `  -F        attempt to fix a mostly intact archive (try this first)`, 0
L__TEXT___cstring_24827: db `  -FF       try to salvage what can (may get more but less reliable)`, 0
L__TEXT___cstring_24896: db `  Fix options copy entries from potentially bad archive to new archive.`, 0
L__TEXT___cstring_24968: db `  -F tries to read archive normally and copy only intact entries, while`, 0
L__TEXT___cstring_25040: db `  -FF tries to salvage what can and may result in incomplete entries.`, 0
L__TEXT___cstring_25110: db `  Must use --out option to specify output archive:`, 0
L__TEXT___cstring_25161: db `    zip -F bad.zip --out fixed.zip`, 0
L__TEXT___cstring_25196: db `  Use -v (verbose) with -FF to see details:`, 0
L__TEXT___cstring_25240: db `    zip reallybad.zip -FF -v --out fixed.zip`, 0
L__TEXT___cstring_25285: db `  Currently neither option fixes bad entries, as from text mode ftp get.`, 0
L__TEXT___cstring_25358: db `Difference mode:`, 0
L__TEXT___cstring_25375: db `  -DF       (also --dif) only include files that have changed or are`, 0
L__TEXT___cstring_25444: db `             new as compared to the input archive`, 0
L__TEXT___cstring_25494: db `  Difference mode can be used to create incremental backups.  For example:`, 0
L__TEXT___cstring_25569: db `    zip --dif full_backup.zip -r somedir --out diff.zip`, 0
L__TEXT___cstring_25625: db `  will store all new files, as well as any files in full_backup.zip where`, 0
L__TEXT___cstring_25699: db `  either file time or size have changed from that in full_backup.zip,`, 0
L__TEXT___cstring_25769: db `  in new diff.zip.  Output archive not excluded automatically if exists,`, 0
L__TEXT___cstring_25842: db `  so either use -x to exclude it or put outside what is being zipped.`, 0
L__TEXT___cstring_25912: db `DOS Archive bit (Windows only):`, 0
L__TEXT___cstring_25944: db `  -AS       include only files with the DOS Archive bit set`, 0
L__TEXT___cstring_26004: db `  -AC       after archive created, clear archive bit of included files`, 0
L__TEXT___cstring_26075: db `      WARNING: Once the archive bits are cleared they are cleared`, 0
L__TEXT___cstring_26141: db `               Use -T to test the archive before the bits are cleared`, 0
L__TEXT___cstring_26211: db `               Can also use -sf to save file list before zipping files`, 0
L__TEXT___cstring_26282: db `Show files:`, 0
L__TEXT___cstring_26294: db `  -sf       show files to operate on and exit (-sf- logfile only)`, 0
L__TEXT___cstring_26360: db `  -su       as -sf but show escaped UTF-8 Unicode names also if exist`, 0
L__TEXT___cstring_26430: db `  -sU       as -sf but show escaped UTF-8 Unicode names instead`, 0
L__TEXT___cstring_26494: db `  Any character not in the current locale is escaped as #Uxxxx, where x`, 0
L__TEXT___cstring_26566: db `  is hex digit, if 16-bit code is sufficient, or #Lxxxxxx if 24-bits`, 0
L__TEXT___cstring_26635: db `  are needed.  If add -UN=e, Zip escapes all non-ASCII characters.`, 0
L__TEXT___cstring_26702: db `Unicode:`, 0
L__TEXT___cstring_26711: db `  If compiled with Unicode support, Zip stores UTF-8 path of entries.`, 0
L__TEXT___cstring_26781: db `  This is backward compatible.  Unicode paths allow better conversion`, 0
L__TEXT___cstring_26851: db `  of entry names between different character sets.`, 0
L__TEXT___cstring_26902: db `  New Unicode extra field includes checksum to verify Unicode path`, 0
L__TEXT___cstring_26969: db `  goes with standard path for that entry (as utilities like ZipNote`, 0
L__TEXT___cstring_27037: db `  can rename entries).  If these do not match, use below options to`, 0
L__TEXT___cstring_27105: db `  set what Zip does:`, 0
L__TEXT___cstring_27126: db `      -UN=Quit     - if mismatch, exit with error`, 0
L__TEXT___cstring_27176: db `      -UN=Warn     - if mismatch, warn, ignore UTF-8 (default)`, 0
L__TEXT___cstring_27239: db `      -UN=Ignore   - if mismatch, quietly ignore UTF-8`, 0
L__TEXT___cstring_27294: db `      -UN=No       - ignore any UTF-8 paths, use standard paths for all`, 0
L__TEXT___cstring_27366: db `  An exception to -UN=N are entries with new UTF-8 bit set (instead`, 0
L__TEXT___cstring_27434: db `  of using extra fields).  These are always handled as Unicode.`, 0
L__TEXT___cstring_27498: db `  Normally Zip escapes all chars outside current char set, but leaves`, 0
L__TEXT___cstring_27568: db `  as is supported chars, which may not be OK in path names.  -UN=Escape`, 0
L__TEXT___cstring_27640: db `  escapes any character not ASCII:`, 0
L__TEXT___cstring_27675: db `    zip -sU -UN=e archive`, 0
L__TEXT___cstring_27701: db `  Can use either normal path or escaped Unicode path on command line`, 0
L__TEXT___cstring_27770: db `  to match files in archive.`, 0
L__TEXT___cstring_27799: db `  Zip now stores UTF-8 in entry path and comment fields on systems`, 0
L__TEXT___cstring_27866: db `  where UTF-8 char set is default, such as most modern Unix, and`, 0
L__TEXT___cstring_27931: db `  and on other systems in new extra fields with escaped versions in`, 0
L__TEXT___cstring_27999: db `  entry path and comment fields for backward compatibility.`, 0
L__TEXT___cstring_28059: db `  Option -UN=UTF8 will force storing UTF-8 in entry path and comment`, 0
L__TEXT___cstring_28128: db `  fields:`, 0
L__TEXT___cstring_28138: db `      -UN=UTF8     - store UTF-8 in entry path and comment fields`, 0
L__TEXT___cstring_28204: db `  This option can be useful for multi-byte char sets on Windows where`, 0
L__TEXT___cstring_28274: db `  escaped paths and comments can be too long to be valid as the UTF-8`, 0
L__TEXT___cstring_28344: db `  versions tend to be shorter.`, 0
L__TEXT___cstring_28375: db `  Only UTF-8 comments on UTF-8 native systems supported.  UTF-8 comments`, 0
L__TEXT___cstring_28448: db `  for other systems planned in next release.`, 0
L__TEXT___cstring_28493: db `Self extractor:`, 0
L__TEXT___cstring_28509: db `  -A        Adjust offsets - a self extractor is created by prepending`, 0
L__TEXT___cstring_28580: db `             the extractor executable to archive, but internal offsets`, 0
L__TEXT___cstring_28651: db `             are then off.  Use -A to fix offsets.`, 0
L__TEXT___cstring_28702: db `  -J        Junk sfx - removes prepended extractor executable from`, 0
L__TEXT___cstring_28769: db `             self extractor, leaving a plain zip archive.`, 0
L__TEXT___cstring_28827: db `More option highlights (see manual for additional options and details):`, 0
L__TEXT___cstring_28899: db `  -b dir    when creating or updating archive, create the temp archive in`, 0
L__TEXT___cstring_28973: db `             dir, which allows using seekable temp file when writing to a`, 0
L__TEXT___cstring_29047: db `             write once CD, such archives compatible with more unzips`, 0
L__TEXT___cstring_29117: db `             (could require additional file copy if on another device)`, 0
L__TEXT___cstring_29188: db `  -MM       input patterns must match at least one file and matched files`, 0
L__TEXT___cstring_29262: db `             must be readable or exit with OPEN error and abort archive`, 0
L__TEXT___cstring_29334: db `             (without -MM, both are warnings only, and if unreadable files`, 0
L__TEXT___cstring_29409: db `             are skipped OPEN error (18) returned after archive created)`, 0
L__TEXT___cstring_29482: db `  -nw       no wildcards (wildcards are like any other character)`, 0
L__TEXT___cstring_29548: db `  -sc       show command line arguments as processed and exit`, 0
L__TEXT___cstring_29610: db `  -sd       show debugging as Zip does each step`, 0
L__TEXT___cstring_29659: db `  -so       show all available options on this system`, 0
L__TEXT___cstring_29713: db `  -X        default=strip old extra fields, -X- keep old, -X strip most`, 0
L__TEXT___cstring_29785: db `  -ws       wildcards don't span directory boundaries in paths`, 0
L__TEXT___cstring_29848: db `bad flag to add_filter`, 0
L__TEXT___cstring_29871: db `null pattern to add_filter`, 0
L__TEXT___cstring_29898: db `missing file after @`, 0
L__TEXT___cstring_29919: db `%c pattern file '%s'`, 0
L__TEXT___cstring_29940: db `adding filter`, 0
L__TEXT___cstring_29954: db `was creating pattern list`, 0
L__TEXT___cstring_29980: db `cannot write zip file to terminal`, 0
L__TEXT___cstring_30014: db `adding file`, 0
L__TEXT___cstring_30026: db `{}`, 0
L__TEXT___cstring_30029: db `{} in -TT not supported`, 0
L__TEXT___cstring_30053: db `unzip`, 0
L__TEXT___cstring_30059: db `-t`, 0
L__TEXT___cstring_30062: db `-qq`, 0
L__TEXT___cstring_30066: db `test of %s FAILED\n`, 0
L__TEXT___cstring_30085: db `original files unmodified`, 0
L__TEXT___cstring_30111: db `test of %s OK\n`, 0
L__TEXT___cstring_30126: db ` -v`, 0
L__TEXT___cstring_30130: db `unzip pipe error`, 0
L__TEXT___cstring_30147: db `failed to get information from UnZip`, 0
L__TEXT___cstring_30184: db `UnZip %f `, 0
L__TEXT___cstring_30194: db `unexpected output of UnZip -v`, 0
L__TEXT___cstring_30224: db `Found UnZip version %4.2f`, 0
L__TEXT___cstring_30250: db `Need UnZip 6.00 or later to test this Zip64 archive`, 0
L__TEXT___cstring_30302: db `%lu>%lu: `, 0
L__TEXT___cstring_30312: db `%3ld/%3ld `, 0
L__TEXT___cstring_30323: db `[%4s`, 0
L__TEXT___cstring_30328: db `/%4s] `, 0
L__TEXT___cstring_30335: db `-%4s] `, 0
L__TEXT___cstring_30342: db `   /    `, 0
L__TEXT___cstring_30351: db `     /      `, 0
L__TEXT___cstring_30364: db `available options:`, 0
L__TEXT___cstring_30383: db `.zip`, 0
L__TEXT___cstring_30388: db `extra field copy`, 0
L__TEXT___cstring_30405: db `reading archive fseek: `, 0
L__TEXT___cstring_30429: db `PK\ETX\EOT`, 0
L__TEXT___cstring_30434: db `Did not find entry for `, 0
L__TEXT___cstring_30458: db `reading local entry: `, 0
L__TEXT___cstring_30480: db `reading entry`, 0
L__TEXT___cstring_30494: db `Local Version Needed (%d) does not match CD (%d): `, 0
L__TEXT___cstring_30545: db `Local Entry Flag does not match CD: `, 0
L__TEXT___cstring_30582: db `Local Entry CRC does not match CD: `, 0
L__TEXT___cstring_30618: db `No .zip file found\n        `, 0
L__TEXT___cstring_30646: db `(If all you have are splits (.z01, .z02, ...) and no .zip, try -FF)`, 0
L__TEXT___cstring_30714: db `Entry too big:`, 0
L__TEXT___cstring_30729: db `Large entry support disabled with -fz- but needed`, 0
L__TEXT___cstring_30779: db `Large entry support disabled with -fz- but entry needs`, 0
L__TEXT___cstring_30834: db `Compressed/stored entry unexpectedly large - do not use -fz-`, 0
L__TEXT___cstring_30895: db `Poor compression resulted in unexpectedly large entry - try -fz`, 0
L__TEXT___cstring_30959: db `Illegal host system mapping in local header:  %d`, 0
L__TEXT___cstring_31008: db `Skipping:  `, 0
L__TEXT___cstring_31020: db `Illegal PK version mapping in local header:  %d`, 0
L__TEXT___cstring_31068: db `Unrecognized compression method in local header:  %d`, 0
L__TEXT___cstring_31121: db `Local Version Needed To Extract does not match CD: `, 0
L__TEXT___cstring_31173: db `Local Entry name does not match CD: `, 0
L__TEXT___cstring_31210: db `out of memory in zipcopy`, 0
L__TEXT___cstring_31235: db ` copying: %s `, 0
L__TEXT___cstring_31249: db `Could not find split`, 0
L__TEXT___cstring_31270: db `aborting: `, 0
L__TEXT___cstring_31281: db `seek failed on output file`, 0
L__TEXT___cstring_31308: db `no end of stream entry found: `, 0
L__TEXT___cstring_31339: db `rewinding and scanning for later entries`, 0
L__TEXT___cstring_31380: db `entry truncated: `, 0
L__TEXT___cstring_31398: db `expected compressed/stored size %s, actual %s`, 0
L__TEXT___cstring_31444: db `zip diagnostic: deleting file %s\n`, 0
L__TEXT___cstring_31478: db `error deleting `, 0
L__TEXT___cstring_31494: db `deleting directory %s (if empty)                \n`, 0
L__TEXT___cstring_31544: db `if archive to fix is split archive, need to provide\n`, 0
L__TEXT___cstring_31597: db `      path of the last split with .zip extension,\n`, 0
L__TEXT___cstring_31648: db `      even if it doesn't exist (zip will ask for splits)`, 0
L__TEXT___cstring_31705: db `could not open input archive: `, 0
L__TEXT___cstring_31736: db `unable to seek in input file `, 0
L__TEXT___cstring_31766: db `PK\ENQ\ACK`, 0
L__TEXT___cstring_31771: db `Missing end (EOCDR) signature - either this archive\n`, 0
L__TEXT___cstring_31824: db `                     is not readable or the end is damaged`, 0
L__TEXT___cstring_31883: db `End record (EOCDR) only %s bytes - assume truncated`, 0
L__TEXT___cstring_31935: db `End record (EOCDR) has bad disk numbers - ignoring EOCDR`, 0
L__TEXT___cstring_31992: db `zipfile comment truncated - ignoring`, 0
L__TEXT___cstring_32029: db ` Found end record (EOCDR) - says expect %lu splits`, 0
L__TEXT___cstring_32080: db ` Found end record (EOCDR) - says expect single disk archive`, 0
L__TEXT___cstring_32140: db `  Found archive comment`, 0
L__TEXT___cstring_32164: db `PK\ETX\ETX`, 0
L__TEXT___cstring_32169: db `Is this a single-disk archive?  (y/n): `, 0
L__TEXT___cstring_32209: db `  Assuming single-disk archive`, 0
L__TEXT___cstring_32240: db `Scanning for entries...`, 0
L__TEXT___cstring_32264: db `could not find split: `, 0
L__TEXT___cstring_32287: db `user ended reading - closing archive`, 0
L__TEXT___cstring_32324: db `skipping disk %lu ...\n`, 0
L__TEXT___cstring_32347: db `EOCDR found (%2lu %6s)...`, 0
L__TEXT___cstring_32373: db `PK\ACK\ACK`, 0
L__TEXT___cstring_32378: db `Zip64 EOCDR found (%2lu %6s)...`, 0
L__TEXT___cstring_32410: db `PK\ACK\a`, 0
L__TEXT___cstring_32415: db `Zip64 EOCDL found (%2lu %6s)...`, 0
L__TEXT___cstring_32447: db ` Local (%2lu %6s):`, 0
L__TEXT___cstring_32466: db `reading central directory`, 0
L__TEXT___cstring_32492: db `Entry after central directory found (%2lu %6s)...`, 0
L__TEXT___cstring_32542: db `PK\SOH\STX`, 0
L__TEXT___cstring_32547: db `Central Directory found...`, 0
L__TEXT___cstring_32574: db ` Cen   (%2lu %6s): `, 0
L__TEXT___cstring_32594: db `reading central directory: `, 0
L__TEXT___cstring_32622: db `bad archive - error reading central directory`, 0
L__TEXT___cstring_32668: db `skipping this entry...`, 0
L__TEXT___cstring_32691: db `%lu`, 0
L__TEXT___cstring_32695: db `zero-length name for entry #`, 0
L__TEXT___cstring_32724: db `error reading entry:  `, 0
L__TEXT___cstring_32747: db `local (%lu) and cen (%lu) crc mismatch`, 0
L__TEXT___cstring_32786: db `writing archive seek: `, 0
L__TEXT___cstring_32809: db `Error rewriting local header`, 0
L__TEXT___cstring_32838: db `write archive seek: `, 0
L__TEXT___cstring_32859: db `seek after local: `, 0
L__TEXT___cstring_32878: db `no local entry: %s`, 0
L__TEXT___cstring_32897: db `PK\a\b`, 0
L__TEXT___cstring_32902: db `  Found spanning marker, but did not expect split (multi-disk) archive...`, 0
L__TEXT___cstring_32976: db `  Found spanning marker - expected as this is split (multi-disk) archive...`, 0
L__TEXT___cstring_33052: db `  Found spanning marker - could be split archive...`, 0
L__TEXT___cstring_33104: db `unexpected signature `, 0
L__TEXT___cstring_33126: db `%02x `, 0
L__TEXT___cstring_33132: db `on disk %lu at %s\n`, 0
L__TEXT___cstring_33151: db `skipping this signature...`, 0
L__TEXT___cstring_33178: db `made by version %d.%d on system type %d: `, 0
L__TEXT___cstring_33220: db `needs unzip %d.%d on system type %d: `, 0
L__TEXT___cstring_33258: db `local flags = 0x%04x, central = 0x%04x: `, 0
L__TEXT___cstring_33299: db `undefined bits used in flags = 0x%04x: `, 0
L__TEXT___cstring_33339: db `unknown compression method %u: `, 0
L__TEXT___cstring_33371: db `starts on disk %lu: `, 0
L__TEXT___cstring_33392: db `unknown internal attributes = 0x%04x: `, 0
L__TEXT___cstring_33431: db `could not open input archive`, 0
L__TEXT___cstring_33460: db `bad archive - missing end signature`, 0
L__TEXT___cstring_33496: db `(If downloaded, was binary mode used?  If not, the`, 0
L__TEXT___cstring_33547: db ` archive may be scrambled and not recoverable)`, 0
L__TEXT___cstring_33594: db `Can't use -F to fix (try -FF)`, 0
L__TEXT___cstring_33624: db `missing end signature--probably not a zip file (did you`, 0
L__TEXT___cstring_33680: db `remember to use binary mode when you transferred it?)`, 0
L__TEXT___cstring_33734: db `(if you are trying to read a damaged archive try -F)`, 0
L__TEXT___cstring_33787: db `Adjusting split archives not yet supported`, 0
L__TEXT___cstring_33830: db `cannot update a split archive (use --out option)`, 0
L__TEXT___cstring_33879: db `must use --out when fixing an archive`, 0
L__TEXT___cstring_33917: db `could not seek back to start of central directory: `, 0
L__TEXT___cstring_33969: db `(try -FF)`, 0
L__TEXT___cstring_33979: db `central dir not where expected - could not adjust offsets`, 0
L__TEXT___cstring_34037: db `could not seek back to Zip64 EOCDL: `, 0
L__TEXT___cstring_34074: db `reading archive: `, 0
L__TEXT___cstring_34092: db `unable to read EOCD after seek: `, 0
L__TEXT___cstring_34125: db `Adjusting split archives not supported:  `, 0
L__TEXT___cstring_34167: db `could not seek back to Zip64 EOCDR: `, 0
L__TEXT___cstring_34204: db `Could not determine offset of entries`, 0
L__TEXT___cstring_34242: db `Zip entry offsets appear off by %s bytes - correcting...`, 0
L__TEXT___cstring_34299: db `Zip entry offsets do not need adjusting`, 0
L__TEXT___cstring_34339: db `bad archive - could not seek back to Zip64 EOCDL: `, 0
L__TEXT___cstring_34390: db `bad archive - could not seek back to Zip64 EOCDR: `, 0
L__TEXT___cstring_34441: db `Zip64 EOCDR not found where expected - compensating`, 0
L__TEXT___cstring_34493: db `(try -A to adjust offsets)`, 0
L__TEXT___cstring_34520: db `bad archive - Zip64 EOCDR not found in split:  `, 0
L__TEXT___cstring_34568: db `Zip64 End Of Central Directory Record not found:  `, 0
L__TEXT___cstring_34619: db `bad archive - Zip64 EOCDR bad or truncated`, 0
L__TEXT___cstring_34662: db `Zip64 EOCD Record bad or truncated`, 0
L__TEXT___cstring_34697: db `This archive requires version %d.%d`, 0
L__TEXT___cstring_34733: db `Zip currently only supports up to version 4.6 archives`, 0
L__TEXT___cstring_34788: db `(up to 4.5 if bzip2 is not compiled in)`, 0
L__TEXT___cstring_34828: db `If -F fails try -FF to try to salvage something`, 0
L__TEXT___cstring_34876: db `Attempting to salvage what can`, 0
L__TEXT___cstring_34907: db `Try -F to attempt to read anyway`, 0
L__TEXT___cstring_34940: db `bad archive - unexpected signature `, 0
L__TEXT___cstring_34976: db `unexpected signature on disk %lu at %s\n`, 0
L__TEXT___cstring_35016: db `archive not in correct format: `, 0
L__TEXT___cstring_35048: db `(try -F to attempt recovery)`, 0
L__TEXT___cstring_35077: db `central directory header signature on disk %lu at %s\n`, 0
L__TEXT___cstring_35131: db `could not allocate memory: scanzipf_reg`, 0
L__TEXT___cstring_35171: db `expected %s entries but found %s`, 0
L__TEXT___cstring_35204: db `Zip64 local extra field`, 0
L__TEXT___cstring_35228: db `Zip64 Extra Field`, 0
L__TEXT___cstring_35246: db `append_ulong_to_mem`, 0
L__TEXT___cstring_35266: db `append_ushort_to_mem`, 0
L__TEXT___cstring_35287: db `append_string_to_mem`, 0
L__TEXT___cstring_35308: db `append_int64_to_mem`, 0
L__TEXT___cstring_35328: db `Large entry support disabled using -fz- but needed`, 0
L__TEXT___cstring_35379: db `extra fields copy`, 0
L__TEXT___cstring_35397: db `unexpected error on zip file`, 0
L__TEXT___cstring_35426: db `last %s o %s\n`, 0
L__TEXT___cstring_35440: db `seek wrap - zip file too big to write`, 0
L__TEXT___cstring_35478: db `has binary so -l ignored`, 0
L__TEXT___cstring_35503: db `has binary so -ll ignored`, 0
L__TEXT___cstring_35529: db `-l used on binary file - corrupted?`, 0
L__TEXT___cstring_35565: db `-ll used on binary file - corrupted?`, 0
L__TEXT___cstring_35602: db `\nzip warning`, 0
L__TEXT___cstring_35615: db `\nzip warning: %s\n`, 0
L__TEXT___cstring_35633: db `could not read input file: `, 0
L__TEXT___cstring_35661: db ` file size changed while zipping `, 0
L__TEXT___cstring_35695: db `can't rewrite method`, 0
L__TEXT___cstring_35716: db `zip -0 not supported for I/O on pipes or devices`, 0
L__TEXT___cstring_35765: db ` s=%s, actual=%s `, 0
L__TEXT___cstring_35783: db `incorrect compressed size`, 0
L__TEXT___cstring_35809: db `\t(in=%s) (out=%s)`, 0
L__TEXT___cstring_35827: db ` (deflated %d%%)\n`, 0
L__TEXT___cstring_35845: db ` (stored 0%%)\n`, 0
L__TEXT___cstring_35860: db `output buffer too small for in-memory compression`, 0
L__TEXT___cstring_35910: db `write error on zip file`, 0
L__TEXT___cstring_35934: db `overflow in byte count`, 0
L__TEXT___cstring_35957: db `Cannot select stdin when selecting archive entries`, 0
L__TEXT___cstring_36008: db `zip diagnostic: %scluding %s\n`, 0
L__TEXT___cstring_36038: db `in`, 0
L__TEXT___cstring_36041: db `ex`, 0
L__TEXT___cstring_36044: db `  first full name: %s\n`, 0
L__TEXT___cstring_36067: db ` second full name: %s\n`, 0
L__TEXT___cstring_36090: db `                     `, 0
L__TEXT___cstring_36112: db `name in zip file repeated: %s`, 0
L__TEXT___cstring_36142: db `\n                     this may be a result of using -j`, 0
L__TEXT___cstring_36197: db `empty name without -j or -r`, 0
L__TEXT___cstring_36225: db `excluding %s\n`, 0
L__TEXT___cstring_36239: db `file matches zip file -- skipping\n`, 0
L__TEXT___cstring_36274: db ` replace: can't open %s\n`, 0
L__TEXT___cstring_36299: db ` fcopy: write error\n`, 0
L__TEXT___cstring_36320: db `seek failed reading descriptor`, 0
L__TEXT___cstring_36351: db `skipping split file: `, 0
L__TEXT___cstring_36373: db `split path`, 0
L__TEXT___cstring_36384: db `(current directory)`, 0
L__TEXT___cstring_36404: db `\n\nCould not find:\n`, 0
L__TEXT___cstring_36423: db `\nHit c      (change path to where this split file is)`, 0
L__TEXT___cstring_36477: db `\n    q      (abort archive - quit)`, 0
L__TEXT___cstring_36512: db `\n or ENTER  (continue with this split): `, 0
L__TEXT___cstring_36553: db `\n    s      (skip this split)`, 0
L__TEXT___cstring_36583: db `\n or ENTER  (try reading this split again): `, 0
L__TEXT___cstring_36628: db `\n    e      (end this archive - no more splits)`, 0
L__TEXT___cstring_36676: db `\n    z      (look for .zip split - the last split)`, 0
L__TEXT___cstring_36727: db `\nEnter path where this split is (ENTER = same dir, . = current dir)`, 0
L__TEXT___cstring_36795: db `\n: `, 0
L__TEXT___cstring_36799: db `\nCould not find or open\n`, 0
L__TEXT___cstring_36824: db `Found:  %s\n`, 0
L__TEXT___cstring_36836: db `\nFound:  %s\n`, 0
L__TEXT___cstring_36849: db `\nOpening disk %d\n`, 0
L__TEXT___cstring_36867: db `Hit ENTER to write to default path of\n`, 0
L__TEXT___cstring_36906: db `or enter a new directory path (. for cur dir) and hit ENTER\n`, 0
L__TEXT___cstring_36967: db `\nPath (or hit ENTER to continue): `, 0
L__TEXT___cstring_37002: db `Writing to:\n  %s\n`, 0
L__TEXT___cstring_37020: db `base path`, 0
L__TEXT___cstring_37030: db `More than 99999 splits needed`, 0
L__TEXT___cstring_37060: db `z%02lu`, 0
L__TEXT___cstring_37067: db `\tClosing split `, 0
L__TEXT___cstring_37083: db `Could not write split`, 0
L__TEXT___cstring_37105: db `Not enough space to write split`, 0
L__TEXT___cstring_37137: db `Not enough room on disk`, 0
L__TEXT___cstring_37161: db `ca`, 0
L__TEXT___cstring_37164: db `ia`, 0
L__TEXT___cstring_37167: db `go`, 0
L__TEXT___cstring_37170: db `glo`, 0
L__TEXT___cstring_37174: db `'%s' (%s)`, 0
L__TEXT___cstring_37184: db `'%s'`, 0
L__TEXT___cstring_37189: db `gso`, 0
L__TEXT___cstring_37193: db `Can't get memory for arguments`, 0
L__TEXT___cstring_37224: db `16`, 0
L__TEXT___cstring_37227: db `Unable to read empty number in ReadNumString`, 0
L__TEXT___cstring_37272: db `Unable to read number (must start with digit): `, 0
L__TEXT___cstring_37320: db `Number too long to read (8 characters max): `, 0
L__TEXT___cstring_37365: db `OK`, 0
L__TEXT___cstring_37368: db `Normal successful completion`, 0
L__TEXT___cstring_37397: db `EOF`, 0
L__TEXT___cstring_37401: db `Unexpected end of zip file`, 0
L__TEXT___cstring_37428: db `FORM`, 0
L__TEXT___cstring_37433: db `Zip file structure invalid`, 0
L__TEXT___cstring_37460: db `MEM`, 0
L__TEXT___cstring_37464: db `Out of memory`, 0
L__TEXT___cstring_37478: db `LOGIC`, 0
L__TEXT___cstring_37484: db `Internal logic error`, 0
L__TEXT___cstring_37505: db `BIG`, 0
L__TEXT___cstring_37509: db `Entry too big to split, read, or write`, 0
L__TEXT___cstring_37548: db `NOTE`, 0
L__TEXT___cstring_37553: db `Invalid comment format`, 0
L__TEXT___cstring_37576: db `TEST`, 0
L__TEXT___cstring_37581: db `Zip file invalid, could not spawn unzip, or wrong unzip`, 0
L__TEXT___cstring_37637: db `ABORT`, 0
L__TEXT___cstring_37643: db `Interrupted`, 0
L__TEXT___cstring_37655: db `TEMP`, 0
L__TEXT___cstring_37660: db `Temporary file failure`, 0
L__TEXT___cstring_37683: db `READ`, 0
L__TEXT___cstring_37688: db `Input file read failure`, 0
L__TEXT___cstring_37712: db `NONE`, 0
L__TEXT___cstring_37717: db `Nothing to do!`, 0
L__TEXT___cstring_37732: db `NAME`, 0
L__TEXT___cstring_37737: db `Missing or empty zip file`, 0
L__TEXT___cstring_37763: db `WRITE`, 0
L__TEXT___cstring_37769: db `Output file write failure`, 0
L__TEXT___cstring_37795: db `CREAT`, 0
L__TEXT___cstring_37801: db `Could not create output file`, 0
L__TEXT___cstring_37830: db `PARMS`, 0
L__TEXT___cstring_37836: db `Invalid command arguments`, 0
L__TEXT___cstring_37862: db `OPEN`, 0
L__TEXT___cstring_37867: db `File not found or no read permission`, 0
L__TEXT___cstring_37904: db `COMPERR`, 0
L__TEXT___cstring_37912: db `Not supported`, 0
L__TEXT___cstring_37926: db `ZIP64`, 0
L__TEXT___cstring_37932: db `Attempt to read unsupported Zip64 archive`, 0
L__TEXT___cstring_37974: db `.Z:.zip:.zoo:.arc:.lzh:.arj`, 0
L__TEXT___cstring_38002: db `/dev/tty`, 0
L__TEXT___cstring_38011: db `(line too long--try again)\n`, 0
L__TEXT___cstring_38039: db `..`, 0
L__TEXT___cstring_38042: db `Reading FIFO (Named Pipe): `, 0
L__TEXT___cstring_38070: db `ignoring FIFO (Named Pipe) - use -FI to read: `, 0
L__TEXT___cstring_38117: db `ignoring special file: `, 0
L__TEXT___cstring_38141: db `//`, 0
L__TEXT___cstring_38144: db `filetime`, 0
L__TEXT___cstring_38153: db `fstat(stdin)`, 0
L__TEXT___cstring_38166: db `set_extra_field`, 0
L__TEXT___cstring_38182: db `Compiled with %s for Unix (%s)%s.\n\n`, 0
L__TEXT___cstring_38218: db `gcc Apple LLVM 13.0.0 (clang-1300.0.29.10) [+internal-os, ptrauth-isa=deployment-target-based]`, 0
L__TEXT___cstring_38313: db `Mac OS X`, 0
L__TEXT___cstring_38322: db ` on Nov 13 2021`, 0
L__TEXT___cstring_38338: db `bad pack level`, 0
L__TEXT___cstring_38353: db `block vanished`, 0

section .bss
L__DATA___common: resb 203064

section .bss
L__DATA___bss: resb 118109


section .data
L_DATASECTION:
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0c3h
db 0a6h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0bh
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02ch
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 06bh
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b8h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02h
db 0a8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 042h
db 0a8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 055h
db 0a8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 094h
db 0a8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0d4h
db 0a8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 012h
db 0a9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 04fh
db 0a9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 087h
db 0a9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0c7h
db 0a9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ffh
db 0a9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 048h
db 0aah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 06ah
db 0aah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b3h
db 0aah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ffh
db 0aah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 049h
db 0abh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 092h
db 0abh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0dfh
db 0abh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 022h
db 0ach
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 06ah
db 0ach
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 084h
db 0ach
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0cdh
db 0ach
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 018h
db 0adh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 05fh
db 0adh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 09ch
db 0adh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0e2h
db 0adh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 029h
db 0aeh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 071h
db 0aeh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b9h
db 0aeh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02h
db 0afh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 018h
db 0afh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 063h
db 0afh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0adh
db 0afh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0f8h
db 0afh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 045h
db 0b0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 092h
db 0b0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0e0h
db 0b0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02eh
db 0b1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 052h
db 0b1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0a1h
db 0b1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0edh
db 0b1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 03ch
db 0b2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 08bh
db 0b2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0d2h
db 0b2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 021h
db 0b3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 069h
db 0b3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0b3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02h
db 0b4h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 049h
db 0b4h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 094h
db 0b4h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ddh
db 0b4h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 027h
db 0b5h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 05dh
db 0b5h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ach
db 0b5h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0f9h
db 0b5h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0bh
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0dh
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 030h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0dh
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 013h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 015h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 031h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 020h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02bh
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02dh
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 032h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 038h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 043h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 045h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 033h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 050h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 05bh
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 05dh
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 034h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 068h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 073h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 075h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 035h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 080h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 08bh
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 08dh
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 036h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 098h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0a3h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0a5h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 037h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0b0h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0bbh
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0bdh
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 038h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0c8h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0d3h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0d5h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 039h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0e0h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ebh
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0edh
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 041h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0f8h
db 0b7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 016h
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 018h
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 062h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 022h
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 03eh
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 040h
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 063h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 04fh
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 06bh
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 06dh
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 064h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 074h
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 090h
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 093h
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 05h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0a1h
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0bah
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 06h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0c9h
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0e4h
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0e7h
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 07h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0f4h
db 0b8h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 016h
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 019h
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 011h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 02ch
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 056h
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 059h
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 012h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 062h
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 08ch
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 08fh
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 013h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 09dh
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0c0h
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0c3h
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 014h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0d2h
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0efh
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0f1h
db 0b9h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 044h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 027h
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02ah
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 010h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 03dh
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 068h
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 06ah
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 065h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 072h
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 094h
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 096h
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 046h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 09ah
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0c0h
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0c3h
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 015h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0cah
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0f6h
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0f9h
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 016h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0feh
db 0bah
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02ah
db 0bbh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02dh
db 0bbh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 017h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 036h
db 0bbh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 062h
db 0bbh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 064h
db 0bbh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 066h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 06ch
db 0bbh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 08dh
db 0bbh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 090h
db 0bbh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 08h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0a2h
db 0bbh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0c9h
db 0bbh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0cch
db 0bbh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 045h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0d8h
db 0bbh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 03h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 05h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 067h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0ah
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 033h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 035h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 068h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 035h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 03ah
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 068h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 035h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 03ch
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 068h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 035h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 03eh
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 041h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 018h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 04bh
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 059h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 05bh
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 03h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 069h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 063h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 088h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 08ah
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 06ah
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 095h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0bbh
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0bdh
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 04ah
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0c6h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0e8h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0eah
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 06bh
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0f4h
db 0bch
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0fh
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 011h
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 06ch
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 019h
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 040h
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 043h
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 024h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 04dh
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 074h
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 077h
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 022h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 084h
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b0h
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b3h
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 021h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0beh
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0dah
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ddh
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 023h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0e6h
db 0bdh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ch
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0eh
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 04ch
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 016h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 026h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 028h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 06dh
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 02dh
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 054h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 025h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 057h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 060h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 063h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 026h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 06eh
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 098h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 09ah
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 06eh
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0a3h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0c6h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0c9h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 027h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0d1h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0f3h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0f5h
db 0beh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 06fh
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 027h
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 029h
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 04fh
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 035h
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 05fh
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 061h
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 070h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 067h
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 073h
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 075h
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 050h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 07eh
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0a8h
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0aah
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 071h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0aah
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b0h
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b2h
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 072h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0c0h
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0dah
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0dch
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 052h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0edh
db 0bfh
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 014h
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 017h
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 028h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01dh
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 03bh
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 03dh
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 073h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 048h
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 073h
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 076h
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 034h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 082h
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0aeh
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b1h
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 037h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0bfh
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0e0h
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0e3h
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 029h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0eeh
db 0c0h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 012h
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 015h
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 030h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 022h
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 034h
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 037h
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 031h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 042h
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 04dh
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 050h
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 032h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 05bh
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 07dh
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 080h
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 033h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 08dh
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 09ah
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 09ch
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 074h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0a6h
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0bah
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0bdh
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 038h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0c9h
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ddh
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0dfh
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 054h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0e4h
db 0c1h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ah
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0dh
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 039h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01bh
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 046h
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 048h
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 075h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 04fh
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 073h
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 075h
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 055h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 082h
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0adh
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0afh
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 076h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0b7h
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0d6h
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 041h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0deh
db 0c2h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ah
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0dh
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 043h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01ch
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 03ch
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 03eh
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 03h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 078h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 046h
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 066h
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 068h
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 058h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 074h
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 09eh
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0a0h
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 079h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0a9h
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0beh
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0c0h
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 07ah
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0d0h
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0e8h
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0eah
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 05ah
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0fdh
db 0c3h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 010h
db 0c4h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 012h
db 0c4h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 040h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01eh
db 0c4h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 05fh
db 0f5h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ffh
db 0ffh
db 0ffh
db 0ffh
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 025h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 025h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0b8h
db 038h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0bbh
db 038h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 07h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0d8h
db 038h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0dch
db 038h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 04h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0f7h
db 038h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0fch
db 038h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 017h
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01bh
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 04h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 029h
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02fh
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 04h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 044h
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 048h
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 06fh
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 074h
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 08bh
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 090h
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 04h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0c8h
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ceh
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0dah
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0dfh
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 014h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0f6h
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0fbh
db 039h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 014h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 013h
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 018h
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 027h
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02ch
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 046h
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 04ch
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 014h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 066h
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 06ch
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 014h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 089h
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 08fh
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b7h
db 0a7h
db 01h
db 00h
db 01h
db 00h
db 00h
db 00h
db 07h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0a9h
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0aeh
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 012h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0d3h
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0dbh
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 04h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0e9h
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0efh
db 03ah
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 04h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ffh
db 0ffh
db 0ffh
db 0ffh
db 06h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ffh
db 0ffh
db 0ffh
db 0ffh
db 00h
db 00h
db 00h
db 00h
db 019h
db 03bh
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 05h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0ffh
db 0ffh
db 0ffh
db 0ffh
db 0ffh
db 0ffh
db 0ffh
db 0ffh
db 0f0h
db 098h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0ffh
db 0ffh
db 0ffh
db 0ffh
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 03h
db 00h
db 00h
db 00h
db 03h
db 00h
db 00h
db 00h
db 03h
db 00h
db 00h
db 00h
db 03h
db 00h
db 00h
db 00h
db 04h
db 00h
db 00h
db 00h
db 04h
db 00h
db 00h
db 00h
db 04h
db 00h
db 00h
db 00h
db 04h
db 00h
db 00h
db 00h
db 05h
db 00h
db 00h
db 00h
db 05h
db 00h
db 00h
db 00h
db 05h
db 00h
db 00h
db 00h
db 05h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 03h
db 00h
db 00h
db 00h
db 03h
db 00h
db 00h
db 00h
db 04h
db 00h
db 00h
db 00h
db 04h
db 00h
db 00h
db 00h
db 05h
db 00h
db 00h
db 00h
db 05h
db 00h
db 00h
db 00h
db 06h
db 00h
db 00h
db 00h
db 06h
db 00h
db 00h
db 00h
db 07h
db 00h
db 00h
db 00h
db 07h
db 00h
db 00h
db 00h
db 08h
db 00h
db 00h
db 00h
db 08h
db 00h
db 00h
db 00h
db 09h
db 00h
db 00h
db 00h
db 09h
db 00h
db 00h
db 00h
db 0ah
db 00h
db 00h
db 00h
db 0ah
db 00h
db 00h
db 00h
db 0bh
db 00h
db 00h
db 00h
db 0bh
db 00h
db 00h
db 00h
db 0ch
db 00h
db 00h
db 00h
db 0ch
db 00h
db 00h
db 00h
db 0dh
db 00h
db 00h
db 00h
db 0dh
db 00h
db 00h
db 00h
db 0e0h
db 0e6h
db 05h
db 00h
db 01h
db 00h
db 00h
db 00h
db 030h
db 0d2h
db 05h
db 00h
db 01h
db 00h
db 00h
db 00h
db 0b0h
db 094h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 01h
db 01h
db 00h
db 00h
db 01eh
db 01h
db 00h
db 00h
db 0fh
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 0e0h
db 0efh
db 05h
db 00h
db 01h
db 00h
db 00h
db 00h
db 090h
db 0cdh
db 05h
db 00h
db 01h
db 00h
db 00h
db 00h
db 030h
db 095h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 01eh
db 00h
db 00h
db 00h
db 0fh
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 020h
db 071h
db 07h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 020h
db 096h
db 02h
db 00h
db 01h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 013h
db 00h
db 00h
db 00h
db 07h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 00h
db 02h
db 00h
db 00h
db 00h
db 03h
db 00h
db 00h
db 00h
db 07h
db 00h
db 00h
db 00h


section .data
L_JUMP_TABLE_100003928:
dq L10000367e_41
dq L10000367e_30
dq L10000367e_30
dq L10000367e_30
dq L10000367e_30
dq L10000367e_30
dq L10000367e_30
dq L10000367e_30
dq L10000367e_30
dq L10000367e_30
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_66
dq L10000367e_44
dq L10000367e_50
dq L10000367e_68
dq L10000367e_68
dq L10000367e_45
dq L10000367e_68
dq L10000367e_37
dq L10000367e_68
dq L10000367e_66
dq L10000367e_68
dq L10000367e_53
dq L10000367e_68
dq L10000367e_67
dq L10000367e_68
dq L10000367e_68
dq L10000367e_51
dq L10000367e_46
dq L10000367e_68
dq L10000367e_47
dq L10000367e_68
dq L10000367e_60
dq L10000367e_35
dq L10000367e_68
dq L10000367e_68
dq L10000367e_52
dq L10000367e_68
dq L10000367e_39
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_54
dq L10000367e_48
dq L10000367e_55
dq L10000367e_56
dq L10000367e_38
dq L10000367e_58
dq L10000367e_66
dq L10000367e_42
dq L10000367e_40
dq L10000367e_59
dq L10000367e_61
dq L10000367e_57
dq L10000367e_49
dq L10000367e_36
dq L10000367e_65
dq L10000367e_63
dq L10000367e_32
dq L10000367e_33
dq L10000367e_34
dq L10000367e_62
dq L10000367e_31
dq L10000367e_68
dq L10000367e_43
dq L10000367e_64
L_JUMP_TABLE_10000394f:
dq L10000367e_71
dq L10000367e_90
dq L10000367e_84
dq L10000367e_85
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_93
dq L10000367e_91
dq L10000367e_92
dq L10000367e_80
dq L10000367e_94
dq L10000367e_81
dq L10000367e_82
dq L10000367e_83
dq L10000367e_100
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_86
dq L10000367e_74
dq L10000367e_73
dq L10000367e_75
dq L10000367e_101
dq L10000367e_76
dq L10000367e_97
dq L10000367e_77
dq L10000367e_87
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_96
dq L10000367e_95
dq L10000367e_88
dq L10000367e_72
dq L10000367e_89
dq L10000367e_68
dq L10000367e_68
dq L10000367e_98
dq L10000367e_78
dq L10000367e_79
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_68
dq L10000367e_31
dq L10000367e_68
dq L10000367e_99
dq L10000367e_68
L_JUMP_TABLE_100013fcb:
dq L100013a58_112
dq L100013a58_113
dq L100013a58_112
dq L100013a58_114
L_JUMP_TABLE_100015dfe:
dq L100015cf7_22
dq L100015cf7_21
dq L100015cf7_19
dq L100015cf7_20
