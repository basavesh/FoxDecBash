
wc:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	endbr64 
    1004:	sub    rsp,0x8
    1008:	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__>
    100f:	test   rax,rax
    1012:	je     1016 <_init+0x16>
    1014:	call   rax
    1016:	add    rsp,0x8
    101a:	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	push   QWORD PTR [rip+0x2f4a]        # 3f70 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	bnd jmp QWORD PTR [rip+0x2f4b]        # 3f78 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	nop    DWORD PTR [rax]
    1030:	endbr64 
    1034:	push   0x0
    1039:	bnd jmp 1020 <.plt>
    103f:	nop
    1040:	endbr64 
    1044:	push   0x1
    1049:	bnd jmp 1020 <.plt>
    104f:	nop
    1050:	endbr64 
    1054:	push   0x2
    1059:	bnd jmp 1020 <.plt>
    105f:	nop
    1060:	endbr64 
    1064:	push   0x3
    1069:	bnd jmp 1020 <.plt>
    106f:	nop
    1070:	endbr64 
    1074:	push   0x4
    1079:	bnd jmp 1020 <.plt>
    107f:	nop
    1080:	endbr64 
    1084:	push   0x5
    1089:	bnd jmp 1020 <.plt>
    108f:	nop
    1090:	endbr64 
    1094:	push   0x6
    1099:	bnd jmp 1020 <.plt>
    109f:	nop
    10a0:	endbr64 
    10a4:	push   0x7
    10a9:	bnd jmp 1020 <.plt>
    10af:	nop
    10b0:	endbr64 
    10b4:	push   0x8
    10b9:	bnd jmp 1020 <.plt>
    10bf:	nop
    10c0:	endbr64 
    10c4:	push   0x9
    10c9:	bnd jmp 1020 <.plt>
    10cf:	nop
    10d0:	endbr64 
    10d4:	push   0xa
    10d9:	bnd jmp 1020 <.plt>
    10df:	nop

Disassembly of section .plt.got:

00000000000010e0 <__cxa_finalize@plt>:
    10e0:	endbr64 
    10e4:	bnd jmp QWORD PTR [rip+0x2f0d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

00000000000010f0 <fclose@plt>:
    10f0:	endbr64 
    10f4:	bnd jmp QWORD PTR [rip+0x2e85]        # 3f80 <fclose@GLIBC_2.2.5>
    10fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001100 <__stack_chk_fail@plt>:
    1100:	endbr64 
    1104:	bnd jmp QWORD PTR [rip+0x2e7d]        # 3f88 <__stack_chk_fail@GLIBC_2.4>
    110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001110 <printf@plt>:
    1110:	endbr64 
    1114:	bnd jmp QWORD PTR [rip+0x2e75]        # 3f90 <printf@GLIBC_2.2.5>
    111b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001120 <fputc@plt>:
    1120:	endbr64 
    1124:	bnd jmp QWORD PTR [rip+0x2e6d]        # 3f98 <fputc@GLIBC_2.2.5>
    112b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001130 <feof@plt>:
    1130:	endbr64 
    1134:	bnd jmp QWORD PTR [rip+0x2e65]        # 3fa0 <feof@GLIBC_2.2.5>
    113b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001140 <fopen@plt>:
    1140:	endbr64 
    1144:	bnd jmp QWORD PTR [rip+0x2e5d]        # 3fa8 <fopen@GLIBC_2.2.5>
    114b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001150 <perror@plt>:
    1150:	endbr64 
    1154:	bnd jmp QWORD PTR [rip+0x2e55]        # 3fb0 <perror@GLIBC_2.2.5>
    115b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001160 <vfprintf@plt>:
    1160:	endbr64 
    1164:	bnd jmp QWORD PTR [rip+0x2e4d]        # 3fb8 <vfprintf@GLIBC_2.2.5>
    116b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001170 <exit@plt>:
    1170:	endbr64 
    1174:	bnd jmp QWORD PTR [rip+0x2e45]        # 3fc0 <exit@GLIBC_2.2.5>
    117b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001180 <getc@plt>:
    1180:	endbr64 
    1184:	bnd jmp QWORD PTR [rip+0x2e3d]        # 3fc8 <getc@GLIBC_2.2.5>
    118b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001190 <__ctype_b_loc@plt>:
    1190:	endbr64 
    1194:	bnd jmp QWORD PTR [rip+0x2e35]        # 3fd0 <__ctype_b_loc@GLIBC_2.3>
    119b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000011a0 <_start>:
    11a0:	endbr64 
    11a4:	xor    ebp,ebp
    11a6:	mov    r9,rdx
    11a9:	pop    rsi
    11aa:	mov    rdx,rsp
    11ad:	and    rsp,0xfffffffffffffff0
    11b1:	push   rax
    11b2:	push   rsp
    11b3:	lea    r8,[rip+0x636]        # 17f0 <__libc_csu_fini>
    11ba:	lea    rcx,[rip+0x5bf]        # 1780 <__libc_csu_init>
    11c1:	lea    rdi,[rip+0x528]        # 16f0 <main>
    11c8:	call   QWORD PTR [rip+0x2e12]        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    11ce:	hlt    
    11cf:	nop

00000000000011d0 <deregister_tm_clones>:
    11d0:	lea    rdi,[rip+0x2e39]        # 4010 <__TMC_END__>
    11d7:	lea    rax,[rip+0x2e32]        # 4010 <__TMC_END__>
    11de:	cmp    rax,rdi
    11e1:	je     11f8 <deregister_tm_clones+0x28>
    11e3:	mov    rax,QWORD PTR [rip+0x2dee]        # 3fd8 <_ITM_deregisterTMCloneTable>
    11ea:	test   rax,rax
    11ed:	je     11f8 <deregister_tm_clones+0x28>
    11ef:	jmp    rax
    11f1:	nop    DWORD PTR [rax+0x0]
    11f8:	ret    
    11f9:	nop    DWORD PTR [rax+0x0]

0000000000001200 <register_tm_clones>:
    1200:	lea    rdi,[rip+0x2e09]        # 4010 <__TMC_END__>
    1207:	lea    rsi,[rip+0x2e02]        # 4010 <__TMC_END__>
    120e:	sub    rsi,rdi
    1211:	mov    rax,rsi
    1214:	shr    rsi,0x3f
    1218:	sar    rax,0x3
    121c:	add    rsi,rax
    121f:	sar    rsi,1
    1222:	je     1238 <register_tm_clones+0x38>
    1224:	mov    rax,QWORD PTR [rip+0x2dc5]        # 3ff0 <_ITM_registerTMCloneTable>
    122b:	test   rax,rax
    122e:	je     1238 <register_tm_clones+0x38>
    1230:	jmp    rax
    1232:	nop    WORD PTR [rax+rax*1+0x0]
    1238:	ret    
    1239:	nop    DWORD PTR [rax+0x0]

0000000000001240 <__do_global_dtors_aux>:
    1240:	endbr64 
    1244:	cmp    BYTE PTR [rip+0x2ddd],0x0        # 4028 <completed.8061>
    124b:	jne    1278 <__do_global_dtors_aux+0x38>
    124d:	push   rbp
    124e:	cmp    QWORD PTR [rip+0x2da2],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1256:	mov    rbp,rsp
    1259:	je     1267 <__do_global_dtors_aux+0x27>
    125b:	mov    rdi,QWORD PTR [rip+0x2da6]        # 4008 <__dso_handle>
    1262:	call   10e0 <__cxa_finalize@plt>
    1267:	call   11d0 <deregister_tm_clones>
    126c:	mov    BYTE PTR [rip+0x2db5],0x1        # 4028 <completed.8061>
    1273:	pop    rbp
    1274:	ret    
    1275:	nop    DWORD PTR [rax]
    1278:	ret    
    1279:	nop    DWORD PTR [rax+0x0]

0000000000001280 <frame_dummy>:
    1280:	endbr64 
    1284:	jmp    1200 <register_tm_clones>

0000000000001289 <error_print>:
    1289:	endbr64 
    128d:	push   rbp
    128e:	mov    rbp,rsp
    1291:	sub    rsp,0x20
    1295:	mov    DWORD PTR [rbp-0x4],edi
    1298:	mov    QWORD PTR [rbp-0x10],rsi
    129c:	mov    QWORD PTR [rbp-0x18],rdx
    12a0:	mov    rax,QWORD PTR [rip+0x2d79]        # 4020 <stderr@@GLIBC_2.2.5>
    12a7:	mov    rdx,QWORD PTR [rbp-0x18]
    12ab:	mov    rcx,QWORD PTR [rbp-0x10]
    12af:	mov    rsi,rcx
    12b2:	mov    rdi,rax
    12b5:	call   1160 <vfprintf@plt>
    12ba:	cmp    DWORD PTR [rbp-0x4],0x0
    12be:	je     12ce <error_print+0x45>
    12c0:	lea    rdi,[rip+0xd3d]        # 2004 <_IO_stdin_used+0x4>
    12c7:	call   1150 <perror@plt>
    12cc:	jmp    12e2 <error_print+0x59>
    12ce:	mov    rax,QWORD PTR [rip+0x2d4b]        # 4020 <stderr@@GLIBC_2.2.5>
    12d5:	mov    rsi,rax
    12d8:	mov    edi,0xa
    12dd:	call   1120 <fputc@plt>
    12e2:	mov    edi,0x1
    12e7:	call   1170 <exit@plt>

00000000000012ec <errf>:
    12ec:	endbr64 
    12f0:	push   rbp
    12f1:	mov    rbp,rsp
    12f4:	sub    rsp,0xe0
    12fb:	mov    QWORD PTR [rbp-0xd8],rdi
    1302:	mov    QWORD PTR [rbp-0xa8],rsi
    1309:	mov    QWORD PTR [rbp-0xa0],rdx
    1310:	mov    QWORD PTR [rbp-0x98],rcx
    1317:	mov    QWORD PTR [rbp-0x90],r8
    131e:	mov    QWORD PTR [rbp-0x88],r9
    1325:	test   al,al
    1327:	je     1349 <errf+0x5d>
    1329:	movaps XMMWORD PTR [rbp-0x80],xmm0
    132d:	movaps XMMWORD PTR [rbp-0x70],xmm1
    1331:	movaps XMMWORD PTR [rbp-0x60],xmm2
    1335:	movaps XMMWORD PTR [rbp-0x50],xmm3
    1339:	movaps XMMWORD PTR [rbp-0x40],xmm4
    133d:	movaps XMMWORD PTR [rbp-0x30],xmm5
    1341:	movaps XMMWORD PTR [rbp-0x20],xmm6
    1345:	movaps XMMWORD PTR [rbp-0x10],xmm7
    1349:	mov    rax,QWORD PTR fs:0x28
    1352:	mov    QWORD PTR [rbp-0xb8],rax
    1359:	xor    eax,eax
    135b:	mov    DWORD PTR [rbp-0xd0],0x8
    1365:	mov    DWORD PTR [rbp-0xcc],0x30
    136f:	lea    rax,[rbp+0x10]
    1373:	mov    QWORD PTR [rbp-0xc8],rax
    137a:	lea    rax,[rbp-0xb0]
    1381:	mov    QWORD PTR [rbp-0xc0],rax
    1388:	lea    rdx,[rbp-0xd0]
    138f:	mov    rax,QWORD PTR [rbp-0xd8]
    1396:	mov    rsi,rax
    1399:	mov    edi,0x0
    139e:	call   1289 <error_print>
    13a3:	nop
    13a4:	mov    rax,QWORD PTR [rbp-0xb8]
    13ab:	xor    rax,QWORD PTR fs:0x28
    13b4:	je     13bb <errf+0xcf>
    13b6:	call   1100 <__stack_chk_fail@plt>
    13bb:	leave  
    13bc:	ret    

00000000000013bd <perrf>:
    13bd:	endbr64 
    13c1:	push   rbp
    13c2:	mov    rbp,rsp
    13c5:	sub    rsp,0xe0
    13cc:	mov    QWORD PTR [rbp-0xd8],rdi
    13d3:	mov    QWORD PTR [rbp-0xa8],rsi
    13da:	mov    QWORD PTR [rbp-0xa0],rdx
    13e1:	mov    QWORD PTR [rbp-0x98],rcx
    13e8:	mov    QWORD PTR [rbp-0x90],r8
    13ef:	mov    QWORD PTR [rbp-0x88],r9
    13f6:	test   al,al
    13f8:	je     141a <perrf+0x5d>
    13fa:	movaps XMMWORD PTR [rbp-0x80],xmm0
    13fe:	movaps XMMWORD PTR [rbp-0x70],xmm1
    1402:	movaps XMMWORD PTR [rbp-0x60],xmm2
    1406:	movaps XMMWORD PTR [rbp-0x50],xmm3
    140a:	movaps XMMWORD PTR [rbp-0x40],xmm4
    140e:	movaps XMMWORD PTR [rbp-0x30],xmm5
    1412:	movaps XMMWORD PTR [rbp-0x20],xmm6
    1416:	movaps XMMWORD PTR [rbp-0x10],xmm7
    141a:	mov    rax,QWORD PTR fs:0x28
    1423:	mov    QWORD PTR [rbp-0xb8],rax
    142a:	xor    eax,eax
    142c:	mov    DWORD PTR [rbp-0xd0],0x8
    1436:	mov    DWORD PTR [rbp-0xcc],0x30
    1440:	lea    rax,[rbp+0x10]
    1444:	mov    QWORD PTR [rbp-0xc8],rax
    144b:	lea    rax,[rbp-0xb0]
    1452:	mov    QWORD PTR [rbp-0xc0],rax
    1459:	lea    rdx,[rbp-0xd0]
    1460:	mov    rax,QWORD PTR [rbp-0xd8]
    1467:	mov    rsi,rax
    146a:	mov    edi,0x1
    146f:	call   1289 <error_print>
    1474:	nop
    1475:	mov    rax,QWORD PTR [rbp-0xb8]
    147c:	xor    rax,QWORD PTR fs:0x28
    1485:	je     148c <perrf+0xcf>
    1487:	call   1100 <__stack_chk_fail@plt>
    148c:	leave  
    148d:	ret    

000000000000148e <report>:
    148e:	endbr64 
    1492:	push   rbp
    1493:	mov    rbp,rsp
    1496:	sub    rsp,0x20
    149a:	mov    QWORD PTR [rbp-0x8],rdi
    149e:	mov    QWORD PTR [rbp-0x10],rsi
    14a2:	mov    QWORD PTR [rbp-0x18],rdx
    14a6:	mov    QWORD PTR [rbp-0x20],rcx
    14aa:	mov    rsi,QWORD PTR [rbp-0x8]
    14ae:	mov    rcx,QWORD PTR [rbp-0x10]
    14b2:	mov    rdx,QWORD PTR [rbp-0x18]
    14b6:	mov    rax,QWORD PTR [rbp-0x20]
    14ba:	mov    r8,rsi
    14bd:	mov    rsi,rax
    14c0:	lea    rdi,[rip+0xb3f]        # 2006 <_IO_stdin_used+0x6>
    14c7:	mov    eax,0x0
    14cc:	call   1110 <printf@plt>
    14d1:	nop
    14d2:	leave  
    14d3:	ret    

00000000000014d4 <isword>:
    14d4:	endbr64 
    14d8:	push   rbp
    14d9:	mov    rbp,rsp
    14dc:	sub    rsp,0x10
    14e0:	mov    eax,edi
    14e2:	mov    BYTE PTR [rbp-0x4],al
    14e5:	call   1190 <__ctype_b_loc@plt>
    14ea:	mov    rax,QWORD PTR [rax]
    14ed:	movzx  edx,BYTE PTR [rbp-0x4]
    14f1:	add    rdx,rdx
    14f4:	add    rax,rdx
    14f7:	movzx  eax,WORD PTR [rax]
    14fa:	movzx  eax,ax
    14fd:	and    eax,0x400
    1502:	leave  
    1503:	ret    

0000000000001504 <getword>:
    1504:	endbr64 
    1508:	push   rbp
    1509:	mov    rbp,rsp
    150c:	sub    rsp,0x20
    1510:	mov    QWORD PTR [rbp-0x18],rdi
    1514:	mov    DWORD PTR [rbp-0x4],0x0
    151b:	mov    rax,QWORD PTR [rbp-0x18]
    151f:	mov    rdi,rax
    1522:	call   1130 <feof@plt>
    1527:	test   eax,eax
    1529:	je     1584 <getword+0x80>
    152b:	mov    eax,0x0
    1530:	jmp    15f8 <getword+0xf4>
    1535:	mov    eax,DWORD PTR [rbp-0x8]
    1538:	movzx  eax,al
    153b:	mov    edi,eax
    153d:	call   14d4 <isword>
    1542:	test   eax,eax
    1544:	je     155a <getword+0x56>
    1546:	mov    rax,QWORD PTR [rip+0x2afb]        # 4048 <wcount>
    154d:	add    rax,0x1
    1551:	mov    QWORD PTR [rip+0x2af0],rax        # 4048 <wcount>
    1558:	jmp    1599 <getword+0x95>
    155a:	mov    rax,QWORD PTR [rip+0x2aef]        # 4050 <ccount>
    1561:	add    rax,0x1
    1565:	mov    QWORD PTR [rip+0x2ae4],rax        # 4050 <ccount>
    156c:	cmp    DWORD PTR [rbp-0x8],0xa
    1570:	jne    1584 <getword+0x80>
    1572:	mov    rax,QWORD PTR [rip+0x2adf]        # 4058 <lcount>
    1579:	add    rax,0x1
    157d:	mov    QWORD PTR [rip+0x2ad4],rax        # 4058 <lcount>
    1584:	mov    rax,QWORD PTR [rbp-0x18]
    1588:	mov    rdi,rax
    158b:	call   1180 <getc@plt>
    1590:	mov    DWORD PTR [rbp-0x8],eax
    1593:	cmp    DWORD PTR [rbp-0x8],0xffffffff
    1597:	jne    1535 <getword+0x31>
    1599:	jmp    15e5 <getword+0xe1>
    159b:	mov    rax,QWORD PTR [rip+0x2aae]        # 4050 <ccount>
    15a2:	add    rax,0x1
    15a6:	mov    QWORD PTR [rip+0x2aa3],rax        # 4050 <ccount>
    15ad:	cmp    DWORD PTR [rbp-0x8],0xa
    15b1:	jne    15c5 <getword+0xc1>
    15b3:	mov    rax,QWORD PTR [rip+0x2a9e]        # 4058 <lcount>
    15ba:	add    rax,0x1
    15be:	mov    QWORD PTR [rip+0x2a93],rax        # 4058 <lcount>
    15c5:	mov    eax,DWORD PTR [rbp-0x8]
    15c8:	movzx  eax,al
    15cb:	mov    edi,eax
    15cd:	call   14d4 <isword>
    15d2:	test   eax,eax
    15d4:	je     15ed <getword+0xe9>
    15d6:	mov    rax,QWORD PTR [rbp-0x18]
    15da:	mov    rdi,rax
    15dd:	call   1180 <getc@plt>
    15e2:	mov    DWORD PTR [rbp-0x8],eax
    15e5:	cmp    DWORD PTR [rbp-0x8],0xffffffff
    15e9:	jne    159b <getword+0x97>
    15eb:	jmp    15ee <getword+0xea>
    15ed:	nop
    15ee:	cmp    DWORD PTR [rbp-0x8],0xffffffff
    15f2:	setne  al
    15f5:	movzx  eax,al
    15f8:	leave  
    15f9:	ret    

00000000000015fa <counter>:
    15fa:	endbr64 
    15fe:	push   rbp
    15ff:	mov    rbp,rsp
    1602:	sub    rsp,0x20
    1606:	mov    QWORD PTR [rbp-0x18],rdi
    160a:	mov    rax,QWORD PTR [rbp-0x18]
    160e:	lea    rsi,[rip+0xa04]        # 2019 <_IO_stdin_used+0x19>
    1615:	mov    rdi,rax
    1618:	call   1140 <fopen@plt>
    161d:	mov    QWORD PTR [rbp-0x8],rax
    1621:	cmp    QWORD PTR [rbp-0x8],0x0
    1626:	jne    1640 <counter+0x46>
    1628:	mov    rax,QWORD PTR [rbp-0x18]
    162c:	mov    rsi,rax
    162f:	lea    rdi,[rip+0x9e5]        # 201b <_IO_stdin_used+0x1b>
    1636:	mov    eax,0x0
    163b:	call   13bd <perrf>
    1640:	mov    QWORD PTR [rip+0x2a0d],0x0        # 4058 <lcount>
    164b:	mov    rax,QWORD PTR [rip+0x2a06]        # 4058 <lcount>
    1652:	mov    QWORD PTR [rip+0x29ef],rax        # 4048 <wcount>
    1659:	mov    rax,QWORD PTR [rip+0x29e8]        # 4048 <wcount>
    1660:	mov    QWORD PTR [rip+0x29e9],rax        # 4050 <ccount>
    1667:	nop
    1668:	mov    rax,QWORD PTR [rbp-0x8]
    166c:	mov    rdi,rax
    166f:	call   1504 <getword>
    1674:	test   eax,eax
    1676:	jne    1668 <counter+0x6e>
    1678:	mov    rax,QWORD PTR [rbp-0x8]
    167c:	mov    rdi,rax
    167f:	call   10f0 <fclose@plt>
    1684:	mov    rcx,QWORD PTR [rip+0x29cd]        # 4058 <lcount>
    168b:	mov    rdx,QWORD PTR [rip+0x29b6]        # 4048 <wcount>
    1692:	mov    rsi,QWORD PTR [rip+0x29b7]        # 4050 <ccount>
    1699:	mov    rax,QWORD PTR [rbp-0x18]
    169d:	mov    rdi,rax
    16a0:	call   148e <report>
    16a5:	mov    rdx,QWORD PTR [rip+0x2984]        # 4030 <total_ccount>
    16ac:	mov    rax,QWORD PTR [rip+0x299d]        # 4050 <ccount>
    16b3:	add    rax,rdx
    16b6:	mov    QWORD PTR [rip+0x2973],rax        # 4030 <total_ccount>
    16bd:	mov    rdx,QWORD PTR [rip+0x2974]        # 4038 <total_wcount>
    16c4:	mov    rax,QWORD PTR [rip+0x297d]        # 4048 <wcount>
    16cb:	add    rax,rdx
    16ce:	mov    QWORD PTR [rip+0x2963],rax        # 4038 <total_wcount>
    16d5:	mov    rdx,QWORD PTR [rip+0x2964]        # 4040 <total_lcount>
    16dc:	mov    rax,QWORD PTR [rip+0x2975]        # 4058 <lcount>
    16e3:	add    rax,rdx
    16e6:	mov    QWORD PTR [rip+0x2953],rax        # 4040 <total_lcount>
    16ed:	nop
    16ee:	leave  
    16ef:	ret    

00000000000016f0 <main>:
    16f0:	endbr64 
    16f4:	push   rbp
    16f5:	mov    rbp,rsp
    16f8:	sub    rsp,0x20
    16fc:	mov    DWORD PTR [rbp-0x14],edi
    16ff:	mov    QWORD PTR [rbp-0x20],rsi
    1703:	cmp    DWORD PTR [rbp-0x14],0x1
    1707:	jg     171a <main+0x2a>
    1709:	lea    rdi,[rip+0x921]        # 2031 <_IO_stdin_used+0x31>
    1710:	mov    eax,0x0
    1715:	call   12ec <errf>
    171a:	mov    DWORD PTR [rbp-0x4],0x1
    1721:	jmp    1746 <main+0x56>
    1723:	mov    eax,DWORD PTR [rbp-0x4]
    1726:	cdqe   
    1728:	lea    rdx,[rax*8+0x0]
    1730:	mov    rax,QWORD PTR [rbp-0x20]
    1734:	add    rax,rdx
    1737:	mov    rax,QWORD PTR [rax]
    173a:	mov    rdi,rax
    173d:	call   15fa <counter>
    1742:	add    DWORD PTR [rbp-0x4],0x1
    1746:	mov    eax,DWORD PTR [rbp-0x4]
    1749:	cmp    eax,DWORD PTR [rbp-0x14]
    174c:	jl     1723 <main+0x33>
    174e:	cmp    DWORD PTR [rbp-0x14],0x2
    1752:	jle    1778 <main+0x88>
    1754:	mov    rcx,QWORD PTR [rip+0x28e5]        # 4040 <total_lcount>
    175b:	mov    rdx,QWORD PTR [rip+0x28d6]        # 4038 <total_wcount>
    1762:	mov    rax,QWORD PTR [rip+0x28c7]        # 4030 <total_ccount>
    1769:	mov    rsi,rax
    176c:	lea    rdi,[rip+0x8d7]        # 204a <_IO_stdin_used+0x4a>
    1773:	call   148e <report>
    1778:	mov    eax,0x0
    177d:	leave  
    177e:	ret    
    177f:	nop

0000000000001780 <__libc_csu_init>:
    1780:	endbr64 
    1784:	push   r15
    1786:	lea    r15,[rip+0x25db]        # 3d68 <__frame_dummy_init_array_entry>
    178d:	push   r14
    178f:	mov    r14,rdx
    1792:	push   r13
    1794:	mov    r13,rsi
    1797:	push   r12
    1799:	mov    r12d,edi
    179c:	push   rbp
    179d:	lea    rbp,[rip+0x25cc]        # 3d70 <__do_global_dtors_aux_fini_array_entry>
    17a4:	push   rbx
    17a5:	sub    rbp,r15
    17a8:	sub    rsp,0x8
    17ac:	call   1000 <_init>
    17b1:	sar    rbp,0x3
    17b5:	je     17d6 <__libc_csu_init+0x56>
    17b7:	xor    ebx,ebx
    17b9:	nop    DWORD PTR [rax+0x0]
    17c0:	mov    rdx,r14
    17c3:	mov    rsi,r13
    17c6:	mov    edi,r12d
    17c9:	call   QWORD PTR [r15+rbx*8]
    17cd:	add    rbx,0x1
    17d1:	cmp    rbp,rbx
    17d4:	jne    17c0 <__libc_csu_init+0x40>
    17d6:	add    rsp,0x8
    17da:	pop    rbx
    17db:	pop    rbp
    17dc:	pop    r12
    17de:	pop    r13
    17e0:	pop    r14
    17e2:	pop    r15
    17e4:	ret    
    17e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000000017f0 <__libc_csu_fini>:
    17f0:	endbr64 
    17f4:	ret    

Disassembly of section .fini:

00000000000017f8 <_fini>:
    17f8:	endbr64 
    17fc:	sub    rsp,0x8
    1800:	add    rsp,0x8
    1804:	ret    
