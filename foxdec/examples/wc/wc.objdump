
/usr/bin/wc:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <.init>:
    2000:	endbr64 
    2004:	sub    rsp,0x8
    2008:	mov    rax,QWORD PTR [rip+0xafc9]        # cfd8 <__gmon_start__>
    200f:	test   rax,rax
    2012:	je     2016 <free@plt-0x41a>
    2014:	call   rax
    2016:	add    rsp,0x8
    201a:	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	push   QWORD PTR [rip+0xad8a]        # cdb0 <_obstack_memory_used@@Base+0x4df0>
    2026:	bnd jmp QWORD PTR [rip+0xad8b]        # cdb8 <_obstack_memory_used@@Base+0x4df8>
    202d:	nop    DWORD PTR [rax]
    2030:	endbr64 
    2034:	push   0x0
    2039:	bnd jmp 2020 <free@plt-0x410>
    203f:	nop
    2040:	endbr64 
    2044:	push   0x1
    2049:	bnd jmp 2020 <free@plt-0x410>
    204f:	nop
    2050:	endbr64 
    2054:	push   0x2
    2059:	bnd jmp 2020 <free@plt-0x410>
    205f:	nop
    2060:	endbr64 
    2064:	push   0x3
    2069:	bnd jmp 2020 <free@plt-0x410>
    206f:	nop
    2070:	endbr64 
    2074:	push   0x4
    2079:	bnd jmp 2020 <free@plt-0x410>
    207f:	nop
    2080:	endbr64 
    2084:	push   0x5
    2089:	bnd jmp 2020 <free@plt-0x410>
    208f:	nop
    2090:	endbr64 
    2094:	push   0x6
    2099:	bnd jmp 2020 <free@plt-0x410>
    209f:	nop
    20a0:	endbr64 
    20a4:	push   0x7
    20a9:	bnd jmp 2020 <free@plt-0x410>
    20af:	nop
    20b0:	endbr64 
    20b4:	push   0x8
    20b9:	bnd jmp 2020 <free@plt-0x410>
    20bf:	nop
    20c0:	endbr64 
    20c4:	push   0x9
    20c9:	bnd jmp 2020 <free@plt-0x410>
    20cf:	nop
    20d0:	endbr64 
    20d4:	push   0xa
    20d9:	bnd jmp 2020 <free@plt-0x410>
    20df:	nop
    20e0:	endbr64 
    20e4:	push   0xb
    20e9:	bnd jmp 2020 <free@plt-0x410>
    20ef:	nop
    20f0:	endbr64 
    20f4:	push   0xc
    20f9:	bnd jmp 2020 <free@plt-0x410>
    20ff:	nop
    2100:	endbr64 
    2104:	push   0xd
    2109:	bnd jmp 2020 <free@plt-0x410>
    210f:	nop
    2110:	endbr64 
    2114:	push   0xe
    2119:	bnd jmp 2020 <free@plt-0x410>
    211f:	nop
    2120:	endbr64 
    2124:	push   0xf
    2129:	bnd jmp 2020 <free@plt-0x410>
    212f:	nop
    2130:	endbr64 
    2134:	push   0x10
    2139:	bnd jmp 2020 <free@plt-0x410>
    213f:	nop
    2140:	endbr64 
    2144:	push   0x11
    2149:	bnd jmp 2020 <free@plt-0x410>
    214f:	nop
    2150:	endbr64 
    2154:	push   0x12
    2159:	bnd jmp 2020 <free@plt-0x410>
    215f:	nop
    2160:	endbr64 
    2164:	push   0x13
    2169:	bnd jmp 2020 <free@plt-0x410>
    216f:	nop
    2170:	endbr64 
    2174:	push   0x14
    2179:	bnd jmp 2020 <free@plt-0x410>
    217f:	nop
    2180:	endbr64 
    2184:	push   0x15
    2189:	bnd jmp 2020 <free@plt-0x410>
    218f:	nop
    2190:	endbr64 
    2194:	push   0x16
    2199:	bnd jmp 2020 <free@plt-0x410>
    219f:	nop
    21a0:	endbr64 
    21a4:	push   0x17
    21a9:	bnd jmp 2020 <free@plt-0x410>
    21af:	nop
    21b0:	endbr64 
    21b4:	push   0x18
    21b9:	bnd jmp 2020 <free@plt-0x410>
    21bf:	nop
    21c0:	endbr64 
    21c4:	push   0x19
    21c9:	bnd jmp 2020 <free@plt-0x410>
    21cf:	nop
    21d0:	endbr64 
    21d4:	push   0x1a
    21d9:	bnd jmp 2020 <free@plt-0x410>
    21df:	nop
    21e0:	endbr64 
    21e4:	push   0x1b
    21e9:	bnd jmp 2020 <free@plt-0x410>
    21ef:	nop
    21f0:	endbr64 
    21f4:	push   0x1c
    21f9:	bnd jmp 2020 <free@plt-0x410>
    21ff:	nop
    2200:	endbr64 
    2204:	push   0x1d
    2209:	bnd jmp 2020 <free@plt-0x410>
    220f:	nop
    2210:	endbr64 
    2214:	push   0x1e
    2219:	bnd jmp 2020 <free@plt-0x410>
    221f:	nop
    2220:	endbr64 
    2224:	push   0x1f
    2229:	bnd jmp 2020 <free@plt-0x410>
    222f:	nop
    2230:	endbr64 
    2234:	push   0x20
    2239:	bnd jmp 2020 <free@plt-0x410>
    223f:	nop
    2240:	endbr64 
    2244:	push   0x21
    2249:	bnd jmp 2020 <free@plt-0x410>
    224f:	nop
    2250:	endbr64 
    2254:	push   0x22
    2259:	bnd jmp 2020 <free@plt-0x410>
    225f:	nop
    2260:	endbr64 
    2264:	push   0x23
    2269:	bnd jmp 2020 <free@plt-0x410>
    226f:	nop
    2270:	endbr64 
    2274:	push   0x24
    2279:	bnd jmp 2020 <free@plt-0x410>
    227f:	nop
    2280:	endbr64 
    2284:	push   0x25
    2289:	bnd jmp 2020 <free@plt-0x410>
    228f:	nop
    2290:	endbr64 
    2294:	push   0x26
    2299:	bnd jmp 2020 <free@plt-0x410>
    229f:	nop
    22a0:	endbr64 
    22a4:	push   0x27
    22a9:	bnd jmp 2020 <free@plt-0x410>
    22af:	nop
    22b0:	endbr64 
    22b4:	push   0x28
    22b9:	bnd jmp 2020 <free@plt-0x410>
    22bf:	nop
    22c0:	endbr64 
    22c4:	push   0x29
    22c9:	bnd jmp 2020 <free@plt-0x410>
    22cf:	nop
    22d0:	endbr64 
    22d4:	push   0x2a
    22d9:	bnd jmp 2020 <free@plt-0x410>
    22df:	nop
    22e0:	endbr64 
    22e4:	push   0x2b
    22e9:	bnd jmp 2020 <free@plt-0x410>
    22ef:	nop
    22f0:	endbr64 
    22f4:	push   0x2c
    22f9:	bnd jmp 2020 <free@plt-0x410>
    22ff:	nop
    2300:	endbr64 
    2304:	push   0x2d
    2309:	bnd jmp 2020 <free@plt-0x410>
    230f:	nop
    2310:	endbr64 
    2314:	push   0x2e
    2319:	bnd jmp 2020 <free@plt-0x410>
    231f:	nop
    2320:	endbr64 
    2324:	push   0x2f
    2329:	bnd jmp 2020 <free@plt-0x410>
    232f:	nop
    2330:	endbr64 
    2334:	push   0x30
    2339:	bnd jmp 2020 <free@plt-0x410>
    233f:	nop
    2340:	endbr64 
    2344:	push   0x31
    2349:	bnd jmp 2020 <free@plt-0x410>
    234f:	nop
    2350:	endbr64 
    2354:	push   0x32
    2359:	bnd jmp 2020 <free@plt-0x410>
    235f:	nop
    2360:	endbr64 
    2364:	push   0x33
    2369:	bnd jmp 2020 <free@plt-0x410>
    236f:	nop
    2370:	endbr64 
    2374:	push   0x34
    2379:	bnd jmp 2020 <free@plt-0x410>
    237f:	nop
    2380:	endbr64 
    2384:	push   0x35
    2389:	bnd jmp 2020 <free@plt-0x410>
    238f:	nop
    2390:	endbr64 
    2394:	push   0x36
    2399:	bnd jmp 2020 <free@plt-0x410>
    239f:	nop
    23a0:	endbr64 
    23a4:	push   0x37
    23a9:	bnd jmp 2020 <free@plt-0x410>
    23af:	nop
    23b0:	endbr64 
    23b4:	push   0x38
    23b9:	bnd jmp 2020 <free@plt-0x410>
    23bf:	nop
    23c0:	endbr64 
    23c4:	push   0x39
    23c9:	bnd jmp 2020 <free@plt-0x410>
    23cf:	nop
    23d0:	endbr64 
    23d4:	push   0x3a
    23d9:	bnd jmp 2020 <free@plt-0x410>
    23df:	nop
    23e0:	endbr64 
    23e4:	push   0x3b
    23e9:	bnd jmp 2020 <free@plt-0x410>
    23ef:	nop
    23f0:	endbr64 
    23f4:	push   0x3c
    23f9:	bnd jmp 2020 <free@plt-0x410>
    23ff:	nop
    2400:	endbr64 
    2404:	push   0x3d
    2409:	bnd jmp 2020 <free@plt-0x410>
    240f:	nop
    2410:	endbr64 
    2414:	push   0x3e
    2419:	bnd jmp 2020 <free@plt-0x410>
    241f:	nop
    2420:	endbr64 
    2424:	push   0x3f
    2429:	bnd jmp 2020 <free@plt-0x410>
    242f:	nop

Disassembly of section .plt.got:

0000000000002430 <free@plt>:
    2430:	endbr64 
    2434:	bnd jmp QWORD PTR [rip+0xab85]        # cfc0 <free@GLIBC_2.2.5>
    243b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002440 <malloc@plt>:
    2440:	endbr64 
    2444:	bnd jmp QWORD PTR [rip+0xab95]        # cfe0 <malloc@GLIBC_2.2.5>
    244b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002450 <__cxa_finalize@plt>:
    2450:	endbr64 
    2454:	bnd jmp QWORD PTR [rip+0xab95]        # cff0 <__cxa_finalize@GLIBC_2.2.5>
    245b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000002460 <getenv@plt>:
    2460:	endbr64 
    2464:	bnd jmp QWORD PTR [rip+0xa955]        # cdc0 <getenv@GLIBC_2.2.5>
    246b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002470 <abort@plt>:
    2470:	endbr64 
    2474:	bnd jmp QWORD PTR [rip+0xa94d]        # cdc8 <abort@GLIBC_2.2.5>
    247b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002480 <__errno_location@plt>:
    2480:	endbr64 
    2484:	bnd jmp QWORD PTR [rip+0xa945]        # cdd0 <__errno_location@GLIBC_2.2.5>
    248b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002490 <strncmp@plt>:
    2490:	endbr64 
    2494:	bnd jmp QWORD PTR [rip+0xa93d]        # cdd8 <strncmp@GLIBC_2.2.5>
    249b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024a0 <_exit@plt>:
    24a0:	endbr64 
    24a4:	bnd jmp QWORD PTR [rip+0xa935]        # cde0 <_exit@GLIBC_2.2.5>
    24ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024b0 <__fpending@plt>:
    24b0:	endbr64 
    24b4:	bnd jmp QWORD PTR [rip+0xa92d]        # cde8 <__fpending@GLIBC_2.2.5>
    24bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024c0 <ferror@plt>:
    24c0:	endbr64 
    24c4:	bnd jmp QWORD PTR [rip+0xa925]        # cdf0 <ferror@GLIBC_2.2.5>
    24cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024d0 <iswcntrl@plt>:
    24d0:	endbr64 
    24d4:	bnd jmp QWORD PTR [rip+0xa91d]        # cdf8 <iswcntrl@GLIBC_2.2.5>
    24db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024e0 <textdomain@plt>:
    24e0:	endbr64 
    24e4:	bnd jmp QWORD PTR [rip+0xa915]        # ce00 <textdomain@GLIBC_2.2.5>
    24eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000024f0 <fclose@plt>:
    24f0:	endbr64 
    24f4:	bnd jmp QWORD PTR [rip+0xa90d]        # ce08 <fclose@GLIBC_2.2.5>
    24fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002500 <bindtextdomain@plt>:
    2500:	endbr64 
    2504:	bnd jmp QWORD PTR [rip+0xa905]        # ce10 <bindtextdomain@GLIBC_2.2.5>
    250b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002510 <dcgettext@plt>:
    2510:	endbr64 
    2514:	bnd jmp QWORD PTR [rip+0xa8fd]        # ce18 <dcgettext@GLIBC_2.2.5>
    251b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002520 <__ctype_get_mb_cur_max@plt>:
    2520:	endbr64 
    2524:	bnd jmp QWORD PTR [rip+0xa8f5]        # ce20 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
    252b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002530 <strlen@plt>:
    2530:	endbr64 
    2534:	bnd jmp QWORD PTR [rip+0xa8ed]        # ce28 <strlen@GLIBC_2.2.5>
    253b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002540 <__stack_chk_fail@plt>:
    2540:	endbr64 
    2544:	bnd jmp QWORD PTR [rip+0xa8e5]        # ce30 <__stack_chk_fail@GLIBC_2.4>
    254b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002550 <getopt_long@plt>:
    2550:	endbr64 
    2554:	bnd jmp QWORD PTR [rip+0xa8dd]        # ce38 <getopt_long@GLIBC_2.2.5>
    255b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002560 <mbrtowc@plt>:
    2560:	endbr64 
    2564:	bnd jmp QWORD PTR [rip+0xa8d5]        # ce40 <mbrtowc@GLIBC_2.2.5>
    256b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002570 <strchr@plt>:
    2570:	endbr64 
    2574:	bnd jmp QWORD PTR [rip+0xa8cd]        # ce48 <strchr@GLIBC_2.2.5>
    257b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002580 <__overflow@plt>:
    2580:	endbr64 
    2584:	bnd jmp QWORD PTR [rip+0xa8c5]        # ce50 <__overflow@GLIBC_2.2.5>
    258b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002590 <strrchr@plt>:
    2590:	endbr64 
    2594:	bnd jmp QWORD PTR [rip+0xa8bd]        # ce58 <strrchr@GLIBC_2.2.5>
    259b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025a0 <lseek@plt>:
    25a0:	endbr64 
    25a4:	bnd jmp QWORD PTR [rip+0xa8b5]        # ce60 <lseek@GLIBC_2.2.5>
    25ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025b0 <__assert_fail@plt>:
    25b0:	endbr64 
    25b4:	bnd jmp QWORD PTR [rip+0xa8ad]        # ce68 <__assert_fail@GLIBC_2.2.5>
    25bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025c0 <memset@plt>:
    25c0:	endbr64 
    25c4:	bnd jmp QWORD PTR [rip+0xa8a5]        # ce70 <memset@GLIBC_2.2.5>
    25cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025d0 <fgetc@plt>:
    25d0:	endbr64 
    25d4:	bnd jmp QWORD PTR [rip+0xa89d]        # ce78 <fgetc@GLIBC_2.2.5>
    25db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025e0 <close@plt>:
    25e0:	endbr64 
    25e4:	bnd jmp QWORD PTR [rip+0xa895]        # ce80 <close@GLIBC_2.2.5>
    25eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000025f0 <posix_fadvise@plt>:
    25f0:	endbr64 
    25f4:	bnd jmp QWORD PTR [rip+0xa88d]        # ce88 <posix_fadvise@GLIBC_2.2.5>
    25fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002600 <memchr@plt>:
    2600:	endbr64 
    2604:	bnd jmp QWORD PTR [rip+0xa885]        # ce90 <memchr@GLIBC_2.2.5>
    260b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002610 <read@plt>:
    2610:	endbr64 
    2614:	bnd jmp QWORD PTR [rip+0xa87d]        # ce98 <read@GLIBC_2.2.5>
    261b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002620 <memcmp@plt>:
    2620:	endbr64 
    2624:	bnd jmp QWORD PTR [rip+0xa875]        # cea0 <memcmp@GLIBC_2.2.5>
    262b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002630 <fputs_unlocked@plt>:
    2630:	endbr64 
    2634:	bnd jmp QWORD PTR [rip+0xa86d]        # cea8 <fputs_unlocked@GLIBC_2.2.5>
    263b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002640 <calloc@plt>:
    2640:	endbr64 
    2644:	bnd jmp QWORD PTR [rip+0xa865]        # ceb0 <calloc@GLIBC_2.2.5>
    264b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002650 <strcmp@plt>:
    2650:	endbr64 
    2654:	bnd jmp QWORD PTR [rip+0xa85d]        # ceb8 <strcmp@GLIBC_2.2.5>
    265b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002660 <fputc_unlocked@plt>:
    2660:	endbr64 
    2664:	bnd jmp QWORD PTR [rip+0xa855]        # cec0 <fputc_unlocked@GLIBC_2.2.5>
    266b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002670 <__memmove_chk@plt>:
    2670:	endbr64 
    2674:	bnd jmp QWORD PTR [rip+0xa84d]        # cec8 <__memmove_chk@GLIBC_2.3.4>
    267b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002680 <feof@plt>:
    2680:	endbr64 
    2684:	bnd jmp QWORD PTR [rip+0xa845]        # ced0 <feof@GLIBC_2.2.5>
    268b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002690 <memcpy@plt>:
    2690:	endbr64 
    2694:	bnd jmp QWORD PTR [rip+0xa83d]        # ced8 <memcpy@GLIBC_2.14>
    269b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026a0 <fileno@plt>:
    26a0:	endbr64 
    26a4:	bnd jmp QWORD PTR [rip+0xa835]        # cee0 <fileno@GLIBC_2.2.5>
    26ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026b0 <__xstat@plt>:
    26b0:	endbr64 
    26b4:	bnd jmp QWORD PTR [rip+0xa82d]        # cee8 <__xstat@GLIBC_2.2.5>
    26bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026c0 <wcwidth@plt>:
    26c0:	endbr64 
    26c4:	bnd jmp QWORD PTR [rip+0xa825]        # cef0 <wcwidth@GLIBC_2.2.5>
    26cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026d0 <fflush@plt>:
    26d0:	endbr64 
    26d4:	bnd jmp QWORD PTR [rip+0xa81d]        # cef8 <fflush@GLIBC_2.2.5>
    26db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026e0 <nl_langinfo@plt>:
    26e0:	endbr64 
    26e4:	bnd jmp QWORD PTR [rip+0xa815]        # cf00 <nl_langinfo@GLIBC_2.2.5>
    26eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000026f0 <__fxstat@plt>:
    26f0:	endbr64 
    26f4:	bnd jmp QWORD PTR [rip+0xa80d]        # cf08 <__fxstat@GLIBC_2.2.5>
    26fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002700 <__freading@plt>:
    2700:	endbr64 
    2704:	bnd jmp QWORD PTR [rip+0xa805]        # cf10 <__freading@GLIBC_2.2.5>
    270b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002710 <realloc@plt>:
    2710:	endbr64 
    2714:	bnd jmp QWORD PTR [rip+0xa7fd]        # cf18 <realloc@GLIBC_2.2.5>
    271b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002720 <setlocale@plt>:
    2720:	endbr64 
    2724:	bnd jmp QWORD PTR [rip+0xa7f5]        # cf20 <setlocale@GLIBC_2.2.5>
    272b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002730 <__printf_chk@plt>:
    2730:	endbr64 
    2734:	bnd jmp QWORD PTR [rip+0xa7ed]        # cf28 <__printf_chk@GLIBC_2.3.4>
    273b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002740 <setvbuf@plt>:
    2740:	endbr64 
    2744:	bnd jmp QWORD PTR [rip+0xa7e5]        # cf30 <setvbuf@GLIBC_2.2.5>
    274b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002750 <iswspace@plt>:
    2750:	endbr64 
    2754:	bnd jmp QWORD PTR [rip+0xa7dd]        # cf38 <iswspace@GLIBC_2.2.5>
    275b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002760 <btowc@plt>:
    2760:	endbr64 
    2764:	bnd jmp QWORD PTR [rip+0xa7d5]        # cf40 <btowc@GLIBC_2.2.5>
    276b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002770 <error@plt>:
    2770:	endbr64 
    2774:	bnd jmp QWORD PTR [rip+0xa7cd]        # cf48 <error@GLIBC_2.2.5>
    277b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002780 <open@plt>:
    2780:	endbr64 
    2784:	bnd jmp QWORD PTR [rip+0xa7c5]        # cf50 <open@GLIBC_2.2.5>
    278b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002790 <fseeko@plt>:
    2790:	endbr64 
    2794:	bnd jmp QWORD PTR [rip+0xa7bd]        # cf58 <fseeko@GLIBC_2.2.5>
    279b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027a0 <fopen@plt>:
    27a0:	endbr64 
    27a4:	bnd jmp QWORD PTR [rip+0xa7b5]        # cf60 <fopen@GLIBC_2.2.5>
    27ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027b0 <sysconf@plt>:
    27b0:	endbr64 
    27b4:	bnd jmp QWORD PTR [rip+0xa7ad]        # cf68 <sysconf@GLIBC_2.2.5>
    27bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027c0 <__cxa_atexit@plt>:
    27c0:	endbr64 
    27c4:	bnd jmp QWORD PTR [rip+0xa7a5]        # cf70 <__cxa_atexit@GLIBC_2.2.5>
    27cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027d0 <sysinfo@plt>:
    27d0:	endbr64 
    27d4:	bnd jmp QWORD PTR [rip+0xa79d]        # cf78 <sysinfo@GLIBC_2.2.5>
    27db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027e0 <getpagesize@plt>:
    27e0:	endbr64 
    27e4:	bnd jmp QWORD PTR [rip+0xa795]        # cf80 <getpagesize@GLIBC_2.2.5>
    27eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000000027f0 <exit@plt>:
    27f0:	endbr64 
    27f4:	bnd jmp QWORD PTR [rip+0xa78d]        # cf88 <exit@GLIBC_2.2.5>
    27fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002800 <fwrite@plt>:
    2800:	endbr64 
    2804:	bnd jmp QWORD PTR [rip+0xa785]        # cf90 <fwrite@GLIBC_2.2.5>
    280b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002810 <__fprintf_chk@plt>:
    2810:	endbr64 
    2814:	bnd jmp QWORD PTR [rip+0xa77d]        # cf98 <__fprintf_chk@GLIBC_2.3.4>
    281b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002820 <mbsinit@plt>:
    2820:	endbr64 
    2824:	bnd jmp QWORD PTR [rip+0xa775]        # cfa0 <mbsinit@GLIBC_2.2.5>
    282b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002830 <iswprint@plt>:
    2830:	endbr64 
    2834:	bnd jmp QWORD PTR [rip+0xa76d]        # cfa8 <iswprint@GLIBC_2.2.5>
    283b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002840 <getdelim@plt>:
    2840:	endbr64 
    2844:	bnd jmp QWORD PTR [rip+0xa765]        # cfb0 <getdelim@GLIBC_2.2.5>
    284b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000002850 <__ctype_b_loc@plt>:
    2850:	endbr64 
    2854:	bnd jmp QWORD PTR [rip+0xa75d]        # cfb8 <__ctype_b_loc@GLIBC_2.3>
    285b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000002860 <_obstack_begin@@Base-0x5520>:
    2860:	call   2470 <abort@plt>
    2865:	call   2470 <abort@plt>
    286a:	call   2470 <abort@plt>
    286f:	call   2470 <abort@plt>
    2874:	call   2470 <abort@plt>
    2879:	call   2470 <abort@plt>
    287e:	call   2470 <abort@plt>
    2883:	call   2470 <abort@plt>
    2888:	call   2470 <abort@plt>
    288d:	call   2470 <abort@plt>
    2892:	call   2470 <abort@plt>
    2897:	call   2470 <abort@plt>
    289c:	call   2470 <abort@plt>
    28a1:	cs nop WORD PTR [rax+rax*1+0x0]
    28ab:	nop    DWORD PTR [rax+rax*1+0x0]
    28b0:	endbr64 
    28b4:	push   r15
    28b6:	push   r14
    28b8:	push   r13
    28ba:	lea    r13,[rip+0x6a13]        # 92d4 <_obstack_memory_used@@Base+0x1314>
    28c1:	push   r12
    28c3:	push   rbp
    28c4:	mov    rbp,rsi
    28c7:	push   rbx
    28c8:	mov    ebx,edi
    28ca:	sub    rsp,0x208
    28d1:	mov    rdi,QWORD PTR [rsi]
    28d4:	mov    rax,QWORD PTR fs:0x28
    28dd:	mov    QWORD PTR [rsp+0x1f8],rax
    28e5:	xor    eax,eax
    28e7:	call   4ab0 <__ctype_b_loc@plt+0x2260>
    28ec:	lea    rsi,[rip+0x782e]        # a121 <_obstack_memory_used@@Base+0x2161>
    28f3:	mov    edi,0x6
    28f8:	call   2720 <setlocale@plt>
    28fd:	lea    rsi,[rip+0x67b5]        # 90b9 <_obstack_memory_used@@Base+0x10f9>
    2904:	lea    rdi,[rip+0x6785]        # 9090 <_obstack_memory_used@@Base+0x10d0>
    290b:	call   2500 <bindtextdomain@plt>
    2910:	lea    rdi,[rip+0x6779]        # 9090 <_obstack_memory_used@@Base+0x10d0>
    2917:	call   24e0 <textdomain@plt>
    291c:	lea    rdi,[rip+0x1d5d]        # 4680 <__ctype_b_loc@plt+0x1e30>
    2923:	call   8260 <_obstack_memory_used@@Base+0x2a0>
    2928:	call   27e0 <getpagesize@plt>
    292d:	mov    rdi,QWORD PTR [rip+0xa774]        # d0a8 <stdout@@GLIBC_2.2.5>
    2934:	xor    ecx,ecx
    2936:	xor    esi,esi
    2938:	cdqe   
    293a:	mov    edx,0x1
    293f:	mov    QWORD PTR [rip+0xa7ba],rax        # d100 <stderr@@GLIBC_2.2.5+0x20>
    2946:	call   2740 <setvbuf@plt>
    294b:	lea    rdi,[rip+0x6779]        # 90cb <_obstack_memory_used@@Base+0x110b>
    2952:	call   2460 <getenv@plt>
    2957:	mov    BYTE PTR [rip+0xa7b3],0x0        # d111 <stderr@@GLIBC_2.2.5+0x31>
    295e:	mov    BYTE PTR [rip+0xa7ad],0x0        # d112 <stderr@@GLIBC_2.2.5+0x32>
    2965:	test   rax,rax
    2968:	mov    BYTE PTR [rip+0xa7a4],0x0        # d113 <stderr@@GLIBC_2.2.5+0x33>
    296f:	mov    BYTE PTR [rip+0xa79e],0x0        # d114 <stderr@@GLIBC_2.2.5+0x34>
    2976:	mov    BYTE PTR [rip+0xa793],0x0        # d110 <stderr@@GLIBC_2.2.5+0x30>
    297d:	mov    QWORD PTR [rip+0xa790],0x0        # d118 <stderr@@GLIBC_2.2.5+0x38>
    2988:	mov    QWORD PTR [rip+0xa78d],0x0        # d120 <stderr@@GLIBC_2.2.5+0x40>
    2993:	mov    QWORD PTR [rip+0xa78a],0x0        # d128 <stderr@@GLIBC_2.2.5+0x48>
    299e:	mov    QWORD PTR [rip+0xa787],0x0        # d130 <stderr@@GLIBC_2.2.5+0x50>
    29a9:	mov    QWORD PTR [rip+0xa784],0x0        # d138 <stderr@@GLIBC_2.2.5+0x58>
    29b4:	setne  BYTE PTR [rip+0xa73d]        # d0f8 <stderr@@GLIBC_2.2.5+0x18>
    29bb:	xor    r12d,r12d
    29be:	xchg   ax,ax
    29c0:	xor    r8d,r8d
    29c3:	lea    rcx,[rip+0xa076]        # ca40 <_obstack_memory_used@@Base+0x4a80>
    29ca:	mov    rsi,rbp
    29cd:	mov    edi,ebx
    29cf:	lea    rdx,[rip+0x6720]        # 90f6 <_obstack_memory_used@@Base+0x1136>
    29d6:	call   2550 <getopt_long@plt>
    29db:	cmp    eax,0xffffffff
    29de:	je     2ad6 <__ctype_b_loc@plt+0x286>
    29e4:	cmp    eax,0x80
    29e9:	jg     2a87 <__ctype_b_loc@plt+0x237>
    29ef:	cmp    eax,0x62
    29f2:	jle    2a60 <__ctype_b_loc@plt+0x210>
    29f4:	sub    eax,0x63
    29f7:	cmp    eax,0x1d
    29fa:	ja     2a87 <__ctype_b_loc@plt+0x237>
    2a00:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
    2a05:	add    rax,r13
    2a08:	notrack jmp rax
    2a0b:	nop    DWORD PTR [rax+rax*1+0x0]
    2a10:	mov    r12,QWORD PTR [rip+0xa6a9]        # d0c0 <optarg@@GLIBC_2.2.5>
    2a17:	jmp    29c0 <__ctype_b_loc@plt+0x170>
    2a19:	nop    DWORD PTR [rax+0x0]
    2a20:	mov    BYTE PTR [rip+0xa6ec],0x1        # d113 <stderr@@GLIBC_2.2.5+0x33>
    2a27:	jmp    29c0 <__ctype_b_loc@plt+0x170>
    2a29:	nop    DWORD PTR [rax+0x0]
    2a30:	mov    BYTE PTR [rip+0xa6db],0x1        # d112 <stderr@@GLIBC_2.2.5+0x32>
    2a37:	jmp    29c0 <__ctype_b_loc@plt+0x170>
    2a39:	nop    DWORD PTR [rax+0x0]
    2a40:	mov    BYTE PTR [rip+0xa6cd],0x1        # d114 <stderr@@GLIBC_2.2.5+0x34>
    2a47:	jmp    29c0 <__ctype_b_loc@plt+0x170>
    2a4c:	nop    DWORD PTR [rax+0x0]
    2a50:	mov    BYTE PTR [rip+0xa6ba],0x1        # d111 <stderr@@GLIBC_2.2.5+0x31>
    2a57:	jmp    29c0 <__ctype_b_loc@plt+0x170>
    2a5c:	nop    DWORD PTR [rax+0x0]
    2a60:	cmp    eax,0xffffff7e
    2a65:	je     329c <__ctype_b_loc@plt+0xa4c>
    2a6b:	cmp    eax,0x4c
    2a6e:	jne    2a80 <__ctype_b_loc@plt+0x230>
    2a70:	mov    BYTE PTR [rip+0xa699],0x1        # d110 <stderr@@GLIBC_2.2.5+0x30>
    2a77:	jmp    29c0 <__ctype_b_loc@plt+0x170>
    2a7c:	nop    DWORD PTR [rax+0x0]
    2a80:	cmp    eax,0xffffff7d
    2a85:	je     2a98 <__ctype_b_loc@plt+0x248>
    2a87:	mov    edi,0x1
    2a8c:	call   4140 <__ctype_b_loc@plt+0x18f0>
    2a91:	nop    DWORD PTR [rax+0x0]
    2a98:	sub    rsp,0x8
    2a9c:	mov    rdi,QWORD PTR [rip+0xa605]        # d0a8 <stdout@@GLIBC_2.2.5>
    2aa3:	xor    eax,eax
    2aa5:	mov    rcx,QWORD PTR [rip+0xa564]        # d010 <_obstack_memory_used@@Base+0x5050>
    2aac:	push   0x0
    2aae:	lea    r9,[rip+0x6626]        # 90db <_obstack_memory_used@@Base+0x111b>
    2ab5:	lea    r8,[rip+0x662f]        # 90eb <_obstack_memory_used@@Base+0x112b>
    2abc:	lea    rdx,[rip+0x65c9]        # 908c <_obstack_memory_used@@Base+0x10cc>
    2ac3:	lea    rsi,[rip+0x6549]        # 9013 <_obstack_memory_used@@Base+0x1053>
    2aca:	call   75b0 <__ctype_b_loc@plt+0x4d60>
    2acf:	xor    edi,edi
    2ad1:	call   27f0 <exit@plt>
    2ad6:	cmp    BYTE PTR [rip+0xa637],0x0        # d114 <stderr@@GLIBC_2.2.5+0x34>
    2add:	jne    2aec <__ctype_b_loc@plt+0x29c>
    2adf:	cmp    BYTE PTR [rip+0xa62d],0x0        # d113 <stderr@@GLIBC_2.2.5+0x33>
    2ae6:	je     2fab <__ctype_b_loc@plt+0x75b>
    2aec:	movsxd rax,DWORD PTR [rip+0xa5c5]        # d0b8 <optind@@GLIBC_2.2.5>
    2af3:	test   r12,r12
    2af6:	je     2fec <__ctype_b_loc@plt+0x79c>
    2afc:	cmp    ebx,eax
    2afe:	jg     32a3 <__ctype_b_loc@plt+0xa53>
    2b04:	lea    rsi,[rip+0x6602]        # 910d <_obstack_memory_used@@Base+0x114d>
    2b0b:	mov    rdi,r12
    2b0e:	call   2650 <strcmp@plt>
    2b13:	test   eax,eax
    2b15:	jne    30ef <__ctype_b_loc@plt+0x89f>
    2b1b:	mov    rbp,QWORD PTR [rip+0xa58e]        # d0b0 <stdin@@GLIBC_2.2.5>
    2b22:	mov    rdi,rbp
    2b25:	call   26a0 <fileno@plt>
    2b2a:	lea    rdx,[rsp+0x160]
    2b32:	mov    edi,0x1
    2b37:	mov    esi,eax
    2b39:	call   26f0 <__fxstat@plt>
    2b3e:	test   eax,eax
    2b40:	jne    2b59 <__ctype_b_loc@plt+0x309>
    2b42:	mov    eax,DWORD PTR [rsp+0x178]
    2b49:	and    eax,0xf000
    2b4e:	cmp    eax,0x8000
    2b53:	je     31c7 <__ctype_b_loc@plt+0x977>
    2b59:	mov    rdi,rbp
    2b5c:	call   4540 <__ctype_b_loc@plt+0x1cf0>
    2b61:	mov    r13,rax
    2b64:	test   rax,rax
    2b67:	je     334a <__ctype_b_loc@plt+0xafa>
    2b6d:	mov    esi,0x98
    2b72:	mov    edi,0x1
    2b77:	call   7730 <__ctype_b_loc@plt+0x4ee0>
    2b7c:	mov    BYTE PTR [rsp+0x27],0x0
    2b81:	mov    QWORD PTR [rsp+0x8],rax
    2b86:	mov    rax,QWORD PTR [rsp+0x8]
    2b8b:	xor    ebx,ebx
    2b8d:	mov    ecx,0x1
    2b92:	mov    DWORD PTR [rax],0x1
    2b98:	mov    DWORD PTR [rip+0xa56e],ecx        # d10c <stderr@@GLIBC_2.2.5+0x2c>
    2b9e:	xor    ebp,ebp
    2ba0:	mov    r14d,0x1
    2ba6:	lea    r15,[rsp+0x3c]
    2bab:	jmp    2c6c <__ctype_b_loc@plt+0x41c>
    2bb0:	cmp    BYTE PTR [r12+0x1],0x0
    2bb6:	jne    2c97 <__ctype_b_loc@plt+0x447>
    2bbc:	lea    rsi,[rip+0x654a]        # 910d <_obstack_memory_used@@Base+0x114d>
    2bc3:	mov    rdi,rax
    2bc6:	mov    QWORD PTR [rsp+0x10],rax
    2bcb:	call   2650 <strcmp@plt>
    2bd0:	mov    r8,QWORD PTR [rsp+0x10]
    2bd5:	test   eax,eax
    2bd7:	je     2cf9 <__ctype_b_loc@plt+0x4a9>
    2bdd:	cmp    BYTE PTR [r8],0x0
    2be1:	je     2d3c <__ctype_b_loc@plt+0x4ec>
    2be7:	test   rbx,rbx
    2bea:	jne    2f34 <__ctype_b_loc@plt+0x6e4>
    2bf0:	mov    rdx,QWORD PTR [rsp+0x8]
    2bf5:	mov    rdi,r8
    2bf8:	xor    esi,esi
    2bfa:	xor    eax,eax
    2bfc:	mov    QWORD PTR [rsp+0x18],rdx
    2c01:	mov    QWORD PTR [rsp+0x10],r8
    2c06:	call   2780 <open@plt>
    2c0b:	mov    r8,QWORD PTR [rsp+0x10]
    2c10:	mov    rdx,QWORD PTR [rsp+0x18]
    2c15:	cmp    eax,0xffffffff
    2c18:	mov    edi,eax
    2c1a:	je     2f3c <__ctype_b_loc@plt+0x6ec>
    2c20:	xor    ecx,ecx
    2c22:	mov    rsi,r8
    2c25:	mov    QWORD PTR [rsp+0x28],r8
    2c2a:	mov    DWORD PTR [rsp+0x18],eax
    2c2e:	call   3650 <__ctype_b_loc@plt+0xe00>
    2c33:	mov    edi,DWORD PTR [rsp+0x18]
    2c37:	mov    BYTE PTR [rsp+0x10],al
    2c3b:	call   25e0 <close@plt>
    2c40:	movzx  edx,BYTE PTR [rsp+0x10]
    2c45:	mov    r8,QWORD PTR [rsp+0x28]
    2c4a:	test   eax,eax
    2c4c:	jne    2f3c <__ctype_b_loc@plt+0x6ec>
    2c52:	and    r14d,edx
    2c55:	test   rbx,rbx
    2c58:	jne    2c65 <__ctype_b_loc@plt+0x415>
    2c5a:	mov    rax,QWORD PTR [rsp+0x8]
    2c5f:	mov    DWORD PTR [rax],0x1
    2c65:	add    rbp,0x98
    2c6c:	mov    rsi,r15
    2c6f:	mov    rdi,r13
    2c72:	call   4580 <__ctype_b_loc@plt+0x1d30>
    2c77:	mov    r8,rax
    2c7a:	test   rax,rax
    2c7d:	je     2dcc <__ctype_b_loc@plt+0x57c>
    2c83:	test   r12,r12
    2c86:	je     2d93 <__ctype_b_loc@plt+0x543>
    2c8c:	cmp    BYTE PTR [r12],0x2d
    2c91:	je     2bb0 <__ctype_b_loc@plt+0x360>
    2c97:	cmp    BYTE PTR [r8],0x0
    2c9b:	je     2d3c <__ctype_b_loc@plt+0x4ec>
    2ca1:	test   rbx,rbx
    2ca4:	mov    edx,0x0
    2ca9:	cmovne rdx,rbp
    2cad:	add    rdx,QWORD PTR [rsp+0x8]
    2cb2:	mov    rdi,r8
    2cb5:	mov    QWORD PTR [rsp+0x10],r8
    2cba:	lea    rsi,[rip+0x644c]        # 910d <_obstack_memory_used@@Base+0x114d>
    2cc1:	mov    QWORD PTR [rsp+0x18],rdx
    2cc6:	call   2650 <strcmp@plt>
    2ccb:	mov    r8,QWORD PTR [rsp+0x10]
    2cd0:	mov    rdx,QWORD PTR [rsp+0x18]
    2cd5:	test   eax,eax
    2cd7:	jne    2bf5 <__ctype_b_loc@plt+0x3a5>
    2cdd:	or     rcx,0xffffffffffffffff
    2ce1:	mov    rsi,r8
    2ce4:	xor    edi,edi
    2ce6:	mov    BYTE PTR [rip+0xa41b],0x1        # d108 <stderr@@GLIBC_2.2.5+0x28>
    2ced:	call   3650 <__ctype_b_loc@plt+0xe00>
    2cf2:	mov    edx,eax
    2cf4:	jmp    2c52 <__ctype_b_loc@plt+0x402>
    2cf9:	mov    rsi,r8
    2cfc:	mov    edi,0x4
    2d01:	call   6560 <__ctype_b_loc@plt+0x3d10>
    2d06:	xor    edi,edi
    2d08:	mov    edx,0x5
    2d0d:	lea    rsi,[rip+0x6b94]        # 98a8 <_obstack_memory_used@@Base+0x18e8>
    2d14:	mov    r14,rax
    2d17:	call   2510 <dcgettext@plt>
    2d1c:	xor    esi,esi
    2d1e:	xor    edi,edi
    2d20:	mov    rcx,r14
    2d23:	mov    rdx,rax
    2d26:	xor    eax,eax
    2d28:	call   2770 <error@plt>
    2d2d:	mov    r8,QWORD PTR [rsp+0x10]
    2d32:	cmp    BYTE PTR [r8],0x0
    2d36:	jne    2dc4 <__ctype_b_loc@plt+0x574>
    2d3c:	mov    rdi,r13
    2d3f:	call   4620 <__ctype_b_loc@plt+0x1dd0>
    2d44:	mov    edx,0x5
    2d49:	lea    rsi,[rip+0x63f8]        # 9148 <_obstack_memory_used@@Base+0x1188>
    2d50:	xor    edi,edi
    2d52:	mov    r14,rax
    2d55:	call   2510 <dcgettext@plt>
    2d5a:	mov    rdx,r12
    2d5d:	mov    esi,0x3
    2d62:	xor    edi,edi
    2d64:	mov    QWORD PTR [rsp+0x10],rax
    2d69:	call   68e0 <__ctype_b_loc@plt+0x4090>
    2d6e:	mov    r9,QWORD PTR [rsp+0x10]
    2d73:	mov    r8,r14
    2d76:	xor    esi,esi
    2d78:	mov    rcx,rax
    2d7b:	lea    rdx,[rip+0x63e4]        # 9166 <_obstack_memory_used@@Base+0x11a6>
    2d82:	xor    edi,edi
    2d84:	xor    eax,eax
    2d86:	call   2770 <error@plt>
    2d8b:	xor    r14d,r14d
    2d8e:	jmp    2c55 <__ctype_b_loc@plt+0x405>
    2d93:	cmp    BYTE PTR [rax],0x0
    2d96:	jne    2ca1 <__ctype_b_loc@plt+0x451>
    2d9c:	mov    edx,0x5
    2da1:	lea    rsi,[rip+0x63a0]        # 9148 <_obstack_memory_used@@Base+0x1188>
    2da8:	xor    edi,edi
    2daa:	call   2510 <dcgettext@plt>
    2daf:	lea    rdx,[rip+0x6b57]        # 990d <_obstack_memory_used@@Base+0x194d>
    2db6:	xor    esi,esi
    2db8:	xor    edi,edi
    2dba:	mov    rcx,rax
    2dbd:	xor    eax,eax
    2dbf:	call   2770 <error@plt>
    2dc4:	xor    r14d,r14d
    2dc7:	jmp    2c55 <__ctype_b_loc@plt+0x405>
    2dcc:	mov    eax,DWORD PTR [rsp+0x3c]
    2dd0:	cmp    eax,0x3
    2dd3:	je     334a <__ctype_b_loc@plt+0xafa>
    2dd9:	cmp    eax,0x4
    2ddc:	jne    2eca <__ctype_b_loc@plt+0x67a>
    2de2:	mov    rdx,r12
    2de5:	mov    esi,0x3
    2dea:	xor    edi,edi
    2dec:	call   68e0 <__ctype_b_loc@plt+0x4090>
    2df1:	mov    edx,0x5
    2df6:	lea    rsi,[rip+0x632d]        # 912a <_obstack_memory_used@@Base+0x116a>
    2dfd:	xor    edi,edi
    2dff:	mov    r14,rax
    2e02:	call   2510 <dcgettext@plt>
    2e07:	mov    r12,rax
    2e0a:	call   2480 <__errno_location@plt>
    2e0f:	mov    rcx,r14
    2e12:	mov    rdx,r12
    2e15:	xor    edi,edi
    2e17:	mov    esi,DWORD PTR [rax]
    2e19:	xor    eax,eax
    2e1b:	xor    r14d,r14d
    2e1e:	call   2770 <error@plt>
    2e23:	cmp    BYTE PTR [rsp+0x27],0x0
    2e28:	jne    2f73 <__ctype_b_loc@plt+0x723>
    2e2e:	mov    rdi,r13
    2e31:	call   4620 <__ctype_b_loc@plt+0x1dd0>
    2e36:	cmp    rax,0x1
    2e3a:	jbe    2e7a <__ctype_b_loc@plt+0x62a>
    2e3c:	mov    edx,0x5
    2e41:	lea    rsi,[rip+0x62fa]        # 9142 <_obstack_memory_used@@Base+0x1182>
    2e48:	xor    edi,edi
    2e4a:	call   2510 <dcgettext@plt>
    2e4f:	mov    r8,QWORD PTR [rip+0xa2c2]        # d118 <stderr@@GLIBC_2.2.5+0x38>
    2e56:	mov    rcx,QWORD PTR [rip+0xa2c3]        # d120 <stderr@@GLIBC_2.2.5+0x40>
    2e5d:	mov    rdx,QWORD PTR [rip+0xa2c4]        # d128 <stderr@@GLIBC_2.2.5+0x48>
    2e64:	mov    rsi,QWORD PTR [rip+0xa2c5]        # d130 <stderr@@GLIBC_2.2.5+0x50>
    2e6b:	mov    r9,rax
    2e6e:	mov    rdi,QWORD PTR [rip+0xa2c3]        # d138 <stderr@@GLIBC_2.2.5+0x58>
    2e75:	call   3440 <__ctype_b_loc@plt+0xbf0>
    2e7a:	mov    rdi,r13
    2e7d:	call   4640 <__ctype_b_loc@plt+0x1df0>
    2e82:	mov    rdi,QWORD PTR [rsp+0x8]
    2e87:	call   2430 <free@plt>
    2e8c:	cmp    BYTE PTR [rip+0xa275],0x0        # d108 <stderr@@GLIBC_2.2.5+0x28>
    2e93:	jne    2f82 <__ctype_b_loc@plt+0x732>
    2e99:	xor    r14d,0x1
    2e9d:	movzx  eax,r14b
    2ea1:	mov    rbx,QWORD PTR [rsp+0x1f8]
    2ea9:	sub    rbx,QWORD PTR fs:0x28
    2eb2:	jne    3345 <__ctype_b_loc@plt+0xaf5>
    2eb8:	add    rsp,0x208
    2ebf:	pop    rbx
    2ec0:	pop    rbp
    2ec1:	pop    r12
    2ec3:	pop    r13
    2ec5:	pop    r14
    2ec7:	pop    r15
    2ec9:	ret    
    2eca:	cmp    eax,0x2
    2ecd:	je     2eee <__ctype_b_loc@plt+0x69e>
    2ecf:	lea    rcx,[rip+0x647b]        # 9351 <_obstack_memory_used@@Base+0x1391>
    2ed6:	mov    edx,0x33f
    2edb:	lea    rsi,[rip+0x6257]        # 9139 <_obstack_memory_used@@Base+0x1179>
    2ee2:	lea    rdi,[rip+0x6997]        # 9880 <_obstack_memory_used@@Base+0x18c0>
    2ee9:	call   25b0 <__assert_fail@plt>
    2eee:	test   r12,r12
    2ef1:	sete   al
    2ef4:	and    al,r14b
    2ef7:	mov    ebx,eax
    2ef9:	je     2e23 <__ctype_b_loc@plt+0x5d3>
    2eff:	mov    rdi,r13
    2f02:	mov    r14d,ebx
    2f05:	call   4620 <__ctype_b_loc@plt+0x1dd0>
    2f0a:	test   rax,rax
    2f0d:	jne    2e23 <__ctype_b_loc@plt+0x5d3>
    2f13:	mov    rdx,QWORD PTR [rsp+0x8]
    2f18:	or     rcx,0xffffffffffffffff
    2f1c:	xor    esi,esi
    2f1e:	xor    edi,edi
    2f20:	mov    BYTE PTR [rip+0xa1e1],0x1        # d108 <stderr@@GLIBC_2.2.5+0x28>
    2f27:	call   3650 <__ctype_b_loc@plt+0xe00>
    2f2c:	mov    r14d,eax
    2f2f:	jmp    2e23 <__ctype_b_loc@plt+0x5d3>
    2f34:	mov    rdx,rbp
    2f37:	jmp    2cad <__ctype_b_loc@plt+0x45d>
    2f3c:	mov    rdx,r8
    2f3f:	mov    esi,0x3
    2f44:	xor    edi,edi
    2f46:	call   68e0 <__ctype_b_loc@plt+0x4090>
    2f4b:	mov    QWORD PTR [rsp+0x10],rax
    2f50:	call   2480 <__errno_location@plt>
    2f55:	mov    rcx,QWORD PTR [rsp+0x10]
    2f5a:	lea    rdx,[rip+0x69ac]        # 990d <_obstack_memory_used@@Base+0x194d>
    2f61:	xor    edi,edi
    2f63:	mov    esi,DWORD PTR [rax]
    2f65:	xor    eax,eax
    2f67:	call   2770 <error@plt>
    2f6c:	xor    edx,edx
    2f6e:	jmp    2c52 <__ctype_b_loc@plt+0x402>
    2f73:	lea    rdi,[rsp+0x40]
    2f78:	call   6de0 <__ctype_b_loc@plt+0x4590>
    2f7d:	jmp    2e2e <__ctype_b_loc@plt+0x5de>
    2f82:	xor    edi,edi
    2f84:	call   25e0 <close@plt>
    2f89:	test   eax,eax
    2f8b:	je     2e99 <__ctype_b_loc@plt+0x649>
    2f91:	call   2480 <__errno_location@plt>
    2f96:	lea    rdx,[rip+0x6170]        # 910d <_obstack_memory_used@@Base+0x114d>
    2f9d:	mov    edi,0x1
    2fa2:	mov    esi,DWORD PTR [rax]
    2fa4:	xor    eax,eax
    2fa6:	call   2770 <error@plt>
    2fab:	cmp    BYTE PTR [rip+0xa160],0x0        # d112 <stderr@@GLIBC_2.2.5+0x32>
    2fb2:	jne    2aec <__ctype_b_loc@plt+0x29c>
    2fb8:	cmp    BYTE PTR [rip+0xa152],0x0        # d111 <stderr@@GLIBC_2.2.5+0x31>
    2fbf:	jne    2aec <__ctype_b_loc@plt+0x29c>
    2fc5:	cmp    BYTE PTR [rip+0xa144],0x0        # d110 <stderr@@GLIBC_2.2.5+0x30>
    2fcc:	jne    2aec <__ctype_b_loc@plt+0x29c>
    2fd2:	mov    BYTE PTR [rip+0xa138],0x1        # d111 <stderr@@GLIBC_2.2.5+0x31>
    2fd9:	mov    BYTE PTR [rip+0xa133],0x1        # d113 <stderr@@GLIBC_2.2.5+0x33>
    2fe0:	mov    BYTE PTR [rip+0xa12d],0x1        # d114 <stderr@@GLIBC_2.2.5+0x34>
    2fe7:	jmp    2aec <__ctype_b_loc@plt+0x29c>
    2fec:	cmp    ebx,eax
    2fee:	jle    31b1 <__ctype_b_loc@plt+0x961>
    2ff4:	movsxd rdx,eax
    2ff7:	sub    ebx,eax
    2ff9:	lea    rcx,[rbp+rdx*8+0x0]
    2ffe:	movsxd rbx,ebx
    3001:	mov    QWORD PTR [rsp+0x10],rcx
    3006:	mov    rdi,QWORD PTR [rsp+0x10]
    300b:	call   4510 <__ctype_b_loc@plt+0x1cc0>
    3010:	mov    r13,rax
    3013:	test   rax,rax
    3016:	je     334a <__ctype_b_loc@plt+0xafa>
    301c:	mov    esi,0x98
    3021:	mov    rdi,rbx
    3024:	call   7730 <__ctype_b_loc@plt+0x4ee0>
    3029:	mov    BYTE PTR [rsp+0x27],0x0
    302e:	mov    QWORD PTR [rsp+0x8],rax
    3033:	cmp    rbx,0x1
    3037:	je     316d <__ctype_b_loc@plt+0x91d>
    303d:	mov    rax,QWORD PTR [rsp+0x8]
    3042:	xor    ebp,ebp
    3044:	lea    r15,[rax+0x8]
    3048:	jmp    306d <__ctype_b_loc@plt+0x81d>
    304a:	mov    rdx,r15
    304d:	xor    esi,esi
    304f:	mov    edi,0x1
    3054:	call   26f0 <__fxstat@plt>
    3059:	add    rbp,0x1
    305d:	mov    DWORD PTR [r15-0x8],eax
    3061:	add    r15,0x98
    3068:	cmp    rbp,rbx
    306b:	jae    30a0 <__ctype_b_loc@plt+0x850>
    306d:	mov    rax,QWORD PTR [rsp+0x10]
    3072:	mov    r14,QWORD PTR [rax+rbp*8]
    3076:	test   r14,r14
    3079:	je     304a <__ctype_b_loc@plt+0x7fa>
    307b:	lea    rsi,[rip+0x608b]        # 910d <_obstack_memory_used@@Base+0x114d>
    3082:	mov    rdi,r14
    3085:	call   2650 <strcmp@plt>
    308a:	test   eax,eax
    308c:	je     304a <__ctype_b_loc@plt+0x7fa>
    308e:	mov    rdx,r15
    3091:	mov    rsi,r14
    3094:	mov    edi,0x1
    3099:	call   26b0 <__xstat@plt>
    309e:	jmp    3059 <__ctype_b_loc@plt+0x809>
    30a0:	mov    rdx,QWORD PTR [rsp+0x8]
    30a5:	mov    ecx,0x1
    30aa:	cmp    DWORD PTR [rdx],0x0
    30ad:	jg     2b98 <__ctype_b_loc@plt+0x348>
    30b3:	mov    edi,0x1
    30b8:	xor    eax,eax
    30ba:	xor    ecx,ecx
    30bc:	jmp    30d3 <__ctype_b_loc@plt+0x883>
    30be:	mov    edi,0x7
    30c3:	add    rcx,0x1
    30c7:	add    rdx,0x98
    30ce:	cmp    rcx,rbx
    30d1:	jae    3149 <__ctype_b_loc@plt+0x8f9>
    30d3:	cmp    DWORD PTR [rdx],0x0
    30d6:	jne    30c3 <__ctype_b_loc@plt+0x873>
    30d8:	mov    esi,DWORD PTR [rdx+0x20]
    30db:	and    esi,0xf000
    30e1:	cmp    esi,0x8000
    30e7:	jne    30be <__ctype_b_loc@plt+0x86e>
    30e9:	add    rax,QWORD PTR [rdx+0x38]
    30ed:	jmp    30c3 <__ctype_b_loc@plt+0x873>
    30ef:	lea    rsi,[rip+0x6041]        # 9137 <_obstack_memory_used@@Base+0x1177>
    30f6:	mov    rdi,r12
    30f9:	call   27a0 <fopen@plt>
    30fe:	mov    rbp,rax
    3101:	test   rax,rax
    3104:	jne    2b22 <__ctype_b_loc@plt+0x2d2>
    310a:	mov    rsi,r12
    310d:	mov    edi,0x4
    3112:	call   6560 <__ctype_b_loc@plt+0x3d10>
    3117:	mov    edx,0x5
    311c:	lea    rsi,[rip+0x5fec]        # 910f <_obstack_memory_used@@Base+0x114f>
    3123:	xor    edi,edi
    3125:	mov    r13,rax
    3128:	call   2510 <dcgettext@plt>
    312d:	mov    r12,rax
    3130:	call   2480 <__errno_location@plt>
    3135:	mov    rcx,r13
    3138:	mov    rdx,r12
    313b:	mov    edi,0x1
    3140:	mov    esi,DWORD PTR [rax]
    3142:	xor    eax,eax
    3144:	call   2770 <error@plt>
    3149:	mov    ecx,0x1
    314e:	mov    esi,0xa
    3153:	jmp    315d <__ctype_b_loc@plt+0x90d>
    3155:	xor    edx,edx
    3157:	add    ecx,0x1
    315a:	div    rsi
    315d:	cmp    rax,0x9
    3161:	ja     3155 <__ctype_b_loc@plt+0x905>
    3163:	cmp    ecx,edi
    3165:	cmovl  ecx,edi
    3168:	jmp    2b98 <__ctype_b_loc@plt+0x348>
    316d:	movzx  eax,BYTE PTR [rip+0x9f9f]        # d113 <stderr@@GLIBC_2.2.5+0x33>
    3174:	movzx  ecx,BYTE PTR [rip+0x9f99]        # d114 <stderr@@GLIBC_2.2.5+0x34>
    317b:	add    ecx,eax
    317d:	movzx  eax,BYTE PTR [rip+0x9f8e]        # d112 <stderr@@GLIBC_2.2.5+0x32>
    3184:	add    ecx,eax
    3186:	movzx  eax,BYTE PTR [rip+0x9f84]        # d111 <stderr@@GLIBC_2.2.5+0x31>
    318d:	add    ecx,eax
    318f:	movzx  eax,BYTE PTR [rip+0x9f7a]        # d110 <stderr@@GLIBC_2.2.5+0x30>
    3196:	add    ecx,eax
    3198:	cmp    ecx,0x1
    319b:	jne    303d <__ctype_b_loc@plt+0x7ed>
    31a1:	mov    rax,QWORD PTR [rsp+0x8]
    31a6:	mov    DWORD PTR [rax],0x1
    31ac:	jmp    2b98 <__ctype_b_loc@plt+0x348>
    31b1:	lea    rax,[rip+0x9f38]        # d0f0 <stderr@@GLIBC_2.2.5+0x10>
    31b8:	mov    ebx,0x1
    31bd:	mov    QWORD PTR [rsp+0x10],rax
    31c2:	jmp    3006 <__ctype_b_loc@plt+0x7b6>
    31c7:	pxor   xmm2,xmm2
    31cb:	cvtsi2sd xmm2,QWORD PTR [rsp+0x190]
    31d5:	movsd  QWORD PTR [rsp+0x8],xmm2
    31db:	call   4970 <__ctype_b_loc@plt+0x2120>
    31e0:	movsd  xmm1,QWORD PTR [rip+0x6708]        # 98f0 <_obstack_memory_used@@Base+0x1930>
    31e8:	mulsd  xmm1,xmm0
    31ec:	movsd  xmm0,QWORD PTR [rip+0x66f4]        # 98e8 <_obstack_memory_used@@Base+0x1928>
    31f4:	comisd xmm1,xmm0
    31f8:	jbe    328a <__ctype_b_loc@plt+0xa3a>
    31fe:	comisd xmm0,QWORD PTR [rsp+0x8]
    3204:	jb     2b59 <__ctype_b_loc@plt+0x309>
    320a:	lea    r13,[rsp+0x40]
    320f:	mov    rdi,r13
    3212:	call   6d60 <__ctype_b_loc@plt+0x4510>
    3217:	mov    rsi,r13
    321a:	mov    rdi,rbp
    321d:	call   6e10 <__ctype_b_loc@plt+0x45c0>
    3222:	mov    BYTE PTR [rsp+0x27],al
    3226:	test   al,al
    3228:	je     330e <__ctype_b_loc@plt+0xabe>
    322e:	mov    rdi,rbp
    3231:	call   7aa0 <__ctype_b_loc@plt+0x5250>
    3236:	test   eax,eax
    3238:	jne    330e <__ctype_b_loc@plt+0xabe>
    323e:	mov    rax,QWORD PTR [rsp+0x48]
    3243:	mov    rbx,QWORD PTR [rsp+0x40]
    3248:	mov    rdi,rax
    324b:	mov    QWORD PTR [rsp+0x10],rax
    3250:	call   4510 <__ctype_b_loc@plt+0x1cc0>
    3255:	mov    r13,rax
    3258:	test   rax,rax
    325b:	je     334a <__ctype_b_loc@plt+0xafa>
    3261:	test   rbx,rbx
    3264:	mov    edi,0x1
    3269:	mov    esi,0x98
    326e:	cmovne rdi,rbx
    3272:	call   7730 <__ctype_b_loc@plt+0x4ee0>
    3277:	mov    QWORD PTR [rsp+0x8],rax
    327c:	test   rbx,rbx
    327f:	jne    3033 <__ctype_b_loc@plt+0x7e3>
    3285:	jmp    2b86 <__ctype_b_loc@plt+0x336>
    328a:	call   4970 <__ctype_b_loc@plt+0x2120>
    328f:	mulsd  xmm0,QWORD PTR [rip+0x6659]        # 98f0 <_obstack_memory_used@@Base+0x1930>
    3297:	jmp    31fe <__ctype_b_loc@plt+0x9ae>
    329c:	xor    edi,edi
    329e:	call   4140 <__ctype_b_loc@plt+0x18f0>
    32a3:	mov    rsi,QWORD PTR [rbp+rax*8+0x0]
    32a8:	mov    edi,0x4
    32ad:	call   6560 <__ctype_b_loc@plt+0x3d10>
    32b2:	xor    edi,edi
    32b4:	mov    edx,0x5
    32b9:	lea    rsi,[rip+0x5e3c]        # 90fc <_obstack_memory_used@@Base+0x113c>
    32c0:	mov    r12,rax
    32c3:	call   2510 <dcgettext@plt>
    32c8:	mov    rcx,r12
    32cb:	xor    esi,esi
    32cd:	xor    edi,edi
    32cf:	mov    rdx,rax
    32d2:	xor    eax,eax
    32d4:	call   2770 <error@plt>
    32d9:	xor    edi,edi
    32db:	mov    edx,0x5
    32e0:	lea    rsi,[rip+0x6541]        # 9828 <_obstack_memory_used@@Base+0x1868>
    32e7:	call   2510 <dcgettext@plt>
    32ec:	mov    rdi,QWORD PTR [rip+0x9ded]        # d0e0 <stderr@@GLIBC_2.2.5>
    32f3:	mov    esi,0x1
    32f8:	lea    rdx,[rip+0x6dd1]        # a0d0 <_obstack_memory_used@@Base+0x2110>
    32ff:	mov    rcx,rax
    3302:	xor    eax,eax
    3304:	call   2810 <__fprintf_chk@plt>
    3309:	jmp    2a87 <__ctype_b_loc@plt+0x237>
    330e:	mov    rsi,r12
    3311:	mov    edi,0x4
    3316:	call   6560 <__ctype_b_loc@plt+0x3d10>
    331b:	mov    edx,0x5
    3320:	lea    rsi,[rip+0x6539]        # 9860 <_obstack_memory_used@@Base+0x18a0>
    3327:	xor    edi,edi
    3329:	mov    r12,rax
    332c:	call   2510 <dcgettext@plt>
    3331:	mov    rcx,r12
    3334:	xor    esi,esi
    3336:	mov    edi,0x1
    333b:	mov    rdx,rax
    333e:	xor    eax,eax
    3340:	call   2770 <error@plt>
    3345:	call   2540 <__stack_chk_fail@plt>
    334a:	call   7a60 <__ctype_b_loc@plt+0x5210>
    334f:	nop
    3350:	endbr64 
    3354:	xor    ebp,ebp
    3356:	mov    r9,rdx
    3359:	pop    rsi
    335a:	mov    rdx,rsp
    335d:	and    rsp,0xfffffffffffffff0
    3361:	push   rax
    3362:	push   rsp
    3363:	lea    r8,[rip+0x4ee6]        # 8250 <_obstack_memory_used@@Base+0x290>
    336a:	lea    rcx,[rip+0x4e6f]        # 81e0 <_obstack_memory_used@@Base+0x220>
    3371:	lea    rdi,[rip+0xfffffffffffff538]        # 28b0 <__ctype_b_loc@plt+0x60>
    3378:	call   QWORD PTR [rip+0x9c52]        # cfd0 <_obstack_memory_used@@Base+0x5010>
    337e:	hlt    
    337f:	nop
    3380:	lea    rdi,[rip+0x9d01]        # d088 <obstack_alloc_failed_handler@@Base+0x8>
    3387:	lea    rax,[rip+0x9cfa]        # d088 <obstack_alloc_failed_handler@@Base+0x8>
    338e:	cmp    rax,rdi
    3391:	je     33a8 <__ctype_b_loc@plt+0xb58>
    3393:	mov    rax,QWORD PTR [rip+0x9c2e]        # cfc8 <_obstack_memory_used@@Base+0x5008>
    339a:	test   rax,rax
    339d:	je     33a8 <__ctype_b_loc@plt+0xb58>
    339f:	jmp    rax
    33a1:	nop    DWORD PTR [rax+0x0]
    33a8:	ret    
    33a9:	nop    DWORD PTR [rax+0x0]
    33b0:	lea    rdi,[rip+0x9cd1]        # d088 <obstack_alloc_failed_handler@@Base+0x8>
    33b7:	lea    rsi,[rip+0x9cca]        # d088 <obstack_alloc_failed_handler@@Base+0x8>
    33be:	sub    rsi,rdi
    33c1:	mov    rax,rsi
    33c4:	shr    rsi,0x3f
    33c8:	sar    rax,0x3
    33cc:	add    rsi,rax
    33cf:	sar    rsi,1
    33d2:	je     33e8 <__ctype_b_loc@plt+0xb98>
    33d4:	mov    rax,QWORD PTR [rip+0x9c0d]        # cfe8 <_obstack_memory_used@@Base+0x5028>
    33db:	test   rax,rax
    33de:	je     33e8 <__ctype_b_loc@plt+0xb98>
    33e0:	jmp    rax
    33e2:	nop    WORD PTR [rax+rax*1+0x0]
    33e8:	ret    
    33e9:	nop    DWORD PTR [rax+0x0]
    33f0:	endbr64 
    33f4:	cmp    BYTE PTR [rip+0x9ced],0x0        # d0e8 <stderr@@GLIBC_2.2.5+0x8>
    33fb:	jne    3428 <__ctype_b_loc@plt+0xbd8>
    33fd:	push   rbp
    33fe:	cmp    QWORD PTR [rip+0x9bea],0x0        # cff0 <_obstack_memory_used@@Base+0x5030>
    3406:	mov    rbp,rsp
    3409:	je     3417 <__ctype_b_loc@plt+0xbc7>
    340b:	mov    rdi,QWORD PTR [rip+0x9bf6]        # d008 <_obstack_memory_used@@Base+0x5048>
    3412:	call   2450 <__cxa_finalize@plt>
    3417:	call   3380 <__ctype_b_loc@plt+0xb30>
    341c:	mov    BYTE PTR [rip+0x9cc5],0x1        # d0e8 <stderr@@GLIBC_2.2.5+0x8>
    3423:	pop    rbp
    3424:	ret    
    3425:	nop    DWORD PTR [rax]
    3428:	ret    
    3429:	nop    DWORD PTR [rax+0x0]
    3430:	endbr64 
    3434:	jmp    33b0 <__ctype_b_loc@plt+0xb60>
    3439:	nop    DWORD PTR [rax+0x0]
    3440:	push   r15
    3442:	mov    r15,rdx
    3445:	push   r14
    3447:	mov    r14,rcx
    344a:	push   r13
    344c:	mov    r13,r8
    344f:	push   r12
    3451:	mov    r12,r9
    3454:	push   rbp
    3455:	lea    rbp,[rip+0x5ef1]        # 934d <_obstack_memory_used@@Base+0x138d>
    345c:	push   rbx
    345d:	mov    rbx,rsi
    3460:	sub    rsp,0x28
    3464:	mov    rax,QWORD PTR fs:0x28
    346d:	mov    QWORD PTR [rsp+0x18],rax
    3472:	xor    eax,eax
    3474:	cmp    BYTE PTR [rip+0x9c99],0x0        # d114 <stderr@@GLIBC_2.2.5+0x34>
    347b:	jne    3600 <__ctype_b_loc@plt+0xdb0>
    3481:	cmp    BYTE PTR [rip+0x9c8b],0x0        # d113 <stderr@@GLIBC_2.2.5+0x33>
    3488:	jne    35d0 <__ctype_b_loc@plt+0xd80>
    348e:	cmp    BYTE PTR [rip+0x9c7d],0x0        # d112 <stderr@@GLIBC_2.2.5+0x32>
    3495:	jne    35a0 <__ctype_b_loc@plt+0xd50>
    349b:	cmp    BYTE PTR [rip+0x9c6f],0x0        # d111 <stderr@@GLIBC_2.2.5+0x31>
    34a2:	jne    3570 <__ctype_b_loc@plt+0xd20>
    34a8:	cmp    BYTE PTR [rip+0x9c61],0x0        # d110 <stderr@@GLIBC_2.2.5+0x30>
    34af:	jne    3540 <__ctype_b_loc@plt+0xcf0>
    34b5:	test   r12,r12
    34b8:	je     34f4 <__ctype_b_loc@plt+0xca4>
    34ba:	mov    esi,0xa
    34bf:	mov    rdi,r12
    34c2:	call   2570 <strchr@plt>
    34c7:	test   rax,rax
    34ca:	je     34de <__ctype_b_loc@plt+0xc8e>
    34cc:	mov    rdx,r12
    34cf:	mov    esi,0x3
    34d4:	xor    edi,edi
    34d6:	call   68e0 <__ctype_b_loc@plt+0x4090>
    34db:	mov    r12,rax
    34de:	mov    rdx,r12
    34e1:	lea    rsi,[rip+0x6424]        # 990c <_obstack_memory_used@@Base+0x194c>
    34e8:	mov    edi,0x1
    34ed:	xor    eax,eax
    34ef:	call   2730 <__printf_chk@plt>
    34f4:	mov    rdi,QWORD PTR [rip+0x9bad]        # d0a8 <stdout@@GLIBC_2.2.5>
    34fb:	mov    rax,QWORD PTR [rdi+0x28]
    34ff:	cmp    rax,QWORD PTR [rdi+0x30]
    3503:	jae    3630 <__ctype_b_loc@plt+0xde0>
    3509:	lea    rdx,[rax+0x1]
    350d:	mov    QWORD PTR [rdi+0x28],rdx
    3511:	mov    BYTE PTR [rax],0xa
    3514:	mov    rax,QWORD PTR [rsp+0x18]
    3519:	sub    rax,QWORD PTR fs:0x28
    3522:	jne    363f <__ctype_b_loc@plt+0xdef>
    3528:	add    rsp,0x28
    352c:	pop    rbx
    352d:	pop    rbp
    352e:	pop    r12
    3530:	pop    r13
    3532:	pop    r14
    3534:	pop    r15
    3536:	ret    
    3537:	nop    WORD PTR [rax+rax*1+0x0]
    3540:	mov    rsi,rsp
    3543:	mov    rdi,r13
    3546:	call   4770 <__ctype_b_loc@plt+0x1f20>
    354b:	mov    edx,DWORD PTR [rip+0x9bbb]        # d10c <stderr@@GLIBC_2.2.5+0x2c>
    3551:	mov    rsi,rbp
    3554:	mov    edi,0x1
    3559:	mov    rcx,rax
    355c:	xor    eax,eax
    355e:	call   2730 <__printf_chk@plt>
    3563:	jmp    34b5 <__ctype_b_loc@plt+0xc65>
    3568:	nop    DWORD PTR [rax+rax*1+0x0]
    3570:	mov    rsi,rsp
    3573:	mov    rdi,r14
    3576:	call   4770 <__ctype_b_loc@plt+0x1f20>
    357b:	mov    edx,DWORD PTR [rip+0x9b8b]        # d10c <stderr@@GLIBC_2.2.5+0x2c>
    3581:	mov    rsi,rbp
    3584:	mov    edi,0x1
    3589:	mov    rcx,rax
    358c:	xor    eax,eax
    358e:	lea    rbp,[rip+0x5db7]        # 934c <_obstack_memory_used@@Base+0x138c>
    3595:	call   2730 <__printf_chk@plt>
    359a:	jmp    34a8 <__ctype_b_loc@plt+0xc58>
    359f:	nop
    35a0:	mov    rsi,rsp
    35a3:	mov    rdi,r15
    35a6:	call   4770 <__ctype_b_loc@plt+0x1f20>
    35ab:	mov    edx,DWORD PTR [rip+0x9b5b]        # d10c <stderr@@GLIBC_2.2.5+0x2c>
    35b1:	mov    rsi,rbp
    35b4:	mov    edi,0x1
    35b9:	mov    rcx,rax
    35bc:	xor    eax,eax
    35be:	lea    rbp,[rip+0x5d87]        # 934c <_obstack_memory_used@@Base+0x138c>
    35c5:	call   2730 <__printf_chk@plt>
    35ca:	jmp    349b <__ctype_b_loc@plt+0xc4b>
    35cf:	nop
    35d0:	mov    rsi,rsp
    35d3:	mov    rdi,rbx
    35d6:	call   4770 <__ctype_b_loc@plt+0x1f20>
    35db:	mov    edx,DWORD PTR [rip+0x9b2b]        # d10c <stderr@@GLIBC_2.2.5+0x2c>
    35e1:	mov    rsi,rbp
    35e4:	mov    edi,0x1
    35e9:	mov    rcx,rax
    35ec:	xor    eax,eax
    35ee:	lea    rbp,[rip+0x5d57]        # 934c <_obstack_memory_used@@Base+0x138c>
    35f5:	call   2730 <__printf_chk@plt>
    35fa:	jmp    348e <__ctype_b_loc@plt+0xc3e>
    35ff:	nop
    3600:	mov    rsi,rsp
    3603:	call   4770 <__ctype_b_loc@plt+0x1f20>
    3608:	mov    edx,DWORD PTR [rip+0x9afe]        # d10c <stderr@@GLIBC_2.2.5+0x2c>
    360e:	mov    rsi,rbp
    3611:	mov    edi,0x1
    3616:	mov    rcx,rax
    3619:	xor    eax,eax
    361b:	sub    rbp,0x1
    361f:	call   2730 <__printf_chk@plt>
    3624:	jmp    3481 <__ctype_b_loc@plt+0xc31>
    3629:	nop    DWORD PTR [rax+0x0]
    3630:	mov    esi,0xa
    3635:	call   2580 <__overflow@plt>
    363a:	jmp    3514 <__ctype_b_loc@plt+0xcc4>
    363f:	call   2540 <__stack_chk_fail@plt>
    3644:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    364f:	nop
    3650:	push   r15
    3652:	push   r14
    3654:	push   r13
    3656:	push   r12
    3658:	push   rbp
    3659:	push   rbx
    365a:	lea    r11,[rsp-0x4000]
    3662:	sub    rsp,0x1000
    3669:	or     QWORD PTR [rsp],0x0
    366e:	cmp    rsp,r11
    3671:	jne    3662 <__ctype_b_loc@plt+0xe12>
    3673:	sub    rsp,0x78
    3677:	mov    DWORD PTR [rsp+0x1c],edi
    367b:	mov    rbx,rdx
    367e:	mov    rbp,rcx
    3681:	mov    QWORD PTR [rsp+0x38],rsi
    3686:	mov    rax,QWORD PTR fs:0x28
    368f:	mov    QWORD PTR [rsp+0x4068],rax
    3697:	xor    eax,eax
    3699:	mov    QWORD PTR [rsp+0x48],rsi
    369e:	test   rsi,rsi
    36a1:	je     3d34 <__ctype_b_loc@plt+0x14e4>
    36a7:	call   2520 <__ctype_get_mb_cur_max@plt>
    36ac:	movzx  r12d,BYTE PTR [rip+0x9a5d]        # d111 <stderr@@GLIBC_2.2.5+0x31>
    36b4:	cmp    rax,0x1
    36b8:	jbe    3850 <__ctype_b_loc@plt+0x1000>
    36be:	movzx  eax,BYTE PTR [rip+0x9a4d]        # d112 <stderr@@GLIBC_2.2.5+0x32>
    36c5:	mov    BYTE PTR [rsp+0x43],al
    36c9:	cmp    BYTE PTR [rip+0x9a43],0x0        # d113 <stderr@@GLIBC_2.2.5+0x33>
    36d0:	jne    3748 <__ctype_b_loc@plt+0xef8>
    36d2:	movzx  eax,BYTE PTR [rip+0x9a37]        # d110 <stderr@@GLIBC_2.2.5+0x30>
    36d9:	mov    BYTE PTR [rsp+0x8],al
    36dd:	test   al,al
    36df:	jne    3748 <__ctype_b_loc@plt+0xef8>
    36e1:	cmp    r12b,0x1
    36e5:	jne    3f75 <__ctype_b_loc@plt+0x1725>
    36eb:	cmp    BYTE PTR [rsp+0x43],0x0
    36f0:	jne    3f75 <__ctype_b_loc@plt+0x1725>
    36f6:	cmp    BYTE PTR [rip+0x9a17],0x0        # d114 <stderr@@GLIBC_2.2.5+0x34>
    36fd:	jne    4122 <__ctype_b_loc@plt+0x18d2>
    3703:	mov    eax,DWORD PTR [rbx]
    3705:	test   eax,eax
    3707:	jg     3e9b <__ctype_b_loc@plt+0x164b>
    370d:	test   eax,eax
    370f:	je     3ac1 <__ctype_b_loc@plt+0x1271>
    3715:	mov    QWORD PTR [rsp+0x20],0x0
    371e:	mov    ebp,DWORD PTR [rsp+0x1c]
    3722:	mov    ecx,0x2
    3727:	xor    edx,edx
    3729:	xor    esi,esi
    372b:	lea    r15,[rsp+0x60]
    3730:	mov    edi,ebp
    3732:	call   4730 <__ctype_b_loc@plt+0x1ee0>
    3737:	mov    rbx,QWORD PTR [rsp+0x20]
    373c:	jmp    3a8d <__ctype_b_loc@plt+0x123d>
    3741:	nop    DWORD PTR [rax+0x0]
    3748:	mov    edi,DWORD PTR [rsp+0x1c]
    374c:	mov    ecx,0x2
    3751:	xor    edx,edx
    3753:	xor    esi,esi
    3755:	call   4730 <__ctype_b_loc@plt+0x1ee0>
    375a:	call   2520 <__ctype_get_mb_cur_max@plt>
    375f:	cmp    rax,0x1
    3763:	jbe    3927 <__ctype_b_loc@plt+0x10d7>
    3769:	lea    r15,[rsp+0x60]
    376e:	xor    r13d,r13d
    3771:	xor    r14d,r14d
    3774:	xor    r12d,r12d
    3777:	mov    QWORD PTR [rsp+0x58],0x0
    3780:	xor    ebp,ebp
    3782:	xor    ebx,ebx
    3784:	mov    QWORD PTR [rsp+0x28],0x0
    378d:	mov    QWORD PTR [rsp+0x20],0x0
    3796:	mov    QWORD PTR [rsp+0x10],0x0
    379f:	mov    QWORD PTR [rsp],0x0
    37a7:	mov    QWORD PTR [rsp+0x30],r15
    37ac:	nop    DWORD PTR [rax+0x0]
    37b0:	mov    rax,QWORD PTR [rsp+0x30]
    37b5:	mov    edx,0x4000
    37ba:	mov    edi,DWORD PTR [rsp+0x1c]
    37be:	sub    rdx,r13
    37c1:	lea    rsi,[rax+r13*1]
    37c5:	call   7010 <__ctype_b_loc@plt+0x47c0>
    37ca:	test   rax,rax
    37cd:	je     3d51 <__ctype_b_loc@plt+0x1501>
    37d3:	cmp    rax,0xffffffffffffffff
    37d7:	je     3dfb <__ctype_b_loc@plt+0x15ab>
    37dd:	add    r13,rax
    37e0:	add    QWORD PTR [rsp+0x20],rax
    37e5:	mov    r15,QWORD PTR [rsp+0x30]
    37ea:	mov    eax,r14d
    37ed:	mov    r14,r13
    37f0:	mov    r13d,eax
    37f3:	nop    DWORD PTR [rax+rax*1+0x0]
    37f8:	test   r13b,r13b
    37fb:	jne    3b78 <__ctype_b_loc@plt+0x1328>
    3801:	movzx  ecx,BYTE PTR [r15]
    3805:	lea    rsi,[rip+0x6114]        # 9920 <_obstack_memory_used@@Base+0x1960>
    380c:	mov    eax,ecx
    380e:	shr    al,0x5
    3811:	and    eax,0x7
    3814:	mov    eax,DWORD PTR [rsi+rax*4]
    3817:	shr    eax,cl
    3819:	mov    edi,eax
    381b:	and    edi,0x1
    381e:	je     3b78 <__ctype_b_loc@plt+0x1328>
    3824:	movsx  eax,cl
    3827:	mov    DWORD PTR [rsp+0x54],eax
    382b:	lea    eax,[rcx-0x9]
    382e:	cmp    al,0x17
    3830:	ja     3870 <__ctype_b_loc@plt+0x1020>
    3832:	lea    rsi,[rip+0x597b]        # 91b4 <_obstack_memory_used@@Base+0x11f4>
    3839:	movzx  eax,al
    383c:	movsxd rax,DWORD PTR [rsi+rax*4]
    3840:	add    rax,rsi
    3843:	notrack jmp rax
    3846:	cs nop WORD PTR [rax+rax*1+0x0]
    3850:	movzx  eax,BYTE PTR [rip+0x98bb]        # d112 <stderr@@GLIBC_2.2.5+0x32>
    3857:	test   r12b,r12b
    385a:	mov    BYTE PTR [rsp+0x43],0x0
    385f:	cmove  r12d,eax
    3863:	jmp    36c9 <__ctype_b_loc@plt+0xe79>
    3868:	nop    DWORD PTR [rax+rax*1+0x0]
    3870:	mov    BYTE PTR [rsp+0x8],cl
    3874:	mov    BYTE PTR [rsp+0x44],dil
    3879:	call   2850 <__ctype_b_loc@plt>
    387e:	movzx  ecx,BYTE PTR [rsp+0x8]
    3883:	mov    edx,0x1
    3888:	mov    rax,QWORD PTR [rax]
    388b:	movzx  eax,WORD PTR [rax+rcx*2]
    388f:	test   ah,0x40
    3892:	je     38b0 <__ctype_b_loc@plt+0x1060>
    3894:	add    r12,0x1
    3898:	test   ah,0x20
    389b:	jne    38f1 <__ctype_b_loc@plt+0x10a1>
    389d:	movzx  edi,BYTE PTR [rsp+0x44]
    38a2:	movzx  ebp,dil
    38a6:	cs nop WORD PTR [rax+rax*1+0x0]
    38b0:	add    r15,rdx
    38b3:	sub    r14,rdx
    38b6:	add    rbx,0x1
    38ba:	test   r14,r14
    38bd:	jne    37f8 <__ctype_b_loc@plt+0xfa8>
    38c3:	mov    eax,r13d
    38c6:	mov    r13,r14
    38c9:	mov    r14d,eax
    38cc:	jmp    37b0 <__ctype_b_loc@plt+0xf60>
    38d1:	nop    DWORD PTR [rax+0x0]
    38d8:	mov    edx,0x1
    38dd:	mov    rax,QWORD PTR [rsp+0x28]
    38e2:	cmp    rax,r12
    38e5:	cmovae r12,rax
    38e9:	mov    QWORD PTR [rsp+0x28],r12
    38ee:	xor    r12d,r12d
    38f1:	add    QWORD PTR [rsp+0x10],rbp
    38f6:	xor    ebp,ebp
    38f8:	jmp    38b0 <__ctype_b_loc@plt+0x1060>
    38fa:	mov    edx,0x1
    38ff:	add    QWORD PTR [rsp],0x1
    3904:	jmp    38dd <__ctype_b_loc@plt+0x108d>
    3906:	mov    edx,0x1
    390b:	and    r12,0xfffffffffffffff8
    390f:	add    r12,0x8
    3913:	jmp    38f1 <__ctype_b_loc@plt+0x10a1>
    3915:	mov    edx,0x1
    391a:	add    r12,0x1
    391e:	jmp    38f1 <__ctype_b_loc@plt+0x10a1>
    3920:	mov    edx,0x1
    3925:	jmp    38f1 <__ctype_b_loc@plt+0x10a1>
    3927:	mov    QWORD PTR [rsp+0x20],0x0
    3930:	xor    ebx,ebx
    3932:	xor    ebp,ebp
    3934:	xor    r12d,r12d
    3937:	mov    QWORD PTR [rsp],0x0
    393f:	movzx  r13d,bl
    3943:	lea    r15,[rsp+0x60]
    3948:	mov    rbx,rbp
    394b:	nop    DWORD PTR [rax+rax*1+0x0]
    3950:	mov    edi,DWORD PTR [rsp+0x1c]
    3954:	mov    edx,0x4000
    3959:	mov    rsi,r15
    395c:	call   7010 <__ctype_b_loc@plt+0x47c0>
    3961:	lea    r9,[rip+0x58ac]        # 9214 <_obstack_memory_used@@Base+0x1254>
    3968:	test   rax,rax
    396b:	je     3e36 <__ctype_b_loc@plt+0x15e6>
    3971:	cmp    rax,0xffffffffffffffff
    3975:	je     3e59 <__ctype_b_loc@plt+0x1609>
    397b:	add    QWORD PTR [rsp+0x20],rax
    3980:	lea    rdx,[r15+rax*1]
    3984:	mov    r14,r15
    3987:	mov    QWORD PTR [rsp+0x10],r15
    398c:	mov    r15,r12
    398f:	mov    r12,rdx
    3992:	nop    WORD PTR [rax+rax*1+0x0]
    3998:	movzx  edi,BYTE PTR [r14]
    399c:	add    r14,0x1
    39a0:	lea    eax,[rdi-0x9]
    39a3:	cmp    al,0x17
    39a5:	ja     39b8 <__ctype_b_loc@plt+0x1168>
    39a7:	movzx  eax,al
    39aa:	movsxd rax,DWORD PTR [r9+rax*4]
    39ae:	add    rax,r9
    39b1:	notrack jmp rax
    39b4:	nop    DWORD PTR [rax+0x0]
    39b8:	mov    BYTE PTR [rsp+0x8],dil
    39bd:	call   2850 <__ctype_b_loc@plt>
    39c2:	lea    r9,[rip+0x584b]        # 9214 <_obstack_memory_used@@Base+0x1254>
    39c9:	mov    r8,rax
    39cc:	movzx  eax,BYTE PTR [rsp+0x8]
    39d1:	mov    rcx,QWORD PTR [r8]
    39d4:	mov    rdi,rax
    39d7:	movzx  eax,WORD PTR [rcx+rax*2]
    39db:	test   ah,0x40
    39de:	je     3a44 <__ctype_b_loc@plt+0x11f4>
    39e0:	add    rbx,0x1
    39e4:	test   ah,0x20
    39e7:	jne    3a3e <__ctype_b_loc@plt+0x11ee>
    39e9:	call   2760 <btowc@plt>
    39ee:	movzx  ecx,BYTE PTR [rip+0x9703]        # d0f8 <stderr@@GLIBC_2.2.5+0x18>
    39f5:	lea    r9,[rip+0x5818]        # 9214 <_obstack_memory_used@@Base+0x1254>
    39fc:	test   cl,cl
    39fe:	jne    3d2b <__ctype_b_loc@plt+0x14db>
    3a04:	cmp    eax,0xa0
    3a09:	je     3a3e <__ctype_b_loc@plt+0x11ee>
    3a0b:	cmp    eax,0x2007
    3a10:	je     3a3e <__ctype_b_loc@plt+0x11ee>
    3a12:	cmp    eax,0x202f
    3a17:	je     3a3e <__ctype_b_loc@plt+0x11ee>
    3a19:	cmp    eax,0x2060
    3a1e:	je     3a3e <__ctype_b_loc@plt+0x11ee>
    3a20:	mov    r13d,0x1
    3a26:	jmp    3a44 <__ctype_b_loc@plt+0x11f4>
    3a28:	nop    DWORD PTR [rax+rax*1+0x0]
    3a30:	add    QWORD PTR [rsp],0x1
    3a35:	cmp    r15,rbx
    3a38:	cmovb  r15,rbx
    3a3c:	xor    ebx,ebx
    3a3e:	add    rbp,r13
    3a41:	xor    r13d,r13d
    3a44:	cmp    r12,r14
    3a47:	jne    3998 <__ctype_b_loc@plt+0x1148>
    3a4d:	mov    r12,r15
    3a50:	mov    r15,QWORD PTR [rsp+0x10]
    3a55:	jmp    3950 <__ctype_b_loc@plt+0x1100>
    3a5a:	nop    WORD PTR [rax+rax*1+0x0]
    3a60:	add    rbx,0x1
    3a64:	jmp    3a3e <__ctype_b_loc@plt+0x11ee>
    3a66:	cs nop WORD PTR [rax+rax*1+0x0]
    3a70:	and    rbx,0xfffffffffffffff8
    3a74:	add    rbx,0x8
    3a78:	jmp    3a3e <__ctype_b_loc@plt+0x11ee>
    3a7a:	nop    WORD PTR [rax+rax*1+0x0]
    3a80:	cmp    rax,0xffffffffffffffff
    3a84:	je     3ec0 <__ctype_b_loc@plt+0x1670>
    3a8a:	add    rbx,rax
    3a8d:	mov    edx,0x4000
    3a92:	mov    rsi,r15
    3a95:	mov    edi,ebp
    3a97:	call   7010 <__ctype_b_loc@plt+0x47c0>
    3a9c:	test   rax,rax
    3a9f:	jne    3a80 <__ctype_b_loc@plt+0x1230>
    3aa1:	mov    QWORD PTR [rsp+0x20],rbx
    3aa6:	xor    r12d,r12d
    3aa9:	mov    rbx,rax
    3aac:	xor    r13d,r13d
    3aaf:	mov    QWORD PTR [rsp],0x0
    3ab7:	mov    BYTE PTR [rsp+0x8],0x1
    3abc:	jmp    3d70 <__ctype_b_loc@plt+0x1520>
    3ac1:	mov    eax,DWORD PTR [rbx+0x20]
    3ac4:	and    eax,0xd000
    3ac9:	cmp    eax,0x8000
    3ace:	jne    3715 <__ctype_b_loc@plt+0xec5>
    3ad4:	mov    r12,QWORD PTR [rbx+0x38]
    3ad8:	test   r12,r12
    3adb:	js     3715 <__ctype_b_loc@plt+0xec5>
    3ae1:	mov    QWORD PTR [rsp+0x20],r12
    3ae6:	mov    r13,QWORD PTR [rip+0x9613]        # d100 <stderr@@GLIBC_2.2.5+0x20>
    3aed:	cmp    rbp,0xffffffffffffffff
    3af1:	je     3f27 <__ctype_b_loc@plt+0x16d7>
    3af7:	mov    rax,r12
    3afa:	xor    edx,edx
    3afc:	div    r13
    3aff:	test   rdx,rdx
    3b02:	jne    3f0d <__ctype_b_loc@plt+0x16bd>
    3b08:	mov    esi,0x1
    3b0d:	xor    ebp,ebp
    3b0f:	movabs rdx,0x1fffffffffffffff
    3b19:	mov    rax,QWORD PTR [rbx+0x40]
    3b1d:	lea    rcx,[rax-0x1]
    3b21:	add    rax,0x1
    3b25:	cmp    rcx,rdx
    3b28:	mov    ecx,0x201
    3b2d:	cmovbe rcx,rax
    3b31:	mov    rax,r12
    3b34:	xor    edx,edx
    3b36:	div    rcx
    3b39:	sub    r12,rdx
    3b3c:	cmp    r12,rbp
    3b3f:	jle    3715 <__ctype_b_loc@plt+0xec5>
    3b45:	test   sil,sil
    3b48:	je     3715 <__ctype_b_loc@plt+0xec5>
    3b4e:	mov    edi,DWORD PTR [rsp+0x1c]
    3b52:	mov    edx,0x1
    3b57:	mov    rsi,r12
    3b5a:	call   25a0 <lseek@plt>
    3b5f:	test   rax,rax
    3b62:	js     3715 <__ctype_b_loc@plt+0xec5>
    3b68:	sub    r12,rbp
    3b6b:	mov    QWORD PTR [rsp+0x20],r12
    3b70:	jmp    371e <__ctype_b_loc@plt+0xece>
    3b75:	nop    DWORD PTR [rax]
    3b78:	mov    rax,QWORD PTR [rsp+0x58]
    3b7d:	lea    r13,[rsp+0x58]
    3b82:	mov    rdx,r14
    3b85:	mov    rsi,r15
    3b88:	lea    rdi,[rsp+0x54]
    3b8d:	mov    rcx,r13
    3b90:	mov    QWORD PTR [rsp+0x8],rax
    3b95:	call   7c00 <__ctype_b_loc@plt+0x53b0>
    3b9a:	cmp    rax,0xfffffffffffffffe
    3b9e:	je     3cc0 <__ctype_b_loc@plt+0x1470>
    3ba4:	cmp    rax,0xffffffffffffffff
    3ba8:	je     3ca8 <__ctype_b_loc@plt+0x1458>
    3bae:	mov    rdi,r13
    3bb1:	mov    QWORD PTR [rsp+0x8],rax
    3bb6:	call   2820 <mbsinit@plt>
    3bbb:	mov    rdx,QWORD PTR [rsp+0x8]
    3bc0:	test   eax,eax
    3bc2:	sete   r13b
    3bc6:	test   rdx,rdx
    3bc9:	jne    3c80 <__ctype_b_loc@plt+0x1430>
    3bcf:	mov    DWORD PTR [rsp+0x54],0x0
    3bd7:	xor    edi,edi
    3bd9:	xor    r9d,r9d
    3bdc:	mov    edx,0x1
    3be1:	mov    QWORD PTR [rsp+0x8],rdx
    3be6:	mov    DWORD PTR [rsp+0x44],r9d
    3beb:	call   2830 <iswprint@plt>
    3bf0:	mov    rdx,QWORD PTR [rsp+0x8]
    3bf5:	test   eax,eax
    3bf7:	je     38b0 <__ctype_b_loc@plt+0x1060>
    3bfd:	cmp    BYTE PTR [rip+0x950c],0x0        # d110 <stderr@@GLIBC_2.2.5+0x30>
    3c04:	mov    r9d,DWORD PTR [rsp+0x44]
    3c09:	jne    3d0d <__ctype_b_loc@plt+0x14bd>
    3c0f:	mov    ecx,DWORD PTR [rsp+0x54]
    3c13:	mov    QWORD PTR [rsp+0x8],rdx
    3c18:	mov    edi,ecx
    3c1a:	mov    DWORD PTR [rsp+0x44],ecx
    3c1e:	call   2750 <iswspace@plt>
    3c23:	mov    rdx,QWORD PTR [rsp+0x8]
    3c28:	test   eax,eax
    3c2a:	jne    38f1 <__ctype_b_loc@plt+0x10a1>
    3c30:	movzx  eax,BYTE PTR [rip+0x94c1]        # d0f8 <stderr@@GLIBC_2.2.5+0x18>
    3c37:	test   al,al
    3c39:	jne    3d05 <__ctype_b_loc@plt+0x14b5>
    3c3f:	mov    ecx,DWORD PTR [rsp+0x44]
    3c43:	cmp    ecx,0xa0
    3c49:	je     38f1 <__ctype_b_loc@plt+0x10a1>
    3c4f:	cmp    ecx,0x2007
    3c55:	je     38f1 <__ctype_b_loc@plt+0x10a1>
    3c5b:	cmp    ecx,0x202f
    3c61:	je     38f1 <__ctype_b_loc@plt+0x10a1>
    3c67:	cmp    ecx,0x2060
    3c6d:	je     38f1 <__ctype_b_loc@plt+0x10a1>
    3c73:	mov    ebp,0x1
    3c78:	jmp    38b0 <__ctype_b_loc@plt+0x1060>
    3c7d:	nop    DWORD PTR [rax]
    3c80:	mov    r9d,DWORD PTR [rsp+0x54]
    3c85:	lea    eax,[r9-0x9]
    3c89:	cmp    eax,0x17
    3c8c:	ja     3eb4 <__ctype_b_loc@plt+0x1664>
    3c92:	lea    rsi,[rip+0x55db]        # 9274 <_obstack_memory_used@@Base+0x12b4>
    3c99:	movsxd rax,DWORD PTR [rsi+rax*4]
    3c9d:	add    rax,rsi
    3ca0:	notrack jmp rax
    3ca3:	nop    DWORD PTR [rax+rax*1+0x0]
    3ca8:	add    r15,0x1
    3cac:	sub    r14,0x1
    3cb0:	mov    r13d,0x1
    3cb6:	jmp    38ba <__ctype_b_loc@plt+0x106a>
    3cbb:	nop    DWORD PTR [rax+rax*1+0x0]
    3cc0:	mov    rax,QWORD PTR [rsp+0x8]
    3cc5:	mov    r13,r14
    3cc8:	mov    QWORD PTR [rsp+0x58],rax
    3ccd:	test   r14,r14
    3cd0:	je     3cfa <__ctype_b_loc@plt+0x14aa>
    3cd2:	cmp    r14,0x4000
    3cd9:	jne    3ce5 <__ctype_b_loc@plt+0x1495>
    3cdb:	add    r15,0x1
    3cdf:	mov    r13d,0x3fff
    3ce5:	mov    rdi,QWORD PTR [rsp+0x30]
    3cea:	mov    ecx,0x4001
    3cef:	mov    rdx,r13
    3cf2:	mov    rsi,r15
    3cf5:	call   2670 <__memmove_chk@plt>
    3cfa:	mov    r14d,0x1
    3d00:	jmp    37b0 <__ctype_b_loc@plt+0xf60>
    3d05:	movzx  ebp,al
    3d08:	jmp    38b0 <__ctype_b_loc@plt+0x1060>
    3d0d:	mov    edi,r9d
    3d10:	call   26c0 <wcwidth@plt>
    3d15:	mov    rdx,QWORD PTR [rsp+0x8]
    3d1a:	movsxd rcx,eax
    3d1d:	add    rcx,r12
    3d20:	test   eax,eax
    3d22:	cmovg  r12,rcx
    3d26:	jmp    3c0f <__ctype_b_loc@plt+0x13bf>
    3d2b:	movzx  r13d,cl
    3d2f:	jmp    3a44 <__ctype_b_loc@plt+0x11f4>
    3d34:	mov    edx,0x5
    3d39:	lea    rsi,[rip+0x52c4]        # 9004 <_obstack_memory_used@@Base+0x1044>
    3d40:	xor    edi,edi
    3d42:	call   2510 <dcgettext@plt>
    3d47:	mov    QWORD PTR [rsp+0x48],rax
    3d4c:	jmp    36a7 <__ctype_b_loc@plt+0xe57>
    3d51:	mov    BYTE PTR [rsp+0x8],0x1
    3d56:	mov    r15,r12
    3d59:	mov    rax,QWORD PTR [rsp+0x28]
    3d5e:	mov    r13,QWORD PTR [rsp+0x10]
    3d63:	mov    r12,r15
    3d66:	cmp    rax,r15
    3d69:	cmovae r12,rax
    3d6d:	add    r13,rbp
    3d70:	mov    r15,QWORD PTR [rsp+0x20]
    3d75:	movzx  eax,BYTE PTR [rsp+0x43]
    3d7a:	mov    r8,r12
    3d7d:	mov    rsi,r13
    3d80:	cmp    BYTE PTR [rip+0x938c],al        # d112 <stderr@@GLIBC_2.2.5+0x32>
    3d86:	mov    r14,QWORD PTR [rsp]
    3d8a:	cmova  rbx,r15
    3d8e:	mov    r9,QWORD PTR [rsp+0x38]
    3d93:	mov    rcx,r15
    3d96:	mov    rdi,r14
    3d99:	mov    rdx,rbx
    3d9c:	call   3440 <__ctype_b_loc@plt+0xbf0>
    3da1:	add    QWORD PTR [rip+0x9390],r14        # d138 <stderr@@GLIBC_2.2.5+0x58>
    3da8:	add    QWORD PTR [rip+0x9381],r13        # d130 <stderr@@GLIBC_2.2.5+0x50>
    3daf:	add    QWORD PTR [rip+0x9372],rbx        # d128 <stderr@@GLIBC_2.2.5+0x48>
    3db6:	add    QWORD PTR [rip+0x9363],r15        # d120 <stderr@@GLIBC_2.2.5+0x40>
    3dbd:	cmp    QWORD PTR [rip+0x9354],r12        # d118 <stderr@@GLIBC_2.2.5+0x38>
    3dc4:	jae    3dcd <__ctype_b_loc@plt+0x157d>
    3dc6:	mov    QWORD PTR [rip+0x934b],r12        # d118 <stderr@@GLIBC_2.2.5+0x38>
    3dcd:	mov    rax,QWORD PTR [rsp+0x4068]
    3dd5:	sub    rax,QWORD PTR fs:0x28
    3dde:	jne    4139 <__ctype_b_loc@plt+0x18e9>
    3de4:	movzx  eax,BYTE PTR [rsp+0x8]
    3de9:	add    rsp,0x4078
    3df0:	pop    rbx
    3df1:	pop    rbp
    3df2:	pop    r12
    3df4:	pop    r13
    3df6:	pop    r14
    3df8:	pop    r15
    3dfa:	ret    
    3dfb:	mov    rdx,QWORD PTR [rsp+0x48]
    3e00:	mov    esi,0x3
    3e05:	xor    edi,edi
    3e07:	mov    r15,r12
    3e0a:	call   68e0 <__ctype_b_loc@plt+0x4090>
    3e0f:	mov    r14,rax
    3e12:	call   2480 <__errno_location@plt>
    3e17:	mov    rcx,r14
    3e1a:	lea    rdx,[rip+0x5aec]        # 990d <_obstack_memory_used@@Base+0x194d>
    3e21:	xor    edi,edi
    3e23:	mov    esi,DWORD PTR [rax]
    3e25:	xor    eax,eax
    3e27:	call   2770 <error@plt>
    3e2c:	mov    BYTE PTR [rsp+0x8],0x0
    3e31:	jmp    3d59 <__ctype_b_loc@plt+0x1509>
    3e36:	mov    BYTE PTR [rsp+0x8],0x1
    3e3b:	mov    rax,rbx
    3e3e:	movzx  ebx,r13b
    3e42:	mov    r13,rbp
    3e45:	mov    rbp,rax
    3e48:	cmp    r12,rbp
    3e4b:	cmovb  r12,rbp
    3e4f:	add    r13,rbx
    3e52:	xor    ebx,ebx
    3e54:	jmp    3d70 <__ctype_b_loc@plt+0x1520>
    3e59:	mov    rdx,QWORD PTR [rsp+0x48]
    3e5e:	mov    rax,rbx
    3e61:	mov    esi,0x3
    3e66:	xor    edi,edi
    3e68:	movzx  ebx,r13b
    3e6c:	mov    r13,rbp
    3e6f:	mov    rbp,rax
    3e72:	call   68e0 <__ctype_b_loc@plt+0x4090>
    3e77:	mov    r14,rax
    3e7a:	call   2480 <__errno_location@plt>
    3e7f:	mov    rcx,r14
    3e82:	lea    rdx,[rip+0x5a84]        # 990d <_obstack_memory_used@@Base+0x194d>
    3e89:	xor    edi,edi
    3e8b:	mov    esi,DWORD PTR [rax]
    3e8d:	xor    eax,eax
    3e8f:	call   2770 <error@plt>
    3e94:	mov    BYTE PTR [rsp+0x8],0x0
    3e99:	jmp    3e48 <__ctype_b_loc@plt+0x15f8>
    3e9b:	mov    esi,DWORD PTR [rsp+0x1c]
    3e9f:	lea    rdx,[rbx+0x8]
    3ea3:	mov    edi,0x1
    3ea8:	call   26f0 <__fxstat@plt>
    3ead:	mov    DWORD PTR [rbx],eax
    3eaf:	jmp    370d <__ctype_b_loc@plt+0xebd>
    3eb4:	mov    edi,r9d
    3eb7:	jmp    3be1 <__ctype_b_loc@plt+0x1391>
    3ebc:	nop    DWORD PTR [rax+0x0]
    3ec0:	mov    rdx,QWORD PTR [rsp+0x48]
    3ec5:	mov    esi,0x3
    3eca:	xor    edi,edi
    3ecc:	xor    r13d,r13d
    3ecf:	mov    QWORD PTR [rsp+0x20],rbx
    3ed4:	xor    ebx,ebx
    3ed6:	call   68e0 <__ctype_b_loc@plt+0x4090>
    3edb:	mov    r12,rax
    3ede:	call   2480 <__errno_location@plt>
    3ee3:	mov    rcx,r12
    3ee6:	lea    rdx,[rip+0x5a20]        # 990d <_obstack_memory_used@@Base+0x194d>
    3eed:	xor    edi,edi
    3eef:	mov    esi,DWORD PTR [rax]
    3ef1:	xor    eax,eax
    3ef3:	xor    r12d,r12d
    3ef6:	call   2770 <error@plt>
    3efb:	mov    QWORD PTR [rsp],0x0
    3f03:	jmp    3d70 <__ctype_b_loc@plt+0x1520>
    3f08:	sub    QWORD PTR [rsp+0x20],rbp
    3f0d:	mov    QWORD PTR [rsp],0x0
    3f15:	xor    r12d,r12d
    3f18:	xor    ebx,ebx
    3f1a:	xor    r13d,r13d
    3f1d:	mov    BYTE PTR [rsp+0x8],0x1
    3f22:	jmp    3d70 <__ctype_b_loc@plt+0x1520>
    3f27:	mov    edi,DWORD PTR [rsp+0x1c]
    3f2b:	mov    edx,0x1
    3f30:	xor    esi,esi
    3f32:	call   25a0 <lseek@plt>
    3f37:	xor    edx,edx
    3f39:	mov    rbp,rax
    3f3c:	mov    rax,r12
    3f3f:	div    r13
    3f42:	test   rdx,rdx
    3f45:	je     4113 <__ctype_b_loc@plt+0x18c3>
    3f4b:	cmp    rbp,QWORD PTR [rsp+0x20]
    3f50:	jbe    3f08 <__ctype_b_loc@plt+0x16b8>
    3f52:	mov    QWORD PTR [rsp],0x0
    3f5a:	xor    r12d,r12d
    3f5d:	xor    ebx,ebx
    3f5f:	xor    r13d,r13d
    3f62:	mov    QWORD PTR [rsp+0x20],0x0
    3f6b:	mov    BYTE PTR [rsp+0x8],0x1
    3f70:	jmp    3d70 <__ctype_b_loc@plt+0x1520>
    3f75:	mov    edi,DWORD PTR [rsp+0x1c]
    3f79:	xor    edx,edx
    3f7b:	xor    esi,esi
    3f7d:	mov    ecx,0x2
    3f82:	call   4730 <__ctype_b_loc@plt+0x1ee0>
    3f87:	cmp    BYTE PTR [rsp+0x43],0x1
    3f8c:	je     375a <__ctype_b_loc@plt+0xf0a>
    3f92:	test   r12b,r12b
    3f95:	je     409c <__ctype_b_loc@plt+0x184c>
    3f9b:	cmp    BYTE PTR [rip+0x9172],0x0        # d114 <stderr@@GLIBC_2.2.5+0x34>
    3fa2:	je     3703 <__ctype_b_loc@plt+0xeb3>
    3fa8:	nop    DWORD PTR [rax+rax*1+0x0]
    3fb0:	mov    QWORD PTR [rsp],0x0
    3fb8:	xor    r13d,r13d
    3fbb:	lea    r15,[rsp+0x60]
    3fc0:	movabs r14,0x8888888888888889
    3fca:	mov    QWORD PTR [rsp+0x20],0x0
    3fd3:	nop    DWORD PTR [rax+rax*1+0x0]
    3fd8:	mov    edi,DWORD PTR [rsp+0x1c]
    3fdc:	mov    edx,0x4000
    3fe1:	mov    rsi,r15
    3fe4:	call   7010 <__ctype_b_loc@plt+0x47c0>
    3fe9:	test   rax,rax
    3fec:	je     40b0 <__ctype_b_loc@plt+0x1860>
    3ff2:	cmp    rax,0xffffffffffffffff
    3ff6:	je     40c8 <__ctype_b_loc@plt+0x1878>
    3ffc:	add    QWORD PTR [rsp+0x20],rax
    4001:	lea    rbp,[r15+rax*1]
    4005:	mul    r14
    4008:	mov    rbx,rdx
    400b:	shr    rbx,0x3
    400f:	test   r13b,r13b
    4012:	jne    4058 <__ctype_b_loc@plt+0x1808>
    4014:	cmp    rbp,r15
    4017:	je     4108 <__ctype_b_loc@plt+0x18b8>
    401d:	mov    rdx,QWORD PTR [rsp]
    4021:	mov    rax,r15
    4024:	nop    DWORD PTR [rax+0x0]
    4028:	add    rax,0x1
    402c:	xor    ecx,ecx
    402e:	cmp    BYTE PTR [rax-0x1],0xa
    4032:	sete   cl
    4035:	add    rdx,rcx
    4038:	cmp    rbp,rax
    403b:	jne    4028 <__ctype_b_loc@plt+0x17d8>
    403d:	mov    rax,rdx
    4040:	sub    rax,QWORD PTR [rsp]
    4044:	mov    QWORD PTR [rsp],rdx
    4048:	cmp    rax,rbx
    404b:	setbe  r13b
    404f:	jmp    3fd8 <__ctype_b_loc@plt+0x1788>
    4051:	nop    DWORD PTR [rax+0x0]
    4058:	mov    r12,QWORD PTR [rsp]
    405c:	mov    rdi,r15
    405f:	jmp    4070 <__ctype_b_loc@plt+0x1820>
    4061:	nop    DWORD PTR [rax+0x0]
    4068:	lea    rdi,[rax+0x1]
    406c:	add    r12,0x1
    4070:	mov    rdx,rbp
    4073:	mov    esi,0xa
    4078:	sub    rdx,rdi
    407b:	call   2600 <memchr@plt>
    4080:	test   rax,rax
    4083:	jne    4068 <__ctype_b_loc@plt+0x1818>
    4085:	mov    rax,r12
    4088:	sub    rax,QWORD PTR [rsp]
    408c:	mov    QWORD PTR [rsp],r12
    4090:	cmp    rax,rbx
    4093:	setbe  r13b
    4097:	jmp    3fd8 <__ctype_b_loc@plt+0x1788>
    409c:	cmp    BYTE PTR [rsp+0x43],0x0
    40a1:	je     3fb0 <__ctype_b_loc@plt+0x1760>
    40a7:	jmp    375a <__ctype_b_loc@plt+0xf0a>
    40ac:	nop    DWORD PTR [rax+0x0]
    40b0:	mov    BYTE PTR [rsp+0x8],0x1
    40b5:	mov    rbx,rax
    40b8:	xor    r12d,r12d
    40bb:	xor    r13d,r13d
    40be:	jmp    3d70 <__ctype_b_loc@plt+0x1520>
    40c3:	nop    DWORD PTR [rax+rax*1+0x0]
    40c8:	mov    rdx,QWORD PTR [rsp+0x48]
    40cd:	mov    esi,0x3
    40d2:	xor    edi,edi
    40d4:	xor    ebx,ebx
    40d6:	xor    r13d,r13d
    40d9:	call   68e0 <__ctype_b_loc@plt+0x4090>
    40de:	mov    r12,rax
    40e1:	call   2480 <__errno_location@plt>
    40e6:	mov    rcx,r12
    40e9:	lea    rdx,[rip+0x581d]        # 990d <_obstack_memory_used@@Base+0x194d>
    40f0:	xor    edi,edi
    40f2:	mov    esi,DWORD PTR [rax]
    40f4:	xor    eax,eax
    40f6:	xor    r12d,r12d
    40f9:	call   2770 <error@plt>
    40fe:	jmp    3d70 <__ctype_b_loc@plt+0x1520>
    4103:	nop    DWORD PTR [rax+rax*1+0x0]
    4108:	mov    r13d,0x1
    410e:	jmp    3fd8 <__ctype_b_loc@plt+0x1788>
    4113:	mov    rsi,rbp
    4116:	not    rsi
    4119:	shr    rsi,0x3f
    411d:	jmp    3b0f <__ctype_b_loc@plt+0x12bf>
    4122:	mov    edi,DWORD PTR [rsp+0x1c]
    4126:	mov    ecx,0x2
    412b:	xor    edx,edx
    412d:	xor    esi,esi
    412f:	call   4730 <__ctype_b_loc@plt+0x1ee0>
    4134:	jmp    3f9b <__ctype_b_loc@plt+0x174b>
    4139:	call   2540 <__stack_chk_fail@plt>
    413e:	xchg   ax,ax
    4140:	endbr64 
    4144:	push   r14
    4146:	mov    edx,0x5
    414b:	push   r13
    414d:	push   r12
    414f:	push   rbp
    4150:	mov    ebp,edi
    4152:	sub    rsp,0x88
    4159:	mov    r12,QWORD PTR [rip+0x8ff0]        # d150 <stderr@@GLIBC_2.2.5+0x70>
    4160:	mov    rax,QWORD PTR fs:0x28
    4169:	mov    QWORD PTR [rsp+0x78],rax
    416e:	xor    eax,eax
    4170:	test   edi,edi
    4172:	je     41a2 <__ctype_b_loc@plt+0x1952>
    4174:	lea    rsi,[rip+0x51dd]        # 9358 <_obstack_memory_used@@Base+0x1398>
    417b:	xor    edi,edi
    417d:	call   2510 <dcgettext@plt>
    4182:	mov    rdi,QWORD PTR [rip+0x8f57]        # d0e0 <stderr@@GLIBC_2.2.5>
    4189:	mov    rcx,r12
    418c:	mov    esi,0x1
    4191:	mov    rdx,rax
    4194:	xor    eax,eax
    4196:	call   2810 <__fprintf_chk@plt>
    419b:	mov    edi,ebp
    419d:	call   27f0 <exit@plt>
    41a2:	lea    rsi,[rip+0x51d7]        # 9380 <_obstack_memory_used@@Base+0x13c0>
    41a9:	xor    edi,edi
    41ab:	call   2510 <dcgettext@plt>
    41b0:	mov    rcx,r12
    41b3:	mov    rdx,r12
    41b6:	mov    edi,0x1
    41bb:	mov    rsi,rax
    41be:	xor    eax,eax
    41c0:	call   2730 <__printf_chk@plt>
    41c5:	mov    r12,QWORD PTR [rip+0x8edc]        # d0a8 <stdout@@GLIBC_2.2.5>
    41cc:	mov    edx,0x5
    41d1:	xor    edi,edi
    41d3:	lea    rsi,[rip+0x51ee]        # 93c8 <_obstack_memory_used@@Base+0x1408>
    41da:	call   2510 <dcgettext@plt>
    41df:	mov    rsi,r12
    41e2:	mov    rdi,rax
    41e5:	call   2630 <fputs_unlocked@plt>
    41ea:	mov    r12,QWORD PTR [rip+0x8eb7]        # d0a8 <stdout@@GLIBC_2.2.5>
    41f1:	mov    edx,0x5
    41f6:	xor    edi,edi
    41f8:	lea    rsi,[rip+0x5281]        # 9480 <_obstack_memory_used@@Base+0x14c0>
    41ff:	call   2510 <dcgettext@plt>
    4204:	mov    rsi,r12
    4207:	mov    rdi,rax
    420a:	call   2630 <fputs_unlocked@plt>
    420f:	mov    r12,QWORD PTR [rip+0x8e92]        # d0a8 <stdout@@GLIBC_2.2.5>
    4216:	mov    edx,0x5
    421b:	xor    edi,edi
    421d:	lea    rsi,[rip+0x5294]        # 94b8 <_obstack_memory_used@@Base+0x14f8>
    4224:	call   2510 <dcgettext@plt>
    4229:	mov    rsi,r12
    422c:	mov    rdi,rax
    422f:	call   2630 <fputs_unlocked@plt>
    4234:	mov    r12,QWORD PTR [rip+0x8e6d]        # d0a8 <stdout@@GLIBC_2.2.5>
    423b:	mov    edx,0x5
    4240:	xor    edi,edi
    4242:	lea    rsi,[rip+0x539f]        # 95e8 <_obstack_memory_used@@Base+0x1628>
    4249:	call   2510 <dcgettext@plt>
    424e:	mov    rsi,r12
    4251:	mov    rdi,rax
    4254:	call   2630 <fputs_unlocked@plt>
    4259:	mov    r12,QWORD PTR [rip+0x8e48]        # d0a8 <stdout@@GLIBC_2.2.5>
    4260:	mov    edx,0x5
    4265:	xor    edi,edi
    4267:	lea    rsi,[rip+0x54aa]        # 9718 <_obstack_memory_used@@Base+0x1758>
    426e:	call   2510 <dcgettext@plt>
    4273:	mov    rsi,r12
    4276:	mov    rdi,rax
    4279:	call   2630 <fputs_unlocked@plt>
    427e:	mov    edx,0x5
    4283:	mov    r12,QWORD PTR [rip+0x8e1e]        # d0a8 <stdout@@GLIBC_2.2.5>
    428a:	xor    edi,edi
    428c:	lea    rsi,[rip+0x54b5]        # 9748 <_obstack_memory_used@@Base+0x1788>
    4293:	call   2510 <dcgettext@plt>
    4298:	mov    rsi,r12
    429b:	mov    rdi,rax
    429e:	call   2630 <fputs_unlocked@plt>
    42a3:	lea    rax,[rip+0x4d6c]        # 9016 <_obstack_memory_used@@Base+0x1056>
    42aa:	mov    rdx,rsp
    42ad:	lea    rcx,[rip+0x4da3]        # 9057 <_obstack_memory_used@@Base+0x1097>
    42b4:	mov    QWORD PTR [rsp],rax
    42b8:	lea    rax,[rip+0x4d59]        # 9018 <_obstack_memory_used@@Base+0x1058>
    42bf:	mov    esi,0x77
    42c4:	mov    edi,0x63
    42c9:	mov    QWORD PTR [rsp+0x8],rax
    42ce:	lea    rax,[rip+0x4dbb]        # 9090 <_obstack_memory_used@@Base+0x10d0>
    42d5:	mov    QWORD PTR [rsp+0x10],rax
    42da:	lea    rax,[rip+0x4d47]        # 9028 <_obstack_memory_used@@Base+0x1068>
    42e1:	mov    QWORD PTR [rsp+0x18],rax
    42e6:	lea    rax,[rip+0x4d51]        # 903e <_obstack_memory_used@@Base+0x107e>
    42ed:	mov    QWORD PTR [rsp+0x30],rcx
    42f2:	lea    rcx,[rip+0x4d68]        # 9061 <_obstack_memory_used@@Base+0x10a1>
    42f9:	mov    QWORD PTR [rsp+0x20],rax
    42fe:	lea    rax,[rip+0x4d43]        # 9048 <_obstack_memory_used@@Base+0x1088>
    4305:	mov    QWORD PTR [rsp+0x40],rcx
    430a:	lea    rcx,[rip+0x4d5a]        # 906b <_obstack_memory_used@@Base+0x10ab>
    4311:	mov    QWORD PTR [rsp+0x28],rax
    4316:	mov    QWORD PTR [rsp+0x38],rax
    431b:	mov    QWORD PTR [rsp+0x48],rax
    4320:	mov    QWORD PTR [rsp+0x50],rcx
    4325:	mov    QWORD PTR [rsp+0x58],rax
    432a:	mov    QWORD PTR [rsp+0x60],0x0
    4333:	mov    QWORD PTR [rsp+0x68],0x0
    433c:	nop    DWORD PTR [rax+0x0]
    4340:	mov    rax,QWORD PTR [rdx+0x10]
    4344:	add    rdx,0x10
    4348:	test   rax,rax
    434b:	je     4362 <__ctype_b_loc@plt+0x1b12>
    434d:	movzx  ecx,BYTE PTR [rax]
    4350:	cmp    esi,ecx
    4352:	jne    4340 <__ctype_b_loc@plt+0x1af0>
    4354:	movzx  ecx,BYTE PTR [rax+0x1]
    4358:	cmp    edi,ecx
    435a:	jne    4340 <__ctype_b_loc@plt+0x1af0>
    435c:	cmp    BYTE PTR [rax+0x2],0x0
    4360:	jne    4340 <__ctype_b_loc@plt+0x1af0>
    4362:	mov    r12,QWORD PTR [rdx+0x8]
    4366:	lea    rsi,[rip+0x4d08]        # 9075 <_obstack_memory_used@@Base+0x10b5>
    436d:	mov    edx,0x5
    4372:	xor    edi,edi
    4374:	test   r12,r12
    4377:	je     4445 <__ctype_b_loc@plt+0x1bf5>
    437d:	call   2510 <dcgettext@plt>
    4382:	lea    rcx,[rip+0x53f7]        # 9780 <_obstack_memory_used@@Base+0x17c0>
    4389:	lea    rdx,[rip+0x4cfc]        # 908c <_obstack_memory_used@@Base+0x10cc>
    4390:	mov    edi,0x1
    4395:	mov    rsi,rax
    4398:	xor    eax,eax
    439a:	lea    r13,[rip+0x4c72]        # 9013 <_obstack_memory_used@@Base+0x1053>
    43a1:	call   2730 <__printf_chk@plt>
    43a6:	mov    edi,0x5
    43ab:	xor    esi,esi
    43ad:	call   2720 <setlocale@plt>
    43b2:	mov    rdi,rax
    43b5:	test   rax,rax
    43b8:	je     43d3 <__ctype_b_loc@plt+0x1b83>
    43ba:	mov    edx,0x3
    43bf:	lea    rsi,[rip+0x4cd4]        # 909a <_obstack_memory_used@@Base+0x10da>
    43c6:	call   2490 <strncmp@plt>
    43cb:	test   eax,eax
    43cd:	jne    44dd <__ctype_b_loc@plt+0x1c8d>
    43d3:	xor    edi,edi
    43d5:	mov    edx,0x5
    43da:	lea    rsi,[rip+0x4cbd]        # 909e <_obstack_memory_used@@Base+0x10de>
    43e1:	call   2510 <dcgettext@plt>
    43e6:	lea    rcx,[rip+0x4c26]        # 9013 <_obstack_memory_used@@Base+0x1053>
    43ed:	mov    edi,0x1
    43f2:	lea    rdx,[rip+0x5387]        # 9780 <_obstack_memory_used@@Base+0x17c0>
    43f9:	mov    rsi,rax
    43fc:	xor    eax,eax
    43fe:	call   2730 <__printf_chk@plt>
    4403:	cmp    r12,r13
    4406:	lea    rcx,[rip+0x5d14]        # a121 <_obstack_memory_used@@Base+0x2161>
    440d:	lea    r13,[rip+0x4c1e]        # 9032 <_obstack_memory_used@@Base+0x1072>
    4414:	cmovne r13,rcx
    4418:	xor    edi,edi
    441a:	lea    rsi,[rip+0x53cf]        # 97f0 <_obstack_memory_used@@Base+0x1830>
    4421:	mov    edx,0x5
    4426:	call   2510 <dcgettext@plt>
    442b:	mov    rcx,r13
    442e:	mov    rdx,r12
    4431:	mov    edi,0x1
    4436:	mov    rsi,rax
    4439:	xor    eax,eax
    443b:	call   2730 <__printf_chk@plt>
    4440:	jmp    419b <__ctype_b_loc@plt+0x194b>
    4445:	call   2510 <dcgettext@plt>
    444a:	lea    rcx,[rip+0x532f]        # 9780 <_obstack_memory_used@@Base+0x17c0>
    4451:	mov    edi,0x1
    4456:	lea    rdx,[rip+0x4c2f]        # 908c <_obstack_memory_used@@Base+0x10cc>
    445d:	mov    rsi,rax
    4460:	xor    eax,eax
    4462:	call   2730 <__printf_chk@plt>
    4467:	mov    edi,0x5
    446c:	xor    esi,esi
    446e:	call   2720 <setlocale@plt>
    4473:	mov    rdi,rax
    4476:	test   rax,rax
    4479:	je     4490 <__ctype_b_loc@plt+0x1c40>
    447b:	mov    edx,0x3
    4480:	lea    rsi,[rip+0x4c13]        # 909a <_obstack_memory_used@@Base+0x10da>
    4487:	call   2490 <strncmp@plt>
    448c:	test   eax,eax
    448e:	jne    44d3 <__ctype_b_loc@plt+0x1c83>
    4490:	mov    edx,0x5
    4495:	lea    rsi,[rip+0x4c02]        # 909e <_obstack_memory_used@@Base+0x10de>
    449c:	xor    edi,edi
    449e:	call   2510 <dcgettext@plt>
    44a3:	lea    rcx,[rip+0x4b69]        # 9013 <_obstack_memory_used@@Base+0x1053>
    44aa:	lea    rdx,[rip+0x52cf]        # 9780 <_obstack_memory_used@@Base+0x17c0>
    44b1:	mov    edi,0x1
    44b6:	mov    rsi,rax
    44b9:	xor    eax,eax
    44bb:	lea    r12,[rip+0x4b51]        # 9013 <_obstack_memory_used@@Base+0x1053>
    44c2:	call   2730 <__printf_chk@plt>
    44c7:	lea    r13,[rip+0x4b64]        # 9032 <_obstack_memory_used@@Base+0x1072>
    44ce:	jmp    4418 <__ctype_b_loc@plt+0x1bc8>
    44d3:	lea    r13,[rip+0x4b39]        # 9013 <_obstack_memory_used@@Base+0x1053>
    44da:	mov    r12,r13
    44dd:	mov    r14,QWORD PTR [rip+0x8bc4]        # d0a8 <stdout@@GLIBC_2.2.5>
    44e4:	xor    edi,edi
    44e6:	mov    edx,0x5
    44eb:	lea    rsi,[rip+0x52b6]        # 97a8 <_obstack_memory_used@@Base+0x17e8>
    44f2:	call   2510 <dcgettext@plt>
    44f7:	mov    rdi,rax
    44fa:	mov    rsi,r14
    44fd:	call   2630 <fputs_unlocked@plt>
    4502:	jmp    43d3 <__ctype_b_loc@plt+0x1b83>
    4507:	nop    WORD PTR [rax+rax*1+0x0]
    4510:	endbr64 
    4514:	push   rbx
    4515:	mov    rbx,rdi
    4518:	mov    edi,0x30
    451d:	call   2440 <malloc@plt>
    4522:	test   rax,rax
    4525:	je     4536 <__ctype_b_loc@plt+0x1ce6>
    4527:	mov    QWORD PTR [rax],0x0
    452e:	mov    QWORD PTR [rax+0x20],rbx
    4532:	mov    QWORD PTR [rax+0x28],rbx
    4536:	pop    rbx
    4537:	ret    
    4538:	nop    DWORD PTR [rax+rax*1+0x0]
    4540:	endbr64 
    4544:	push   rbx
    4545:	mov    rbx,rdi
    4548:	mov    edi,0x30
    454d:	call   2440 <malloc@plt>
    4552:	test   rax,rax
    4555:	je     457a <__ctype_b_loc@plt+0x1d2a>
    4557:	mov    QWORD PTR [rax],rbx
    455a:	mov    QWORD PTR [rax+0x10],0x0
    4562:	mov    QWORD PTR [rax+0x18],0x0
    456a:	mov    QWORD PTR [rax+0x8],0x0
    4572:	mov    QWORD PTR [rax+0x20],0x0
    457a:	pop    rbx
    457b:	ret    
    457c:	nop    DWORD PTR [rax+0x0]
    4580:	endbr64 
    4584:	push   rbp
    4585:	mov    rbp,rsi
    4588:	push   rbx
    4589:	mov    rbx,rdi
    458c:	sub    rsp,0x8
    4590:	mov    rcx,QWORD PTR [rdi]
    4593:	test   rcx,rcx
    4596:	je     45c8 <__ctype_b_loc@plt+0x1d78>
    4598:	lea    rsi,[rdi+0x18]
    459c:	xor    edx,edx
    459e:	lea    rdi,[rdi+0x10]
    45a2:	call   2840 <getdelim@plt>
    45a7:	test   rax,rax
    45aa:	js     45f0 <__ctype_b_loc@plt+0x1da0>
    45ac:	mov    DWORD PTR [rbp+0x0],0x1
    45b3:	mov    rax,QWORD PTR [rbx+0x10]
    45b7:	add    QWORD PTR [rbx+0x8],0x1
    45bc:	add    rsp,0x8
    45c0:	pop    rbx
    45c1:	pop    rbp
    45c2:	ret    
    45c3:	nop    DWORD PTR [rax+rax*1+0x0]
    45c8:	mov    rdx,QWORD PTR [rdi+0x28]
    45cc:	mov    rax,QWORD PTR [rdx]
    45cf:	test   rax,rax
    45d2:	je     4610 <__ctype_b_loc@plt+0x1dc0>
    45d4:	add    rdx,0x8
    45d8:	mov    DWORD PTR [rsi],0x1
    45de:	mov    QWORD PTR [rdi+0x28],rdx
    45e2:	add    rsp,0x8
    45e6:	pop    rbx
    45e7:	pop    rbp
    45e8:	ret    
    45e9:	nop    DWORD PTR [rax+0x0]
    45f0:	mov    rdi,QWORD PTR [rbx]
    45f3:	call   2680 <feof@plt>
    45f8:	cmp    eax,0x1
    45fb:	sbb    eax,eax
    45fd:	and    eax,0x2
    4600:	add    eax,0x2
    4603:	mov    DWORD PTR [rbp+0x0],eax
    4606:	xor    eax,eax
    4608:	jmp    45bc <__ctype_b_loc@plt+0x1d6c>
    460a:	nop    WORD PTR [rax+rax*1+0x0]
    4610:	mov    DWORD PTR [rsi],0x2
    4616:	jmp    45bc <__ctype_b_loc@plt+0x1d6c>
    4618:	nop    DWORD PTR [rax+rax*1+0x0]
    4620:	endbr64 
    4624:	cmp    QWORD PTR [rdi],0x0
    4628:	je     4630 <__ctype_b_loc@plt+0x1de0>
    462a:	mov    rax,QWORD PTR [rdi+0x8]
    462e:	ret    
    462f:	nop
    4630:	mov    rax,QWORD PTR [rdi+0x28]
    4634:	sub    rax,QWORD PTR [rdi+0x20]
    4638:	sar    rax,0x3
    463c:	ret    
    463d:	nop    DWORD PTR [rax]
    4640:	endbr64 
    4644:	push   rbp
    4645:	cmp    QWORD PTR [rdi],0x0
    4649:	mov    rbp,rdi
    464c:	je     4657 <__ctype_b_loc@plt+0x1e07>
    464e:	mov    rdi,QWORD PTR [rdi+0x10]
    4652:	call   2430 <free@plt>
    4657:	mov    rdi,rbp
    465a:	pop    rbp
    465b:	jmp    2430 <free@plt>
    4660:	endbr64 
    4664:	mov    QWORD PTR [rip+0x8add],rdi        # d148 <stderr@@GLIBC_2.2.5+0x68>
    466b:	ret    
    466c:	nop    DWORD PTR [rax+0x0]
    4670:	endbr64 
    4674:	mov    BYTE PTR [rip+0x8ac5],dil        # d140 <stderr@@GLIBC_2.2.5+0x60>
    467b:	ret    
    467c:	nop    DWORD PTR [rax+0x0]
    4680:	endbr64 
    4684:	push   r12
    4686:	push   rbx
    4687:	sub    rsp,0x8
    468b:	mov    rdi,QWORD PTR [rip+0x8a16]        # d0a8 <stdout@@GLIBC_2.2.5>
    4692:	call   7ff0 <_obstack_memory_used@@Base+0x30>
    4697:	test   eax,eax
    4699:	je     46b1 <__ctype_b_loc@plt+0x1e61>
    469b:	call   2480 <__errno_location@plt>
    46a0:	cmp    BYTE PTR [rip+0x8a99],0x0        # d140 <stderr@@GLIBC_2.2.5+0x60>
    46a7:	mov    rbx,rax
    46aa:	je     46c9 <__ctype_b_loc@plt+0x1e79>
    46ac:	cmp    DWORD PTR [rax],0x20
    46af:	jne    46c9 <__ctype_b_loc@plt+0x1e79>
    46b1:	mov    rdi,QWORD PTR [rip+0x8a28]        # d0e0 <stderr@@GLIBC_2.2.5>
    46b8:	call   7ff0 <_obstack_memory_used@@Base+0x30>
    46bd:	test   eax,eax
    46bf:	jne    4708 <__ctype_b_loc@plt+0x1eb8>
    46c1:	add    rsp,0x8
    46c5:	pop    rbx
    46c6:	pop    r12
    46c8:	ret    
    46c9:	xor    edi,edi
    46cb:	mov    edx,0x5
    46d0:	lea    rsi,[rip+0x5226]        # 98fd <_obstack_memory_used@@Base+0x193d>
    46d7:	call   2510 <dcgettext@plt>
    46dc:	mov    rdi,QWORD PTR [rip+0x8a65]        # d148 <stderr@@GLIBC_2.2.5+0x68>
    46e3:	mov    r12,rax
    46e6:	test   rdi,rdi
    46e9:	je     4713 <__ctype_b_loc@plt+0x1ec3>
    46eb:	call   67c0 <__ctype_b_loc@plt+0x3f70>
    46f0:	mov    esi,DWORD PTR [rbx]
    46f2:	mov    r8,r12
    46f5:	xor    edi,edi
    46f7:	mov    rcx,rax
    46fa:	lea    rdx,[rip+0x5208]        # 9909 <_obstack_memory_used@@Base+0x1949>
    4701:	xor    eax,eax
    4703:	call   2770 <error@plt>
    4708:	mov    edi,DWORD PTR [rip+0x890a]        # d018 <_obstack_memory_used@@Base+0x5058>
    470e:	call   24a0 <_exit@plt>
    4713:	mov    esi,DWORD PTR [rbx]
    4715:	mov    rcx,rax
    4718:	lea    rdx,[rip+0x51ee]        # 990d <_obstack_memory_used@@Base+0x194d>
    471f:	xor    edi,edi
    4721:	xor    eax,eax
    4723:	call   2770 <error@plt>
    4728:	jmp    4708 <__ctype_b_loc@plt+0x1eb8>
    472a:	nop    WORD PTR [rax+rax*1+0x0]
    4730:	endbr64 
    4734:	jmp    25f0 <posix_fadvise@plt>
    4739:	nop    DWORD PTR [rax+0x0]
    4740:	endbr64 
    4744:	test   rdi,rdi
    4747:	je     4768 <__ctype_b_loc@plt+0x1f18>
    4749:	push   r12
    474b:	mov    r12d,esi
    474e:	call   26a0 <fileno@plt>
    4753:	mov    ecx,r12d
    4756:	xor    edx,edx
    4758:	xor    esi,esi
    475a:	mov    edi,eax
    475c:	pop    r12
    475e:	jmp    25f0 <posix_fadvise@plt>
    4763:	nop    DWORD PTR [rax+rax*1+0x0]
    4768:	ret    
    4769:	nop    DWORD PTR [rax+0x0]
    4770:	endbr64 
    4774:	mov    BYTE PTR [rsi+0x14],0x0
    4778:	lea    r8,[rsi+0x14]
    477c:	movabs rsi,0xcccccccccccccccd
    4786:	cs nop WORD PTR [rax+rax*1+0x0]
    4790:	mov    rax,rdi
    4793:	sub    r8,0x1
    4797:	mul    rsi
    479a:	mov    rax,rdi
    479d:	shr    rdx,0x3
    47a1:	lea    rcx,[rdx+rdx*4]
    47a5:	add    rcx,rcx
    47a8:	sub    rax,rcx
    47ab:	add    eax,0x30
    47ae:	mov    BYTE PTR [r8],al
    47b1:	mov    rax,rdi
    47b4:	mov    rdi,rdx
    47b7:	cmp    rax,0x9
    47bb:	ja     4790 <__ctype_b_loc@plt+0x1f40>
    47bd:	mov    rax,r8
    47c0:	ret    
    47c1:	cs nop WORD PTR [rax+rax*1+0x0]
    47cb:	nop    DWORD PTR [rax+rax*1+0x0]
    47d0:	endbr64 
    47d4:	push   rbp
    47d5:	mov    ebp,edi
    47d7:	call   26c0 <wcwidth@plt>
    47dc:	test   eax,eax
    47de:	js     47e8 <__ctype_b_loc@plt+0x1f98>
    47e0:	pop    rbp
    47e1:	ret    
    47e2:	nop    WORD PTR [rax+rax*1+0x0]
    47e8:	mov    edi,ebp
    47ea:	call   24d0 <iswcntrl@plt>
    47ef:	pop    rbp
    47f0:	test   eax,eax
    47f2:	sete   al
    47f5:	movzx  eax,al
    47f8:	ret    
    47f9:	nop    DWORD PTR [rax+0x0]
    4800:	endbr64 
    4804:	push   rbp
    4805:	mov    rbp,rdi
    4808:	push   rbx
    4809:	mov    rbx,rsi
    480c:	lea    rax,[rbx+0x18]
    4810:	sub    rsp,0x8
    4814:	mov    rsi,QWORD PTR [rsi]
    4817:	mov    rdx,QWORD PTR [rbx+0x8]
    481b:	cmp    rsi,rax
    481e:	je     4840 <__ctype_b_loc@plt+0x1ff0>
    4820:	mov    QWORD PTR [rdi],rsi
    4823:	movzx  eax,BYTE PTR [rbx+0x10]
    4827:	mov    QWORD PTR [rbp+0x8],rdx
    482b:	mov    BYTE PTR [rbp+0x10],al
    482e:	test   al,al
    4830:	je     4838 <__ctype_b_loc@plt+0x1fe8>
    4832:	mov    eax,DWORD PTR [rbx+0x14]
    4835:	mov    DWORD PTR [rbp+0x14],eax
    4838:	add    rsp,0x8
    483c:	pop    rbx
    483d:	pop    rbp
    483e:	ret    
    483f:	nop
    4840:	lea    rcx,[rdi+0x18]
    4844:	mov    rdi,rcx
    4847:	call   2690 <memcpy@plt>
    484c:	mov    rdx,QWORD PTR [rbx+0x8]
    4850:	mov    QWORD PTR [rbp+0x0],rax
    4854:	jmp    4823 <__ctype_b_loc@plt+0x1fd3>
    4856:	cs nop WORD PTR [rax+rax*1+0x0]
    4860:	endbr64 
    4864:	mov    eax,edi
    4866:	lea    rdx,[rip+0x50b3]        # 9920 <_obstack_memory_used@@Base+0x1960>
    486d:	mov    ecx,edi
    486f:	shr    al,0x5
    4872:	and    eax,0x7
    4875:	mov    eax,DWORD PTR [rdx+rax*4]
    4878:	shr    eax,cl
    487a:	and    eax,0x1
    487d:	ret    
    487e:	xchg   ax,ax
    4880:	endbr64 
    4884:	sub    rsp,0x98
    488b:	mov    edi,0x55
    4890:	mov    rax,QWORD PTR fs:0x28
    4899:	mov    QWORD PTR [rsp+0x88],rax
    48a1:	xor    eax,eax
    48a3:	call   27b0 <sysconf@plt>
    48a8:	pxor   xmm0,xmm0
    48ac:	mov    edi,0x1e
    48b1:	cvtsi2sd xmm0,rax
    48b6:	movsd  QWORD PTR [rsp+0x8],xmm0
    48bc:	call   27b0 <sysconf@plt>
    48c1:	movsd  xmm0,QWORD PTR [rsp+0x8]
    48c7:	pxor   xmm1,xmm1
    48cb:	comisd xmm0,xmm1
    48cf:	jb     48e0 <__ctype_b_loc@plt+0x2090>
    48d1:	pxor   xmm2,xmm2
    48d5:	cvtsi2sd xmm2,rax
    48da:	comisd xmm2,xmm1
    48de:	jae    4918 <__ctype_b_loc@plt+0x20c8>
    48e0:	lea    rdi,[rsp+0x10]
    48e5:	call   27d0 <sysinfo@plt>
    48ea:	movsd  xmm0,QWORD PTR [rip+0x504e]        # 9940 <_obstack_memory_used@@Base+0x1980>
    48f2:	test   eax,eax
    48f4:	je     4920 <__ctype_b_loc@plt+0x20d0>
    48f6:	mov    rax,QWORD PTR [rsp+0x88]
    48fe:	sub    rax,QWORD PTR fs:0x28
    4907:	jne    496b <__ctype_b_loc@plt+0x211b>
    4909:	add    rsp,0x98
    4910:	ret    
    4911:	nop    DWORD PTR [rax+0x0]
    4918:	mulsd  xmm0,xmm2
    491c:	jmp    48f6 <__ctype_b_loc@plt+0x20a6>
    491e:	xchg   ax,ax
    4920:	mov    rax,QWORD PTR [rsp+0x30]
    4925:	test   rax,rax
    4928:	js     4950 <__ctype_b_loc@plt+0x2100>
    492a:	pxor   xmm0,xmm0
    492e:	cvtsi2sd xmm0,rax
    4933:	mov    eax,DWORD PTR [rsp+0x78]
    4937:	pxor   xmm1,xmm1
    493b:	cvtsi2sd xmm1,rax
    4940:	mulsd  xmm0,xmm1
    4944:	jmp    48f6 <__ctype_b_loc@plt+0x20a6>
    4946:	cs nop WORD PTR [rax+rax*1+0x0]
    4950:	mov    rdx,rax
    4953:	and    eax,0x1
    4956:	pxor   xmm0,xmm0
    495a:	shr    rdx,1
    495d:	or     rdx,rax
    4960:	cvtsi2sd xmm0,rdx
    4965:	addsd  xmm0,xmm0
    4969:	jmp    4933 <__ctype_b_loc@plt+0x20e3>
    496b:	call   2540 <__stack_chk_fail@plt>
    4970:	endbr64 
    4974:	sub    rsp,0x98
    497b:	mov    edi,0x56
    4980:	mov    rax,QWORD PTR fs:0x28
    4989:	mov    QWORD PTR [rsp+0x88],rax
    4991:	xor    eax,eax
    4993:	call   27b0 <sysconf@plt>
    4998:	pxor   xmm0,xmm0
    499c:	mov    edi,0x1e
    49a1:	cvtsi2sd xmm0,rax
    49a6:	movsd  QWORD PTR [rsp+0x8],xmm0
    49ac:	call   27b0 <sysconf@plt>
    49b1:	movsd  xmm0,QWORD PTR [rsp+0x8]
    49b7:	pxor   xmm1,xmm1
    49bb:	comisd xmm0,xmm1
    49bf:	jb     49d4 <__ctype_b_loc@plt+0x2184>
    49c1:	pxor   xmm2,xmm2
    49c5:	cvtsi2sd xmm2,rax
    49ca:	comisd xmm2,xmm1
    49ce:	jae    4a50 <__ctype_b_loc@plt+0x2200>
    49d4:	lea    rdi,[rsp+0x10]
    49d9:	call   27d0 <sysinfo@plt>
    49de:	test   eax,eax
    49e0:	jne    4a40 <__ctype_b_loc@plt+0x21f0>
    49e2:	mov    rax,QWORD PTR [rsp+0x38]
    49e7:	test   rax,rax
    49ea:	js     4a60 <__ctype_b_loc@plt+0x2210>
    49ec:	pxor   xmm0,xmm0
    49f0:	cvtsi2sd xmm0,rax
    49f5:	mov    rax,QWORD PTR [rsp+0x48]
    49fa:	test   rax,rax
    49fd:	js     4a83 <__ctype_b_loc@plt+0x2233>
    4a03:	pxor   xmm1,xmm1
    4a07:	cvtsi2sd xmm1,rax
    4a0c:	mov    eax,DWORD PTR [rsp+0x78]
    4a10:	addsd  xmm0,xmm1
    4a14:	pxor   xmm1,xmm1
    4a18:	cvtsi2sd xmm1,rax
    4a1d:	mulsd  xmm0,xmm1
    4a21:	mov    rax,QWORD PTR [rsp+0x88]
    4a29:	sub    rax,QWORD PTR fs:0x28
    4a32:	jne    4aa1 <__ctype_b_loc@plt+0x2251>
    4a34:	add    rsp,0x98
    4a3b:	ret    
    4a3c:	nop    DWORD PTR [rax+0x0]
    4a40:	call   4880 <__ctype_b_loc@plt+0x2030>
    4a45:	mulsd  xmm0,QWORD PTR [rip+0x4efb]        # 9948 <_obstack_memory_used@@Base+0x1988>
    4a4d:	jmp    4a21 <__ctype_b_loc@plt+0x21d1>
    4a4f:	nop
    4a50:	mulsd  xmm0,xmm2
    4a54:	jmp    4a21 <__ctype_b_loc@plt+0x21d1>
    4a56:	cs nop WORD PTR [rax+rax*1+0x0]
    4a60:	mov    rdx,rax
    4a63:	and    eax,0x1
    4a66:	pxor   xmm0,xmm0
    4a6a:	shr    rdx,1
    4a6d:	or     rdx,rax
    4a70:	mov    rax,QWORD PTR [rsp+0x48]
    4a75:	cvtsi2sd xmm0,rdx
    4a7a:	addsd  xmm0,xmm0
    4a7e:	test   rax,rax
    4a81:	jns    4a03 <__ctype_b_loc@plt+0x21b3>
    4a83:	mov    rdx,rax
    4a86:	and    eax,0x1
    4a89:	pxor   xmm1,xmm1
    4a8d:	shr    rdx,1
    4a90:	or     rdx,rax
    4a93:	cvtsi2sd xmm1,rdx
    4a98:	addsd  xmm1,xmm1
    4a9c:	jmp    4a0c <__ctype_b_loc@plt+0x21bc>
    4aa1:	call   2540 <__stack_chk_fail@plt>
    4aa6:	cs nop WORD PTR [rax+rax*1+0x0]
    4ab0:	endbr64 
    4ab4:	push   rbx
    4ab5:	test   rdi,rdi
    4ab8:	je     4b43 <__ctype_b_loc@plt+0x22f3>
    4abe:	mov    esi,0x2f
    4ac3:	mov    rbx,rdi
    4ac6:	call   2590 <strrchr@plt>
    4acb:	test   rax,rax
    4ace:	je     4b1b <__ctype_b_loc@plt+0x22cb>
    4ad0:	lea    r8,[rax+0x1]
    4ad4:	mov    rdx,r8
    4ad7:	sub    rdx,rbx
    4ada:	cmp    rdx,0x6
    4ade:	jle    4b1b <__ctype_b_loc@plt+0x22cb>
    4ae0:	lea    rsi,[rax-0x6]
    4ae4:	mov    ecx,0x7
    4ae9:	lea    rdi,[rip+0x4e98]        # 9988 <_obstack_memory_used@@Base+0x19c8>
    4af0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    4af2:	seta   dl
    4af5:	sbb    dl,0x0
    4af8:	test   dl,dl
    4afa:	jne    4b1b <__ctype_b_loc@plt+0x22cb>
    4afc:	cmp    BYTE PTR [rax+0x1],0x6c
    4b00:	jne    4b30 <__ctype_b_loc@plt+0x22e0>
    4b02:	cmp    BYTE PTR [r8+0x1],0x74
    4b07:	jne    4b30 <__ctype_b_loc@plt+0x22e0>
    4b09:	cmp    BYTE PTR [r8+0x2],0x2d
    4b0e:	jne    4b30 <__ctype_b_loc@plt+0x22e0>
    4b10:	lea    rbx,[rax+0x4]
    4b14:	mov    QWORD PTR [rip+0x8585],rbx        # d0a0 <__progname@@GLIBC_2.2.5>
    4b1b:	mov    QWORD PTR [rip+0x862e],rbx        # d150 <stderr@@GLIBC_2.2.5+0x70>
    4b22:	mov    QWORD PTR [rip+0x859f],rbx        # d0c8 <__progname_full@@GLIBC_2.2.5>
    4b29:	pop    rbx
    4b2a:	ret    
    4b2b:	nop    DWORD PTR [rax+rax*1+0x0]
    4b30:	mov    rbx,r8
    4b33:	mov    QWORD PTR [rip+0x8616],rbx        # d150 <stderr@@GLIBC_2.2.5+0x70>
    4b3a:	mov    QWORD PTR [rip+0x8587],rbx        # d0c8 <__progname_full@@GLIBC_2.2.5>
    4b41:	pop    rbx
    4b42:	ret    
    4b43:	mov    rcx,QWORD PTR [rip+0x8596]        # d0e0 <stderr@@GLIBC_2.2.5>
    4b4a:	mov    edx,0x37
    4b4f:	mov    esi,0x1
    4b54:	lea    rdi,[rip+0x4df5]        # 9950 <_obstack_memory_used@@Base+0x1990>
    4b5b:	call   2800 <fwrite@plt>
    4b60:	call   2470 <abort@plt>
    4b65:	cs nop WORD PTR [rax+rax*1+0x0]
    4b6f:	nop
    4b70:	push   rbp
    4b71:	mov    rbp,rdi
    4b74:	push   rbx
    4b75:	mov    ebx,esi
    4b77:	sub    rsp,0x8
    4b7b:	call   80e0 <_obstack_memory_used@@Base+0x120>
    4b80:	movzx  edx,BYTE PTR [rax]
    4b83:	and    edx,0xffffffdf
    4b86:	cmp    dl,0x55
    4b89:	jne    4bd8 <__ctype_b_loc@plt+0x2388>
    4b8b:	movzx  edx,BYTE PTR [rax+0x1]
    4b8f:	and    edx,0xffffffdf
    4b92:	cmp    dl,0x54
    4b95:	jne    4be9 <__ctype_b_loc@plt+0x2399>
    4b97:	movzx  edx,BYTE PTR [rax+0x2]
    4b9b:	and    edx,0xffffffdf
    4b9e:	cmp    dl,0x46
    4ba1:	jne    4be9 <__ctype_b_loc@plt+0x2399>
    4ba3:	cmp    BYTE PTR [rax+0x3],0x2d
    4ba7:	jne    4be9 <__ctype_b_loc@plt+0x2399>
    4ba9:	cmp    BYTE PTR [rax+0x4],0x38
    4bad:	jne    4be9 <__ctype_b_loc@plt+0x2399>
    4baf:	cmp    BYTE PTR [rax+0x5],0x0
    4bb3:	jne    4be9 <__ctype_b_loc@plt+0x2399>
    4bb5:	cmp    BYTE PTR [rbp+0x0],0x60
    4bb9:	lea    rax,[rip+0x4ddd]        # 999d <_obstack_memory_used@@Base+0x19dd>
    4bc0:	lea    rdx,[rip+0x4dcb]        # 9992 <_obstack_memory_used@@Base+0x19d2>
    4bc7:	cmovne rax,rdx
    4bcb:	add    rsp,0x8
    4bcf:	pop    rbx
    4bd0:	pop    rbp
    4bd1:	ret    
    4bd2:	nop    WORD PTR [rax+rax*1+0x0]
    4bd8:	cmp    dl,0x47
    4bdb:	jne    4be9 <__ctype_b_loc@plt+0x2399>
    4bdd:	movzx  edx,BYTE PTR [rax+0x1]
    4be1:	and    edx,0xffffffdf
    4be4:	cmp    dl,0x42
    4be7:	je     4c08 <__ctype_b_loc@plt+0x23b8>
    4be9:	cmp    ebx,0x9
    4bec:	lea    rax,[rip+0x4d9d]        # 9990 <_obstack_memory_used@@Base+0x19d0>
    4bf3:	lea    rdx,[rip+0x4da7]        # 99a1 <_obstack_memory_used@@Base+0x19e1>
    4bfa:	cmovne rax,rdx
    4bfe:	add    rsp,0x8
    4c02:	pop    rbx
    4c03:	pop    rbp
    4c04:	ret    
    4c05:	nop    DWORD PTR [rax]
    4c08:	cmp    BYTE PTR [rax+0x2],0x31
    4c0c:	jne    4be9 <__ctype_b_loc@plt+0x2399>
    4c0e:	cmp    BYTE PTR [rax+0x3],0x38
    4c12:	jne    4be9 <__ctype_b_loc@plt+0x2399>
    4c14:	cmp    BYTE PTR [rax+0x4],0x30
    4c18:	jne    4be9 <__ctype_b_loc@plt+0x2399>
    4c1a:	cmp    BYTE PTR [rax+0x5],0x33
    4c1e:	jne    4be9 <__ctype_b_loc@plt+0x2399>
    4c20:	cmp    BYTE PTR [rax+0x6],0x30
    4c24:	jne    4be9 <__ctype_b_loc@plt+0x2399>
    4c26:	cmp    BYTE PTR [rax+0x7],0x0
    4c2a:	jne    4be9 <__ctype_b_loc@plt+0x2399>
    4c2c:	cmp    BYTE PTR [rbp+0x0],0x60
    4c30:	lea    rax,[rip+0x4d5f]        # 9996 <_obstack_memory_used@@Base+0x19d6>
    4c37:	lea    rdx,[rip+0x4d5c]        # 999a <_obstack_memory_used@@Base+0x19da>
    4c3e:	cmovne rax,rdx
    4c42:	add    rsp,0x8
    4c46:	pop    rbx
    4c47:	pop    rbp
    4c48:	ret    
    4c49:	nop    DWORD PTR [rax+0x0]
    4c50:	push   r15
    4c52:	mov    r11,rcx
    4c55:	push   r14
    4c57:	mov    r14,rsi
    4c5a:	push   r13
    4c5c:	push   r12
    4c5e:	mov    r12d,r8d
    4c61:	push   rbp
    4c62:	push   rbx
    4c63:	sub    rsp,0xc8
    4c6a:	mov    rax,QWORD PTR [rsp+0x100]
    4c72:	mov    QWORD PTR [rsp+0x60],rdi
    4c77:	mov    QWORD PTR [rsp+0x20],rdx
    4c7c:	mov    QWORD PTR [rsp+0x18],rax
    4c81:	mov    rax,QWORD PTR [rsp+0x108]
    4c89:	mov    DWORD PTR [rsp+0x80],r9d
    4c91:	mov    QWORD PTR [rsp+0x98],rax
    4c99:	mov    rax,QWORD PTR [rsp+0x110]
    4ca1:	mov    QWORD PTR [rsp+0x90],rax
    4ca9:	mov    rax,QWORD PTR fs:0x28
    4cb2:	mov    QWORD PTR [rsp+0xb8],rax
    4cba:	xor    eax,eax
    4cbc:	nop    DWORD PTR [rax+0x0]
    4cc0:	mov    QWORD PTR [rsp+0x8],r11
    4cc5:	call   2520 <__ctype_get_mb_cur_max@plt>
    4cca:	mov    ebx,DWORD PTR [rsp+0x80]
    4cd1:	mov    QWORD PTR [rsp+0x58],rax
    4cd6:	and    ebx,0x2
    4cd9:	cmp    r12d,0xa
    4cdd:	ja     2860 <__ctype_b_loc@plt+0x10>
    4ce3:	lea    rcx,[rip+0x4d16]        # 9a00 <_obstack_memory_used@@Base+0x1a40>
    4cea:	mov    edx,r12d
    4ced:	mov    r11,QWORD PTR [rsp+0x8]
    4cf2:	movsxd rax,DWORD PTR [rcx+rdx*4]
    4cf6:	add    rax,rcx
    4cf9:	notrack jmp rax
    4cfc:	cmp    r12d,0xa
    4d00:	je     4d72 <__ctype_b_loc@plt+0x2522>
    4d02:	lea    rsi,[rip+0x4c9a]        # 99a3 <_obstack_memory_used@@Base+0x19e3>
    4d09:	xor    edi,edi
    4d0b:	mov    edx,0x5
    4d10:	mov    QWORD PTR [rsp+0x8],r11
    4d15:	call   2510 <dcgettext@plt>
    4d1a:	mov    r11,QWORD PTR [rsp+0x8]
    4d1f:	mov    rsi,rax
    4d22:	mov    QWORD PTR [rsp+0x98],rax
    4d2a:	lea    rax,[rip+0x4c72]        # 99a3 <_obstack_memory_used@@Base+0x19e3>
    4d31:	cmp    rsi,rax
    4d34:	je     5d2f <__ctype_b_loc@plt+0x34df>
    4d3a:	xor    edi,edi
    4d3c:	mov    edx,0x5
    4d41:	mov    QWORD PTR [rsp+0x8],r11
    4d46:	lea    rsi,[rip+0x4c54]        # 99a1 <_obstack_memory_used@@Base+0x19e1>
    4d4d:	call   2510 <dcgettext@plt>
    4d52:	mov    r11,QWORD PTR [rsp+0x8]
    4d57:	mov    rcx,rax
    4d5a:	mov    QWORD PTR [rsp+0x90],rax
    4d62:	lea    rax,[rip+0x4c38]        # 99a1 <_obstack_memory_used@@Base+0x19e1>
    4d69:	cmp    rcx,rax
    4d6c:	je     5d12 <__ctype_b_loc@plt+0x34c2>
    4d72:	xor    r15d,r15d
    4d75:	test   ebx,ebx
    4d77:	je     5b96 <__ctype_b_loc@plt+0x3346>
    4d7d:	test   ebx,ebx
    4d7f:	mov    rbx,QWORD PTR [rsp+0x90]
    4d87:	mov    QWORD PTR [rsp+0x8],r11
    4d8c:	mov    r13d,0x1
    4d92:	setne  BYTE PTR [rsp+0x43]
    4d97:	mov    rdi,rbx
    4d9a:	call   2530 <strlen@plt>
    4d9f:	mov    QWORD PTR [rsp+0x48],rbx
    4da4:	mov    r11,QWORD PTR [rsp+0x8]
    4da9:	mov    QWORD PTR [rsp+0x28],rax
    4dae:	mov    BYTE PTR [rsp+0x8],0x1
    4db3:	mov    BYTE PTR [rsp+0x85],0x0
    4dbb:	mov    BYTE PTR [rsp+0x42],0x0
    4dc0:	mov    QWORD PTR [rsp+0x50],0x0
    4dc9:	mov    BYTE PTR [rsp+0x10],r13b
    4dce:	mov    r13d,r12d
    4dd1:	mov    r12,QWORD PTR [rsp+0x60]
    4dd6:	xor    ebx,ebx
    4dd8:	mov    r9,r12
    4ddb:	mov    r8d,r13d
    4dde:	xchg   ax,ax
    4de0:	cmp    r11,rbx
    4de3:	setne  r12b
    4de7:	cmp    r11,0xffffffffffffffff
    4deb:	jne    4dfa <__ctype_b_loc@plt+0x25aa>
    4ded:	mov    rax,QWORD PTR [rsp+0x20]
    4df2:	cmp    BYTE PTR [rax+rbx*1],0x0
    4df6:	setne  r12b
    4dfa:	test   r12b,r12b
    4dfd:	je     5498 <__ctype_b_loc@plt+0x2c48>
    4e03:	mov    rdi,QWORD PTR [rsp+0x20]
    4e08:	cmp    r8d,0x2
    4e0c:	setne  r13b
    4e10:	lea    rbp,[rdi+rbx*1]
    4e14:	and    r13b,BYTE PTR [rsp+0x10]
    4e19:	je     5548 <__ctype_b_loc@plt+0x2cf8>
    4e1f:	mov    rax,QWORD PTR [rsp+0x28]
    4e24:	test   rax,rax
    4e27:	je     5690 <__ctype_b_loc@plt+0x2e40>
    4e2d:	lea    rdx,[rbx+rax*1]
    4e31:	cmp    r11,0xffffffffffffffff
    4e35:	jne    4e63 <__ctype_b_loc@plt+0x2613>
    4e37:	cmp    rax,0x1
    4e3b:	jbe    4e63 <__ctype_b_loc@plt+0x2613>
    4e3d:	mov    DWORD PTR [rsp+0x44],r8d
    4e42:	mov    QWORD PTR [rsp+0x38],r9
    4e47:	mov    QWORD PTR [rsp+0x30],rdx
    4e4c:	call   2530 <strlen@plt>
    4e51:	mov    r8d,DWORD PTR [rsp+0x44]
    4e56:	mov    r9,QWORD PTR [rsp+0x38]
    4e5b:	mov    rdx,QWORD PTR [rsp+0x30]
    4e60:	mov    r11,rax
    4e63:	cmp    rdx,r11
    4e66:	ja     5690 <__ctype_b_loc@plt+0x2e40>
    4e6c:	mov    rdx,QWORD PTR [rsp+0x28]
    4e71:	mov    rsi,QWORD PTR [rsp+0x48]
    4e76:	mov    rdi,rbp
    4e79:	mov    DWORD PTR [rsp+0x44],r8d
    4e7e:	mov    QWORD PTR [rsp+0x38],r11
    4e83:	mov    QWORD PTR [rsp+0x30],r9
    4e88:	call   2620 <memcmp@plt>
    4e8d:	mov    r9,QWORD PTR [rsp+0x30]
    4e92:	mov    r11,QWORD PTR [rsp+0x38]
    4e97:	test   eax,eax
    4e99:	mov    r8d,DWORD PTR [rsp+0x44]
    4e9e:	jne    5690 <__ctype_b_loc@plt+0x2e40>
    4ea4:	cmp    BYTE PTR [rsp+0x43],0x0
    4ea9:	jne    5d02 <__ctype_b_loc@plt+0x34b2>
    4eaf:	movzx  ebp,BYTE PTR [rbp+0x0]
    4eb3:	cmp    bpl,0x7e
    4eb7:	ja     4feb <__ctype_b_loc@plt+0x279b>
    4ebd:	lea    rcx,[rip+0x4b68]        # 9a2c <_obstack_memory_used@@Base+0x1a6c>
    4ec4:	movzx  edx,bpl
    4ec8:	movsxd rax,DWORD PTR [rcx+rdx*4]
    4ecc:	add    rax,rcx
    4ecf:	notrack jmp rax
    4ed2:	nop    WORD PTR [rax+rax*1+0x0]
    4ed8:	mov    eax,r13d
    4edb:	nop    DWORD PTR [rax+rax*1+0x0]
    4ee0:	mov    r12d,r13d
    4ee3:	mov    r13d,eax
    4ee6:	xor    eax,eax
    4ee8:	nop    DWORD PTR [rax+rax*1+0x0]
    4ef0:	mov    rsi,QWORD PTR [rsp+0x18]
    4ef5:	test   rsi,rsi
    4ef8:	je     4f0e <__ctype_b_loc@plt+0x26be>
    4efa:	mov    edx,ebp
    4efc:	mov    ecx,ebp
    4efe:	shr    dl,0x5
    4f01:	movzx  edx,dl
    4f04:	mov    edx,DWORD PTR [rsi+rdx*4]
    4f07:	shr    edx,cl
    4f09:	and    edx,0x1
    4f0c:	jne    4f17 <__ctype_b_loc@plt+0x26c7>
    4f0e:	test   r13b,r13b
    4f11:	je     4fd1 <__ctype_b_loc@plt+0x2781>
    4f17:	cmp    r8d,0x2
    4f1b:	sete   dl
    4f1e:	cmp    BYTE PTR [rsp+0x43],0x0
    4f23:	mov    eax,edx
    4f25:	jne    5328 <__ctype_b_loc@plt+0x2ad8>
    4f2b:	movzx  eax,BYTE PTR [rsp+0x42]
    4f30:	xor    eax,0x1
    4f33:	and    al,dl
    4f35:	je     4f67 <__ctype_b_loc@plt+0x2717>
    4f37:	cmp    r14,r15
    4f3a:	jbe    4f41 <__ctype_b_loc@plt+0x26f1>
    4f3c:	mov    BYTE PTR [r9+r15*1],0x27
    4f41:	lea    rdx,[r15+0x1]
    4f45:	cmp    r14,rdx
    4f48:	jbe    4f50 <__ctype_b_loc@plt+0x2700>
    4f4a:	mov    BYTE PTR [r9+r15*1+0x1],0x24
    4f50:	lea    rdx,[r15+0x2]
    4f54:	cmp    r14,rdx
    4f57:	jbe    4f5f <__ctype_b_loc@plt+0x270f>
    4f59:	mov    BYTE PTR [r9+r15*1+0x2],0x27
    4f5f:	mov    BYTE PTR [rsp+0x42],al
    4f63:	add    r15,0x3
    4f67:	cmp    r15,r14
    4f6a:	jae    4f71 <__ctype_b_loc@plt+0x2721>
    4f6c:	mov    BYTE PTR [r9+r15*1],0x5c
    4f71:	add    r15,0x1
    4f75:	add    rbx,0x1
    4f79:	cmp    r15,r14
    4f7c:	jae    4f82 <__ctype_b_loc@plt+0x2732>
    4f7e:	mov    BYTE PTR [r9+r15*1],bpl
    4f82:	movzx  edi,BYTE PTR [rsp+0x8]
    4f87:	add    r15,0x1
    4f8b:	mov    eax,0x0
    4f90:	test   r12b,r12b
    4f93:	cmove  edi,eax
    4f96:	mov    BYTE PTR [rsp+0x8],dil
    4f9b:	jmp    4de0 <__ctype_b_loc@plt+0x2590>
    4fa0:	xor    r13d,r13d
    4fa3:	xor    eax,eax
    4fa5:	xor    r12d,r12d
    4fa8:	movzx  edx,BYTE PTR [rsp+0x10]
    4fad:	xor    edx,0x1
    4fb0:	or     al,dl
    4fb2:	je     4ef0 <__ctype_b_loc@plt+0x26a0>
    4fb8:	xor    eax,eax
    4fba:	cmp    BYTE PTR [rsp+0x43],0x0
    4fbf:	jne    4ef0 <__ctype_b_loc@plt+0x26a0>
    4fc5:	nop    DWORD PTR [rax]
    4fc8:	test   r13b,r13b
    4fcb:	jne    4f17 <__ctype_b_loc@plt+0x26c7>
    4fd1:	xor    eax,0x1
    4fd4:	add    rbx,0x1
    4fd8:	and    al,BYTE PTR [rsp+0x42]
    4fdc:	jmp    55b0 <__ctype_b_loc@plt+0x2d60>
    4fe1:	nop    DWORD PTR [rax+0x0]
    4fe8:	xor    r13d,r13d
    4feb:	cmp    QWORD PTR [rsp+0x58],0x1
    4ff1:	jne    5760 <__ctype_b_loc@plt+0x2f10>
    4ff7:	mov    DWORD PTR [rsp+0x44],r8d
    4ffc:	mov    QWORD PTR [rsp+0x38],r11
    5001:	mov    QWORD PTR [rsp+0x30],r9
    5006:	call   2850 <__ctype_b_loc@plt>
    500b:	mov    r9,QWORD PTR [rsp+0x30]
    5010:	mov    r11,QWORD PTR [rsp+0x38]
    5015:	mov    r10,rax
    5018:	movzx  eax,bpl
    501c:	mov    r8d,DWORD PTR [rsp+0x44]
    5021:	mov    rdx,QWORD PTR [r10]
    5024:	test   BYTE PTR [rdx+rax*2+0x1],0x40
    5029:	mov    eax,0x1
    502e:	setne  r12b
    5032:	sete   dl
    5035:	and    dl,BYTE PTR [rsp+0x10]
    5039:	test   dl,dl
    503b:	jne    5b22 <__ctype_b_loc@plt+0x32d2>
    5041:	nop    DWORD PTR [rax+0x0]
    5048:	cmp    r8d,0x2
    504c:	sete   al
    504f:	jmp    4fa8 <__ctype_b_loc@plt+0x2758>
    5054:	mov    QWORD PTR [rsp+0x8],r11
    5059:	xor    ebx,ebx
    505b:	and    DWORD PTR [rsp+0x80],0xfffffffd
    5063:	call   2520 <__ctype_get_mb_cur_max@plt>
    5068:	mov    r11,QWORD PTR [rsp+0x8]
    506d:	mov    QWORD PTR [rsp+0x18],0x0
    5076:	mov    QWORD PTR [rsp+0x58],rax
    507b:	lea    rax,[rip+0x490e]        # 9990 <_obstack_memory_used@@Base+0x19d0>
    5082:	mov    BYTE PTR [rsp+0x43],0x1
    5087:	xor    r15d,r15d
    508a:	mov    r12d,0x5
    5090:	mov    QWORD PTR [rsp+0x48],rax
    5095:	mov    r13d,0x1
    509b:	mov    QWORD PTR [rsp+0x28],0x1
    50a4:	test   ebx,ebx
    50a6:	jne    4dae <__ctype_b_loc@plt+0x255e>
    50ac:	lea    rax,[rip+0x48dd]        # 9990 <_obstack_memory_used@@Base+0x19d0>
    50b3:	mov    BYTE PTR [rsp+0x43],0x0
    50b8:	mov    r12d,0x5
    50be:	mov    r15d,0x1
    50c4:	mov    QWORD PTR [rsp+0x48],rax
    50c9:	mov    r13d,0x1
    50cf:	mov    QWORD PTR [rsp+0x28],0x1
    50d8:	mov    BYTE PTR [rsp+0x42],0x0
    50dd:	mov    BYTE PTR [rsp+0x85],0x0
    50e5:	mov    BYTE PTR [rsp+0x8],0x1
    50ea:	mov    QWORD PTR [rsp+0x50],0x0
    50f3:	test   r14,r14
    50f6:	je     4dc9 <__ctype_b_loc@plt+0x2579>
    50fc:	mov    rax,QWORD PTR [rsp+0x60]
    5101:	mov    BYTE PTR [rax],0x22
    5104:	jmp    4dc9 <__ctype_b_loc@plt+0x2579>
    5109:	mov    BYTE PTR [rsp+0x43],0x0
    510e:	mov    r13d,0x1
    5114:	xor    r15d,r15d
    5117:	mov    QWORD PTR [rsp+0x28],0x0
    5120:	mov    QWORD PTR [rsp+0x48],0x0
    5129:	jmp    4dae <__ctype_b_loc@plt+0x255e>
    512e:	lea    rax,[rip+0x485b]        # 9990 <_obstack_memory_used@@Base+0x19d0>
    5135:	mov    BYTE PTR [rsp+0x43],0x1
    513a:	xor    r15d,r15d
    513d:	mov    r13d,0x1
    5143:	mov    QWORD PTR [rsp+0x28],0x1
    514c:	mov    r12d,0x5
    5152:	mov    QWORD PTR [rsp+0x48],rax
    5157:	jmp    4dae <__ctype_b_loc@plt+0x255e>
    515c:	mov    BYTE PTR [rsp+0x43],0x1
    5161:	mov    r13d,0x1
    5167:	lea    rax,[rip+0x4833]        # 99a1 <_obstack_memory_used@@Base+0x19e1>
    516e:	xor    r15d,r15d
    5171:	mov    r12d,0x2
    5177:	mov    QWORD PTR [rsp+0x28],0x1
    5180:	mov    QWORD PTR [rsp+0x48],rax
    5185:	jmp    4dae <__ctype_b_loc@plt+0x255e>
    518a:	mov    r13d,0x1
    5190:	test   ebx,ebx
    5192:	je     5367 <__ctype_b_loc@plt+0x2b17>
    5198:	mov    BYTE PTR [rsp+0x43],0x1
    519d:	xor    r13d,r13d
    51a0:	jmp    5167 <__ctype_b_loc@plt+0x2917>
    51a2:	mov    BYTE PTR [rsp+0x43],0x0
    51a7:	xor    r13d,r13d
    51aa:	xor    r15d,r15d
    51ad:	mov    QWORD PTR [rsp+0x28],0x0
    51b6:	mov    QWORD PTR [rsp+0x48],0x0
    51bf:	jmp    4dae <__ctype_b_loc@plt+0x255e>
    51c4:	xor    r13d,r13d
    51c7:	cmp    r11,0x1
    51cb:	setne  dl
    51ce:	cmp    r11,0xffffffffffffffff
    51d2:	jne    51e0 <__ctype_b_loc@plt+0x2990>
    51d4:	mov    rax,QWORD PTR [rsp+0x20]
    51d9:	cmp    BYTE PTR [rax+0x1],0x0
    51dd:	setne  dl
    51e0:	cmp    r8d,0x2
    51e4:	sete   al
    51e7:	test   dl,dl
    51e9:	jne    5539 <__ctype_b_loc@plt+0x2ce9>
    51ef:	test   rbx,rbx
    51f2:	jne    5539 <__ctype_b_loc@plt+0x2ce9>
    51f8:	cmp    BYTE PTR [rsp+0x43],0x0
    51fd:	je     4fa8 <__ctype_b_loc@plt+0x2758>
    5203:	test   al,al
    5205:	je     4fa8 <__ctype_b_loc@plt+0x2758>
    520b:	movzx  r13d,BYTE PTR [rsp+0x10]
    5211:	mov    r12d,0x2
    5217:	mov    eax,r13d
    521a:	and    DWORD PTR [rsp+0x80],0xfffffffd
    5222:	test   al,al
    5224:	jne    5344 <__ctype_b_loc@plt+0x2af4>
    522a:	mov    QWORD PTR [rsp+0x18],0x0
    5233:	jmp    4cc0 <__ctype_b_loc@plt+0x2470>
    5238:	xor    r13d,r13d
    523b:	cmp    r8d,0x2
    523f:	je     5740 <__ctype_b_loc@plt+0x2ef0>
    5245:	cmp    r8d,0x5
    5249:	jne    5270 <__ctype_b_loc@plt+0x2a20>
    524b:	test   BYTE PTR [rsp+0x80],0x4
    5253:	je     5270 <__ctype_b_loc@plt+0x2a20>
    5255:	lea    rax,[rbx+0x2]
    5259:	cmp    rax,r11
    525c:	jae    5270 <__ctype_b_loc@plt+0x2a20>
    525e:	mov    rsi,QWORD PTR [rsp+0x20]
    5263:	cmp    BYTE PTR [rsi+rbx*1+0x1],0x3f
    5268:	je     5bcb <__ctype_b_loc@plt+0x337b>
    526e:	xchg   ax,ax
    5270:	xor    eax,eax
    5272:	xor    r12d,r12d
    5275:	mov    ebp,0x3f
    527a:	jmp    4fa8 <__ctype_b_loc@plt+0x2758>
    527f:	xor    r13d,r13d
    5282:	cmp    r8d,0x2
    5286:	je     56f0 <__ctype_b_loc@plt+0x2ea0>
    528c:	mov    BYTE PTR [rsp+0x85],r12b
    5294:	xor    eax,eax
    5296:	mov    ebp,0x27
    529b:	jmp    4fa8 <__ctype_b_loc@plt+0x2758>
    52a0:	mov    eax,r13d
    52a3:	test   rbx,rbx
    52a6:	jne    56ca <__ctype_b_loc@plt+0x2e7a>
    52ac:	mov    r12d,r13d
    52af:	mov    r13d,eax
    52b2:	xor    eax,eax
    52b4:	jmp    4fa8 <__ctype_b_loc@plt+0x2758>
    52b9:	cmp    r8d,0x2
    52bd:	je     5590 <__ctype_b_loc@plt+0x2d40>
    52c3:	movzx  esi,BYTE PTR [rsp+0x43]
    52c8:	test   BYTE PTR [rsp+0x10],sil
    52cd:	je     52db <__ctype_b_loc@plt+0x2a8b>
    52cf:	cmp    QWORD PTR [rsp+0x28],0x0
    52d5:	jne    559b <__ctype_b_loc@plt+0x2d4b>
    52db:	mov    ebp,0x5c
    52e0:	mov    eax,0x5c
    52e5:	nop    DWORD PTR [rax]
    52e8:	cmp    BYTE PTR [rsp+0x10],0x0
    52ed:	jne    5ecc <__ctype_b_loc@plt+0x367c>
    52f3:	xor    r12d,r12d
    52f6:	xor    eax,eax
    52f8:	cmp    BYTE PTR [rsp+0x43],0x0
    52fd:	jne    4ef0 <__ctype_b_loc@plt+0x26a0>
    5303:	jmp    4fc8 <__ctype_b_loc@plt+0x2778>
    5308:	mov    ebp,0x72
    530d:	xor    r12d,r12d
    5310:	cmp    r8d,0x2
    5314:	sete   dl
    5317:	cmp    BYTE PTR [rsp+0x43],0x0
    531c:	mov    eax,edx
    531e:	je     4f2b <__ctype_b_loc@plt+0x26db>
    5324:	nop    DWORD PTR [rax+0x0]
    5328:	movzx  r13d,BYTE PTR [rsp+0x10]
    532e:	mov    r12d,r8d
    5331:	and    eax,r13d
    5334:	and    DWORD PTR [rsp+0x80],0xfffffffd
    533c:	test   al,al
    533e:	je     522a <__ctype_b_loc@plt+0x29da>
    5344:	mov    QWORD PTR [rsp+0x8],r11
    5349:	mov    r13d,0x1
    534f:	call   2520 <__ctype_get_mb_cur_max@plt>
    5354:	mov    r11,QWORD PTR [rsp+0x8]
    5359:	mov    QWORD PTR [rsp+0x18],0x0
    5362:	mov    QWORD PTR [rsp+0x58],rax
    5367:	lea    rax,[rip+0x4633]        # 99a1 <_obstack_memory_used@@Base+0x19e1>
    536e:	mov    BYTE PTR [rsp+0x43],0x0
    5373:	mov    r12d,0x2
    5379:	mov    r15d,0x1
    537f:	mov    QWORD PTR [rsp+0x48],rax
    5384:	mov    QWORD PTR [rsp+0x28],0x1
    538d:	mov    BYTE PTR [rsp+0x42],0x0
    5392:	mov    BYTE PTR [rsp+0x85],0x0
    539a:	mov    BYTE PTR [rsp+0x8],0x1
    539f:	mov    QWORD PTR [rsp+0x50],0x0
    53a8:	test   r14,r14
    53ab:	je     4dc9 <__ctype_b_loc@plt+0x2579>
    53b1:	xor    eax,eax
    53b3:	jmp    54ff <__ctype_b_loc@plt+0x2caf>
    53b8:	nop    DWORD PTR [rax+rax*1+0x0]
    53c0:	mov    ebp,0x66
    53c5:	cmp    r8d,0x2
    53c9:	sete   al
    53cc:	cmp    BYTE PTR [rsp+0x43],0x0
    53d1:	jne    53f8 <__ctype_b_loc@plt+0x2ba8>
    53d3:	xor    r12d,r12d
    53d6:	jmp    4f67 <__ctype_b_loc@plt+0x2717>
    53db:	mov    ebp,0x6e
    53e0:	jmp    530d <__ctype_b_loc@plt+0x2abd>
    53e5:	cmp    r8d,0x2
    53e9:	mov    ebp,0x61
    53ee:	sete   al
    53f1:	cmp    BYTE PTR [rsp+0x43],0x0
    53f6:	je     53d3 <__ctype_b_loc@plt+0x2b83>
    53f8:	movzx  r13d,BYTE PTR [rsp+0x43]
    53fe:	mov    r12d,r8d
    5401:	jmp    5331 <__ctype_b_loc@plt+0x2ae1>
    5406:	mov    ebp,0x62
    540b:	jmp    53c5 <__ctype_b_loc@plt+0x2b75>
    540d:	cmp    BYTE PTR [rsp+0x43],0x0
    5412:	jne    5d59 <__ctype_b_loc@plt+0x3509>
    5418:	xor    r13d,r13d
    541b:	movzx  eax,BYTE PTR [rsp+0x42]
    5420:	cmp    r8d,0x2
    5424:	sete   dl
    5427:	xor    eax,0x1
    542a:	and    al,dl
    542c:	je     5a80 <__ctype_b_loc@plt+0x3230>
    5432:	cmp    r14,r15
    5435:	jbe    543c <__ctype_b_loc@plt+0x2bec>
    5437:	mov    BYTE PTR [r9+r15*1],0x27
    543c:	lea    rcx,[r15+0x1]
    5440:	cmp    r14,rcx
    5443:	jbe    544b <__ctype_b_loc@plt+0x2bfb>
    5445:	mov    BYTE PTR [r9+r15*1+0x1],0x24
    544b:	lea    rcx,[r15+0x2]
    544f:	cmp    r14,rcx
    5452:	jbe    545a <__ctype_b_loc@plt+0x2c0a>
    5454:	mov    BYTE PTR [r9+r15*1+0x2],0x27
    545a:	lea    rcx,[r15+0x3]
    545e:	cmp    r14,rcx
    5461:	ja     5a8d <__ctype_b_loc@plt+0x323d>
    5467:	mov    BYTE PTR [rsp+0x42],al
    546b:	add    r15,0x4
    546f:	xor    r12d,r12d
    5472:	mov    ebp,0x30
    5477:	jmp    4f0e <__ctype_b_loc@plt+0x26be>
    547c:	xor    r13d,r13d
    547f:	mov    ebp,0x9
    5484:	mov    eax,0x74
    5489:	jmp    52e8 <__ctype_b_loc@plt+0x2a98>
    548e:	mov    ebp,0x76
    5493:	jmp    530d <__ctype_b_loc@plt+0x2abd>
    5498:	movzx  ebx,BYTE PTR [rsp+0x43]
    549d:	cmp    r8d,0x2
    54a1:	mov    r12,r9
    54a4:	sete   al
    54a7:	test   r15,r15
    54aa:	mov    edx,ebx
    54ac:	sete   cl
    54af:	and    edx,eax
    54b1:	test   cl,dl
    54b3:	jne    5e40 <__ctype_b_loc@plt+0x35f0>
    54b9:	xor    ebx,0x1
    54bc:	and    al,bl
    54be:	je     5e36 <__ctype_b_loc@plt+0x35e6>
    54c4:	cmp    BYTE PTR [rsp+0x85],0x0
    54cc:	je     5e2e <__ctype_b_loc@plt+0x35de>
    54d2:	cmp    BYTE PTR [rsp+0x8],0x0
    54d7:	jne    5de8 <__ctype_b_loc@plt+0x3598>
    54dd:	test   r14,r14
    54e0:	movzx  r13d,BYTE PTR [rsp+0x10]
    54e6:	sete   al
    54e9:	cmp    QWORD PTR [rsp+0x50],0x0
    54ef:	setne  dl
    54f2:	and    al,dl
    54f4:	je     5d68 <__ctype_b_loc@plt+0x3518>
    54fa:	mov    r14,QWORD PTR [rsp+0x50]
    54ff:	mov    rcx,QWORD PTR [rsp+0x60]
    5504:	mov    BYTE PTR [rsp+0x85],al
    550b:	lea    rax,[rip+0x448f]        # 99a1 <_obstack_memory_used@@Base+0x19e1>
    5512:	mov    r15d,0x1
    5518:	mov    BYTE PTR [rsp+0x43],0x0
    551d:	mov    r12d,0x2
    5523:	mov    BYTE PTR [rcx],0x27
    5526:	mov    QWORD PTR [rsp+0x28],0x1
    552f:	mov    QWORD PTR [rsp+0x48],rax
    5534:	jmp    4dc9 <__ctype_b_loc@plt+0x2579>
    5539:	xor    r12d,r12d
    553c:	jmp    4fa8 <__ctype_b_loc@plt+0x2758>
    5541:	nop    DWORD PTR [rax+0x0]
    5548:	movzx  ebp,BYTE PTR [rbp+0x0]
    554c:	cmp    bpl,0x7e
    5550:	ja     4feb <__ctype_b_loc@plt+0x279b>
    5556:	lea    rcx,[rip+0x46cb]        # 9c28 <_obstack_memory_used@@Base+0x1c68>
    555d:	movzx  edx,bpl
    5561:	movsxd rax,DWORD PTR [rcx+rdx*4]
    5565:	add    rax,rcx
    5568:	notrack jmp rax
    556b:	nop    DWORD PTR [rax+rax*1+0x0]
    5570:	cmp    r8d,0x2
    5574:	sete   al
    5577:	xor    r12d,r12d
    557a:	jmp    51f8 <__ctype_b_loc@plt+0x29a8>
    557f:	cmp    r8d,0x2
    5583:	sete   al
    5586:	jmp    51ef <__ctype_b_loc@plt+0x299f>
    558b:	nop    DWORD PTR [rax+rax*1+0x0]
    5590:	cmp    BYTE PTR [rsp+0x43],0x0
    5595:	jne    5cf1 <__ctype_b_loc@plt+0x34a1>
    559b:	movzx  eax,BYTE PTR [rsp+0x42]
    55a0:	add    rbx,0x1
    55a4:	xor    r12d,r12d
    55a7:	mov    ebp,0x5c
    55ac:	nop    DWORD PTR [rax+0x0]
    55b0:	test   al,al
    55b2:	je     4f79 <__ctype_b_loc@plt+0x2729>
    55b8:	cmp    r14,r15
    55bb:	jbe    55c2 <__ctype_b_loc@plt+0x2d72>
    55bd:	mov    BYTE PTR [r9+r15*1],0x27
    55c2:	lea    rax,[r15+0x1]
    55c6:	cmp    r14,rax
    55c9:	jbe    55d1 <__ctype_b_loc@plt+0x2d81>
    55cb:	mov    BYTE PTR [r9+r15*1+0x1],0x27
    55d1:	mov    BYTE PTR [rsp+0x42],0x0
    55d6:	add    r15,0x2
    55da:	jmp    4f79 <__ctype_b_loc@plt+0x2729>
    55df:	cmp    r8d,0x2
    55e3:	mov    ebp,0x20
    55e8:	sete   al
    55eb:	jmp    51f8 <__ctype_b_loc@plt+0x29a8>
    55f0:	mov    ebp,0xc
    55f5:	mov    eax,0x66
    55fa:	jmp    52e8 <__ctype_b_loc@plt+0x2a98>
    55ff:	mov    ebp,0x9
    5604:	mov    eax,0x74
    5609:	cmp    r8d,0x2
    560d:	sete   r13b
    5611:	and    r13b,BYTE PTR [rsp+0x43]
    5616:	je     52e8 <__ctype_b_loc@plt+0x2a98>
    561c:	jmp    520b <__ctype_b_loc@plt+0x29bb>
    5621:	mov    ebp,0x8
    5626:	mov    eax,0x62
    562b:	jmp    52e8 <__ctype_b_loc@plt+0x2a98>
    5630:	cmp    BYTE PTR [rsp+0x10],0x0
    5635:	jne    540d <__ctype_b_loc@plt+0x2bbd>
    563b:	xor    r13d,r13d
    563e:	xor    ebp,ebp
    5640:	test   BYTE PTR [rsp+0x80],0x1
    5648:	je     52f3 <__ctype_b_loc@plt+0x2aa3>
    564e:	add    rbx,0x1
    5652:	jmp    4de0 <__ctype_b_loc@plt+0x2590>
    5657:	mov    ebp,0xd
    565c:	mov    eax,0x72
    5661:	jmp    5609 <__ctype_b_loc@plt+0x2db9>
    5663:	mov    ebp,0xb
    5668:	mov    eax,0x76
    566d:	jmp    52e8 <__ctype_b_loc@plt+0x2a98>
    5672:	mov    ebp,0xa
    5677:	mov    eax,0x6e
    567c:	jmp    5609 <__ctype_b_loc@plt+0x2db9>
    567e:	mov    ebp,0x7
    5683:	mov    eax,0x61
    5688:	jmp    52e8 <__ctype_b_loc@plt+0x2a98>
    568d:	nop    DWORD PTR [rax]
    5690:	movzx  ebp,BYTE PTR [rbp+0x0]
    5694:	cmp    bpl,0x7e
    5698:	ja     4fe8 <__ctype_b_loc@plt+0x2798>
    569e:	lea    rcx,[rip+0x477f]        # 9e24 <_obstack_memory_used@@Base+0x1e64>
    56a5:	movzx  edx,bpl
    56a9:	movsxd rax,DWORD PTR [rcx+rdx*4]
    56ad:	add    rax,rcx
    56b0:	notrack jmp rax
    56b3:	nop    DWORD PTR [rax+rax*1+0x0]
    56b8:	xor    eax,eax
    56ba:	jmp    4ee0 <__ctype_b_loc@plt+0x2690>
    56bf:	xor    eax,eax
    56c1:	test   rbx,rbx
    56c4:	je     52ac <__ctype_b_loc@plt+0x2a5c>
    56ca:	mov    r13d,eax
    56cd:	xor    r12d,r12d
    56d0:	xor    eax,eax
    56d2:	jmp    4ef0 <__ctype_b_loc@plt+0x26a0>
    56d7:	xor    eax,eax
    56d9:	mov    ebp,0x20
    56de:	jmp    4ee0 <__ctype_b_loc@plt+0x2690>
    56e3:	xor    r13d,r13d
    56e6:	jmp    52c3 <__ctype_b_loc@plt+0x2a73>
    56eb:	nop    DWORD PTR [rax+rax*1+0x0]
    56f0:	cmp    BYTE PTR [rsp+0x43],0x0
    56f5:	jne    5cf1 <__ctype_b_loc@plt+0x34a1>
    56fb:	test   r14,r14
    56fe:	je     5ae9 <__ctype_b_loc@plt+0x3299>
    5704:	xor    edx,edx
    5706:	cmp    QWORD PTR [rsp+0x50],0x0
    570c:	jne    5ae9 <__ctype_b_loc@plt+0x3299>
    5712:	mov    QWORD PTR [rsp+0x50],r14
    5717:	add    r15,0x3
    571b:	xor    eax,eax
    571d:	mov    r14,rdx
    5720:	mov    BYTE PTR [rsp+0x85],r12b
    5728:	mov    ebp,0x27
    572d:	mov    BYTE PTR [rsp+0x42],0x0
    5732:	jmp    4f0e <__ctype_b_loc@plt+0x26be>
    5737:	nop    WORD PTR [rax+rax*1+0x0]
    5740:	cmp    BYTE PTR [rsp+0x43],0x0
    5745:	jne    5cf1 <__ctype_b_loc@plt+0x34a1>
    574b:	xor    r12d,r12d
    574e:	xor    eax,eax
    5750:	mov    ebp,0x3f
    5755:	jmp    4f0e <__ctype_b_loc@plt+0x26be>
    575a:	nop    WORD PTR [rax+rax*1+0x0]
    5760:	lea    rax,[rsp+0xb0]
    5768:	mov    QWORD PTR [rsp+0xb0],0x0
    5774:	mov    QWORD PTR [rsp+0x68],rax
    5779:	cmp    r11,0xffffffffffffffff
    577d:	jne    57a0 <__ctype_b_loc@plt+0x2f50>
    577f:	mov    rdi,QWORD PTR [rsp+0x20]
    5784:	mov    DWORD PTR [rsp+0x38],r8d
    5789:	mov    QWORD PTR [rsp+0x30],r9
    578e:	call   2530 <strlen@plt>
    5793:	mov    r8d,DWORD PTR [rsp+0x38]
    5798:	mov    r9,QWORD PTR [rsp+0x30]
    579d:	mov    r11,rax
    57a0:	mov    QWORD PTR [rsp+0x38],rbx
    57a5:	xor    ecx,ecx
    57a7:	lea    rax,[rsp+0xac]
    57af:	mov    QWORD PTR [rsp+0x70],r9
    57b4:	mov    QWORD PTR [rsp+0x78],r14
    57b9:	mov    QWORD PTR [rsp+0x30],r11
    57be:	mov    DWORD PTR [rsp+0x44],r8d
    57c3:	mov    BYTE PTR [rsp+0x87],r13b
    57cb:	mov    r13,QWORD PTR [rsp+0x68]
    57d0:	mov    BYTE PTR [rsp+0x86],bpl
    57d8:	mov    rbp,rcx
    57db:	mov    QWORD PTR [rsp+0x88],r15
    57e3:	mov    r15,rax
    57e6:	mov    rax,QWORD PTR [rsp+0x38]
    57eb:	mov    rdx,QWORD PTR [rsp+0x30]
    57f0:	mov    rcx,r13
    57f3:	mov    rdi,r15
    57f6:	lea    rbx,[rax+rbp*1]
    57fa:	mov    rax,QWORD PTR [rsp+0x20]
    57ff:	sub    rdx,rbx
    5802:	lea    rsi,[rax+rbx*1]
    5806:	call   7c00 <__ctype_b_loc@plt+0x53b0>
    580b:	mov    r14,rax
    580e:	test   rax,rax
    5811:	je     585f <__ctype_b_loc@plt+0x300f>
    5813:	cmp    rax,0xffffffffffffffff
    5817:	je     5c42 <__ctype_b_loc@plt+0x33f2>
    581d:	cmp    rax,0xfffffffffffffffe
    5821:	je     5c84 <__ctype_b_loc@plt+0x3434>
    5827:	cmp    DWORD PTR [rsp+0x44],0x2
    582c:	jne    5839 <__ctype_b_loc@plt+0x2fe9>
    582e:	cmp    BYTE PTR [rsp+0x43],0x0
    5833:	jne    59e0 <__ctype_b_loc@plt+0x3190>
    5839:	mov    edi,DWORD PTR [rsp+0xac]
    5840:	call   2830 <iswprint@plt>
    5845:	mov    rdi,r13
    5848:	test   eax,eax
    584a:	mov    eax,0x0
    584f:	cmove  r12d,eax
    5853:	add    rbp,r14
    5856:	call   2820 <mbsinit@plt>
    585b:	test   eax,eax
    585d:	je     57e6 <__ctype_b_loc@plt+0x2f96>
    585f:	mov    rax,rbp
    5862:	mov    edx,r12d
    5865:	mov    rbx,QWORD PTR [rsp+0x38]
    586a:	mov    r9,QWORD PTR [rsp+0x70]
    586f:	movzx  ebp,BYTE PTR [rsp+0x86]
    5877:	mov    r15,QWORD PTR [rsp+0x88]
    587f:	xor    edx,0x1
    5882:	movzx  r13d,BYTE PTR [rsp+0x87]
    588b:	mov    r14,QWORD PTR [rsp+0x78]
    5890:	mov    r11,QWORD PTR [rsp+0x30]
    5895:	mov    r8d,DWORD PTR [rsp+0x44]
    589a:	and    dl,BYTE PTR [rsp+0x10]
    589e:	cmp    rax,0x1
    58a2:	jbe    5039 <__ctype_b_loc@plt+0x27e9>
    58a8:	mov    rcx,rax
    58ab:	mov    BYTE PTR [rsp+0x30],r12b
    58b0:	movzx  edi,BYTE PTR [rsp+0x42]
    58b5:	xor    esi,esi
    58b7:	movzx  r12d,BYTE PTR [rsp+0x43]
    58bd:	mov    r10,QWORD PTR [rsp+0x20]
    58c2:	add    rcx,rbx
    58c5:	jmp    597f <__ctype_b_loc@plt+0x312f>
    58ca:	nop    WORD PTR [rax+rax*1+0x0]
    58d0:	cmp    r8d,0x2
    58d4:	sete   sil
    58d8:	mov    eax,esi
    58da:	test   r12b,r12b
    58dd:	jne    5b3f <__ctype_b_loc@plt+0x32ef>
    58e3:	mov    eax,edi
    58e5:	xor    eax,0x1
    58e8:	and    al,sil
    58eb:	je     591b <__ctype_b_loc@plt+0x30cb>
    58ed:	cmp    r14,r15
    58f0:	jbe    58f7 <__ctype_b_loc@plt+0x30a7>
    58f2:	mov    BYTE PTR [r9+r15*1],0x27
    58f7:	lea    rsi,[r15+0x1]
    58fb:	cmp    r14,rsi
    58fe:	jbe    5906 <__ctype_b_loc@plt+0x30b6>
    5900:	mov    BYTE PTR [r9+r15*1+0x1],0x24
    5906:	lea    rsi,[r15+0x2]
    590a:	cmp    r14,rsi
    590d:	jbe    5915 <__ctype_b_loc@plt+0x30c5>
    590f:	mov    BYTE PTR [r9+r15*1+0x2],0x27
    5915:	add    r15,0x3
    5919:	mov    edi,eax
    591b:	cmp    r14,r15
    591e:	jbe    5925 <__ctype_b_loc@plt+0x30d5>
    5920:	mov    BYTE PTR [r9+r15*1],0x5c
    5925:	lea    rax,[r15+0x1]
    5929:	cmp    r14,rax
    592c:	jbe    593b <__ctype_b_loc@plt+0x30eb>
    592e:	mov    eax,ebp
    5930:	shr    al,0x6
    5933:	add    eax,0x30
    5936:	mov    BYTE PTR [r9+r15*1+0x1],al
    593b:	lea    rax,[r15+0x2]
    593f:	cmp    r14,rax
    5942:	jbe    5954 <__ctype_b_loc@plt+0x3104>
    5944:	mov    eax,ebp
    5946:	shr    al,0x3
    5949:	and    eax,0x7
    594c:	add    eax,0x30
    594f:	mov    BYTE PTR [r9+r15*1+0x2],al
    5954:	and    ebp,0x7
    5957:	add    rbx,0x1
    595b:	add    r15,0x3
    595f:	add    ebp,0x30
    5962:	cmp    rcx,rbx
    5965:	jbe    5b47 <__ctype_b_loc@plt+0x32f7>
    596b:	mov    esi,edx
    596d:	cmp    r14,r15
    5970:	jbe    5976 <__ctype_b_loc@plt+0x3126>
    5972:	mov    BYTE PTR [r9+r15*1],bpl
    5976:	movzx  ebp,BYTE PTR [r10+rbx*1]
    597b:	add    r15,0x1
    597f:	test   dl,dl
    5981:	jne    58d0 <__ctype_b_loc@plt+0x3080>
    5987:	mov    eax,esi
    5989:	xor    eax,0x1
    598c:	and    eax,edi
    598e:	test   r13b,r13b
    5991:	je     59a1 <__ctype_b_loc@plt+0x3151>
    5993:	cmp    r14,r15
    5996:	jbe    599d <__ctype_b_loc@plt+0x314d>
    5998:	mov    BYTE PTR [r9+r15*1],0x5c
    599d:	add    r15,0x1
    59a1:	add    rbx,0x1
    59a5:	cmp    rbx,rcx
    59a8:	jae    5b2f <__ctype_b_loc@plt+0x32df>
    59ae:	test   al,al
    59b0:	je     5b57 <__ctype_b_loc@plt+0x3307>
    59b6:	cmp    r14,r15
    59b9:	jbe    59c0 <__ctype_b_loc@plt+0x3170>
    59bb:	mov    BYTE PTR [r9+r15*1],0x27
    59c0:	lea    rax,[r15+0x1]
    59c4:	cmp    r14,rax
    59c7:	jbe    59cf <__ctype_b_loc@plt+0x317f>
    59c9:	mov    BYTE PTR [r9+r15*1+0x1],0x27
    59cf:	add    r15,0x2
    59d3:	xor    r13d,r13d
    59d6:	xor    edi,edi
    59d8:	jmp    596d <__ctype_b_loc@plt+0x311d>
    59da:	nop    WORD PTR [rax+rax*1+0x0]
    59e0:	cmp    rax,0x1
    59e4:	je     5839 <__ctype_b_loc@plt+0x2fe9>
    59ea:	mov    rsi,QWORD PTR [rsp+0x20]
    59ef:	lea    rcx,[rsi+r14*1]
    59f3:	lea    rax,[rsi+rbx*1+0x1]
    59f8:	lea    r10,[rcx+rbx*1]
    59fc:	jmp    5a0d <__ctype_b_loc@plt+0x31bd>
    59fe:	xchg   ax,ax
    5a00:	add    rax,0x1
    5a04:	cmp    r10,rax
    5a07:	je     5839 <__ctype_b_loc@plt+0x2fe9>
    5a0d:	movzx  ebx,BYTE PTR [rax]
    5a10:	lea    ecx,[rbx-0x5b]
    5a13:	cmp    cl,0x21
    5a16:	ja     5a00 <__ctype_b_loc@plt+0x31b0>
    5a18:	movabs rbx,0x20000002b
    5a22:	mov    edx,0x1
    5a27:	shl    rdx,cl
    5a2a:	test   rdx,rbx
    5a2d:	je     5a00 <__ctype_b_loc@plt+0x31b0>
    5a2f:	mov    rax,QWORD PTR [rsp+0x70]
    5a34:	movzx  r13d,BYTE PTR [rsp+0x10]
    5a3a:	and    DWORD PTR [rsp+0x80],0xfffffffd
    5a42:	mov    r14,QWORD PTR [rsp+0x78]
    5a47:	mov    QWORD PTR [rsp+0x60],rax
    5a4c:	mov    r11,QWORD PTR [rsp+0x30]
    5a51:	test   r13b,r13b
    5a54:	jne    5344 <__ctype_b_loc@plt+0x2af4>
    5a5a:	mov    QWORD PTR [rsp+0x8],r11
    5a5f:	xor    r13d,r13d
    5a62:	call   2520 <__ctype_get_mb_cur_max@plt>
    5a67:	mov    r11,QWORD PTR [rsp+0x8]
    5a6c:	mov    QWORD PTR [rsp+0x18],0x0
    5a75:	mov    QWORD PTR [rsp+0x58],rax
    5a7a:	jmp    5367 <__ctype_b_loc@plt+0x2b17>
    5a7f:	nop
    5a80:	mov    rcx,r15
    5a83:	cmp    r14,r15
    5a86:	jbe    5a96 <__ctype_b_loc@plt+0x3246>
    5a88:	movzx  eax,BYTE PTR [rsp+0x42]
    5a8d:	mov    BYTE PTR [r9+rcx*1],0x5c
    5a92:	mov    BYTE PTR [rsp+0x42],al
    5a96:	lea    r15,[rcx+0x1]
    5a9a:	cmp    r8d,0x2
    5a9e:	je     5b5f <__ctype_b_loc@plt+0x330f>
    5aa4:	lea    rax,[rbx+0x1]
    5aa8:	mov    ebp,0x30
    5aad:	cmp    rax,r11
    5ab0:	jae    5acb <__ctype_b_loc@plt+0x327b>
    5ab2:	mov    rax,QWORD PTR [rsp+0x20]
    5ab7:	movzx  eax,BYTE PTR [rax+rbx*1+0x1]
    5abc:	mov    BYTE PTR [rsp+0x30],al
    5ac0:	sub    eax,0x30
    5ac3:	cmp    al,0x9
    5ac5:	jbe    5b6f <__ctype_b_loc@plt+0x331f>
    5acb:	movzx  eax,BYTE PTR [rsp+0x10]
    5ad0:	xor    eax,0x1
    5ad3:	or     al,dl
    5ad5:	mov    eax,r12d
    5ad8:	mov    r12d,0x0
    5ade:	je     4ef0 <__ctype_b_loc@plt+0x26a0>
    5ae4:	jmp    4f0e <__ctype_b_loc@plt+0x26be>
    5ae9:	cmp    r14,r15
    5aec:	jbe    5af3 <__ctype_b_loc@plt+0x32a3>
    5aee:	mov    BYTE PTR [r9+r15*1],0x27
    5af3:	lea    rax,[r15+0x1]
    5af7:	cmp    r14,rax
    5afa:	jbe    5b02 <__ctype_b_loc@plt+0x32b2>
    5afc:	mov    BYTE PTR [r9+r15*1+0x1],0x5c
    5b02:	lea    rax,[r15+0x2]
    5b06:	cmp    r14,rax
    5b09:	jbe    5e95 <__ctype_b_loc@plt+0x3645>
    5b0f:	mov    rdx,r14
    5b12:	mov    BYTE PTR [r9+r15*1+0x2],0x27
    5b18:	mov    r14,QWORD PTR [rsp+0x50]
    5b1d:	jmp    5712 <__ctype_b_loc@plt+0x2ec2>
    5b22:	movzx  edx,BYTE PTR [rsp+0x10]
    5b27:	xor    r12d,r12d
    5b2a:	jmp    58a8 <__ctype_b_loc@plt+0x3058>
    5b2f:	mov    BYTE PTR [rsp+0x42],dil
    5b34:	movzx  r12d,BYTE PTR [rsp+0x30]
    5b3a:	jmp    55b0 <__ctype_b_loc@plt+0x2d60>
    5b3f:	mov    r12d,r8d
    5b42:	jmp    521a <__ctype_b_loc@plt+0x29ca>
    5b47:	mov    BYTE PTR [rsp+0x42],dil
    5b4c:	movzx  r12d,BYTE PTR [rsp+0x30]
    5b52:	jmp    4f79 <__ctype_b_loc@plt+0x2729>
    5b57:	xor    r13d,r13d
    5b5a:	jmp    596d <__ctype_b_loc@plt+0x311d>
    5b5f:	mov    eax,r12d
    5b62:	mov    ebp,0x30
    5b67:	xor    r12d,r12d
    5b6a:	jmp    4f0e <__ctype_b_loc@plt+0x26be>
    5b6f:	cmp    r14,r15
    5b72:	jbe    5b79 <__ctype_b_loc@plt+0x3329>
    5b74:	mov    BYTE PTR [r9+r15*1],0x30
    5b79:	lea    rax,[rcx+0x2]
    5b7d:	cmp    r14,rax
    5b80:	jbe    5b88 <__ctype_b_loc@plt+0x3338>
    5b82:	mov    BYTE PTR [r9+rcx*1+0x2],0x30
    5b88:	lea    r15,[rcx+0x3]
    5b8c:	mov    ebp,0x30
    5b91:	jmp    5acb <__ctype_b_loc@plt+0x327b>
    5b96:	mov    rdx,QWORD PTR [rsp+0x98]
    5b9e:	movzx  eax,BYTE PTR [rdx]
    5ba1:	test   al,al
    5ba3:	je     4d7d <__ctype_b_loc@plt+0x252d>
    5ba9:	mov    rcx,QWORD PTR [rsp+0x60]
    5bae:	xchg   ax,ax
    5bb0:	cmp    r14,r15
    5bb3:	jbe    5bb9 <__ctype_b_loc@plt+0x3369>
    5bb5:	mov    BYTE PTR [rcx+r15*1],al
    5bb9:	add    r15,0x1
    5bbd:	movzx  eax,BYTE PTR [rdx+r15*1]
    5bc2:	test   al,al
    5bc4:	jne    5bb0 <__ctype_b_loc@plt+0x3360>
    5bc6:	jmp    4d7d <__ctype_b_loc@plt+0x252d>
    5bcb:	movzx  ebp,BYTE PTR [rsi+rax*1]
    5bcf:	lea    edx,[rbp-0x21]
    5bd2:	cmp    dl,0x1d
    5bd5:	ja     5270 <__ctype_b_loc@plt+0x2a20>
    5bdb:	lea    rsi,[rip+0x443e]        # a020 <_obstack_memory_used@@Base+0x2060>
    5be2:	movzx  edx,dl
    5be5:	movsxd rdx,DWORD PTR [rsi+rdx*4]
    5be9:	add    rdx,rsi
    5bec:	notrack jmp rdx
    5bef:	cmp    BYTE PTR [rsp+0x43],0x0
    5bf4:	jne    5054 <__ctype_b_loc@plt+0x2804>
    5bfa:	cmp    r14,r15
    5bfd:	jbe    5c04 <__ctype_b_loc@plt+0x33b4>
    5bff:	mov    BYTE PTR [r9+r15*1],0x3f
    5c04:	lea    rdx,[r15+0x1]
    5c08:	cmp    r14,rdx
    5c0b:	jbe    5c13 <__ctype_b_loc@plt+0x33c3>
    5c0d:	mov    BYTE PTR [r9+r15*1+0x1],0x22
    5c13:	lea    rdx,[r15+0x2]
    5c17:	cmp    r14,rdx
    5c1a:	jbe    5c22 <__ctype_b_loc@plt+0x33d2>
    5c1c:	mov    BYTE PTR [r9+r15*1+0x2],0x22
    5c22:	lea    rdx,[r15+0x3]
    5c26:	cmp    r14,rdx
    5c29:	jbe    5c31 <__ctype_b_loc@plt+0x33e1>
    5c2b:	mov    BYTE PTR [r9+r15*1+0x3],0x3f
    5c31:	add    r15,0x4
    5c35:	xor    edx,edx
    5c37:	xor    r12d,r12d
    5c3a:	mov    rbx,rax
    5c3d:	jmp    5acb <__ctype_b_loc@plt+0x327b>
    5c42:	mov    rax,rbp
    5c45:	mov    rbx,QWORD PTR [rsp+0x38]
    5c4a:	mov    r9,QWORD PTR [rsp+0x70]
    5c4f:	xor    r12d,r12d
    5c52:	movzx  ebp,BYTE PTR [rsp+0x86]
    5c5a:	mov    r15,QWORD PTR [rsp+0x88]
    5c62:	movzx  r13d,BYTE PTR [rsp+0x87]
    5c6b:	mov    r14,QWORD PTR [rsp+0x78]
    5c70:	mov    r11,QWORD PTR [rsp+0x30]
    5c75:	mov    r8d,DWORD PTR [rsp+0x44]
    5c7a:	movzx  edx,BYTE PTR [rsp+0x10]
    5c7f:	jmp    589e <__ctype_b_loc@plt+0x304e>
    5c84:	mov    r11,QWORD PTR [rsp+0x30]
    5c89:	mov    r10,rbx
    5c8c:	mov    rax,rbp
    5c8f:	mov    rbx,QWORD PTR [rsp+0x38]
    5c94:	movzx  ebp,BYTE PTR [rsp+0x86]
    5c9c:	mov    r15,QWORD PTR [rsp+0x88]
    5ca4:	movzx  r13d,BYTE PTR [rsp+0x87]
    5cad:	mov    r9,QWORD PTR [rsp+0x70]
    5cb2:	mov    r14,QWORD PTR [rsp+0x78]
    5cb7:	mov    r8d,DWORD PTR [rsp+0x44]
    5cbc:	mov    rdx,QWORD PTR [rsp+0x20]
    5cc1:	cmp    r10,r11
    5cc4:	jb     5cdd <__ctype_b_loc@plt+0x348d>
    5cc6:	jmp    5ce4 <__ctype_b_loc@plt+0x3494>
    5cc8:	nop    DWORD PTR [rax+rax*1+0x0]
    5cd0:	add    rax,0x1
    5cd4:	lea    r10,[rbx+rax*1]
    5cd8:	cmp    r10,r11
    5cdb:	jae    5ce4 <__ctype_b_loc@plt+0x3494>
    5cdd:	cmp    BYTE PTR [rdx+r10*1],0x0
    5ce2:	jne    5cd0 <__ctype_b_loc@plt+0x3480>
    5ce4:	movzx  edx,BYTE PTR [rsp+0x10]
    5ce9:	xor    r12d,r12d
    5cec:	jmp    589e <__ctype_b_loc@plt+0x304e>
    5cf1:	movzx  r13d,BYTE PTR [rsp+0x10]
    5cf7:	mov    r12d,r8d
    5cfa:	mov    eax,r13d
    5cfd:	jmp    521a <__ctype_b_loc@plt+0x29ca>
    5d02:	and    DWORD PTR [rsp+0x80],0xfffffffd
    5d0a:	mov    r12d,r8d
    5d0d:	jmp    522a <__ctype_b_loc@plt+0x29da>
    5d12:	mov    esi,r12d
    5d15:	mov    rdi,rcx
    5d18:	call   4b70 <__ctype_b_loc@plt+0x2320>
    5d1d:	mov    r11,QWORD PTR [rsp+0x8]
    5d22:	mov    QWORD PTR [rsp+0x90],rax
    5d2a:	jmp    4d72 <__ctype_b_loc@plt+0x2522>
    5d2f:	mov    rdi,QWORD PTR [rsp+0x98]
    5d37:	mov    esi,r12d
    5d3a:	call   4b70 <__ctype_b_loc@plt+0x2320>
    5d3f:	mov    r11,QWORD PTR [rsp+0x8]
    5d44:	mov    QWORD PTR [rsp+0x98],rax
    5d4c:	jmp    4d3a <__ctype_b_loc@plt+0x24ea>
    5d51:	mov    eax,r13d
    5d54:	jmp    56d9 <__ctype_b_loc@plt+0x2e89>
    5d59:	cmp    r8d,0x2
    5d5d:	mov    r12d,r8d
    5d60:	sete   al
    5d63:	jmp    521a <__ctype_b_loc@plt+0x29ca>
    5d68:	movzx  eax,BYTE PTR [rsp+0x85]
    5d70:	mov    r10,r14
    5d73:	mov    rbx,QWORD PTR [rsp+0x48]
    5d78:	test   rbx,rbx
    5d7b:	je     5dad <__ctype_b_loc@plt+0x355d>
    5d7d:	test   al,al
    5d7f:	je     5dad <__ctype_b_loc@plt+0x355d>
    5d81:	movzx  ecx,BYTE PTR [rbx]
    5d84:	mov    rax,rbx
    5d87:	test   cl,cl
    5d89:	je     5dad <__ctype_b_loc@plt+0x355d>
    5d8b:	mov    rsi,QWORD PTR [rsp+0x60]
    5d90:	mov    rdx,r15
    5d93:	sub    rax,r15
    5d96:	cmp    r10,rdx
    5d99:	jbe    5d9e <__ctype_b_loc@plt+0x354e>
    5d9b:	mov    BYTE PTR [rsi+rdx*1],cl
    5d9e:	add    rdx,0x1
    5da2:	movzx  ecx,BYTE PTR [rax+rdx*1]
    5da6:	test   cl,cl
    5da8:	jne    5d96 <__ctype_b_loc@plt+0x3546>
    5daa:	mov    r15,rdx
    5dad:	cmp    r10,r15
    5db0:	jbe    5dbc <__ctype_b_loc@plt+0x356c>
    5db2:	mov    rax,QWORD PTR [rsp+0x60]
    5db7:	mov    BYTE PTR [rax+r15*1],0x0
    5dbc:	mov    rax,QWORD PTR [rsp+0xb8]
    5dc4:	sub    rax,QWORD PTR fs:0x28
    5dcd:	jne    5ec7 <__ctype_b_loc@plt+0x3677>
    5dd3:	add    rsp,0xc8
    5dda:	mov    rax,r15
    5ddd:	pop    rbx
    5dde:	pop    rbp
    5ddf:	pop    r12
    5de1:	pop    r13
    5de3:	pop    r14
    5de5:	pop    r15
    5de7:	ret    
    5de8:	mov    QWORD PTR [rsp+0x10],r11
    5ded:	xor    r15d,r15d
    5df0:	mov    r13d,0x5
    5df6:	call   2520 <__ctype_get_mb_cur_max@plt>
    5dfb:	test   BYTE PTR [rsp+0x80],0x2
    5e03:	mov    r11,QWORD PTR [rsp+0x10]
    5e08:	mov    QWORD PTR [rsp+0x28],0x1
    5e11:	mov    QWORD PTR [rsp+0x58],rax
    5e16:	lea    rax,[rip+0x3b73]        # 9990 <_obstack_memory_used@@Base+0x19d0>
    5e1d:	mov    QWORD PTR [rsp+0x48],rax
    5e22:	jne    5e5c <__ctype_b_loc@plt+0x360c>
    5e24:	mov    r14,QWORD PTR [rsp+0x50]
    5e29:	jmp    50ac <__ctype_b_loc@plt+0x285c>
    5e2e:	mov    r10,r14
    5e31:	jmp    5d73 <__ctype_b_loc@plt+0x3523>
    5e36:	mov    r10,r14
    5e39:	mov    eax,ebx
    5e3b:	jmp    5d73 <__ctype_b_loc@plt+0x3523>
    5e40:	movzx  r13d,BYTE PTR [rsp+0x10]
    5e46:	and    DWORD PTR [rsp+0x80],0xfffffffd
    5e4e:	test   r13b,r13b
    5e51:	jne    5344 <__ctype_b_loc@plt+0x2af4>
    5e57:	jmp    5a5a <__ctype_b_loc@plt+0x320a>
    5e5c:	movzx  eax,BYTE PTR [rsp+0x8]
    5e61:	mov    r14,QWORD PTR [rsp+0x50]
    5e66:	mov    BYTE PTR [rsp+0x42],0x0
    5e6b:	mov    BYTE PTR [rsp+0x85],0x0
    5e73:	mov    QWORD PTR [rsp+0x50],0x0
    5e7c:	mov    BYTE PTR [rsp+0x43],al
    5e80:	mov    BYTE PTR [rsp+0x10],al
    5e84:	jmp    4dd6 <__ctype_b_loc@plt+0x2586>
    5e89:	test   ebx,ebx
    5e8b:	jne    5ea2 <__ctype_b_loc@plt+0x3652>
    5e8d:	xor    r13d,r13d
    5e90:	jmp    5367 <__ctype_b_loc@plt+0x2b17>
    5e95:	mov    rdx,r14
    5e98:	mov    r14,QWORD PTR [rsp+0x50]
    5e9d:	jmp    5712 <__ctype_b_loc@plt+0x2ec2>
    5ea2:	lea    rax,[rip+0x3af8]        # 99a1 <_obstack_memory_used@@Base+0x19e1>
    5ea9:	mov    BYTE PTR [rsp+0x43],0x1
    5eae:	xor    r13d,r13d
    5eb1:	xor    r15d,r15d
    5eb4:	mov    QWORD PTR [rsp+0x28],0x1
    5ebd:	mov    QWORD PTR [rsp+0x48],rax
    5ec2:	jmp    4dae <__ctype_b_loc@plt+0x255e>
    5ec7:	call   2540 <__stack_chk_fail@plt>
    5ecc:	mov    ebp,eax
    5ece:	jmp    530d <__ctype_b_loc@plt+0x2abd>
    5ed3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    5ede:	xchg   ax,ax
    5ee0:	push   r15
    5ee2:	push   r14
    5ee4:	push   r13
    5ee6:	mov    r13,rdx
    5ee9:	push   r12
    5eeb:	mov    r12,rsi
    5eee:	push   rbp
    5eef:	mov    rbp,rcx
    5ef2:	push   rbx
    5ef3:	movsxd rbx,edi
    5ef6:	sub    rsp,0x28
    5efa:	call   2480 <__errno_location@plt>
    5eff:	mov    r15,QWORD PTR [rip+0x715a]        # d060 <_obstack_memory_used@@Base+0x50a0>
    5f06:	mov    QWORD PTR [rsp],rax
    5f0a:	mov    eax,DWORD PTR [rax]
    5f0c:	mov    DWORD PTR [rsp+0xc],eax
    5f10:	test   ebx,ebx
    5f12:	js     2865 <__ctype_b_loc@plt+0x15>
    5f18:	cmp    DWORD PTR [rip+0x713a],ebx        # d058 <_obstack_memory_used@@Base+0x5098>
    5f1e:	jg     5f81 <__ctype_b_loc@plt+0x3731>
    5f20:	cmp    ebx,0x7fffffff
    5f26:	je     6079 <__ctype_b_loc@plt+0x3829>
    5f2c:	lea    r14d,[rbx+0x1]
    5f30:	lea    rax,[rip+0x7139]        # d070 <_obstack_memory_used@@Base+0x50b0>
    5f37:	movsxd rsi,r14d
    5f3a:	shl    rsi,0x4
    5f3e:	cmp    r15,rax
    5f41:	je     6058 <__ctype_b_loc@plt+0x3808>
    5f47:	mov    rdi,r15
    5f4a:	call   78d0 <__ctype_b_loc@plt+0x5080>
    5f4f:	mov    QWORD PTR [rip+0x710a],rax        # d060 <_obstack_memory_used@@Base+0x50a0>
    5f56:	mov    r15,rax
    5f59:	movsxd rdi,DWORD PTR [rip+0x70f8]        # d058 <_obstack_memory_used@@Base+0x5098>
    5f60:	mov    edx,r14d
    5f63:	xor    esi,esi
    5f65:	sub    edx,edi
    5f67:	shl    rdi,0x4
    5f6b:	movsxd rdx,edx
    5f6e:	add    rdi,r15
    5f71:	shl    rdx,0x4
    5f75:	call   25c0 <memset@plt>
    5f7a:	mov    DWORD PTR [rip+0x70d7],r14d        # d058 <_obstack_memory_used@@Base+0x5098>
    5f81:	lea    rax,[rbp+0x8]
    5f85:	shl    rbx,0x4
    5f89:	sub    rsp,0x8
    5f8d:	mov    r14d,DWORD PTR [rbp+0x4]
    5f91:	add    rbx,r15
    5f94:	mov    QWORD PTR [rsp+0x20],rax
    5f99:	mov    r8d,DWORD PTR [rbp+0x0]
    5f9d:	mov    rcx,r13
    5fa0:	mov    rsi,QWORD PTR [rbx]
    5fa3:	mov    r15,QWORD PTR [rbx+0x8]
    5fa7:	push   QWORD PTR [rbp+0x30]
    5faa:	or     r14d,0x1
    5fae:	push   QWORD PTR [rbp+0x28]
    5fb1:	mov    r9d,r14d
    5fb4:	mov    rdx,r12
    5fb7:	push   rax
    5fb8:	mov    rdi,r15
    5fbb:	mov    QWORD PTR [rsp+0x30],rsi
    5fc0:	call   4c50 <__ctype_b_loc@plt+0x2400>
    5fc5:	mov    rsi,QWORD PTR [rsp+0x30]
    5fca:	add    rsp,0x20
    5fce:	cmp    rsi,rax
    5fd1:	ja     6038 <__ctype_b_loc@plt+0x37e8>
    5fd3:	lea    rsi,[rax+0x1]
    5fd7:	lea    rax,[rip+0x7182]        # d160 <stderr@@GLIBC_2.2.5+0x80>
    5fde:	mov    QWORD PTR [rbx],rsi
    5fe1:	cmp    r15,rax
    5fe4:	je     5ff8 <__ctype_b_loc@plt+0x37a8>
    5fe6:	mov    rdi,r15
    5fe9:	mov    QWORD PTR [rsp+0x10],rsi
    5fee:	call   2430 <free@plt>
    5ff3:	mov    rsi,QWORD PTR [rsp+0x10]
    5ff8:	mov    rdi,rsi
    5ffb:	mov    QWORD PTR [rsp+0x10],rsi
    6000:	call   78b0 <__ctype_b_loc@plt+0x5060>
    6005:	sub    rsp,0x8
    6009:	mov    r8d,DWORD PTR [rbp+0x0]
    600d:	mov    r9d,r14d
    6010:	mov    QWORD PTR [rbx+0x8],rax
    6014:	mov    rcx,r13
    6017:	mov    rdx,r12
    601a:	mov    rdi,rax
    601d:	push   QWORD PTR [rbp+0x30]
    6020:	mov    r15,rax
    6023:	push   QWORD PTR [rbp+0x28]
    6026:	push   QWORD PTR [rsp+0x30]
    602a:	mov    rsi,QWORD PTR [rsp+0x30]
    602f:	call   4c50 <__ctype_b_loc@plt+0x2400>
    6034:	add    rsp,0x20
    6038:	mov    rax,QWORD PTR [rsp]
    603c:	mov    ecx,DWORD PTR [rsp+0xc]
    6040:	mov    DWORD PTR [rax],ecx
    6042:	add    rsp,0x28
    6046:	mov    rax,r15
    6049:	pop    rbx
    604a:	pop    rbp
    604b:	pop    r12
    604d:	pop    r13
    604f:	pop    r14
    6051:	pop    r15
    6053:	ret    
    6054:	nop    DWORD PTR [rax+0x0]
    6058:	xor    edi,edi
    605a:	call   78d0 <__ctype_b_loc@plt+0x5080>
    605f:	movdqa xmm0,XMMWORD PTR [rip+0x7009]        # d070 <_obstack_memory_used@@Base+0x50b0>
    6067:	mov    QWORD PTR [rip+0x6ff2],rax        # d060 <_obstack_memory_used@@Base+0x50a0>
    606e:	mov    r15,rax
    6071:	movups XMMWORD PTR [rax],xmm0
    6074:	jmp    5f59 <__ctype_b_loc@plt+0x3709>
    6079:	call   7a60 <__ctype_b_loc@plt+0x5210>
    607e:	xchg   ax,ax
    6080:	endbr64 
    6084:	push   r12
    6086:	push   rbp
    6087:	mov    rbp,rdi
    608a:	push   rbx
    608b:	call   2480 <__errno_location@plt>
    6090:	test   rbp,rbp
    6093:	mov    esi,0x38
    6098:	mov    r12d,DWORD PTR [rax]
    609b:	mov    rbx,rax
    609e:	lea    rax,[rip+0x71bb]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    60a5:	cmove  rbp,rax
    60a9:	mov    rdi,rbp
    60ac:	call   79e0 <__ctype_b_loc@plt+0x5190>
    60b1:	mov    DWORD PTR [rbx],r12d
    60b4:	pop    rbx
    60b5:	pop    rbp
    60b6:	pop    r12
    60b8:	ret    
    60b9:	nop    DWORD PTR [rax+0x0]
    60c0:	endbr64 
    60c4:	test   rdi,rdi
    60c7:	lea    rax,[rip+0x7192]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    60ce:	cmove  rdi,rax
    60d2:	mov    eax,DWORD PTR [rdi]
    60d4:	ret    
    60d5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    60e0:	endbr64 
    60e4:	test   rdi,rdi
    60e7:	lea    rax,[rip+0x7172]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    60ee:	cmove  rdi,rax
    60f2:	mov    DWORD PTR [rdi],esi
    60f4:	ret    
    60f5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    6100:	endbr64 
    6104:	test   rdi,rdi
    6107:	lea    rax,[rip+0x7152]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    610e:	mov    ecx,esi
    6110:	cmove  rdi,rax
    6114:	mov    eax,esi
    6116:	and    ecx,0x1f
    6119:	shr    al,0x5
    611c:	movzx  eax,al
    611f:	lea    rsi,[rdi+rax*4+0x8]
    6124:	mov    edi,DWORD PTR [rsi]
    6126:	mov    eax,edi
    6128:	shr    eax,cl
    612a:	xor    edx,eax
    612c:	and    eax,0x1
    612f:	and    edx,0x1
    6132:	shl    edx,cl
    6134:	xor    edx,edi
    6136:	mov    DWORD PTR [rsi],edx
    6138:	ret    
    6139:	nop    DWORD PTR [rax+0x0]
    6140:	endbr64 
    6144:	test   rdi,rdi
    6147:	lea    rax,[rip+0x7112]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    614e:	cmove  rdi,rax
    6152:	mov    eax,DWORD PTR [rdi+0x4]
    6155:	mov    DWORD PTR [rdi+0x4],esi
    6158:	ret    
    6159:	nop    DWORD PTR [rax+0x0]
    6160:	endbr64 
    6164:	sub    rsp,0x8
    6168:	lea    rax,[rip+0x70f1]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    616f:	test   rdi,rdi
    6172:	cmove  rdi,rax
    6176:	mov    DWORD PTR [rdi],0xa
    617c:	test   rsi,rsi
    617f:	je     286a <__ctype_b_loc@plt+0x1a>
    6185:	test   rdx,rdx
    6188:	je     286a <__ctype_b_loc@plt+0x1a>
    618e:	mov    QWORD PTR [rdi+0x28],rsi
    6192:	mov    QWORD PTR [rdi+0x30],rdx
    6196:	add    rsp,0x8
    619a:	ret    
    619b:	nop    DWORD PTR [rax+rax*1+0x0]
    61a0:	endbr64 
    61a4:	push   r15
    61a6:	lea    rax,[rip+0x70b3]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    61ad:	push   r14
    61af:	mov    r14,rdx
    61b2:	push   r13
    61b4:	mov    r13,rsi
    61b7:	push   r12
    61b9:	mov    r12,rdi
    61bc:	push   rbp
    61bd:	push   rbx
    61be:	mov    rbx,r8
    61c1:	sub    rsp,0x18
    61c5:	test   r8,r8
    61c8:	cmove  rbx,rax
    61cc:	mov    QWORD PTR [rsp+0x8],rcx
    61d1:	call   2480 <__errno_location@plt>
    61d6:	sub    rsp,0x8
    61da:	mov    rdx,r14
    61dd:	mov    rsi,r13
    61e0:	mov    r15d,DWORD PTR [rax]
    61e3:	mov    rbp,rax
    61e6:	lea    rax,[rbx+0x8]
    61ea:	mov    r9d,DWORD PTR [rbx+0x4]
    61ee:	push   QWORD PTR [rbx+0x30]
    61f1:	mov    r8d,DWORD PTR [rbx]
    61f4:	mov    rdi,r12
    61f7:	push   QWORD PTR [rbx+0x28]
    61fa:	push   rax
    61fb:	mov    rcx,QWORD PTR [rsp+0x28]
    6200:	call   4c50 <__ctype_b_loc@plt+0x2400>
    6205:	mov    DWORD PTR [rbp+0x0],r15d
    6209:	add    rsp,0x38
    620d:	pop    rbx
    620e:	pop    rbp
    620f:	pop    r12
    6211:	pop    r13
    6213:	pop    r14
    6215:	pop    r15
    6217:	ret    
    6218:	nop    DWORD PTR [rax+rax*1+0x0]
    6220:	endbr64 
    6224:	push   r15
    6226:	lea    rax,[rip+0x7033]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    622d:	push   r14
    622f:	mov    r14,rsi
    6232:	push   r13
    6234:	mov    r13,rdi
    6237:	push   r12
    6239:	push   rbp
    623a:	mov    rbp,rdx
    623d:	push   rbx
    623e:	mov    rbx,rcx
    6241:	sub    rsp,0x28
    6245:	test   rcx,rcx
    6248:	cmove  rbx,rax
    624c:	call   2480 <__errno_location@plt>
    6251:	xor    r9d,r9d
    6254:	test   rbp,rbp
    6257:	mov    rcx,r14
    625a:	mov    r12,rax
    625d:	mov    eax,DWORD PTR [rax]
    625f:	sete   r9b
    6263:	lea    r10,[rbx+0x8]
    6267:	sub    rsp,0x8
    626b:	or     r9d,DWORD PTR [rbx+0x4]
    626f:	mov    r8d,DWORD PTR [rbx]
    6272:	mov    rdx,r13
    6275:	mov    DWORD PTR [rsp+0x18],eax
    6279:	xor    esi,esi
    627b:	xor    edi,edi
    627d:	push   QWORD PTR [rbx+0x30]
    6280:	push   QWORD PTR [rbx+0x28]
    6283:	push   r10
    6285:	mov    QWORD PTR [rsp+0x38],r10
    628a:	mov    DWORD PTR [rsp+0x34],r9d
    628f:	call   4c50 <__ctype_b_loc@plt+0x2400>
    6294:	add    rsp,0x20
    6298:	lea    rsi,[rax+0x1]
    629c:	mov    r15,rax
    629f:	mov    rdi,rsi
    62a2:	mov    QWORD PTR [rsp+0x8],rsi
    62a7:	call   78b0 <__ctype_b_loc@plt+0x5060>
    62ac:	sub    rsp,0x8
    62b0:	push   QWORD PTR [rbx+0x30]
    62b3:	mov    r8d,DWORD PTR [rbx]
    62b6:	push   QWORD PTR [rbx+0x28]
    62b9:	mov    rcx,r14
    62bc:	mov    rdx,r13
    62bf:	mov    rdi,rax
    62c2:	mov    r10,QWORD PTR [rsp+0x30]
    62c7:	push   r10
    62c9:	mov    rsi,QWORD PTR [rsp+0x28]
    62ce:	mov    r9d,DWORD PTR [rsp+0x34]
    62d3:	mov    QWORD PTR [rsp+0x28],rax
    62d8:	call   4c50 <__ctype_b_loc@plt+0x2400>
    62dd:	mov    eax,DWORD PTR [rsp+0x30]
    62e1:	add    rsp,0x20
    62e5:	test   rbp,rbp
    62e8:	mov    r11,QWORD PTR [rsp+0x8]
    62ed:	mov    DWORD PTR [r12],eax
    62f1:	je     62f7 <__ctype_b_loc@plt+0x3aa7>
    62f3:	mov    QWORD PTR [rbp+0x0],r15
    62f7:	add    rsp,0x28
    62fb:	mov    rax,r11
    62fe:	pop    rbx
    62ff:	pop    rbp
    6300:	pop    r12
    6302:	pop    r13
    6304:	pop    r14
    6306:	pop    r15
    6308:	ret    
    6309:	nop    DWORD PTR [rax+0x0]
    6310:	endbr64 
    6314:	mov    rcx,rdx
    6317:	xor    edx,edx
    6319:	jmp    6220 <__ctype_b_loc@plt+0x39d0>
    631e:	xchg   ax,ax
    6320:	endbr64 
    6324:	mov    eax,DWORD PTR [rip+0x6d2e]        # d058 <_obstack_memory_used@@Base+0x5098>
    632a:	push   r12
    632c:	mov    r12,QWORD PTR [rip+0x6d2d]        # d060 <_obstack_memory_used@@Base+0x50a0>
    6333:	push   rbp
    6334:	push   rbx
    6335:	cmp    eax,0x1
    6338:	jle    6361 <__ctype_b_loc@plt+0x3b11>
    633a:	sub    eax,0x2
    633d:	lea    rbx,[r12+0x18]
    6342:	shl    rax,0x4
    6346:	lea    rbp,[r12+rax*1+0x28]
    634b:	nop    DWORD PTR [rax+rax*1+0x0]
    6350:	mov    rdi,QWORD PTR [rbx]
    6353:	add    rbx,0x10
    6357:	call   2430 <free@plt>
    635c:	cmp    rbx,rbp
    635f:	jne    6350 <__ctype_b_loc@plt+0x3b00>
    6361:	mov    rdi,QWORD PTR [r12+0x8]
    6366:	lea    rbx,[rip+0x6df3]        # d160 <stderr@@GLIBC_2.2.5+0x80>
    636d:	cmp    rdi,rbx
    6370:	je     6389 <__ctype_b_loc@plt+0x3b39>
    6372:	call   2430 <free@plt>
    6377:	mov    QWORD PTR [rip+0x6cfa],rbx        # d078 <_obstack_memory_used@@Base+0x50b8>
    637e:	mov    QWORD PTR [rip+0x6ce7],0x100        # d070 <_obstack_memory_used@@Base+0x50b0>
    6389:	lea    rbx,[rip+0x6ce0]        # d070 <_obstack_memory_used@@Base+0x50b0>
    6390:	cmp    r12,rbx
    6393:	je     63a4 <__ctype_b_loc@plt+0x3b54>
    6395:	mov    rdi,r12
    6398:	call   2430 <free@plt>
    639d:	mov    QWORD PTR [rip+0x6cbc],rbx        # d060 <_obstack_memory_used@@Base+0x50a0>
    63a4:	mov    DWORD PTR [rip+0x6caa],0x1        # d058 <_obstack_memory_used@@Base+0x5098>
    63ae:	pop    rbx
    63af:	pop    rbp
    63b0:	pop    r12
    63b2:	ret    
    63b3:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    63be:	xchg   ax,ax
    63c0:	endbr64 
    63c4:	lea    rcx,[rip+0x6e95]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    63cb:	mov    rdx,0xffffffffffffffff
    63d2:	jmp    5ee0 <__ctype_b_loc@plt+0x3690>
    63d7:	nop    WORD PTR [rax+rax*1+0x0]
    63e0:	endbr64 
    63e4:	lea    rcx,[rip+0x6e75]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    63eb:	jmp    5ee0 <__ctype_b_loc@plt+0x3690>
    63f0:	endbr64 
    63f4:	mov    rsi,rdi
    63f7:	lea    rcx,[rip+0x6e62]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    63fe:	mov    rdx,0xffffffffffffffff
    6405:	xor    edi,edi
    6407:	jmp    5ee0 <__ctype_b_loc@plt+0x3690>
    640c:	nop    DWORD PTR [rax+0x0]
    6410:	endbr64 
    6414:	mov    rdx,rsi
    6417:	lea    rcx,[rip+0x6e42]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    641e:	mov    rsi,rdi
    6421:	xor    edi,edi
    6423:	jmp    5ee0 <__ctype_b_loc@plt+0x3690>
    6428:	nop    DWORD PTR [rax+rax*1+0x0]
    6430:	endbr64 
    6434:	sub    rsp,0x48
    6438:	mov    rax,QWORD PTR fs:0x28
    6441:	mov    QWORD PTR [rsp+0x38],rax
    6446:	xor    eax,eax
    6448:	cmp    esi,0xa
    644b:	je     286f <__ctype_b_loc@plt+0x1f>
    6451:	mov    r8,rdx
    6454:	mov    DWORD PTR [rsp],esi
    6457:	mov    rcx,rsp
    645a:	mov    rdx,0xffffffffffffffff
    6461:	mov    rsi,r8
    6464:	mov    DWORD PTR [rsp+0x4],0x0
    646c:	mov    QWORD PTR [rsp+0x8],0x0
    6475:	mov    QWORD PTR [rsp+0x10],0x0
    647e:	mov    QWORD PTR [rsp+0x18],0x0
    6487:	mov    QWORD PTR [rsp+0x20],0x0
    6490:	mov    QWORD PTR [rsp+0x28],0x0
    6499:	mov    QWORD PTR [rsp+0x30],0x0
    64a2:	call   5ee0 <__ctype_b_loc@plt+0x3690>
    64a7:	mov    rcx,QWORD PTR [rsp+0x38]
    64ac:	sub    rcx,QWORD PTR fs:0x28
    64b5:	jne    64bc <__ctype_b_loc@plt+0x3c6c>
    64b7:	add    rsp,0x48
    64bb:	ret    
    64bc:	call   2540 <__stack_chk_fail@plt>
    64c1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    64cc:	nop    DWORD PTR [rax+0x0]
    64d0:	endbr64 
    64d4:	sub    rsp,0x48
    64d8:	mov    rax,QWORD PTR fs:0x28
    64e1:	mov    QWORD PTR [rsp+0x38],rax
    64e6:	xor    eax,eax
    64e8:	cmp    esi,0xa
    64eb:	je     2874 <__ctype_b_loc@plt+0x24>
    64f1:	mov    r8,rdx
    64f4:	mov    DWORD PTR [rsp],esi
    64f7:	mov    rdx,rcx
    64fa:	mov    rcx,rsp
    64fd:	mov    rsi,r8
    6500:	mov    DWORD PTR [rsp+0x4],0x0
    6508:	mov    QWORD PTR [rsp+0x8],0x0
    6511:	mov    QWORD PTR [rsp+0x10],0x0
    651a:	mov    QWORD PTR [rsp+0x18],0x0
    6523:	mov    QWORD PTR [rsp+0x20],0x0
    652c:	mov    QWORD PTR [rsp+0x28],0x0
    6535:	mov    QWORD PTR [rsp+0x30],0x0
    653e:	call   5ee0 <__ctype_b_loc@plt+0x3690>
    6543:	mov    rdx,QWORD PTR [rsp+0x38]
    6548:	sub    rdx,QWORD PTR fs:0x28
    6551:	jne    6558 <__ctype_b_loc@plt+0x3d08>
    6553:	add    rsp,0x48
    6557:	ret    
    6558:	call   2540 <__stack_chk_fail@plt>
    655d:	nop    DWORD PTR [rax]
    6560:	endbr64 
    6564:	sub    rsp,0x48
    6568:	mov    rax,QWORD PTR fs:0x28
    6571:	mov    QWORD PTR [rsp+0x38],rax
    6576:	xor    eax,eax
    6578:	cmp    edi,0xa
    657b:	je     2879 <__ctype_b_loc@plt+0x29>
    6581:	mov    DWORD PTR [rsp],edi
    6584:	mov    rcx,rsp
    6587:	xor    edi,edi
    6589:	mov    rdx,0xffffffffffffffff
    6590:	mov    DWORD PTR [rsp+0x4],0x0
    6598:	mov    QWORD PTR [rsp+0x8],0x0
    65a1:	mov    QWORD PTR [rsp+0x10],0x0
    65aa:	mov    QWORD PTR [rsp+0x18],0x0
    65b3:	mov    QWORD PTR [rsp+0x20],0x0
    65bc:	mov    QWORD PTR [rsp+0x28],0x0
    65c5:	mov    QWORD PTR [rsp+0x30],0x0
    65ce:	call   5ee0 <__ctype_b_loc@plt+0x3690>
    65d3:	mov    rdx,QWORD PTR [rsp+0x38]
    65d8:	sub    rdx,QWORD PTR fs:0x28
    65e1:	jne    65e8 <__ctype_b_loc@plt+0x3d98>
    65e3:	add    rsp,0x48
    65e7:	ret    
    65e8:	call   2540 <__stack_chk_fail@plt>
    65ed:	nop    DWORD PTR [rax]
    65f0:	endbr64 
    65f4:	sub    rsp,0x48
    65f8:	mov    rax,QWORD PTR fs:0x28
    6601:	mov    QWORD PTR [rsp+0x38],rax
    6606:	xor    eax,eax
    6608:	cmp    edi,0xa
    660b:	je     287e <__ctype_b_loc@plt+0x2e>
    6611:	mov    DWORD PTR [rsp],edi
    6614:	mov    rcx,rsp
    6617:	xor    edi,edi
    6619:	mov    DWORD PTR [rsp+0x4],0x0
    6621:	mov    QWORD PTR [rsp+0x8],0x0
    662a:	mov    QWORD PTR [rsp+0x10],0x0
    6633:	mov    QWORD PTR [rsp+0x18],0x0
    663c:	mov    QWORD PTR [rsp+0x20],0x0
    6645:	mov    QWORD PTR [rsp+0x28],0x0
    664e:	mov    QWORD PTR [rsp+0x30],0x0
    6657:	call   5ee0 <__ctype_b_loc@plt+0x3690>
    665c:	mov    rcx,QWORD PTR [rsp+0x38]
    6661:	sub    rcx,QWORD PTR fs:0x28
    666a:	jne    6671 <__ctype_b_loc@plt+0x3e21>
    666c:	add    rsp,0x48
    6670:	ret    
    6671:	call   2540 <__stack_chk_fail@plt>
    6676:	cs nop WORD PTR [rax+rax*1+0x0]
    6680:	endbr64 
    6684:	sub    rsp,0x48
    6688:	movdqa xmm0,XMMWORD PTR [rip+0x6bd0]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    6690:	movdqa xmm1,XMMWORD PTR [rip+0x6bd8]        # d270 <stderr@@GLIBC_2.2.5+0x190>
    6698:	mov    ecx,edx
    669a:	mov    rax,QWORD PTR fs:0x28
    66a3:	mov    QWORD PTR [rsp+0x38],rax
    66a8:	xor    eax,eax
    66aa:	mov    rax,QWORD PTR [rip+0x6bdf]        # d290 <stderr@@GLIBC_2.2.5+0x1b0>
    66b1:	mov    r9,rsi
    66b4:	and    ecx,0x1f
    66b7:	movdqa xmm2,XMMWORD PTR [rip+0x6bc1]        # d280 <stderr@@GLIBC_2.2.5+0x1a0>
    66bf:	movups XMMWORD PTR [rsp],xmm0
    66c3:	mov    r10,rsp
    66c6:	mov    QWORD PTR [rsp+0x30],rax
    66cb:	mov    eax,edx
    66cd:	shr    al,0x5
    66d0:	movups XMMWORD PTR [rsp+0x10],xmm1
    66d5:	movzx  eax,al
    66d8:	movups XMMWORD PTR [rsp+0x20],xmm2
    66dd:	lea    rdx,[rsp+rax*4+0x8]
    66e2:	mov    esi,DWORD PTR [rdx]
    66e4:	mov    eax,esi
    66e6:	shr    eax,cl
    66e8:	not    eax
    66ea:	and    eax,0x1
    66ed:	shl    eax,cl
    66ef:	mov    rcx,r10
    66f2:	xor    eax,esi
    66f4:	mov    rsi,rdi
    66f7:	xor    edi,edi
    66f9:	mov    DWORD PTR [rdx],eax
    66fb:	mov    rdx,r9
    66fe:	call   5ee0 <__ctype_b_loc@plt+0x3690>
    6703:	mov    rdi,QWORD PTR [rsp+0x38]
    6708:	sub    rdi,QWORD PTR fs:0x28
    6711:	jne    6718 <__ctype_b_loc@plt+0x3ec8>
    6713:	add    rsp,0x48
    6717:	ret    
    6718:	call   2540 <__stack_chk_fail@plt>
    671d:	nop    DWORD PTR [rax]
    6720:	endbr64 
    6724:	sub    rsp,0x48
    6728:	movdqa xmm0,XMMWORD PTR [rip+0x6b30]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    6730:	movdqa xmm1,XMMWORD PTR [rip+0x6b38]        # d270 <stderr@@GLIBC_2.2.5+0x190>
    6738:	mov    ecx,esi
    673a:	mov    rax,QWORD PTR fs:0x28
    6743:	mov    QWORD PTR [rsp+0x38],rax
    6748:	xor    eax,eax
    674a:	mov    rax,QWORD PTR [rip+0x6b3f]        # d290 <stderr@@GLIBC_2.2.5+0x1b0>
    6751:	and    ecx,0x1f
    6754:	mov    r9,rsp
    6757:	movdqa xmm2,XMMWORD PTR [rip+0x6b21]        # d280 <stderr@@GLIBC_2.2.5+0x1a0>
    675f:	movups XMMWORD PTR [rsp],xmm0
    6763:	mov    QWORD PTR [rsp+0x30],rax
    6768:	mov    eax,esi
    676a:	shr    al,0x5
    676d:	movups XMMWORD PTR [rsp+0x10],xmm1
    6772:	movzx  eax,al
    6775:	movups XMMWORD PTR [rsp+0x20],xmm2
    677a:	lea    rdx,[rsp+rax*4+0x8]
    677f:	mov    esi,DWORD PTR [rdx]
    6781:	mov    eax,esi
    6783:	shr    eax,cl
    6785:	not    eax
    6787:	and    eax,0x1
    678a:	shl    eax,cl
    678c:	mov    rcx,r9
    678f:	xor    eax,esi
    6791:	mov    rsi,rdi
    6794:	xor    edi,edi
    6796:	mov    DWORD PTR [rdx],eax
    6798:	mov    rdx,0xffffffffffffffff
    679f:	call   5ee0 <__ctype_b_loc@plt+0x3690>
    67a4:	mov    rdx,QWORD PTR [rsp+0x38]
    67a9:	sub    rdx,QWORD PTR fs:0x28
    67b2:	jne    67b9 <__ctype_b_loc@plt+0x3f69>
    67b4:	add    rsp,0x48
    67b8:	ret    
    67b9:	call   2540 <__stack_chk_fail@plt>
    67be:	xchg   ax,ax
    67c0:	endbr64 
    67c4:	sub    rsp,0x48
    67c8:	movdqa xmm0,XMMWORD PTR [rip+0x6a90]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    67d0:	movdqa xmm1,XMMWORD PTR [rip+0x6a98]        # d270 <stderr@@GLIBC_2.2.5+0x190>
    67d8:	mov    rsi,rdi
    67db:	mov    rax,QWORD PTR fs:0x28
    67e4:	mov    QWORD PTR [rsp+0x38],rax
    67e9:	xor    eax,eax
    67eb:	mov    rax,QWORD PTR [rip+0x6a9e]        # d290 <stderr@@GLIBC_2.2.5+0x1b0>
    67f2:	mov    rcx,rsp
    67f5:	xor    edi,edi
    67f7:	movups XMMWORD PTR [rsp],xmm0
    67fb:	mov    edx,DWORD PTR [rsp+0xc]
    67ff:	movdqa xmm2,XMMWORD PTR [rip+0x6a79]        # d280 <stderr@@GLIBC_2.2.5+0x1a0>
    6807:	mov    QWORD PTR [rsp+0x30],rax
    680c:	mov    eax,edx
    680e:	movups XMMWORD PTR [rsp+0x10],xmm1
    6813:	not    eax
    6815:	movups XMMWORD PTR [rsp+0x20],xmm2
    681a:	and    eax,0x4000000
    681f:	xor    eax,edx
    6821:	mov    rdx,0xffffffffffffffff
    6828:	mov    DWORD PTR [rsp+0xc],eax
    682c:	call   5ee0 <__ctype_b_loc@plt+0x3690>
    6831:	mov    rcx,QWORD PTR [rsp+0x38]
    6836:	sub    rcx,QWORD PTR fs:0x28
    683f:	jne    6846 <__ctype_b_loc@plt+0x3ff6>
    6841:	add    rsp,0x48
    6845:	ret    
    6846:	call   2540 <__stack_chk_fail@plt>
    684b:	nop    DWORD PTR [rax+rax*1+0x0]
    6850:	endbr64 
    6854:	sub    rsp,0x48
    6858:	movdqa xmm0,XMMWORD PTR [rip+0x6a00]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    6860:	movdqa xmm1,XMMWORD PTR [rip+0x6a08]        # d270 <stderr@@GLIBC_2.2.5+0x190>
    6868:	mov    rdx,rsi
    686b:	mov    rax,QWORD PTR fs:0x28
    6874:	mov    QWORD PTR [rsp+0x38],rax
    6879:	xor    eax,eax
    687b:	mov    rax,QWORD PTR [rip+0x6a0e]        # d290 <stderr@@GLIBC_2.2.5+0x1b0>
    6882:	movdqa xmm2,XMMWORD PTR [rip+0x69f6]        # d280 <stderr@@GLIBC_2.2.5+0x1a0>
    688a:	mov    rsi,rdi
    688d:	movups XMMWORD PTR [rsp],xmm0
    6891:	mov    ecx,DWORD PTR [rsp+0xc]
    6895:	xor    edi,edi
    6897:	mov    QWORD PTR [rsp+0x30],rax
    689c:	mov    eax,ecx
    689e:	movups XMMWORD PTR [rsp+0x10],xmm1
    68a3:	not    eax
    68a5:	movups XMMWORD PTR [rsp+0x20],xmm2
    68aa:	and    eax,0x4000000
    68af:	xor    eax,ecx
    68b1:	mov    rcx,rsp
    68b4:	mov    DWORD PTR [rsp+0xc],eax
    68b8:	call   5ee0 <__ctype_b_loc@plt+0x3690>
    68bd:	mov    rdx,QWORD PTR [rsp+0x38]
    68c2:	sub    rdx,QWORD PTR fs:0x28
    68cb:	jne    68d2 <__ctype_b_loc@plt+0x4082>
    68cd:	add    rsp,0x48
    68d1:	ret    
    68d2:	call   2540 <__stack_chk_fail@plt>
    68d7:	nop    WORD PTR [rax+rax*1+0x0]
    68e0:	endbr64 
    68e4:	sub    rsp,0x48
    68e8:	mov    rax,QWORD PTR fs:0x28
    68f1:	mov    QWORD PTR [rsp+0x38],rax
    68f6:	xor    eax,eax
    68f8:	cmp    esi,0xa
    68fb:	je     2883 <__ctype_b_loc@plt+0x33>
    6901:	mov    r8,rdx
    6904:	mov    DWORD PTR [rsp],esi
    6907:	mov    rcx,rsp
    690a:	mov    rdx,0xffffffffffffffff
    6911:	movabs rax,0x400000000000000
    691b:	mov    rsi,r8
    691e:	mov    DWORD PTR [rsp+0x4],0x0
    6926:	mov    QWORD PTR [rsp+0x8],rax
    692b:	mov    QWORD PTR [rsp+0x10],0x0
    6934:	mov    QWORD PTR [rsp+0x18],0x0
    693d:	mov    QWORD PTR [rsp+0x20],0x0
    6946:	mov    QWORD PTR [rsp+0x28],0x0
    694f:	mov    QWORD PTR [rsp+0x30],0x0
    6958:	call   5ee0 <__ctype_b_loc@plt+0x3690>
    695d:	mov    rcx,QWORD PTR [rsp+0x38]
    6962:	sub    rcx,QWORD PTR fs:0x28
    696b:	jne    6972 <__ctype_b_loc@plt+0x4122>
    696d:	add    rsp,0x48
    6971:	ret    
    6972:	call   2540 <__stack_chk_fail@plt>
    6977:	nop    WORD PTR [rax+rax*1+0x0]
    6980:	endbr64 
    6984:	sub    rsp,0x48
    6988:	movdqa xmm0,XMMWORD PTR [rip+0x68d0]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    6990:	movdqa xmm1,XMMWORD PTR [rip+0x68d8]        # d270 <stderr@@GLIBC_2.2.5+0x190>
    6998:	mov    rax,QWORD PTR fs:0x28
    69a1:	mov    QWORD PTR [rsp+0x38],rax
    69a6:	xor    eax,eax
    69a8:	movdqa xmm2,XMMWORD PTR [rip+0x68d0]        # d280 <stderr@@GLIBC_2.2.5+0x1a0>
    69b0:	mov    rax,QWORD PTR [rip+0x68d9]        # d290 <stderr@@GLIBC_2.2.5+0x1b0>
    69b7:	movups XMMWORD PTR [rsp],xmm0
    69bb:	mov    QWORD PTR [rsp+0x30],rax
    69c0:	mov    DWORD PTR [rsp],0xa
    69c7:	movups XMMWORD PTR [rsp+0x10],xmm1
    69cc:	movups XMMWORD PTR [rsp+0x20],xmm2
    69d1:	test   rsi,rsi
    69d4:	je     2888 <__ctype_b_loc@plt+0x38>
    69da:	test   rdx,rdx
    69dd:	je     2888 <__ctype_b_loc@plt+0x38>
    69e3:	mov    r8,rcx
    69e6:	mov    QWORD PTR [rsp+0x28],rsi
    69eb:	mov    rcx,rsp
    69ee:	mov    QWORD PTR [rsp+0x30],rdx
    69f3:	mov    rsi,r8
    69f6:	mov    rdx,0xffffffffffffffff
    69fd:	call   5ee0 <__ctype_b_loc@plt+0x3690>
    6a02:	mov    rcx,QWORD PTR [rsp+0x38]
    6a07:	sub    rcx,QWORD PTR fs:0x28
    6a10:	jne    6a17 <__ctype_b_loc@plt+0x41c7>
    6a12:	add    rsp,0x48
    6a16:	ret    
    6a17:	call   2540 <__stack_chk_fail@plt>
    6a1c:	nop    DWORD PTR [rax+0x0]
    6a20:	endbr64 
    6a24:	sub    rsp,0x48
    6a28:	movdqa xmm0,XMMWORD PTR [rip+0x6830]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    6a30:	movdqa xmm1,XMMWORD PTR [rip+0x6838]        # d270 <stderr@@GLIBC_2.2.5+0x190>
    6a38:	mov    rax,QWORD PTR fs:0x28
    6a41:	mov    QWORD PTR [rsp+0x38],rax
    6a46:	xor    eax,eax
    6a48:	movdqa xmm2,XMMWORD PTR [rip+0x6830]        # d280 <stderr@@GLIBC_2.2.5+0x1a0>
    6a50:	mov    rax,QWORD PTR [rip+0x6839]        # d290 <stderr@@GLIBC_2.2.5+0x1b0>
    6a57:	movups XMMWORD PTR [rsp],xmm0
    6a5b:	mov    QWORD PTR [rsp+0x30],rax
    6a60:	mov    DWORD PTR [rsp],0xa
    6a67:	movups XMMWORD PTR [rsp+0x10],xmm1
    6a6c:	movups XMMWORD PTR [rsp+0x20],xmm2
    6a71:	test   rsi,rsi
    6a74:	je     288d <__ctype_b_loc@plt+0x3d>
    6a7a:	test   rdx,rdx
    6a7d:	je     288d <__ctype_b_loc@plt+0x3d>
    6a83:	mov    r9,rcx
    6a86:	mov    QWORD PTR [rsp+0x28],rsi
    6a8b:	mov    rcx,rsp
    6a8e:	mov    QWORD PTR [rsp+0x30],rdx
    6a93:	mov    rsi,r9
    6a96:	mov    rdx,r8
    6a99:	call   5ee0 <__ctype_b_loc@plt+0x3690>
    6a9e:	mov    rcx,QWORD PTR [rsp+0x38]
    6aa3:	sub    rcx,QWORD PTR fs:0x28
    6aac:	jne    6ab3 <__ctype_b_loc@plt+0x4263>
    6aae:	add    rsp,0x48
    6ab2:	ret    
    6ab3:	call   2540 <__stack_chk_fail@plt>
    6ab8:	nop    DWORD PTR [rax+rax*1+0x0]
    6ac0:	endbr64 
    6ac4:	sub    rsp,0x48
    6ac8:	movdqa xmm0,XMMWORD PTR [rip+0x6790]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    6ad0:	movdqa xmm1,XMMWORD PTR [rip+0x6798]        # d270 <stderr@@GLIBC_2.2.5+0x190>
    6ad8:	mov    rax,QWORD PTR fs:0x28
    6ae1:	mov    QWORD PTR [rsp+0x38],rax
    6ae6:	xor    eax,eax
    6ae8:	movdqa xmm2,XMMWORD PTR [rip+0x6790]        # d280 <stderr@@GLIBC_2.2.5+0x1a0>
    6af0:	mov    rax,QWORD PTR [rip+0x6799]        # d290 <stderr@@GLIBC_2.2.5+0x1b0>
    6af7:	movups XMMWORD PTR [rsp],xmm0
    6afb:	mov    QWORD PTR [rsp+0x30],rax
    6b00:	mov    DWORD PTR [rsp],0xa
    6b07:	movups XMMWORD PTR [rsp+0x10],xmm1
    6b0c:	movups XMMWORD PTR [rsp+0x20],xmm2
    6b11:	test   rdi,rdi
    6b14:	je     2892 <__ctype_b_loc@plt+0x42>
    6b1a:	test   rsi,rsi
    6b1d:	je     2892 <__ctype_b_loc@plt+0x42>
    6b23:	mov    r8,rdx
    6b26:	mov    QWORD PTR [rsp+0x28],rdi
    6b2b:	mov    rcx,rsp
    6b2e:	xor    edi,edi
    6b30:	mov    QWORD PTR [rsp+0x30],rsi
    6b35:	mov    rdx,0xffffffffffffffff
    6b3c:	mov    rsi,r8
    6b3f:	call   5ee0 <__ctype_b_loc@plt+0x3690>
    6b44:	mov    rcx,QWORD PTR [rsp+0x38]
    6b49:	sub    rcx,QWORD PTR fs:0x28
    6b52:	jne    6b59 <__ctype_b_loc@plt+0x4309>
    6b54:	add    rsp,0x48
    6b58:	ret    
    6b59:	call   2540 <__stack_chk_fail@plt>
    6b5e:	xchg   ax,ax
    6b60:	endbr64 
    6b64:	sub    rsp,0x48
    6b68:	movdqa xmm0,XMMWORD PTR [rip+0x66f0]        # d260 <stderr@@GLIBC_2.2.5+0x180>
    6b70:	movdqa xmm1,XMMWORD PTR [rip+0x66f8]        # d270 <stderr@@GLIBC_2.2.5+0x190>
    6b78:	mov    rax,QWORD PTR fs:0x28
    6b81:	mov    QWORD PTR [rsp+0x38],rax
    6b86:	xor    eax,eax
    6b88:	movdqa xmm2,XMMWORD PTR [rip+0x66f0]        # d280 <stderr@@GLIBC_2.2.5+0x1a0>
    6b90:	mov    rax,QWORD PTR [rip+0x66f9]        # d290 <stderr@@GLIBC_2.2.5+0x1b0>
    6b97:	movups XMMWORD PTR [rsp],xmm0
    6b9b:	mov    QWORD PTR [rsp+0x30],rax
    6ba0:	mov    DWORD PTR [rsp],0xa
    6ba7:	movups XMMWORD PTR [rsp+0x10],xmm1
    6bac:	movups XMMWORD PTR [rsp+0x20],xmm2
    6bb1:	test   rdi,rdi
    6bb4:	je     2897 <__ctype_b_loc@plt+0x47>
    6bba:	test   rsi,rsi
    6bbd:	je     2897 <__ctype_b_loc@plt+0x47>
    6bc3:	mov    r8,rdx
    6bc6:	mov    QWORD PTR [rsp+0x28],rdi
    6bcb:	mov    rdx,rcx
    6bce:	xor    edi,edi
    6bd0:	mov    QWORD PTR [rsp+0x30],rsi
    6bd5:	mov    rcx,rsp
    6bd8:	mov    rsi,r8
    6bdb:	call   5ee0 <__ctype_b_loc@plt+0x3690>
    6be0:	mov    rdx,QWORD PTR [rsp+0x38]
    6be5:	sub    rdx,QWORD PTR fs:0x28
    6bee:	jne    6bf5 <__ctype_b_loc@plt+0x43a5>
    6bf0:	add    rsp,0x48
    6bf4:	ret    
    6bf5:	call   2540 <__stack_chk_fail@plt>
    6bfa:	nop    WORD PTR [rax+rax*1+0x0]
    6c00:	endbr64 
    6c04:	lea    rcx,[rip+0x6415]        # d020 <_obstack_memory_used@@Base+0x5060>
    6c0b:	jmp    5ee0 <__ctype_b_loc@plt+0x3690>
    6c10:	endbr64 
    6c14:	mov    rdx,rsi
    6c17:	lea    rcx,[rip+0x6402]        # d020 <_obstack_memory_used@@Base+0x5060>
    6c1e:	mov    rsi,rdi
    6c21:	xor    edi,edi
    6c23:	jmp    5ee0 <__ctype_b_loc@plt+0x3690>
    6c28:	nop    DWORD PTR [rax+rax*1+0x0]
    6c30:	endbr64 
    6c34:	lea    rcx,[rip+0x63e5]        # d020 <_obstack_memory_used@@Base+0x5060>
    6c3b:	mov    rdx,0xffffffffffffffff
    6c42:	jmp    5ee0 <__ctype_b_loc@plt+0x3690>
    6c47:	nop    WORD PTR [rax+rax*1+0x0]
    6c50:	endbr64 
    6c54:	mov    rsi,rdi
    6c57:	lea    rcx,[rip+0x63c2]        # d020 <_obstack_memory_used@@Base+0x5060>
    6c5e:	mov    rdx,0xffffffffffffffff
    6c65:	xor    edi,edi
    6c67:	jmp    5ee0 <__ctype_b_loc@plt+0x3690>
    6c6c:	nop    DWORD PTR [rax+0x0]
    6c70:	push   r12
    6c72:	push   rbp
    6c73:	push   rbx
    6c74:	mov    rdx,QWORD PTR [rdi+0x30]
    6c78:	mov    rbx,rdi
    6c7b:	mov    r12,QWORD PTR [rdi+0x28]
    6c7f:	mov    rbp,rdx
    6c82:	sub    rbp,r12
    6c85:	sub    rbp,0x1
    6c89:	cmp    rdx,r12
    6c8c:	je     6d50 <__ctype_b_loc@plt+0x4500>
    6c92:	mov    rcx,QWORD PTR [rbx+0x48]
    6c96:	lea    rax,[rdx+rcx*1]
    6c9a:	not    rcx
    6c9d:	mov    rdx,QWORD PTR [rbx+0x38]
    6ca1:	and    rax,rcx
    6ca4:	mov    rsi,rax
    6ca7:	mov    rcx,rdx
    6caa:	sub    rsi,QWORD PTR [rbx+0x20]
    6cae:	sub    rcx,QWORD PTR [rbx+0x20]
    6cb2:	mov    QWORD PTR [rbx+0x30],rax
    6cb6:	cmp    rsi,rcx
    6cb9:	jbe    6cc2 <__ctype_b_loc@plt+0x4472>
    6cbb:	mov    QWORD PTR [rbx+0x30],rdx
    6cbf:	mov    rax,rdx
    6cc2:	mov    QWORD PTR [rbx+0x28],rax
    6cc6:	mov    rdx,QWORD PTR [rbx+0x88]
    6ccd:	mov    rax,QWORD PTR [rbx+0x90]
    6cd4:	sub    rax,rdx
    6cd7:	cmp    rax,0x7
    6cdb:	jbe    6d18 <__ctype_b_loc@plt+0x44c8>
    6cdd:	mov    QWORD PTR [rdx],r12
    6ce0:	mov    rdx,QWORD PTR [rbx+0xe0]
    6ce7:	mov    rax,QWORD PTR [rbx+0xe8]
    6cee:	add    QWORD PTR [rbx+0x88],0x8
    6cf6:	sub    rax,rdx
    6cf9:	cmp    rax,0x7
    6cfd:	jbe    6d30 <__ctype_b_loc@plt+0x44e0>
    6cff:	mov    QWORD PTR [rdx],rbp
    6d02:	add    QWORD PTR [rbx+0xe0],0x8
    6d0a:	add    QWORD PTR [rbx],0x1
    6d0e:	pop    rbx
    6d0f:	pop    rbp
    6d10:	pop    r12
    6d12:	ret    
    6d13:	nop    DWORD PTR [rax+rax*1+0x0]
    6d18:	lea    rdi,[rbx+0x70]
    6d1c:	mov    esi,0x8
    6d21:	call   7dc0 <_obstack_newchunk@@Base>
    6d26:	mov    rdx,QWORD PTR [rbx+0x88]
    6d2d:	jmp    6cdd <__ctype_b_loc@plt+0x448d>
    6d2f:	nop
    6d30:	lea    rdi,[rbx+0xc8]
    6d37:	mov    esi,0x8
    6d3c:	call   7dc0 <_obstack_newchunk@@Base>
    6d41:	mov    rdx,QWORD PTR [rbx+0xe0]
    6d48:	jmp    6cff <__ctype_b_loc@plt+0x44af>
    6d4a:	nop    WORD PTR [rax+rax*1+0x0]
    6d50:	or     BYTE PTR [rdi+0x68],0x2
    6d54:	jmp    6c92 <__ctype_b_loc@plt+0x4442>
    6d59:	nop    DWORD PTR [rax+0x0]
    6d60:	endbr64 
    6d64:	push   r12
    6d66:	mov    r12,QWORD PTR [rip+0x6273]        # cfe0 <_obstack_memory_used@@Base+0x5020>
    6d6d:	xor    edx,edx
    6d6f:	xor    esi,esi
    6d71:	push   rbp
    6d72:	mov    rbp,QWORD PTR [rip+0x6247]        # cfc0 <_obstack_memory_used@@Base+0x5000>
    6d79:	push   rbx
    6d7a:	mov    rcx,r12
    6d7d:	mov    rbx,rdi
    6d80:	lea    rdi,[rdi+0x18]
    6d84:	mov    QWORD PTR [rdi-0x18],0x0
    6d8c:	mov    r8,rbp
    6d8f:	mov    QWORD PTR [rdi-0x10],0x0
    6d97:	mov    QWORD PTR [rdi-0x8],0x0
    6d9f:	call   7d80 <_obstack_begin@@Base>
    6da4:	lea    rdi,[rbx+0x70]
    6da8:	mov    r8,rbp
    6dab:	mov    rcx,r12
    6dae:	xor    edx,edx
    6db0:	xor    esi,esi
    6db2:	call   7d80 <_obstack_begin@@Base>
    6db7:	lea    rdi,[rbx+0xc8]
    6dbe:	mov    r8,rbp
    6dc1:	pop    rbx
    6dc2:	mov    rcx,r12
    6dc5:	pop    rbp
    6dc6:	xor    edx,edx
    6dc8:	xor    esi,esi
    6dca:	pop    r12
    6dcc:	jmp    7d80 <_obstack_begin@@Base>
    6dd1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    6ddc:	nop    DWORD PTR [rax+0x0]
    6de0:	endbr64 
    6de4:	push   rbx
    6de5:	xor    esi,esi
    6de7:	mov    rbx,rdi
    6dea:	lea    rdi,[rdi+0x18]
    6dee:	call   7f30 <_obstack_free@@Base>
    6df3:	lea    rdi,[rbx+0x70]
    6df7:	xor    esi,esi
    6df9:	call   7f30 <_obstack_free@@Base>
    6dfe:	lea    rdi,[rbx+0xc8]
    6e05:	xor    esi,esi
    6e07:	pop    rbx
    6e08:	jmp    7f30 <_obstack_free@@Base>
    6e0d:	nop    DWORD PTR [rax]
    6e10:	endbr64 
    6e14:	push   r13
    6e16:	lea    r13,[rsi+0x18]
    6e1a:	push   r12
    6e1c:	mov    r12,rdi
    6e1f:	push   rbp
    6e20:	mov    rbp,rsi
    6e23:	push   rbx
    6e24:	sub    rsp,0x8
    6e28:	jmp    6e3e <__ctype_b_loc@plt+0x45ee>
    6e2a:	nop    WORD PTR [rax+rax*1+0x0]
    6e30:	lea    rdx,[rax+0x1]
    6e34:	mov    QWORD PTR [rbp+0x30],rdx
    6e38:	mov    BYTE PTR [rax],bl
    6e3a:	test   ebx,ebx
    6e3c:	je     6e80 <__ctype_b_loc@plt+0x4630>
    6e3e:	mov    rdi,r12
    6e41:	call   25d0 <fgetc@plt>
    6e46:	mov    ebx,eax
    6e48:	mov    rax,QWORD PTR [rbp+0x30]
    6e4c:	cmp    ebx,0xffffffff
    6e4f:	je     6e90 <__ctype_b_loc@plt+0x4640>
    6e51:	cmp    QWORD PTR [rbp+0x38],rax
    6e55:	jne    6e30 <__ctype_b_loc@plt+0x45e0>
    6e57:	mov    esi,0x1
    6e5c:	mov    rdi,r13
    6e5f:	call   7dc0 <_obstack_newchunk@@Base>
    6e64:	mov    rax,QWORD PTR [rbp+0x30]
    6e68:	lea    rdx,[rax+0x1]
    6e6c:	mov    QWORD PTR [rbp+0x30],rdx
    6e70:	mov    BYTE PTR [rax],bl
    6e72:	test   ebx,ebx
    6e74:	jne    6e3e <__ctype_b_loc@plt+0x45ee>
    6e76:	cs nop WORD PTR [rax+rax*1+0x0]
    6e80:	mov    rdi,rbp
    6e83:	call   6c70 <__ctype_b_loc@plt+0x4420>
    6e88:	jmp    6e3e <__ctype_b_loc@plt+0x45ee>
    6e8a:	nop    WORD PTR [rax+rax*1+0x0]
    6e90:	cmp    rax,QWORD PTR [rbp+0x28]
    6e94:	je     6eb3 <__ctype_b_loc@plt+0x4663>
    6e96:	cmp    rax,QWORD PTR [rbp+0x38]
    6e9a:	je     6ff4 <__ctype_b_loc@plt+0x47a4>
    6ea0:	lea    rdx,[rax+0x1]
    6ea4:	mov    rdi,rbp
    6ea7:	mov    QWORD PTR [rbp+0x30],rdx
    6eab:	mov    BYTE PTR [rax],0x0
    6eae:	call   6c70 <__ctype_b_loc@plt+0x4420>
    6eb3:	mov    rdx,QWORD PTR [rbp+0x88]
    6eba:	mov    rax,QWORD PTR [rbp+0x90]
    6ec1:	sub    rax,rdx
    6ec4:	cmp    rax,0x7
    6ec8:	jbe    6fb8 <__ctype_b_loc@plt+0x4768>
    6ece:	mov    QWORD PTR [rdx],0x0
    6ed5:	mov    rax,QWORD PTR [rbp+0x88]
    6edc:	mov    rsi,QWORD PTR [rbp+0x80]
    6ee3:	lea    rdx,[rax+0x8]
    6ee7:	cmp    rdx,rsi
    6eea:	je     6fe8 <__ctype_b_loc@plt+0x4798>
    6ef0:	mov    rcx,QWORD PTR [rbp+0xa0]
    6ef7:	lea    rax,[rdx+rcx*1]
    6efb:	not    rcx
    6efe:	mov    rdx,QWORD PTR [rbp+0x90]
    6f05:	and    rax,rcx
    6f08:	mov    rdi,rax
    6f0b:	mov    rcx,rdx
    6f0e:	sub    rdi,QWORD PTR [rbp+0x78]
    6f12:	sub    rcx,QWORD PTR [rbp+0x78]
    6f16:	mov    QWORD PTR [rbp+0x88],rax
    6f1d:	cmp    rdi,rcx
    6f20:	jbe    6f2c <__ctype_b_loc@plt+0x46dc>
    6f22:	mov    QWORD PTR [rbp+0x88],rdx
    6f29:	mov    rax,rdx
    6f2c:	mov    QWORD PTR [rbp+0x8],rsi
    6f30:	mov    rdx,QWORD PTR [rbp+0xe0]
    6f37:	mov    rsi,QWORD PTR [rbp+0xd8]
    6f3e:	mov    QWORD PTR [rbp+0x80],rax
    6f45:	cmp    rdx,rsi
    6f48:	je     6fd8 <__ctype_b_loc@plt+0x4788>
    6f4e:	mov    rcx,QWORD PTR [rbp+0xf8]
    6f55:	lea    rax,[rdx+rcx*1]
    6f59:	not    rcx
    6f5c:	mov    rdx,QWORD PTR [rbp+0xe8]
    6f63:	and    rax,rcx
    6f66:	mov    rdi,rax
    6f69:	mov    rcx,rdx
    6f6c:	sub    rdi,QWORD PTR [rbp+0xd0]
    6f73:	sub    rcx,QWORD PTR [rbp+0xd0]
    6f7a:	mov    QWORD PTR [rbp+0xe0],rax
    6f81:	cmp    rdi,rcx
    6f84:	jbe    6f90 <__ctype_b_loc@plt+0x4740>
    6f86:	mov    QWORD PTR [rbp+0xe0],rdx
    6f8d:	mov    rax,rdx
    6f90:	mov    QWORD PTR [rbp+0xd8],rax
    6f97:	mov    rdi,r12
    6f9a:	mov    QWORD PTR [rbp+0x10],rsi
    6f9e:	call   24c0 <ferror@plt>
    6fa3:	test   eax,eax
    6fa5:	sete   al
    6fa8:	add    rsp,0x8
    6fac:	pop    rbx
    6fad:	pop    rbp
    6fae:	pop    r12
    6fb0:	pop    r13
    6fb2:	ret    
    6fb3:	nop    DWORD PTR [rax+rax*1+0x0]
    6fb8:	lea    rdi,[rbp+0x70]
    6fbc:	mov    esi,0x8
    6fc1:	call   7dc0 <_obstack_newchunk@@Base>
    6fc6:	mov    rdx,QWORD PTR [rbp+0x88]
    6fcd:	jmp    6ece <__ctype_b_loc@plt+0x467e>
    6fd2:	nop    WORD PTR [rax+rax*1+0x0]
    6fd8:	or     BYTE PTR [rbp+0x118],0x2
    6fdf:	jmp    6f4e <__ctype_b_loc@plt+0x46fe>
    6fe4:	nop    DWORD PTR [rax+0x0]
    6fe8:	or     BYTE PTR [rbp+0xc0],0x2
    6fef:	jmp    6ef0 <__ctype_b_loc@plt+0x46a0>
    6ff4:	lea    rdi,[rbp+0x18]
    6ff8:	mov    esi,0x1
    6ffd:	call   7dc0 <_obstack_newchunk@@Base>
    7002:	mov    rax,QWORD PTR [rbp+0x30]
    7006:	jmp    6ea0 <__ctype_b_loc@plt+0x4650>
    700b:	nop    DWORD PTR [rax+rax*1+0x0]
    7010:	endbr64 
    7014:	push   r13
    7016:	mov    r13d,edi
    7019:	push   r12
    701b:	push   rbp
    701c:	mov    rbp,rsi
    701f:	push   rbx
    7020:	mov    rbx,rdx
    7023:	sub    rsp,0x8
    7027:	nop    WORD PTR [rax+rax*1+0x0]
    7030:	mov    rdx,rbx
    7033:	mov    rsi,rbp
    7036:	mov    edi,r13d
    7039:	call   2610 <read@plt>
    703e:	mov    r12,rax
    7041:	test   rax,rax
    7044:	jns    7070 <__ctype_b_loc@plt+0x4820>
    7046:	call   2480 <__errno_location@plt>
    704b:	mov    eax,DWORD PTR [rax]
    704d:	cmp    eax,0x4
    7050:	je     7030 <__ctype_b_loc@plt+0x47e0>
    7052:	cmp    rbx,0x7ff00000
    7059:	jbe    7070 <__ctype_b_loc@plt+0x4820>
    705b:	cmp    eax,0x16
    705e:	jne    7070 <__ctype_b_loc@plt+0x4820>
    7060:	mov    ebx,0x7ff00000
    7065:	jmp    7030 <__ctype_b_loc@plt+0x47e0>
    7067:	nop    WORD PTR [rax+rax*1+0x0]
    7070:	add    rsp,0x8
    7074:	mov    rax,r12
    7077:	pop    rbx
    7078:	pop    rbp
    7079:	pop    r12
    707b:	pop    r13
    707d:	ret    
    707e:	xchg   ax,ax
    7080:	endbr64 
    7084:	push   r15
    7086:	push   r14
    7088:	push   r13
    708a:	push   r12
    708c:	mov    r12,r9
    708f:	push   rbp
    7090:	mov    rbp,rdi
    7093:	push   rbx
    7094:	mov    rbx,r8
    7097:	sub    rsp,0x38
    709b:	test   rsi,rsi
    709e:	je     71f0 <__ctype_b_loc@plt+0x49a0>
    70a4:	mov    r9,rcx
    70a7:	mov    r8,rdx
    70aa:	mov    rcx,rsi
    70ad:	xor    eax,eax
    70af:	lea    rdx,[rip+0x3012]        # a0c8 <_obstack_memory_used@@Base+0x2108>
    70b6:	mov    esi,0x1
    70bb:	call   2810 <__fprintf_chk@plt>
    70c0:	xor    edi,edi
    70c2:	mov    edx,0x5
    70c7:	lea    rsi,[rip+0x300d]        # a0db <_obstack_memory_used@@Base+0x211b>
    70ce:	call   2510 <dcgettext@plt>
    70d3:	mov    r8d,0x7e4
    70d9:	mov    esi,0x1
    70de:	mov    rdi,rbp
    70e1:	mov    rcx,rax
    70e4:	lea    rdx,[rip+0x3315]        # a400 <_obstack_memory_used@@Base+0x2440>
    70eb:	xor    eax,eax
    70ed:	call   2810 <__fprintf_chk@plt>
    70f2:	mov    rsi,rbp
    70f5:	mov    edi,0xa
    70fa:	call   2660 <fputc_unlocked@plt>
    70ff:	xor    edi,edi
    7101:	mov    edx,0x5
    7106:	lea    rsi,[rip+0x3073]        # a180 <_obstack_memory_used@@Base+0x21c0>
    710d:	call   2510 <dcgettext@plt>
    7112:	mov    esi,0x1
    7117:	mov    rdi,rbp
    711a:	lea    rcx,[rip+0x310f]        # a230 <_obstack_memory_used@@Base+0x2270>
    7121:	mov    rdx,rax
    7124:	xor    eax,eax
    7126:	call   2810 <__fprintf_chk@plt>
    712b:	mov    rsi,rbp
    712e:	mov    edi,0xa
    7133:	call   2660 <fputc_unlocked@plt>
    7138:	cmp    r12,0x9
    713c:	ja     7494 <__ctype_b_loc@plt+0x4c44>
    7142:	lea    rdx,[rip+0x327f]        # a3c8 <_obstack_memory_used@@Base+0x2408>
    7149:	movsxd rax,DWORD PTR [rdx+r12*4]
    714d:	add    rax,rdx
    7150:	notrack jmp rax
    7153:	nop    DWORD PTR [rax+rax*1+0x0]
    7158:	mov    r10,QWORD PTR [rbx+0x38]
    715c:	mov    r9,QWORD PTR [rbx+0x30]
    7160:	mov    edx,0x5
    7165:	xor    edi,edi
    7167:	mov    r8,QWORD PTR [rbx+0x28]
    716b:	mov    rcx,QWORD PTR [rbx+0x20]
    716f:	lea    rsi,[rip+0x3182]        # a2f8 <_obstack_memory_used@@Base+0x2338>
    7176:	mov    r15,QWORD PTR [rbx+0x18]
    717a:	mov    r14,QWORD PTR [rbx+0x10]
    717e:	mov    QWORD PTR [rsp+0x20],r10
    7183:	mov    r13,QWORD PTR [rbx+0x8]
    7187:	mov    r12,QWORD PTR [rbx]
    718a:	mov    QWORD PTR [rsp+0x18],r9
    718f:	mov    QWORD PTR [rsp+0x10],r8
    7194:	mov    QWORD PTR [rsp+0x8],rcx
    7199:	call   2510 <dcgettext@plt>
    719e:	sub    rsp,0x8
    71a2:	mov    rdx,rax
    71a5:	mov    r10,QWORD PTR [rsp+0x28]
    71aa:	mov    esi,0x1
    71af:	mov    rdi,rbp
    71b2:	xor    eax,eax
    71b4:	push   r10
    71b6:	mov    r9,QWORD PTR [rsp+0x28]
    71bb:	push   r9
    71bd:	mov    r8,QWORD PTR [rsp+0x28]
    71c2:	mov    r9,r14
    71c5:	push   r8
    71c7:	mov    rcx,QWORD PTR [rsp+0x28]
    71cc:	mov    r8,r13
    71cf:	push   rcx
    71d0:	mov    rcx,r12
    71d3:	push   r15
    71d5:	call   2810 <__fprintf_chk@plt>
    71da:	add    rsp,0x30
    71de:	add    rsp,0x38
    71e2:	pop    rbx
    71e3:	pop    rbp
    71e4:	pop    r12
    71e6:	pop    r13
    71e8:	pop    r14
    71ea:	pop    r15
    71ec:	ret    
    71ed:	nop    DWORD PTR [rax]
    71f0:	mov    r8,rcx
    71f3:	mov    esi,0x1
    71f8:	mov    rcx,rdx
    71fb:	xor    eax,eax
    71fd:	lea    rdx,[rip+0x2ed0]        # a0d4 <_obstack_memory_used@@Base+0x2114>
    7204:	call   2810 <__fprintf_chk@plt>
    7209:	jmp    70c0 <__ctype_b_loc@plt+0x4870>
    720e:	xchg   ax,ax
    7210:	mov    r11,QWORD PTR [rbx+0x40]
    7214:	mov    r10,QWORD PTR [rbx+0x38]
    7218:	mov    edx,0x5
    721d:	lea    rsi,[rip+0x3104]        # a328 <_obstack_memory_used@@Base+0x2368>
    7224:	mov    r9,QWORD PTR [rbx+0x30]
    7228:	mov    r8,QWORD PTR [rbx+0x28]
    722c:	mov    rcx,QWORD PTR [rbx+0x20]
    7230:	mov    r15,QWORD PTR [rbx+0x18]
    7234:	mov    QWORD PTR [rsp+0x28],r11
    7239:	mov    r14,QWORD PTR [rbx+0x10]
    723d:	mov    r13,QWORD PTR [rbx+0x8]
    7241:	mov    QWORD PTR [rsp+0x20],r10
    7246:	mov    QWORD PTR [rsp+0x18],r9
    724b:	mov    r12,QWORD PTR [rbx]
    724e:	mov    QWORD PTR [rsp+0x10],r8
    7253:	mov    QWORD PTR [rsp+0x8],rcx
    7258:	xor    edi,edi
    725a:	call   2510 <dcgettext@plt>
    725f:	mov    r11,QWORD PTR [rsp+0x28]
    7264:	mov    rdx,rax
    7267:	push   r11
    7269:	jmp    71a5 <__ctype_b_loc@plt+0x4955>
    726e:	xchg   ax,ax
    7270:	mov    r12,QWORD PTR [rbx]
    7273:	mov    edx,0x5
    7278:	lea    rsi,[rip+0x2e60]        # a0df <_obstack_memory_used@@Base+0x211f>
    727f:	xor    edi,edi
    7281:	call   2510 <dcgettext@plt>
    7286:	add    rsp,0x38
    728a:	mov    rdi,rbp
    728d:	mov    esi,0x1
    7292:	pop    rbx
    7293:	mov    rdx,rax
    7296:	pop    rbp
    7297:	mov    rcx,r12
    729a:	xor    eax,eax
    729c:	pop    r12
    729e:	pop    r13
    72a0:	pop    r14
    72a2:	pop    r15
    72a4:	jmp    2810 <__fprintf_chk@plt>
    72a9:	nop    DWORD PTR [rax+0x0]
    72b0:	mov    r13,QWORD PTR [rbx+0x8]
    72b4:	mov    r12,QWORD PTR [rbx]
    72b7:	mov    edx,0x5
    72bc:	xor    edi,edi
    72be:	lea    rsi,[rip+0x2e2a]        # a0ef <_obstack_memory_used@@Base+0x212f>
    72c5:	call   2510 <dcgettext@plt>
    72ca:	add    rsp,0x38
    72ce:	mov    r8,r13
    72d1:	mov    rcx,r12
    72d4:	pop    rbx
    72d5:	mov    rdx,rax
    72d8:	mov    rdi,rbp
    72db:	mov    esi,0x1
    72e0:	pop    rbp
    72e1:	xor    eax,eax
    72e3:	pop    r12
    72e5:	pop    r13
    72e7:	pop    r14
    72e9:	pop    r15
    72eb:	jmp    2810 <__fprintf_chk@plt>
    72f0:	mov    r14,QWORD PTR [rbx+0x10]
    72f4:	mov    r13,QWORD PTR [rbx+0x8]
    72f8:	mov    edx,0x5
    72fd:	xor    edi,edi
    72ff:	mov    r12,QWORD PTR [rbx]
    7302:	lea    rsi,[rip+0x2dfd]        # a106 <_obstack_memory_used@@Base+0x2146>
    7309:	call   2510 <dcgettext@plt>
    730e:	add    rsp,0x38
    7312:	mov    r9,r14
    7315:	mov    r8,r13
    7318:	pop    rbx
    7319:	mov    rdx,rax
    731c:	mov    rcx,r12
    731f:	mov    rdi,rbp
    7322:	mov    esi,0x1
    7327:	pop    rbp
    7328:	xor    eax,eax
    732a:	pop    r12
    732c:	pop    r13
    732e:	pop    r14
    7330:	pop    r15
    7332:	jmp    2810 <__fprintf_chk@plt>
    7337:	nop    WORD PTR [rax+rax*1+0x0]
    7340:	mov    edx,0x5
    7345:	xor    edi,edi
    7347:	mov    r15,QWORD PTR [rbx+0x18]
    734b:	mov    r14,QWORD PTR [rbx+0x10]
    734f:	lea    rsi,[rip+0x2f02]        # a258 <_obstack_memory_used@@Base+0x2298>
    7356:	mov    r13,QWORD PTR [rbx+0x8]
    735a:	mov    r12,QWORD PTR [rbx]
    735d:	call   2510 <dcgettext@plt>
    7362:	sub    rsp,0x8
    7366:	mov    rdx,rax
    7369:	push   r15
    736b:	mov    r9,r14
    736e:	mov    r8,r13
    7371:	mov    rcx,r12
    7374:	mov    rdi,rbp
    7377:	mov    esi,0x1
    737c:	xor    eax,eax
    737e:	call   2810 <__fprintf_chk@plt>
    7383:	pop    rax
    7384:	pop    rdx
    7385:	add    rsp,0x38
    7389:	pop    rbx
    738a:	pop    rbp
    738b:	pop    r12
    738d:	pop    r13
    738f:	pop    r14
    7391:	pop    r15
    7393:	ret    
    7394:	nop    DWORD PTR [rax+0x0]
    7398:	mov    rcx,QWORD PTR [rbx+0x20]
    739c:	mov    edx,0x5
    73a1:	xor    edi,edi
    73a3:	mov    r15,QWORD PTR [rbx+0x18]
    73a7:	lea    rsi,[rip+0x2eca]        # a278 <_obstack_memory_used@@Base+0x22b8>
    73ae:	mov    r14,QWORD PTR [rbx+0x10]
    73b2:	mov    r13,QWORD PTR [rbx+0x8]
    73b6:	mov    QWORD PTR [rsp+0x8],rcx
    73bb:	mov    r12,QWORD PTR [rbx]
    73be:	call   2510 <dcgettext@plt>
    73c3:	mov    rcx,QWORD PTR [rsp+0x8]
    73c8:	mov    rdx,rax
    73cb:	push   rcx
    73cc:	jmp    7369 <__ctype_b_loc@plt+0x4b19>
    73ce:	xchg   ax,ax
    73d0:	mov    r8,QWORD PTR [rbx+0x28]
    73d4:	mov    rcx,QWORD PTR [rbx+0x20]
    73d8:	mov    edx,0x5
    73dd:	xor    edi,edi
    73df:	lea    rsi,[rip+0x2eba]        # a2a0 <_obstack_memory_used@@Base+0x22e0>
    73e6:	mov    r15,QWORD PTR [rbx+0x18]
    73ea:	mov    r14,QWORD PTR [rbx+0x10]
    73ee:	mov    r13,QWORD PTR [rbx+0x8]
    73f2:	mov    r12,QWORD PTR [rbx]
    73f5:	mov    QWORD PTR [rsp+0x10],r8
    73fa:	mov    QWORD PTR [rsp+0x8],rcx
    73ff:	call   2510 <dcgettext@plt>
    7404:	sub    rsp,0x8
    7408:	mov    rdx,rax
    740b:	mov    r8,QWORD PTR [rsp+0x18]
    7410:	mov    r9,r14
    7413:	mov    rdi,rbp
    7416:	mov    esi,0x1
    741b:	xor    eax,eax
    741d:	push   r8
    741f:	mov    rcx,QWORD PTR [rsp+0x18]
    7424:	mov    r8,r13
    7427:	push   rcx
    7428:	mov    rcx,r12
    742b:	push   r15
    742d:	call   2810 <__fprintf_chk@plt>
    7432:	add    rsp,0x20
    7436:	add    rsp,0x38
    743a:	pop    rbx
    743b:	pop    rbp
    743c:	pop    r12
    743e:	pop    r13
    7440:	pop    r14
    7442:	pop    r15
    7444:	ret    
    7445:	nop    DWORD PTR [rax]
    7448:	mov    r9,QWORD PTR [rbx+0x30]
    744c:	mov    r8,QWORD PTR [rbx+0x28]
    7450:	mov    edx,0x5
    7455:	xor    edi,edi
    7457:	mov    rcx,QWORD PTR [rbx+0x20]
    745b:	lea    rsi,[rip+0x2e66]        # a2c8 <_obstack_memory_used@@Base+0x2308>
    7462:	mov    r15,QWORD PTR [rbx+0x18]
    7466:	mov    r14,QWORD PTR [rbx+0x10]
    746a:	mov    r13,QWORD PTR [rbx+0x8]
    746e:	mov    QWORD PTR [rsp+0x18],r9
    7473:	mov    QWORD PTR [rsp+0x10],r8
    7478:	mov    r12,QWORD PTR [rbx]
    747b:	mov    QWORD PTR [rsp+0x8],rcx
    7480:	call   2510 <dcgettext@plt>
    7485:	mov    r9,QWORD PTR [rsp+0x18]
    748a:	mov    rdx,rax
    748d:	push   r9
    748f:	jmp    740b <__ctype_b_loc@plt+0x4bbb>
    7494:	mov    r11,QWORD PTR [rbx+0x40]
    7498:	mov    r10,QWORD PTR [rbx+0x38]
    749c:	mov    edx,0x5
    74a1:	lea    rsi,[rip+0x2eb8]        # a360 <_obstack_memory_used@@Base+0x23a0>
    74a8:	mov    r9,QWORD PTR [rbx+0x30]
    74ac:	mov    r8,QWORD PTR [rbx+0x28]
    74b0:	mov    rcx,QWORD PTR [rbx+0x20]
    74b4:	mov    r15,QWORD PTR [rbx+0x18]
    74b8:	mov    QWORD PTR [rsp+0x28],r11
    74bd:	mov    r14,QWORD PTR [rbx+0x10]
    74c1:	mov    r13,QWORD PTR [rbx+0x8]
    74c5:	mov    QWORD PTR [rsp+0x20],r10
    74ca:	mov    QWORD PTR [rsp+0x18],r9
    74cf:	mov    r12,QWORD PTR [rbx]
    74d2:	mov    QWORD PTR [rsp+0x10],r8
    74d7:	mov    QWORD PTR [rsp+0x8],rcx
    74dc:	jmp    7258 <__ctype_b_loc@plt+0x4a08>
    74e1:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    74ec:	nop    DWORD PTR [rax+0x0]
    74f0:	endbr64 
    74f4:	xor    r9d,r9d
    74f7:	cmp    QWORD PTR [r8],0x0
    74fb:	je     750b <__ctype_b_loc@plt+0x4cbb>
    74fd:	nop    DWORD PTR [rax]
    7500:	add    r9,0x1
    7504:	cmp    QWORD PTR [r8+r9*8],0x0
    7509:	jne    7500 <__ctype_b_loc@plt+0x4cb0>
    750b:	jmp    7080 <__ctype_b_loc@plt+0x4830>
    7510:	endbr64 
    7514:	sub    rsp,0x68
    7518:	mov    r11,rcx
    751b:	mov    r10,rdx
    751e:	mov    rcx,r8
    7521:	mov    rax,QWORD PTR fs:0x28
    752a:	mov    QWORD PTR [rsp+0x58],rax
    752f:	xor    eax,eax
    7531:	xor    r9d,r9d
    7534:	mov    r8,rsp
    7537:	jmp    7561 <__ctype_b_loc@plt+0x4d11>
    7539:	nop    DWORD PTR [rax+0x0]
    7540:	mov    edx,eax
    7542:	add    eax,0x8
    7545:	add    rdx,QWORD PTR [rcx+0x10]
    7549:	mov    DWORD PTR [rcx],eax
    754b:	mov    rax,QWORD PTR [rdx]
    754e:	mov    QWORD PTR [r8+r9*8],rax
    7552:	test   rax,rax
    7555:	je     7580 <__ctype_b_loc@plt+0x4d30>
    7557:	add    r9,0x1
    755b:	cmp    r9,0xa
    755f:	je     7580 <__ctype_b_loc@plt+0x4d30>
    7561:	mov    eax,DWORD PTR [rcx]
    7563:	cmp    eax,0x2f
    7566:	jbe    7540 <__ctype_b_loc@plt+0x4cf0>
    7568:	mov    rdx,QWORD PTR [rcx+0x8]
    756c:	lea    rax,[rdx+0x8]
    7570:	mov    QWORD PTR [rcx+0x8],rax
    7574:	mov    rax,QWORD PTR [rdx]
    7577:	mov    QWORD PTR [r8+r9*8],rax
    757b:	test   rax,rax
    757e:	jne    7557 <__ctype_b_loc@plt+0x4d07>
    7580:	mov    rcx,r11
    7583:	mov    rdx,r10
    7586:	call   7080 <__ctype_b_loc@plt+0x4830>
    758b:	mov    rax,QWORD PTR [rsp+0x58]
    7590:	sub    rax,QWORD PTR fs:0x28
    7599:	jne    75a0 <__ctype_b_loc@plt+0x4d50>
    759b:	add    rsp,0x68
    759f:	ret    
    75a0:	call   2540 <__stack_chk_fail@plt>
    75a5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    75b0:	endbr64 
    75b4:	push   r12
    75b6:	mov    r10,rsi
    75b9:	mov    r11,rdx
    75bc:	mov    r12,rcx
    75bf:	mov    edx,0x20
    75c4:	sub    rsp,0xb0
    75cb:	mov    QWORD PTR [rsp+0xa0],r8
    75d3:	lea    rsi,[rsp+0x80]
    75db:	lea    rcx,[rsp+0xc0]
    75e3:	mov    QWORD PTR [rsp+0xa8],r9
    75eb:	lea    r8,[rsp+0x20]
    75f0:	xor    r9d,r9d
    75f3:	mov    rax,QWORD PTR fs:0x28
    75fc:	mov    QWORD PTR [rsp+0x78],rax
    7601:	xor    eax,eax
    7603:	lea    rax,[rsp+0xc0]
    760b:	mov    DWORD PTR [rsp+0x8],0x20
    7613:	mov    QWORD PTR [rsp+0x10],rax
    7618:	mov    QWORD PTR [rsp+0x18],rsi
    761d:	jmp    763e <__ctype_b_loc@plt+0x4dee>
    761f:	nop
    7620:	mov    eax,edx
    7622:	add    edx,0x8
    7625:	add    rax,rsi
    7628:	mov    rax,QWORD PTR [rax]
    762b:	mov    QWORD PTR [r8+r9*8],rax
    762f:	test   rax,rax
    7632:	je     7660 <__ctype_b_loc@plt+0x4e10>
    7634:	add    r9,0x1
    7638:	cmp    r9,0xa
    763c:	je     7660 <__ctype_b_loc@plt+0x4e10>
    763e:	cmp    edx,0x2f
    7641:	jbe    7620 <__ctype_b_loc@plt+0x4dd0>
    7643:	mov    rax,rcx
    7646:	add    rcx,0x8
    764a:	mov    rax,QWORD PTR [rax]
    764d:	mov    QWORD PTR [r8+r9*8],rax
    7651:	test   rax,rax
    7654:	jne    7634 <__ctype_b_loc@plt+0x4de4>
    7656:	cs nop WORD PTR [rax+rax*1+0x0]
    7660:	mov    rcx,r12
    7663:	mov    rdx,r11
    7666:	mov    rsi,r10
    7669:	call   7080 <__ctype_b_loc@plt+0x4830>
    766e:	mov    rax,QWORD PTR [rsp+0x78]
    7673:	sub    rax,QWORD PTR fs:0x28
    767c:	jne    7688 <__ctype_b_loc@plt+0x4e38>
    767e:	add    rsp,0xb0
    7685:	pop    r12
    7687:	ret    
    7688:	call   2540 <__stack_chk_fail@plt>
    768d:	nop    DWORD PTR [rax]
    7690:	endbr64 
    7694:	sub    rsp,0x8
    7698:	mov    rsi,QWORD PTR [rip+0x5a09]        # d0a8 <stdout@@GLIBC_2.2.5>
    769f:	mov    edi,0xa
    76a4:	call   2660 <fputc_unlocked@plt>
    76a9:	mov    edx,0x5
    76ae:	lea    rsi,[rip+0x2a6d]        # a122 <_obstack_memory_used@@Base+0x2162>
    76b5:	xor    edi,edi
    76b7:	call   2510 <dcgettext@plt>
    76bc:	lea    rdx,[rip+0x2a73]        # a136 <_obstack_memory_used@@Base+0x2176>
    76c3:	mov    edi,0x1
    76c8:	mov    rsi,rax
    76cb:	xor    eax,eax
    76cd:	call   2730 <__printf_chk@plt>
    76d2:	mov    edx,0x5
    76d7:	lea    rsi,[rip+0x2a6e]        # a14c <_obstack_memory_used@@Base+0x218c>
    76de:	xor    edi,edi
    76e0:	call   2510 <dcgettext@plt>
    76e5:	lea    rcx,[rip+0x2094]        # 9780 <_obstack_memory_used@@Base+0x17c0>
    76ec:	mov    edi,0x1
    76f1:	lea    rdx,[rip+0x1994]        # 908c <_obstack_memory_used@@Base+0x10cc>
    76f8:	mov    rsi,rax
    76fb:	xor    eax,eax
    76fd:	call   2730 <__printf_chk@plt>
    7702:	mov    edx,0x5
    7707:	lea    rsi,[rip+0x2c92]        # a3a0 <_obstack_memory_used@@Base+0x23e0>
    770e:	xor    edi,edi
    7710:	call   2510 <dcgettext@plt>
    7715:	lea    rdx,[rip+0x2a44]        # a160 <_obstack_memory_used@@Base+0x21a0>
    771c:	mov    edi,0x1
    7721:	add    rsp,0x8
    7725:	mov    rsi,rax
    7728:	xor    eax,eax
    772a:	jmp    2730 <__printf_chk@plt>
    772f:	nop
    7730:	endbr64 
    7734:	mov    rax,rdi
    7737:	push   r12
    7739:	mul    rsi
    773c:	mov    r12,rax
    773f:	seto   al
    7742:	test   r12,r12
    7745:	js     7764 <__ctype_b_loc@plt+0x4f14>
    7747:	movzx  eax,al
    774a:	test   rax,rax
    774d:	jne    7764 <__ctype_b_loc@plt+0x4f14>
    774f:	mov    rdi,r12
    7752:	call   2440 <malloc@plt>
    7757:	test   rax,rax
    775a:	jne    7761 <__ctype_b_loc@plt+0x4f11>
    775c:	test   r12,r12
    775f:	jne    7764 <__ctype_b_loc@plt+0x4f14>
    7761:	pop    r12
    7763:	ret    
    7764:	call   7a60 <__ctype_b_loc@plt+0x5210>
    7769:	nop    DWORD PTR [rax+0x0]
    7770:	endbr64 
    7774:	mov    rax,rsi
    7777:	push   r12
    7779:	mul    rdx
    777c:	mov    r12,rax
    777f:	seto   al
    7782:	test   r12,r12
    7785:	js     77ba <__ctype_b_loc@plt+0x4f6a>
    7787:	movzx  eax,al
    778a:	test   rax,rax
    778d:	jne    77ba <__ctype_b_loc@plt+0x4f6a>
    778f:	test   r12,r12
    7792:	jne    7799 <__ctype_b_loc@plt+0x4f49>
    7794:	test   rdi,rdi
    7797:	jne    77b0 <__ctype_b_loc@plt+0x4f60>
    7799:	mov    rsi,r12
    779c:	call   2710 <realloc@plt>
    77a1:	test   rax,rax
    77a4:	jne    77ab <__ctype_b_loc@plt+0x4f5b>
    77a6:	test   r12,r12
    77a9:	jne    77ba <__ctype_b_loc@plt+0x4f6a>
    77ab:	pop    r12
    77ad:	ret    
    77ae:	xchg   ax,ax
    77b0:	call   2430 <free@plt>
    77b5:	xor    eax,eax
    77b7:	pop    r12
    77b9:	ret    
    77ba:	call   7a60 <__ctype_b_loc@plt+0x5210>
    77bf:	nop
    77c0:	endbr64 
    77c4:	mov    r8,rdi
    77c7:	push   rbx
    77c8:	mov    rdi,rsi
    77cb:	mov    rcx,rdx
    77ce:	mov    rsi,QWORD PTR [rsi]
    77d1:	test   r8,r8
    77d4:	je     7820 <__ctype_b_loc@plt+0x4fd0>
    77d6:	movabs rax,0x5555555555555554
    77e0:	xor    edx,edx
    77e2:	div    rcx
    77e5:	cmp    rax,rsi
    77e8:	jbe    787c <__ctype_b_loc@plt+0x502c>
    77ee:	mov    rax,rsi
    77f1:	shr    rax,1
    77f4:	lea    rbx,[rax+rsi*1+0x1]
    77f9:	mov    QWORD PTR [rdi],rbx
    77fc:	imul   rbx,rcx
    7800:	test   rbx,rbx
    7803:	je     7870 <__ctype_b_loc@plt+0x5020>
    7805:	mov    rsi,rbx
    7808:	mov    rdi,r8
    780b:	call   2710 <realloc@plt>
    7810:	test   rax,rax
    7813:	jne    781a <__ctype_b_loc@plt+0x4fca>
    7815:	test   rbx,rbx
    7818:	jne    787c <__ctype_b_loc@plt+0x502c>
    781a:	pop    rbx
    781b:	ret    
    781c:	nop    DWORD PTR [rax+0x0]
    7820:	test   rsi,rsi
    7823:	je     7850 <__ctype_b_loc@plt+0x5000>
    7825:	mov    rax,rcx
    7828:	mul    rsi
    782b:	mov    rcx,rax
    782e:	seto   al
    7831:	movzx  eax,al
    7834:	test   rcx,rcx
    7837:	js     787c <__ctype_b_loc@plt+0x502c>
    7839:	test   rax,rax
    783c:	jne    787c <__ctype_b_loc@plt+0x502c>
    783e:	mov    QWORD PTR [rdi],rsi
    7841:	mov    rbx,rcx
    7844:	jmp    7805 <__ctype_b_loc@plt+0x4fb5>
    7846:	cs nop WORD PTR [rax+rax*1+0x0]
    7850:	xor    edx,edx
    7852:	mov    eax,0x80
    7857:	xor    esi,esi
    7859:	div    rcx
    785c:	cmp    rcx,0x80
    7863:	seta   sil
    7867:	add    rsi,rax
    786a:	jmp    7825 <__ctype_b_loc@plt+0x4fd5>
    786c:	nop    DWORD PTR [rax+0x0]
    7870:	mov    rdi,r8
    7873:	call   2430 <free@plt>
    7878:	xor    eax,eax
    787a:	pop    rbx
    787b:	ret    
    787c:	call   7a60 <__ctype_b_loc@plt+0x5210>
    7881:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    788c:	nop    DWORD PTR [rax+0x0]
    7890:	endbr64 
    7894:	push   rbx
    7895:	mov    rbx,rdi
    7898:	call   2440 <malloc@plt>
    789d:	test   rax,rax
    78a0:	jne    78a7 <__ctype_b_loc@plt+0x5057>
    78a2:	test   rbx,rbx
    78a5:	jne    78a9 <__ctype_b_loc@plt+0x5059>
    78a7:	pop    rbx
    78a8:	ret    
    78a9:	call   7a60 <__ctype_b_loc@plt+0x5210>
    78ae:	xchg   ax,ax
    78b0:	endbr64 
    78b4:	push   rbx
    78b5:	mov    rbx,rdi
    78b8:	call   2440 <malloc@plt>
    78bd:	test   rax,rax
    78c0:	jne    78c7 <__ctype_b_loc@plt+0x5077>
    78c2:	test   rbx,rbx
    78c5:	jne    78c9 <__ctype_b_loc@plt+0x5079>
    78c7:	pop    rbx
    78c8:	ret    
    78c9:	call   7a60 <__ctype_b_loc@plt+0x5210>
    78ce:	xchg   ax,ax
    78d0:	endbr64 
    78d4:	push   rbx
    78d5:	mov    rbx,rsi
    78d8:	test   rsi,rsi
    78db:	jne    78e2 <__ctype_b_loc@plt+0x5092>
    78dd:	test   rdi,rdi
    78e0:	jne    7900 <__ctype_b_loc@plt+0x50b0>
    78e2:	mov    rsi,rbx
    78e5:	call   2710 <realloc@plt>
    78ea:	test   rax,rax
    78ed:	jne    78f4 <__ctype_b_loc@plt+0x50a4>
    78ef:	test   rbx,rbx
    78f2:	jne    7909 <__ctype_b_loc@plt+0x50b9>
    78f4:	pop    rbx
    78f5:	ret    
    78f6:	cs nop WORD PTR [rax+rax*1+0x0]
    7900:	call   2430 <free@plt>
    7905:	xor    eax,eax
    7907:	pop    rbx
    7908:	ret    
    7909:	call   7a60 <__ctype_b_loc@plt+0x5210>
    790e:	xchg   ax,ax
    7910:	endbr64 
    7914:	sub    rsp,0x8
    7918:	mov    rax,rsi
    791b:	mov    rsi,QWORD PTR [rsi]
    791e:	test   rdi,rdi
    7921:	je     7950 <__ctype_b_loc@plt+0x5100>
    7923:	movabs rdx,0x5555555555555553
    792d:	cmp    rsi,rdx
    7930:	ja     7962 <__ctype_b_loc@plt+0x5112>
    7932:	mov    rdx,rsi
    7935:	shr    rdx,1
    7938:	lea    rsi,[rsi+rdx*1+0x1]
    793d:	mov    QWORD PTR [rax],rsi
    7940:	call   2710 <realloc@plt>
    7945:	test   rax,rax
    7948:	je     7962 <__ctype_b_loc@plt+0x5112>
    794a:	add    rsp,0x8
    794e:	ret    
    794f:	nop
    7950:	test   rsi,rsi
    7953:	jne    7960 <__ctype_b_loc@plt+0x5110>
    7955:	mov    esi,0x80
    795a:	jmp    793d <__ctype_b_loc@plt+0x50ed>
    795c:	nop    DWORD PTR [rax+0x0]
    7960:	jns    793d <__ctype_b_loc@plt+0x50ed>
    7962:	call   7a60 <__ctype_b_loc@plt+0x5210>
    7967:	nop    WORD PTR [rax+rax*1+0x0]
    7970:	endbr64 
    7974:	sub    rsp,0x8
    7978:	test   rdi,rdi
    797b:	js     7991 <__ctype_b_loc@plt+0x5141>
    797d:	mov    esi,0x1
    7982:	call   2640 <calloc@plt>
    7987:	test   rax,rax
    798a:	je     7991 <__ctype_b_loc@plt+0x5141>
    798c:	add    rsp,0x8
    7990:	ret    
    7991:	call   7a60 <__ctype_b_loc@plt+0x5210>
    7996:	cs nop WORD PTR [rax+rax*1+0x0]
    79a0:	endbr64 
    79a4:	mov    rax,rdi
    79a7:	sub    rsp,0x8
    79ab:	mul    rsi
    79ae:	seto   dl
    79b1:	test   rax,rax
    79b4:	js     79cd <__ctype_b_loc@plt+0x517d>
    79b6:	movzx  edx,dl
    79b9:	test   rdx,rdx
    79bc:	jne    79cd <__ctype_b_loc@plt+0x517d>
    79be:	call   2640 <calloc@plt>
    79c3:	test   rax,rax
    79c6:	je     79cd <__ctype_b_loc@plt+0x517d>
    79c8:	add    rsp,0x8
    79cc:	ret    
    79cd:	call   7a60 <__ctype_b_loc@plt+0x5210>
    79d2:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    79dd:	nop    DWORD PTR [rax]
    79e0:	endbr64 
    79e4:	push   r12
    79e6:	mov    r12,rsi
    79e9:	push   rbp
    79ea:	mov    rbp,rdi
    79ed:	mov    rdi,rsi
    79f0:	sub    rsp,0x8
    79f4:	call   2440 <malloc@plt>
    79f9:	mov    rdi,rax
    79fc:	test   rax,rax
    79ff:	jne    7a06 <__ctype_b_loc@plt+0x51b6>
    7a01:	test   r12,r12
    7a04:	jne    7a18 <__ctype_b_loc@plt+0x51c8>
    7a06:	add    rsp,0x8
    7a0a:	mov    rdx,r12
    7a0d:	mov    rsi,rbp
    7a10:	pop    rbp
    7a11:	pop    r12
    7a13:	jmp    2690 <memcpy@plt>
    7a18:	call   7a60 <__ctype_b_loc@plt+0x5210>
    7a1d:	nop    DWORD PTR [rax]
    7a20:	endbr64 
    7a24:	push   r12
    7a26:	push   rbp
    7a27:	mov    rbp,rdi
    7a2a:	sub    rsp,0x8
    7a2e:	call   2530 <strlen@plt>
    7a33:	lea    r12,[rax+0x1]
    7a37:	mov    rdi,r12
    7a3a:	call   2440 <malloc@plt>
    7a3f:	test   rax,rax
    7a42:	je     7a59 <__ctype_b_loc@plt+0x5209>
    7a44:	add    rsp,0x8
    7a48:	mov    rdx,r12
    7a4b:	mov    rsi,rbp
    7a4e:	mov    rdi,rax
    7a51:	pop    rbp
    7a52:	pop    r12
    7a54:	jmp    2690 <memcpy@plt>
    7a59:	call   7a60 <__ctype_b_loc@plt+0x5210>
    7a5e:	xchg   ax,ax
    7a60:	endbr64 
    7a64:	push   rax
    7a65:	pop    rax
    7a66:	mov    edx,0x5
    7a6b:	lea    rsi,[rip+0x29bd]        # a42f <_obstack_memory_used@@Base+0x246f>
    7a72:	xor    edi,edi
    7a74:	sub    rsp,0x8
    7a78:	call   2510 <dcgettext@plt>
    7a7d:	mov    edi,DWORD PTR [rip+0x5595]        # d018 <_obstack_memory_used@@Base+0x5058>
    7a83:	lea    rdx,[rip+0x1e83]        # 990d <_obstack_memory_used@@Base+0x194d>
    7a8a:	xor    esi,esi
    7a8c:	mov    rcx,rax
    7a8f:	xor    eax,eax
    7a91:	call   2770 <error@plt>
    7a96:	call   2470 <abort@plt>
    7a9b:	nop    DWORD PTR [rax+rax*1+0x0]
    7aa0:	endbr64 
    7aa4:	push   r12
    7aa6:	push   rbp
    7aa7:	mov    rbp,rdi
    7aaa:	push   rbx
    7aab:	call   26a0 <fileno@plt>
    7ab0:	mov    rdi,rbp
    7ab3:	test   eax,eax
    7ab5:	js     7b0f <__ctype_b_loc@plt+0x52bf>
    7ab7:	call   2700 <__freading@plt>
    7abc:	test   eax,eax
    7abe:	jne    7af0 <__ctype_b_loc@plt+0x52a0>
    7ac0:	mov    rdi,rbp
    7ac3:	call   7b30 <__ctype_b_loc@plt+0x52e0>
    7ac8:	test   eax,eax
    7aca:	je     7b0c <__ctype_b_loc@plt+0x52bc>
    7acc:	call   2480 <__errno_location@plt>
    7ad1:	mov    rdi,rbp
    7ad4:	mov    r12d,DWORD PTR [rax]
    7ad7:	mov    rbx,rax
    7ada:	call   24f0 <fclose@plt>
    7adf:	test   r12d,r12d
    7ae2:	jne    7b20 <__ctype_b_loc@plt+0x52d0>
    7ae4:	pop    rbx
    7ae5:	pop    rbp
    7ae6:	pop    r12
    7ae8:	ret    
    7ae9:	nop    DWORD PTR [rax+0x0]
    7af0:	mov    rdi,rbp
    7af3:	call   26a0 <fileno@plt>
    7af8:	xor    esi,esi
    7afa:	mov    edx,0x1
    7aff:	mov    edi,eax
    7b01:	call   25a0 <lseek@plt>
    7b06:	cmp    rax,0xffffffffffffffff
    7b0a:	jne    7ac0 <__ctype_b_loc@plt+0x5270>
    7b0c:	mov    rdi,rbp
    7b0f:	pop    rbx
    7b10:	pop    rbp
    7b11:	pop    r12
    7b13:	jmp    24f0 <fclose@plt>
    7b18:	nop    DWORD PTR [rax+rax*1+0x0]
    7b20:	mov    DWORD PTR [rbx],r12d
    7b23:	mov    eax,0xffffffff
    7b28:	jmp    7ae4 <__ctype_b_loc@plt+0x5294>
    7b2a:	nop    WORD PTR [rax+rax*1+0x0]
    7b30:	endbr64 
    7b34:	push   rbp
    7b35:	mov    rbp,rdi
    7b38:	test   rdi,rdi
    7b3b:	je     7b46 <__ctype_b_loc@plt+0x52f6>
    7b3d:	call   2700 <__freading@plt>
    7b42:	test   eax,eax
    7b44:	jne    7b50 <__ctype_b_loc@plt+0x5300>
    7b46:	mov    rdi,rbp
    7b49:	pop    rbp
    7b4a:	jmp    26d0 <fflush@plt>
    7b4f:	nop
    7b50:	test   DWORD PTR [rbp+0x0],0x100
    7b57:	je     7b46 <__ctype_b_loc@plt+0x52f6>
    7b59:	mov    rdi,rbp
    7b5c:	mov    edx,0x1
    7b61:	xor    esi,esi
    7b63:	call   7b80 <__ctype_b_loc@plt+0x5330>
    7b68:	mov    rdi,rbp
    7b6b:	pop    rbp
    7b6c:	jmp    26d0 <fflush@plt>
    7b71:	cs nop WORD PTR [rax+rax*1+0x0]
    7b7b:	nop    DWORD PTR [rax+rax*1+0x0]
    7b80:	endbr64 
    7b84:	push   rbp
    7b85:	mov    rbp,rdi
    7b88:	sub    rsp,0x10
    7b8c:	mov    rax,QWORD PTR [rdi+0x8]
    7b90:	cmp    QWORD PTR [rdi+0x10],rax
    7b94:	je     7ba8 <__ctype_b_loc@plt+0x5358>
    7b96:	add    rsp,0x10
    7b9a:	mov    rdi,rbp
    7b9d:	pop    rbp
    7b9e:	jmp    2790 <fseeko@plt>
    7ba3:	nop    DWORD PTR [rax+rax*1+0x0]
    7ba8:	mov    rax,QWORD PTR [rdi+0x20]
    7bac:	cmp    QWORD PTR [rdi+0x28],rax
    7bb0:	jne    7b96 <__ctype_b_loc@plt+0x5346>
    7bb2:	cmp    QWORD PTR [rdi+0x48],0x0
    7bb7:	jne    7b96 <__ctype_b_loc@plt+0x5346>
    7bb9:	mov    DWORD PTR [rsp+0xc],edx
    7bbd:	mov    QWORD PTR [rsp],rsi
    7bc1:	call   26a0 <fileno@plt>
    7bc6:	mov    edx,DWORD PTR [rsp+0xc]
    7bca:	mov    rsi,QWORD PTR [rsp]
    7bce:	mov    edi,eax
    7bd0:	call   25a0 <lseek@plt>
    7bd5:	cmp    rax,0xffffffffffffffff
    7bd9:	je     7bee <__ctype_b_loc@plt+0x539e>
    7bdb:	and    DWORD PTR [rbp+0x0],0xffffffef
    7bdf:	mov    QWORD PTR [rbp+0x90],rax
    7be6:	xor    eax,eax
    7be8:	add    rsp,0x10
    7bec:	pop    rbp
    7bed:	ret    
    7bee:	or     eax,0xffffffff
    7bf1:	jmp    7be8 <__ctype_b_loc@plt+0x5398>
    7bf3:	cs nop WORD PTR [rax+rax*1+0x0]
    7bfd:	nop    DWORD PTR [rax]
    7c00:	endbr64 
    7c04:	push   r13
    7c06:	mov    r13,rsi
    7c09:	push   r12
    7c0b:	push   rbp
    7c0c:	mov    rbp,rdx
    7c0f:	push   rbx
    7c10:	mov    rbx,rdi
    7c13:	sub    rsp,0x18
    7c17:	mov    rax,QWORD PTR fs:0x28
    7c20:	mov    QWORD PTR [rsp+0x8],rax
    7c25:	xor    eax,eax
    7c27:	test   rdi,rdi
    7c2a:	lea    rax,[rsp+0x4]
    7c2f:	cmove  rbx,rax
    7c33:	mov    rdi,rbx
    7c36:	call   2560 <mbrtowc@plt>
    7c3b:	mov    r12,rax
    7c3e:	cmp    rax,0xfffffffffffffffd
    7c42:	jbe    7c49 <__ctype_b_loc@plt+0x53f9>
    7c44:	test   rbp,rbp
    7c47:	jne    7c70 <__ctype_b_loc@plt+0x5420>
    7c49:	mov    rax,QWORD PTR [rsp+0x8]
    7c4e:	sub    rax,QWORD PTR fs:0x28
    7c57:	jne    7c8a <__ctype_b_loc@plt+0x543a>
    7c59:	add    rsp,0x18
    7c5d:	mov    rax,r12
    7c60:	pop    rbx
    7c61:	pop    rbp
    7c62:	pop    r12
    7c64:	pop    r13
    7c66:	ret    
    7c67:	nop    WORD PTR [rax+rax*1+0x0]
    7c70:	xor    edi,edi
    7c72:	call   8060 <_obstack_memory_used@@Base+0xa0>
    7c77:	test   al,al
    7c79:	jne    7c49 <__ctype_b_loc@plt+0x53f9>
    7c7b:	movzx  eax,BYTE PTR [r13+0x0]
    7c80:	mov    r12d,0x1
    7c86:	mov    DWORD PTR [rbx],eax
    7c88:	jmp    7c49 <__ctype_b_loc@plt+0x53f9>
    7c8a:	call   2540 <__stack_chk_fail@plt>
    7c8f:	nop
    7c90:	endbr64 
    7c94:	push   rax
    7c95:	pop    rax
    7c96:	mov    edx,0x5
    7c9b:	lea    rsi,[rip+0x278d]        # a42f <_obstack_memory_used@@Base+0x246f>
    7ca2:	xor    edi,edi
    7ca4:	sub    rsp,0x8
    7ca8:	call   2510 <dcgettext@plt>
    7cad:	mov    rdi,QWORD PTR [rip+0x542c]        # d0e0 <stderr@@GLIBC_2.2.5>
    7cb4:	mov    esi,0x1
    7cb9:	lea    rdx,[rip+0x2410]        # a0d0 <_obstack_memory_used@@Base+0x2110>
    7cc0:	mov    rcx,rax
    7cc3:	xor    eax,eax
    7cc5:	call   2810 <__fprintf_chk@plt>
    7cca:	mov    edi,DWORD PTR [rip+0x5348]        # d018 <_obstack_memory_used@@Base+0x5058>
    7cd0:	call   27f0 <exit@plt>
    7cd5:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    7ce0:	push   r12
    7ce2:	push   rbp
    7ce3:	push   rbx
    7ce4:	mov    rbx,rdi
    7ce7:	test   rdx,rdx
    7cea:	je     7d58 <__ctype_b_loc@plt+0x5508>
    7cec:	mov    rbp,rdx
    7cef:	lea    r12,[rdx-0x1]
    7cf3:	mov    eax,0xfe0
    7cf8:	test   rsi,rsi
    7cfb:	mov    QWORD PTR [rbx+0x30],r12
    7cff:	cmove  rsi,rax
    7d03:	mov    rax,QWORD PTR [rbx+0x38]
    7d07:	mov    QWORD PTR [rbx],rsi
    7d0a:	test   BYTE PTR [rbx+0x50],0x1
    7d0e:	je     7d68 <__ctype_b_loc@plt+0x5518>
    7d10:	mov    rdi,QWORD PTR [rbx+0x48]
    7d14:	call   rax
    7d16:	mov    QWORD PTR [rbx+0x8],rax
    7d1a:	test   rax,rax
    7d1d:	je     7d6f <__ctype_b_loc@plt+0x551f>
    7d1f:	lea    rdx,[rax+r12*1+0x10]
    7d24:	neg    rbp
    7d27:	and    rbp,rdx
    7d2a:	mov    rdx,QWORD PTR [rbx]
    7d2d:	mov    QWORD PTR [rbx+0x10],rbp
    7d31:	add    rdx,rax
    7d34:	mov    QWORD PTR [rbx+0x18],rbp
    7d38:	mov    QWORD PTR [rax],rdx
    7d3b:	mov    QWORD PTR [rbx+0x20],rdx
    7d3f:	mov    QWORD PTR [rax+0x8],0x0
    7d47:	mov    eax,0x1
    7d4c:	and    BYTE PTR [rbx+0x50],0xf9
    7d50:	pop    rbx
    7d51:	pop    rbp
    7d52:	pop    r12
    7d54:	ret    
    7d55:	nop    DWORD PTR [rax]
    7d58:	mov    r12d,0xf
    7d5e:	mov    ebp,0x10
    7d63:	jmp    7cf3 <__ctype_b_loc@plt+0x54a3>
    7d65:	nop    DWORD PTR [rax]
    7d68:	mov    rdi,rsi
    7d6b:	call   rax
    7d6d:	jmp    7d16 <__ctype_b_loc@plt+0x54c6>
    7d6f:	call   QWORD PTR [rip+0x530b]        # d080 <obstack_alloc_failed_handler@@Base>
    7d75:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000007d80 <_obstack_begin@@Base>:
    7d80:	endbr64 
    7d84:	and    BYTE PTR [rdi+0x50],0xfe
    7d88:	mov    QWORD PTR [rdi+0x38],rcx
    7d8c:	mov    QWORD PTR [rdi+0x40],r8
    7d90:	jmp    7ce0 <__ctype_b_loc@plt+0x5490>
    7d95:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000007da0 <_obstack_begin_1@@Base>:
    7da0:	endbr64 
    7da4:	or     BYTE PTR [rdi+0x50],0x1
    7da8:	mov    QWORD PTR [rdi+0x38],rcx
    7dac:	mov    QWORD PTR [rdi+0x40],r8
    7db0:	mov    QWORD PTR [rdi+0x48],r9
    7db4:	jmp    7ce0 <__ctype_b_loc@plt+0x5490>
    7db9:	nop    DWORD PTR [rax+0x0]

0000000000007dc0 <_obstack_newchunk@@Base>:
    7dc0:	endbr64 
    7dc4:	push   r14
    7dc6:	xor    eax,eax
    7dc8:	push   r13
    7dca:	push   r12
    7dcc:	push   rbp
    7dcd:	push   rbx
    7dce:	mov    r14,QWORD PTR [rdi+0x18]
    7dd2:	sub    r14,QWORD PTR [rdi+0x10]
    7dd6:	mov    rbp,QWORD PTR [rdi+0x8]
    7dda:	add    rsi,r14
    7ddd:	mov    rdx,r14
    7de0:	setb   al
    7de3:	add    rsi,QWORD PTR [rdi+0x30]
    7de7:	setb   cl
    7dea:	shr    rdx,0x3
    7dee:	cmp    QWORD PTR [rdi],rsi
    7df1:	lea    r12,[rsi+rdx*1+0x64]
    7df6:	cmovae rsi,QWORD PTR [rdi]
    7dfa:	cmp    rsi,r12
    7dfd:	cmovae r12,rsi
    7e01:	test   rax,rax
    7e04:	jne    7edf <_obstack_newchunk@@Base+0x11f>
    7e0a:	movzx  ecx,cl
    7e0d:	test   rcx,rcx
    7e10:	jne    7edf <_obstack_newchunk@@Base+0x11f>
    7e16:	mov    rax,QWORD PTR [rdi+0x38]
    7e1a:	mov    rbx,rdi
    7e1d:	test   BYTE PTR [rdi+0x50],0x1
    7e21:	jne    7ea0 <_obstack_newchunk@@Base+0xe0>
    7e23:	mov    rdi,r12
    7e26:	call   rax
    7e28:	mov    r13,rax
    7e2b:	test   r13,r13
    7e2e:	je     7edf <_obstack_newchunk@@Base+0x11f>
    7e34:	mov    rax,QWORD PTR [rbx+0x30]
    7e38:	lea    rsi,[r13+r12*1+0x0]
    7e3d:	mov    QWORD PTR [rbx+0x8],r13
    7e41:	mov    rdx,r14
    7e44:	mov    QWORD PTR [r13+0x8],rbp
    7e48:	lea    r12,[r13+rax*1+0x10]
    7e4d:	mov    QWORD PTR [rbx+0x20],rsi
    7e51:	not    rax
    7e54:	mov    QWORD PTR [r13+0x0],rsi
    7e58:	and    r12,rax
    7e5b:	mov    rsi,QWORD PTR [rbx+0x10]
    7e5f:	mov    rdi,r12
    7e62:	call   2690 <memcpy@plt>
    7e67:	movzx  edx,BYTE PTR [rbx+0x50]
    7e6b:	test   dl,0x2
    7e6e:	jne    7e85 <_obstack_newchunk@@Base+0xc5>
    7e70:	mov    rax,QWORD PTR [rbx+0x30]
    7e74:	lea    rcx,[rbp+rax*1+0x10]
    7e79:	not    rax
    7e7c:	and    rax,rcx
    7e7f:	cmp    QWORD PTR [rbx+0x10],rax
    7e83:	je     7eb8 <_obstack_newchunk@@Base+0xf8>
    7e85:	mov    QWORD PTR [rbx+0x10],r12
    7e89:	add    r12,r14
    7e8c:	and    BYTE PTR [rbx+0x50],0xfd
    7e90:	mov    QWORD PTR [rbx+0x18],r12
    7e94:	pop    rbx
    7e95:	pop    rbp
    7e96:	pop    r12
    7e98:	pop    r13
    7e9a:	pop    r14
    7e9c:	ret    
    7e9d:	nop    DWORD PTR [rax]
    7ea0:	mov    rdi,QWORD PTR [rdi+0x48]
    7ea4:	mov    rsi,r12
    7ea7:	call   rax
    7ea9:	mov    r13,rax
    7eac:	jmp    7e2b <_obstack_newchunk@@Base+0x6b>
    7eb1:	nop    DWORD PTR [rax+0x0]
    7eb8:	mov    rax,QWORD PTR [rbp+0x8]
    7ebc:	and    edx,0x1
    7ebf:	mov    QWORD PTR [r13+0x8],rax
    7ec3:	mov    rax,QWORD PTR [rbx+0x40]
    7ec7:	je     7ed8 <_obstack_newchunk@@Base+0x118>
    7ec9:	mov    rdi,QWORD PTR [rbx+0x48]
    7ecd:	mov    rsi,rbp
    7ed0:	call   rax
    7ed2:	jmp    7e85 <_obstack_newchunk@@Base+0xc5>
    7ed4:	nop    DWORD PTR [rax+0x0]
    7ed8:	mov    rdi,rbp
    7edb:	call   rax
    7edd:	jmp    7e85 <_obstack_newchunk@@Base+0xc5>
    7edf:	call   QWORD PTR [rip+0x519b]        # d080 <obstack_alloc_failed_handler@@Base>
    7ee5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000007ef0 <_obstack_allocated_p@@Base>:
    7ef0:	endbr64 
    7ef4:	mov    rax,QWORD PTR [rdi+0x8]
    7ef8:	test   rax,rax
    7efb:	je     7f26 <_obstack_allocated_p@@Base+0x36>
    7efd:	nop    DWORD PTR [rax]
    7f00:	cmp    rsi,rax
    7f03:	jbe    7f0a <_obstack_allocated_p@@Base+0x1a>
    7f05:	cmp    QWORD PTR [rax],rsi
    7f08:	jae    7f20 <_obstack_allocated_p@@Base+0x30>
    7f0a:	mov    rax,QWORD PTR [rax+0x8]
    7f0e:	test   rax,rax
    7f11:	jne    7f00 <_obstack_allocated_p@@Base+0x10>
    7f13:	xor    eax,eax
    7f15:	ret    
    7f16:	cs nop WORD PTR [rax+rax*1+0x0]
    7f20:	mov    eax,0x1
    7f25:	ret    
    7f26:	ret    
    7f27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000007f30 <_obstack_free@@Base>:
    7f30:	endbr64 
    7f34:	push   r12
    7f36:	mov    r12,rsi
    7f39:	push   rbp
    7f3a:	push   rbx
    7f3b:	mov    rsi,QWORD PTR [rdi+0x8]
    7f3f:	mov    rbx,rdi
    7f42:	test   rsi,rsi
    7f45:	jne    7f62 <_obstack_free@@Base+0x32>
    7f47:	jmp    7f8b <_obstack_free@@Base+0x5b>
    7f49:	nop    DWORD PTR [rax+0x0]
    7f50:	mov    rdi,QWORD PTR [rbx+0x48]
    7f54:	call   rax
    7f56:	or     BYTE PTR [rbx+0x50],0x2
    7f5a:	test   rbp,rbp
    7f5d:	je     7f8b <_obstack_free@@Base+0x5b>
    7f5f:	mov    rsi,rbp
    7f62:	cmp    rsi,r12
    7f65:	jae    7f6f <_obstack_free@@Base+0x3f>
    7f67:	mov    rax,QWORD PTR [rsi]
    7f6a:	cmp    rax,r12
    7f6d:	jae    7fa0 <_obstack_free@@Base+0x70>
    7f6f:	mov    rbp,QWORD PTR [rsi+0x8]
    7f73:	mov    rax,QWORD PTR [rbx+0x40]
    7f77:	test   BYTE PTR [rbx+0x50],0x1
    7f7b:	jne    7f50 <_obstack_free@@Base+0x20>
    7f7d:	mov    rdi,rsi
    7f80:	call   rax
    7f82:	or     BYTE PTR [rbx+0x50],0x2
    7f86:	test   rbp,rbp
    7f89:	jne    7f5f <_obstack_free@@Base+0x2f>
    7f8b:	test   r12,r12
    7f8e:	jne    289c <__ctype_b_loc@plt+0x4c>
    7f94:	pop    rbx
    7f95:	pop    rbp
    7f96:	pop    r12
    7f98:	ret    
    7f99:	nop    DWORD PTR [rax+0x0]
    7fa0:	mov    QWORD PTR [rbx+0x18],r12
    7fa4:	mov    QWORD PTR [rbx+0x10],r12
    7fa8:	mov    QWORD PTR [rbx+0x20],rax
    7fac:	mov    QWORD PTR [rbx+0x8],rsi
    7fb0:	pop    rbx
    7fb1:	pop    rbp
    7fb2:	pop    r12
    7fb4:	ret    
    7fb5:	data16 cs nop WORD PTR [rax+rax*1+0x0]

0000000000007fc0 <_obstack_memory_used@@Base>:
    7fc0:	endbr64 
    7fc4:	mov    rax,QWORD PTR [rdi+0x8]
    7fc8:	xor    r8d,r8d
    7fcb:	test   rax,rax
    7fce:	je     7fe2 <_obstack_memory_used@@Base+0x22>
    7fd0:	mov    rdx,QWORD PTR [rax]
    7fd3:	sub    rdx,rax
    7fd6:	mov    rax,QWORD PTR [rax+0x8]
    7fda:	add    r8,rdx
    7fdd:	test   rax,rax
    7fe0:	jne    7fd0 <_obstack_memory_used@@Base+0x10>
    7fe2:	mov    rax,r8
    7fe5:	ret    
    7fe6:	cs nop WORD PTR [rax+rax*1+0x0]
    7ff0:	endbr64 
    7ff4:	push   r12
    7ff6:	push   rbp
    7ff7:	mov    rbp,rdi
    7ffa:	push   rbx
    7ffb:	call   24b0 <__fpending@plt>
    8000:	mov    ebx,DWORD PTR [rbp+0x0]
    8003:	mov    rdi,rbp
    8006:	mov    r12,rax
    8009:	and    ebx,0x20
    800c:	call   7aa0 <__ctype_b_loc@plt+0x5250>
    8011:	test   ebx,ebx
    8013:	jne    8038 <_obstack_memory_used@@Base+0x78>
    8015:	test   eax,eax
    8017:	je     802e <_obstack_memory_used@@Base+0x6e>
    8019:	test   r12,r12
    801c:	jne    804e <_obstack_memory_used@@Base+0x8e>
    801e:	call   2480 <__errno_location@plt>
    8023:	cmp    DWORD PTR [rax],0x9
    8026:	setne  al
    8029:	movzx  eax,al
    802c:	neg    eax
    802e:	pop    rbx
    802f:	pop    rbp
    8030:	pop    r12
    8032:	ret    
    8033:	nop    DWORD PTR [rax+rax*1+0x0]
    8038:	test   eax,eax
    803a:	jne    804e <_obstack_memory_used@@Base+0x8e>
    803c:	call   2480 <__errno_location@plt>
    8041:	mov    DWORD PTR [rax],0x0
    8047:	mov    eax,0xffffffff
    804c:	jmp    802e <_obstack_memory_used@@Base+0x6e>
    804e:	mov    eax,0xffffffff
    8053:	jmp    802e <_obstack_memory_used@@Base+0x6e>
    8055:	cs nop WORD PTR [rax+rax*1+0x0]
    805f:	nop
    8060:	endbr64 
    8064:	sub    rsp,0x118
    806b:	mov    edx,0x101
    8070:	mov    rax,QWORD PTR fs:0x28
    8079:	mov    QWORD PTR [rsp+0x108],rax
    8081:	xor    eax,eax
    8083:	mov    rsi,rsp
    8086:	call   8120 <_obstack_memory_used@@Base+0x160>
    808b:	mov    r8d,eax
    808e:	xor    eax,eax
    8090:	test   r8d,r8d
    8093:	jne    80aa <_obstack_memory_used@@Base+0xea>
    8095:	cmp    WORD PTR [rsp],0x43
    809a:	je     80aa <_obstack_memory_used@@Base+0xea>
    809c:	cmp    DWORD PTR [rsp],0x49534f50
    80a3:	je     80c8 <_obstack_memory_used@@Base+0x108>
    80a5:	mov    eax,0x1
    80aa:	mov    rcx,QWORD PTR [rsp+0x108]
    80b2:	sub    rcx,QWORD PTR fs:0x28
    80bb:	jne    80d4 <_obstack_memory_used@@Base+0x114>
    80bd:	add    rsp,0x118
    80c4:	ret    
    80c5:	nop    DWORD PTR [rax]
    80c8:	xor    eax,eax
    80ca:	cmp    WORD PTR [rsp+0x4],0x58
    80d0:	jne    80a5 <_obstack_memory_used@@Base+0xe5>
    80d2:	jmp    80aa <_obstack_memory_used@@Base+0xea>
    80d4:	call   2540 <__stack_chk_fail@plt>
    80d9:	nop    DWORD PTR [rax+0x0]
    80e0:	endbr64 
    80e4:	sub    rsp,0x8
    80e8:	mov    edi,0xe
    80ed:	call   26e0 <nl_langinfo@plt>
    80f2:	test   rax,rax
    80f5:	je     8110 <_obstack_memory_used@@Base+0x150>
    80f7:	cmp    BYTE PTR [rax],0x0
    80fa:	lea    rdx,[rip+0x2347]        # a448 <_obstack_memory_used@@Base+0x2488>
    8101:	cmove  rax,rdx
    8105:	add    rsp,0x8
    8109:	ret    
    810a:	nop    WORD PTR [rax+rax*1+0x0]
    8110:	lea    rax,[rip+0x2331]        # a448 <_obstack_memory_used@@Base+0x2488>
    8117:	add    rsp,0x8
    811b:	ret    
    811c:	nop    DWORD PTR [rax+0x0]
    8120:	endbr64 
    8124:	push   r13
    8126:	push   r12
    8128:	mov    r12,rsi
    812b:	xor    esi,esi
    812d:	push   rbp
    812e:	push   rbx
    812f:	mov    rbx,rdx
    8132:	sub    rsp,0x8
    8136:	call   2720 <setlocale@plt>
    813b:	test   rax,rax
    813e:	je     81b8 <_obstack_memory_used@@Base+0x1f8>
    8140:	mov    rdi,rax
    8143:	mov    rbp,rax
    8146:	call   2530 <strlen@plt>
    814b:	cmp    rbx,rax
    814e:	ja     8170 <_obstack_memory_used@@Base+0x1b0>
    8150:	mov    r13d,0x22
    8156:	test   rbx,rbx
    8159:	jne    8190 <_obstack_memory_used@@Base+0x1d0>
    815b:	add    rsp,0x8
    815f:	mov    eax,r13d
    8162:	pop    rbx
    8163:	pop    rbp
    8164:	pop    r12
    8166:	pop    r13
    8168:	ret    
    8169:	nop    DWORD PTR [rax+0x0]
    8170:	mov    rsi,rbp
    8173:	mov    rdi,r12
    8176:	lea    rdx,[rax+0x1]
    817a:	xor    r13d,r13d
    817d:	call   2690 <memcpy@plt>
    8182:	add    rsp,0x8
    8186:	mov    eax,r13d
    8189:	pop    rbx
    818a:	pop    rbp
    818b:	pop    r12
    818d:	pop    r13
    818f:	ret    
    8190:	lea    rdx,[rbx-0x1]
    8194:	mov    rsi,rbp
    8197:	mov    rdi,r12
    819a:	call   2690 <memcpy@plt>
    819f:	mov    BYTE PTR [r12+rbx*1-0x1],0x0
    81a5:	add    rsp,0x8
    81a9:	mov    eax,r13d
    81ac:	pop    rbx
    81ad:	pop    rbp
    81ae:	pop    r12
    81b0:	pop    r13
    81b2:	ret    
    81b3:	nop    DWORD PTR [rax+rax*1+0x0]
    81b8:	mov    r13d,0x16
    81be:	test   rbx,rbx
    81c1:	je     815b <_obstack_memory_used@@Base+0x19b>
    81c3:	mov    BYTE PTR [r12],0x0
    81c8:	jmp    815b <_obstack_memory_used@@Base+0x19b>
    81ca:	nop    WORD PTR [rax+rax*1+0x0]
    81d0:	endbr64 
    81d4:	xor    esi,esi
    81d6:	jmp    2720 <setlocale@plt>
    81db:	nop    DWORD PTR [rax+rax*1+0x0]
    81e0:	endbr64 
    81e4:	push   r15
    81e6:	lea    r15,[rip+0x4843]        # ca30 <_obstack_memory_used@@Base+0x4a70>
    81ed:	push   r14
    81ef:	mov    r14,rdx
    81f2:	push   r13
    81f4:	mov    r13,rsi
    81f7:	push   r12
    81f9:	mov    r12d,edi
    81fc:	push   rbp
    81fd:	lea    rbp,[rip+0x4834]        # ca38 <_obstack_memory_used@@Base+0x4a78>
    8204:	push   rbx
    8205:	sub    rbp,r15
    8208:	sub    rsp,0x8
    820c:	call   2000 <free@plt-0x430>
    8211:	sar    rbp,0x3
    8215:	je     8236 <_obstack_memory_used@@Base+0x276>
    8217:	xor    ebx,ebx
    8219:	nop    DWORD PTR [rax+0x0]
    8220:	mov    rdx,r14
    8223:	mov    rsi,r13
    8226:	mov    edi,r12d
    8229:	call   QWORD PTR [r15+rbx*8]
    822d:	add    rbx,0x1
    8231:	cmp    rbp,rbx
    8234:	jne    8220 <_obstack_memory_used@@Base+0x260>
    8236:	add    rsp,0x8
    823a:	pop    rbx
    823b:	pop    rbp
    823c:	pop    r12
    823e:	pop    r13
    8240:	pop    r14
    8242:	pop    r15
    8244:	ret    
    8245:	data16 cs nop WORD PTR [rax+rax*1+0x0]
    8250:	endbr64 
    8254:	ret    
    8255:	cs nop WORD PTR [rax+rax*1+0x0]
    825f:	nop
    8260:	endbr64 
    8264:	mov    rdx,QWORD PTR [rip+0x4d9d]        # d008 <_obstack_memory_used@@Base+0x5048>
    826b:	xor    esi,esi
    826d:	jmp    27c0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000008274 <.fini>:
    8274:	endbr64 
    8278:	sub    rsp,0x8
    827c:	add    rsp,0x8
    8280:	ret    
