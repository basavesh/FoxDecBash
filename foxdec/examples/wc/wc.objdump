
/usr/bin/wc:     file format elf64-x86-64


Disassembly of section .init:

0000000000001a50 <.init>:
    1a50:	sub    rsp,0x8
    1a54:	mov    rax,QWORD PTR [rip+0x208575]        # 209fd0 <__gmon_start__>
    1a5b:	test   rax,rax
    1a5e:	je     1a62 <__uflow@plt-0x1e>
    1a60:	call   rax
    1a62:	add    rsp,0x8
    1a66:	ret    

Disassembly of section .plt:

0000000000001a70 <__uflow@plt-0x10>:
    1a70:	push   QWORD PTR [rip+0x208592]        # 20a008 <_obstack_memory_used@@Base+0x203418>
    1a76:	jmp    QWORD PTR [rip+0x208594]        # 20a010 <_obstack_memory_used@@Base+0x203420>
    1a7c:	nop    DWORD PTR [rax+0x0]

0000000000001a80 <__uflow@plt>:
    1a80:	jmp    QWORD PTR [rip+0x208592]        # 20a018 <__uflow@GLIBC_2.2.5>
    1a86:	push   0x0
    1a8b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001a90 <getenv@plt>:
    1a90:	jmp    QWORD PTR [rip+0x20858a]        # 20a020 <getenv@GLIBC_2.2.5>
    1a96:	push   0x1
    1a9b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001aa0 <abort@plt>:
    1aa0:	jmp    QWORD PTR [rip+0x208582]        # 20a028 <abort@GLIBC_2.2.5>
    1aa6:	push   0x2
    1aab:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ab0 <__errno_location@plt>:
    1ab0:	jmp    QWORD PTR [rip+0x20857a]        # 20a030 <__errno_location@GLIBC_2.2.5>
    1ab6:	push   0x3
    1abb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ac0 <strncmp@plt>:
    1ac0:	jmp    QWORD PTR [rip+0x208572]        # 20a038 <strncmp@GLIBC_2.2.5>
    1ac6:	push   0x4
    1acb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ad0 <_exit@plt>:
    1ad0:	jmp    QWORD PTR [rip+0x20856a]        # 20a040 <_exit@GLIBC_2.2.5>
    1ad6:	push   0x5
    1adb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ae0 <__fpending@plt>:
    1ae0:	jmp    QWORD PTR [rip+0x208562]        # 20a048 <__fpending@GLIBC_2.2.5>
    1ae6:	push   0x6
    1aeb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001af0 <ferror@plt>:
    1af0:	jmp    QWORD PTR [rip+0x20855a]        # 20a050 <ferror@GLIBC_2.2.5>
    1af6:	push   0x7
    1afb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b00 <iswcntrl@plt>:
    1b00:	jmp    QWORD PTR [rip+0x208552]        # 20a058 <iswcntrl@GLIBC_2.2.5>
    1b06:	push   0x8
    1b0b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b10 <textdomain@plt>:
    1b10:	jmp    QWORD PTR [rip+0x20854a]        # 20a060 <textdomain@GLIBC_2.2.5>
    1b16:	push   0x9
    1b1b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b20 <fclose@plt>:
    1b20:	jmp    QWORD PTR [rip+0x208542]        # 20a068 <fclose@GLIBC_2.2.5>
    1b26:	push   0xa
    1b2b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b30 <bindtextdomain@plt>:
    1b30:	jmp    QWORD PTR [rip+0x20853a]        # 20a070 <bindtextdomain@GLIBC_2.2.5>
    1b36:	push   0xb
    1b3b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b40 <dcgettext@plt>:
    1b40:	jmp    QWORD PTR [rip+0x208532]        # 20a078 <dcgettext@GLIBC_2.2.5>
    1b46:	push   0xc
    1b4b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b50 <__ctype_get_mb_cur_max@plt>:
    1b50:	jmp    QWORD PTR [rip+0x20852a]        # 20a080 <__ctype_get_mb_cur_max@GLIBC_2.2.5>
    1b56:	push   0xd
    1b5b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b60 <strlen@plt>:
    1b60:	jmp    QWORD PTR [rip+0x208522]        # 20a088 <strlen@GLIBC_2.2.5>
    1b66:	push   0xe
    1b6b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b70 <__stack_chk_fail@plt>:
    1b70:	jmp    QWORD PTR [rip+0x20851a]        # 20a090 <__stack_chk_fail@GLIBC_2.4>
    1b76:	push   0xf
    1b7b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b80 <getopt_long@plt>:
    1b80:	jmp    QWORD PTR [rip+0x208512]        # 20a098 <getopt_long@GLIBC_2.2.5>
    1b86:	push   0x10
    1b8b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001b90 <mbrtowc@plt>:
    1b90:	jmp    QWORD PTR [rip+0x20850a]        # 20a0a0 <mbrtowc@GLIBC_2.2.5>
    1b96:	push   0x11
    1b9b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ba0 <strchr@plt>:
    1ba0:	jmp    QWORD PTR [rip+0x208502]        # 20a0a8 <strchr@GLIBC_2.2.5>
    1ba6:	push   0x12
    1bab:	jmp    1a70 <__uflow@plt-0x10>

0000000000001bb0 <__overflow@plt>:
    1bb0:	jmp    QWORD PTR [rip+0x2084fa]        # 20a0b0 <__overflow@GLIBC_2.2.5>
    1bb6:	push   0x13
    1bbb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001bc0 <strrchr@plt>:
    1bc0:	jmp    QWORD PTR [rip+0x2084f2]        # 20a0b8 <strrchr@GLIBC_2.2.5>
    1bc6:	push   0x14
    1bcb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001bd0 <lseek@plt>:
    1bd0:	jmp    QWORD PTR [rip+0x2084ea]        # 20a0c0 <lseek@GLIBC_2.2.5>
    1bd6:	push   0x15
    1bdb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001be0 <__assert_fail@plt>:
    1be0:	jmp    QWORD PTR [rip+0x2084e2]        # 20a0c8 <__assert_fail@GLIBC_2.2.5>
    1be6:	push   0x16
    1beb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001bf0 <memset@plt>:
    1bf0:	jmp    QWORD PTR [rip+0x2084da]        # 20a0d0 <memset@GLIBC_2.2.5>
    1bf6:	push   0x17
    1bfb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c00 <fscanf@plt>:
    1c00:	jmp    QWORD PTR [rip+0x2084d2]        # 20a0d8 <fscanf@GLIBC_2.2.5>
    1c06:	push   0x18
    1c0b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c10 <fgetc@plt>:
    1c10:	jmp    QWORD PTR [rip+0x2084ca]        # 20a0e0 <fgetc@GLIBC_2.2.5>
    1c16:	push   0x19
    1c1b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c20 <close@plt>:
    1c20:	jmp    QWORD PTR [rip+0x2084c2]        # 20a0e8 <close@GLIBC_2.2.5>
    1c26:	push   0x1a
    1c2b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c30 <posix_fadvise@plt>:
    1c30:	jmp    QWORD PTR [rip+0x2084ba]        # 20a0f0 <posix_fadvise@GLIBC_2.2.5>
    1c36:	push   0x1b
    1c3b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c40 <memchr@plt>:
    1c40:	jmp    QWORD PTR [rip+0x2084b2]        # 20a0f8 <memchr@GLIBC_2.2.5>
    1c46:	push   0x1c
    1c4b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c50 <read@plt>:
    1c50:	jmp    QWORD PTR [rip+0x2084aa]        # 20a100 <read@GLIBC_2.2.5>
    1c56:	push   0x1d
    1c5b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c60 <memcmp@plt>:
    1c60:	jmp    QWORD PTR [rip+0x2084a2]        # 20a108 <memcmp@GLIBC_2.2.5>
    1c66:	push   0x1e
    1c6b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c70 <fputs_unlocked@plt>:
    1c70:	jmp    QWORD PTR [rip+0x20849a]        # 20a110 <fputs_unlocked@GLIBC_2.2.5>
    1c76:	push   0x1f
    1c7b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c80 <calloc@plt>:
    1c80:	jmp    QWORD PTR [rip+0x208492]        # 20a118 <calloc@GLIBC_2.2.5>
    1c86:	push   0x20
    1c8b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001c90 <strcmp@plt>:
    1c90:	jmp    QWORD PTR [rip+0x20848a]        # 20a120 <strcmp@GLIBC_2.2.5>
    1c96:	push   0x21
    1c9b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ca0 <__memmove_chk@plt>:
    1ca0:	jmp    QWORD PTR [rip+0x208482]        # 20a128 <__memmove_chk@GLIBC_2.3.4>
    1ca6:	push   0x22
    1cab:	jmp    1a70 <__uflow@plt-0x10>

0000000000001cb0 <feof@plt>:
    1cb0:	jmp    QWORD PTR [rip+0x20847a]        # 20a130 <feof@GLIBC_2.2.5>
    1cb6:	push   0x23
    1cbb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001cc0 <memcpy@plt>:
    1cc0:	jmp    QWORD PTR [rip+0x208472]        # 20a138 <memcpy@GLIBC_2.14>
    1cc6:	push   0x24
    1ccb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001cd0 <fileno@plt>:
    1cd0:	jmp    QWORD PTR [rip+0x20846a]        # 20a140 <fileno@GLIBC_2.2.5>
    1cd6:	push   0x25
    1cdb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001ce0 <__xstat@plt>:
    1ce0:	jmp    QWORD PTR [rip+0x208462]        # 20a148 <__xstat@GLIBC_2.2.5>
    1ce6:	push   0x26
    1ceb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001cf0 <wcwidth@plt>:
    1cf0:	jmp    QWORD PTR [rip+0x20845a]        # 20a150 <wcwidth@GLIBC_2.2.5>
    1cf6:	push   0x27
    1cfb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d00 <fflush@plt>:
    1d00:	jmp    QWORD PTR [rip+0x208452]        # 20a158 <fflush@GLIBC_2.2.5>
    1d06:	push   0x28
    1d0b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d10 <nl_langinfo@plt>:
    1d10:	jmp    QWORD PTR [rip+0x20844a]        # 20a160 <nl_langinfo@GLIBC_2.2.5>
    1d16:	push   0x29
    1d1b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d20 <ungetc@plt>:
    1d20:	jmp    QWORD PTR [rip+0x208442]        # 20a168 <ungetc@GLIBC_2.2.5>
    1d26:	push   0x2a
    1d2b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d30 <__fxstat@plt>:
    1d30:	jmp    QWORD PTR [rip+0x20843a]        # 20a170 <__fxstat@GLIBC_2.2.5>
    1d36:	push   0x2b
    1d3b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d40 <__freading@plt>:
    1d40:	jmp    QWORD PTR [rip+0x208432]        # 20a178 <__freading@GLIBC_2.2.5>
    1d46:	push   0x2c
    1d4b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d50 <realloc@plt>:
    1d50:	jmp    QWORD PTR [rip+0x20842a]        # 20a180 <realloc@GLIBC_2.2.5>
    1d56:	push   0x2d
    1d5b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d60 <fdopen@plt>:
    1d60:	jmp    QWORD PTR [rip+0x208422]        # 20a188 <fdopen@GLIBC_2.2.5>
    1d66:	push   0x2e
    1d6b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d70 <setlocale@plt>:
    1d70:	jmp    QWORD PTR [rip+0x20841a]        # 20a190 <setlocale@GLIBC_2.2.5>
    1d76:	push   0x2f
    1d7b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d80 <__printf_chk@plt>:
    1d80:	jmp    QWORD PTR [rip+0x208412]        # 20a198 <__printf_chk@GLIBC_2.3.4>
    1d86:	push   0x30
    1d8b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001d90 <setvbuf@plt>:
    1d90:	jmp    QWORD PTR [rip+0x20840a]        # 20a1a0 <setvbuf@GLIBC_2.2.5>
    1d96:	push   0x31
    1d9b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001da0 <iswspace@plt>:
    1da0:	jmp    QWORD PTR [rip+0x208402]        # 20a1a8 <iswspace@GLIBC_2.2.5>
    1da6:	push   0x32
    1dab:	jmp    1a70 <__uflow@plt-0x10>

0000000000001db0 <error@plt>:
    1db0:	jmp    QWORD PTR [rip+0x2083fa]        # 20a1b0 <error@GLIBC_2.2.5>
    1db6:	push   0x33
    1dbb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001dc0 <open@plt>:
    1dc0:	jmp    QWORD PTR [rip+0x2083f2]        # 20a1b8 <open@GLIBC_2.2.5>
    1dc6:	push   0x34
    1dcb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001dd0 <fseeko@plt>:
    1dd0:	jmp    QWORD PTR [rip+0x2083ea]        # 20a1c0 <fseeko@GLIBC_2.2.5>
    1dd6:	push   0x35
    1ddb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001de0 <fopen@plt>:
    1de0:	jmp    QWORD PTR [rip+0x2083e2]        # 20a1c8 <fopen@GLIBC_2.2.5>
    1de6:	push   0x36
    1deb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001df0 <sysconf@plt>:
    1df0:	jmp    QWORD PTR [rip+0x2083da]        # 20a1d0 <sysconf@GLIBC_2.2.5>
    1df6:	push   0x37
    1dfb:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e00 <__cxa_atexit@plt>:
    1e00:	jmp    QWORD PTR [rip+0x2083d2]        # 20a1d8 <__cxa_atexit@GLIBC_2.2.5>
    1e06:	push   0x38
    1e0b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e10 <sysinfo@plt>:
    1e10:	jmp    QWORD PTR [rip+0x2083ca]        # 20a1e0 <sysinfo@GLIBC_2.2.5>
    1e16:	push   0x39
    1e1b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e20 <exit@plt>:
    1e20:	jmp    QWORD PTR [rip+0x2083c2]        # 20a1e8 <exit@GLIBC_2.2.5>
    1e26:	push   0x3a
    1e2b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e30 <fwrite@plt>:
    1e30:	jmp    QWORD PTR [rip+0x2083ba]        # 20a1f0 <fwrite@GLIBC_2.2.5>
    1e36:	push   0x3b
    1e3b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e40 <__fprintf_chk@plt>:
    1e40:	jmp    QWORD PTR [rip+0x2083b2]        # 20a1f8 <__fprintf_chk@GLIBC_2.3.4>
    1e46:	push   0x3c
    1e4b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e50 <mbsinit@plt>:
    1e50:	jmp    QWORD PTR [rip+0x2083aa]        # 20a200 <mbsinit@GLIBC_2.2.5>
    1e56:	push   0x3d
    1e5b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e60 <iswprint@plt>:
    1e60:	jmp    QWORD PTR [rip+0x2083a2]        # 20a208 <iswprint@GLIBC_2.2.5>
    1e66:	push   0x3e
    1e6b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e70 <getdelim@plt>:
    1e70:	jmp    QWORD PTR [rip+0x20839a]        # 20a210 <getdelim@GLIBC_2.2.5>
    1e76:	push   0x3f
    1e7b:	jmp    1a70 <__uflow@plt-0x10>

0000000000001e80 <__ctype_b_loc@plt>:
    1e80:	jmp    QWORD PTR [rip+0x208392]        # 20a218 <__ctype_b_loc@GLIBC_2.3>
    1e86:	push   0x40
    1e8b:	jmp    1a70 <__uflow@plt-0x10>

Disassembly of section .plt.got:

0000000000001e90 <.plt.got>:
    1e90:	jmp    QWORD PTR [rip+0x208122]        # 209fb8 <free@GLIBC_2.2.5>
    1e96:	xchg   ax,ax
    1e98:	jmp    QWORD PTR [rip+0x20813a]        # 209fd8 <malloc@GLIBC_2.2.5>
    1e9e:	xchg   ax,ax
    1ea0:	jmp    QWORD PTR [rip+0x20814a]        # 209ff0 <__cxa_finalize@GLIBC_2.2.5>
    1ea6:	xchg   ax,ax

Disassembly of section .text:

0000000000001eb0 <_obstack_begin@@Base-0x4b70>:
    1eb0:	push   r15
    1eb2:	push   r14
    1eb4:	push   r13
    1eb6:	push   r12
    1eb8:	mov    r13d,edi
    1ebb:	push   rbp
    1ebc:	push   rbx
    1ebd:	mov    rbx,rsi
    1ec0:	lea    r12,[rip+0x207d99]        # 209c60 <_obstack_memory_used@@Base+0x203070>
    1ec7:	xor    ebp,ebp
    1ec9:	sub    rsp,0x208
    1ed0:	mov    rdi,QWORD PTR [rsi]
    1ed3:	mov    rax,QWORD PTR fs:0x28
    1edc:	mov    QWORD PTR [rsp+0x1f8],rax
    1ee4:	xor    eax,eax
    1ee6:	call   3e00 <__ctype_b_loc@plt+0x1f80>
    1eeb:	lea    rsi,[rip+0x60ef]        # 7fe1 <_obstack_memory_used@@Base+0x13f1>
    1ef2:	mov    edi,0x6
    1ef7:	call   1d70 <setlocale@plt>
    1efc:	lea    rsi,[rip+0x539b]        # 729e <_obstack_memory_used@@Base+0x6ae>
    1f03:	lea    rdi,[rip+0x5386]        # 7290 <_obstack_memory_used@@Base+0x6a0>
    1f0a:	call   1b30 <bindtextdomain@plt>
    1f0f:	lea    rdi,[rip+0x537a]        # 7290 <_obstack_memory_used@@Base+0x6a0>
    1f16:	call   1b10 <textdomain@plt>
    1f1b:	lea    rdi,[rip+0x1aee]        # 3a10 <__ctype_b_loc@plt+0x1b90>
    1f22:	call   71c0 <_obstack_memory_used@@Base+0x5d0>
    1f27:	mov    rdi,QWORD PTR [rip+0x20839a]        # 20a2c8 <stdout@@GLIBC_2.2.5>
    1f2e:	xor    ecx,ecx
    1f30:	mov    edx,0x1
    1f35:	xor    esi,esi
    1f37:	call   1d90 <setvbuf@plt>
    1f3c:	mov    BYTE PTR [rip+0x2083de],0x0        # 20a321 <stderr@@GLIBC_2.2.5+0x21>
    1f43:	mov    BYTE PTR [rip+0x2083d8],0x0        # 20a322 <stderr@@GLIBC_2.2.5+0x22>
    1f4a:	mov    BYTE PTR [rip+0x2083d2],0x0        # 20a323 <stderr@@GLIBC_2.2.5+0x23>
    1f51:	mov    BYTE PTR [rip+0x2083cc],0x0        # 20a324 <stderr@@GLIBC_2.2.5+0x24>
    1f58:	mov    BYTE PTR [rip+0x2083c1],0x0        # 20a320 <stderr@@GLIBC_2.2.5+0x20>
    1f5f:	mov    QWORD PTR [rip+0x2083be],0x0        # 20a328 <stderr@@GLIBC_2.2.5+0x28>
    1f6a:	mov    QWORD PTR [rip+0x2083bb],0x0        # 20a330 <stderr@@GLIBC_2.2.5+0x30>
    1f75:	mov    QWORD PTR [rip+0x2083b8],0x0        # 20a338 <stderr@@GLIBC_2.2.5+0x38>
    1f80:	mov    QWORD PTR [rip+0x2083b5],0x0        # 20a340 <stderr@@GLIBC_2.2.5+0x40>
    1f8b:	mov    QWORD PTR [rip+0x2083b2],0x0        # 20a348 <stderr@@GLIBC_2.2.5+0x48>
    1f96:	lea    rdx,[rip+0x532e]        # 72cb <_obstack_memory_used@@Base+0x6db>
    1f9d:	xor    r8d,r8d
    1fa0:	mov    rcx,r12
    1fa3:	mov    rsi,rbx
    1fa6:	mov    edi,r13d
    1fa9:	call   1b80 <getopt_long@plt>
    1fae:	cmp    eax,0xffffffff
    1fb1:	je     207d <__ctype_b_loc@plt+0x1fd>
    1fb7:	cmp    eax,0x63
    1fba:	je     2071 <__ctype_b_loc@plt+0x1f1>
    1fc0:	jle    1fe0 <__ctype_b_loc@plt+0x160>
    1fc2:	cmp    eax,0x6d
    1fc5:	je     2020 <__ctype_b_loc@plt+0x1a0>
    1fc7:	jle    200f <__ctype_b_loc@plt+0x18f>
    1fc9:	cmp    eax,0x77
    1fcc:	je     2006 <__ctype_b_loc@plt+0x186>
    1fce:	add    eax,0xffffff80
    1fd1:	jne    1ff3 <__ctype_b_loc@plt+0x173>
    1fd3:	mov    rbp,QWORD PTR [rip+0x208306]        # 20a2e0 <optarg@@GLIBC_2.2.5>
    1fda:	jmp    1f96 <__ctype_b_loc@plt+0x116>
    1fdc:	nop    DWORD PTR [rax+0x0]
    1fe0:	cmp    eax,0xffffff7e
    1fe5:	je     202c <__ctype_b_loc@plt+0x1ac>
    1fe7:	cmp    eax,0x4c
    1fea:	je     1ffd <__ctype_b_loc@plt+0x17d>
    1fec:	cmp    eax,0xffffff7d
    1ff1:	je     2033 <__ctype_b_loc@plt+0x1b3>
    1ff3:	mov    edi,0x1
    1ff8:	call   34f0 <__ctype_b_loc@plt+0x1670>
    1ffd:	mov    BYTE PTR [rip+0x20831c],0x1        # 20a320 <stderr@@GLIBC_2.2.5+0x20>
    2004:	jmp    1f96 <__ctype_b_loc@plt+0x116>
    2006:	mov    BYTE PTR [rip+0x208316],0x1        # 20a323 <stderr@@GLIBC_2.2.5+0x23>
    200d:	jmp    1f96 <__ctype_b_loc@plt+0x116>
    200f:	cmp    eax,0x6c
    2012:	jne    1ff3 <__ctype_b_loc@plt+0x173>
    2014:	mov    BYTE PTR [rip+0x208309],0x1        # 20a324 <stderr@@GLIBC_2.2.5+0x24>
    201b:	jmp    1f96 <__ctype_b_loc@plt+0x116>
    2020:	mov    BYTE PTR [rip+0x2082fb],0x1        # 20a322 <stderr@@GLIBC_2.2.5+0x22>
    2027:	jmp    1f96 <__ctype_b_loc@plt+0x116>
    202c:	xor    edi,edi
    202e:	call   34f0 <__ctype_b_loc@plt+0x1670>
    2033:	sub    rsp,0x8
    2037:	mov    rdi,QWORD PTR [rip+0x20828a]        # 20a2c8 <stdout@@GLIBC_2.2.5>
    203e:	mov    rcx,QWORD PTR [rip+0x2081eb]        # 20a230 <_obstack_memory_used@@Base+0x203640>
    2045:	push   0x0
    2047:	lea    r9,[rip+0x5262]        # 72b0 <_obstack_memory_used@@Base+0x6c0>
    204e:	lea    r8,[rip+0x526b]        # 72c0 <_obstack_memory_used@@Base+0x6d0>
    2055:	lea    rdx,[rip+0x5230]        # 728c <_obstack_memory_used@@Base+0x69c>
    205c:	lea    rsi,[rip+0x51b0]        # 7213 <_obstack_memory_used@@Base+0x623>
    2063:	xor    eax,eax
    2065:	call   63d0 <__ctype_b_loc@plt+0x4550>
    206a:	xor    edi,edi
    206c:	call   1e20 <exit@plt>
    2071:	mov    BYTE PTR [rip+0x2082a9],0x1        # 20a321 <stderr@@GLIBC_2.2.5+0x21>
    2078:	jmp    1f96 <__ctype_b_loc@plt+0x116>
    207d:	cmp    BYTE PTR [rip+0x2082a0],0x0        # 20a324 <stderr@@GLIBC_2.2.5+0x24>
    2084:	jne    20bf <__ctype_b_loc@plt+0x23f>
    2086:	cmp    BYTE PTR [rip+0x208296],0x0        # 20a323 <stderr@@GLIBC_2.2.5+0x23>
    208d:	jne    20bf <__ctype_b_loc@plt+0x23f>
    208f:	cmp    BYTE PTR [rip+0x20828c],0x0        # 20a322 <stderr@@GLIBC_2.2.5+0x22>
    2096:	jne    20bf <__ctype_b_loc@plt+0x23f>
    2098:	cmp    BYTE PTR [rip+0x208282],0x0        # 20a321 <stderr@@GLIBC_2.2.5+0x21>
    209f:	jne    20bf <__ctype_b_loc@plt+0x23f>
    20a1:	cmp    BYTE PTR [rip+0x208278],0x0        # 20a320 <stderr@@GLIBC_2.2.5+0x20>
    20a8:	jne    20bf <__ctype_b_loc@plt+0x23f>
    20aa:	mov    BYTE PTR [rip+0x208270],0x1        # 20a321 <stderr@@GLIBC_2.2.5+0x21>
    20b1:	mov    BYTE PTR [rip+0x20826b],0x1        # 20a323 <stderr@@GLIBC_2.2.5+0x23>
    20b8:	mov    BYTE PTR [rip+0x208265],0x1        # 20a324 <stderr@@GLIBC_2.2.5+0x24>
    20bf:	test   rbp,rbp
    20c2:	je     2692 <__ctype_b_loc@plt+0x812>
    20c8:	movsxd rax,DWORD PTR [rip+0x208209]        # 20a2d8 <optind@@GLIBC_2.2.5>
    20cf:	cmp    r13d,eax
    20d2:	jg     27dd <__ctype_b_loc@plt+0x95d>
    20d8:	cmp    BYTE PTR [rbp+0x0],0x2d
    20dc:	jne    21cd <__ctype_b_loc@plt+0x34d>
    20e2:	cmp    BYTE PTR [rbp+0x1],0x0
    20e6:	jne    21cd <__ctype_b_loc@plt+0x34d>
    20ec:	mov    rbx,QWORD PTR [rip+0x2081dd]        # 20a2d0 <stdin@@GLIBC_2.2.5>
    20f3:	mov    rdi,rbx
    20f6:	call   1cd0 <fileno@plt>
    20fb:	lea    rdx,[rsp+0x160]
    2103:	mov    esi,eax
    2105:	mov    edi,0x1
    210a:	call   1d30 <__fxstat@plt>
    210f:	test   eax,eax
    2111:	jne    212a <__ctype_b_loc@plt+0x2aa>
    2113:	mov    eax,DWORD PTR [rsp+0x178]
    211a:	and    eax,0xf000
    211f:	cmp    eax,0x8000
    2124:	je     26d4 <__ctype_b_loc@plt+0x854>
    212a:	mov    rdi,rbx
    212d:	xor    r12d,r12d
    2130:	xor    ebx,ebx
    2132:	call   38e0 <__ctype_b_loc@plt+0x1a60>
    2137:	mov    BYTE PTR [rsp+0x2f],0x0
    213c:	mov    r14,rax
    213f:	test   r14,r14
    2142:	je     24af <__ctype_b_loc@plt+0x62f>
    2148:	test   rbx,rbx
    214b:	je     2490 <__ctype_b_loc@plt+0x610>
    2151:	mov    edx,0x98
    2156:	mov    rax,rdx
    2159:	mul    rbx
    215c:	jo     24af <__ctype_b_loc@plt+0x62f>
    2162:	mov    rdi,rax
    2165:	call   6530 <__ctype_b_loc@plt+0x46b0>
    216a:	cmp    rbx,0x1
    216e:	mov    QWORD PTR [rsp+0x10],rax
    2173:	je     264e <__ctype_b_loc@plt+0x7ce>
    2179:	mov    rax,QWORD PTR [rsp+0x10]
    217e:	xor    r13d,r13d
    2181:	lea    r15,[rax+0x8]
    2185:	jmp    21a8 <__ctype_b_loc@plt+0x328>
    2187:	mov    rdx,r15
    218a:	mov    edi,0x1
    218f:	call   1ce0 <__xstat@plt>
    2194:	add    r13,0x1
    2198:	mov    DWORD PTR [r15-0x8],eax
    219c:	add    r15,0x98
    21a3:	cmp    rbx,r13
    21a6:	je     2227 <__ctype_b_loc@plt+0x3a7>
    21a8:	mov    rsi,QWORD PTR [r12+r13*8]
    21ac:	test   rsi,rsi
    21af:	je     21bc <__ctype_b_loc@plt+0x33c>
    21b1:	cmp    BYTE PTR [rsi],0x2d
    21b4:	jne    2187 <__ctype_b_loc@plt+0x307>
    21b6:	cmp    BYTE PTR [rsi+0x1],0x0
    21ba:	jne    2187 <__ctype_b_loc@plt+0x307>
    21bc:	mov    rdx,r15
    21bf:	xor    esi,esi
    21c1:	mov    edi,0x1
    21c6:	call   1d30 <__fxstat@plt>
    21cb:	jmp    2194 <__ctype_b_loc@plt+0x314>
    21cd:	lea    rsi,[rip+0x5136]        # 730a <_obstack_memory_used@@Base+0x71a>
    21d4:	mov    rdi,rbp
    21d7:	call   1de0 <fopen@plt>
    21dc:	test   rax,rax
    21df:	mov    rbx,rax
    21e2:	jne    20f3 <__ctype_b_loc@plt+0x273>
    21e8:	mov    rsi,rbp
    21eb:	mov    edi,0x4
    21f0:	call   57d0 <__ctype_b_loc@plt+0x3950>
    21f5:	lea    rsi,[rip+0x50e6]        # 72e2 <_obstack_memory_used@@Base+0x6f2>
    21fc:	mov    edx,0x5
    2201:	xor    edi,edi
    2203:	mov    rbp,rax
    2206:	call   1b40 <dcgettext@plt>
    220b:	mov    rbx,rax
    220e:	call   1ab0 <__errno_location@plt>
    2213:	mov    esi,DWORD PTR [rax]
    2215:	mov    rcx,rbp
    2218:	mov    rdx,rbx
    221b:	mov    edi,0x1
    2220:	xor    eax,eax
    2222:	call   1db0 <error@plt>
    2227:	mov    rax,QWORD PTR [rsp+0x10]
    222c:	mov    ecx,0x1
    2231:	cmp    DWORD PTR [rax],0x0
    2234:	jle    25c2 <__ctype_b_loc@plt+0x742>
    223a:	mov    DWORD PTR [rip+0x2080dc],ecx        # 20a31c <stderr@@GLIBC_2.2.5+0x1c>
    2240:	xor    r12d,r12d
    2243:	mov    r13d,0x1
    2249:	lea    r15,[rsp+0x3c]
    224e:	jmp    22be <__ctype_b_loc@plt+0x43e>
    2250:	cmp    BYTE PTR [rbp+0x1],0x0
    2254:	jne    22e8 <__ctype_b_loc@plt+0x468>
    225a:	movzx  eax,BYTE PTR [rax]
    225d:	cmp    al,0x2d
    225f:	jne    2345 <__ctype_b_loc@plt+0x4c5>
    2265:	cmp    BYTE PTR [r8+0x1],0x0
    226a:	jne    2349 <__ctype_b_loc@plt+0x4c9>
    2270:	mov    rsi,r8
    2273:	mov    edi,0x4
    2278:	mov    QWORD PTR [rsp+0x8],r8
    227d:	call   57d0 <__ctype_b_loc@plt+0x3950>
    2282:	lea    rsi,[rip+0x573f]        # 79c8 <_obstack_memory_used@@Base+0xdd8>
    2289:	xor    edi,edi
    228b:	mov    r13,rax
    228e:	mov    edx,0x5
    2293:	call   1b40 <dcgettext@plt>
    2298:	xor    esi,esi
    229a:	mov    rdx,rax
    229d:	xor    edi,edi
    229f:	xor    eax,eax
    22a1:	mov    rcx,r13
    22a4:	call   1db0 <error@plt>
    22a9:	mov    r8,QWORD PTR [rsp+0x8]
    22ae:	cmp    BYTE PTR [r8],0x0
    22b2:	je     22ee <__ctype_b_loc@plt+0x46e>
    22b4:	xor    r13d,r13d
    22b7:	add    r12,0x98
    22be:	mov    rsi,r15
    22c1:	mov    rdi,r14
    22c4:	call   3920 <__ctype_b_loc@plt+0x1aa0>
    22c9:	test   rax,rax
    22cc:	mov    r8,rax
    22cf:	je     241f <__ctype_b_loc@plt+0x59f>
    22d5:	test   rbp,rbp
    22d8:	je     23e9 <__ctype_b_loc@plt+0x569>
    22de:	cmp    BYTE PTR [rbp+0x0],0x2d
    22e2:	je     2250 <__ctype_b_loc@plt+0x3d0>
    22e8:	cmp    BYTE PTR [r8],0x0
    22ec:	jne    2349 <__ctype_b_loc@plt+0x4c9>
    22ee:	mov    rdi,r14
    22f1:	call   39b0 <__ctype_b_loc@plt+0x1b30>
    22f6:	lea    rsi,[rip+0x501e]        # 731b <_obstack_memory_used@@Base+0x72b>
    22fd:	mov    edx,0x5
    2302:	xor    edi,edi
    2304:	mov    r13,rax
    2307:	call   1b40 <dcgettext@plt>
    230c:	mov    rdx,rbp
    230f:	mov    esi,0x3
    2314:	xor    edi,edi
    2316:	mov    QWORD PTR [rsp+0x8],rax
    231b:	call   58f0 <__ctype_b_loc@plt+0x3a70>
    2320:	mov    r9,QWORD PTR [rsp+0x8]
    2325:	lea    rdx,[rip+0x500d]        # 7339 <_obstack_memory_used@@Base+0x749>
    232c:	mov    r8,r13
    232f:	mov    rcx,rax
    2332:	xor    esi,esi
    2334:	xor    edi,edi
    2336:	xor    eax,eax
    2338:	xor    r13d,r13d
    233b:	call   1db0 <error@plt>
    2340:	jmp    22b7 <__ctype_b_loc@plt+0x437>
    2345:	test   al,al
    2347:	je     22ee <__ctype_b_loc@plt+0x46e>
    2349:	test   rbx,rbx
    234c:	mov    edx,0x0
    2351:	cmovne rdx,r12
    2355:	add    rdx,QWORD PTR [rsp+0x10]
    235a:	cmp    BYTE PTR [r8],0x2d
    235e:	je     23c9 <__ctype_b_loc@plt+0x549>
    2360:	xor    esi,esi
    2362:	mov    rdi,r8
    2365:	xor    eax,eax
    2367:	mov    QWORD PTR [rsp+0x18],rdx
    236c:	mov    QWORD PTR [rsp+0x8],r8
    2371:	call   1dc0 <open@plt>
    2376:	cmp    eax,0xffffffff
    2379:	mov    r8,QWORD PTR [rsp+0x8]
    237e:	mov    rdx,QWORD PTR [rsp+0x18]
    2383:	je     2459 <__ctype_b_loc@plt+0x5d9>
    2389:	xor    ecx,ecx
    238b:	mov    rsi,r8
    238e:	mov    edi,eax
    2390:	mov    QWORD PTR [rsp+0x20],r8
    2395:	mov    DWORD PTR [rsp+0x18],eax
    2399:	call   2ba0 <__ctype_b_loc@plt+0xd20>
    239e:	mov    r9d,DWORD PTR [rsp+0x18]
    23a3:	mov    BYTE PTR [rsp+0x8],al
    23a7:	mov    edi,r9d
    23aa:	call   1c20 <close@plt>
    23af:	test   eax,eax
    23b1:	movzx  edx,BYTE PTR [rsp+0x8]
    23b6:	mov    r8,QWORD PTR [rsp+0x20]
    23bb:	jne    2459 <__ctype_b_loc@plt+0x5d9>
    23c1:	and    r13d,edx
    23c4:	jmp    22b7 <__ctype_b_loc@plt+0x437>
    23c9:	cmp    BYTE PTR [r8+0x1],0x0
    23ce:	jne    2360 <__ctype_b_loc@plt+0x4e0>
    23d0:	or     rcx,0xffffffffffffffff
    23d4:	mov    rsi,r8
    23d7:	xor    edi,edi
    23d9:	mov    BYTE PTR [rip+0x207f38],0x1        # 20a318 <stderr@@GLIBC_2.2.5+0x18>
    23e0:	call   2ba0 <__ctype_b_loc@plt+0xd20>
    23e5:	mov    edx,eax
    23e7:	jmp    23c1 <__ctype_b_loc@plt+0x541>
    23e9:	cmp    BYTE PTR [rax],0x0
    23ec:	jne    2349 <__ctype_b_loc@plt+0x4c9>
    23f2:	lea    rsi,[rip+0x4f22]        # 731b <_obstack_memory_used@@Base+0x72b>
    23f9:	xor    edi,edi
    23fb:	mov    edx,0x5
    2400:	call   1b40 <dcgettext@plt>
    2405:	lea    rdx,[rip+0x5621]        # 7a2d <_obstack_memory_used@@Base+0xe3d>
    240c:	mov    rcx,rax
    240f:	xor    esi,esi
    2411:	xor    edi,edi
    2413:	xor    eax,eax
    2415:	call   1db0 <error@plt>
    241a:	jmp    22b4 <__ctype_b_loc@plt+0x434>
    241f:	mov    eax,DWORD PTR [rsp+0x3c]
    2423:	cmp    eax,0x3
    2426:	je     24af <__ctype_b_loc@plt+0x62f>
    242c:	cmp    eax,0x4
    242f:	je     257c <__ctype_b_loc@plt+0x6fc>
    2435:	cmp    eax,0x2
    2438:	je     24b4 <__ctype_b_loc@plt+0x634>
    243a:	lea    rcx,[rip+0x500c]        # 744d <_obstack_memory_used@@Base+0x85d>
    2441:	lea    rsi,[rip+0x4ec4]        # 730c <_obstack_memory_used@@Base+0x71c>
    2448:	lea    rdi,[rip+0x5551]        # 79a0 <_obstack_memory_used@@Base+0xdb0>
    244f:	mov    edx,0x305
    2454:	call   1be0 <__assert_fail@plt>
    2459:	mov    rdx,r8
    245c:	mov    esi,0x3
    2461:	xor    edi,edi
    2463:	call   58f0 <__ctype_b_loc@plt+0x3a70>
    2468:	mov    QWORD PTR [rsp+0x8],rax
    246d:	call   1ab0 <__errno_location@plt>
    2472:	mov    rcx,QWORD PTR [rsp+0x8]
    2477:	mov    esi,DWORD PTR [rax]
    2479:	lea    rdx,[rip+0x55ad]        # 7a2d <_obstack_memory_used@@Base+0xe3d>
    2480:	xor    edi,edi
    2482:	xor    eax,eax
    2484:	call   1db0 <error@plt>
    2489:	xor    edx,edx
    248b:	jmp    23c1 <__ctype_b_loc@plt+0x541>
    2490:	mov    edi,0x98
    2495:	call   6530 <__ctype_b_loc@plt+0x46b0>
    249a:	mov    ecx,0x1
    249f:	mov    QWORD PTR [rsp+0x10],rax
    24a4:	mov    DWORD PTR [rax],0x1
    24aa:	jmp    223a <__ctype_b_loc@plt+0x3ba>
    24af:	call   6730 <__ctype_b_loc@plt+0x48b0>
    24b4:	test   rbp,rbp
    24b7:	sete   al
    24ba:	and    al,r13b
    24bd:	mov    ebx,eax
    24bf:	je     24d5 <__ctype_b_loc@plt+0x655>
    24c1:	mov    rdi,r14
    24c4:	mov    r13d,ebx
    24c7:	call   39b0 <__ctype_b_loc@plt+0x1b30>
    24cc:	test   rax,rax
    24cf:	je     276e <__ctype_b_loc@plt+0x8ee>
    24d5:	cmp    BYTE PTR [rsp+0x2f],0x0
    24da:	jne    26c5 <__ctype_b_loc@plt+0x845>
    24e0:	mov    rdi,r14
    24e3:	call   39b0 <__ctype_b_loc@plt+0x1b30>
    24e8:	cmp    rax,0x1
    24ec:	jbe    252c <__ctype_b_loc@plt+0x6ac>
    24ee:	lea    rsi,[rip+0x4e20]        # 7315 <_obstack_memory_used@@Base+0x725>
    24f5:	mov    edx,0x5
    24fa:	xor    edi,edi
    24fc:	call   1b40 <dcgettext@plt>
    2501:	mov    r8,QWORD PTR [rip+0x207e20]        # 20a328 <stderr@@GLIBC_2.2.5+0x28>
    2508:	mov    rcx,QWORD PTR [rip+0x207e21]        # 20a330 <stderr@@GLIBC_2.2.5+0x30>
    250f:	mov    r9,rax
    2512:	mov    rdx,QWORD PTR [rip+0x207e1f]        # 20a338 <stderr@@GLIBC_2.2.5+0x38>
    2519:	mov    rsi,QWORD PTR [rip+0x207e20]        # 20a340 <stderr@@GLIBC_2.2.5+0x40>
    2520:	mov    rdi,QWORD PTR [rip+0x207e21]        # 20a348 <stderr@@GLIBC_2.2.5+0x48>
    2527:	call   2980 <__ctype_b_loc@plt+0xb00>
    252c:	mov    rdi,r14
    252f:	call   39d0 <__ctype_b_loc@plt+0x1b50>
    2534:	mov    rdi,QWORD PTR [rsp+0x10]
    2539:	call   1e90 <__ctype_b_loc@plt+0x10>
    253e:	cmp    BYTE PTR [rip+0x207dd3],0x0        # 20a318 <stderr@@GLIBC_2.2.5+0x18>
    2545:	jne    2625 <__ctype_b_loc@plt+0x7a5>
    254b:	xor    r13d,0x1
    254f:	mov    rcx,QWORD PTR [rsp+0x1f8]
    2557:	xor    rcx,QWORD PTR fs:0x28
    2560:	movzx  eax,r13b
    2564:	jne    27a1 <__ctype_b_loc@plt+0x921>
    256a:	add    rsp,0x208
    2571:	pop    rbx
    2572:	pop    rbp
    2573:	pop    r12
    2575:	pop    r13
    2577:	pop    r14
    2579:	pop    r15
    257b:	ret    
    257c:	mov    rdx,rbp
    257f:	mov    esi,0x3
    2584:	xor    edi,edi
    2586:	call   58f0 <__ctype_b_loc@plt+0x3a70>
    258b:	lea    rsi,[rip+0x4d6b]        # 72fd <_obstack_memory_used@@Base+0x70d>
    2592:	mov    edx,0x5
    2597:	xor    edi,edi
    2599:	mov    rbp,rax
    259c:	xor    r13d,r13d
    259f:	call   1b40 <dcgettext@plt>
    25a4:	mov    rbx,rax
    25a7:	call   1ab0 <__errno_location@plt>
    25ac:	mov    esi,DWORD PTR [rax]
    25ae:	mov    rcx,rbp
    25b1:	mov    rdx,rbx
    25b4:	xor    edi,edi
    25b6:	xor    eax,eax
    25b8:	call   1db0 <error@plt>
    25bd:	jmp    24d5 <__ctype_b_loc@plt+0x655>
    25c2:	mov    rdx,rax
    25c5:	mov    edi,0x1
    25ca:	xor    eax,eax
    25cc:	xor    ecx,ecx
    25ce:	jmp    25e5 <__ctype_b_loc@plt+0x765>
    25d0:	mov    edi,0x7
    25d5:	add    rcx,0x1
    25d9:	add    rdx,0x98
    25e0:	cmp    rbx,rcx
    25e3:	je     2601 <__ctype_b_loc@plt+0x781>
    25e5:	cmp    DWORD PTR [rdx],0x0
    25e8:	jne    25d5 <__ctype_b_loc@plt+0x755>
    25ea:	mov    esi,DWORD PTR [rdx+0x20]
    25ed:	and    esi,0xf000
    25f3:	cmp    esi,0x8000
    25f9:	jne    25d0 <__ctype_b_loc@plt+0x750>
    25fb:	add    rax,QWORD PTR [rdx+0x38]
    25ff:	jmp    25d5 <__ctype_b_loc@plt+0x755>
    2601:	mov    ecx,0x1
    2606:	mov    esi,0xa
    260b:	jmp    2615 <__ctype_b_loc@plt+0x795>
    260d:	xor    edx,edx
    260f:	add    ecx,0x1
    2612:	div    rsi
    2615:	cmp    rax,0x9
    2619:	ja     260d <__ctype_b_loc@plt+0x78d>
    261b:	cmp    ecx,edi
    261d:	cmovl  ecx,edi
    2620:	jmp    223a <__ctype_b_loc@plt+0x3ba>
    2625:	xor    edi,edi
    2627:	call   1c20 <close@plt>
    262c:	test   eax,eax
    262e:	je     254b <__ctype_b_loc@plt+0x6cb>
    2634:	call   1ab0 <__errno_location@plt>
    2639:	mov    esi,DWORD PTR [rax]
    263b:	lea    rdx,[rip+0x5470]        # 7ab2 <_obstack_memory_used@@Base+0xec2>
    2642:	mov    edi,0x1
    2647:	xor    eax,eax
    2649:	call   1db0 <error@plt>
    264e:	movzx  eax,BYTE PTR [rip+0x207cce]        # 20a323 <stderr@@GLIBC_2.2.5+0x23>
    2655:	movzx  ecx,BYTE PTR [rip+0x207cc8]        # 20a324 <stderr@@GLIBC_2.2.5+0x24>
    265c:	add    ecx,eax
    265e:	movzx  eax,BYTE PTR [rip+0x207cbd]        # 20a322 <stderr@@GLIBC_2.2.5+0x22>
    2665:	add    ecx,eax
    2667:	movzx  eax,BYTE PTR [rip+0x207cb3]        # 20a321 <stderr@@GLIBC_2.2.5+0x21>
    266e:	add    ecx,eax
    2670:	movzx  eax,BYTE PTR [rip+0x207ca9]        # 20a320 <stderr@@GLIBC_2.2.5+0x20>
    2677:	add    ecx,eax
    2679:	cmp    ecx,0x1
    267c:	jne    2179 <__ctype_b_loc@plt+0x2f9>
    2682:	mov    rax,QWORD PTR [rsp+0x10]
    2687:	mov    DWORD PTR [rax],0x1
    268d:	jmp    223a <__ctype_b_loc@plt+0x3ba>
    2692:	mov    eax,DWORD PTR [rip+0x207c40]        # 20a2d8 <optind@@GLIBC_2.2.5>
    2698:	cmp    r13d,eax
    269b:	jle    275d <__ctype_b_loc@plt+0x8dd>
    26a1:	movsxd rdx,eax
    26a4:	lea    r12,[rbx+rdx*8]
    26a8:	mov    ebx,r13d
    26ab:	sub    ebx,eax
    26ad:	movsxd rbx,ebx
    26b0:	mov    rdi,r12
    26b3:	call   38b0 <__ctype_b_loc@plt+0x1a30>
    26b8:	mov    BYTE PTR [rsp+0x2f],0x0
    26bd:	mov    r14,rax
    26c0:	jmp    213f <__ctype_b_loc@plt+0x2bf>
    26c5:	lea    rdi,[rsp+0x40]
    26ca:	call   5c80 <__ctype_b_loc@plt+0x3e00>
    26cf:	jmp    24e0 <__ctype_b_loc@plt+0x660>
    26d4:	pxor   xmm2,xmm2
    26d8:	cvtsi2sd xmm2,QWORD PTR [rsp+0x190]
    26e2:	movsd  QWORD PTR [rsp+0x8],xmm2
    26e8:	call   3ce0 <__ctype_b_loc@plt+0x1e60>
    26ed:	movsd  xmm1,QWORD PTR [rip+0x531b]        # 7a10 <_obstack_memory_used@@Base+0xe20>
    26f5:	mulsd  xmm1,xmm0
    26f9:	movsd  xmm0,QWORD PTR [rip+0x5307]        # 7a08 <_obstack_memory_used@@Base+0xe18>
    2701:	ucomisd xmm1,xmm0
    2705:	jbe    278f <__ctype_b_loc@plt+0x90f>
    270b:	ucomisd xmm0,QWORD PTR [rsp+0x8]
    2711:	jb     212a <__ctype_b_loc@plt+0x2aa>
    2717:	lea    r12,[rsp+0x40]
    271c:	mov    rdi,r12
    271f:	call   5c10 <__ctype_b_loc@plt+0x3d90>
    2724:	mov    rsi,r12
    2727:	mov    rdi,rbx
    272a:	call   5cb0 <__ctype_b_loc@plt+0x3e30>
    272f:	test   al,al
    2731:	mov    BYTE PTR [rsp+0x2f],al
    2735:	je     27a6 <__ctype_b_loc@plt+0x926>
    2737:	mov    rdi,rbx
    273a:	call   6770 <__ctype_b_loc@plt+0x48f0>
    273f:	test   eax,eax
    2741:	jne    27a6 <__ctype_b_loc@plt+0x926>
    2743:	mov    r12,QWORD PTR [rsp+0x48]
    2748:	mov    rbx,QWORD PTR [rsp+0x40]
    274d:	mov    rdi,r12
    2750:	call   38b0 <__ctype_b_loc@plt+0x1a30>
    2755:	mov    r14,rax
    2758:	jmp    213f <__ctype_b_loc@plt+0x2bf>
    275d:	lea    r12,[rip+0x207bac]        # 20a310 <stderr@@GLIBC_2.2.5+0x10>
    2764:	mov    ebx,0x1
    2769:	jmp    26b0 <__ctype_b_loc@plt+0x830>
    276e:	mov    rdx,QWORD PTR [rsp+0x10]
    2773:	or     rcx,0xffffffffffffffff
    2777:	xor    esi,esi
    2779:	xor    edi,edi
    277b:	mov    BYTE PTR [rip+0x207b96],0x1        # 20a318 <stderr@@GLIBC_2.2.5+0x18>
    2782:	call   2ba0 <__ctype_b_loc@plt+0xd20>
    2787:	mov    r13d,eax
    278a:	jmp    24d5 <__ctype_b_loc@plt+0x655>
    278f:	call   3ce0 <__ctype_b_loc@plt+0x1e60>
    2794:	mulsd  xmm0,QWORD PTR [rip+0x5274]        # 7a10 <_obstack_memory_used@@Base+0xe20>
    279c:	jmp    270b <__ctype_b_loc@plt+0x88b>
    27a1:	call   1b70 <__stack_chk_fail@plt>
    27a6:	mov    rsi,rbp
    27a9:	mov    edi,0x4
    27ae:	call   57d0 <__ctype_b_loc@plt+0x3950>
    27b3:	lea    rsi,[rip+0x51c6]        # 7980 <_obstack_memory_used@@Base+0xd90>
    27ba:	mov    rbx,rax
    27bd:	mov    edx,0x5
    27c2:	xor    edi,edi
    27c4:	call   1b40 <dcgettext@plt>
    27c9:	mov    rcx,rbx
    27cc:	mov    rdx,rax
    27cf:	xor    esi,esi
    27d1:	mov    edi,0x1
    27d6:	xor    eax,eax
    27d8:	call   1db0 <error@plt>
    27dd:	mov    rsi,QWORD PTR [rbx+rax*8]
    27e1:	mov    edi,0x4
    27e6:	call   57d0 <__ctype_b_loc@plt+0x3950>
    27eb:	lea    rsi,[rip+0x4adf]        # 72d1 <_obstack_memory_used@@Base+0x6e1>
    27f2:	mov    rbx,rax
    27f5:	xor    edi,edi
    27f7:	mov    edx,0x5
    27fc:	call   1b40 <dcgettext@plt>
    2801:	mov    rcx,rbx
    2804:	mov    rdx,rax
    2807:	xor    esi,esi
    2809:	xor    edi,edi
    280b:	xor    eax,eax
    280d:	call   1db0 <error@plt>
    2812:	lea    rsi,[rip+0x512f]        # 7948 <_obstack_memory_used@@Base+0xd58>
    2819:	xor    edi,edi
    281b:	mov    edx,0x5
    2820:	call   1b40 <dcgettext@plt>
    2825:	mov    rdi,QWORD PTR [rip+0x207ad4]        # 20a300 <stderr@@GLIBC_2.2.5>
    282c:	lea    rdx,[rip+0x575d]        # 7f90 <_obstack_memory_used@@Base+0x13a0>
    2833:	mov    rcx,rax
    2836:	mov    esi,0x1
    283b:	xor    eax,eax
    283d:	call   1e40 <__fprintf_chk@plt>
    2842:	jmp    1ff3 <__ctype_b_loc@plt+0x173>
    2847:	nop    WORD PTR [rax+rax*1+0x0]
    2850:	xor    ebp,ebp
    2852:	mov    r9,rdx
    2855:	pop    rsi
    2856:	mov    rdx,rsp
    2859:	and    rsp,0xfffffffffffffff0
    285d:	push   rax
    285e:	push   rsp
    285f:	lea    r8,[rip+0x494a]        # 71b0 <_obstack_memory_used@@Base+0x5c0>
    2866:	lea    rcx,[rip+0x48d3]        # 7140 <_obstack_memory_used@@Base+0x550>
    286d:	lea    rdi,[rip+0xfffffffffffff63c]        # 1eb0 <__ctype_b_loc@plt+0x30>
    2874:	call   QWORD PTR [rip+0x20774e]        # 209fc8 <_obstack_memory_used@@Base+0x2033d8>
    287a:	hlt    
    287b:	nop    DWORD PTR [rax+rax*1+0x0]
    2880:	lea    rdi,[rip+0x207a21]        # 20a2a8 <obstack_alloc_failed_handler@@Base+0x8>
    2887:	lea    rax,[rip+0x207a21]        # 20a2af <obstack_alloc_failed_handler@@Base+0xf>
    288e:	push   rbp
    288f:	sub    rax,rdi
    2892:	mov    rbp,rsp
    2895:	cmp    rax,0xe
    2899:	jbe    28b0 <__ctype_b_loc@plt+0xa30>
    289b:	mov    rax,QWORD PTR [rip+0x20771e]        # 209fc0 <_obstack_memory_used@@Base+0x2033d0>
    28a2:	test   rax,rax
    28a5:	je     28b0 <__ctype_b_loc@plt+0xa30>
    28a7:	pop    rbp
    28a8:	jmp    rax
    28aa:	nop    WORD PTR [rax+rax*1+0x0]
    28b0:	pop    rbp
    28b1:	ret    
    28b2:	nop    DWORD PTR [rax+0x0]
    28b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    28c0:	lea    rdi,[rip+0x2079e1]        # 20a2a8 <obstack_alloc_failed_handler@@Base+0x8>
    28c7:	lea    rsi,[rip+0x2079da]        # 20a2a8 <obstack_alloc_failed_handler@@Base+0x8>
    28ce:	push   rbp
    28cf:	sub    rsi,rdi
    28d2:	mov    rbp,rsp
    28d5:	sar    rsi,0x3
    28d9:	mov    rax,rsi
    28dc:	shr    rax,0x3f
    28e0:	add    rsi,rax
    28e3:	sar    rsi,1
    28e6:	je     2900 <__ctype_b_loc@plt+0xa80>
    28e8:	mov    rax,QWORD PTR [rip+0x2076f9]        # 209fe8 <_obstack_memory_used@@Base+0x2033f8>
    28ef:	test   rax,rax
    28f2:	je     2900 <__ctype_b_loc@plt+0xa80>
    28f4:	pop    rbp
    28f5:	jmp    rax
    28f7:	nop    WORD PTR [rax+rax*1+0x0]
    2900:	pop    rbp
    2901:	ret    
    2902:	nop    DWORD PTR [rax+0x0]
    2906:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2910:	cmp    BYTE PTR [rip+0x2079f1],0x0        # 20a308 <stderr@@GLIBC_2.2.5+0x8>
    2917:	jne    2940 <__ctype_b_loc@plt+0xac0>
    2919:	cmp    QWORD PTR [rip+0x2076cf],0x0        # 209ff0 <_obstack_memory_used@@Base+0x203400>
    2921:	push   rbp
    2922:	mov    rbp,rsp
    2925:	je     2933 <__ctype_b_loc@plt+0xab3>
    2927:	mov    rdi,QWORD PTR [rip+0x2078fa]        # 20a228 <_obstack_memory_used@@Base+0x203638>
    292e:	call   1ea0 <__ctype_b_loc@plt+0x20>
    2933:	call   2880 <__ctype_b_loc@plt+0xa00>
    2938:	pop    rbp
    2939:	mov    BYTE PTR [rip+0x2079c8],0x1        # 20a308 <stderr@@GLIBC_2.2.5+0x8>
    2940:	repz ret 
    2942:	nop    DWORD PTR [rax+0x0]
    2946:	nop    WORD PTR cs:[rax+rax*1+0x0]
    2950:	lea    rdi,[rip+0x207301]        # 209c58 <_obstack_memory_used@@Base+0x203068>
    2957:	cmp    QWORD PTR [rdi],0x0
    295b:	jne    2968 <__ctype_b_loc@plt+0xae8>
    295d:	jmp    28c0 <__ctype_b_loc@plt+0xa40>
    2962:	nop    WORD PTR [rax+rax*1+0x0]
    2968:	mov    rax,QWORD PTR [rip+0x207671]        # 209fe0 <_obstack_memory_used@@Base+0x2033f0>
    296f:	test   rax,rax
    2972:	je     295d <__ctype_b_loc@plt+0xadd>
    2974:	push   rbp
    2975:	mov    rbp,rsp
    2978:	call   rax
    297a:	pop    rbp
    297b:	jmp    28c0 <__ctype_b_loc@plt+0xa40>
    2980:	push   r15
    2982:	push   r14
    2984:	mov    r15,rsi
    2987:	push   r13
    2989:	push   r12
    298b:	mov    r14,rdx
    298e:	push   rbp
    298f:	push   rbx
    2990:	mov    r13,rcx
    2993:	mov    r12,r8
    2996:	mov    rbx,r9
    2999:	lea    rbp,[rip+0x4aa9]        # 7449 <_obstack_memory_used@@Base+0x859>
    29a0:	sub    rsp,0x28
    29a4:	mov    rax,QWORD PTR fs:0x28
    29ad:	mov    QWORD PTR [rsp+0x18],rax
    29b2:	xor    eax,eax
    29b4:	cmp    BYTE PTR [rip+0x207969],0x0        # 20a324 <stderr@@GLIBC_2.2.5+0x24>
    29bb:	jne    2a80 <__ctype_b_loc@plt+0xc00>
    29c1:	cmp    BYTE PTR [rip+0x20795b],0x0        # 20a323 <stderr@@GLIBC_2.2.5+0x23>
    29c8:	jne    2ab4 <__ctype_b_loc@plt+0xc34>
    29ce:	cmp    BYTE PTR [rip+0x20794d],0x0        # 20a322 <stderr@@GLIBC_2.2.5+0x22>
    29d5:	jne    2aeb <__ctype_b_loc@plt+0xc6b>
    29db:	cmp    BYTE PTR [rip+0x20793f],0x0        # 20a321 <stderr@@GLIBC_2.2.5+0x21>
    29e2:	jne    2b22 <__ctype_b_loc@plt+0xca2>
    29e8:	cmp    BYTE PTR [rip+0x207931],0x0        # 20a320 <stderr@@GLIBC_2.2.5+0x20>
    29ef:	jne    2b59 <__ctype_b_loc@plt+0xcd9>
    29f5:	test   rbx,rbx
    29f8:	je     2a34 <__ctype_b_loc@plt+0xbb4>
    29fa:	mov    esi,0xa
    29ff:	mov    rdi,rbx
    2a02:	call   1ba0 <strchr@plt>
    2a07:	test   rax,rax
    2a0a:	je     2a1e <__ctype_b_loc@plt+0xb9e>
    2a0c:	mov    rdx,rbx
    2a0f:	mov    esi,0x3
    2a14:	xor    edi,edi
    2a16:	call   58f0 <__ctype_b_loc@plt+0x3a70>
    2a1b:	mov    rbx,rax
    2a1e:	lea    rsi,[rip+0x5007]        # 7a2c <_obstack_memory_used@@Base+0xe3c>
    2a25:	mov    rdx,rbx
    2a28:	mov    edi,0x1
    2a2d:	xor    eax,eax
    2a2f:	call   1d80 <__printf_chk@plt>
    2a34:	mov    rdi,QWORD PTR [rip+0x20788d]        # 20a2c8 <stdout@@GLIBC_2.2.5>
    2a3b:	mov    rax,QWORD PTR [rdi+0x28]
    2a3f:	cmp    rax,QWORD PTR [rdi+0x30]
    2a43:	jae    2b88 <__ctype_b_loc@plt+0xd08>
    2a49:	lea    rdx,[rax+0x1]
    2a4d:	mov    QWORD PTR [rdi+0x28],rdx
    2a51:	mov    BYTE PTR [rax],0xa
    2a54:	mov    rax,QWORD PTR [rsp+0x18]
    2a59:	xor    rax,QWORD PTR fs:0x28
    2a62:	jne    2b97 <__ctype_b_loc@plt+0xd17>
    2a68:	add    rsp,0x28
    2a6c:	pop    rbx
    2a6d:	pop    rbp
    2a6e:	pop    r12
    2a70:	pop    r13
    2a72:	pop    r14
    2a74:	pop    r15
    2a76:	ret    
    2a77:	nop    WORD PTR [rax+rax*1+0x0]
    2a80:	mov    rsi,rsp
    2a83:	call   3b00 <__ctype_b_loc@plt+0x1c80>
    2a88:	mov    edx,DWORD PTR [rip+0x20788e]        # 20a31c <stderr@@GLIBC_2.2.5+0x1c>
    2a8e:	mov    rcx,rax
    2a91:	mov    rsi,rbp
    2a94:	xor    eax,eax
    2a96:	mov    edi,0x1
    2a9b:	lea    rbp,[rip+0x49a6]        # 7448 <_obstack_memory_used@@Base+0x858>
    2aa2:	call   1d80 <__printf_chk@plt>
    2aa7:	cmp    BYTE PTR [rip+0x207875],0x0        # 20a323 <stderr@@GLIBC_2.2.5+0x23>
    2aae:	je     29ce <__ctype_b_loc@plt+0xb4e>
    2ab4:	mov    rsi,rsp
    2ab7:	mov    rdi,r15
    2aba:	call   3b00 <__ctype_b_loc@plt+0x1c80>
    2abf:	mov    edx,DWORD PTR [rip+0x207857]        # 20a31c <stderr@@GLIBC_2.2.5+0x1c>
    2ac5:	mov    rcx,rax
    2ac8:	mov    rsi,rbp
    2acb:	xor    eax,eax
    2acd:	mov    edi,0x1
    2ad2:	lea    rbp,[rip+0x496f]        # 7448 <_obstack_memory_used@@Base+0x858>
    2ad9:	call   1d80 <__printf_chk@plt>
    2ade:	cmp    BYTE PTR [rip+0x20783d],0x0        # 20a322 <stderr@@GLIBC_2.2.5+0x22>
    2ae5:	je     29db <__ctype_b_loc@plt+0xb5b>
    2aeb:	mov    rsi,rsp
    2aee:	mov    rdi,r14
    2af1:	call   3b00 <__ctype_b_loc@plt+0x1c80>
    2af6:	mov    edx,DWORD PTR [rip+0x207820]        # 20a31c <stderr@@GLIBC_2.2.5+0x1c>
    2afc:	mov    rcx,rax
    2aff:	mov    rsi,rbp
    2b02:	xor    eax,eax
    2b04:	mov    edi,0x1
    2b09:	lea    rbp,[rip+0x4938]        # 7448 <_obstack_memory_used@@Base+0x858>
    2b10:	call   1d80 <__printf_chk@plt>
    2b15:	cmp    BYTE PTR [rip+0x207805],0x0        # 20a321 <stderr@@GLIBC_2.2.5+0x21>
    2b1c:	je     29e8 <__ctype_b_loc@plt+0xb68>
    2b22:	mov    rsi,rsp
    2b25:	mov    rdi,r13
    2b28:	call   3b00 <__ctype_b_loc@plt+0x1c80>
    2b2d:	mov    edx,DWORD PTR [rip+0x2077e9]        # 20a31c <stderr@@GLIBC_2.2.5+0x1c>
    2b33:	mov    rcx,rax
    2b36:	mov    rsi,rbp
    2b39:	xor    eax,eax
    2b3b:	mov    edi,0x1
    2b40:	lea    rbp,[rip+0x4901]        # 7448 <_obstack_memory_used@@Base+0x858>
    2b47:	call   1d80 <__printf_chk@plt>
    2b4c:	cmp    BYTE PTR [rip+0x2077cd],0x0        # 20a320 <stderr@@GLIBC_2.2.5+0x20>
    2b53:	je     29f5 <__ctype_b_loc@plt+0xb75>
    2b59:	mov    rsi,rsp
    2b5c:	mov    rdi,r12
    2b5f:	call   3b00 <__ctype_b_loc@plt+0x1c80>
    2b64:	mov    edx,DWORD PTR [rip+0x2077b2]        # 20a31c <stderr@@GLIBC_2.2.5+0x1c>
    2b6a:	mov    rcx,rax
    2b6d:	mov    rsi,rbp
    2b70:	mov    edi,0x1
    2b75:	xor    eax,eax
    2b77:	call   1d80 <__printf_chk@plt>
    2b7c:	jmp    29f5 <__ctype_b_loc@plt+0xb75>
    2b81:	nop    DWORD PTR [rax+0x0]
    2b88:	mov    esi,0xa
    2b8d:	call   1bb0 <__overflow@plt>
    2b92:	jmp    2a54 <__ctype_b_loc@plt+0xbd4>
    2b97:	call   1b70 <__stack_chk_fail@plt>
    2b9c:	nop    DWORD PTR [rax+0x0]
    2ba0:	push   r15
    2ba2:	push   r14
    2ba4:	push   r13
    2ba6:	push   r12
    2ba8:	push   rbp
    2ba9:	push   rbx
    2baa:	mov    rbp,rcx
    2bad:	mov    rbx,rdx
    2bb0:	sub    rsp,0x4098
    2bb7:	mov    rcx,QWORD PTR fs:0x28
    2bc0:	mov    QWORD PTR [rsp+0x4088],rcx
    2bc8:	xor    ecx,ecx
    2bca:	test   rsi,rsi
    2bcd:	mov    DWORD PTR [rsp+0x48],edi
    2bd1:	mov    QWORD PTR [rsp+0x50],rsi
    2bd6:	mov    QWORD PTR [rsp+0x58],rsi
    2bdb:	je     33f1 <__ctype_b_loc@plt+0x1571>
    2be1:	call   1b50 <__ctype_get_mb_cur_max@plt>
    2be6:	cmp    rax,0x1
    2bea:	movzx  eax,BYTE PTR [rip+0x207730]        # 20a321 <stderr@@GLIBC_2.2.5+0x21>
    2bf1:	jbe    303e <__ctype_b_loc@plt+0x11be>
    2bf7:	movzx  ecx,BYTE PTR [rip+0x207724]        # 20a322 <stderr@@GLIBC_2.2.5+0x22>
    2bfe:	mov    r12d,ecx
    2c01:	mov    r13d,ecx
    2c04:	mov    DWORD PTR [rsp+0x4c],ecx
    2c08:	xor    r12d,0x1
    2c0c:	and    r12d,eax
    2c0f:	cmp    BYTE PTR [rip+0x20770d],0x0        # 20a323 <stderr@@GLIBC_2.2.5+0x23>
    2c16:	jne    2d10 <__ctype_b_loc@plt+0xe90>
    2c1c:	movzx  r14d,BYTE PTR [rip+0x2076fc]        # 20a320 <stderr@@GLIBC_2.2.5+0x20>
    2c24:	test   r14b,r14b
    2c27:	jne    2e33 <__ctype_b_loc@plt+0xfb3>
    2c2d:	cmp    al,0x1
    2c2f:	jne    315d <__ctype_b_loc@plt+0x12dd>
    2c35:	test   r13b,r13b
    2c38:	jne    315d <__ctype_b_loc@plt+0x12dd>
    2c3e:	cmp    BYTE PTR [rip+0x2076df],0x0        # 20a324 <stderr@@GLIBC_2.2.5+0x24>
    2c45:	jne    315d <__ctype_b_loc@plt+0x12dd>
    2c4b:	test   r12b,r12b
    2c4e:	jne    2e59 <__ctype_b_loc@plt+0xfd9>
    2c54:	lea    rax,[rsp+0x80]
    2c5c:	xor    r13d,r13d
    2c5f:	mov    QWORD PTR [rsp+0x38],0x0
    2c68:	mov    QWORD PTR [rsp+0x10],0x0
    2c71:	movabs r14,0x8888888888888889
    2c7b:	mov    r15,rax
    2c7e:	xchg   ax,ax
    2c80:	mov    edi,DWORD PTR [rsp+0x48]
    2c84:	mov    edx,0x4000
    2c89:	mov    rsi,r15
    2c8c:	call   5eb0 <__ctype_b_loc@plt+0x4030>
    2c91:	test   rax,rax
    2c94:	mov    r12,rax
    2c97:	je     2f60 <__ctype_b_loc@plt+0x10e0>
    2c9d:	cmp    r12,0xffffffffffffffff
    2ca1:	je     2ff5 <__ctype_b_loc@plt+0x1175>
    2ca7:	add    QWORD PTR [rsp+0x38],r12
    2cac:	test   r13b,r13b
    2caf:	lea    rbx,[r15+r12*1]
    2cb3:	je     2f10 <__ctype_b_loc@plt+0x1090>
    2cb9:	mov    rbp,QWORD PTR [rsp+0x10]
    2cbe:	mov    rdi,r15
    2cc1:	jmp    2cd0 <__ctype_b_loc@plt+0xe50>
    2cc3:	nop    DWORD PTR [rax+rax*1+0x0]
    2cc8:	lea    rdi,[rax+0x1]
    2ccc:	add    rbp,0x1
    2cd0:	mov    rdx,rbx
    2cd3:	mov    esi,0xa
    2cd8:	sub    rdx,rdi
    2cdb:	call   1c40 <memchr@plt>
    2ce0:	test   rax,rax
    2ce3:	jne    2cc8 <__ctype_b_loc@plt+0xe48>
    2ce5:	mov    rax,r12
    2ce8:	mov    rcx,rbp
    2ceb:	sub    rcx,QWORD PTR [rsp+0x10]
    2cf0:	mul    r14
    2cf3:	mov    QWORD PTR [rsp+0x10],rbp
    2cf8:	shr    rdx,0x3
    2cfc:	cmp    rcx,rdx
    2cff:	setbe  r13b
    2d03:	jmp    2c80 <__ctype_b_loc@plt+0xe00>
    2d08:	nop    DWORD PTR [rax+rax*1+0x0]
    2d10:	mov    edi,DWORD PTR [rsp+0x48]
    2d14:	xor    edx,edx
    2d16:	xor    esi,esi
    2d18:	mov    ecx,0x2
    2d1d:	call   3ac0 <__ctype_b_loc@plt+0x1c40>
    2d22:	test   r12b,r12b
    2d25:	jne    3184 <__ctype_b_loc@plt+0x1304>
    2d2b:	call   1b50 <__ctype_get_mb_cur_max@plt>
    2d30:	cmp    rax,0x1
    2d34:	jbe    31a0 <__ctype_b_loc@plt+0x1320>
    2d3a:	lea    rax,[rsp+0x80]
    2d42:	mov    QWORD PTR [rsp+0x70],0x0
    2d4b:	xor    r14d,r14d
    2d4e:	xor    r15d,r15d
    2d51:	xor    ebp,ebp
    2d53:	xor    ebx,ebx
    2d55:	mov    QWORD PTR [rsp+0x40],rax
    2d5a:	lea    rax,[rsp+0x70]
    2d5f:	mov    QWORD PTR [rsp+0x30],0x0
    2d68:	mov    QWORD PTR [rsp+0x38],0x0
    2d71:	xor    r12d,r12d
    2d74:	mov    QWORD PTR [rsp+0x20],0x0
    2d7d:	mov    QWORD PTR [rsp+0x8],rax
    2d82:	lea    rax,[rsp+0x6c]
    2d87:	mov    QWORD PTR [rsp+0x10],0x0
    2d90:	mov    QWORD PTR [rsp+0x28],rax
    2d95:	nop    DWORD PTR [rax]
    2d98:	mov    rax,QWORD PTR [rsp+0x40]
    2d9d:	mov    edi,DWORD PTR [rsp+0x48]
    2da1:	mov    edx,0x4000
    2da6:	sub    rdx,r14
    2da9:	lea    rsi,[rax+r14*1]
    2dad:	call   5eb0 <__ctype_b_loc@plt+0x4030>
    2db2:	test   rax,rax
    2db5:	je     339f <__ctype_b_loc@plt+0x151f>
    2dbb:	cmp    rax,0xffffffffffffffff
    2dbf:	je     33be <__ctype_b_loc@plt+0x153e>
    2dc5:	add    QWORD PTR [rsp+0x38],rax
    2dca:	add    r14,rax
    2dcd:	test   r15b,r15b
    2dd0:	mov    r13,QWORD PTR [rsp+0x40]
    2dd5:	jne    3092 <__ctype_b_loc@plt+0x1212>
    2ddb:	nop    DWORD PTR [rax+rax*1+0x0]
    2de0:	movzx  edi,BYTE PTR [r13+0x0]
    2de5:	lea    rsi,[rip+0x4c54]        # 7a40 <_obstack_memory_used@@Base+0xe50>
    2dec:	mov    eax,edi
    2dee:	shr    al,0x5
    2df1:	and    eax,0x7
    2df4:	mov    eax,DWORD PTR [rsi+rax*4]
    2df7:	bt     eax,edi
    2dfa:	jae    3092 <__ctype_b_loc@plt+0x1212>
    2e00:	movsx  ecx,dil
    2e04:	mov    edx,0x1
    2e09:	mov    DWORD PTR [rsp+0x6c],ecx
    2e0d:	lea    eax,[rcx-0x9]
    2e10:	add    r13,rdx
    2e13:	sub    r14,rdx
    2e16:	add    r12,0x1
    2e1a:	cmp    eax,0x17
    2e1d:	ja     34d6 <__ctype_b_loc@plt+0x1656>
    2e23:	lea    rsi,[rip+0x455e]        # 7388 <_obstack_memory_used@@Base+0x798>
    2e2a:	movsxd rax,DWORD PTR [rsi+rax*4]
    2e2e:	add    rax,rsi
    2e31:	jmp    rax
    2e33:	mov    edi,DWORD PTR [rsp+0x48]
    2e37:	xor    edx,edx
    2e39:	xor    esi,esi
    2e3b:	mov    ecx,0x2
    2e40:	call   3ac0 <__ctype_b_loc@plt+0x1c40>
    2e45:	call   1b50 <__ctype_get_mb_cur_max@plt>
    2e4a:	cmp    rax,0x1
    2e4e:	ja     2d3a <__ctype_b_loc@plt+0xeba>
    2e54:	jmp    31a0 <__ctype_b_loc@plt+0x1320>
    2e59:	mov    eax,DWORD PTR [rbx]
    2e5b:	test   eax,eax
    2e5d:	jle    2e73 <__ctype_b_loc@plt+0xff3>
    2e5f:	mov    esi,DWORD PTR [rsp+0x48]
    2e63:	lea    rdx,[rbx+0x8]
    2e67:	mov    edi,0x1
    2e6c:	call   1d30 <__fxstat@plt>
    2e71:	mov    DWORD PTR [rbx],eax
    2e73:	test   eax,eax
    2e75:	jne    32b9 <__ctype_b_loc@plt+0x1439>
    2e7b:	mov    eax,DWORD PTR [rbx+0x20]
    2e7e:	and    eax,0xd000
    2e83:	cmp    eax,0x8000
    2e88:	jne    32b9 <__ctype_b_loc@plt+0x1439>
    2e8e:	mov    rsi,QWORD PTR [rbx+0x38]
    2e92:	test   rsi,rsi
    2e95:	js     32b9 <__ctype_b_loc@plt+0x1439>
    2e9b:	mov    rax,QWORD PTR [rbx+0x40]
    2e9f:	movabs rdx,0x1fffffffffffffff
    2ea9:	mov    rbx,rsi
    2eac:	lea    rcx,[rax-0x1]
    2eb0:	add    rax,0x1
    2eb4:	cmp    rcx,rdx
    2eb7:	mov    ecx,0x201
    2ebc:	cmovbe rcx,rax
    2ec0:	xor    edx,edx
    2ec2:	mov    rax,rsi
    2ec5:	div    rcx
    2ec8:	sub    rbx,rdx
    2ecb:	test   rbp,rbp
    2ece:	js     34be <__ctype_b_loc@plt+0x163e>
    2ed4:	test   rbp,rbp
    2ed7:	js     32b9 <__ctype_b_loc@plt+0x1439>
    2edd:	cmp    rbp,rbx
    2ee0:	jge    32b9 <__ctype_b_loc@plt+0x1439>
    2ee6:	mov    edi,DWORD PTR [rsp+0x48]
    2eea:	mov    edx,0x1
    2eef:	mov    rsi,rbx
    2ef2:	call   1bd0 <lseek@plt>
    2ef7:	test   rax,rax
    2efa:	js     32b9 <__ctype_b_loc@plt+0x1439>
    2f00:	sub    rbx,rbp
    2f03:	mov    QWORD PTR [rsp+0x38],rbx
    2f08:	jmp    32c2 <__ctype_b_loc@plt+0x1442>
    2f0d:	nop    DWORD PTR [rax]
    2f10:	cmp    rbx,r15
    2f13:	je     3033 <__ctype_b_loc@plt+0x11b3>
    2f19:	mov    rcx,QWORD PTR [rsp+0x10]
    2f1e:	mov    rax,r15
    2f21:	nop    DWORD PTR [rax+0x0]
    2f28:	add    rax,0x1
    2f2c:	xor    edx,edx
    2f2e:	cmp    BYTE PTR [rax-0x1],0xa
    2f32:	sete   dl
    2f35:	add    rcx,rdx
    2f38:	cmp    rbx,rax
    2f3b:	jne    2f28 <__ctype_b_loc@plt+0x10a8>
    2f3d:	mov    rax,r12
    2f40:	mov    rsi,rcx
    2f43:	sub    rsi,QWORD PTR [rsp+0x10]
    2f48:	mul    r14
    2f4b:	mov    QWORD PTR [rsp+0x10],rcx
    2f50:	shr    rdx,0x3
    2f54:	cmp    rsi,rdx
    2f57:	setbe  r13b
    2f5b:	jmp    2c80 <__ctype_b_loc@plt+0xe00>
    2f60:	xor    ebp,ebp
    2f62:	xor    r13d,r13d
    2f65:	mov    r14d,0x1
    2f6b:	movzx  eax,BYTE PTR [rip+0x2073b0]        # 20a322 <stderr@@GLIBC_2.2.5+0x22>
    2f72:	mov    rbx,QWORD PTR [rsp+0x38]
    2f77:	mov    r8,rbp
    2f7a:	cmp    eax,DWORD PTR [rsp+0x4c]
    2f7e:	mov    r15,QWORD PTR [rsp+0x10]
    2f83:	mov    rsi,r13
    2f86:	mov    r9,QWORD PTR [rsp+0x50]
    2f8b:	mov    rcx,rbx
    2f8e:	mov    rdi,r15
    2f91:	cmovg  r12,rbx
    2f95:	mov    rdx,r12
    2f98:	call   2980 <__ctype_b_loc@plt+0xb00>
    2f9d:	add    QWORD PTR [rip+0x2073a4],r15        # 20a348 <stderr@@GLIBC_2.2.5+0x48>
    2fa4:	add    QWORD PTR [rip+0x207395],r13        # 20a340 <stderr@@GLIBC_2.2.5+0x40>
    2fab:	add    QWORD PTR [rip+0x207386],r12        # 20a338 <stderr@@GLIBC_2.2.5+0x38>
    2fb2:	add    QWORD PTR [rip+0x207377],rbx        # 20a330 <stderr@@GLIBC_2.2.5+0x30>
    2fb9:	cmp    rbp,QWORD PTR [rip+0x207368]        # 20a328 <stderr@@GLIBC_2.2.5+0x28>
    2fc0:	jbe    2fc9 <__ctype_b_loc@plt+0x1149>
    2fc2:	mov    QWORD PTR [rip+0x20735f],rbp        # 20a328 <stderr@@GLIBC_2.2.5+0x28>
    2fc9:	mov    rcx,QWORD PTR [rsp+0x4088]
    2fd1:	xor    rcx,QWORD PTR fs:0x28
    2fda:	mov    eax,r14d
    2fdd:	jne    34dd <__ctype_b_loc@plt+0x165d>
    2fe3:	add    rsp,0x4098
    2fea:	pop    rbx
    2feb:	pop    rbp
    2fec:	pop    r12
    2fee:	pop    r13
    2ff0:	pop    r14
    2ff2:	pop    r15
    2ff4:	ret    
    2ff5:	mov    rdx,QWORD PTR [rsp+0x58]
    2ffa:	mov    esi,0x3
    2fff:	xor    edi,edi
    3001:	xor    ebp,ebp
    3003:	xor    r12d,r12d
    3006:	xor    r13d,r13d
    3009:	xor    r14d,r14d
    300c:	call   58f0 <__ctype_b_loc@plt+0x3a70>
    3011:	mov    rbx,rax
    3014:	call   1ab0 <__errno_location@plt>
    3019:	mov    esi,DWORD PTR [rax]
    301b:	lea    rdx,[rip+0x4a0b]        # 7a2d <_obstack_memory_used@@Base+0xe3d>
    3022:	mov    rcx,rbx
    3025:	xor    edi,edi
    3027:	xor    eax,eax
    3029:	call   1db0 <error@plt>
    302e:	jmp    2f6b <__ctype_b_loc@plt+0x10eb>
    3033:	mov    r13d,0x1
    3039:	jmp    2c80 <__ctype_b_loc@plt+0xe00>
    303e:	movzx  edx,BYTE PTR [rip+0x2072dd]        # 20a322 <stderr@@GLIBC_2.2.5+0x22>
    3045:	test   al,al
    3047:	mov    DWORD PTR [rsp+0x4c],0x0
    304f:	cmove  eax,edx
    3052:	xor    r13d,r13d
    3055:	mov    r12d,eax
    3058:	jmp    2c0f <__ctype_b_loc@plt+0xd8f>
    305d:	nop    DWORD PTR [rax]
    3060:	add    QWORD PTR [rsp+0x10],0x1
    3066:	mov    rax,QWORD PTR [rsp+0x30]
    306b:	cmp    rax,rbp
    306e:	cmovae rbp,rax
    3072:	mov    QWORD PTR [rsp+0x30],rbp
    3077:	xor    ebp,ebp
    3079:	add    QWORD PTR [rsp+0x20],rbx
    307e:	xor    ebx,ebx
    3080:	test   r14,r14
    3083:	je     2d98 <__ctype_b_loc@plt+0xf18>
    3089:	test   r15b,r15b
    308c:	je     2de0 <__ctype_b_loc@plt+0xf60>
    3092:	mov    rcx,QWORD PTR [rsp+0x8]
    3097:	mov    rdi,QWORD PTR [rsp+0x28]
    309c:	mov    rdx,r14
    309f:	mov    rsi,r13
    30a2:	mov    r15,QWORD PTR [rsp+0x70]
    30a7:	call   6890 <__ctype_b_loc@plt+0x4a10>
    30ac:	cmp    rax,0xfffffffffffffffe
    30b0:	je     3360 <__ctype_b_loc@plt+0x14e0>
    30b6:	cmp    rax,0xffffffffffffffff
    30ba:	je     3348 <__ctype_b_loc@plt+0x14c8>
    30c0:	mov    rdi,QWORD PTR [rsp+0x8]
    30c5:	mov    QWORD PTR [rsp+0x18],rax
    30ca:	call   1e50 <mbsinit@plt>
    30cf:	mov    rdx,QWORD PTR [rsp+0x18]
    30d4:	test   eax,eax
    30d6:	sete   r15b
    30da:	test   rdx,rdx
    30dd:	jne    3338 <__ctype_b_loc@plt+0x14b8>
    30e3:	mov    DWORD PTR [rsp+0x6c],0x0
    30eb:	add    r13,0x1
    30ef:	sub    r14,0x1
    30f3:	add    r12,0x1
    30f7:	xor    edi,edi
    30f9:	xor    ecx,ecx
    30fb:	mov    DWORD PTR [rsp+0x18],ecx
    30ff:	call   1e60 <iswprint@plt>
    3104:	test   eax,eax
    3106:	mov    ecx,DWORD PTR [rsp+0x18]
    310a:	je     3080 <__ctype_b_loc@plt+0x1200>
    3110:	mov    edi,ecx
    3112:	call   1cf0 <wcwidth@plt>
    3117:	mov    edi,DWORD PTR [rsp+0x6c]
    311b:	movsxd rdx,eax
    311e:	add    rdx,rbp
    3121:	test   eax,eax
    3123:	cmovg  rbp,rdx
    3127:	call   1da0 <iswspace@plt>
    312c:	test   eax,eax
    312e:	jne    3079 <__ctype_b_loc@plt+0x11f9>
    3134:	mov    ebx,0x1
    3139:	jmp    3080 <__ctype_b_loc@plt+0x1200>
    313e:	xchg   ax,ax
    3140:	add    rbp,0x1
    3144:	jmp    3079 <__ctype_b_loc@plt+0x11f9>
    3149:	nop    DWORD PTR [rax+0x0]
    3150:	and    rbp,0xfffffffffffffff8
    3154:	add    rbp,0x8
    3158:	jmp    3079 <__ctype_b_loc@plt+0x11f9>
    315d:	mov    edi,DWORD PTR [rsp+0x48]
    3161:	xor    edx,edx
    3163:	xor    esi,esi
    3165:	mov    ecx,0x2
    316a:	call   3ac0 <__ctype_b_loc@plt+0x1c40>
    316f:	test   r12b,r12b
    3172:	je     3184 <__ctype_b_loc@plt+0x1304>
    3174:	cmp    BYTE PTR [rip+0x2071a9],0x0        # 20a324 <stderr@@GLIBC_2.2.5+0x24>
    317b:	je     2e59 <__ctype_b_loc@plt+0xfd9>
    3181:	xor    r12d,r12d
    3184:	test   r13b,r13b
    3187:	jne    2d2b <__ctype_b_loc@plt+0xeab>
    318d:	test   r12b,r12b
    3190:	je     2c54 <__ctype_b_loc@plt+0xdd4>
    3196:	jmp    2d2b <__ctype_b_loc@plt+0xeab>
    319b:	nop    DWORD PTR [rax+rax*1+0x0]
    31a0:	lea    rax,[rsp+0x80]
    31a8:	xor    ebx,ebx
    31aa:	xor    ebp,ebp
    31ac:	lea    r14,[rip+0x4235]        # 73e8 <_obstack_memory_used@@Base+0x7f8>
    31b3:	movzx  r13d,bl
    31b7:	mov    QWORD PTR [rsp+0x38],0x0
    31c0:	xor    r12d,r12d
    31c3:	mov    QWORD PTR [rsp+0x10],0x0
    31cc:	mov    QWORD PTR [rsp+0x40],rax
    31d1:	mov    rbx,rbp
    31d4:	nop    DWORD PTR [rax+0x0]
    31d8:	mov    rsi,QWORD PTR [rsp+0x40]
    31dd:	mov    edi,DWORD PTR [rsp+0x48]
    31e1:	mov    edx,0x4000
    31e6:	call   5eb0 <__ctype_b_loc@plt+0x4030>
    31eb:	test   rax,rax
    31ee:	je     34aa <__ctype_b_loc@plt+0x162a>
    31f4:	cmp    rax,0xffffffffffffffff
    31f8:	je     3457 <__ctype_b_loc@plt+0x15d7>
    31fe:	mov    rcx,QWORD PTR [rsp+0x40]
    3203:	add    QWORD PTR [rsp+0x38],rax
    3208:	lea    rdi,[rcx+rax*1]
    320c:	mov    r15,rcx
    320f:	mov    rcx,rbp
    3212:	mov    rbp,rbx
    3215:	nop    DWORD PTR [rax]
    3218:	add    r15,0x1
    321c:	movzx  ebx,BYTE PTR [r15-0x1]
    3221:	lea    eax,[rbx-0x9]
    3224:	cmp    al,0x17
    3226:	ja     3280 <__ctype_b_loc@plt+0x1400>
    3228:	movzx  eax,al
    322b:	movsxd rax,DWORD PTR [r14+rax*4]
    322f:	add    rax,r14
    3232:	jmp    rax
    3234:	nop    DWORD PTR [rax+0x0]
    3238:	add    QWORD PTR [rsp+0x10],0x1
    323e:	cmp    rcx,rbp
    3241:	cmovb  rcx,rbp
    3245:	xor    ebp,ebp
    3247:	add    r12,r13
    324a:	xor    r13d,r13d
    324d:	cmp    r15,rdi
    3250:	jne    3218 <__ctype_b_loc@plt+0x1398>
    3252:	mov    rbx,rbp
    3255:	mov    rbp,rcx
    3258:	jmp    31d8 <__ctype_b_loc@plt+0x1358>
    325d:	nop    DWORD PTR [rax]
    3260:	and    rbp,0xfffffffffffffff8
    3264:	add    rbp,0x8
    3268:	jmp    3247 <__ctype_b_loc@plt+0x13c7>
    326a:	nop    WORD PTR [rax+rax*1+0x0]
    3270:	add    rbp,0x1
    3274:	jmp    3247 <__ctype_b_loc@plt+0x13c7>
    3276:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3280:	mov    QWORD PTR [rsp+0x18],rdi
    3285:	mov    QWORD PTR [rsp+0x8],rcx
    328a:	call   1e80 <__ctype_b_loc@plt>
    328f:	mov    rax,QWORD PTR [rax]
    3292:	movzx  edx,bl
    3295:	mov    rcx,QWORD PTR [rsp+0x8]
    329a:	mov    rdi,QWORD PTR [rsp+0x18]
    329f:	movzx  eax,WORD PTR [rax+rdx*2]
    32a3:	test   ah,0x40
    32a6:	je     324d <__ctype_b_loc@plt+0x13cd>
    32a8:	add    rbp,0x1
    32ac:	test   ah,0x20
    32af:	jne    3247 <__ctype_b_loc@plt+0x13c7>
    32b1:	mov    r13d,0x1
    32b7:	jmp    324d <__ctype_b_loc@plt+0x13cd>
    32b9:	mov    QWORD PTR [rsp+0x38],0x0
    32c2:	mov    ebp,DWORD PTR [rsp+0x48]
    32c6:	mov    ecx,0x2
    32cb:	xor    edx,edx
    32cd:	xor    esi,esi
    32cf:	mov    edi,ebp
    32d1:	call   3ac0 <__ctype_b_loc@plt+0x1c40>
    32d6:	lea    rax,[rsp+0x80]
    32de:	mov    rbx,QWORD PTR [rsp+0x38]
    32e3:	mov    r12,rax
    32e6:	jmp    32fd <__ctype_b_loc@plt+0x147d>
    32e8:	nop    DWORD PTR [rax+rax*1+0x0]
    32f0:	cmp    rax,0xffffffffffffffff
    32f4:	je     340e <__ctype_b_loc@plt+0x158e>
    32fa:	add    rbx,rax
    32fd:	mov    edx,0x4000
    3302:	mov    rsi,r12
    3305:	mov    edi,ebp
    3307:	call   5eb0 <__ctype_b_loc@plt+0x4030>
    330c:	test   rax,rax
    330f:	jne    32f0 <__ctype_b_loc@plt+0x1470>
    3311:	mov    QWORD PTR [rsp+0x38],rbx
    3316:	xor    ebp,ebp
    3318:	xor    r12d,r12d
    331b:	xor    r13d,r13d
    331e:	mov    QWORD PTR [rsp+0x10],0x0
    3327:	mov    r14d,0x1
    332d:	jmp    2f6b <__ctype_b_loc@plt+0x10eb>
    3332:	nop    WORD PTR [rax+rax*1+0x0]
    3338:	mov    ecx,DWORD PTR [rsp+0x6c]
    333c:	jmp    2e0d <__ctype_b_loc@plt+0xf8d>
    3341:	nop    DWORD PTR [rax+0x0]
    3348:	add    r13,0x1
    334c:	sub    r14,0x1
    3350:	mov    r15d,0x1
    3356:	jmp    3080 <__ctype_b_loc@plt+0x1200>
    335b:	nop    DWORD PTR [rax+rax*1+0x0]
    3360:	test   r14,r14
    3363:	mov    QWORD PTR [rsp+0x70],r15
    3368:	je     3388 <__ctype_b_loc@plt+0x1508>
    336a:	cmp    r14,0x4000
    3371:	je     3393 <__ctype_b_loc@plt+0x1513>
    3373:	mov    rdi,QWORD PTR [rsp+0x40]
    3378:	mov    ecx,0x4001
    337d:	mov    rdx,r14
    3380:	mov    rsi,r13
    3383:	call   1ca0 <__memmove_chk@plt>
    3388:	mov    r15d,0x1
    338e:	jmp    2d98 <__ctype_b_loc@plt+0xf18>
    3393:	add    r13,0x1
    3397:	mov    r14d,0x3fff
    339d:	jmp    3373 <__ctype_b_loc@plt+0x14f3>
    339f:	mov    r14d,0x1
    33a5:	mov    rax,QWORD PTR [rsp+0x30]
    33aa:	mov    r13,QWORD PTR [rsp+0x20]
    33af:	cmp    rax,rbp
    33b2:	cmovae rbp,rax
    33b6:	add    r13,rbx
    33b9:	jmp    2f6b <__ctype_b_loc@plt+0x10eb>
    33be:	mov    rdx,QWORD PTR [rsp+0x58]
    33c3:	mov    esi,0x3
    33c8:	xor    edi,edi
    33ca:	call   58f0 <__ctype_b_loc@plt+0x3a70>
    33cf:	mov    r14,rax
    33d2:	call   1ab0 <__errno_location@plt>
    33d7:	mov    esi,DWORD PTR [rax]
    33d9:	lea    rdx,[rip+0x464d]        # 7a2d <_obstack_memory_used@@Base+0xe3d>
    33e0:	mov    rcx,r14
    33e3:	xor    edi,edi
    33e5:	xor    eax,eax
    33e7:	xor    r14d,r14d
    33ea:	call   1db0 <error@plt>
    33ef:	jmp    33a5 <__ctype_b_loc@plt+0x1525>
    33f1:	lea    rsi,[rip+0x3e0c]        # 7204 <_obstack_memory_used@@Base+0x614>
    33f8:	mov    edx,0x5
    33fd:	xor    edi,edi
    33ff:	call   1b40 <dcgettext@plt>
    3404:	mov    QWORD PTR [rsp+0x58],rax
    3409:	jmp    2be1 <__ctype_b_loc@plt+0xd61>
    340e:	mov    rdx,QWORD PTR [rsp+0x58]
    3413:	mov    esi,0x3
    3418:	xor    edi,edi
    341a:	mov    QWORD PTR [rsp+0x38],rbx
    341f:	xor    ebp,ebp
    3421:	xor    r12d,r12d
    3424:	xor    r13d,r13d
    3427:	call   58f0 <__ctype_b_loc@plt+0x3a70>
    342c:	mov    rbx,rax
    342f:	call   1ab0 <__errno_location@plt>
    3434:	mov    esi,DWORD PTR [rax]
    3436:	lea    rdx,[rip+0x45f0]        # 7a2d <_obstack_memory_used@@Base+0xe3d>
    343d:	mov    rcx,rbx
    3440:	xor    edi,edi
    3442:	xor    eax,eax
    3444:	call   1db0 <error@plt>
    3449:	mov    QWORD PTR [rsp+0x10],0x0
    3452:	jmp    2f6b <__ctype_b_loc@plt+0x10eb>
    3457:	mov    rdx,QWORD PTR [rsp+0x58]
    345c:	mov    rax,rbx
    345f:	mov    esi,0x3
    3464:	xor    edi,edi
    3466:	mov    ebx,r13d
    3469:	mov    r13,rbp
    346c:	mov    rbp,rax
    346f:	call   58f0 <__ctype_b_loc@plt+0x3a70>
    3474:	mov    r14,rax
    3477:	call   1ab0 <__errno_location@plt>
    347c:	mov    esi,DWORD PTR [rax]
    347e:	lea    rdx,[rip+0x45a8]        # 7a2d <_obstack_memory_used@@Base+0xe3d>
    3485:	mov    rcx,r14
    3488:	xor    edi,edi
    348a:	xor    eax,eax
    348c:	xor    r14d,r14d
    348f:	call   1db0 <error@plt>
    3494:	cmp    r13,rbp
    3497:	cmovae rbp,r13
    349b:	movzx  r13d,bl
    349f:	add    r13,r12
    34a2:	xor    r12d,r12d
    34a5:	jmp    2f6b <__ctype_b_loc@plt+0x10eb>
    34aa:	mov    rax,rbx
    34ad:	mov    r14d,0x1
    34b3:	mov    ebx,r13d
    34b6:	mov    r13,rbp
    34b9:	mov    rbp,rax
    34bc:	jmp    3494 <__ctype_b_loc@plt+0x1614>
    34be:	mov    edi,DWORD PTR [rsp+0x48]
    34c2:	mov    edx,0x1
    34c7:	xor    esi,esi
    34c9:	call   1bd0 <lseek@plt>
    34ce:	mov    rbp,rax
    34d1:	jmp    2ed4 <__ctype_b_loc@plt+0x1054>
    34d6:	mov    edi,ecx
    34d8:	jmp    30fb <__ctype_b_loc@plt+0x127b>
    34dd:	call   1b70 <__stack_chk_fail@plt>
    34e2:	nop    DWORD PTR [rax+0x0]
    34e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    34f0:	push   r12
    34f2:	push   rbp
    34f3:	mov    edx,0x5
    34f8:	push   rbx
    34f9:	mov    ebx,edi
    34fb:	add    rsp,0xffffffffffffff80
    34ff:	mov    rbp,QWORD PTR [rip+0x206e5a]        # 20a360 <stderr@@GLIBC_2.2.5+0x60>
    3506:	mov    rax,QWORD PTR fs:0x28
    350f:	mov    QWORD PTR [rsp+0x78],rax
    3514:	xor    eax,eax
    3516:	test   edi,edi
    3518:	je     3548 <__ctype_b_loc@plt+0x16c8>
    351a:	lea    rsi,[rip+0x3f37]        # 7458 <_obstack_memory_used@@Base+0x868>
    3521:	xor    edi,edi
    3523:	call   1b40 <dcgettext@plt>
    3528:	mov    rdi,QWORD PTR [rip+0x206dd1]        # 20a300 <stderr@@GLIBC_2.2.5>
    352f:	mov    rdx,rax
    3532:	mov    rcx,rbp
    3535:	mov    esi,0x1
    353a:	xor    eax,eax
    353c:	call   1e40 <__fprintf_chk@plt>
    3541:	mov    edi,ebx
    3543:	call   1e20 <exit@plt>
    3548:	lea    rsi,[rip+0x3f31]        # 7480 <_obstack_memory_used@@Base+0x890>
    354f:	xor    edi,edi
    3551:	call   1b40 <dcgettext@plt>
    3556:	mov    rcx,rbp
    3559:	mov    rdx,rbp
    355c:	mov    rsi,rax
    355f:	mov    edi,0x1
    3564:	xor    eax,eax
    3566:	call   1d80 <__printf_chk@plt>
    356b:	mov    rbp,QWORD PTR [rip+0x206d56]        # 20a2c8 <stdout@@GLIBC_2.2.5>
    3572:	lea    rsi,[rip+0x3f4f]        # 74c8 <_obstack_memory_used@@Base+0x8d8>
    3579:	mov    edx,0x5
    357e:	xor    edi,edi
    3580:	call   1b40 <dcgettext@plt>
    3585:	mov    rsi,rbp
    3588:	mov    rdi,rax
    358b:	call   1c70 <fputs_unlocked@plt>
    3590:	mov    rbp,QWORD PTR [rip+0x206d31]        # 20a2c8 <stdout@@GLIBC_2.2.5>
    3597:	lea    rsi,[rip+0x3fe2]        # 7580 <_obstack_memory_used@@Base+0x990>
    359e:	mov    edx,0x5
    35a3:	xor    edi,edi
    35a5:	call   1b40 <dcgettext@plt>
    35aa:	mov    rsi,rbp
    35ad:	mov    rdi,rax
    35b0:	call   1c70 <fputs_unlocked@plt>
    35b5:	mov    rbp,QWORD PTR [rip+0x206d0c]        # 20a2c8 <stdout@@GLIBC_2.2.5>
    35bc:	lea    rsi,[rip+0x3ff5]        # 75b8 <_obstack_memory_used@@Base+0x9c8>
    35c3:	mov    edx,0x5
    35c8:	xor    edi,edi
    35ca:	call   1b40 <dcgettext@plt>
    35cf:	mov    rsi,rbp
    35d2:	mov    rdi,rax
    35d5:	call   1c70 <fputs_unlocked@plt>
    35da:	mov    rbp,QWORD PTR [rip+0x206ce7]        # 20a2c8 <stdout@@GLIBC_2.2.5>
    35e1:	lea    rsi,[rip+0x4100]        # 76e8 <_obstack_memory_used@@Base+0xaf8>
    35e8:	mov    edx,0x5
    35ed:	xor    edi,edi
    35ef:	call   1b40 <dcgettext@plt>
    35f4:	mov    rsi,rbp
    35f7:	mov    rdi,rax
    35fa:	call   1c70 <fputs_unlocked@plt>
    35ff:	mov    rbp,QWORD PTR [rip+0x206cc2]        # 20a2c8 <stdout@@GLIBC_2.2.5>
    3606:	lea    rsi,[rip+0x420b]        # 7818 <_obstack_memory_used@@Base+0xc28>
    360d:	mov    edx,0x5
    3612:	xor    edi,edi
    3614:	call   1b40 <dcgettext@plt>
    3619:	mov    rsi,rbp
    361c:	mov    rdi,rax
    361f:	call   1c70 <fputs_unlocked@plt>
    3624:	mov    rbp,QWORD PTR [rip+0x206c9d]        # 20a2c8 <stdout@@GLIBC_2.2.5>
    362b:	lea    rsi,[rip+0x4216]        # 7848 <_obstack_memory_used@@Base+0xc58>
    3632:	mov    edx,0x5
    3637:	xor    edi,edi
    3639:	call   1b40 <dcgettext@plt>
    363e:	mov    rsi,rbp
    3641:	mov    rdi,rax
    3644:	lea    rbp,[rip+0x3bc8]        # 7213 <_obstack_memory_used@@Base+0x623>
    364b:	call   1c70 <fputs_unlocked@plt>
    3650:	lea    rax,[rip+0x3bbf]        # 7216 <_obstack_memory_used@@Base+0x626>
    3657:	lea    rdx,[rip+0x3bf9]        # 7257 <_obstack_memory_used@@Base+0x667>
    365e:	mov    QWORD PTR [rsp+0x60],0x0
    3667:	mov    QWORD PTR [rsp+0x68],0x0
    3670:	mov    QWORD PTR [rsp],rax
    3674:	lea    rax,[rip+0x3b9d]        # 7218 <_obstack_memory_used@@Base+0x628>
    367b:	mov    QWORD PTR [rsp+0x30],rdx
    3680:	lea    rdx,[rip+0x3bda]        # 7261 <_obstack_memory_used@@Base+0x671>
    3687:	mov    QWORD PTR [rsp+0x8],rax
    368c:	lea    rax,[rip+0x3bfd]        # 7290 <_obstack_memory_used@@Base+0x6a0>
    3693:	mov    QWORD PTR [rsp+0x40],rdx
    3698:	lea    rdx,[rip+0x3bcc]        # 726b <_obstack_memory_used@@Base+0x67b>
    369f:	mov    QWORD PTR [rsp+0x10],rax
    36a4:	lea    rax,[rip+0x3b7d]        # 7228 <_obstack_memory_used@@Base+0x638>
    36ab:	mov    QWORD PTR [rsp+0x50],rdx
    36b0:	mov    QWORD PTR [rsp+0x18],rax
    36b5:	lea    rax,[rip+0x3b82]        # 723e <_obstack_memory_used@@Base+0x64e>
    36bc:	mov    QWORD PTR [rsp+0x20],rax
    36c1:	lea    rax,[rip+0x3b80]        # 7248 <_obstack_memory_used@@Base+0x658>
    36c8:	mov    QWORD PTR [rsp+0x28],rax
    36cd:	mov    QWORD PTR [rsp+0x38],rax
    36d2:	mov    QWORD PTR [rsp+0x48],rax
    36d7:	mov    QWORD PTR [rsp+0x58],rax
    36dc:	mov    rax,rsp
    36df:	nop
    36e0:	add    rax,0x10
    36e4:	mov    rdi,QWORD PTR [rax]
    36e7:	test   rdi,rdi
    36ea:	je     36f8 <__ctype_b_loc@plt+0x1878>
    36ec:	mov    ecx,0x3
    36f1:	mov    rsi,rbp
    36f4:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    36f6:	jne    36e0 <__ctype_b_loc@plt+0x1860>
    36f8:	mov    r12,QWORD PTR [rax+0x8]
    36fc:	test   r12,r12
    36ff:	je     37d4 <__ctype_b_loc@plt+0x1954>
    3705:	lea    rsi,[rip+0x3b69]        # 7275 <_obstack_memory_used@@Base+0x685>
    370c:	xor    edi,edi
    370e:	mov    edx,0x5
    3713:	call   1b40 <dcgettext@plt>
    3718:	lea    rcx,[rip+0x4161]        # 7880 <_obstack_memory_used@@Base+0xc90>
    371f:	lea    rdx,[rip+0x3b66]        # 728c <_obstack_memory_used@@Base+0x69c>
    3726:	mov    rsi,rax
    3729:	mov    edi,0x1
    372e:	xor    eax,eax
    3730:	call   1d80 <__printf_chk@plt>
    3735:	xor    esi,esi
    3737:	mov    edi,0x5
    373c:	call   1d70 <setlocale@plt>
    3741:	test   rax,rax
    3744:	je     3762 <__ctype_b_loc@plt+0x18e2>
    3746:	lea    rsi,[rip+0x3b4d]        # 729a <_obstack_memory_used@@Base+0x6aa>
    374d:	mov    edx,0x3
    3752:	mov    rdi,rax
    3755:	call   1ac0 <strncmp@plt>
    375a:	test   eax,eax
    375c:	jne    3877 <__ctype_b_loc@plt+0x19f7>
    3762:	lea    rsi,[rip+0x4187]        # 78f0 <_obstack_memory_used@@Base+0xd00>
    3769:	xor    edi,edi
    376b:	mov    edx,0x5
    3770:	call   1b40 <dcgettext@plt>
    3775:	lea    rcx,[rip+0x3a97]        # 7213 <_obstack_memory_used@@Base+0x623>
    377c:	lea    rdx,[rip+0x40fd]        # 7880 <_obstack_memory_used@@Base+0xc90>
    3783:	mov    rsi,rax
    3786:	mov    edi,0x1
    378b:	xor    eax,eax
    378d:	call   1d80 <__printf_chk@plt>
    3792:	cmp    r12,rbp
    3795:	lea    rcx,[rip+0x4845]        # 7fe1 <_obstack_memory_used@@Base+0x13f1>
    379c:	lea    rbp,[rip+0x3a8f]        # 7232 <_obstack_memory_used@@Base+0x642>
    37a3:	cmovne rbp,rcx
    37a7:	lea    rsi,[rip+0x4162]        # 7910 <_obstack_memory_used@@Base+0xd20>
    37ae:	xor    edi,edi
    37b0:	mov    edx,0x5
    37b5:	call   1b40 <dcgettext@plt>
    37ba:	mov    rcx,rbp
    37bd:	mov    rsi,rax
    37c0:	mov    rdx,r12
    37c3:	mov    edi,0x1
    37c8:	xor    eax,eax
    37ca:	call   1d80 <__printf_chk@plt>
    37cf:	jmp    3541 <__ctype_b_loc@plt+0x16c1>
    37d4:	lea    rsi,[rip+0x3a9a]        # 7275 <_obstack_memory_used@@Base+0x685>
    37db:	xor    edi,edi
    37dd:	mov    edx,0x5
    37e2:	call   1b40 <dcgettext@plt>
    37e7:	lea    rcx,[rip+0x4092]        # 7880 <_obstack_memory_used@@Base+0xc90>
    37ee:	lea    rdx,[rip+0x3a97]        # 728c <_obstack_memory_used@@Base+0x69c>
    37f5:	mov    rsi,rax
    37f8:	mov    edi,0x1
    37fd:	xor    eax,eax
    37ff:	call   1d80 <__printf_chk@plt>
    3804:	xor    esi,esi
    3806:	mov    edi,0x5
    380b:	call   1d70 <setlocale@plt>
    3810:	test   rax,rax
    3813:	je     382d <__ctype_b_loc@plt+0x19ad>
    3815:	lea    rsi,[rip+0x3a7e]        # 729a <_obstack_memory_used@@Base+0x6aa>
    381c:	mov    edx,0x3
    3821:	mov    rdi,rax
    3824:	call   1ac0 <strncmp@plt>
    3829:	test   eax,eax
    382b:	jne    3870 <__ctype_b_loc@plt+0x19f0>
    382d:	lea    rsi,[rip+0x40bc]        # 78f0 <_obstack_memory_used@@Base+0xd00>
    3834:	mov    edx,0x5
    3839:	xor    edi,edi
    383b:	lea    r12,[rip+0x39d1]        # 7213 <_obstack_memory_used@@Base+0x623>
    3842:	lea    rbp,[rip+0x39e9]        # 7232 <_obstack_memory_used@@Base+0x642>
    3849:	call   1b40 <dcgettext@plt>
    384e:	lea    rcx,[rip+0x39be]        # 7213 <_obstack_memory_used@@Base+0x623>
    3855:	lea    rdx,[rip+0x4024]        # 7880 <_obstack_memory_used@@Base+0xc90>
    385c:	mov    rsi,rax
    385f:	mov    edi,0x1
    3864:	xor    eax,eax
    3866:	call   1d80 <__printf_chk@plt>
    386b:	jmp    37a7 <__ctype_b_loc@plt+0x1927>
    3870:	lea    r12,[rip+0x399c]        # 7213 <_obstack_memory_used@@Base+0x623>
    3877:	lea    rsi,[rip+0x402a]        # 78a8 <_obstack_memory_used@@Base+0xcb8>
    387e:	xor    edi,edi
    3880:	mov    edx,0x5
    3885:	call   1b40 <dcgettext@plt>
    388a:	lea    rdx,[rip+0x3982]        # 7213 <_obstack_memory_used@@Base+0x623>
    3891:	mov    rsi,rax
    3894:	mov    edi,0x1
    3899:	xor    eax,eax
    389b:	call   1d80 <__printf_chk@plt>
    38a0:	jmp    3762 <__ctype_b_loc@plt+0x18e2>
    38a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
    38af:	nop
    38b0:	push   rbx
    38b1:	mov    rbx,rdi
    38b4:	mov    edi,0x30
    38b9:	call   1e98 <__ctype_b_loc@plt+0x18>
    38be:	test   rax,rax
    38c1:	je     38d2 <__ctype_b_loc@plt+0x1a52>
    38c3:	mov    QWORD PTR [rax],0x0
    38ca:	mov    QWORD PTR [rax+0x20],rbx
    38ce:	mov    QWORD PTR [rax+0x28],rbx
    38d2:	pop    rbx
    38d3:	ret    
    38d4:	xchg   ax,ax
    38d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    38e0:	push   rbx
    38e1:	mov    rbx,rdi
    38e4:	mov    edi,0x30
    38e9:	call   1e98 <__ctype_b_loc@plt+0x18>
    38ee:	test   rax,rax
    38f1:	je     3916 <__ctype_b_loc@plt+0x1a96>
    38f3:	mov    QWORD PTR [rax],rbx
    38f6:	mov    QWORD PTR [rax+0x10],0x0
    38fe:	mov    QWORD PTR [rax+0x18],0x0
    3906:	mov    QWORD PTR [rax+0x8],0x0
    390e:	mov    QWORD PTR [rax+0x20],0x0
    3916:	pop    rbx
    3917:	ret    
    3918:	nop    DWORD PTR [rax+rax*1+0x0]
    3920:	mov    rcx,QWORD PTR [rdi]
    3923:	test   rcx,rcx
    3926:	je     3960 <__ctype_b_loc@plt+0x1ae0>
    3928:	push   rbp
    3929:	push   rbx
    392a:	mov    rbp,rsi
    392d:	mov    rbx,rdi
    3930:	lea    rsi,[rdi+0x18]
    3934:	lea    rdi,[rdi+0x10]
    3938:	sub    rsp,0x8
    393c:	xor    edx,edx
    393e:	call   1e70 <getdelim@plt>
    3943:	test   rax,rax
    3946:	js     3980 <__ctype_b_loc@plt+0x1b00>
    3948:	mov    DWORD PTR [rbp+0x0],0x1
    394f:	add    QWORD PTR [rbx+0x8],0x1
    3954:	mov    rax,QWORD PTR [rbx+0x10]
    3958:	add    rsp,0x8
    395c:	pop    rbx
    395d:	pop    rbp
    395e:	ret    
    395f:	nop
    3960:	mov    rdx,QWORD PTR [rdi+0x28]
    3964:	mov    rax,QWORD PTR [rdx]
    3967:	test   rax,rax
    396a:	je     399a <__ctype_b_loc@plt+0x1b1a>
    396c:	add    rdx,0x8
    3970:	mov    DWORD PTR [rsi],0x1
    3976:	mov    QWORD PTR [rdi+0x28],rdx
    397a:	ret    
    397b:	nop    DWORD PTR [rax+rax*1+0x0]
    3980:	mov    rdi,QWORD PTR [rbx]
    3983:	call   1cb0 <feof@plt>
    3988:	cmp    eax,0x1
    398b:	sbb    eax,eax
    398d:	and    eax,0x2
    3990:	add    eax,0x2
    3993:	mov    DWORD PTR [rbp+0x0],eax
    3996:	xor    eax,eax
    3998:	jmp    3958 <__ctype_b_loc@plt+0x1ad8>
    399a:	mov    DWORD PTR [rsi],0x2
    39a0:	ret    
    39a1:	nop    DWORD PTR [rax+rax*1+0x0]
    39a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    39b0:	cmp    QWORD PTR [rdi],0x0
    39b4:	je     39c0 <__ctype_b_loc@plt+0x1b40>
    39b6:	mov    rax,QWORD PTR [rdi+0x8]
    39ba:	ret    
    39bb:	nop    DWORD PTR [rax+rax*1+0x0]
    39c0:	mov    rax,QWORD PTR [rdi+0x28]
    39c4:	sub    rax,QWORD PTR [rdi+0x20]
    39c8:	sar    rax,0x3
    39cc:	ret    
    39cd:	nop    DWORD PTR [rax]
    39d0:	push   rbx
    39d1:	cmp    QWORD PTR [rdi],0x0
    39d5:	mov    rbx,rdi
    39d8:	je     39e3 <__ctype_b_loc@plt+0x1b63>
    39da:	mov    rdi,QWORD PTR [rdi+0x10]
    39de:	call   1e90 <__ctype_b_loc@plt+0x10>
    39e3:	mov    rdi,rbx
    39e6:	pop    rbx
    39e7:	jmp    1e90 <__ctype_b_loc@plt+0x10>
    39ec:	nop    DWORD PTR [rax+0x0]
    39f0:	mov    QWORD PTR [rip+0x206961],rdi        # 20a358 <stderr@@GLIBC_2.2.5+0x58>
    39f7:	ret    
    39f8:	nop    DWORD PTR [rax+rax*1+0x0]
    3a00:	mov    BYTE PTR [rip+0x206949],dil        # 20a350 <stderr@@GLIBC_2.2.5+0x50>
    3a07:	ret    
    3a08:	nop    DWORD PTR [rax+rax*1+0x0]
    3a10:	push   rbp
    3a11:	push   rbx
    3a12:	sub    rsp,0x8
    3a16:	mov    rdi,QWORD PTR [rip+0x2068ab]        # 20a2c8 <stdout@@GLIBC_2.2.5>
    3a1d:	call   6c20 <_obstack_memory_used@@Base+0x30>
    3a22:	test   eax,eax
    3a24:	je     3a39 <__ctype_b_loc@plt+0x1bb9>
    3a26:	cmp    BYTE PTR [rip+0x206923],0x0        # 20a350 <stderr@@GLIBC_2.2.5+0x50>
    3a2d:	je     3a50 <__ctype_b_loc@plt+0x1bd0>
    3a2f:	call   1ab0 <__errno_location@plt>
    3a34:	cmp    DWORD PTR [rax],0x20
    3a37:	jne    3a50 <__ctype_b_loc@plt+0x1bd0>
    3a39:	mov    rdi,QWORD PTR [rip+0x2068c0]        # 20a300 <stderr@@GLIBC_2.2.5>
    3a40:	call   6c20 <_obstack_memory_used@@Base+0x30>
    3a45:	test   eax,eax
    3a47:	jne    3a97 <__ctype_b_loc@plt+0x1c17>
    3a49:	add    rsp,0x8
    3a4d:	pop    rbx
    3a4e:	pop    rbp
    3a4f:	ret    
    3a50:	lea    rsi,[rip+0x3fc6]        # 7a1d <_obstack_memory_used@@Base+0xe2d>
    3a57:	xor    edi,edi
    3a59:	mov    edx,0x5
    3a5e:	call   1b40 <dcgettext@plt>
    3a63:	mov    rdi,QWORD PTR [rip+0x2068ee]        # 20a358 <stderr@@GLIBC_2.2.5+0x58>
    3a6a:	mov    rbx,rax
    3a6d:	test   rdi,rdi
    3a70:	je     3aa2 <__ctype_b_loc@plt+0x1c22>
    3a72:	call   58c0 <__ctype_b_loc@plt+0x3a40>
    3a77:	mov    rbp,rax
    3a7a:	call   1ab0 <__errno_location@plt>
    3a7f:	mov    esi,DWORD PTR [rax]
    3a81:	lea    rdx,[rip+0x3fa1]        # 7a29 <_obstack_memory_used@@Base+0xe39>
    3a88:	mov    r8,rbx
    3a8b:	mov    rcx,rbp
    3a8e:	xor    edi,edi
    3a90:	xor    eax,eax
    3a92:	call   1db0 <error@plt>
    3a97:	mov    edi,DWORD PTR [rip+0x20679b]        # 20a238 <_obstack_memory_used@@Base+0x203648>
    3a9d:	call   1ad0 <_exit@plt>
    3aa2:	call   1ab0 <__errno_location@plt>
    3aa7:	mov    esi,DWORD PTR [rax]
    3aa9:	lea    rdx,[rip+0x3f7d]        # 7a2d <_obstack_memory_used@@Base+0xe3d>
    3ab0:	mov    rcx,rbx
    3ab3:	xor    edi,edi
    3ab5:	xor    eax,eax
    3ab7:	call   1db0 <error@plt>
    3abc:	jmp    3a97 <__ctype_b_loc@plt+0x1c17>
    3abe:	xchg   ax,ax
    3ac0:	jmp    1c30 <posix_fadvise@plt>
    3ac5:	nop
    3ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3ad0:	test   rdi,rdi
    3ad3:	je     3af0 <__ctype_b_loc@plt+0x1c70>
    3ad5:	push   rbx
    3ad6:	mov    ebx,esi
    3ad8:	call   1cd0 <fileno@plt>
    3add:	mov    ecx,ebx
    3adf:	xor    edx,edx
    3ae1:	xor    esi,esi
    3ae3:	pop    rbx
    3ae4:	mov    edi,eax
    3ae6:	jmp    1c30 <posix_fadvise@plt>
    3aeb:	nop    DWORD PTR [rax+rax*1+0x0]
    3af0:	repz ret 
    3af2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3afc:	nop    DWORD PTR [rax+0x0]
    3b00:	lea    rcx,[rsi+0x14]
    3b04:	mov    BYTE PTR [rsi+0x14],0x0
    3b08:	movabs rsi,0xcccccccccccccccd
    3b12:	nop    WORD PTR [rax+rax*1+0x0]
    3b18:	mov    rax,rdi
    3b1b:	sub    rcx,0x1
    3b1f:	mul    rsi
    3b22:	shr    rdx,0x3
    3b26:	lea    rax,[rdx+rdx*4]
    3b2a:	add    rax,rax
    3b2d:	sub    rdi,rax
    3b30:	add    edi,0x30
    3b33:	test   rdx,rdx
    3b36:	mov    BYTE PTR [rcx],dil
    3b39:	mov    rdi,rdx
    3b3c:	jne    3b18 <__ctype_b_loc@plt+0x1c98>
    3b3e:	mov    rax,rcx
    3b41:	ret    
    3b42:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3b4c:	nop    DWORD PTR [rax+0x0]
    3b50:	push   rbx
    3b51:	mov    ebx,edi
    3b53:	call   1cf0 <wcwidth@plt>
    3b58:	test   eax,eax
    3b5a:	js     3b60 <__ctype_b_loc@plt+0x1ce0>
    3b5c:	pop    rbx
    3b5d:	ret    
    3b5e:	xchg   ax,ax
    3b60:	mov    edi,ebx
    3b62:	call   1b00 <iswcntrl@plt>
    3b67:	test   eax,eax
    3b69:	sete   al
    3b6c:	movzx  eax,al
    3b6f:	pop    rbx
    3b70:	ret    
    3b71:	nop    DWORD PTR [rax+rax*1+0x0]
    3b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3b80:	push   rbp
    3b81:	push   rbx
    3b82:	mov    rbx,rsi
    3b85:	lea    rax,[rbx+0x18]
    3b89:	mov    rbp,rdi
    3b8c:	sub    rsp,0x8
    3b90:	mov    rsi,QWORD PTR [rsi]
    3b93:	cmp    rsi,rax
    3b96:	je     3bc0 <__ctype_b_loc@plt+0x1d40>
    3b98:	mov    QWORD PTR [rdi],rsi
    3b9b:	mov    rax,QWORD PTR [rbx+0x8]
    3b9f:	mov    QWORD PTR [rbp+0x8],rax
    3ba3:	movzx  eax,BYTE PTR [rbx+0x10]
    3ba7:	test   al,al
    3ba9:	mov    BYTE PTR [rbp+0x10],al
    3bac:	je     3bb4 <__ctype_b_loc@plt+0x1d34>
    3bae:	mov    eax,DWORD PTR [rbx+0x14]
    3bb1:	mov    DWORD PTR [rbp+0x14],eax
    3bb4:	add    rsp,0x8
    3bb8:	pop    rbx
    3bb9:	pop    rbp
    3bba:	ret    
    3bbb:	nop    DWORD PTR [rax+rax*1+0x0]
    3bc0:	lea    rcx,[rdi+0x18]
    3bc4:	mov    rdx,QWORD PTR [rbx+0x8]
    3bc8:	mov    rdi,rcx
    3bcb:	call   1cc0 <memcpy@plt>
    3bd0:	mov    QWORD PTR [rbp+0x0],rax
    3bd4:	jmp    3b9b <__ctype_b_loc@plt+0x1d1b>
    3bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    3be0:	mov    eax,edi
    3be2:	lea    rdx,[rip+0x3e57]        # 7a40 <_obstack_memory_used@@Base+0xe50>
    3be9:	mov    ecx,edi
    3beb:	shr    al,0x5
    3bee:	and    ecx,0x1f
    3bf1:	and    eax,0x7
    3bf4:	mov    eax,DWORD PTR [rdx+rax*4]
    3bf7:	shr    eax,cl
    3bf9:	and    eax,0x1
    3bfc:	ret    
    3bfd:	nop    DWORD PTR [rax]
    3c00:	sub    rsp,0x98
    3c07:	mov    edi,0x55
    3c0c:	mov    rax,QWORD PTR fs:0x28
    3c15:	mov    QWORD PTR [rsp+0x88],rax
    3c1d:	xor    eax,eax
    3c1f:	call   1df0 <sysconf@plt>
    3c24:	pxor   xmm0,xmm0
    3c28:	mov    edi,0x1e
    3c2d:	cvtsi2sd xmm0,rax
    3c32:	movsd  QWORD PTR [rsp+0x8],xmm0
    3c38:	call   1df0 <sysconf@plt>
    3c3d:	pxor   xmm2,xmm2
    3c41:	movsd  xmm0,QWORD PTR [rsp+0x8]
    3c47:	pxor   xmm1,xmm1
    3c4b:	ucomisd xmm0,xmm2
    3c4f:	cvtsi2sd xmm1,rax
    3c54:	jb     3c80 <__ctype_b_loc@plt+0x1e00>
    3c56:	ucomisd xmm1,xmm2
    3c5a:	jb     3c80 <__ctype_b_loc@plt+0x1e00>
    3c5c:	mulsd  xmm0,xmm1
    3c60:	mov    rax,QWORD PTR [rsp+0x88]
    3c68:	xor    rax,QWORD PTR fs:0x28
    3c71:	jne    3cdb <__ctype_b_loc@plt+0x1e5b>
    3c73:	add    rsp,0x98
    3c7a:	ret    
    3c7b:	nop    DWORD PTR [rax+rax*1+0x0]
    3c80:	lea    rdi,[rsp+0x10]
    3c85:	call   1e10 <sysinfo@plt>
    3c8a:	test   eax,eax
    3c8c:	movsd  xmm0,QWORD PTR [rip+0x3dcc]        # 7a60 <_obstack_memory_used@@Base+0xe70>
    3c94:	jne    3c60 <__ctype_b_loc@plt+0x1de0>
    3c96:	mov    rax,QWORD PTR [rsp+0x30]
    3c9b:	test   rax,rax
    3c9e:	js     3cc0 <__ctype_b_loc@plt+0x1e40>
    3ca0:	pxor   xmm0,xmm0
    3ca4:	cvtsi2sd xmm0,rax
    3ca9:	mov    eax,DWORD PTR [rsp+0x78]
    3cad:	pxor   xmm1,xmm1
    3cb1:	cvtsi2sd xmm1,rax
    3cb6:	jmp    3c5c <__ctype_b_loc@plt+0x1ddc>
    3cb8:	nop    DWORD PTR [rax+rax*1+0x0]
    3cc0:	mov    rdx,rax
    3cc3:	pxor   xmm0,xmm0
    3cc7:	shr    rdx,1
    3cca:	and    eax,0x1
    3ccd:	or     rdx,rax
    3cd0:	cvtsi2sd xmm0,rdx
    3cd5:	addsd  xmm0,xmm0
    3cd9:	jmp    3ca9 <__ctype_b_loc@plt+0x1e29>
    3cdb:	call   1b70 <__stack_chk_fail@plt>
    3ce0:	sub    rsp,0x98
    3ce7:	mov    edi,0x56
    3cec:	mov    rax,QWORD PTR fs:0x28
    3cf5:	mov    QWORD PTR [rsp+0x88],rax
    3cfd:	xor    eax,eax
    3cff:	call   1df0 <sysconf@plt>
    3d04:	pxor   xmm0,xmm0
    3d08:	mov    edi,0x1e
    3d0d:	cvtsi2sd xmm0,rax
    3d12:	movsd  QWORD PTR [rsp+0x8],xmm0
    3d18:	call   1df0 <sysconf@plt>
    3d1d:	pxor   xmm2,xmm2
    3d21:	movsd  xmm0,QWORD PTR [rsp+0x8]
    3d27:	pxor   xmm1,xmm1
    3d2b:	ucomisd xmm0,xmm2
    3d2f:	cvtsi2sd xmm1,rax
    3d34:	jb     3d60 <__ctype_b_loc@plt+0x1ee0>
    3d36:	ucomisd xmm1,xmm2
    3d3a:	jb     3d60 <__ctype_b_loc@plt+0x1ee0>
    3d3c:	mulsd  xmm0,xmm1
    3d40:	mov    rax,QWORD PTR [rsp+0x88]
    3d48:	xor    rax,QWORD PTR fs:0x28
    3d51:	jne    3dfb <__ctype_b_loc@plt+0x1f7b>
    3d57:	add    rsp,0x98
    3d5e:	ret    
    3d5f:	nop
    3d60:	lea    rdi,[rsp+0x10]
    3d65:	call   1e10 <sysinfo@plt>
    3d6a:	test   eax,eax
    3d6c:	jne    3db0 <__ctype_b_loc@plt+0x1f30>
    3d6e:	mov    rax,QWORD PTR [rsp+0x38]
    3d73:	test   rax,rax
    3d76:	js     3de0 <__ctype_b_loc@plt+0x1f60>
    3d78:	pxor   xmm0,xmm0
    3d7c:	cvtsi2sd xmm0,rax
    3d81:	mov    rax,QWORD PTR [rsp+0x48]
    3d86:	test   rax,rax
    3d89:	js     3dc0 <__ctype_b_loc@plt+0x1f40>
    3d8b:	pxor   xmm1,xmm1
    3d8f:	cvtsi2sd xmm1,rax
    3d94:	mov    eax,DWORD PTR [rsp+0x78]
    3d98:	addsd  xmm0,xmm1
    3d9c:	pxor   xmm1,xmm1
    3da0:	cvtsi2sd xmm1,rax
    3da5:	jmp    3d3c <__ctype_b_loc@plt+0x1ebc>
    3da7:	nop    WORD PTR [rax+rax*1+0x0]
    3db0:	call   3c00 <__ctype_b_loc@plt+0x1d80>
    3db5:	mulsd  xmm0,QWORD PTR [rip+0x3cab]        # 7a68 <_obstack_memory_used@@Base+0xe78>
    3dbd:	jmp    3d40 <__ctype_b_loc@plt+0x1ec0>
    3dbf:	nop
    3dc0:	mov    rdx,rax
    3dc3:	pxor   xmm1,xmm1
    3dc7:	shr    rdx,1
    3dca:	and    eax,0x1
    3dcd:	or     rdx,rax
    3dd0:	cvtsi2sd xmm1,rdx
    3dd5:	addsd  xmm1,xmm1
    3dd9:	jmp    3d94 <__ctype_b_loc@plt+0x1f14>
    3ddb:	nop    DWORD PTR [rax+rax*1+0x0]
    3de0:	mov    rdx,rax
    3de3:	pxor   xmm0,xmm0
    3de7:	shr    rdx,1
    3dea:	and    eax,0x1
    3ded:	or     rdx,rax
    3df0:	cvtsi2sd xmm0,rdx
    3df5:	addsd  xmm0,xmm0
    3df9:	jmp    3d81 <__ctype_b_loc@plt+0x1f01>
    3dfb:	call   1b70 <__stack_chk_fail@plt>
    3e00:	test   rdi,rdi
    3e03:	push   rbx
    3e04:	je     3e77 <__ctype_b_loc@plt+0x1ff7>
    3e06:	mov    esi,0x2f
    3e0b:	mov    rbx,rdi
    3e0e:	call   1bc0 <strrchr@plt>
    3e13:	test   rax,rax
    3e16:	je     3e67 <__ctype_b_loc@plt+0x1fe7>
    3e18:	lea    rdx,[rax+0x1]
    3e1c:	mov    rcx,rdx
    3e1f:	sub    rcx,rbx
    3e22:	cmp    rcx,0x6
    3e26:	jle    3e67 <__ctype_b_loc@plt+0x1fe7>
    3e28:	lea    rsi,[rax-0x6]
    3e2c:	lea    rdi,[rip+0x3c75]        # 7aa8 <_obstack_memory_used@@Base+0xeb8>
    3e33:	mov    ecx,0x7
    3e38:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3e3a:	jne    3e67 <__ctype_b_loc@plt+0x1fe7>
    3e3c:	lea    rdi,[rip+0x3c6d]        # 7ab0 <_obstack_memory_used@@Base+0xec0>
    3e43:	mov    ecx,0x3
    3e48:	mov    rsi,rdx
    3e4b:	mov    rbx,rdx
    3e4e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3e50:	seta   sil
    3e54:	setb   cl
    3e57:	cmp    sil,cl
    3e5a:	jne    3e67 <__ctype_b_loc@plt+0x1fe7>
    3e5c:	lea    rbx,[rax+0x4]
    3e60:	mov    QWORD PTR [rip+0x206459],rbx        # 20a2c0 <__progname@@GLIBC_2.2.5>
    3e67:	mov    QWORD PTR [rip+0x2064f2],rbx        # 20a360 <stderr@@GLIBC_2.2.5+0x60>
    3e6e:	mov    QWORD PTR [rip+0x206473],rbx        # 20a2e8 <__progname_full@@GLIBC_2.2.5>
    3e75:	pop    rbx
    3e76:	ret    
    3e77:	mov    rcx,QWORD PTR [rip+0x206482]        # 20a300 <stderr@@GLIBC_2.2.5>
    3e7e:	lea    rdi,[rip+0x3beb]        # 7a70 <_obstack_memory_used@@Base+0xe80>
    3e85:	mov    edx,0x37
    3e8a:	mov    esi,0x1
    3e8f:	call   1e30 <fwrite@plt>
    3e94:	call   1aa0 <abort@plt>
    3e99:	nop    DWORD PTR [rax+0x0]
    3ea0:	push   rbp
    3ea1:	push   rbx
    3ea2:	mov    ebp,esi
    3ea4:	mov    rbx,rdi
    3ea7:	sub    rsp,0x8
    3eab:	call   6d00 <_obstack_memory_used@@Base+0x110>
    3eb0:	movzx  edx,BYTE PTR [rax]
    3eb3:	and    edx,0xffffffdf
    3eb6:	cmp    dl,0x55
    3eb9:	jne    3f08 <__ctype_b_loc@plt+0x2088>
    3ebb:	movzx  edx,BYTE PTR [rax+0x1]
    3ebf:	and    edx,0xffffffdf
    3ec2:	cmp    dl,0x54
    3ec5:	jne    3f19 <__ctype_b_loc@plt+0x2099>
    3ec7:	movzx  edx,BYTE PTR [rax+0x2]
    3ecb:	and    edx,0xffffffdf
    3ece:	cmp    dl,0x46
    3ed1:	jne    3f19 <__ctype_b_loc@plt+0x2099>
    3ed3:	cmp    BYTE PTR [rax+0x3],0x2d
    3ed7:	jne    3f19 <__ctype_b_loc@plt+0x2099>
    3ed9:	cmp    BYTE PTR [rax+0x4],0x38
    3edd:	jne    3f19 <__ctype_b_loc@plt+0x2099>
    3edf:	cmp    BYTE PTR [rax+0x5],0x0
    3ee3:	jne    3f19 <__ctype_b_loc@plt+0x2099>
    3ee5:	cmp    BYTE PTR [rbx],0x60
    3ee8:	lea    rdx,[rip+0x3bc9]        # 7ab8 <_obstack_memory_used@@Base+0xec8>
    3eef:	lea    rax,[rip+0x3bbe]        # 7ab4 <_obstack_memory_used@@Base+0xec4>
    3ef6:	cmovne rax,rdx
    3efa:	add    rsp,0x8
    3efe:	pop    rbx
    3eff:	pop    rbp
    3f00:	ret    
    3f01:	nop    DWORD PTR [rax+0x0]
    3f08:	cmp    dl,0x47
    3f0b:	jne    3f19 <__ctype_b_loc@plt+0x2099>
    3f0d:	movzx  edx,BYTE PTR [rax+0x1]
    3f11:	and    edx,0xffffffdf
    3f14:	cmp    dl,0x42
    3f17:	je     3f38 <__ctype_b_loc@plt+0x20b8>
    3f19:	lea    rdx,[rip+0x3ba5]        # 7ac5 <_obstack_memory_used@@Base+0xed5>
    3f20:	lea    rax,[rip+0x3b9c]        # 7ac3 <_obstack_memory_used@@Base+0xed3>
    3f27:	cmp    ebp,0x9
    3f2a:	cmovne rax,rdx
    3f2e:	add    rsp,0x8
    3f32:	pop    rbx
    3f33:	pop    rbp
    3f34:	ret    
    3f35:	nop    DWORD PTR [rax]
    3f38:	cmp    BYTE PTR [rax+0x2],0x31
    3f3c:	jne    3f19 <__ctype_b_loc@plt+0x2099>
    3f3e:	cmp    BYTE PTR [rax+0x3],0x38
    3f42:	jne    3f19 <__ctype_b_loc@plt+0x2099>
    3f44:	cmp    BYTE PTR [rax+0x4],0x30
    3f48:	jne    3f19 <__ctype_b_loc@plt+0x2099>
    3f4a:	cmp    BYTE PTR [rax+0x5],0x33
    3f4e:	jne    3f19 <__ctype_b_loc@plt+0x2099>
    3f50:	cmp    BYTE PTR [rax+0x6],0x30
    3f54:	jne    3f19 <__ctype_b_loc@plt+0x2099>
    3f56:	cmp    BYTE PTR [rax+0x7],0x0
    3f5a:	jne    3f19 <__ctype_b_loc@plt+0x2099>
    3f5c:	cmp    BYTE PTR [rbx],0x60
    3f5f:	lea    rdx,[rip+0x3b5a]        # 7ac0 <_obstack_memory_used@@Base+0xed0>
    3f66:	lea    rax,[rip+0x3b4f]        # 7abc <_obstack_memory_used@@Base+0xecc>
    3f6d:	cmovne rax,rdx
    3f71:	add    rsp,0x8
    3f75:	pop    rbx
    3f76:	pop    rbp
    3f77:	ret    
    3f78:	nop    DWORD PTR [rax+rax*1+0x0]
    3f80:	push   r15
    3f82:	push   r14
    3f84:	push   r13
    3f86:	push   r12
    3f88:	push   rbp
    3f89:	push   rbx
    3f8a:	mov    ebx,r9d
    3f8d:	mov    rbp,rcx
    3f90:	sub    rsp,0xb8
    3f97:	mov    rax,QWORD PTR [rsp+0xf0]
    3f9f:	mov    DWORD PTR [rsp+0x80],r9d
    3fa7:	mov    QWORD PTR [rsp+0x38],rdi
    3fac:	mov    QWORD PTR [rsp+0x28],rsi
    3fb1:	mov    QWORD PTR [rsp+0x18],rdx
    3fb6:	mov    DWORD PTR [rsp+0x8],r8d
    3fbb:	mov    QWORD PTR [rsp+0x20],rax
    3fc0:	mov    rax,QWORD PTR [rsp+0xf8]
    3fc8:	mov    QWORD PTR [rsp+0x60],rax
    3fcd:	mov    rax,QWORD PTR [rsp+0x100]
    3fd5:	mov    QWORD PTR [rsp+0x58],rax
    3fda:	mov    rax,QWORD PTR fs:0x28
    3fe3:	mov    QWORD PTR [rsp+0xa8],rax
    3feb:	xor    eax,eax
    3fed:	call   1b50 <__ctype_get_mb_cur_max@plt>
    3ff2:	mov    QWORD PTR [rsp+0x68],rax
    3ff7:	mov    eax,ebx
    3ff9:	mov    r11,QWORD PTR [rsp+0x38]
    3ffe:	shr    eax,1
    4000:	mov    r10,QWORD PTR [rsp+0x28]
    4005:	xor    r9d,r9d
    4008:	and    eax,0x1
    400b:	mov    BYTE PTR [rsp+0xe],0x1
    4010:	mov    BYTE PTR [rsp+0x85],0x0
    4018:	mov    BYTE PTR [rsp+0xd],al
    401c:	mov    eax,DWORD PTR [rsp+0x8]
    4020:	mov    r13,r11
    4023:	mov    BYTE PTR [rsp],0x0
    4027:	mov    QWORD PTR [rsp+0x10],0x0
    4030:	mov    r11,r10
    4033:	mov    QWORD PTR [rsp+0x30],0x0
    403c:	mov    QWORD PTR [rsp+0x70],0x0
    4045:	cmp    eax,0xa
    4048:	mov    BYTE PTR [rsp+0xf],r9b
    404d:	ja     44bf <__ctype_b_loc@plt+0x263f>
    4053:	lea    rcx,[rip+0x3ac6]        # 7b20 <_obstack_memory_used@@Base+0xf30>
    405a:	mov    edx,eax
    405c:	movsxd rax,DWORD PTR [rcx+rdx*4]
    4060:	add    rax,rcx
    4063:	jmp    rax
    4065:	mov    BYTE PTR [rsp+0xd],0x0
    406a:	xor    r9d,r9d
    406d:	nop    DWORD PTR [rax]
    4070:	lea    rax,[rsp+0xa0]
    4078:	xor    r15d,r15d
    407b:	mov    rbx,r9
    407e:	mov    r12,r11
    4081:	mov    r10,rbp
    4084:	mov    QWORD PTR [rsp+0x28],rax
    4089:	cmp    r10,r15
    408c:	setne  r14b
    4090:	cmp    r10,0xffffffffffffffff
    4094:	je     442a <__ctype_b_loc@plt+0x25aa>
    409a:	nop    WORD PTR [rax+rax*1+0x0]
    40a0:	test   r14b,r14b
    40a3:	je     4441 <__ctype_b_loc@plt+0x25c1>
    40a9:	cmp    DWORD PTR [rsp+0x8],0x2
    40ae:	setne  cl
    40b1:	and    cl,BYTE PTR [rsp]
    40b4:	cmp    QWORD PTR [rsp+0x10],0x0
    40ba:	setne  r9b
    40be:	mov    r11d,r9d
    40c1:	and    r11b,cl
    40c4:	je     4918 <__ctype_b_loc@plt+0x2a98>
    40ca:	mov    rax,QWORD PTR [rsp+0x10]
    40cf:	cmp    r10,0xffffffffffffffff
    40d3:	lea    rbp,[r15+rax*1]
    40d7:	jne    410b <__ctype_b_loc@plt+0x228b>
    40d9:	cmp    rax,0x1
    40dd:	jbe    410b <__ctype_b_loc@plt+0x228b>
    40df:	mov    rdi,QWORD PTR [rsp+0x18]
    40e4:	mov    BYTE PTR [rsp+0x48],cl
    40e8:	mov    BYTE PTR [rsp+0x40],r11b
    40ed:	mov    BYTE PTR [rsp+0x38],r9b
    40f2:	call   1b60 <strlen@plt>
    40f7:	movzx  ecx,BYTE PTR [rsp+0x48]
    40fc:	movzx  r11d,BYTE PTR [rsp+0x40]
    4102:	mov    r10,rax
    4105:	movzx  r9d,BYTE PTR [rsp+0x38]
    410b:	cmp    r10,rbp
    410e:	jb     4918 <__ctype_b_loc@plt+0x2a98>
    4114:	mov    rax,QWORD PTR [rsp+0x18]
    4119:	mov    rdx,QWORD PTR [rsp+0x10]
    411e:	mov    rsi,QWORD PTR [rsp+0x30]
    4123:	mov    BYTE PTR [rsp+0x50],cl
    4127:	mov    QWORD PTR [rsp+0x48],r10
    412c:	mov    BYTE PTR [rsp+0x40],r9b
    4131:	lea    r8,[rax+r15*1]
    4135:	mov    BYTE PTR [rsp+0x84],r11b
    413d:	mov    rdi,r8
    4140:	mov    QWORD PTR [rsp+0x38],r8
    4145:	call   1c60 <memcmp@plt>
    414a:	test   eax,eax
    414c:	mov    r8,QWORD PTR [rsp+0x38]
    4151:	movzx  r9d,BYTE PTR [rsp+0x40]
    4157:	mov    r10,QWORD PTR [rsp+0x48]
    415c:	movzx  ecx,BYTE PTR [rsp+0x50]
    4161:	jne    4921 <__ctype_b_loc@plt+0x2aa1>
    4167:	cmp    BYTE PTR [rsp+0xd],0x0
    416c:	movzx  r11d,BYTE PTR [rsp+0x84]
    4175:	jne    4f56 <__ctype_b_loc@plt+0x30d6>
    417b:	movzx  ebp,BYTE PTR [r8]
    417f:	cmp    bpl,0x7e
    4183:	ja     48bb <__ctype_b_loc@plt+0x2a3b>
    4189:	lea    rsi,[rip+0x39bc]        # 7b4c <_obstack_memory_used@@Base+0xf5c>
    4190:	movzx  edx,bpl
    4194:	movsxd rax,DWORD PTR [rsi+rdx*4]
    4198:	add    rax,rsi
    419b:	jmp    rax
    419d:	mov    BYTE PTR [rsp+0xd],0x1
    41a2:	lea    rax,[rip+0x391c]        # 7ac5 <_obstack_memory_used@@Base+0xed5>
    41a9:	mov    QWORD PTR [rsp+0x10],0x1
    41b2:	xor    r9d,r9d
    41b5:	mov    DWORD PTR [rsp+0x8],0x2
    41bd:	mov    QWORD PTR [rsp+0x30],rax
    41c2:	jmp    4070 <__ctype_b_loc@plt+0x21f0>
    41c7:	mov    BYTE PTR [rsp+0xd],0x1
    41cc:	mov    BYTE PTR [rsp],0x1
    41d0:	jmp    41a2 <__ctype_b_loc@plt+0x2322>
    41d2:	lea    rax,[rip+0x38ea]        # 7ac3 <_obstack_memory_used@@Base+0xed3>
    41d9:	mov    BYTE PTR [rsp+0xd],0x1
    41de:	mov    BYTE PTR [rsp],0x1
    41e2:	mov    QWORD PTR [rsp+0x10],0x1
    41eb:	xor    r9d,r9d
    41ee:	mov    DWORD PTR [rsp+0x8],0x5
    41f6:	mov    QWORD PTR [rsp+0x30],rax
    41fb:	jmp    4070 <__ctype_b_loc@plt+0x21f0>
    4200:	mov    BYTE PTR [rsp+0xd],0x0
    4205:	mov    BYTE PTR [rsp],0x1
    4209:	xor    r9d,r9d
    420c:	jmp    4070 <__ctype_b_loc@plt+0x21f0>
    4211:	cmp    DWORD PTR [rsp+0x8],0xa
    4216:	je     427e <__ctype_b_loc@plt+0x23fe>
    4218:	lea    rsi,[rip+0x38a8]        # 7ac7 <_obstack_memory_used@@Base+0xed7>
    421f:	xor    edi,edi
    4221:	mov    edx,0x5
    4226:	mov    QWORD PTR [rsp],r11
    422a:	call   1b40 <dcgettext@plt>
    422f:	mov    rsi,rax
    4232:	mov    QWORD PTR [rsp+0x60],rax
    4237:	lea    rax,[rip+0x3889]        # 7ac7 <_obstack_memory_used@@Base+0xed7>
    423e:	mov    r11,QWORD PTR [rsp]
    4242:	cmp    rsi,rax
    4245:	je     5063 <__ctype_b_loc@plt+0x31e3>
    424b:	lea    rsi,[rip+0x3873]        # 7ac5 <_obstack_memory_used@@Base+0xed5>
    4252:	xor    edi,edi
    4254:	mov    edx,0x5
    4259:	mov    QWORD PTR [rsp],r11
    425d:	call   1b40 <dcgettext@plt>
    4262:	mov    rsi,rax
    4265:	mov    QWORD PTR [rsp+0x58],rax
    426a:	lea    rax,[rip+0x3854]        # 7ac5 <_obstack_memory_used@@Base+0xed5>
    4271:	mov    r11,QWORD PTR [rsp]
    4275:	cmp    rsi,rax
    4278:	je     5047 <__ctype_b_loc@plt+0x31c7>
    427e:	xor    r9d,r9d
    4281:	cmp    BYTE PTR [rsp+0xd],0x0
    4286:	jne    42af <__ctype_b_loc@plt+0x242f>
    4288:	mov    rdx,QWORD PTR [rsp+0x60]
    428d:	movzx  eax,BYTE PTR [rdx]
    4290:	test   al,al
    4292:	je     42af <__ctype_b_loc@plt+0x242f>
    4294:	nop    DWORD PTR [rax+0x0]
    4298:	cmp    r11,r9
    429b:	jbe    42a2 <__ctype_b_loc@plt+0x2422>
    429d:	mov    BYTE PTR [r13+r9*1+0x0],al
    42a2:	add    r9,0x1
    42a6:	movzx  eax,BYTE PTR [rdx+r9*1]
    42ab:	test   al,al
    42ad:	jne    4298 <__ctype_b_loc@plt+0x2418>
    42af:	mov    rbx,QWORD PTR [rsp+0x58]
    42b4:	mov    QWORD PTR [rsp+0x38],r9
    42b9:	mov    QWORD PTR [rsp+0x28],r11
    42be:	mov    rdi,rbx
    42c1:	call   1b60 <strlen@plt>
    42c6:	mov    QWORD PTR [rsp+0x30],rbx
    42cb:	mov    QWORD PTR [rsp+0x10],rax
    42d0:	mov    BYTE PTR [rsp],0x1
    42d4:	mov    r11,QWORD PTR [rsp+0x28]
    42d9:	mov    r9,QWORD PTR [rsp+0x38]
    42de:	jmp    4070 <__ctype_b_loc@plt+0x21f0>
    42e3:	cmp    BYTE PTR [rsp+0xd],0x0
    42e8:	jne    41a2 <__ctype_b_loc@plt+0x2322>
    42ee:	mov    BYTE PTR [rsp],0x1
    42f2:	test   r11,r11
    42f5:	je     42fc <__ctype_b_loc@plt+0x247c>
    42f7:	mov    BYTE PTR [r13+0x0],0x27
    42fc:	lea    rax,[rip+0x37c2]        # 7ac5 <_obstack_memory_used@@Base+0xed5>
    4303:	mov    BYTE PTR [rsp+0xd],0x0
    4308:	mov    QWORD PTR [rsp+0x10],0x1
    4311:	mov    r9d,0x1
    4317:	mov    DWORD PTR [rsp+0x8],0x2
    431f:	mov    QWORD PTR [rsp+0x30],rax
    4324:	jmp    4070 <__ctype_b_loc@plt+0x21f0>
    4329:	cmp    BYTE PTR [rsp+0xd],0x0
    432e:	je     4dc6 <__ctype_b_loc@plt+0x2f46>
    4334:	movzx  eax,BYTE PTR [rsp+0xd]
    4339:	mov    QWORD PTR [rsp+0x10],0x1
    4342:	xor    r9d,r9d
    4345:	mov    BYTE PTR [rsp],al
    4348:	lea    rax,[rip+0x3774]        # 7ac3 <_obstack_memory_used@@Base+0xed3>
    434f:	mov    QWORD PTR [rsp+0x30],rax
    4354:	jmp    4070 <__ctype_b_loc@plt+0x21f0>
    4359:	cmp    BYTE PTR [rsp+0xd],0x0
    435e:	je     42f2 <__ctype_b_loc@plt+0x2472>
    4360:	lea    rax,[rip+0x375e]        # 7ac5 <_obstack_memory_used@@Base+0xed5>
    4367:	mov    QWORD PTR [rsp+0x10],0x1
    4370:	xor    r9d,r9d
    4373:	mov    QWORD PTR [rsp+0x30],rax
    4378:	jmp    4070 <__ctype_b_loc@plt+0x21f0>
    437d:	nop    DWORD PTR [rax]
    4380:	xor    r11d,r11d
    4383:	test   r15,r15
    4386:	je     4590 <__ctype_b_loc@plt+0x2710>
    438c:	cmp    DWORD PTR [rsp+0x8],0x2
    4391:	sete   al
    4394:	xor    r14d,r14d
    4397:	xor    ecx,ecx
    4399:	movzx  edx,BYTE PTR [rsp]
    439d:	xor    edx,0x1
    43a0:	or     edx,eax
    43a2:	cmp    dl,0x1
    43a5:	jne    44f0 <__ctype_b_loc@plt+0x2670>
    43ab:	cmp    BYTE PTR [rsp+0xd],0x0
    43b0:	jne    44f0 <__ctype_b_loc@plt+0x2670>
    43b6:	test   r11b,r11b
    43b9:	jne    4671 <__ctype_b_loc@plt+0x27f1>
    43bf:	xor    ecx,0x1
    43c2:	add    r15,0x1
    43c6:	mov    r11d,ecx
    43c9:	and    r11b,BYTE PTR [rsp+0xf]
    43ce:	test   r11b,r11b
    43d1:	je     43f6 <__ctype_b_loc@plt+0x2576>
    43d3:	cmp    r12,rbx
    43d6:	jbe    43de <__ctype_b_loc@plt+0x255e>
    43d8:	mov    BYTE PTR [r13+rbx*1+0x0],0x27
    43de:	lea    rax,[rbx+0x1]
    43e2:	cmp    r12,rax
    43e5:	jbe    43ed <__ctype_b_loc@plt+0x256d>
    43e7:	mov    BYTE PTR [r13+rbx*1+0x1],0x27
    43ed:	add    rbx,0x2
    43f1:	mov    BYTE PTR [rsp+0xf],0x0
    43f6:	cmp    rbx,r12
    43f9:	jae    4400 <__ctype_b_loc@plt+0x2580>
    43fb:	mov    BYTE PTR [r13+rbx*1+0x0],bpl
    4400:	movzx  edi,BYTE PTR [rsp+0xe]
    4405:	add    rbx,0x1
    4409:	mov    eax,0x0
    440e:	test   r14b,r14b
    4411:	cmove  edi,eax
    4414:	cmp    r10,r15
    4417:	setne  r14b
    441b:	cmp    r10,0xffffffffffffffff
    441f:	mov    BYTE PTR [rsp+0xe],dil
    4424:	jne    40a0 <__ctype_b_loc@plt+0x2220>
    442a:	mov    rax,QWORD PTR [rsp+0x18]
    442f:	cmp    BYTE PTR [rax+r15*1],0x0
    4434:	setne  r14b
    4438:	test   r14b,r14b
    443b:	jne    40a9 <__ctype_b_loc@plt+0x2229>
    4441:	cmp    DWORD PTR [rsp+0x8],0x2
    4446:	movzx  edi,BYTE PTR [rsp+0xd]
    444b:	mov    r11,r12
    444e:	mov    rbp,r10
    4451:	sete   dl
    4454:	mov    r12d,edi
    4457:	and    r12d,edx
    445a:	test   rbx,rbx
    445d:	sete   al
    4460:	and    al,r12b
    4463:	jne    50df <__ctype_b_loc@plt+0x325f>
    4469:	mov    eax,edi
    446b:	xor    eax,0x1
    446e:	and    dl,al
    4470:	je     50d1 <__ctype_b_loc@plt+0x3251>
    4476:	cmp    BYTE PTR [rsp+0x85],0x0
    447e:	je     50c1 <__ctype_b_loc@plt+0x3241>
    4484:	cmp    BYTE PTR [rsp+0xe],0x0
    4489:	jne    507f <__ctype_b_loc@plt+0x31ff>
    448f:	test   r11,r11
    4492:	sete   al
    4495:	cmp    QWORD PTR [rsp+0x70],0x0
    449b:	setne  dl
    449e:	and    al,dl
    44a0:	je     4fed <__ctype_b_loc@plt+0x316d>
    44a6:	mov    BYTE PTR [rsp+0x85],al
    44ad:	mov    eax,DWORD PTR [rsp+0x8]
    44b1:	mov    r11,QWORD PTR [rsp+0x70]
    44b6:	cmp    eax,0xa
    44b9:	jbe    4053 <__ctype_b_loc@plt+0x21d3>
    44bf:	call   1aa0 <abort@plt>
    44c4:	nop    DWORD PTR [rax+0x0]
    44c8:	xor    r11d,r11d
    44cb:	cmp    DWORD PTR [rsp+0x8],0x2
    44d0:	movzx  edx,BYTE PTR [rsp]
    44d4:	sete   al
    44d7:	xor    edx,0x1
    44da:	xor    ecx,ecx
    44dc:	or     edx,eax
    44de:	cmp    dl,0x1
    44e1:	je     43ab <__ctype_b_loc@plt+0x252b>
    44e7:	nop    WORD PTR [rax+rax*1+0x0]
    44f0:	mov    rsi,QWORD PTR [rsp+0x20]
    44f5:	test   rsi,rsi
    44f8:	je     43b6 <__ctype_b_loc@plt+0x2536>
    44fe:	mov    edx,ebp
    4500:	shr    dl,0x5
    4503:	movzx  edx,dl
    4506:	mov    edx,DWORD PTR [rsi+rdx*4]
    4509:	bt     edx,ebp
    450c:	jae    43b6 <__ctype_b_loc@plt+0x2536>
    4512:	cmp    BYTE PTR [rsp+0xd],0x0
    4517:	je     467c <__ctype_b_loc@plt+0x27fc>
    451d:	mov    rbp,r10
    4520:	mov    r11,r13
    4523:	mov    r10,r12
    4526:	jmp    45c0 <__ctype_b_loc@plt+0x2740>
    452b:	nop    DWORD PTR [rax+rax*1+0x0]
    4530:	xor    r11d,r11d
    4533:	mov    eax,DWORD PTR [rsp+0x8]
    4537:	cmp    eax,0x2
    453a:	je     4cc0 <__ctype_b_loc@plt+0x2e40>
    4540:	cmp    eax,0x5
    4543:	je     4c80 <__ctype_b_loc@plt+0x2e00>
    4549:	cmp    eax,0x2
    454c:	mov    ebp,0x3f
    4551:	sete   al
    4554:	xor    r14d,r14d
    4557:	xor    ecx,ecx
    4559:	jmp    4399 <__ctype_b_loc@plt+0x2519>
    455e:	xchg   ax,ax
    4560:	xor    r11d,r11d
    4563:	cmp    DWORD PTR [rsp+0x8],0x2
    4568:	je     4cf8 <__ctype_b_loc@plt+0x2e78>
    456e:	mov    BYTE PTR [rsp+0x85],r14b
    4576:	xor    eax,eax
    4578:	xor    ecx,ecx
    457a:	mov    ebp,0x27
    457f:	jmp    4399 <__ctype_b_loc@plt+0x2519>
    4584:	nop    DWORD PTR [rax+0x0]
    4588:	xor    r11d,r11d
    458b:	mov    ebp,0x20
    4590:	cmp    DWORD PTR [rsp+0x8],0x2
    4595:	movzx  ecx,BYTE PTR [rsp+0xd]
    459a:	sete   al
    459d:	and    cl,al
    459f:	je     4399 <__ctype_b_loc@plt+0x2519>
    45a5:	mov    rbp,r10
    45a8:	mov    r11,r13
    45ab:	mov    r10,r12
    45ae:	mov    eax,ecx
    45b0:	mov    DWORD PTR [rsp+0x8],0x2
    45b8:	nop    DWORD PTR [rax+rax*1+0x0]
    45c0:	cmp    BYTE PTR [rsp],0x0
    45c4:	je     45d6 <__ctype_b_loc@plt+0x2756>
    45c6:	test   al,al
    45c8:	mov    eax,0x4
    45cd:	cmove  eax,DWORD PTR [rsp+0x8]
    45d2:	mov    DWORD PTR [rsp+0x8],eax
    45d6:	sub    rsp,0x8
    45da:	mov    rcx,rbp
    45dd:	mov    rsi,r10
    45e0:	push   QWORD PTR [rsp+0x60]
    45e4:	push   QWORD PTR [rsp+0x70]
    45e8:	mov    rdi,r11
    45eb:	push   0x0
    45ed:	mov    r9d,DWORD PTR [rsp+0xa0]
    45f5:	mov    r8d,DWORD PTR [rsp+0x28]
    45fa:	mov    rdx,QWORD PTR [rsp+0x38]
    45ff:	and    r9d,0xfffffffd
    4603:	call   3f80 <__ctype_b_loc@plt+0x2100>
    4608:	add    rsp,0x20
    460c:	mov    r15,rax
    460f:	mov    rsi,QWORD PTR [rsp+0xa8]
    4617:	xor    rsi,QWORD PTR fs:0x28
    4620:	mov    rax,r15
    4623:	jne    5100 <__ctype_b_loc@plt+0x3280>
    4629:	add    rsp,0xb8
    4630:	pop    rbx
    4631:	pop    rbp
    4632:	pop    r12
    4634:	pop    r13
    4636:	pop    r14
    4638:	pop    r15
    463a:	ret    
    463b:	nop    DWORD PTR [rax+rax*1+0x0]
    4640:	xor    r11d,r11d
    4643:	mov    ebp,0xd
    4648:	mov    edx,0x72
    464d:	cmp    DWORD PTR [rsp+0x8],0x2
    4652:	movzx  ecx,BYTE PTR [rsp+0xd]
    4657:	sete   al
    465a:	and    cl,al
    465c:	jne    4e37 <__ctype_b_loc@plt+0x2fb7>
    4662:	cmp    BYTE PTR [rsp],0x0
    4666:	je     4394 <__ctype_b_loc@plt+0x2514>
    466c:	mov    ebp,edx
    466e:	xor    r14d,r14d
    4671:	cmp    BYTE PTR [rsp+0xd],0x0
    4676:	jne    451d <__ctype_b_loc@plt+0x269d>
    467c:	movzx  r9d,BYTE PTR [rsp+0xf]
    4682:	xor    r9d,0x1
    4686:	and    r9b,al
    4689:	je     46bd <__ctype_b_loc@plt+0x283d>
    468b:	cmp    r12,rbx
    468e:	jbe    4696 <__ctype_b_loc@plt+0x2816>
    4690:	mov    BYTE PTR [r13+rbx*1+0x0],0x27
    4696:	lea    rax,[rbx+0x1]
    469a:	cmp    r12,rax
    469d:	jbe    46a5 <__ctype_b_loc@plt+0x2825>
    469f:	mov    BYTE PTR [r13+rbx*1+0x1],0x24
    46a5:	lea    rax,[rbx+0x2]
    46a9:	cmp    r12,rax
    46ac:	jbe    46b4 <__ctype_b_loc@plt+0x2834>
    46ae:	mov    BYTE PTR [r13+rbx*1+0x2],0x27
    46b4:	add    rbx,0x3
    46b8:	mov    BYTE PTR [rsp+0xf],r9b
    46bd:	cmp    r12,rbx
    46c0:	jbe    46c8 <__ctype_b_loc@plt+0x2848>
    46c2:	mov    BYTE PTR [r13+rbx*1+0x0],0x5c
    46c8:	add    rbx,0x1
    46cc:	add    r15,0x1
    46d0:	jmp    43f6 <__ctype_b_loc@plt+0x2576>
    46d5:	nop    DWORD PTR [rax]
    46d8:	xor    r11d,r11d
    46db:	cmp    DWORD PTR [rsp+0x8],0x2
    46e0:	mov    ebp,0xc
    46e5:	mov    edx,0x66
    46ea:	sete   al
    46ed:	jmp    4662 <__ctype_b_loc@plt+0x27e2>
    46f2:	nop    WORD PTR [rax+rax*1+0x0]
    46f8:	xor    r11d,r11d
    46fb:	cmp    r10,0x1
    46ff:	setne  al
    4702:	cmp    r10,0xffffffffffffffff
    4706:	je     4ce0 <__ctype_b_loc@plt+0x2e60>
    470c:	test   al,al
    470e:	je     4383 <__ctype_b_loc@plt+0x2503>
    4714:	jmp    438c <__ctype_b_loc@plt+0x250c>
    4719:	nop    DWORD PTR [rax+0x0]
    4720:	xor    r11d,r11d
    4723:	cmp    DWORD PTR [rsp+0x8],0x2
    4728:	je     4968 <__ctype_b_loc@plt+0x2ae8>
    472e:	movzx  eax,BYTE PTR [rsp]
    4732:	and    al,BYTE PTR [rsp+0xd]
    4736:	and    al,r9b
    4739:	jne    4973 <__ctype_b_loc@plt+0x2af3>
    473f:	mov    ebp,0x5c
    4744:	mov    edx,0x5c
    4749:	jmp    4662 <__ctype_b_loc@plt+0x27e2>
    474e:	xchg   ax,ax
    4750:	xor    r11d,r11d
    4753:	cmp    DWORD PTR [rsp+0x8],0x2
    4758:	mov    ebp,0xb
    475d:	mov    edx,0x76
    4762:	sete   al
    4765:	jmp    4662 <__ctype_b_loc@plt+0x27e2>
    476a:	nop    WORD PTR [rax+rax*1+0x0]
    4770:	xor    r11d,r11d
    4773:	mov    ebp,0xa
    4778:	mov    edx,0x6e
    477d:	jmp    464d <__ctype_b_loc@plt+0x27cd>
    4782:	nop    WORD PTR [rax+rax*1+0x0]
    4788:	xor    r11d,r11d
    478b:	cmp    DWORD PTR [rsp+0x8],0x2
    4790:	mov    ebp,0x7
    4795:	mov    edx,0x61
    479a:	sete   al
    479d:	jmp    4662 <__ctype_b_loc@plt+0x27e2>
    47a2:	nop    WORD PTR [rax+rax*1+0x0]
    47a8:	xor    r11d,r11d
    47ab:	cmp    BYTE PTR [rsp],0x0
    47af:	je     4c30 <__ctype_b_loc@plt+0x2db0>
    47b5:	cmp    BYTE PTR [rsp+0xd],0x0
    47ba:	jne    4f56 <__ctype_b_loc@plt+0x30d6>
    47c0:	cmp    DWORD PTR [rsp+0x8],0x2
    47c5:	movzx  edx,BYTE PTR [rsp+0xf]
    47ca:	mov    rsi,rbx
    47cd:	sete   al
    47d0:	xor    edx,0x1
    47d3:	and    dl,al
    47d5:	je     4808 <__ctype_b_loc@plt+0x2988>
    47d7:	cmp    r12,rbx
    47da:	jbe    47e2 <__ctype_b_loc@plt+0x2962>
    47dc:	mov    BYTE PTR [r13+rbx*1+0x0],0x27
    47e2:	lea    rsi,[rbx+0x1]
    47e6:	cmp    r12,rsi
    47e9:	jbe    47f1 <__ctype_b_loc@plt+0x2971>
    47eb:	mov    BYTE PTR [r13+rbx*1+0x1],0x24
    47f1:	lea    rsi,[rbx+0x2]
    47f5:	cmp    r12,rsi
    47f8:	jbe    4800 <__ctype_b_loc@plt+0x2980>
    47fa:	mov    BYTE PTR [r13+rbx*1+0x2],0x27
    4800:	lea    rsi,[rbx+0x3]
    4804:	mov    BYTE PTR [rsp+0xf],dl
    4808:	cmp    r12,rsi
    480b:	jbe    4813 <__ctype_b_loc@plt+0x2993>
    480d:	mov    BYTE PTR [r13+rsi*1+0x0],0x5c
    4813:	test   cl,cl
    4815:	lea    rbx,[rsi+0x1]
    4819:	je     4df4 <__ctype_b_loc@plt+0x2f74>
    481f:	lea    rdx,[r15+0x1]
    4823:	cmp    rdx,r10
    4826:	jae    4d40 <__ctype_b_loc@plt+0x2ec0>
    482c:	mov    rdi,QWORD PTR [rsp+0x18]
    4831:	movzx  edi,BYTE PTR [rdi+r15*1+0x1]
    4837:	lea    edx,[rdi-0x30]
    483a:	mov    BYTE PTR [rsp+0x38],dil
    483f:	cmp    dl,0x9
    4842:	ja     4d40 <__ctype_b_loc@plt+0x2ec0>
    4848:	cmp    r12,rbx
    484b:	ja     4e4f <__ctype_b_loc@plt+0x2fcf>
    4851:	lea    rdx,[rsi+0x2]
    4855:	cmp    r12,rdx
    4858:	jbe    4860 <__ctype_b_loc@plt+0x29e0>
    485a:	mov    BYTE PTR [r13+rsi*1+0x2],0x30
    4860:	lea    rbx,[rsi+0x3]
    4864:	xor    r14d,r14d
    4867:	mov    ebp,0x30
    486c:	jmp    4399 <__ctype_b_loc@plt+0x2519>
    4871:	nop    DWORD PTR [rax+0x0]
    4878:	xor    r11d,r11d
    487b:	cmp    DWORD PTR [rsp+0x8],0x2
    4880:	mov    ebp,0x8
    4885:	mov    edx,0x62
    488a:	sete   al
    488d:	jmp    4662 <__ctype_b_loc@plt+0x27e2>
    4892:	xor    r14d,r14d
    4895:	jmp    4590 <__ctype_b_loc@plt+0x2710>
    489a:	cmp    DWORD PTR [rsp+0x8],0x2
    489f:	mov    ebp,0x9
    48a4:	mov    edx,0x74
    48a9:	sete   al
    48ac:	jmp    4662 <__ctype_b_loc@plt+0x27e2>
    48b1:	nop    DWORD PTR [rax+0x0]
    48b8:	xor    r11d,r11d
    48bb:	cmp    QWORD PTR [rsp+0x68],0x1
    48c1:	jne    4990 <__ctype_b_loc@plt+0x2b10>
    48c7:	mov    QWORD PTR [rsp+0x40],r10
    48cc:	mov    BYTE PTR [rsp+0x38],r11b
    48d1:	call   1e80 <__ctype_b_loc@plt>
    48d6:	mov    rcx,QWORD PTR [rax]
    48d9:	movzx  edx,bpl
    48dd:	movzx  r11d,BYTE PTR [rsp+0x38]
    48e3:	mov    r10,QWORD PTR [rsp+0x40]
    48e8:	mov    edi,0x1
    48ed:	movzx  eax,WORD PTR [rcx+rdx*2]
    48f1:	and    ax,0x4000
    48f5:	setne  r14b
    48f9:	sete   cl
    48fc:	and    cl,BYTE PTR [rsp]
    48ff:	jne    4af1 <__ctype_b_loc@plt+0x2c71>
    4905:	cmp    DWORD PTR [rsp+0x8],0x2
    490a:	sete   al
    490d:	jmp    4399 <__ctype_b_loc@plt+0x2519>
    4912:	nop    WORD PTR [rax+rax*1+0x0]
    4918:	mov    rax,QWORD PTR [rsp+0x18]
    491d:	lea    r8,[rax+r15*1]
    4921:	movzx  ebp,BYTE PTR [r8]
    4925:	cmp    bpl,0x7e
    4929:	ja     48b8 <__ctype_b_loc@plt+0x2a38>
    492b:	lea    rsi,[rip+0x3416]        # 7d48 <_obstack_memory_used@@Base+0x1158>
    4932:	movzx  edx,bpl
    4936:	movsxd rax,DWORD PTR [rsi+rdx*4]
    493a:	add    rax,rsi
    493d:	jmp    rax
    493f:	nop
    4940:	xor    r11d,r11d
    4943:	xor    r14d,r14d
    4946:	jmp    4590 <__ctype_b_loc@plt+0x2710>
    494b:	nop    DWORD PTR [rax+rax*1+0x0]
    4950:	mov    ebp,0x9
    4955:	xor    r11d,r11d
    4958:	mov    edx,0x74
    495d:	jmp    464d <__ctype_b_loc@plt+0x27cd>
    4962:	nop    WORD PTR [rax+rax*1+0x0]
    4968:	cmp    BYTE PTR [rsp+0xd],0x0
    496d:	jne    4e5a <__ctype_b_loc@plt+0x2fda>
    4973:	add    r15,0x1
    4977:	movzx  r11d,BYTE PTR [rsp+0xf]
    497d:	xor    r14d,r14d
    4980:	mov    ebp,0x5c
    4985:	jmp    43ce <__ctype_b_loc@plt+0x254e>
    498a:	nop    WORD PTR [rax+rax*1+0x0]
    4990:	mov    rax,QWORD PTR [rsp+0x28]
    4995:	cmp    r10,0xffffffffffffffff
    4999:	mov    QWORD PTR [rax],0x0
    49a0:	je     4d9f <__ctype_b_loc@plt+0x2f1f>
    49a6:	lea    rax,[rsp+0x9c]
    49ae:	xor    edi,edi
    49b0:	mov    BYTE PTR [rsp+0x84],bpl
    49b8:	mov    QWORD PTR [rsp+0x78],rbx
    49bd:	mov    BYTE PTR [rsp+0x87],r14b
    49c5:	mov    ebp,r14d
    49c8:	mov    QWORD PTR [rsp+0x40],rax
    49cd:	mov    BYTE PTR [rsp+0x86],r11b
    49d5:	mov    rbx,rdi
    49d8:	mov    QWORD PTR [rsp+0x48],r13
    49dd:	mov    QWORD PTR [rsp+0x50],r12
    49e2:	mov    QWORD PTR [rsp+0x38],r10
    49e7:	mov    QWORD PTR [rsp+0x88],r8
    49ef:	mov    rax,QWORD PTR [rsp+0x18]
    49f4:	lea    r12,[r15+rbx*1]
    49f8:	mov    rdx,QWORD PTR [rsp+0x38]
    49fd:	mov    rcx,QWORD PTR [rsp+0x28]
    4a02:	mov    rdi,QWORD PTR [rsp+0x40]
    4a07:	lea    r13,[rax+r12*1]
    4a0b:	sub    rdx,r12
    4a0e:	mov    rsi,r13
    4a11:	call   6890 <__ctype_b_loc@plt+0x4a10>
    4a16:	test   rax,rax
    4a19:	mov    r14,rax
    4a1c:	je     4ea5 <__ctype_b_loc@plt+0x3025>
    4a22:	cmp    rax,0xffffffffffffffff
    4a26:	je     4e6d <__ctype_b_loc@plt+0x2fed>
    4a2c:	cmp    rax,0xfffffffffffffffe
    4a30:	je     4ee3 <__ctype_b_loc@plt+0x3063>
    4a36:	cmp    DWORD PTR [rsp+0x8],0x2
    4a3b:	sete   al
    4a3e:	and    al,BYTE PTR [rsp+0xd]
    4a42:	je     4a82 <__ctype_b_loc@plt+0x2c02>
    4a44:	cmp    r14,0x1
    4a48:	je     4a82 <__ctype_b_loc@plt+0x2c02>
    4a4a:	mov    edx,0x1
    4a4f:	nop
    4a50:	movzx  edi,BYTE PTR [r13+rdx*1+0x0]
    4a56:	lea    ecx,[rdi-0x5b]
    4a59:	cmp    cl,0x21
    4a5c:	ja     4a79 <__ctype_b_loc@plt+0x2bf9>
    4a5e:	mov    edi,0x1
    4a63:	movabs rsi,0x20000002b
    4a6d:	shl    rdi,cl
    4a70:	test   rdi,rsi
    4a73:	jne    4c58 <__ctype_b_loc@plt+0x2dd8>
    4a79:	add    rdx,0x1
    4a7d:	cmp    r14,rdx
    4a80:	jne    4a50 <__ctype_b_loc@plt+0x2bd0>
    4a82:	mov    edi,DWORD PTR [rsp+0x9c]
    4a89:	call   1e60 <iswprint@plt>
    4a8e:	mov    rdi,QWORD PTR [rsp+0x28]
    4a93:	test   eax,eax
    4a95:	mov    eax,0x0
    4a9a:	cmove  ebp,eax
    4a9d:	add    rbx,r14
    4aa0:	call   1e50 <mbsinit@plt>
    4aa5:	test   eax,eax
    4aa7:	je     49ef <__ctype_b_loc@plt+0x2b6f>
    4aad:	mov    esi,ebp
    4aaf:	movzx  r11d,BYTE PTR [rsp+0x86]
    4ab8:	movzx  ebp,BYTE PTR [rsp+0x84]
    4ac0:	mov    rdi,rbx
    4ac3:	mov    r13,QWORD PTR [rsp+0x48]
    4ac8:	mov    rbx,QWORD PTR [rsp+0x78]
    4acd:	mov    r12,QWORD PTR [rsp+0x50]
    4ad2:	mov    r10,QWORD PTR [rsp+0x38]
    4ad7:	mov    r14d,esi
    4ada:	xor    r14d,0x1
    4ade:	cmp    rdi,0x1
    4ae2:	mov    ecx,r14d
    4ae5:	jbe    4edb <__ctype_b_loc@plt+0x305b>
    4aeb:	and    cl,BYTE PTR [rsp]
    4aee:	mov    r14d,esi
    4af1:	mov    rsi,rdi
    4af4:	mov    BYTE PTR [rsp+0x38],r14b
    4af9:	xor    eax,eax
    4afb:	add    rsi,r15
    4afe:	movzx  r9d,BYTE PTR [rsp+0xd]
    4b04:	movzx  edx,BYTE PTR [rsp+0xf]
    4b09:	mov    r8,QWORD PTR [rsp+0x18]
    4b0e:	mov    r14d,DWORD PTR [rsp+0x8]
    4b13:	jmp    4bd0 <__ctype_b_loc@plt+0x2d50>
    4b18:	nop    DWORD PTR [rax+rax*1+0x0]
    4b20:	test   r9b,r9b
    4b23:	jne    4d60 <__ctype_b_loc@plt+0x2ee0>
    4b29:	cmp    r14d,0x2
    4b2d:	mov    eax,edx
    4b2f:	sete   dil
    4b33:	xor    eax,0x1
    4b36:	and    al,dil
    4b39:	je     4b6a <__ctype_b_loc@plt+0x2cea>
    4b3b:	cmp    r12,rbx
    4b3e:	jbe    4b46 <__ctype_b_loc@plt+0x2cc6>
    4b40:	mov    BYTE PTR [r13+rbx*1+0x0],0x27
    4b46:	lea    rdx,[rbx+0x1]
    4b4a:	cmp    r12,rdx
    4b4d:	jbe    4b55 <__ctype_b_loc@plt+0x2cd5>
    4b4f:	mov    BYTE PTR [r13+rbx*1+0x1],0x24
    4b55:	lea    rdx,[rbx+0x2]
    4b59:	cmp    r12,rdx
    4b5c:	jbe    4b64 <__ctype_b_loc@plt+0x2ce4>
    4b5e:	mov    BYTE PTR [r13+rbx*1+0x2],0x27
    4b64:	add    rbx,0x3
    4b68:	mov    edx,eax
    4b6a:	cmp    r12,rbx
    4b6d:	jbe    4b75 <__ctype_b_loc@plt+0x2cf5>
    4b6f:	mov    BYTE PTR [r13+rbx*1+0x0],0x5c
    4b75:	lea    rax,[rbx+0x1]
    4b79:	cmp    r12,rax
    4b7c:	jbe    4b8b <__ctype_b_loc@plt+0x2d0b>
    4b7e:	mov    eax,ebp
    4b80:	shr    al,0x6
    4b83:	add    eax,0x30
    4b86:	mov    BYTE PTR [r13+rbx*1+0x1],al
    4b8b:	lea    rax,[rbx+0x2]
    4b8f:	cmp    r12,rax
    4b92:	jbe    4ba4 <__ctype_b_loc@plt+0x2d24>
    4b94:	mov    eax,ebp
    4b96:	shr    al,0x3
    4b99:	and    eax,0x7
    4b9c:	add    eax,0x30
    4b9f:	mov    BYTE PTR [r13+rbx*1+0x2],al
    4ba4:	and    ebp,0x7
    4ba7:	add    r15,0x1
    4bab:	add    rbx,0x3
    4baf:	add    ebp,0x30
    4bb2:	cmp    rsi,r15
    4bb5:	jbe    4d90 <__ctype_b_loc@plt+0x2f10>
    4bbb:	mov    eax,ecx
    4bbd:	cmp    r12,rbx
    4bc0:	jbe    4bc7 <__ctype_b_loc@plt+0x2d47>
    4bc2:	mov    BYTE PTR [r13+rbx*1+0x0],bpl
    4bc7:	movzx  ebp,BYTE PTR [r8+r15*1]
    4bcc:	add    rbx,0x1
    4bd0:	test   cl,cl
    4bd2:	jne    4b20 <__ctype_b_loc@plt+0x2ca0>
    4bd8:	test   r11b,r11b
    4bdb:	je     4bec <__ctype_b_loc@plt+0x2d6c>
    4bdd:	cmp    r12,rbx
    4be0:	jbe    4be8 <__ctype_b_loc@plt+0x2d68>
    4be2:	mov    BYTE PTR [r13+rbx*1+0x0],0x5c
    4be8:	add    rbx,0x1
    4bec:	mov    r11d,eax
    4bef:	add    r15,0x1
    4bf3:	xor    r11d,0x1
    4bf7:	and    r11d,edx
    4bfa:	cmp    rsi,r15
    4bfd:	jbe    4d80 <__ctype_b_loc@plt+0x2f00>
    4c03:	test   r11b,r11b
    4c06:	je     4bbd <__ctype_b_loc@plt+0x2d3d>
    4c08:	cmp    r12,rbx
    4c0b:	jbe    4c13 <__ctype_b_loc@plt+0x2d93>
    4c0d:	mov    BYTE PTR [r13+rbx*1+0x0],0x27
    4c13:	lea    rdx,[rbx+0x1]
    4c17:	cmp    r12,rdx
    4c1a:	jbe    4c22 <__ctype_b_loc@plt+0x2da2>
    4c1c:	mov    BYTE PTR [r13+rbx*1+0x1],0x27
    4c22:	add    rbx,0x2
    4c26:	xor    r11d,r11d
    4c29:	xor    edx,edx
    4c2b:	jmp    4bbd <__ctype_b_loc@plt+0x2d3d>
    4c2d:	nop    DWORD PTR [rax]
    4c30:	test   BYTE PTR [rsp+0x80],0x1
    4c38:	jne    4d50 <__ctype_b_loc@plt+0x2ed0>
    4c3e:	cmp    DWORD PTR [rsp+0x8],0x2
    4c43:	sete   al
    4c46:	xor    r14d,r14d
    4c49:	xor    ecx,ecx
    4c4b:	xor    ebp,ebp
    4c4d:	jmp    4399 <__ctype_b_loc@plt+0x2519>
    4c52:	nop    WORD PTR [rax+rax*1+0x0]
    4c58:	mov    rdi,QWORD PTR [rsp+0x38]
    4c5d:	mov    r11,QWORD PTR [rsp+0x48]
    4c62:	mov    r10,QWORD PTR [rsp+0x50]
    4c67:	mov    DWORD PTR [rsp+0x8],0x2
    4c6f:	mov    rbp,rdi
    4c72:	jmp    45c0 <__ctype_b_loc@plt+0x2740>
    4c77:	nop    WORD PTR [rax+rax*1+0x0]
    4c80:	test   BYTE PTR [rsp+0x80],0x4
    4c88:	je     4ca8 <__ctype_b_loc@plt+0x2e28>
    4c8a:	lea    rdx,[r15+0x2]
    4c8e:	cmp    rdx,r10
    4c91:	jae    4ca8 <__ctype_b_loc@plt+0x2e28>
    4c93:	mov    rax,QWORD PTR [rsp+0x18]
    4c98:	cmp    BYTE PTR [rax+r15*1+0x1],0x3f
    4c9e:	je     4f75 <__ctype_b_loc@plt+0x30f5>
    4ca4:	nop    DWORD PTR [rax+0x0]
    4ca8:	xor    eax,eax
    4caa:	xor    r14d,r14d
    4cad:	xor    ecx,ecx
    4caf:	mov    ebp,0x3f
    4cb4:	jmp    4399 <__ctype_b_loc@plt+0x2519>
    4cb9:	nop    DWORD PTR [rax+0x0]
    4cc0:	cmp    BYTE PTR [rsp+0xd],0x0
    4cc5:	jne    4e5a <__ctype_b_loc@plt+0x2fda>
    4ccb:	mov    eax,r14d
    4cce:	xor    ecx,ecx
    4cd0:	xor    r14d,r14d
    4cd3:	mov    ebp,0x3f
    4cd8:	jmp    4399 <__ctype_b_loc@plt+0x2519>
    4cdd:	nop    DWORD PTR [rax]
    4ce0:	mov    rax,QWORD PTR [rsp+0x18]
    4ce5:	cmp    BYTE PTR [rax+0x1],0x0
    4ce9:	setne  al
    4cec:	jmp    470c <__ctype_b_loc@plt+0x288c>
    4cf1:	nop    DWORD PTR [rax+0x0]
    4cf8:	cmp    BYTE PTR [rsp+0xd],0x0
    4cfd:	jne    4e5a <__ctype_b_loc@plt+0x2fda>
    4d03:	test   r12,r12
    4d06:	je     4e05 <__ctype_b_loc@plt+0x2f85>
    4d0c:	cmp    QWORD PTR [rsp+0x70],0x0
    4d12:	jne    4e05 <__ctype_b_loc@plt+0x2f85>
    4d18:	mov    QWORD PTR [rsp+0x70],r12
    4d1d:	xor    r12d,r12d
    4d20:	add    rbx,0x3
    4d24:	mov    eax,r14d
    4d27:	xor    ecx,ecx
    4d29:	mov    BYTE PTR [rsp+0x85],r14b
    4d31:	mov    BYTE PTR [rsp+0xf],0x0
    4d36:	mov    ebp,0x27
    4d3b:	jmp    4399 <__ctype_b_loc@plt+0x2519>
    4d40:	xor    r14d,r14d
    4d43:	mov    ebp,0x30
    4d48:	jmp    4399 <__ctype_b_loc@plt+0x2519>
    4d4d:	nop    DWORD PTR [rax]
    4d50:	add    r15,0x1
    4d54:	jmp    4089 <__ctype_b_loc@plt+0x2209>
    4d59:	nop    DWORD PTR [rax+0x0]
    4d60:	cmp    DWORD PTR [rsp+0x8],0x2
    4d65:	movzx  edi,BYTE PTR [rsp+0xd]
    4d6a:	mov    rbp,r10
    4d6d:	mov    r11,r13
    4d70:	mov    r10,r12
    4d73:	sete   al
    4d76:	mov    BYTE PTR [rsp],dil
    4d7a:	jmp    45c0 <__ctype_b_loc@plt+0x2740>
    4d7f:	nop
    4d80:	mov    BYTE PTR [rsp+0xf],dl
    4d84:	movzx  r14d,BYTE PTR [rsp+0x38]
    4d8a:	jmp    43ce <__ctype_b_loc@plt+0x254e>
    4d8f:	nop
    4d90:	mov    BYTE PTR [rsp+0xf],dl
    4d94:	movzx  r14d,BYTE PTR [rsp+0x38]
    4d9a:	jmp    43f6 <__ctype_b_loc@plt+0x2576>
    4d9f:	mov    rdi,QWORD PTR [rsp+0x18]
    4da4:	mov    QWORD PTR [rsp+0x40],r8
    4da9:	mov    BYTE PTR [rsp+0x38],r11b
    4dae:	call   1b60 <strlen@plt>
    4db3:	mov    r8,QWORD PTR [rsp+0x40]
    4db8:	mov    r10,rax
    4dbb:	movzx  r11d,BYTE PTR [rsp+0x38]
    4dc1:	jmp    49a6 <__ctype_b_loc@plt+0x2b26>
    4dc6:	test   r11,r11
    4dc9:	je     4dd0 <__ctype_b_loc@plt+0x2f50>
    4dcb:	mov    BYTE PTR [r13+0x0],0x22
    4dd0:	lea    rax,[rip+0x2cec]        # 7ac3 <_obstack_memory_used@@Base+0xed3>
    4dd7:	mov    BYTE PTR [rsp],0x1
    4ddb:	mov    QWORD PTR [rsp+0x10],0x1
    4de4:	mov    r9d,0x1
    4dea:	mov    QWORD PTR [rsp+0x30],rax
    4def:	jmp    4070 <__ctype_b_loc@plt+0x21f0>
    4df4:	xor    r14d,r14d
    4df7:	movzx  ecx,BYTE PTR [rsp]
    4dfb:	mov    ebp,0x30
    4e00:	jmp    4399 <__ctype_b_loc@plt+0x2519>
    4e05:	cmp    r12,rbx
    4e08:	jbe    4e10 <__ctype_b_loc@plt+0x2f90>
    4e0a:	mov    BYTE PTR [r13+rbx*1+0x0],0x27
    4e10:	lea    rax,[rbx+0x1]
    4e14:	cmp    r12,rax
    4e17:	jbe    4e1f <__ctype_b_loc@plt+0x2f9f>
    4e19:	mov    BYTE PTR [r13+rbx*1+0x1],0x5c
    4e1f:	lea    rax,[rbx+0x2]
    4e23:	cmp    r12,rax
    4e26:	jbe    4d20 <__ctype_b_loc@plt+0x2ea0>
    4e2c:	mov    BYTE PTR [r13+rbx*1+0x2],0x27
    4e32:	jmp    4d20 <__ctype_b_loc@plt+0x2ea0>
    4e37:	mov    rbp,r10
    4e3a:	mov    r11,r13
    4e3d:	mov    r10,r12
    4e40:	mov    eax,ecx
    4e42:	mov    DWORD PTR [rsp+0x8],0x2
    4e4a:	jmp    45c0 <__ctype_b_loc@plt+0x2740>
    4e4f:	mov    BYTE PTR [r13+rbx*1+0x0],0x30
    4e55:	jmp    4851 <__ctype_b_loc@plt+0x29d1>
    4e5a:	mov    rbp,r10
    4e5d:	mov    r11,r13
    4e60:	mov    r10,r12
    4e63:	movzx  eax,BYTE PTR [rsp+0xd]
    4e68:	jmp    45c0 <__ctype_b_loc@plt+0x2740>
    4e6d:	mov    rdi,rbx
    4e70:	movzx  ebp,BYTE PTR [rsp+0x84]
    4e78:	movzx  r14d,BYTE PTR [rsp+0x87]
    4e81:	movzx  r11d,BYTE PTR [rsp+0x86]
    4e8a:	mov    rbx,QWORD PTR [rsp+0x78]
    4e8f:	xor    esi,esi
    4e91:	mov    r13,QWORD PTR [rsp+0x48]
    4e96:	mov    r12,QWORD PTR [rsp+0x50]
    4e9b:	mov    r10,QWORD PTR [rsp+0x38]
    4ea0:	jmp    4ade <__ctype_b_loc@plt+0x2c5e>
    4ea5:	mov    r14d,ebp
    4ea8:	mov    rdi,rbx
    4eab:	mov    esi,ebp
    4ead:	movzx  r11d,BYTE PTR [rsp+0x86]
    4eb6:	movzx  ebp,BYTE PTR [rsp+0x84]
    4ebe:	xor    r14d,0x1
    4ec2:	mov    rbx,QWORD PTR [rsp+0x78]
    4ec7:	mov    r13,QWORD PTR [rsp+0x48]
    4ecc:	mov    r12,QWORD PTR [rsp+0x50]
    4ed1:	mov    r10,QWORD PTR [rsp+0x38]
    4ed6:	jmp    4ade <__ctype_b_loc@plt+0x2c5e>
    4edb:	mov    r14d,esi
    4ede:	jmp    48fc <__ctype_b_loc@plt+0x2a7c>
    4ee3:	mov    r10,QWORD PTR [rsp+0x38]
    4ee8:	mov    rsi,r12
    4eeb:	mov    rax,rbx
    4eee:	mov    rdi,rbx
    4ef1:	mov    r9,r13
    4ef4:	movzx  ebp,BYTE PTR [rsp+0x84]
    4efc:	movzx  r14d,BYTE PTR [rsp+0x87]
    4f05:	movzx  r11d,BYTE PTR [rsp+0x86]
    4f0e:	cmp    r10,rsi
    4f11:	mov    rbx,QWORD PTR [rsp+0x78]
    4f16:	mov    r13,QWORD PTR [rsp+0x48]
    4f1b:	mov    r12,QWORD PTR [rsp+0x50]
    4f20:	mov    r8,QWORD PTR [rsp+0x88]
    4f28:	jbe    4f4f <__ctype_b_loc@plt+0x30cf>
    4f2a:	cmp    BYTE PTR [r9],0x0
    4f2e:	jne    4f3f <__ctype_b_loc@plt+0x30bf>
    4f30:	jmp    4f4f <__ctype_b_loc@plt+0x30cf>
    4f32:	nop    WORD PTR [rax+rax*1+0x0]
    4f38:	cmp    BYTE PTR [r8+rax*1],0x0
    4f3d:	je     4f4c <__ctype_b_loc@plt+0x30cc>
    4f3f:	add    rax,0x1
    4f43:	lea    rdx,[r15+rax*1]
    4f47:	cmp    r10,rdx
    4f4a:	ja     4f38 <__ctype_b_loc@plt+0x30b8>
    4f4c:	mov    rdi,rax
    4f4f:	xor    esi,esi
    4f51:	jmp    4ade <__ctype_b_loc@plt+0x2c5e>
    4f56:	cmp    DWORD PTR [rsp+0x8],0x2
    4f5b:	movzx  esi,BYTE PTR [rsp+0xd]
    4f60:	mov    rbp,r10
    4f63:	mov    r11,r13
    4f66:	mov    r10,r12
    4f69:	sete   al
    4f6c:	mov    BYTE PTR [rsp],sil
    4f70:	jmp    45c0 <__ctype_b_loc@plt+0x2740>
    4f75:	movzx  ebp,BYTE PTR [rax+rdx*1]
    4f79:	cmp    bpl,0x3e
    4f7d:	ja     4ca8 <__ctype_b_loc@plt+0x2e28>
    4f83:	movabs rax,0x7000a38200000000
    4f8d:	bt     rax,rbp
    4f91:	jae    4ca8 <__ctype_b_loc@plt+0x2e28>
    4f97:	cmp    BYTE PTR [rsp+0xd],0x0
    4f9c:	jne    50f2 <__ctype_b_loc@plt+0x3272>
    4fa2:	cmp    r12,rbx
    4fa5:	jbe    4fad <__ctype_b_loc@plt+0x312d>
    4fa7:	mov    BYTE PTR [r13+rbx*1+0x0],0x3f
    4fad:	lea    rax,[rbx+0x1]
    4fb1:	cmp    r12,rax
    4fb4:	jbe    4fbc <__ctype_b_loc@plt+0x313c>
    4fb6:	mov    BYTE PTR [r13+rbx*1+0x1],0x22
    4fbc:	lea    rax,[rbx+0x2]
    4fc0:	cmp    r12,rax
    4fc3:	jbe    4fcb <__ctype_b_loc@plt+0x314b>
    4fc5:	mov    BYTE PTR [r13+rbx*1+0x2],0x22
    4fcb:	lea    rax,[rbx+0x3]
    4fcf:	cmp    r12,rax
    4fd2:	jbe    4fda <__ctype_b_loc@plt+0x315a>
    4fd4:	mov    BYTE PTR [r13+rbx*1+0x3],0x3f
    4fda:	add    rbx,0x4
    4fde:	xor    eax,eax
    4fe0:	xor    r14d,r14d
    4fe3:	xor    ecx,ecx
    4fe5:	mov    r15,rdx
    4fe8:	jmp    4399 <__ctype_b_loc@plt+0x2519>
    4fed:	movzx  eax,BYTE PTR [rsp+0x85]
    4ff5:	mov    r10,r11
    4ff8:	mov    r15,rbx
    4ffb:	mov    r11,r13
    4ffe:	mov    rsi,QWORD PTR [rsp+0x30]
    5003:	test   rsi,rsi
    5006:	je     5034 <__ctype_b_loc@plt+0x31b4>
    5008:	test   al,al
    500a:	je     5034 <__ctype_b_loc@plt+0x31b4>
    500c:	movzx  ecx,BYTE PTR [rsi]
    500f:	test   cl,cl
    5011:	je     5034 <__ctype_b_loc@plt+0x31b4>
    5013:	sub    rsi,r15
    5016:	mov    rdx,r15
    5019:	mov    rax,rsi
    501c:	cmp    r10,rdx
    501f:	jbe    5025 <__ctype_b_loc@plt+0x31a5>
    5021:	mov    BYTE PTR [r11+rdx*1],cl
    5025:	add    rdx,0x1
    5029:	movzx  ecx,BYTE PTR [rax+rdx*1]
    502d:	test   cl,cl
    502f:	jne    501c <__ctype_b_loc@plt+0x319c>
    5031:	mov    r15,rdx
    5034:	cmp    r10,r15
    5037:	jbe    460f <__ctype_b_loc@plt+0x278f>
    503d:	mov    BYTE PTR [r11+r15*1],0x0
    5042:	jmp    460f <__ctype_b_loc@plt+0x278f>
    5047:	mov    esi,DWORD PTR [rsp+0x8]
    504b:	mov    rdi,QWORD PTR [rsp+0x58]
    5050:	call   3ea0 <__ctype_b_loc@plt+0x2020>
    5055:	mov    r11,QWORD PTR [rsp]
    5059:	mov    QWORD PTR [rsp+0x58],rax
    505e:	jmp    427e <__ctype_b_loc@plt+0x23fe>
    5063:	mov    esi,DWORD PTR [rsp+0x8]
    5067:	mov    rdi,QWORD PTR [rsp+0x60]
    506c:	call   3ea0 <__ctype_b_loc@plt+0x2020>
    5071:	mov    r11,QWORD PTR [rsp]
    5075:	mov    QWORD PTR [rsp+0x60],rax
    507a:	jmp    424b <__ctype_b_loc@plt+0x23cb>
    507f:	sub    rsp,0x8
    5083:	mov    r8d,0x5
    5089:	mov    rcx,r10
    508c:	push   QWORD PTR [rsp+0x60]
    5090:	push   QWORD PTR [rsp+0x70]
    5094:	mov    rdi,r13
    5097:	push   QWORD PTR [rsp+0x38]
    509b:	mov    r9d,DWORD PTR [rsp+0xa0]
    50a3:	mov    rdx,QWORD PTR [rsp+0x38]
    50a8:	mov    rsi,QWORD PTR [rsp+0x90]
    50b0:	call   3f80 <__ctype_b_loc@plt+0x2100>
    50b5:	add    rsp,0x20
    50b9:	mov    r15,rax
    50bc:	jmp    460f <__ctype_b_loc@plt+0x278f>
    50c1:	mov    r10,r11
    50c4:	mov    r15,rbx
    50c7:	mov    r11,r13
    50ca:	mov    eax,edx
    50cc:	jmp    4ffe <__ctype_b_loc@plt+0x317e>
    50d1:	mov    r10,r11
    50d4:	mov    r15,rbx
    50d7:	mov    r11,r13
    50da:	jmp    4ffe <__ctype_b_loc@plt+0x317e>
    50df:	mov    r10,r11
    50e2:	mov    DWORD PTR [rsp+0x8],0x2
    50ea:	mov    r11,r13
    50ed:	jmp    45c0 <__ctype_b_loc@plt+0x2740>
    50f2:	mov    rbp,r10
    50f5:	mov    r11,r13
    50f8:	mov    r10,r12
    50fb:	jmp    45d6 <__ctype_b_loc@plt+0x2756>
    5100:	call   1b70 <__stack_chk_fail@plt>
    5105:	nop
    5106:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5110:	push   r15
    5112:	push   r14
    5114:	mov    r14,rdx
    5117:	push   r13
    5119:	push   r12
    511b:	movsxd r12,edi
    511e:	push   rbp
    511f:	push   rbx
    5120:	mov    rbp,rcx
    5123:	sub    rsp,0x28
    5127:	mov    QWORD PTR [rsp+0x8],rsi
    512c:	call   1ab0 <__errno_location@plt>
    5131:	mov    r13,rax
    5134:	mov    eax,DWORD PTR [rax]
    5136:	test   r12d,r12d
    5139:	mov    rbx,QWORD PTR [rip+0x205140]        # 20a280 <_obstack_memory_used@@Base+0x203690>
    5140:	mov    DWORD PTR [rsp+0x18],eax
    5144:	js     52c5 <__ctype_b_loc@plt+0x3445>
    514a:	cmp    r12d,DWORD PTR [rip+0x205127]        # 20a278 <_obstack_memory_used@@Base+0x203688>
    5151:	jb     51b0 <__ctype_b_loc@plt+0x3330>
    5153:	lea    edx,[r12+0x1]
    5158:	lea    rax,[rip+0x205131]        # 20a290 <_obstack_memory_used@@Base+0x2036a0>
    515f:	mov    rsi,rdx
    5162:	mov    r15,rdx
    5165:	shl    rsi,0x4
    5169:	cmp    rbx,rax
    516c:	je     5290 <__ctype_b_loc@plt+0x3410>
    5172:	mov    rdi,rbx
    5175:	mov    QWORD PTR [rsp+0x10],rdx
    517a:	call   6580 <__ctype_b_loc@plt+0x4700>
    517f:	mov    rdx,QWORD PTR [rsp+0x10]
    5184:	mov    rbx,rax
    5187:	mov    QWORD PTR [rip+0x2050f2],rax        # 20a280 <_obstack_memory_used@@Base+0x203690>
    518e:	mov    edi,DWORD PTR [rip+0x2050e4]        # 20a278 <_obstack_memory_used@@Base+0x203688>
    5194:	xor    esi,esi
    5196:	sub    rdx,rdi
    5199:	shl    rdi,0x4
    519d:	shl    rdx,0x4
    51a1:	add    rdi,rbx
    51a4:	call   1bf0 <memset@plt>
    51a9:	mov    DWORD PTR [rip+0x2050c8],r15d        # 20a278 <_obstack_memory_used@@Base+0x203688>
    51b0:	mov    eax,DWORD PTR [rbp+0x4]
    51b3:	shl    r12,0x4
    51b7:	lea    r15,[rbp+0x8]
    51bb:	add    rbx,r12
    51be:	sub    rsp,0x8
    51c2:	mov    r8d,DWORD PTR [rbp+0x0]
    51c6:	mov    r11,QWORD PTR [rbx]
    51c9:	mov    r12,QWORD PTR [rbx+0x8]
    51cd:	mov    rcx,r14
    51d0:	or     eax,0x1
    51d3:	mov    DWORD PTR [rsp+0x24],eax
    51d7:	push   QWORD PTR [rbp+0x30]
    51da:	mov    r9d,eax
    51dd:	push   QWORD PTR [rbp+0x28]
    51e0:	push   r15
    51e2:	mov    rsi,r11
    51e5:	mov    rdx,QWORD PTR [rsp+0x28]
    51ea:	mov    rdi,r12
    51ed:	mov    QWORD PTR [rsp+0x30],r11
    51f2:	call   3f80 <__ctype_b_loc@plt+0x2100>
    51f7:	add    rsp,0x20
    51fb:	mov    r11,QWORD PTR [rsp+0x10]
    5200:	cmp    r11,rax
    5203:	ja     526c <__ctype_b_loc@plt+0x33ec>
    5205:	lea    rsi,[rax+0x1]
    5209:	lea    rax,[rip+0x205170]        # 20a380 <stderr@@GLIBC_2.2.5+0x80>
    5210:	cmp    r12,rax
    5213:	mov    QWORD PTR [rbx],rsi
    5216:	je     522a <__ctype_b_loc@plt+0x33aa>
    5218:	mov    rdi,r12
    521b:	mov    QWORD PTR [rsp+0x10],rsi
    5220:	call   1e90 <__ctype_b_loc@plt+0x10>
    5225:	mov    rsi,QWORD PTR [rsp+0x10]
    522a:	mov    rdi,rsi
    522d:	mov    QWORD PTR [rsp+0x10],rsi
    5232:	call   6530 <__ctype_b_loc@plt+0x46b0>
    5237:	sub    rsp,0x8
    523b:	mov    QWORD PTR [rbx+0x8],rax
    523f:	mov    r8d,DWORD PTR [rbp+0x0]
    5243:	push   QWORD PTR [rbp+0x30]
    5246:	push   QWORD PTR [rbp+0x28]
    5249:	mov    rcx,r14
    524c:	push   r15
    524e:	mov    r9d,DWORD PTR [rsp+0x3c]
    5253:	mov    rdi,rax
    5256:	mov    rdx,QWORD PTR [rsp+0x28]
    525b:	mov    rsi,QWORD PTR [rsp+0x30]
    5260:	mov    r12,rax
    5263:	call   3f80 <__ctype_b_loc@plt+0x2100>
    5268:	add    rsp,0x20
    526c:	mov    eax,DWORD PTR [rsp+0x18]
    5270:	mov    DWORD PTR [r13+0x0],eax
    5274:	add    rsp,0x28
    5278:	mov    rax,r12
    527b:	pop    rbx
    527c:	pop    rbp
    527d:	pop    r12
    527f:	pop    r13
    5281:	pop    r14
    5283:	pop    r15
    5285:	ret    
    5286:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5290:	xor    edi,edi
    5292:	mov    QWORD PTR [rsp+0x10],rdx
    5297:	call   6580 <__ctype_b_loc@plt+0x4700>
    529c:	mov    rsi,QWORD PTR [rip+0x204fed]        # 20a290 <_obstack_memory_used@@Base+0x2036a0>
    52a3:	mov    rdi,QWORD PTR [rip+0x204fee]        # 20a298 <_obstack_memory_used@@Base+0x2036a8>
    52aa:	mov    rbx,rax
    52ad:	mov    QWORD PTR [rip+0x204fcc],rax        # 20a280 <_obstack_memory_used@@Base+0x203690>
    52b4:	mov    rdx,QWORD PTR [rsp+0x10]
    52b9:	mov    QWORD PTR [rax],rsi
    52bc:	mov    QWORD PTR [rax+0x8],rdi
    52c0:	jmp    518e <__ctype_b_loc@plt+0x330e>
    52c5:	call   1aa0 <abort@plt>
    52ca:	nop    WORD PTR [rax+rax*1+0x0]
    52d0:	push   r12
    52d2:	push   rbp
    52d3:	push   rbx
    52d4:	mov    rbx,rdi
    52d7:	call   1ab0 <__errno_location@plt>
    52dc:	mov    r12d,DWORD PTR [rax]
    52df:	mov    rbp,rax
    52e2:	lea    rax,[rip+0x205197]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    52e9:	test   rbx,rbx
    52ec:	mov    esi,0x38
    52f1:	cmove  rbx,rax
    52f5:	mov    rdi,rbx
    52f8:	call   66e0 <__ctype_b_loc@plt+0x4860>
    52fd:	mov    DWORD PTR [rbp+0x0],r12d
    5301:	pop    rbx
    5302:	pop    rbp
    5303:	pop    r12
    5305:	ret    
    5306:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5310:	lea    rax,[rip+0x205169]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    5317:	test   rdi,rdi
    531a:	cmove  rdi,rax
    531e:	mov    eax,DWORD PTR [rdi]
    5320:	ret    
    5321:	nop    DWORD PTR [rax+rax*1+0x0]
    5326:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5330:	lea    rax,[rip+0x205149]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    5337:	test   rdi,rdi
    533a:	cmove  rdi,rax
    533e:	mov    DWORD PTR [rdi],esi
    5340:	ret    
    5341:	nop    DWORD PTR [rax+rax*1+0x0]
    5346:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5350:	lea    rax,[rip+0x205129]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    5357:	test   rdi,rdi
    535a:	mov    ecx,esi
    535c:	cmove  rdi,rax
    5360:	mov    eax,esi
    5362:	and    ecx,0x1f
    5365:	shr    al,0x5
    5368:	movzx  eax,al
    536b:	lea    rdi,[rdi+rax*4+0x8]
    5370:	mov    esi,DWORD PTR [rdi]
    5372:	mov    eax,esi
    5374:	shr    eax,cl
    5376:	xor    edx,eax
    5378:	and    eax,0x1
    537b:	and    edx,0x1
    537e:	shl    edx,cl
    5380:	xor    edx,esi
    5382:	mov    DWORD PTR [rdi],edx
    5384:	ret    
    5385:	nop
    5386:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5390:	lea    rax,[rip+0x2050e9]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    5397:	test   rdi,rdi
    539a:	cmove  rdi,rax
    539e:	mov    eax,DWORD PTR [rdi+0x4]
    53a1:	mov    DWORD PTR [rdi+0x4],esi
    53a4:	ret    
    53a5:	nop
    53a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    53b0:	lea    rax,[rip+0x2050c9]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    53b7:	test   rdi,rdi
    53ba:	cmove  rdi,rax
    53be:	test   rsi,rsi
    53c1:	mov    DWORD PTR [rdi],0xa
    53c7:	je     53d7 <__ctype_b_loc@plt+0x3557>
    53c9:	test   rdx,rdx
    53cc:	je     53d7 <__ctype_b_loc@plt+0x3557>
    53ce:	mov    QWORD PTR [rdi+0x28],rsi
    53d2:	mov    QWORD PTR [rdi+0x30],rdx
    53d6:	ret    
    53d7:	sub    rsp,0x8
    53db:	call   1aa0 <abort@plt>
    53e0:	push   r15
    53e2:	push   r14
    53e4:	lea    rax,[rip+0x205095]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    53eb:	push   r13
    53ed:	push   r12
    53ef:	mov    r13,rdi
    53f2:	push   rbp
    53f3:	push   rbx
    53f4:	mov    rbx,r8
    53f7:	mov    r14,rsi
    53fa:	mov    r15,rdx
    53fd:	sub    rsp,0x18
    5401:	test   r8,r8
    5404:	cmove  rbx,rax
    5408:	mov    QWORD PTR [rsp+0x8],rcx
    540d:	call   1ab0 <__errno_location@plt>
    5412:	mov    r12d,DWORD PTR [rax]
    5415:	mov    rbp,rax
    5418:	lea    rax,[rbx+0x8]
    541c:	sub    rsp,0x8
    5420:	mov    r9d,DWORD PTR [rbx+0x4]
    5424:	push   QWORD PTR [rbx+0x30]
    5427:	mov    r8d,DWORD PTR [rbx]
    542a:	push   QWORD PTR [rbx+0x28]
    542d:	mov    rdx,r15
    5430:	push   rax
    5431:	mov    rcx,QWORD PTR [rsp+0x28]
    5436:	mov    rsi,r14
    5439:	mov    rdi,r13
    543c:	call   3f80 <__ctype_b_loc@plt+0x2100>
    5441:	mov    DWORD PTR [rbp+0x0],r12d
    5445:	add    rsp,0x38
    5449:	pop    rbx
    544a:	pop    rbp
    544b:	pop    r12
    544d:	pop    r13
    544f:	pop    r14
    5451:	pop    r15
    5453:	ret    
    5454:	xchg   ax,ax
    5456:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5460:	push   r15
    5462:	push   r14
    5464:	lea    rax,[rip+0x205015]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    546b:	push   r13
    546d:	push   r12
    546f:	mov    r12,rdx
    5472:	push   rbp
    5473:	push   rbx
    5474:	mov    rbx,rcx
    5477:	mov    r14,rdi
    547a:	mov    r15,rsi
    547d:	sub    rsp,0x38
    5481:	test   rcx,rcx
    5484:	cmove  rbx,rax
    5488:	xor    ebp,ebp
    548a:	call   1ab0 <__errno_location@plt>
    548f:	test   r12,r12
    5492:	mov    r13,rax
    5495:	mov    eax,DWORD PTR [rax]
    5497:	sete   bpl
    549b:	or     ebp,DWORD PTR [rbx+0x4]
    549e:	lea    r10,[rbx+0x8]
    54a2:	sub    rsp,0x8
    54a6:	mov    r8d,DWORD PTR [rbx]
    54a9:	mov    rcx,r15
    54ac:	mov    DWORD PTR [rsp+0x14],eax
    54b0:	push   QWORD PTR [rbx+0x30]
    54b3:	mov    rdx,r14
    54b6:	push   QWORD PTR [rbx+0x28]
    54b9:	push   r10
    54bb:	xor    esi,esi
    54bd:	mov    r9d,ebp
    54c0:	xor    edi,edi
    54c2:	mov    QWORD PTR [rsp+0x40],r10
    54c7:	call   3f80 <__ctype_b_loc@plt+0x2100>
    54cc:	lea    rsi,[rax+0x1]
    54d0:	mov    QWORD PTR [rsp+0x48],rax
    54d5:	add    rsp,0x20
    54d9:	mov    rdi,rsi
    54dc:	mov    QWORD PTR [rsp+0x18],rsi
    54e1:	call   6530 <__ctype_b_loc@plt+0x46b0>
    54e6:	mov    QWORD PTR [rsp+0x10],rax
    54eb:	sub    rsp,0x8
    54ef:	push   QWORD PTR [rbx+0x30]
    54f2:	push   QWORD PTR [rbx+0x28]
    54f5:	mov    r10,QWORD PTR [rsp+0x38]
    54fa:	mov    r9d,ebp
    54fd:	mov    r8d,DWORD PTR [rbx]
    5500:	mov    rcx,r15
    5503:	mov    rdx,r14
    5506:	mov    rdi,rax
    5509:	push   r10
    550b:	mov    rsi,QWORD PTR [rsp+0x38]
    5510:	call   3f80 <__ctype_b_loc@plt+0x2100>
    5515:	mov    eax,DWORD PTR [rsp+0x2c]
    5519:	add    rsp,0x20
    551d:	test   r12,r12
    5520:	mov    DWORD PTR [r13+0x0],eax
    5524:	je     552f <__ctype_b_loc@plt+0x36af>
    5526:	mov    r11,QWORD PTR [rsp+0x28]
    552b:	mov    QWORD PTR [r12],r11
    552f:	mov    rax,QWORD PTR [rsp+0x10]
    5534:	add    rsp,0x38
    5538:	pop    rbx
    5539:	pop    rbp
    553a:	pop    r12
    553c:	pop    r13
    553e:	pop    r14
    5540:	pop    r15
    5542:	ret    
    5543:	nop    DWORD PTR [rax]
    5546:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5550:	mov    rcx,rdx
    5553:	xor    edx,edx
    5555:	jmp    5460 <__ctype_b_loc@plt+0x35e0>
    555a:	nop    WORD PTR [rax+rax*1+0x0]
    5560:	mov    eax,DWORD PTR [rip+0x204d12]        # 20a278 <_obstack_memory_used@@Base+0x203688>
    5566:	push   r12
    5568:	mov    r12,QWORD PTR [rip+0x204d11]        # 20a280 <_obstack_memory_used@@Base+0x203690>
    556f:	push   rbp
    5570:	push   rbx
    5571:	cmp    eax,0x1
    5574:	jbe    55a1 <__ctype_b_loc@plt+0x3721>
    5576:	sub    eax,0x2
    5579:	lea    rbx,[r12+0x18]
    557e:	shl    rax,0x4
    5582:	lea    rbp,[r12+rax*1+0x28]
    5587:	nop    WORD PTR [rax+rax*1+0x0]
    5590:	mov    rdi,QWORD PTR [rbx]
    5593:	add    rbx,0x10
    5597:	call   1e90 <__ctype_b_loc@plt+0x10>
    559c:	cmp    rbx,rbp
    559f:	jne    5590 <__ctype_b_loc@plt+0x3710>
    55a1:	mov    rdi,QWORD PTR [r12+0x8]
    55a6:	lea    rbx,[rip+0x204dd3]        # 20a380 <stderr@@GLIBC_2.2.5+0x80>
    55ad:	cmp    rdi,rbx
    55b0:	je     55c9 <__ctype_b_loc@plt+0x3749>
    55b2:	call   1e90 <__ctype_b_loc@plt+0x10>
    55b7:	mov    QWORD PTR [rip+0x204cce],0x100        # 20a290 <_obstack_memory_used@@Base+0x2036a0>
    55c2:	mov    QWORD PTR [rip+0x204ccf],rbx        # 20a298 <_obstack_memory_used@@Base+0x2036a8>
    55c9:	lea    rbx,[rip+0x204cc0]        # 20a290 <_obstack_memory_used@@Base+0x2036a0>
    55d0:	cmp    r12,rbx
    55d3:	je     55e4 <__ctype_b_loc@plt+0x3764>
    55d5:	mov    rdi,r12
    55d8:	call   1e90 <__ctype_b_loc@plt+0x10>
    55dd:	mov    QWORD PTR [rip+0x204c9c],rbx        # 20a280 <_obstack_memory_used@@Base+0x203690>
    55e4:	pop    rbx
    55e5:	mov    DWORD PTR [rip+0x204c89],0x1        # 20a278 <_obstack_memory_used@@Base+0x203688>
    55ef:	pop    rbp
    55f0:	pop    r12
    55f2:	ret    
    55f3:	nop    DWORD PTR [rax]
    55f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5600:	lea    rcx,[rip+0x204e79]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    5607:	mov    rdx,0xffffffffffffffff
    560e:	jmp    5110 <__ctype_b_loc@plt+0x3290>
    5613:	nop    DWORD PTR [rax]
    5616:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5620:	lea    rcx,[rip+0x204e59]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    5627:	jmp    5110 <__ctype_b_loc@plt+0x3290>
    562c:	nop    DWORD PTR [rax+0x0]
    5630:	lea    rcx,[rip+0x204e49]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    5637:	mov    rsi,rdi
    563a:	mov    rdx,0xffffffffffffffff
    5641:	xor    edi,edi
    5643:	jmp    5110 <__ctype_b_loc@plt+0x3290>
    5648:	nop    DWORD PTR [rax+rax*1+0x0]
    5650:	lea    rcx,[rip+0x204e29]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    5657:	mov    rdx,rsi
    565a:	mov    rsi,rdi
    565d:	xor    edi,edi
    565f:	jmp    5110 <__ctype_b_loc@plt+0x3290>
    5664:	xchg   ax,ax
    5666:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5670:	sub    rsp,0x48
    5674:	mov    rax,rdx
    5677:	mov    rdx,QWORD PTR fs:0x28
    5680:	mov    QWORD PTR [rsp+0x38],rdx
    5685:	xor    edx,edx
    5687:	cmp    esi,0xa
    568a:	je     5714 <__ctype_b_loc@plt+0x3894>
    5690:	mov    DWORD PTR [rsp],esi
    5693:	mov    rcx,rsp
    5696:	mov    rdx,0xffffffffffffffff
    569d:	mov    rsi,rax
    56a0:	mov    DWORD PTR [rsp+0x4],0x0
    56a8:	mov    DWORD PTR [rsp+0x8],0x0
    56b0:	mov    DWORD PTR [rsp+0xc],0x0
    56b8:	mov    DWORD PTR [rsp+0x10],0x0
    56c0:	mov    DWORD PTR [rsp+0x14],0x0
    56c8:	mov    DWORD PTR [rsp+0x18],0x0
    56d0:	mov    DWORD PTR [rsp+0x1c],0x0
    56d8:	mov    DWORD PTR [rsp+0x20],0x0
    56e0:	mov    DWORD PTR [rsp+0x24],0x0
    56e8:	mov    QWORD PTR [rsp+0x28],0x0
    56f1:	mov    QWORD PTR [rsp+0x30],0x0
    56fa:	call   5110 <__ctype_b_loc@plt+0x3290>
    56ff:	mov    rcx,QWORD PTR [rsp+0x38]
    5704:	xor    rcx,QWORD PTR fs:0x28
    570d:	jne    5719 <__ctype_b_loc@plt+0x3899>
    570f:	add    rsp,0x48
    5713:	ret    
    5714:	call   1aa0 <abort@plt>
    5719:	call   1b70 <__stack_chk_fail@plt>
    571e:	xchg   ax,ax
    5720:	sub    rsp,0x48
    5724:	mov    rax,rdx
    5727:	mov    rdx,rcx
    572a:	mov    rcx,QWORD PTR fs:0x28
    5733:	mov    QWORD PTR [rsp+0x38],rcx
    5738:	xor    ecx,ecx
    573a:	cmp    esi,0xa
    573d:	je     57bc <__ctype_b_loc@plt+0x393c>
    573f:	mov    DWORD PTR [rsp],esi
    5742:	mov    rcx,rsp
    5745:	mov    rsi,rax
    5748:	mov    DWORD PTR [rsp+0x4],0x0
    5750:	mov    DWORD PTR [rsp+0x8],0x0
    5758:	mov    DWORD PTR [rsp+0xc],0x0
    5760:	mov    DWORD PTR [rsp+0x10],0x0
    5768:	mov    DWORD PTR [rsp+0x14],0x0
    5770:	mov    DWORD PTR [rsp+0x18],0x0
    5778:	mov    DWORD PTR [rsp+0x1c],0x0
    5780:	mov    DWORD PTR [rsp+0x20],0x0
    5788:	mov    DWORD PTR [rsp+0x24],0x0
    5790:	mov    QWORD PTR [rsp+0x28],0x0
    5799:	mov    QWORD PTR [rsp+0x30],0x0
    57a2:	call   5110 <__ctype_b_loc@plt+0x3290>
    57a7:	mov    rdx,QWORD PTR [rsp+0x38]
    57ac:	xor    rdx,QWORD PTR fs:0x28
    57b5:	jne    57c1 <__ctype_b_loc@plt+0x3941>
    57b7:	add    rsp,0x48
    57bb:	ret    
    57bc:	call   1aa0 <abort@plt>
    57c1:	call   1b70 <__stack_chk_fail@plt>
    57c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    57d0:	mov    rdx,rsi
    57d3:	mov    esi,edi
    57d5:	xor    edi,edi
    57d7:	jmp    5670 <__ctype_b_loc@plt+0x37f0>
    57dc:	nop    DWORD PTR [rax+0x0]
    57e0:	mov    rcx,rdx
    57e3:	mov    rdx,rsi
    57e6:	mov    esi,edi
    57e8:	xor    edi,edi
    57ea:	jmp    5720 <__ctype_b_loc@plt+0x38a0>
    57ef:	nop
    57f0:	sub    rsp,0x48
    57f4:	mov    ecx,edx
    57f6:	mov    rax,QWORD PTR fs:0x28
    57ff:	mov    QWORD PTR [rsp+0x38],rax
    5804:	xor    eax,eax
    5806:	mov    rax,QWORD PTR [rip+0x204c73]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    580d:	mov    r8,rsp
    5810:	and    ecx,0x1f
    5813:	mov    QWORD PTR [rsp],rax
    5817:	mov    rax,QWORD PTR [rip+0x204c6a]        # 20a488 <stderr@@GLIBC_2.2.5+0x188>
    581e:	mov    QWORD PTR [rsp+0x8],rax
    5823:	mov    rax,QWORD PTR [rip+0x204c66]        # 20a490 <stderr@@GLIBC_2.2.5+0x190>
    582a:	mov    QWORD PTR [rsp+0x10],rax
    582f:	mov    rax,QWORD PTR [rip+0x204c62]        # 20a498 <stderr@@GLIBC_2.2.5+0x198>
    5836:	mov    QWORD PTR [rsp+0x18],rax
    583b:	mov    rax,QWORD PTR [rip+0x204c5e]        # 20a4a0 <stderr@@GLIBC_2.2.5+0x1a0>
    5842:	mov    QWORD PTR [rsp+0x20],rax
    5847:	mov    rax,QWORD PTR [rip+0x204c5a]        # 20a4a8 <stderr@@GLIBC_2.2.5+0x1a8>
    584e:	mov    QWORD PTR [rsp+0x28],rax
    5853:	mov    rax,QWORD PTR [rip+0x204c56]        # 20a4b0 <stderr@@GLIBC_2.2.5+0x1b0>
    585a:	mov    QWORD PTR [rsp+0x30],rax
    585f:	mov    eax,edx
    5861:	shr    al,0x5
    5864:	movzx  eax,al
    5867:	lea    r9,[r8+rax*4+0x8]
    586c:	mov    edx,DWORD PTR [r9]
    586f:	mov    eax,edx
    5871:	shr    eax,cl
    5873:	xor    eax,0x1
    5876:	and    eax,0x1
    5879:	shl    eax,cl
    587b:	mov    rcx,rsp
    587e:	xor    eax,edx
    5880:	mov    rdx,rsi
    5883:	mov    rsi,rdi
    5886:	mov    DWORD PTR [r9],eax
    5889:	xor    edi,edi
    588b:	call   5110 <__ctype_b_loc@plt+0x3290>
    5890:	mov    rsi,QWORD PTR [rsp+0x38]
    5895:	xor    rsi,QWORD PTR fs:0x28
    589e:	jne    58a5 <__ctype_b_loc@plt+0x3a25>
    58a0:	add    rsp,0x48
    58a4:	ret    
    58a5:	call   1b70 <__stack_chk_fail@plt>
    58aa:	nop    WORD PTR [rax+rax*1+0x0]
    58b0:	movsx  edx,sil
    58b4:	mov    rsi,0xffffffffffffffff
    58bb:	jmp    57f0 <__ctype_b_loc@plt+0x3970>
    58c0:	mov    edx,0x3a
    58c5:	mov    rsi,0xffffffffffffffff
    58cc:	jmp    57f0 <__ctype_b_loc@plt+0x3970>
    58d1:	nop    DWORD PTR [rax+rax*1+0x0]
    58d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    58e0:	mov    edx,0x3a
    58e5:	jmp    57f0 <__ctype_b_loc@plt+0x3970>
    58ea:	nop    WORD PTR [rax+rax*1+0x0]
    58f0:	sub    rsp,0x48
    58f4:	mov    rax,rdx
    58f7:	mov    rdx,QWORD PTR fs:0x28
    5900:	mov    QWORD PTR [rsp+0x38],rdx
    5905:	xor    edx,edx
    5907:	cmp    esi,0xa
    590a:	je     5994 <__ctype_b_loc@plt+0x3b14>
    5910:	mov    DWORD PTR [rsp],esi
    5913:	mov    rcx,rsp
    5916:	mov    rdx,0xffffffffffffffff
    591d:	mov    rsi,rax
    5920:	mov    DWORD PTR [rsp+0x4],0x0
    5928:	mov    DWORD PTR [rsp+0x8],0x0
    5930:	mov    DWORD PTR [rsp+0x10],0x0
    5938:	mov    DWORD PTR [rsp+0x14],0x0
    5940:	mov    DWORD PTR [rsp+0x18],0x0
    5948:	mov    DWORD PTR [rsp+0x1c],0x0
    5950:	mov    DWORD PTR [rsp+0x20],0x0
    5958:	mov    DWORD PTR [rsp+0x24],0x0
    5960:	mov    QWORD PTR [rsp+0x28],0x0
    5969:	mov    QWORD PTR [rsp+0x30],0x0
    5972:	mov    DWORD PTR [rsp+0xc],0x4000000
    597a:	call   5110 <__ctype_b_loc@plt+0x3290>
    597f:	mov    rcx,QWORD PTR [rsp+0x38]
    5984:	xor    rcx,QWORD PTR fs:0x28
    598d:	jne    5999 <__ctype_b_loc@plt+0x3b19>
    598f:	add    rsp,0x48
    5993:	ret    
    5994:	call   1aa0 <abort@plt>
    5999:	call   1b70 <__stack_chk_fail@plt>
    599e:	xchg   ax,ax
    59a0:	sub    rsp,0x48
    59a4:	mov    r9,rcx
    59a7:	mov    rcx,QWORD PTR [rip+0x204ad2]        # 20a480 <stderr@@GLIBC_2.2.5+0x180>
    59ae:	mov    rax,QWORD PTR fs:0x28
    59b7:	mov    QWORD PTR [rsp+0x38],rax
    59bc:	xor    eax,eax
    59be:	test   rsi,rsi
    59c1:	mov    QWORD PTR [rsp],rcx
    59c5:	mov    rcx,QWORD PTR [rip+0x204abc]        # 20a488 <stderr@@GLIBC_2.2.5+0x188>
    59cc:	mov    DWORD PTR [rsp],0xa
    59d3:	mov    QWORD PTR [rsp+0x8],rcx
    59d8:	mov    rcx,QWORD PTR [rip+0x204ab1]        # 20a490 <stderr@@GLIBC_2.2.5+0x190>
    59df:	mov    QWORD PTR [rsp+0x10],rcx
    59e4:	mov    rcx,QWORD PTR [rip+0x204aad]        # 20a498 <stderr@@GLIBC_2.2.5+0x198>
    59eb:	mov    QWORD PTR [rsp+0x18],rcx
    59f0:	mov    rcx,QWORD PTR [rip+0x204aa9]        # 20a4a0 <stderr@@GLIBC_2.2.5+0x1a0>
    59f7:	mov    QWORD PTR [rsp+0x20],rcx
    59fc:	mov    rcx,QWORD PTR [rip+0x204aa5]        # 20a4a8 <stderr@@GLIBC_2.2.5+0x1a8>
    5a03:	mov    QWORD PTR [rsp+0x28],rcx
    5a08:	mov    rcx,QWORD PTR [rip+0x204aa1]        # 20a4b0 <stderr@@GLIBC_2.2.5+0x1b0>
    5a0f:	mov    QWORD PTR [rsp+0x30],rcx
    5a14:	je     5a48 <__ctype_b_loc@plt+0x3bc8>
    5a16:	test   rdx,rdx
    5a19:	je     5a48 <__ctype_b_loc@plt+0x3bc8>
    5a1b:	mov    QWORD PTR [rsp+0x28],rsi
    5a20:	mov    QWORD PTR [rsp+0x30],rdx
    5a25:	mov    rcx,rsp
    5a28:	mov    rdx,r8
    5a2b:	mov    rsi,r9
    5a2e:	call   5110 <__ctype_b_loc@plt+0x3290>
    5a33:	mov    rdi,QWORD PTR [rsp+0x38]
    5a38:	xor    rdi,QWORD PTR fs:0x28
    5a41:	jne    5a4d <__ctype_b_loc@plt+0x3bcd>
    5a43:	add    rsp,0x48
    5a47:	ret    
    5a48:	call   1aa0 <abort@plt>
    5a4d:	call   1b70 <__stack_chk_fail@plt>
    5a52:	nop    DWORD PTR [rax+0x0]
    5a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5a60:	mov    r8,0xffffffffffffffff
    5a67:	jmp    59a0 <__ctype_b_loc@plt+0x3b20>
    5a6c:	nop    DWORD PTR [rax+0x0]
    5a70:	mov    rcx,rdx
    5a73:	mov    r8,0xffffffffffffffff
    5a7a:	mov    rdx,rsi
    5a7d:	mov    rsi,rdi
    5a80:	xor    edi,edi
    5a82:	jmp    59a0 <__ctype_b_loc@plt+0x3b20>
    5a87:	nop    WORD PTR [rax+rax*1+0x0]
    5a90:	mov    r8,rcx
    5a93:	mov    rcx,rdx
    5a96:	mov    rdx,rsi
    5a99:	mov    rsi,rdi
    5a9c:	xor    edi,edi
    5a9e:	jmp    59a0 <__ctype_b_loc@plt+0x3b20>
    5aa3:	nop    DWORD PTR [rax]
    5aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5ab0:	lea    rcx,[rip+0x204789]        # 20a240 <_obstack_memory_used@@Base+0x203650>
    5ab7:	jmp    5110 <__ctype_b_loc@plt+0x3290>
    5abc:	nop    DWORD PTR [rax+0x0]
    5ac0:	lea    rcx,[rip+0x204779]        # 20a240 <_obstack_memory_used@@Base+0x203650>
    5ac7:	mov    rdx,rsi
    5aca:	mov    rsi,rdi
    5acd:	xor    edi,edi
    5acf:	jmp    5110 <__ctype_b_loc@plt+0x3290>
    5ad4:	xchg   ax,ax
    5ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5ae0:	lea    rcx,[rip+0x204759]        # 20a240 <_obstack_memory_used@@Base+0x203650>
    5ae7:	mov    rdx,0xffffffffffffffff
    5aee:	jmp    5110 <__ctype_b_loc@plt+0x3290>
    5af3:	nop    DWORD PTR [rax]
    5af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5b00:	lea    rcx,[rip+0x204739]        # 20a240 <_obstack_memory_used@@Base+0x203650>
    5b07:	mov    rsi,rdi
    5b0a:	mov    rdx,0xffffffffffffffff
    5b11:	xor    edi,edi
    5b13:	jmp    5110 <__ctype_b_loc@plt+0x3290>
    5b18:	nop    DWORD PTR [rax+rax*1+0x0]
    5b20:	push   r12
    5b22:	push   rbp
    5b23:	push   rbx
    5b24:	mov    rdx,QWORD PTR [rdi+0x30]
    5b28:	mov    rbx,rdi
    5b2b:	mov    r12,QWORD PTR [rdi+0x28]
    5b2f:	mov    rbp,rdx
    5b32:	sub    rbp,r12
    5b35:	sub    rbp,0x1
    5b39:	cmp    rdx,r12
    5b3c:	je     5c00 <__ctype_b_loc@plt+0x3d80>
    5b42:	mov    rcx,QWORD PTR [rbx+0x48]
    5b46:	lea    rax,[rdx+rcx*1]
    5b4a:	not    rcx
    5b4d:	mov    rdx,QWORD PTR [rbx+0x38]
    5b51:	and    rax,rcx
    5b54:	mov    rcx,QWORD PTR [rbx+0x20]
    5b58:	mov    rsi,rax
    5b5b:	mov    rdi,rdx
    5b5e:	mov    QWORD PTR [rbx+0x30],rax
    5b62:	sub    rsi,rcx
    5b65:	sub    rdi,rcx
    5b68:	cmp    rsi,rdi
    5b6b:	jbe    5b74 <__ctype_b_loc@plt+0x3cf4>
    5b6d:	mov    QWORD PTR [rbx+0x30],rdx
    5b71:	mov    rax,rdx
    5b74:	mov    QWORD PTR [rbx+0x28],rax
    5b78:	mov    rdx,QWORD PTR [rbx+0x88]
    5b7f:	mov    rax,QWORD PTR [rbx+0x90]
    5b86:	sub    rax,rdx
    5b89:	cmp    rax,0x7
    5b8d:	jbe    5be0 <__ctype_b_loc@plt+0x3d60>
    5b8f:	mov    QWORD PTR [rdx],r12
    5b92:	mov    rdx,QWORD PTR [rbx+0xe0]
    5b99:	mov    rax,QWORD PTR [rbx+0xe8]
    5ba0:	add    QWORD PTR [rbx+0x88],0x8
    5ba8:	sub    rax,rdx
    5bab:	cmp    rax,0x7
    5baf:	ja     5bc9 <__ctype_b_loc@plt+0x3d49>
    5bb1:	lea    rdi,[rbx+0xc8]
    5bb8:	mov    esi,0x8
    5bbd:	call   6a60 <_obstack_newchunk@@Base>
    5bc2:	mov    rdx,QWORD PTR [rbx+0xe0]
    5bc9:	mov    QWORD PTR [rdx],rbp
    5bcc:	add    QWORD PTR [rbx+0xe0],0x8
    5bd4:	add    QWORD PTR [rbx],0x1
    5bd8:	pop    rbx
    5bd9:	pop    rbp
    5bda:	pop    r12
    5bdc:	ret    
    5bdd:	nop    DWORD PTR [rax]
    5be0:	lea    rdi,[rbx+0x70]
    5be4:	mov    esi,0x8
    5be9:	call   6a60 <_obstack_newchunk@@Base>
    5bee:	mov    rdx,QWORD PTR [rbx+0x88]
    5bf5:	jmp    5b8f <__ctype_b_loc@plt+0x3d0f>
    5bf7:	nop    WORD PTR [rax+rax*1+0x0]
    5c00:	or     BYTE PTR [rdi+0x68],0x2
    5c04:	jmp    5b42 <__ctype_b_loc@plt+0x3cc2>
    5c09:	nop    DWORD PTR [rax+0x0]
    5c10:	push   r12
    5c12:	mov    r12,QWORD PTR [rip+0x20439f]        # 209fb8 <_obstack_memory_used@@Base+0x2033c8>
    5c19:	xor    edx,edx
    5c1b:	push   rbp
    5c1c:	mov    rbp,QWORD PTR [rip+0x2043b5]        # 209fd8 <_obstack_memory_used@@Base+0x2033e8>
    5c23:	xor    esi,esi
    5c25:	push   rbx
    5c26:	mov    rbx,rdi
    5c29:	mov    QWORD PTR [rdi],0x0
    5c30:	mov    QWORD PTR [rdi+0x8],0x0
    5c38:	mov    QWORD PTR [rdi+0x10],0x0
    5c40:	lea    rdi,[rdi+0x18]
    5c44:	mov    r8,r12
    5c47:	mov    rcx,rbp
    5c4a:	call   6a20 <_obstack_begin@@Base>
    5c4f:	lea    rdi,[rbx+0x70]
    5c53:	mov    r8,r12
    5c56:	mov    rcx,rbp
    5c59:	xor    edx,edx
    5c5b:	xor    esi,esi
    5c5d:	call   6a20 <_obstack_begin@@Base>
    5c62:	lea    rdi,[rbx+0xc8]
    5c69:	mov    r8,r12
    5c6c:	mov    rcx,rbp
    5c6f:	pop    rbx
    5c70:	pop    rbp
    5c71:	pop    r12
    5c73:	xor    edx,edx
    5c75:	xor    esi,esi
    5c77:	jmp    6a20 <_obstack_begin@@Base>
    5c7c:	nop    DWORD PTR [rax+0x0]
    5c80:	push   rbx
    5c81:	mov    rbx,rdi
    5c84:	lea    rdi,[rdi+0x18]
    5c88:	xor    esi,esi
    5c8a:	call   6b80 <_obstack_free@@Base>
    5c8f:	lea    rdi,[rbx+0x70]
    5c93:	xor    esi,esi
    5c95:	call   6b80 <_obstack_free@@Base>
    5c9a:	lea    rdi,[rbx+0xc8]
    5ca1:	xor    esi,esi
    5ca3:	pop    rbx
    5ca4:	jmp    6b80 <_obstack_free@@Base>
    5ca9:	nop    DWORD PTR [rax+0x0]
    5cb0:	push   r12
    5cb2:	push   rbp
    5cb3:	lea    r12,[rsi+0x18]
    5cb7:	push   rbx
    5cb8:	mov    rbp,rdi
    5cbb:	mov    rbx,rsi
    5cbe:	sub    rsp,0x10
    5cc2:	jmp    5cd6 <__ctype_b_loc@plt+0x3e56>
    5cc4:	nop    DWORD PTR [rax+0x0]
    5cc8:	lea    rcx,[rdx+0x1]
    5ccc:	test   eax,eax
    5cce:	mov    QWORD PTR [rbx+0x30],rcx
    5cd2:	mov    BYTE PTR [rdx],al
    5cd4:	je     5d18 <__ctype_b_loc@plt+0x3e98>
    5cd6:	mov    rdi,rbp
    5cd9:	call   1c10 <fgetc@plt>
    5cde:	cmp    eax,0xffffffff
    5ce1:	je     5d30 <__ctype_b_loc@plt+0x3eb0>
    5ce3:	mov    rdx,QWORD PTR [rbx+0x30]
    5ce7:	cmp    QWORD PTR [rbx+0x38],rdx
    5ceb:	jne    5cc8 <__ctype_b_loc@plt+0x3e48>
    5ced:	mov    esi,0x1
    5cf2:	mov    rdi,r12
    5cf5:	mov    DWORD PTR [rsp+0xc],eax
    5cf9:	call   6a60 <_obstack_newchunk@@Base>
    5cfe:	mov    rdx,QWORD PTR [rbx+0x30]
    5d02:	mov    eax,DWORD PTR [rsp+0xc]
    5d06:	lea    rcx,[rdx+0x1]
    5d0a:	test   eax,eax
    5d0c:	mov    QWORD PTR [rbx+0x30],rcx
    5d10:	mov    BYTE PTR [rdx],al
    5d12:	jne    5cd6 <__ctype_b_loc@plt+0x3e56>
    5d14:	nop    DWORD PTR [rax+0x0]
    5d18:	mov    rdi,rbx
    5d1b:	call   5b20 <__ctype_b_loc@plt+0x3ca0>
    5d20:	mov    rdi,rbp
    5d23:	call   1c10 <fgetc@plt>
    5d28:	cmp    eax,0xffffffff
    5d2b:	jne    5ce3 <__ctype_b_loc@plt+0x3e63>
    5d2d:	nop    DWORD PTR [rax]
    5d30:	mov    rax,QWORD PTR [rbx+0x30]
    5d34:	cmp    QWORD PTR [rbx+0x28],rax
    5d38:	je     5d57 <__ctype_b_loc@plt+0x3ed7>
    5d3a:	cmp    QWORD PTR [rbx+0x38],rax
    5d3e:	je     5e92 <__ctype_b_loc@plt+0x4012>
    5d44:	lea    rdx,[rax+0x1]
    5d48:	mov    rdi,rbx
    5d4b:	mov    QWORD PTR [rbx+0x30],rdx
    5d4f:	mov    BYTE PTR [rax],0x0
    5d52:	call   5b20 <__ctype_b_loc@plt+0x3ca0>
    5d57:	mov    rdx,QWORD PTR [rbx+0x88]
    5d5e:	mov    rax,QWORD PTR [rbx+0x90]
    5d65:	sub    rax,rdx
    5d68:	cmp    rax,0x7
    5d6c:	jbe    5e60 <__ctype_b_loc@plt+0x3fe0>
    5d72:	mov    QWORD PTR [rdx],0x0
    5d79:	mov    rax,QWORD PTR [rbx+0x88]
    5d80:	mov    rsi,QWORD PTR [rbx+0x80]
    5d87:	lea    rdx,[rax+0x8]
    5d8b:	cmp    rdx,rsi
    5d8e:	mov    QWORD PTR [rbx+0x88],rdx
    5d95:	je     5e86 <__ctype_b_loc@plt+0x4006>
    5d9b:	mov    rcx,QWORD PTR [rbx+0xa0]
    5da2:	lea    rax,[rdx+rcx*1]
    5da6:	not    rcx
    5da9:	mov    rdx,QWORD PTR [rbx+0x78]
    5dad:	and    rax,rcx
    5db0:	mov    rcx,QWORD PTR [rbx+0x90]
    5db7:	mov    rdi,rax
    5dba:	mov    QWORD PTR [rbx+0x88],rax
    5dc1:	sub    rdi,rdx
    5dc4:	mov    r8,rcx
    5dc7:	sub    r8,rdx
    5dca:	cmp    rdi,r8
    5dcd:	jbe    5dd9 <__ctype_b_loc@plt+0x3f59>
    5dcf:	mov    QWORD PTR [rbx+0x88],rcx
    5dd6:	mov    rax,rcx
    5dd9:	mov    QWORD PTR [rbx+0x8],rsi
    5ddd:	mov    rdx,QWORD PTR [rbx+0xe0]
    5de4:	mov    rsi,QWORD PTR [rbx+0xd8]
    5deb:	mov    QWORD PTR [rbx+0x80],rax
    5df2:	cmp    rsi,rdx
    5df5:	je     5e7a <__ctype_b_loc@plt+0x3ffa>
    5dfb:	mov    rcx,QWORD PTR [rbx+0xf8]
    5e02:	lea    rax,[rdx+rcx*1]
    5e06:	not    rcx
    5e09:	mov    rdx,QWORD PTR [rbx+0xe8]
    5e10:	and    rax,rcx
    5e13:	mov    rcx,QWORD PTR [rbx+0xd0]
    5e1a:	mov    rdi,rax
    5e1d:	mov    r9,rdx
    5e20:	mov    QWORD PTR [rbx+0xe0],rax
    5e27:	sub    rdi,rcx
    5e2a:	sub    r9,rcx
    5e2d:	cmp    rdi,r9
    5e30:	jbe    5e3c <__ctype_b_loc@plt+0x3fbc>
    5e32:	mov    QWORD PTR [rbx+0xe0],rdx
    5e39:	mov    rax,rdx
    5e3c:	mov    QWORD PTR [rbx+0xd8],rax
    5e43:	mov    QWORD PTR [rbx+0x10],rsi
    5e47:	mov    rdi,rbp
    5e4a:	call   1af0 <ferror@plt>
    5e4f:	test   eax,eax
    5e51:	sete   al
    5e54:	add    rsp,0x10
    5e58:	pop    rbx
    5e59:	pop    rbp
    5e5a:	pop    r12
    5e5c:	ret    
    5e5d:	nop    DWORD PTR [rax]
    5e60:	lea    rdi,[rbx+0x70]
    5e64:	mov    esi,0x8
    5e69:	call   6a60 <_obstack_newchunk@@Base>
    5e6e:	mov    rdx,QWORD PTR [rbx+0x88]
    5e75:	jmp    5d72 <__ctype_b_loc@plt+0x3ef2>
    5e7a:	or     BYTE PTR [rbx+0x118],0x2
    5e81:	jmp    5dfb <__ctype_b_loc@plt+0x3f7b>
    5e86:	or     BYTE PTR [rbx+0xc0],0x2
    5e8d:	jmp    5d9b <__ctype_b_loc@plt+0x3f1b>
    5e92:	lea    rdi,[rbx+0x18]
    5e96:	mov    esi,0x1
    5e9b:	call   6a60 <_obstack_newchunk@@Base>
    5ea0:	mov    rax,QWORD PTR [rbx+0x30]
    5ea4:	jmp    5d44 <__ctype_b_loc@plt+0x3ec4>
    5ea9:	nop    DWORD PTR [rax+0x0]
    5eb0:	push   r13
    5eb2:	push   r12
    5eb4:	mov    r13d,edi
    5eb7:	push   rbp
    5eb8:	push   rbx
    5eb9:	mov    r12,rsi
    5ebc:	mov    rbx,rdx
    5ebf:	sub    rsp,0x8
    5ec3:	nop    DWORD PTR [rax+rax*1+0x0]
    5ec8:	mov    rdx,rbx
    5ecb:	mov    rsi,r12
    5ece:	mov    edi,r13d
    5ed1:	call   1c50 <read@plt>
    5ed6:	test   rax,rax
    5ed9:	mov    rbp,rax
    5edc:	jns    5f00 <__ctype_b_loc@plt+0x4080>
    5ede:	call   1ab0 <__errno_location@plt>
    5ee3:	mov    eax,DWORD PTR [rax]
    5ee5:	cmp    eax,0x4
    5ee8:	je     5ec8 <__ctype_b_loc@plt+0x4048>
    5eea:	cmp    rbx,0x7fffe000
    5ef1:	jbe    5f00 <__ctype_b_loc@plt+0x4080>
    5ef3:	cmp    eax,0x16
    5ef6:	jne    5f00 <__ctype_b_loc@plt+0x4080>
    5ef8:	mov    ebx,0x7fffe000
    5efd:	jmp    5ec8 <__ctype_b_loc@plt+0x4048>
    5eff:	nop
    5f00:	add    rsp,0x8
    5f04:	mov    rax,rbp
    5f07:	pop    rbx
    5f08:	pop    rbp
    5f09:	pop    r12
    5f0b:	pop    r13
    5f0d:	ret    
    5f0e:	xchg   ax,ax
    5f10:	push   r15
    5f12:	push   r14
    5f14:	push   r13
    5f16:	push   r12
    5f18:	mov    r12,r9
    5f1b:	push   rbp
    5f1c:	push   rbx
    5f1d:	mov    rbp,rdi
    5f20:	mov    rbx,r8
    5f23:	sub    rsp,0x28
    5f27:	test   rsi,rsi
    5f2a:	je     62c0 <__ctype_b_loc@plt+0x4440>
    5f30:	mov    r8,rdx
    5f33:	lea    rdx,[rip+0x204e]        # 7f88 <_obstack_memory_used@@Base+0x1398>
    5f3a:	mov    r9,rcx
    5f3d:	xor    eax,eax
    5f3f:	mov    rcx,rsi
    5f42:	mov    esi,0x1
    5f47:	call   1e40 <__fprintf_chk@plt>
    5f4c:	lea    rsi,[rip+0x2048]        # 7f9b <_obstack_memory_used@@Base+0x13ab>
    5f53:	xor    edi,edi
    5f55:	mov    edx,0x5
    5f5a:	call   1b40 <dcgettext@plt>
    5f5f:	lea    rdx,[rip+0x235a]        # 82c0 <_obstack_memory_used@@Base+0x16d0>
    5f66:	mov    rcx,rax
    5f69:	mov    r8d,0x7e0
    5f6f:	mov    esi,0x1
    5f74:	mov    rdi,rbp
    5f77:	xor    eax,eax
    5f79:	call   1e40 <__fprintf_chk@plt>
    5f7e:	lea    rsi,[rip+0x20a3]        # 8028 <_obstack_memory_used@@Base+0x1438>
    5f85:	xor    edi,edi
    5f87:	mov    edx,0x5
    5f8c:	call   1b40 <dcgettext@plt>
    5f91:	mov    rsi,rbp
    5f94:	mov    rdi,rax
    5f97:	call   1c70 <fputs_unlocked@plt>
    5f9c:	cmp    r12,0x9
    5fa0:	ja     62e0 <__ctype_b_loc@plt+0x4460>
    5fa6:	lea    rdx,[rip+0x22d3]        # 8280 <_obstack_memory_used@@Base+0x1690>
    5fad:	movsxd rax,DWORD PTR [rdx+r12*4]
    5fb1:	add    rax,rdx
    5fb4:	jmp    rax
    5fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    5fc0:	mov    r9,QWORD PTR [rbx+0x38]
    5fc4:	mov    rax,QWORD PTR [rbx+0x10]
    5fc8:	lea    rsi,[rip+0x21c9]        # 8198 <_obstack_memory_used@@Base+0x15a8>
    5fcf:	mov    r8,QWORD PTR [rbx+0x8]
    5fd3:	mov    edx,0x5
    5fd8:	xor    edi,edi
    5fda:	mov    r13,QWORD PTR [rbx+0x30]
    5fde:	mov    r12,QWORD PTR [rbx+0x28]
    5fe2:	mov    QWORD PTR [rsp+0x10],r9
    5fe7:	mov    r15,QWORD PTR [rbx+0x20]
    5feb:	mov    r14,QWORD PTR [rbx+0x18]
    5fef:	mov    QWORD PTR [rsp],rax
    5ff3:	mov    QWORD PTR [rsp+0x8],r8
    5ff8:	mov    rbx,QWORD PTR [rbx]
    5ffb:	call   1b40 <dcgettext@plt>
    6000:	sub    rsp,0x8
    6004:	mov    r9,QWORD PTR [rsp+0x18]
    6009:	mov    rcx,rbx
    600c:	mov    rdx,rax
    600f:	mov    rdi,rbp
    6012:	mov    esi,0x1
    6017:	xor    eax,eax
    6019:	push   r9
    601b:	push   r13
    601d:	push   r12
    601f:	push   r15
    6021:	push   r14
    6023:	mov    r9,QWORD PTR [rsp+0x30]
    6028:	mov    r8,QWORD PTR [rsp+0x38]
    602d:	call   1e40 <__fprintf_chk@plt>
    6032:	add    rsp,0x30
    6036:	add    rsp,0x28
    603a:	pop    rbx
    603b:	pop    rbp
    603c:	pop    r12
    603e:	pop    r13
    6040:	pop    r14
    6042:	pop    r15
    6044:	ret    
    6045:	nop    DWORD PTR [rax]
    6048:	mov    r10,QWORD PTR [rbx+0x40]
    604c:	mov    r9,QWORD PTR [rbx+0x38]
    6050:	lea    rsi,[rip+0x2171]        # 81c8 <_obstack_memory_used@@Base+0x15d8>
    6057:	mov    rax,QWORD PTR [rbx+0x10]
    605b:	mov    r8,QWORD PTR [rbx+0x8]
    605f:	mov    edx,0x5
    6064:	mov    r13,QWORD PTR [rbx+0x30]
    6068:	mov    r12,QWORD PTR [rbx+0x28]
    606c:	mov    r15,QWORD PTR [rbx+0x20]
    6070:	mov    r14,QWORD PTR [rbx+0x18]
    6074:	mov    rbx,QWORD PTR [rbx]
    6077:	mov    QWORD PTR [rsp+0x18],r10
    607c:	mov    QWORD PTR [rsp+0x10],r9
    6081:	mov    QWORD PTR [rsp],rax
    6085:	mov    QWORD PTR [rsp+0x8],r8
    608a:	xor    edi,edi
    608c:	call   1b40 <dcgettext@plt>
    6091:	mov    r10,QWORD PTR [rsp+0x18]
    6096:	push   r10
    6098:	jmp    6004 <__ctype_b_loc@plt+0x4184>
    609d:	nop    DWORD PTR [rax]
    60a0:	call   1aa0 <abort@plt>
    60a5:	nop    DWORD PTR [rax]
    60a8:	mov    rbx,QWORD PTR [rbx]
    60ab:	lea    rsi,[rip+0x1eed]        # 7f9f <_obstack_memory_used@@Base+0x13af>
    60b2:	mov    edx,0x5
    60b7:	xor    edi,edi
    60b9:	call   1b40 <dcgettext@plt>
    60be:	add    rsp,0x28
    60c2:	mov    rcx,rbx
    60c5:	mov    rdi,rbp
    60c8:	pop    rbx
    60c9:	pop    rbp
    60ca:	pop    r12
    60cc:	pop    r13
    60ce:	pop    r14
    60d0:	pop    r15
    60d2:	mov    rdx,rax
    60d5:	mov    esi,0x1
    60da:	xor    eax,eax
    60dc:	jmp    1e40 <__fprintf_chk@plt>
    60e1:	nop    DWORD PTR [rax+0x0]
    60e8:	mov    r12,QWORD PTR [rbx+0x8]
    60ec:	lea    rsi,[rip+0x1ebc]        # 7faf <_obstack_memory_used@@Base+0x13bf>
    60f3:	mov    rbx,QWORD PTR [rbx]
    60f6:	mov    edx,0x5
    60fb:	xor    edi,edi
    60fd:	call   1b40 <dcgettext@plt>
    6102:	add    rsp,0x28
    6106:	mov    r8,r12
    6109:	mov    rcx,rbx
    610c:	mov    rdi,rbp
    610f:	mov    rdx,rax
    6112:	mov    esi,0x1
    6117:	pop    rbx
    6118:	pop    rbp
    6119:	pop    r12
    611b:	pop    r13
    611d:	pop    r14
    611f:	pop    r15
    6121:	xor    eax,eax
    6123:	jmp    1e40 <__fprintf_chk@plt>
    6128:	nop    DWORD PTR [rax+rax*1+0x0]
    6130:	mov    r13,QWORD PTR [rbx+0x10]
    6134:	mov    r12,QWORD PTR [rbx+0x8]
    6138:	lea    rsi,[rip+0x1e87]        # 7fc6 <_obstack_memory_used@@Base+0x13d6>
    613f:	mov    rbx,QWORD PTR [rbx]
    6142:	mov    edx,0x5
    6147:	xor    edi,edi
    6149:	call   1b40 <dcgettext@plt>
    614e:	add    rsp,0x28
    6152:	mov    r9,r13
    6155:	mov    r8,r12
    6158:	mov    rcx,rbx
    615b:	mov    rdi,rbp
    615e:	mov    rdx,rax
    6161:	pop    rbx
    6162:	pop    rbp
    6163:	pop    r12
    6165:	pop    r13
    6167:	pop    r14
    6169:	pop    r15
    616b:	mov    esi,0x1
    6170:	xor    eax,eax
    6172:	jmp    1e40 <__fprintf_chk@plt>
    6177:	nop    WORD PTR [rax+rax*1+0x0]
    6180:	lea    rsi,[rip+0x1f71]        # 80f8 <_obstack_memory_used@@Base+0x1508>
    6187:	mov    edx,0x5
    618c:	xor    edi,edi
    618e:	mov    r14,QWORD PTR [rbx+0x18]
    6192:	mov    r13,QWORD PTR [rbx+0x10]
    6196:	mov    r12,QWORD PTR [rbx+0x8]
    619a:	mov    rbx,QWORD PTR [rbx]
    619d:	call   1b40 <dcgettext@plt>
    61a2:	sub    rsp,0x8
    61a6:	push   r14
    61a8:	mov    rdx,rax
    61ab:	mov    r9,r13
    61ae:	mov    r8,r12
    61b1:	mov    rcx,rbx
    61b4:	mov    rdi,rbp
    61b7:	mov    esi,0x1
    61bc:	xor    eax,eax
    61be:	call   1e40 <__fprintf_chk@plt>
    61c3:	pop    rax
    61c4:	pop    rdx
    61c5:	add    rsp,0x28
    61c9:	pop    rbx
    61ca:	pop    rbp
    61cb:	pop    r12
    61cd:	pop    r13
    61cf:	pop    r14
    61d1:	pop    r15
    61d3:	ret    
    61d4:	nop    DWORD PTR [rax+0x0]
    61d8:	mov    r15,QWORD PTR [rbx+0x20]
    61dc:	lea    rsi,[rip+0x1f35]        # 8118 <_obstack_memory_used@@Base+0x1528>
    61e3:	mov    edx,0x5
    61e8:	xor    edi,edi
    61ea:	mov    r14,QWORD PTR [rbx+0x18]
    61ee:	mov    r13,QWORD PTR [rbx+0x10]
    61f2:	mov    r12,QWORD PTR [rbx+0x8]
    61f6:	mov    rbx,QWORD PTR [rbx]
    61f9:	call   1b40 <dcgettext@plt>
    61fe:	push   r15
    6200:	jmp    61a6 <__ctype_b_loc@plt+0x4326>
    6202:	nop    WORD PTR [rax+rax*1+0x0]
    6208:	mov    r8,QWORD PTR [rbx+0x8]
    620c:	mov    r12,QWORD PTR [rbx+0x28]
    6210:	lea    rsi,[rip+0x1f29]        # 8140 <_obstack_memory_used@@Base+0x1550>
    6217:	mov    r15,QWORD PTR [rbx+0x20]
    621b:	mov    r14,QWORD PTR [rbx+0x18]
    621f:	mov    edx,0x5
    6224:	mov    r13,QWORD PTR [rbx+0x10]
    6228:	xor    edi,edi
    622a:	mov    rbx,QWORD PTR [rbx]
    622d:	mov    QWORD PTR [rsp],r8
    6231:	call   1b40 <dcgettext@plt>
    6236:	sub    rsp,0x8
    623a:	mov    r9,r13
    623d:	push   r12
    623f:	push   r15
    6241:	push   r14
    6243:	mov    r8,QWORD PTR [rsp+0x20]
    6248:	mov    rcx,rbx
    624b:	mov    rdx,rax
    624e:	mov    rdi,rbp
    6251:	mov    esi,0x1
    6256:	xor    eax,eax
    6258:	call   1e40 <__fprintf_chk@plt>
    625d:	add    rsp,0x20
    6261:	add    rsp,0x28
    6265:	pop    rbx
    6266:	pop    rbp
    6267:	pop    r12
    6269:	pop    r13
    626b:	pop    r14
    626d:	pop    r15
    626f:	ret    
    6270:	mov    r9,QWORD PTR [rbx+0x10]
    6274:	mov    r13,QWORD PTR [rbx+0x30]
    6278:	lea    rsi,[rip+0x1ee9]        # 8168 <_obstack_memory_used@@Base+0x1578>
    627f:	mov    r12,QWORD PTR [rbx+0x28]
    6283:	mov    r15,QWORD PTR [rbx+0x20]
    6287:	mov    edx,0x5
    628c:	mov    r14,QWORD PTR [rbx+0x18]
    6290:	mov    r8,QWORD PTR [rbx+0x8]
    6294:	xor    edi,edi
    6296:	mov    QWORD PTR [rsp+0x8],r9
    629b:	mov    rbx,QWORD PTR [rbx]
    629e:	mov    QWORD PTR [rsp],r8
    62a2:	call   1b40 <dcgettext@plt>
    62a7:	push   r13
    62a9:	push   r12
    62ab:	push   r15
    62ad:	push   r14
    62af:	mov    r9,QWORD PTR [rsp+0x28]
    62b4:	jmp    6243 <__ctype_b_loc@plt+0x43c3>
    62b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    62c0:	mov    r8,rcx
    62c3:	mov    rcx,rdx
    62c6:	lea    rdx,[rip+0x1cc7]        # 7f94 <_obstack_memory_used@@Base+0x13a4>
    62cd:	mov    esi,0x1
    62d2:	xor    eax,eax
    62d4:	call   1e40 <__fprintf_chk@plt>
    62d9:	jmp    5f4c <__ctype_b_loc@plt+0x40cc>
    62de:	xchg   ax,ax
    62e0:	mov    r10,QWORD PTR [rbx+0x40]
    62e4:	mov    r9,QWORD PTR [rbx+0x38]
    62e8:	mov    edx,0x5
    62ed:	mov    rax,QWORD PTR [rbx+0x10]
    62f1:	mov    r8,QWORD PTR [rbx+0x8]
    62f5:	lea    rsi,[rip+0x1f04]        # 8200 <_obstack_memory_used@@Base+0x1610>
    62fc:	mov    r13,QWORD PTR [rbx+0x30]
    6300:	mov    r12,QWORD PTR [rbx+0x28]
    6304:	mov    r15,QWORD PTR [rbx+0x20]
    6308:	mov    r14,QWORD PTR [rbx+0x18]
    630c:	mov    QWORD PTR [rsp+0x18],r10
    6311:	mov    QWORD PTR [rsp+0x10],r9
    6316:	mov    QWORD PTR [rsp],rax
    631a:	mov    QWORD PTR [rsp+0x8],r8
    631f:	mov    rbx,QWORD PTR [rbx]
    6322:	jmp    608a <__ctype_b_loc@plt+0x420a>
    6327:	nop    WORD PTR [rax+rax*1+0x0]
    6330:	xor    r9d,r9d
    6333:	cmp    QWORD PTR [r8],0x0
    6337:	je     634b <__ctype_b_loc@plt+0x44cb>
    6339:	nop    DWORD PTR [rax+0x0]
    6340:	add    r9,0x1
    6344:	cmp    QWORD PTR [r8+r9*8],0x0
    6349:	jne    6340 <__ctype_b_loc@plt+0x44c0>
    634b:	jmp    5f10 <__ctype_b_loc@plt+0x4090>
    6350:	sub    rsp,0x68
    6354:	mov    r10,r8
    6357:	xor    r9d,r9d
    635a:	mov    rax,QWORD PTR fs:0x28
    6363:	mov    QWORD PTR [rsp+0x58],rax
    6368:	xor    eax,eax
    636a:	mov    r8,rsp
    636d:	nop    DWORD PTR [rax]
    6370:	mov    eax,DWORD PTR [r10]
    6373:	cmp    eax,0x2f
    6376:	ja     63ba <__ctype_b_loc@plt+0x453a>
    6378:	mov    r11d,eax
    637b:	add    r11,QWORD PTR [r10+0x10]
    637f:	add    eax,0x8
    6382:	mov    DWORD PTR [r10],eax
    6385:	mov    rax,QWORD PTR [r11]
    6388:	test   rax,rax
    638b:	mov    QWORD PTR [r8+r9*8],rax
    638f:	je     639b <__ctype_b_loc@plt+0x451b>
    6391:	add    r9,0x1
    6395:	cmp    r9,0xa
    6399:	jne    6370 <__ctype_b_loc@plt+0x44f0>
    639b:	call   5f10 <__ctype_b_loc@plt+0x4090>
    63a0:	mov    rax,QWORD PTR [rsp+0x58]
    63a5:	xor    rax,QWORD PTR fs:0x28
    63ae:	jne    63b5 <__ctype_b_loc@plt+0x4535>
    63b0:	add    rsp,0x68
    63b4:	ret    
    63b5:	call   1b70 <__stack_chk_fail@plt>
    63ba:	mov    r11,QWORD PTR [r10+0x8]
    63be:	lea    rax,[r11+0x8]
    63c2:	mov    QWORD PTR [r10+0x8],rax
    63c6:	jmp    6385 <__ctype_b_loc@plt+0x4505>
    63c8:	nop    DWORD PTR [rax+rax*1+0x0]
    63d0:	push   rbp
    63d1:	push   rbx
    63d2:	mov    r10d,0x20
    63d8:	xor    r11d,r11d
    63db:	sub    rsp,0xb8
    63e2:	mov    rax,QWORD PTR fs:0x28
    63eb:	mov    QWORD PTR [rsp+0x78],rax
    63f0:	xor    eax,eax
    63f2:	lea    rax,[rsp+0xd0]
    63fa:	mov    QWORD PTR [rsp+0xa0],r8
    6402:	lea    rbx,[rsp+0xd0]
    640a:	lea    r8,[rsp+0x20]
    640f:	mov    QWORD PTR [rsp+0xa8],r9
    6417:	mov    DWORD PTR [rsp+0x8],0x20
    641f:	mov    QWORD PTR [rsp+0x10],rax
    6424:	lea    rax,[rsp+0x80]
    642c:	xor    r9d,r9d
    642f:	mov    QWORD PTR [rsp+0x18],rax
    6434:	mov    rbp,rax
    6437:	nop    WORD PTR [rax+rax*1+0x0]
    6440:	cmp    r10d,0x2f
    6444:	ja     649c <__ctype_b_loc@plt+0x461c>
    6446:	mov    eax,r10d
    6449:	mov    r11d,0x1
    644f:	add    r10d,0x8
    6453:	add    rax,rbp
    6456:	mov    rax,QWORD PTR [rax]
    6459:	test   rax,rax
    645c:	mov    QWORD PTR [r8+r9*8],rax
    6460:	je     646c <__ctype_b_loc@plt+0x45ec>
    6462:	add    r9,0x1
    6466:	cmp    r9,0xa
    646a:	jne    6440 <__ctype_b_loc@plt+0x45c0>
    646c:	test   r11b,r11b
    646f:	jne    6495 <__ctype_b_loc@plt+0x4615>
    6471:	call   5f10 <__ctype_b_loc@plt+0x4090>
    6476:	mov    rax,QWORD PTR [rsp+0x78]
    647b:	xor    rax,QWORD PTR fs:0x28
    6484:	jne    6490 <__ctype_b_loc@plt+0x4610>
    6486:	add    rsp,0xb8
    648d:	pop    rbx
    648e:	pop    rbp
    648f:	ret    
    6490:	call   1b70 <__stack_chk_fail@plt>
    6495:	mov    DWORD PTR [rsp+0x8],r10d
    649a:	jmp    6471 <__ctype_b_loc@plt+0x45f1>
    649c:	mov    rax,rbx
    649f:	add    rbx,0x8
    64a3:	jmp    6456 <__ctype_b_loc@plt+0x45d6>
    64a5:	nop
    64a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    64b0:	push   rbx
    64b1:	lea    rsi,[rip+0x1b2a]        # 7fe2 <_obstack_memory_used@@Base+0x13f2>
    64b8:	mov    edx,0x5
    64bd:	xor    edi,edi
    64bf:	call   1b40 <dcgettext@plt>
    64c4:	lea    rdx,[rip+0x1b2c]        # 7ff7 <_obstack_memory_used@@Base+0x1407>
    64cb:	mov    rsi,rax
    64ce:	mov    edi,0x1
    64d3:	xor    eax,eax
    64d5:	call   1d80 <__printf_chk@plt>
    64da:	lea    rsi,[rip+0x1b2c]        # 800d <_obstack_memory_used@@Base+0x141d>
    64e1:	mov    edx,0x5
    64e6:	xor    edi,edi
    64e8:	call   1b40 <dcgettext@plt>
    64ed:	lea    rcx,[rip+0x138c]        # 7880 <_obstack_memory_used@@Base+0xc90>
    64f4:	lea    rdx,[rip+0xd91]        # 728c <_obstack_memory_used@@Base+0x69c>
    64fb:	mov    rsi,rax
    64fe:	mov    edi,0x1
    6503:	xor    eax,eax
    6505:	call   1d80 <__printf_chk@plt>
    650a:	mov    rbx,QWORD PTR [rip+0x203db7]        # 20a2c8 <stdout@@GLIBC_2.2.5>
    6511:	lea    rsi,[rip+0x1d28]        # 8240 <_obstack_memory_used@@Base+0x1650>
    6518:	xor    edi,edi
    651a:	mov    edx,0x5
    651f:	call   1b40 <dcgettext@plt>
    6524:	mov    rsi,rbx
    6527:	mov    rdi,rax
    652a:	pop    rbx
    652b:	jmp    1c70 <fputs_unlocked@plt>
    6530:	push   rbx
    6531:	mov    rbx,rdi
    6534:	call   1e98 <__ctype_b_loc@plt+0x18>
    6539:	test   rax,rax
    653c:	jne    6543 <__ctype_b_loc@plt+0x46c3>
    653e:	test   rbx,rbx
    6541:	jne    6545 <__ctype_b_loc@plt+0x46c5>
    6543:	pop    rbx
    6544:	ret    
    6545:	call   6730 <__ctype_b_loc@plt+0x48b0>
    654a:	nop    WORD PTR [rax+rax*1+0x0]
    6550:	mov    rax,rdi
    6553:	mul    rsi
    6556:	jo     655d <__ctype_b_loc@plt+0x46dd>
    6558:	mov    rdi,rax
    655b:	jmp    6530 <__ctype_b_loc@plt+0x46b0>
    655d:	sub    rsp,0x8
    6561:	call   6730 <__ctype_b_loc@plt+0x48b0>
    6566:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6570:	jmp    6530 <__ctype_b_loc@plt+0x46b0>
    6572:	nop    DWORD PTR [rax+0x0]
    6576:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6580:	test   rsi,rsi
    6583:	push   rbx
    6584:	mov    rbx,rsi
    6587:	jne    658e <__ctype_b_loc@plt+0x470e>
    6589:	test   rdi,rdi
    658c:	jne    65a8 <__ctype_b_loc@plt+0x4728>
    658e:	mov    rsi,rbx
    6591:	call   1d50 <realloc@plt>
    6596:	test   rax,rax
    6599:	jne    65a0 <__ctype_b_loc@plt+0x4720>
    659b:	test   rbx,rbx
    659e:	jne    65b1 <__ctype_b_loc@plt+0x4731>
    65a0:	pop    rbx
    65a1:	ret    
    65a2:	nop    WORD PTR [rax+rax*1+0x0]
    65a8:	call   1e90 <__ctype_b_loc@plt+0x10>
    65ad:	xor    eax,eax
    65af:	pop    rbx
    65b0:	ret    
    65b1:	call   6730 <__ctype_b_loc@plt+0x48b0>
    65b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    65c0:	mov    rax,rsi
    65c3:	mul    rdx
    65c6:	jo     65cd <__ctype_b_loc@plt+0x474d>
    65c8:	mov    rsi,rax
    65cb:	jmp    6580 <__ctype_b_loc@plt+0x4700>
    65cd:	sub    rsp,0x8
    65d1:	call   6730 <__ctype_b_loc@plt+0x48b0>
    65d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    65e0:	test   rdi,rdi
    65e3:	mov    r8,rdx
    65e6:	mov    rcx,QWORD PTR [rsi]
    65e9:	je     6620 <__ctype_b_loc@plt+0x47a0>
    65eb:	xor    edx,edx
    65ed:	movabs rax,0xaaaaaaaaaaaaaaaa
    65f7:	div    r8
    65fa:	cmp    rcx,rax
    65fd:	jae    663c <__ctype_b_loc@plt+0x47bc>
    65ff:	mov    rax,rcx
    6602:	shr    rax,1
    6605:	lea    rcx,[rcx+rax*1+0x1]
    660a:	mov    QWORD PTR [rsi],rcx
    660d:	imul   rcx,r8
    6611:	mov    rsi,rcx
    6614:	jmp    6580 <__ctype_b_loc@plt+0x4700>
    6619:	nop    DWORD PTR [rax+0x0]
    6620:	test   rcx,rcx
    6623:	jne    660a <__ctype_b_loc@plt+0x478a>
    6625:	xor    edx,edx
    6627:	mov    eax,0x80
    662c:	xor    ecx,ecx
    662e:	div    r8
    6631:	test   rax,rax
    6634:	sete   cl
    6637:	add    rcx,rax
    663a:	jmp    660a <__ctype_b_loc@plt+0x478a>
    663c:	sub    rsp,0x8
    6640:	call   6730 <__ctype_b_loc@plt+0x48b0>
    6645:	nop
    6646:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6650:	test   rdi,rdi
    6653:	mov    rax,QWORD PTR [rsi]
    6656:	je     6680 <__ctype_b_loc@plt+0x4800>
    6658:	movabs rdx,0xaaaaaaaaaaaaaaa9
    6662:	cmp    rax,rdx
    6665:	ja     6697 <__ctype_b_loc@plt+0x4817>
    6667:	mov    rdx,rax
    666a:	shr    rdx,1
    666d:	lea    rax,[rdx+rax*1+0x1]
    6672:	mov    QWORD PTR [rsi],rax
    6675:	mov    rsi,rax
    6678:	jmp    6580 <__ctype_b_loc@plt+0x4700>
    667d:	nop    DWORD PTR [rax]
    6680:	test   rax,rax
    6683:	mov    edx,0x80
    6688:	cmove  rax,rdx
    668c:	mov    QWORD PTR [rsi],rax
    668f:	mov    rsi,rax
    6692:	jmp    6580 <__ctype_b_loc@plt+0x4700>
    6697:	sub    rsp,0x8
    669b:	call   6730 <__ctype_b_loc@plt+0x48b0>
    66a0:	push   rbx
    66a1:	mov    rbx,rdi
    66a4:	call   6530 <__ctype_b_loc@plt+0x46b0>
    66a9:	mov    rdx,rbx
    66ac:	xor    esi,esi
    66ae:	mov    rdi,rax
    66b1:	pop    rbx
    66b2:	jmp    1bf0 <memset@plt>
    66b7:	nop    WORD PTR [rax+rax*1+0x0]
    66c0:	sub    rsp,0x8
    66c4:	call   1c80 <calloc@plt>
    66c9:	test   rax,rax
    66cc:	je     66d3 <__ctype_b_loc@plt+0x4853>
    66ce:	add    rsp,0x8
    66d2:	ret    
    66d3:	call   6730 <__ctype_b_loc@plt+0x48b0>
    66d8:	nop    DWORD PTR [rax+rax*1+0x0]
    66e0:	push   rbp
    66e1:	push   rbx
    66e2:	mov    rbp,rdi
    66e5:	mov    rdi,rsi
    66e8:	mov    rbx,rsi
    66eb:	sub    rsp,0x8
    66ef:	call   6530 <__ctype_b_loc@plt+0x46b0>
    66f4:	add    rsp,0x8
    66f8:	mov    rdx,rbx
    66fb:	mov    rsi,rbp
    66fe:	pop    rbx
    66ff:	pop    rbp
    6700:	mov    rdi,rax
    6703:	jmp    1cc0 <memcpy@plt>
    6708:	nop    DWORD PTR [rax+rax*1+0x0]
    6710:	push   rbx
    6711:	mov    rbx,rdi
    6714:	call   1b60 <strlen@plt>
    6719:	mov    rdi,rbx
    671c:	lea    rsi,[rax+0x1]
    6720:	pop    rbx
    6721:	jmp    66e0 <__ctype_b_loc@plt+0x4860>
    6723:	nop    WORD PTR cs:[rax+rax*1+0x0]
    672d:	nop    DWORD PTR [rax]
    6730:	lea    rsi,[rip+0x1bb8]        # 82ef <_obstack_memory_used@@Base+0x16ff>
    6737:	sub    rsp,0x8
    673b:	mov    edx,0x5
    6740:	xor    edi,edi
    6742:	call   1b40 <dcgettext@plt>
    6747:	mov    edi,DWORD PTR [rip+0x203aeb]        # 20a238 <_obstack_memory_used@@Base+0x203648>
    674d:	lea    rdx,[rip+0x12d9]        # 7a2d <_obstack_memory_used@@Base+0xe3d>
    6754:	mov    rcx,rax
    6757:	xor    esi,esi
    6759:	xor    eax,eax
    675b:	call   1db0 <error@plt>
    6760:	call   1aa0 <abort@plt>
    6765:	nop    WORD PTR cs:[rax+rax*1+0x0]
    676f:	nop
    6770:	push   r12
    6772:	push   rbp
    6773:	push   rbx
    6774:	mov    rbx,rdi
    6777:	call   1cd0 <fileno@plt>
    677c:	test   eax,eax
    677e:	mov    rdi,rbx
    6781:	js     67d7 <__ctype_b_loc@plt+0x4957>
    6783:	call   1d40 <__freading@plt>
    6788:	test   eax,eax
    678a:	jne    67b8 <__ctype_b_loc@plt+0x4938>
    678c:	mov    rdi,rbx
    678f:	call   67f0 <__ctype_b_loc@plt+0x4970>
    6794:	test   eax,eax
    6796:	je     67d4 <__ctype_b_loc@plt+0x4954>
    6798:	call   1ab0 <__errno_location@plt>
    679d:	mov    r12d,DWORD PTR [rax]
    67a0:	mov    rdi,rbx
    67a3:	mov    rbp,rax
    67a6:	call   1b20 <fclose@plt>
    67ab:	test   r12d,r12d
    67ae:	jne    67e0 <__ctype_b_loc@plt+0x4960>
    67b0:	pop    rbx
    67b1:	pop    rbp
    67b2:	pop    r12
    67b4:	ret    
    67b5:	nop    DWORD PTR [rax]
    67b8:	mov    rdi,rbx
    67bb:	call   1cd0 <fileno@plt>
    67c0:	xor    esi,esi
    67c2:	mov    edx,0x1
    67c7:	mov    edi,eax
    67c9:	call   1bd0 <lseek@plt>
    67ce:	cmp    rax,0xffffffffffffffff
    67d2:	jne    678c <__ctype_b_loc@plt+0x490c>
    67d4:	mov    rdi,rbx
    67d7:	pop    rbx
    67d8:	pop    rbp
    67d9:	pop    r12
    67db:	jmp    1b20 <fclose@plt>
    67e0:	mov    DWORD PTR [rbp+0x0],r12d
    67e4:	mov    eax,0xffffffff
    67e9:	jmp    67b0 <__ctype_b_loc@plt+0x4930>
    67eb:	nop    DWORD PTR [rax+rax*1+0x0]
    67f0:	test   rdi,rdi
    67f3:	push   rbx
    67f4:	mov    rbx,rdi
    67f7:	je     680a <__ctype_b_loc@plt+0x498a>
    67f9:	call   1d40 <__freading@plt>
    67fe:	test   eax,eax
    6800:	je     680a <__ctype_b_loc@plt+0x498a>
    6802:	test   DWORD PTR [rbx],0x100
    6808:	jne    6818 <__ctype_b_loc@plt+0x4998>
    680a:	mov    rdi,rbx
    680d:	pop    rbx
    680e:	jmp    1d00 <fflush@plt>
    6813:	nop    DWORD PTR [rax+rax*1+0x0]
    6818:	mov    rdi,rbx
    681b:	mov    edx,0x1
    6820:	xor    esi,esi
    6822:	call   6830 <__ctype_b_loc@plt+0x49b0>
    6827:	mov    rdi,rbx
    682a:	pop    rbx
    682b:	jmp    1d00 <fflush@plt>
    6830:	mov    rax,QWORD PTR [rdi+0x8]
    6834:	cmp    QWORD PTR [rdi+0x10],rax
    6838:	je     6840 <__ctype_b_loc@plt+0x49c0>
    683a:	jmp    1dd0 <fseeko@plt>
    683f:	nop
    6840:	mov    rax,QWORD PTR [rdi+0x20]
    6844:	cmp    QWORD PTR [rdi+0x28],rax
    6848:	jne    683a <__ctype_b_loc@plt+0x49ba>
    684a:	cmp    QWORD PTR [rdi+0x48],0x0
    684f:	jne    683a <__ctype_b_loc@plt+0x49ba>
    6851:	push   r12
    6853:	push   rbp
    6854:	mov    r12d,edx
    6857:	push   rbx
    6858:	mov    rbp,rsi
    685b:	mov    rbx,rdi
    685e:	call   1cd0 <fileno@plt>
    6863:	mov    edx,r12d
    6866:	mov    rsi,rbp
    6869:	mov    edi,eax
    686b:	call   1bd0 <lseek@plt>
    6870:	cmp    rax,0xffffffffffffffff
    6874:	je     6882 <__ctype_b_loc@plt+0x4a02>
    6876:	and    DWORD PTR [rbx],0xffffffef
    6879:	mov    QWORD PTR [rbx+0x90],rax
    6880:	xor    eax,eax
    6882:	pop    rbx
    6883:	pop    rbp
    6884:	pop    r12
    6886:	ret    
    6887:	nop    WORD PTR [rax+rax*1+0x0]
    6890:	push   r13
    6892:	push   r12
    6894:	mov    r13,rsi
    6897:	push   rbp
    6898:	push   rbx
    6899:	mov    rbx,rdi
    689c:	mov    r12,rdx
    689f:	sub    rsp,0x18
    68a3:	mov    rax,QWORD PTR fs:0x28
    68ac:	mov    QWORD PTR [rsp+0x8],rax
    68b1:	xor    eax,eax
    68b3:	lea    rax,[rsp+0x4]
    68b8:	test   rdi,rdi
    68bb:	cmove  rbx,rax
    68bf:	mov    rdi,rbx
    68c2:	call   1b90 <mbrtowc@plt>
    68c7:	cmp    rax,0xfffffffffffffffd
    68cb:	mov    rbp,rax
    68ce:	jbe    68ec <__ctype_b_loc@plt+0x4a6c>
    68d0:	test   r12,r12
    68d3:	je     68ec <__ctype_b_loc@plt+0x4a6c>
    68d5:	xor    edi,edi
    68d7:	call   6ca0 <_obstack_memory_used@@Base+0xb0>
    68dc:	test   al,al
    68de:	jne    68ec <__ctype_b_loc@plt+0x4a6c>
    68e0:	movzx  eax,BYTE PTR [r13+0x0]
    68e5:	mov    ebp,0x1
    68ea:	mov    DWORD PTR [rbx],eax
    68ec:	mov    rdx,QWORD PTR [rsp+0x8]
    68f1:	xor    rdx,QWORD PTR fs:0x28
    68fa:	mov    rax,rbp
    68fd:	jne    690a <__ctype_b_loc@plt+0x4a8a>
    68ff:	add    rsp,0x18
    6903:	pop    rbx
    6904:	pop    rbp
    6905:	pop    r12
    6907:	pop    r13
    6909:	ret    
    690a:	call   1b70 <__stack_chk_fail@plt>
    690f:	nop
    6910:	lea    rsi,[rip+0x19d8]        # 82ef <_obstack_memory_used@@Base+0x16ff>
    6917:	sub    rsp,0x8
    691b:	mov    edx,0x5
    6920:	xor    edi,edi
    6922:	call   1b40 <dcgettext@plt>
    6927:	mov    rdi,QWORD PTR [rip+0x2039d2]        # 20a300 <stderr@@GLIBC_2.2.5>
    692e:	lea    rdx,[rip+0x165b]        # 7f90 <_obstack_memory_used@@Base+0x13a0>
    6935:	mov    rcx,rax
    6938:	mov    esi,0x1
    693d:	xor    eax,eax
    693f:	call   1e40 <__fprintf_chk@plt>
    6944:	mov    edi,DWORD PTR [rip+0x2038ee]        # 20a238 <_obstack_memory_used@@Base+0x203648>
    694a:	call   1e20 <exit@plt>
    694f:	nop
    6950:	test   BYTE PTR [rdi+0x50],0x1
    6954:	mov    rax,rdi
    6957:	jne    6968 <__ctype_b_loc@plt+0x4ae8>
    6959:	mov    rax,QWORD PTR [rdi+0x38]
    695d:	mov    rdi,rsi
    6960:	jmp    rax
    6962:	nop    WORD PTR [rax+rax*1+0x0]
    6968:	mov    rdi,QWORD PTR [rdi+0x48]
    696c:	jmp    QWORD PTR [rax+0x38]
    696f:	nop
    6970:	test   BYTE PTR [rdi+0x50],0x1
    6974:	mov    rax,rdi
    6977:	jne    6988 <__ctype_b_loc@plt+0x4b08>
    6979:	mov    rax,QWORD PTR [rdi+0x40]
    697d:	mov    rdi,rsi
    6980:	jmp    rax
    6982:	nop    WORD PTR [rax+rax*1+0x0]
    6988:	mov    rdi,QWORD PTR [rdi+0x48]
    698c:	jmp    QWORD PTR [rax+0x40]
    698f:	nop
    6990:	test   rdx,rdx
    6993:	push   r12
    6995:	push   rbp
    6996:	push   rbx
    6997:	mov    rbx,rdi
    699a:	je     6a00 <__ctype_b_loc@plt+0x4b80>
    699c:	lea    r12,[rdx-0x1]
    69a0:	mov    rbp,rdx
    69a3:	test   rsi,rsi
    69a6:	mov    eax,0xfe0
    69ab:	mov    QWORD PTR [rbx+0x30],r12
    69af:	cmove  rsi,rax
    69b3:	mov    rdi,rbx
    69b6:	mov    QWORD PTR [rbx],rsi
    69b9:	call   6950 <__ctype_b_loc@plt+0x4ad0>
    69be:	test   rax,rax
    69c1:	mov    QWORD PTR [rbx+0x8],rax
    69c5:	je     6a0d <__ctype_b_loc@plt+0x4b8d>
    69c7:	lea    rdx,[rax+r12*1+0x10]
    69cc:	neg    rbp
    69cf:	and    rbp,rdx
    69d2:	mov    rdx,rax
    69d5:	add    rdx,QWORD PTR [rbx]
    69d8:	mov    QWORD PTR [rbx+0x10],rbp
    69dc:	mov    QWORD PTR [rbx+0x18],rbp
    69e0:	mov    QWORD PTR [rax],rdx
    69e3:	mov    QWORD PTR [rbx+0x20],rdx
    69e7:	mov    QWORD PTR [rax+0x8],0x0
    69ef:	mov    eax,0x1
    69f4:	and    BYTE PTR [rbx+0x50],0xf9
    69f8:	pop    rbx
    69f9:	pop    rbp
    69fa:	pop    r12
    69fc:	ret    
    69fd:	nop    DWORD PTR [rax]
    6a00:	mov    r12d,0xf
    6a06:	mov    ebp,0x10
    6a0b:	jmp    69a3 <__ctype_b_loc@plt+0x4b23>
    6a0d:	call   QWORD PTR [rip+0x20388d]        # 20a2a0 <obstack_alloc_failed_handler@@Base>
    6a13:	nop    DWORD PTR [rax]
    6a16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000006a20 <_obstack_begin@@Base>:
    6a20:	and    BYTE PTR [rdi+0x50],0xfe
    6a24:	mov    QWORD PTR [rdi+0x38],rcx
    6a28:	mov    QWORD PTR [rdi+0x40],r8
    6a2c:	jmp    6990 <__ctype_b_loc@plt+0x4b10>
    6a31:	nop    DWORD PTR [rax+rax*1+0x0]
    6a36:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000006a40 <_obstack_begin_1@@Base>:
    6a40:	or     BYTE PTR [rdi+0x50],0x1
    6a44:	mov    QWORD PTR [rdi+0x38],rcx
    6a48:	mov    QWORD PTR [rdi+0x40],r8
    6a4c:	mov    QWORD PTR [rdi+0x48],r9
    6a50:	jmp    6990 <__ctype_b_loc@plt+0x4b10>
    6a55:	nop
    6a56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000006a60 <_obstack_newchunk@@Base>:
    6a60:	push   r14
    6a62:	push   r13
    6a64:	xor    edx,edx
    6a66:	push   r12
    6a68:	push   rbp
    6a69:	push   rbx
    6a6a:	mov    r13,QWORD PTR [rdi+0x18]
    6a6e:	sub    r13,QWORD PTR [rdi+0x10]
    6a72:	add    rsi,r13
    6a75:	setb   dl
    6a78:	add    rsi,QWORD PTR [rdi+0x30]
    6a7c:	setb   al
    6a7f:	test   rdx,rdx
    6a82:	jne    6a8c <_obstack_newchunk@@Base+0x2c>
    6a84:	movzx  eax,al
    6a87:	test   rax,rax
    6a8a:	je     6a98 <_obstack_newchunk@@Base+0x38>
    6a8c:	call   QWORD PTR [rip+0x20380e]        # 20a2a0 <obstack_alloc_failed_handler@@Base>
    6a92:	nop    WORD PTR [rax+rax*1+0x0]
    6a98:	mov    rax,r13
    6a9b:	mov    rbx,rdi
    6a9e:	mov    r12,QWORD PTR [rdi+0x8]
    6aa2:	shr    rax,0x3
    6aa6:	cmp    QWORD PTR [rdi],rsi
    6aa9:	lea    rbp,[rsi+rax*1+0x64]
    6aae:	cmovae rsi,QWORD PTR [rdi]
    6ab2:	cmp    rsi,rbp
    6ab5:	cmovae rbp,rsi
    6ab9:	mov    rsi,rbp
    6abc:	call   6950 <__ctype_b_loc@plt+0x4ad0>
    6ac1:	test   rax,rax
    6ac4:	mov    r14,rax
    6ac7:	je     6a8c <_obstack_newchunk@@Base+0x2c>
    6ac9:	lea    rsi,[rax+rbp*1]
    6acd:	mov    QWORD PTR [rbx+0x8],rax
    6ad1:	mov    QWORD PTR [rax+0x8],r12
    6ad5:	mov    rdx,r13
    6ad8:	mov    QWORD PTR [rbx+0x20],rsi
    6adc:	mov    QWORD PTR [rax],rsi
    6adf:	mov    rax,QWORD PTR [rbx+0x30]
    6ae3:	mov    rsi,QWORD PTR [rbx+0x10]
    6ae7:	lea    rbp,[r14+rax*1+0x10]
    6aec:	not    rax
    6aef:	and    rbp,rax
    6af2:	mov    rdi,rbp
    6af5:	call   1cc0 <memcpy@plt>
    6afa:	test   BYTE PTR [rbx+0x50],0x2
    6afe:	jne    6b15 <_obstack_newchunk@@Base+0xb5>
    6b00:	mov    rax,QWORD PTR [rbx+0x30]
    6b04:	lea    rdx,[r12+rax*1+0x10]
    6b09:	not    rax
    6b0c:	and    rax,rdx
    6b0f:	cmp    QWORD PTR [rbx+0x10],rax
    6b13:	je     6b30 <_obstack_newchunk@@Base+0xd0>
    6b15:	and    BYTE PTR [rbx+0x50],0xfd
    6b19:	add    r13,rbp
    6b1c:	mov    QWORD PTR [rbx+0x10],rbp
    6b20:	mov    QWORD PTR [rbx+0x18],r13
    6b24:	pop    rbx
    6b25:	pop    rbp
    6b26:	pop    r12
    6b28:	pop    r13
    6b2a:	pop    r14
    6b2c:	ret    
    6b2d:	nop    DWORD PTR [rax]
    6b30:	mov    rax,QWORD PTR [r12+0x8]
    6b35:	mov    rsi,r12
    6b38:	mov    rdi,rbx
    6b3b:	mov    QWORD PTR [r14+0x8],rax
    6b3f:	call   6970 <__ctype_b_loc@plt+0x4af0>
    6b44:	jmp    6b15 <_obstack_newchunk@@Base+0xb5>
    6b46:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000006b50 <_obstack_allocated_p@@Base>:
    6b50:	mov    rax,QWORD PTR [rdi+0x8]
    6b54:	test   rax,rax
    6b57:	je     6b7e <_obstack_allocated_p@@Base+0x2e>
    6b59:	nop    DWORD PTR [rax+0x0]
    6b60:	cmp    rsi,rax
    6b63:	jbe    6b6a <_obstack_allocated_p@@Base+0x1a>
    6b65:	cmp    rsi,QWORD PTR [rax]
    6b68:	jbe    6b78 <_obstack_allocated_p@@Base+0x28>
    6b6a:	mov    rax,QWORD PTR [rax+0x8]
    6b6e:	test   rax,rax
    6b71:	jne    6b60 <_obstack_allocated_p@@Base+0x10>
    6b73:	repz ret 
    6b75:	nop    DWORD PTR [rax]
    6b78:	mov    eax,0x1
    6b7d:	ret    
    6b7e:	repz ret 

0000000000006b80 <_obstack_free@@Base>:
    6b80:	push   r12
    6b82:	push   rbp
    6b83:	mov    rbp,rsi
    6b86:	push   rbx
    6b87:	mov    rsi,QWORD PTR [rdi+0x8]
    6b8b:	mov    rbx,rdi
    6b8e:	test   rsi,rsi
    6b91:	je     6bbd <_obstack_free@@Base+0x3d>
    6b93:	nop    DWORD PTR [rax+rax*1+0x0]
    6b98:	cmp    rbp,rsi
    6b9b:	jbe    6ba5 <_obstack_free@@Base+0x25>
    6b9d:	mov    rax,QWORD PTR [rsi]
    6ba0:	cmp    rbp,rax
    6ba3:	jbe    6bd0 <_obstack_free@@Base+0x50>
    6ba5:	mov    r12,QWORD PTR [rsi+0x8]
    6ba9:	mov    rdi,rbx
    6bac:	call   6970 <__ctype_b_loc@plt+0x4af0>
    6bb1:	or     BYTE PTR [rbx+0x50],0x2
    6bb5:	test   r12,r12
    6bb8:	mov    rsi,r12
    6bbb:	jne    6b98 <_obstack_free@@Base+0x18>
    6bbd:	test   rbp,rbp
    6bc0:	jne    6be5 <_obstack_free@@Base+0x65>
    6bc2:	pop    rbx
    6bc3:	pop    rbp
    6bc4:	pop    r12
    6bc6:	ret    
    6bc7:	nop    WORD PTR [rax+rax*1+0x0]
    6bd0:	mov    QWORD PTR [rbx+0x18],rbp
    6bd4:	mov    QWORD PTR [rbx+0x10],rbp
    6bd8:	mov    QWORD PTR [rbx+0x20],rax
    6bdc:	mov    QWORD PTR [rbx+0x8],rsi
    6be0:	pop    rbx
    6be1:	pop    rbp
    6be2:	pop    r12
    6be4:	ret    
    6be5:	call   1aa0 <abort@plt>
    6bea:	nop    WORD PTR [rax+rax*1+0x0]

0000000000006bf0 <_obstack_memory_used@@Base>:
    6bf0:	mov    rdx,QWORD PTR [rdi+0x8]
    6bf4:	xor    eax,eax
    6bf6:	test   rdx,rdx
    6bf9:	je     6c14 <_obstack_memory_used@@Base+0x24>
    6bfb:	nop    DWORD PTR [rax+rax*1+0x0]
    6c00:	mov    rcx,QWORD PTR [rdx]
    6c03:	sub    rcx,rdx
    6c06:	mov    rdx,QWORD PTR [rdx+0x8]
    6c0a:	add    rax,rcx
    6c0d:	test   rdx,rdx
    6c10:	jne    6c00 <_obstack_memory_used@@Base+0x10>
    6c12:	repz ret 
    6c14:	repz ret 
    6c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6c20:	push   r12
    6c22:	push   rbp
    6c23:	mov    rbp,rdi
    6c26:	push   rbx
    6c27:	call   1ae0 <__fpending@plt>
    6c2c:	mov    ebx,DWORD PTR [rbp+0x0]
    6c2f:	mov    rdi,rbp
    6c32:	mov    r12,rax
    6c35:	call   6770 <__ctype_b_loc@plt+0x48f0>
    6c3a:	and    ebx,0x20
    6c3d:	test   ebx,ebx
    6c3f:	jne    6c58 <_obstack_memory_used@@Base+0x68>
    6c41:	test   eax,eax
    6c43:	je     6c4f <_obstack_memory_used@@Base+0x5f>
    6c45:	test   r12,r12
    6c48:	mov    eax,0xffffffff
    6c4d:	je     6c78 <_obstack_memory_used@@Base+0x88>
    6c4f:	pop    rbx
    6c50:	pop    rbp
    6c51:	pop    r12
    6c53:	ret    
    6c54:	nop    DWORD PTR [rax+0x0]
    6c58:	test   eax,eax
    6c5a:	jne    6c90 <_obstack_memory_used@@Base+0xa0>
    6c5c:	call   1ab0 <__errno_location@plt>
    6c61:	mov    DWORD PTR [rax],0x0
    6c67:	mov    eax,0xffffffff
    6c6c:	pop    rbx
    6c6d:	pop    rbp
    6c6e:	pop    r12
    6c70:	ret    
    6c71:	nop    DWORD PTR [rax+0x0]
    6c78:	call   1ab0 <__errno_location@plt>
    6c7d:	cmp    DWORD PTR [rax],0x9
    6c80:	pop    rbx
    6c81:	pop    rbp
    6c82:	pop    r12
    6c84:	setne  al
    6c87:	movzx  eax,al
    6c8a:	neg    eax
    6c8c:	ret    
    6c8d:	nop    DWORD PTR [rax]
    6c90:	pop    rbx
    6c91:	mov    eax,0xffffffff
    6c96:	pop    rbp
    6c97:	pop    r12
    6c99:	ret    
    6c9a:	nop    WORD PTR [rax+rax*1+0x0]
    6ca0:	sub    rsp,0x8
    6ca4:	xor    esi,esi
    6ca6:	call   1d70 <setlocale@plt>
    6cab:	test   rax,rax
    6cae:	je     6ce8 <_obstack_memory_used@@Base+0xf8>
    6cb0:	cmp    BYTE PTR [rax],0x43
    6cb3:	jne    6cc8 <_obstack_memory_used@@Base+0xd8>
    6cb5:	cmp    BYTE PTR [rax+0x1],0x0
    6cb9:	jne    6cc8 <_obstack_memory_used@@Base+0xd8>
    6cbb:	xor    eax,eax
    6cbd:	add    rsp,0x8
    6cc1:	ret    
    6cc2:	nop    WORD PTR [rax+rax*1+0x0]
    6cc8:	lea    rdi,[rip+0x1631]        # 8300 <_obstack_memory_used@@Base+0x1710>
    6ccf:	mov    rsi,rax
    6cd2:	mov    ecx,0x6
    6cd7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6cd9:	setne  al
    6cdc:	add    rsp,0x8
    6ce0:	ret    
    6ce1:	nop    DWORD PTR [rax+0x0]
    6ce8:	mov    eax,0x1
    6ced:	add    rsp,0x8
    6cf1:	ret    
    6cf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    6cfc:	nop    DWORD PTR [rax+0x0]
    6d00:	push   r15
    6d02:	push   r14
    6d04:	mov    edi,0xe
    6d09:	push   r13
    6d0b:	push   r12
    6d0d:	push   rbp
    6d0e:	push   rbx
    6d0f:	sub    rsp,0xa8
    6d16:	mov    rax,QWORD PTR fs:0x28
    6d1f:	mov    QWORD PTR [rsp+0x98],rax
    6d27:	xor    eax,eax
    6d29:	call   1d10 <nl_langinfo@plt>
    6d2e:	mov    rbx,QWORD PTR [rip+0x203783]        # 20a4b8 <stderr@@GLIBC_2.2.5+0x1b8>
    6d35:	test   rax,rax
    6d38:	mov    rbp,rax
    6d3b:	lea    rax,[rip+0x129f]        # 7fe1 <_obstack_memory_used@@Base+0x13f1>
    6d42:	cmove  rbp,rax
    6d46:	test   rbx,rbx
    6d49:	jne    6d6a <_obstack_memory_used@@Base+0x17a>
    6d4b:	jmp    6dd6 <_obstack_memory_used@@Base+0x1e6>
    6d50:	mov    rdi,rbx
    6d53:	call   1b60 <strlen@plt>
    6d58:	lea    rbx,[rbx+rax*1+0x1]
    6d5d:	mov    rdi,rbx
    6d60:	call   1b60 <strlen@plt>
    6d65:	lea    rbx,[rbx+rax*1+0x1]
    6d6a:	movzx  r12d,BYTE PTR [rbx]
    6d6e:	test   r12b,r12b
    6d71:	je     6d9b <_obstack_memory_used@@Base+0x1ab>
    6d73:	mov    rsi,rbx
    6d76:	mov    rdi,rbp
    6d79:	call   1c90 <strcmp@plt>
    6d7e:	test   eax,eax
    6d80:	je     6d8e <_obstack_memory_used@@Base+0x19e>
    6d82:	cmp    r12b,0x2a
    6d86:	jne    6d50 <_obstack_memory_used@@Base+0x160>
    6d88:	cmp    BYTE PTR [rbx+0x1],0x0
    6d8c:	jne    6d50 <_obstack_memory_used@@Base+0x160>
    6d8e:	mov    rdi,rbx
    6d91:	call   1b60 <strlen@plt>
    6d96:	lea    rbp,[rbx+rax*1+0x1]
    6d9b:	cmp    BYTE PTR [rbp+0x0],0x0
    6d9f:	lea    rax,[rip+0x1560]        # 8306 <_obstack_memory_used@@Base+0x1716>
    6da6:	cmove  rbp,rax
    6daa:	mov    rcx,QWORD PTR [rsp+0x98]
    6db2:	xor    rcx,QWORD PTR fs:0x28
    6dbb:	mov    rax,rbp
    6dbe:	jne    7128 <_obstack_memory_used@@Base+0x538>
    6dc4:	add    rsp,0xa8
    6dcb:	pop    rbx
    6dcc:	pop    rbp
    6dcd:	pop    r12
    6dcf:	pop    r13
    6dd1:	pop    r14
    6dd3:	pop    r15
    6dd5:	ret    
    6dd6:	lea    rdi,[rip+0x1549]        # 8326 <_obstack_memory_used@@Base+0x1736>
    6ddd:	call   1a90 <getenv@plt>
    6de2:	test   rax,rax
    6de5:	mov    r13,rax
    6de8:	je     7040 <_obstack_memory_used@@Base+0x450>
    6dee:	cmp    BYTE PTR [rax],0x0
    6df1:	je     7040 <_obstack_memory_used@@Base+0x450>
    6df7:	mov    rdi,rax
    6dfa:	call   1b60 <strlen@plt>
    6dff:	test   rax,rax
    6e02:	mov    rbx,rax
    6e05:	mov    r14,rax
    6e08:	jne    7117 <_obstack_memory_used@@Base+0x527>
    6e0e:	mov    edi,0xe
    6e13:	call   1e98 <__ctype_b_loc@plt+0x18>
    6e18:	test   rax,rax
    6e1b:	mov    r12,rax
    6e1e:	je     70a9 <_obstack_memory_used@@Base+0x4b9>
    6e24:	mov    rdx,r14
    6e27:	mov    rsi,r13
    6e2a:	mov    rdi,r12
    6e2d:	call   1cc0 <memcpy@plt>
    6e32:	add    rbx,r12
    6e35:	movabs rax,0x2e74657372616863
    6e3f:	mov    esi,0x20000
    6e44:	mov    QWORD PTR [rbx],rax
    6e47:	mov    eax,0x73
    6e4c:	mov    DWORD PTR [rbx+0x8],0x61696c61
    6e53:	mov    WORD PTR [rbx+0xc],ax
    6e57:	mov    rdi,r12
    6e5a:	xor    eax,eax
    6e5c:	call   1dc0 <open@plt>
    6e61:	test   eax,eax
    6e63:	mov    ebx,eax
    6e65:	js     70ca <_obstack_memory_used@@Base+0x4da>
    6e6b:	lea    rsi,[rip+0x498]        # 730a <_obstack_memory_used@@Base+0x71a>
    6e72:	mov    edi,eax
    6e74:	call   1d60 <fdopen@plt>
    6e79:	test   rax,rax
    6e7c:	mov    r15,rax
    6e7f:	je     70c3 <_obstack_memory_used@@Base+0x4d3>
    6e85:	lea    rax,[rsp+0x60]
    6e8a:	mov    QWORD PTR [rsp],0x0
    6e92:	xor    ebx,ebx
    6e94:	mov    QWORD PTR [rsp+0x8],rax
    6e99:	lea    rax,[rsp+0x20]
    6e9e:	mov    QWORD PTR [rsp+0x10],rax
    6ea3:	nop    DWORD PTR [rax+rax*1+0x0]
    6ea8:	mov    rax,QWORD PTR [r15+0x8]
    6eac:	cmp    rax,QWORD PTR [r15+0x10]
    6eb0:	jae    7000 <_obstack_memory_used@@Base+0x410>
    6eb6:	lea    rdx,[rax+0x1]
    6eba:	mov    QWORD PTR [r15+0x8],rdx
    6ebe:	movzx  edi,BYTE PTR [rax]
    6ec1:	lea    eax,[rdi-0x9]
    6ec4:	cmp    eax,0x1
    6ec7:	jbe    6ea8 <_obstack_memory_used@@Base+0x2b8>
    6ec9:	cmp    edi,0x20
    6ecc:	je     6ea8 <_obstack_memory_used@@Base+0x2b8>
    6ece:	cmp    edi,0x23
    6ed1:	je     7095 <_obstack_memory_used@@Base+0x4a5>
    6ed7:	mov    rsi,r15
    6eda:	call   1d20 <ungetc@plt>
    6edf:	mov    r14,QWORD PTR [rsp+0x10]
    6ee4:	mov    rcx,QWORD PTR [rsp+0x8]
    6ee9:	lea    rsi,[rip+0x1446]        # 8336 <_obstack_memory_used@@Base+0x1746>
    6ef0:	xor    eax,eax
    6ef2:	mov    rdi,r15
    6ef5:	mov    rdx,r14
    6ef8:	call   1c00 <fscanf@plt>
    6efd:	cmp    eax,0x1
    6f00:	jle    7013 <_obstack_memory_used@@Base+0x423>
    6f06:	mov    rdx,r14
    6f09:	mov    ecx,DWORD PTR [rdx]
    6f0b:	add    rdx,0x4
    6f0f:	lea    eax,[rcx-0x1010101]
    6f15:	not    ecx
    6f17:	and    eax,ecx
    6f19:	and    eax,0x80808080
    6f1e:	je     6f09 <_obstack_memory_used@@Base+0x319>
    6f20:	mov    ecx,eax
    6f22:	mov    r14,QWORD PTR [rsp+0x8]
    6f27:	shr    ecx,0x10
    6f2a:	test   eax,0x8080
    6f2f:	cmove  eax,ecx
    6f32:	lea    rcx,[rdx+0x2]
    6f36:	cmove  rdx,rcx
    6f3a:	mov    ecx,eax
    6f3c:	add    cl,al
    6f3e:	sbb    rdx,0x3
    6f42:	sub    rdx,QWORD PTR [rsp+0x10]
    6f47:	mov    esi,DWORD PTR [r14]
    6f4a:	add    r14,0x4
    6f4e:	lea    eax,[rsi-0x1010101]
    6f54:	not    esi
    6f56:	and    eax,esi
    6f58:	and    eax,0x80808080
    6f5d:	je     6f47 <_obstack_memory_used@@Base+0x357>
    6f5f:	mov    esi,eax
    6f61:	mov    QWORD PTR [rsp+0x18],rdx
    6f66:	shr    esi,0x10
    6f69:	test   eax,0x8080
    6f6e:	cmove  eax,esi
    6f71:	lea    rsi,[r14+0x2]
    6f75:	mov    ecx,eax
    6f77:	cmove  r14,rsi
    6f7b:	add    cl,al
    6f7d:	sbb    r14,0x3
    6f81:	sub    r14,QWORD PTR [rsp+0x8]
    6f86:	cmp    QWORD PTR [rsp],0x0
    6f8b:	lea    rax,[rdx+r14*1]
    6f8f:	jne    70d6 <_obstack_memory_used@@Base+0x4e6>
    6f95:	lea    rcx,[rax+0x2]
    6f99:	lea    rdi,[rax+0x3]
    6f9d:	mov    QWORD PTR [rsp],rcx
    6fa1:	call   1e98 <__ctype_b_loc@plt+0x18>
    6fa6:	mov    rdx,QWORD PTR [rsp+0x18]
    6fab:	mov    r13,rax
    6fae:	test   r13,r13
    6fb1:	je     70fb <_obstack_memory_used@@Base+0x50b>
    6fb7:	mov    rbx,QWORD PTR [rsp]
    6fbb:	mov    rdi,0xfffffffffffffffe
    6fc2:	mov    rsi,QWORD PTR [rsp+0x10]
    6fc7:	sub    rdi,rdx
    6fca:	add    rdx,0x1
    6fce:	sub    rbx,r14
    6fd1:	add    rdi,rbx
    6fd4:	add    rdi,r13
    6fd7:	call   1cc0 <memcpy@plt>
    6fdc:	mov    rsi,QWORD PTR [rsp+0x8]
    6fe1:	lea    rdi,[r13+rbx*1-0x1]
    6fe6:	lea    rdx,[r14+0x1]
    6fea:	mov    rbx,r13
    6fed:	call   1cc0 <memcpy@plt>
    6ff2:	mov    rax,QWORD PTR [r15+0x8]
    6ff6:	cmp    rax,QWORD PTR [r15+0x10]
    6ffa:	jb     6eb6 <_obstack_memory_used@@Base+0x2c6>
    7000:	mov    rdi,r15
    7003:	call   1a80 <__uflow@plt>
    7008:	cmp    eax,0xffffffff
    700b:	mov    edi,eax
    700d:	jne    6ec1 <_obstack_memory_used@@Base+0x2d1>
    7013:	mov    rdi,r15
    7016:	call   6770 <__ctype_b_loc@plt+0x48f0>
    701b:	mov    rax,QWORD PTR [rsp]
    701f:	test   rax,rax
    7022:	je     70ca <_obstack_memory_used@@Base+0x4da>
    7028:	mov    BYTE PTR [rbx+rax*1],0x0
    702c:	mov    rdi,r12
    702f:	call   1e90 <__ctype_b_loc@plt+0x10>
    7034:	mov    QWORD PTR [rip+0x20347d],rbx        # 20a4b8 <stderr@@GLIBC_2.2.5+0x1b8>
    703b:	jmp    6d6a <_obstack_memory_used@@Base+0x17a>
    7040:	lea    r13,[rip+0x12c5]        # 830c <_obstack_memory_used@@Base+0x171c>
    7047:	mov    edi,0x28
    704c:	mov    ebx,0x1a
    7051:	mov    r14d,0x19
    7057:	call   1e98 <__ctype_b_loc@plt+0x18>
    705c:	test   rax,rax
    705f:	mov    r12,rax
    7062:	je     70a9 <_obstack_memory_used@@Base+0x4b9>
    7064:	mov    rdx,r14
    7067:	mov    rsi,r13
    706a:	mov    rdi,r12
    706d:	call   1cc0 <memcpy@plt>
    7072:	mov    BYTE PTR [r12+r14*1],0x2f
    7077:	jmp    6e32 <_obstack_memory_used@@Base+0x242>
    707c:	nop    DWORD PTR [rax+0x0]
    7080:	lea    rdx,[rax+0x1]
    7084:	mov    QWORD PTR [r15+0x8],rdx
    7088:	movzx  eax,BYTE PTR [rax]
    708b:	cmp    eax,0xffffffff
    708e:	je     70b5 <_obstack_memory_used@@Base+0x4c5>
    7090:	cmp    eax,0xa
    7093:	je     70b5 <_obstack_memory_used@@Base+0x4c5>
    7095:	mov    rax,QWORD PTR [r15+0x8]
    7099:	cmp    rax,QWORD PTR [r15+0x10]
    709d:	jb     7080 <_obstack_memory_used@@Base+0x490>
    709f:	mov    rdi,r15
    70a2:	call   1a80 <__uflow@plt>
    70a7:	jmp    708b <_obstack_memory_used@@Base+0x49b>
    70a9:	lea    rbx,[rip+0xf31]        # 7fe1 <_obstack_memory_used@@Base+0x13f1>
    70b0:	jmp    7034 <_obstack_memory_used@@Base+0x444>
    70b5:	cmp    eax,0xffffffff
    70b8:	jne    6ea8 <_obstack_memory_used@@Base+0x2b8>
    70be:	jmp    7013 <_obstack_memory_used@@Base+0x423>
    70c3:	mov    edi,ebx
    70c5:	call   1c20 <close@plt>
    70ca:	lea    rbx,[rip+0xf10]        # 7fe1 <_obstack_memory_used@@Base+0x13f1>
    70d1:	jmp    702c <_obstack_memory_used@@Base+0x43c>
    70d6:	add    rax,QWORD PTR [rsp]
    70da:	mov    rdi,rbx
    70dd:	lea    rcx,[rax+0x2]
    70e1:	lea    rsi,[rax+0x3]
    70e5:	mov    QWORD PTR [rsp],rcx
    70e9:	call   1d50 <realloc@plt>
    70ee:	mov    rdx,QWORD PTR [rsp+0x18]
    70f3:	mov    r13,rax
    70f6:	jmp    6fae <_obstack_memory_used@@Base+0x3be>
    70fb:	mov    rdi,rbx
    70fe:	lea    rbx,[rip+0xedc]        # 7fe1 <_obstack_memory_used@@Base+0x13f1>
    7105:	call   1e90 <__ctype_b_loc@plt+0x10>
    710a:	mov    rdi,r15
    710d:	call   6770 <__ctype_b_loc@plt+0x48f0>
    7112:	jmp    702c <_obstack_memory_used@@Base+0x43c>
    7117:	cmp    BYTE PTR [r13+rax*1-0x1],0x2f
    711d:	jne    712d <_obstack_memory_used@@Base+0x53d>
    711f:	lea    rdi,[rax+0xe]
    7123:	jmp    6e13 <_obstack_memory_used@@Base+0x223>
    7128:	call   1b70 <__stack_chk_fail@plt>
    712d:	lea    rdi,[rax+0xf]
    7131:	mov    r14,rax
    7134:	add    rbx,0x1
    7138:	jmp    7057 <_obstack_memory_used@@Base+0x467>
    713d:	nop    DWORD PTR [rax]
    7140:	push   r15
    7142:	push   r14
    7144:	mov    r15d,edi
    7147:	push   r13
    7149:	push   r12
    714b:	lea    r12,[rip+0x202af6]        # 209c48 <_obstack_memory_used@@Base+0x203058>
    7152:	push   rbp
    7153:	lea    rbp,[rip+0x202af6]        # 209c50 <_obstack_memory_used@@Base+0x203060>
    715a:	push   rbx
    715b:	mov    r14,rsi
    715e:	mov    r13,rdx
    7161:	sub    rbp,r12
    7164:	sub    rsp,0x8
    7168:	sar    rbp,0x3
    716c:	call   1a50 <__uflow@plt-0x30>
    7171:	test   rbp,rbp
    7174:	je     7196 <_obstack_memory_used@@Base+0x5a6>
    7176:	xor    ebx,ebx
    7178:	nop    DWORD PTR [rax+rax*1+0x0]
    7180:	mov    rdx,r13
    7183:	mov    rsi,r14
    7186:	mov    edi,r15d
    7189:	call   QWORD PTR [r12+rbx*8]
    718d:	add    rbx,0x1
    7191:	cmp    rbp,rbx
    7194:	jne    7180 <_obstack_memory_used@@Base+0x590>
    7196:	add    rsp,0x8
    719a:	pop    rbx
    719b:	pop    rbp
    719c:	pop    r12
    719e:	pop    r13
    71a0:	pop    r14
    71a2:	pop    r15
    71a4:	ret    
    71a5:	nop
    71a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    71b0:	repz ret 
    71b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
    71bc:	nop    DWORD PTR [rax+0x0]
    71c0:	lea    rax,[rip+0x203061]        # 20a228 <_obstack_memory_used@@Base+0x203638>
    71c7:	test   rax,rax
    71ca:	je     71e0 <_obstack_memory_used@@Base+0x5f0>
    71cc:	mov    rdx,QWORD PTR [rax]
    71cf:	xor    esi,esi
    71d1:	jmp    1e00 <__cxa_atexit@plt>
    71d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
    71e0:	xor    edx,edx
    71e2:	xor    esi,esi
    71e4:	jmp    1e00 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000000071ec <.fini>:
    71ec:	sub    rsp,0x8
    71f0:	add    rsp,0x8
    71f4:	ret    
