FROM --platform=linux/amd64 ubuntu:22.04

ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update -y && apt-get install build-essential gdb nasm vim less binutils strace cmake wget libssl-dev -y


RUN echo '#!/bin/bash\necho "FoxDec NASM: compiling .asm to .o file"\necho "nasm -felf64 -o $BINARY.o $BINARY.asm"\nnasm -felf64 -g -F dwarf -o $BINARY.o $BINARY.asm' > /usr/bin/foxdec_nasm && \
    chmod +x /usr/bin/foxdec_nasm

RUN echo '#!/bin/bash\necho "FoxDec GCC: compiling .o to executable"\necho "gcc -g -m64 -nostartfiles -fgnu-tm -o a.out $BINARY.o __gmon_start__.o"\ngcc -c __gmon_start__.c -o __gmon_start__.o && gcc -g -m64 -nostartfiles -fgnu-tm -o a.out $BINARY.o __gmon_start__.o "$@"' > /usr/bin/foxdec_gcc && \
    chmod +x /usr/bin/foxdec_gcc

RUN echo '#!/bin/bash\necho "FoxDec OBJDUMP: run objdump on executable"\necho "objdump -M intel --no-show-raw-insn --disassembler-options=hex -d $BINARY > $BINARY.objdump"\nobjdump -M intel --no-show-raw-insn --disassembler-options=hex -d $BINARY > $BINARY.objdump' > /usr/bin/foxdec_objdump && \
    chmod +x /usr/bin/foxdec_objdump

RUN echo '#!/bin/bash\necho "FoxDec ENTRY: create .entry file for executable"\nrm -f $BINARY.entry;\nif [ "${1: -3}" == ".so" ]; then\n  nm  --defined-only $BINARY | grep " T " | awk '{print "0x"\$0}' | cut -d \' \' -f1 > $BINARY.entry\nelse\n  readelf -h $BINARY | grep Entry | awk '"'"'NF>1{print $NF}\'"'"' > $BINARY.entry\nfi\necho "Created $BINARY.entry"\n' > /usr/bin/foxdec_entry && \
    chmod +x /usr/bin/foxdec_entry

RUN mkdir -p /binary/src

WORKDIR /binary/src
RUN wget https://ftp.gnu.org/gnu/wget/wget2-2.1.0.tar.gz
RUN tar xvf wget2-2.1.0.tar.gz
RUN rm wget2-2.1.0.tar.gz
WORKDIR /binary/src/wget2-2.1.0
RUN ./configure
RUN make

WORKDIR /binary/src
RUN wget https://github.com/open-quantum-safe/liboqs/archive/refs/tags/0.10.1.tar.gz
RUN tar xvzf 0.10.1.tar.gz
RUN rm 0.10.1.tar.gz
WORKDIR /binary/src/liboqs-0.10.1/
RUN mkdir build
WORKDIR /binary/src/liboqs-0.10.1/build/
RUN cmake ..
RUN make
RUN make install

WORKDIR /binary/src
RUN wget https://github.com/open-quantum-safe/oqs-provider/archive/refs/tags/0.6.1.tar.gz
RUN tar xvf 0.6.1.tar.gz
RUN rm 0.6.1.tar.gz
WORKDIR /binary/src/oqs-provider-0.6.1/
RUN mkdir build
WORKDIR /binary/src/oqs-provider-0.6.1/build/
RUN cmake ..
RUN make

WORKDIR /binary/
ENTRYPOINT ["bash"]
